/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import assert from 'assert';
interface I1 {
    g: number;
    h(): void;
}
let a1: I1 = {
    g: 1,
    h: () => { },
};
assert(a1.g === 1);
assert(a1.h() === undefined);
interface I2 extends I1 {
    i: string;
}
let a2: I2 = {
    g: 1,
    h: () => { },
    i: "1",
};
assert(a2.g === 1);
assert(a2.h() === undefined);
assert(a2.i === "1");
class C1 {
    public j(f: any) { return f; }
    private x = 1;
}
let c1 = new C1();
assert(c1.j(10) === 10);
interface I3 extends C1 {
    k(x: any): any;
}
class C2 {
    public j(c: any) { return c; }
    private x = 1;
}
let c2 = new C2();
assert(c2.j(2) === 2);
class D {
    public l(b: any) { return b; }
    private x1 = 1;
}
let d = new D();
assert(d.l(3) === 3);
class e {
    public m(a: any) { return a; }
    private x2 = 1;
}
let E = new e();
assert(E.m(4) === 4);
interface I4 extends C2, D, e {
    k(x: any): any;
}
