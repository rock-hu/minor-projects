/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import assert from 'assert';
interface g {
    a1: number;
    b1(): void;
}
let h: g = {
    a1: 1,
    b1: () => { },
};
assert(h.a1 === 1);
assert(h.b1() === undefined);
interface i extends g {
    c1: string;
}
let j: i = {
    a1: 1,
    b1: () => { },
    c1: "1",
};
assert(j.a1 === 1);
assert(j.b1() === undefined);
assert(j.c1 === "1");
class k {
    public d1(y: any) { return y; }
    private x = 1;
}
let l = new k();
assert(l.d1(10) === 10);
interface m extends k {
    e1(x: any): any;
}
class o {
    public d1(x: any) { return x; }
    private x = 1;
}
let p = new o();
assert(p.d1(2) === 2);
class q {
    public f1(w: any) { return w; }
    private x1 = 1;
}
let d = new q();
assert(d.f1(3) === 3);
class e {
    public g1(v: any) { return v; }
    private x2 = 1;
}
let E = new e();
assert(E.g1(4) === 4);
interface u extends o, q, e {
    e1(x: any): any;
}
