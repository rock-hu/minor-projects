/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import c from 'assert';
const d: unique symbol = Symbol();
class e {
    a01?: number;
    b01?: string;
    c01?: boolean;
    1?: number;
    "x"?: number;
    [d]?: number;
}
let f = 10;
let g = { a01: 20 };
let h: symbol;
namespace i {
    export let a01 = 30;
}
i.a01;
let a01 = {
    a01: 1,
    b01: "12",
    1: 1,
    "2": "2",
    [3]: 3,
    ["4"]: "4",
    [h = Symbol()]: 5,
    [d]: 6,
    ["1" + "2"]: 7,
    [1 + 2 + 3]: 8,
    [f]: 9,
    [f + 3]: 10,
    [g.a01]: 11,
    [i.a01]: 12,
    x01: () => { return 13; },
    await: () => 14
};
c(a01.a01 === 1);
c(a01.b01 === '12');
c(a01[1] === 1);
c(a01["2"] === "2");
c(a01[3] === 3);
c(a01["4"] === "4");
c(a01[h] === 5);
c(a01[d] === 6);
c(a01["12"] === 7);
c(a01[6] === 8);
c(a01[10] === 9);
c(a01[13] === 10);
c(a01[20] === 11);
c(a01[30] === 12);
c(a01.x01() === 13);
c(a01.await() === 14);
function a({ b01: k, ...l }: {
    b01: number;
    c01: string;
}) {
    return k + l.c01;
}
a({ b01: 1, c01: "213" });
c(a({ b01: 1, c01: "213" }) === "1213");
function b(j: e) {
    c(j.a01 === 1);
    c(j.b01 === "1");
    c(j.c01 === true);
    c(j[1] === 1);
    c(j["x"] === 2);
    c(j[d] === 3);
}
b({ a01: 1, b01: "1", c01: true, 1: 1, "x": 2, [d]: 3 });
