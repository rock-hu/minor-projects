/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import a from 'assert';
enum A1 {
    prop1 = 1,
    prop2 = 2
}
a(A1.prop1 === 1);
a(A1.prop2 === 2);
enum b {
    up = 1,
    down,
    left,
    right
}
const c: b = b.up;
a(c === 1);
a(b.up === 1);
a(b.down === 2);
a(b.left === 3);
a(b.right === 4);
a(b[1] === 'up');
a(b[3] === 'left');
a(b[4] === 'right');
var d;
(function (j) {
    j[j["prop1"] = 1] = "prop1";
    j[j["prop2"] = 2] = "prop2";
})(d || (d = {}));
a(d.prop1 === 1);
a(d.prop2 === 2);
a(d[1] === 'prop1');
a(d[2] === 'prop2');
let e = 1;
enum f {
    prop1 = 1,
    prop2 = prop1 + e + 1
}
a(f.prop1 === 1);
a(f.prop2 === 3);
a(f[1] === 'prop1');
enum g {
    a = 2,
    b = 3
}
a(g.a === 2);
a(g.b === 3);
a(g[2] === 'a');
a(g[3] === 'b');
enum h {
    a = (1).valueOf(),
    b = g.a,
    c = g.b.valueOf()
}
a(h.a === 1);
a(h.b === 2);
a(h.c === 3);
a(h[1] === 'a');
a(h[2] === 'b');
a(h[3] === 'c');
module i {
    export namespace N {
        export enum E1 {
            a = 1
        }
    }
}
a(i.N.E1.a === 1);
a(i.N.E1[1] === 'a');
module i {
    export namespace N {
        export enum E1 {
            b = i.N.E1.a + 1
        }
    }
}
a(i.N.E1.b === 2);
a(i.N.E1[2] === 'b');
export enum MouseButton {
    LEFT_BUTTON = 1,
    RIGHT_BUTTON = 2,
    MIDDLE_BUTTON = 4,
    XBUTTON1_BUTTON = 5,
    XBUTTON2_BUTTON = 6,
    NO_BUTTON = 0
}
export const DOMMouseButton = {
    '-1': MouseButton.NO_BUTTON,
    '0': MouseButton.LEFT_BUTTON,
    '1': MouseButton.MIDDLE_BUTTON,
    '2': MouseButton.RIGHT_BUTTON,
    '3': MouseButton.XBUTTON1_BUTTON,
    '4': MouseButton.XBUTTON2_BUTTON,
};
a(DOMMouseButton['-1'] === 0);
a(DOMMouseButton['0'] === 1);
a(DOMMouseButton['1'] === 4);
a(DOMMouseButton['2'] === 2);
a(DOMMouseButton['3'] === 5);
a(DOMMouseButton['4'] === 6);
export enum Foo2 {
    A = 1 << 1,
    B = 1 << 2
}
a(Foo2.A === 2);
a(Foo2.B === 4);
a(Foo2[2] === 'A');
a(Foo2[4] === 'B');