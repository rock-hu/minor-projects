/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import assert = require('assert');
const g = new Promise((p, q) => {
    setTimeout(() => q(new Error('Promise 1 error')), 1000);
});
const h = new Promise((n, o) => {
    setTimeout(() => o(new Error('Promise 2 error')), 2000);
});
const i = new Promise((l, m) => {
    setTimeout(() => m(new Error('Promise 3 error')), 3000);
});
Promise.any([g, h, i])
    .then((k) => {
})
    .catch((j) => {
    if (j instanceof AggregateError) {
        assert(j.errors[0].message === 'Promise 1 error', 'success');
        assert(j.errors[1].message === 'Promise 2 error', 'success');
        assert(j.errors[2].message === 'Promise 3 error', 'success');
    }
});
