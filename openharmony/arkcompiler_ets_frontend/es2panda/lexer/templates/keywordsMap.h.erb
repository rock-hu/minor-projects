/**
 * Copyright (c) 2021-2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file -- DO NOT EDIT!

#include <lexer/keywordString.h>
#include <utils/span.h>

namespace panda::es2panda::lexer {

class KeywordsMap {
public:
    KeywordsMap() = delete;

    static Span<const KeywordString> Map(char32_t cp) {
        switch(cp) {
% keywords.each do |group|
        case LEX_CHAR_LOWERCASE_<%= group.keys[0][0].upcase %>: {
            return Span<const KeywordString>(KEYWORDS_<%= group.keys[0][0].upcase %>);
        }
% end
        default: {
            return Span<const KeywordString>();
        }
        }
    }

% keywords.each do |group|

    static constexpr std::array<const KeywordString, <%= group.size %>> KEYWORDS_<%= group.keys[0][0].upcase %> = {{
%   group.each do |key, kw|
        {"<%= key%>", <%= kw[0] %>, <%= kw[1] %>},
%   end
    }};
% end
};

} // namespace panda::es2panda::lexer
