slotNum = 0x2
expectedProperty = 0x1
.language ECMAScript
.function any .#~AA=#AA(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldlexvar 0x0, 0x0
	callruntime.callinit 0x0, a2
	lda a2
	return
label_2: 
}

slotNum = 0x2
.language ECMAScript
.function any .#~AA>#instance_initializer(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldai 0x1
	definepropertybyname 0x0, a, a2
	returnundefined
label_2: 
}

slotNum = 0x4
.language ECMAScript
.function any .#~AA>#test(any a0, any a1, any a2) {
label_1: 
label_0: 
	newlexenv 0x1
	lda a2
	stlexvar 0x0, 0x0
	definefunc 0x0, .#~AA>@0*#cb, 0x0
	sta v0
	tryldglobalbyname 0x1, print
	sta v1
	lda.str test
	sta v2
	lda v1
	callarg1 0x2, v2
	lda v0
	return
label_2: 
}

slotNum = 0x5
.language ECMAScript
.function any .#~AA>@0*#cb(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldlexvar 0x0, 0x0
	ldobjbyname 0x0, a
	tryldglobalbyname 0x2, print
	sta v0
	lda.str cb
	sta v1
	lda v0
	callarg1 0x3, v1
	returnundefined
label_2: 
}

slotNum = 0x5
.language ECMAScript
.function any .func_main_0(any a0, any a1, any a2) {
	nop
label_7: 
label_0: 
	newlexenv 0x1
label_2: 
label_4: 
	ldhole
	sta v1
	defineclasswithbuffer 0x0, .#~AA=#AA, _1, 0x0, v1
	sta v1
	ldobjbyname 0x1, prototype
	definemethod 0x3, .#~AA>#instance_initializer, 0x0
	stlexvar 0x0, 0x0
label_3: 
end_label_3: 
	jmp label_1
label_9: 
	sta v0
label_6: 
	poplexenv
	lda v0
	throw
label_1: 
	poplexenv
	lda v1
	sttoglobalrecord 0x4, AA
	returnundefined
label_8: 
}

.catchall label_2, end_label_3, label_9


