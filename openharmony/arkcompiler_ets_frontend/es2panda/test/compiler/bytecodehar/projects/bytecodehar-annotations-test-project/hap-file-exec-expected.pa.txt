All Dependency Files:
program_file: bytecodehar1-abcinput.abc
record_name: &bytecodehar1/bytecodehar1-file1&2.0.0
program_file: bytecodehar2-abcinput.abc
record_name: &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0
program_file: hap-file-exec.ts
record_name: &myapp/hap-file-exec&
program_file: sourcehar-file1.ts
record_name: &sourcehar/sourcehar-file1&2.0.0

slotNum = 0x6
expectedProperty = 0x3
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#*#A(any a0, any a1, any a2, any a3) {
	lda a3
	stobjbyname 0x0, a, a2
	ldai 0x1
	stobjbyname 0x2, b, a2
	ldai 0x2
	stobjbyname 0x4, c, a2
	returnundefined
}

slotNum = 0x3
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar1.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	lda.str @normalized:N&&&sourcehar/sourcehar-file1&2.0.0
	dynamicimport
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x5
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &bytecodehar1/bytecodehar1-file1&2.0.0.#*#A, 0x1
	definefunc 0x1, &bytecodehar1/bytecodehar1-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x2, &bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B, &bytecodehar1/bytecodehar1-file1&2.0.0_2142, 0x0, v0
	ldobjbyname 0x3, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2080
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2084
{
  index: 0
    tag: 2
    val: 1
},
{
  index: 1
    tag: 5
    val: @normalized:N&&&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0
},
{
  index: 2
    tag: 2
    val: 1
},
{
  index: 3
    tag: 5
    val: test1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 2
},
{
  index: 8
    tag: 5
    val: Anno1
},
{
  index: 9
    tag: 5
    val: Anno1
},
{
  index: 10
    tag: 5
    val: test
},
{
  index: 11
    tag: 5
    val: test
},
{
  index: 12
    tag: 2
    val: 0
},
{
  index: 13
    tag: 2
    val: 0
},
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2142
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&bytecodehar1/bytecodehar1-file1&2.0.0.#*#A"; "&bytecodehar1/bytecodehar1-file1&2.0.0.#*#test"; "&bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B"; "@normalized:N&&&sourcehar/sourcehar-file1&2.0.0"; "a"; "b"; "bytecodehar1.file1.test"; "c"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======

slotNum = 0x3
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file2&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar1.file2.test
	sta v1
	lda v0
	callarg1 0x1, v1
	lda.str @normalized:N&&&sourcehar/sourcehar-file2&2.0.0
	dynamicimport
	returnundefined
}

slotNum = 0x2
expectedProperty = 0x1
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file2&2.0.0.#~@0=#Example(any a0, any a1, any a2) {
	ldai 0x0
	stobjbyname 0x0, a, a2
	lda a2
	return
}

slotNum = 0x2
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file2&2.0.0.#~@0>#setValue(any a0, any a1, any a2, any a3) {
	lda a3
	stobjbyname 0x0, a, a2
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file2&2.0.0.#~A=#A(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x7
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file2&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &bytecodehar1/bytecodehar1-file2&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &bytecodehar1/bytecodehar1-file2&2.0.0.#~@0=#Example, &bytecodehar1/bytecodehar1-file2&2.0.0_2218, 0x0, v0
	ldobjbyname 0x2, prototype
	ldhole
	sta v0
	defineclasswithbuffer 0x4, &bytecodehar1/bytecodehar1-file2&2.0.0.#~A=#A, &bytecodehar1/bytecodehar1-file2&2.0.0_2240, 0x0, v0
	ldobjbyname 0x5, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &bytecodehar1/bytecodehar1-file2&2.0.0_2151
{
  index: 0
    tag: 0
    val: 5
},
{
  index: 1
    tag: 5
    val: Example
},
------------------------------------
slot &bytecodehar1/bytecodehar1-file2&2.0.0_2160
{
  index: 0
    tag: 2
    val: 1
},
{
  index: 1
    tag: 5
    val: @normalized:N&&&@ohos/bytecodehar2/bytecodehar2-file2&2.0.0
},
{
  index: 2
    tag: 2
    val: 1
},
{
  index: 3
    tag: 5
    val: test1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 2
},
{
  index: 8
    tag: 5
    val: Anno2
},
{
  index: 9
    tag: 5
    val: Anno2
},
{
  index: 10
    tag: 5
    val: test
},
{
  index: 11
    tag: 5
    val: test
},
{
  index: 12
    tag: 2
    val: 0
},
{
  index: 13
    tag: 2
    val: 0
},
------------------------------------
slot &bytecodehar1/bytecodehar1-file2&2.0.0_2218
{
  index: 0
    tag: 0
    val: 5
},
{
  index: 1
    tag: 5
    val: setValue
},
{
  index: 2
    tag: 0
    val: 6
},
{
  index: 3
    tag: 6
    val: &bytecodehar1/bytecodehar1-file2&2.0.0.#~@0>#setValue
},
{
  index: 4
    tag: 0
    val: 9
},
{
  index: 5
    tag: 9
    val: 1
},
{
  index: 6
    tag: 0
    val: 2
},
{
  index: 7
    tag: 2
    val: 1
},
------------------------------------
slot &bytecodehar1/bytecodehar1-file2&2.0.0_2240
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&bytecodehar1/bytecodehar1-file2&2.0.0.#*#test"; "&bytecodehar1/bytecodehar1-file2&2.0.0.#~@0=#Example"; "&bytecodehar1/bytecodehar1-file2&2.0.0.#~A=#A"; "@normalized:N&&&sourcehar/sourcehar-file2&2.0.0"; "a"; "bytecodehar1.file2.test"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======

slotNum = 0x3
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar2.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x4
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1649, 0x0, v0
	ldobjbyname 0x2, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1601
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1605
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 2
},
{
  index: 4
    tag: 5
    val: Anno1
},
{
  index: 5
    tag: 5
    val: Anno1
},
{
  index: 6
    tag: 5
    val: test
},
{
  index: 7
    tag: 5
    val: test
},
{
  index: 8
    tag: 2
    val: 0
},
{
  index: 9
    tag: 2
    val: 0
},
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1649
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test"; "&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A"; "bytecodehar2.file1.test"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======

slotNum = 0x3
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar2.file2.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#~B=#B(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x4
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#~B=#B, &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0_1706, 0x0, v0
	ldobjbyname 0x2, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0_1658
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0_1662
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 2
},
{
  index: 4
    tag: 5
    val: Anno2
},
{
  index: 5
    tag: 5
    val: Anno2
},
{
  index: 6
    tag: 5
    val: test
},
{
  index: 7
    tag: 5
    val: test
},
{
  index: 8
    tag: 2
    val: 0
},
{
  index: 9
    tag: 2
    val: 0
},
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file2&2.0.0_1706
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#*#test"; "&@ohos/bytecodehar2/bytecodehar2-file2&2.0.0.#~B=#B"; "bytecodehar2.file2.test"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======


======> literal array buffer <======
======> strings <======

slotNum = 0x4
.language ECMAScript
.function any &myapp/hap-file-exec&.#*#main(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldexternalmodulevar 0x2
	sta v0
	throw.undefinedifholewithname test
	lda v0
	callarg0 0x0
	ldexternalmodulevar 0x1
	sta v0
	throw.undefinedifholewithname B
	mov v1, v0
	newobjrange 0x2, 0x1, v1
	returnundefined
label_2: 
}

slotNum = 0x0
.language ECMAScript
.function any &myapp/hap-file-exec&.#~C=#C(any a0, any a1, any a2) {
label_1: 
label_0: 
	lda a2
	return
label_2: 
}

slotNum = 0x4
.language ECMAScript
.function any &myapp/hap-file-exec&.func_main_0(any a0, any a1, any a2) {
label_1: 
label_0: 
	definefunc 0x0, &myapp/hap-file-exec&.#*#main, 0x0
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &myapp/hap-file-exec&.#~C=#C, &myapp/hap-file-exec&_2, 0x0, v0
	ldobjbyname 0x2, prototype
	returnundefined
label_2: 
}


======> literal array buffer <======
------------------------------------
slot &myapp/hap-file-exec&_0
------------------------------------
slot &myapp/hap-file-exec&_1
{
  index: 0
    tag: 2
    val: 1
},
{
  index: 1
    tag: 5
    val: @normalized:N&&&bytecodehar1/bytecodehar1-file1&2.0.0
},
{
  index: 2
    tag: 2
    val: 3
},
{
  index: 3
    tag: 5
    val: Anno1
},
{
  index: 4
    tag: 5
    val: Anno1
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 5
    val: B
},
{
  index: 7
    tag: 5
    val: B
},
{
  index: 8
    tag: 9
    val: 0
},
{
  index: 9
    tag: 5
    val: test
},
{
  index: 10
    tag: 5
    val: test
},
{
  index: 11
    tag: 9
    val: 0
},
{
  index: 12
    tag: 2
    val: 0
},
{
  index: 13
    tag: 2
    val: 0
},
{
  index: 14
    tag: 2
    val: 0
},
{
  index: 15
    tag: 2
    val: 0
},
------------------------------------
slot &myapp/hap-file-exec&_2
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&myapp/hap-file-exec&.#*#main"; "&myapp/hap-file-exec&.#~C=#C"; "B"; "prototype"; "test"; 
slotNum = 0x3
.language ECMAScript
.function any &sourcehar/sourcehar-file1&2.0.0.#*#test(any a0, any a1, any a2) {
label_1: 
label_0: 
	tryldglobalbyname 0x0, print
	sta v0
	lda.str sourcehar.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
label_2: 
}

slotNum = 0x1
.language ECMAScript
.function any &sourcehar/sourcehar-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
label_1: 
label_0: 
	definefunc 0x0, &sourcehar/sourcehar-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x0
	returnundefined
label_2: 
}


======> literal array buffer <======
------------------------------------
slot &sourcehar/sourcehar-file1&2.0.0_0
------------------------------------
slot &sourcehar/sourcehar-file1&2.0.0_1
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 5
    val: test
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 0
},
======> strings <======
"&sourcehar/sourcehar-file1&2.0.0.#*#test"; "print"; "sourcehar.file1.test"; 
slotNum = 0x3
.language ECMAScript
.function any &sourcehar/sourcehar-file2&2.0.0.#*#test(any a0, any a1, any a2) {
label_1: 
label_0: 
	tryldglobalbyname 0x0, print
	sta v0
	lda.str sourcehar.file2.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
label_2: 
}

slotNum = 0x1
.language ECMAScript
.function any &sourcehar/sourcehar-file2&2.0.0.func_main_0(any a0, any a1, any a2) {
label_1: 
label_0: 
	definefunc 0x0, &sourcehar/sourcehar-file2&2.0.0.#*#test, 0x0
	stmodulevar 0x0
	returnundefined
label_2: 
}


======> literal array buffer <======
------------------------------------
slot &sourcehar/sourcehar-file2&2.0.0_0
------------------------------------
slot &sourcehar/sourcehar-file2&2.0.0_1
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 5
    val: test
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 0
},
======> strings <======
"&sourcehar/sourcehar-file2&2.0.0.#*#test"; "print"; "sourcehar.file2.test"; 
slotNum = 0x6
expectedProperty = 0x3
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#*#A(any a0, any a1, any a2, any a3) {
	lda a3
	stobjbyname 0x0, a, a2
	ldai 0x1
	stobjbyname 0x2, b, a2
	ldai 0x2
	stobjbyname 0x4, c, a2
	returnundefined
}

slotNum = 0x3
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar1.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	lda.str @normalized:N&&&sourcehar/sourcehar-file1&2.0.0
	dynamicimport
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x5
.language ECMAScript
.function any &bytecodehar1/bytecodehar1-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &bytecodehar1/bytecodehar1-file1&2.0.0.#*#A, 0x1
	definefunc 0x1, &bytecodehar1/bytecodehar1-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x2, &bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B, &bytecodehar1/bytecodehar1-file1&2.0.0_2142, 0x0, v0
	ldobjbyname 0x3, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2080
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2084
{
  index: 0
    tag: 2
    val: 1
},
{
  index: 1
    tag: 5
    val: @normalized:N&&&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0
},
{
  index: 2
    tag: 2
    val: 1
},
{
  index: 3
    tag: 5
    val: test1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 2
},
{
  index: 8
    tag: 5
    val: Anno1
},
{
  index: 9
    tag: 5
    val: Anno1
},
{
  index: 10
    tag: 5
    val: test
},
{
  index: 11
    tag: 5
    val: test
},
{
  index: 12
    tag: 2
    val: 0
},
{
  index: 13
    tag: 2
    val: 0
},
------------------------------------
slot &bytecodehar1/bytecodehar1-file1&2.0.0_2142
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&bytecodehar1/bytecodehar1-file1&2.0.0.#*#A"; "&bytecodehar1/bytecodehar1-file1&2.0.0.#*#test"; "&bytecodehar1/bytecodehar1-file1&2.0.0.#~B=#B"; "@normalized:N&&&sourcehar/sourcehar-file1&2.0.0"; "a"; "b"; "bytecodehar1.file1.test"; "c"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======

slotNum = 0x3
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test(any a0, any a1, any a2) {
	tryldglobalbyname 0x0, print
	sta v0
	lda.str bytecodehar2.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
}

slotNum = 0x0
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A(any a0, any a1, any a2) {
	lda a2
	return
}

slotNum = 0x4
.language ECMAScript
.function any &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
	definefunc 0x0, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x1
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A, &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1649, 0x0, v0
	ldobjbyname 0x2, prototype
	returnundefined
}


======> literal array buffer <======
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1601
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1605
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 2
},
{
  index: 4
    tag: 5
    val: Anno1
},
{
  index: 5
    tag: 5
    val: Anno1
},
{
  index: 6
    tag: 5
    val: test
},
{
  index: 7
    tag: 5
    val: test
},
{
  index: 8
    tag: 2
    val: 0
},
{
  index: 9
    tag: 2
    val: 0
},
------------------------------------
slot &@ohos/bytecodehar2/bytecodehar2-file1&2.0.0_1649
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#*#test"; "&@ohos/bytecodehar2/bytecodehar2-file1&2.0.0.#~A=#A"; "bytecodehar2.file1.test"; "print"; "prototype"; 

======> literal array buffer <======
======> strings <======

slotNum = 0x4
.language ECMAScript
.function any &myapp/hap-file-exec&.#*#main(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldexternalmodulevar 0x2
	sta v0
	throw.undefinedifholewithname test
	lda v0
	callarg0 0x0
	ldexternalmodulevar 0x1
	sta v0
	throw.undefinedifholewithname B
	mov v1, v0
	newobjrange 0x2, 0x1, v1
	returnundefined
label_2: 
}

slotNum = 0x0
.language ECMAScript
.function any &myapp/hap-file-exec&.#~C=#C(any a0, any a1, any a2) {
label_1: 
label_0: 
	lda a2
	return
label_2: 
}

slotNum = 0x4
.language ECMAScript
.function any &myapp/hap-file-exec&.func_main_0(any a0, any a1, any a2) {
label_1: 
label_0: 
	definefunc 0x0, &myapp/hap-file-exec&.#*#main, 0x0
	ldhole
	sta v0
	defineclasswithbuffer 0x1, &myapp/hap-file-exec&.#~C=#C, &myapp/hap-file-exec&_2, 0x0, v0
	ldobjbyname 0x2, prototype
	returnundefined
label_2: 
}


======> literal array buffer <======
------------------------------------
slot &myapp/hap-file-exec&_0
------------------------------------
slot &myapp/hap-file-exec&_1
{
  index: 0
    tag: 2
    val: 1
},
{
  index: 1
    tag: 5
    val: @normalized:N&&&bytecodehar1/bytecodehar1-file1&2.0.0
},
{
  index: 2
    tag: 2
    val: 3
},
{
  index: 3
    tag: 5
    val: Anno1
},
{
  index: 4
    tag: 5
    val: Anno1
},
{
  index: 5
    tag: 9
    val: 0
},
{
  index: 6
    tag: 5
    val: B
},
{
  index: 7
    tag: 5
    val: B
},
{
  index: 8
    tag: 9
    val: 0
},
{
  index: 9
    tag: 5
    val: test
},
{
  index: 10
    tag: 5
    val: test
},
{
  index: 11
    tag: 9
    val: 0
},
{
  index: 12
    tag: 2
    val: 0
},
{
  index: 13
    tag: 2
    val: 0
},
{
  index: 14
    tag: 2
    val: 0
},
{
  index: 15
    tag: 2
    val: 0
},
------------------------------------
slot &myapp/hap-file-exec&_2
{
  index: 0
    tag: 0
    val: 2
},
{
  index: 1
    tag: 2
    val: 0
},
======> strings <======
"&myapp/hap-file-exec&.#*#main"; "&myapp/hap-file-exec&.#~C=#C"; "B"; "prototype"; "test"; 
slotNum = 0x3
.language ECMAScript
.function any &sourcehar/sourcehar-file1&2.0.0.#*#test(any a0, any a1, any a2) {
label_1: 
label_0: 
	tryldglobalbyname 0x0, print
	sta v0
	lda.str sourcehar.file1.test
	sta v1
	lda v0
	callarg1 0x1, v1
	returnundefined
label_2: 
}

slotNum = 0x1
.language ECMAScript
.function any &sourcehar/sourcehar-file1&2.0.0.func_main_0(any a0, any a1, any a2) {
label_1: 
label_0: 
	definefunc 0x0, &sourcehar/sourcehar-file1&2.0.0.#*#test, 0x0
	stmodulevar 0x0
	returnundefined
label_2: 
}


======> literal array buffer <======
------------------------------------
slot &sourcehar/sourcehar-file1&2.0.0_0
------------------------------------
slot &sourcehar/sourcehar-file1&2.0.0_1
{
  index: 0
    tag: 2
    val: 0
},
{
  index: 1
    tag: 2
    val: 0
},
{
  index: 2
    tag: 2
    val: 0
},
{
  index: 3
    tag: 2
    val: 1
},
{
  index: 4
    tag: 5
    val: test
},
{
  index: 5
    tag: 5
    val: test
},
{
  index: 6
    tag: 2
    val: 0
},
{
  index: 7
    tag: 2
    val: 0
},
======> strings <======
"&sourcehar/sourcehar-file1&2.0.0.#*#test"; "print"; "sourcehar.file1.test"; 
