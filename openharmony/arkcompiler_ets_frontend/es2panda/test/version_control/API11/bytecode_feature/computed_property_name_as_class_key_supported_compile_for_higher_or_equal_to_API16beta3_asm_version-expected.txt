.language ECMAScript

slotNum = 0x2
.function any .#~A=#A(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldlexvar 0x0, 0x1
	callruntime.callinit 0x0, a2
	lda a2
	return
label_2: 
}

slotNum = 0x2
.function any .#~A>#instance_initializer(any a0, any a1, any a2) {
label_1: 
label_0: 
	ldlexvar 0x0, 0x0
	sta v0
	ldlexvar 0x1, 0x0
	sta v1
	throw.undefinedifholewithname a
	lda v1
	callruntime.definefieldbyvalue 0x0, v0, a2
	ldundefined
	returnundefined
label_2: 
}

slotNum = 0xc
.function any .func_main_0(any a0, any a1, any a2) {
	nop
label_7: 
label_0: 
	newlexenv 0x1
	lda.str a
	sta v0
	lda.str b
	add2 0x0, v0
	stlexvar 0x0, 0x0
	newlexenv 0x2
label_2: 
label_4: 
	ldhole
	sta v1
	ldlexvar 0x1, 0x0
	sta v2
	throw.undefinedifholewithname a
	lda v2
	callruntime.topropertykey
	stlexvar 0x0, 0x0
	defineclasswithbuffer 0x1, .#~A=#A, _2, 0x0, v1
	sta v1
	ldobjbyname 0x2, prototype
	definemethod 0x4, .#~A>#instance_initializer, 0x0
	stlexvar 0x0, 0x1
label_3: 
end_label_3: 
	jmp label_1
label_9: 
	sta v0
label_6: 
	poplexenv
	lda v0
	throw
label_1: 
	poplexenv
	mov v3, v1
	newobjrange 0x5, 0x1, v3
	sta v0
	tryldglobalbyname 0x7, print
	sta v1
	ldlexvar 0x0, 0x0
	sta v2
	throw.undefinedifholewithname a
	lda v2
	ldobjbyvalue 0x8, v0
	sta v0
	lda v1
	callarg1 0xa, v0
	ldundefined
	returnundefined
label_8: 
}

.catchall label_2, end_label_3, label_9


