# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_frontend/ets_frontend_config.gni")

ets2abc_root = "//arkcompiler/ets_frontend/ets2panda/aot"
ets2abc_build_path = ""
ets2abc_build_deps = ""
ets2abc_out_root = ""

if (host_toolchain == toolchain_mac) {
  ets2abc_out_root =
      get_label_info("$ets2abc_root:ets2panda($toolchain_mac)", "root_out_dir")
  ets2abc_build_deps = [ "$ets2abc_root:ets2panda($toolchain_mac)" ]
} else if (host_toolchain == toolchain_win) {
  ets2abc_out_root =
      get_label_info("$ets2abc_root:ets2panda($toolchain_win)", "root_out_dir")
  ets2abc_build_deps = [ "$ets2abc_root:ets2panda($toolchain_win)" ]
} else {
  ets2abc_out_root = get_label_info("$ets2abc_root:ets2panda($toolchain_linux)",
                                    "root_out_dir")
  ets2abc_build_deps = [ "$ets2abc_root:ets2panda($toolchain_linux)" ]
}
ets2abc_build_path = ets2abc_out_root + "/arkcompiler/ets_frontend"

# Generate abc.
#
# Mandatory arguments:
# plugin_path -- plugin js file path
# plugin_name -- name of js file, ex: BatteryPlugin.js
# generat_file -- name of generated file
# package_name -- name of generated file's package
# extra_dependencies -- a list of files that should be considered as dependencies, must be label
# out_puts
template("ets2abc_gen_abc") {
  assert(defined(invoker.src_ets), "src_ets is required!")
  assert(defined(invoker.dst_file), "dst_file is required!")
  assert(defined(invoker.out_puts), "out_puts is required!")

  extra_dependencies = []
  if (defined(invoker.extra_dependencies)) {
    extra_dependencies += invoker.extra_dependencies
  }

  action("$target_name") {
    if (defined(invoker.extra_visibility)) {
      visibility = invoker.extra_visibility
    }

    script = "//arkcompiler/ets_runtime/script/run_ark_executable.py"

    deps = extra_dependencies
    deps += ets2abc_build_deps

    args = [
      "--script-file",
      rebase_path("${ets2abc_build_path}/es2panda"),
      "--script-args",
      "--ets-module --output " + invoker.dst_file + " " + invoker.src_ets,
      "--env-path",
      rebase_path("${ets2abc_out_root}/arkcompiler/runtime_core/") + ":" +
          rebase_path("${ets2abc_out_root}/arkcompiler/ets_frontend/") + ":" +
          rebase_path("${ets2abc_out_root}/arkcompiler/ets_runtime/") + ":" +
          rebase_path("${ets2abc_out_root}/thirdparty/zlib/") + ":" +
          rebase_path("${ets2abc_out_root}/thirdparty/icu/"),
      "--expect-output",
      "0",
    ]

    if (defined(invoker.in_puts)) {
      inputs = invoker.in_puts
    }

    outputs = invoker.out_puts
  }
}
