{
    "copyright": [
        "Copyright (c) 2025 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "result": [
        {
            "line": 18,
            "column": 5,
            "endLine": 18,
            "endColumn": 10,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 744,
                    "end": 749,
                    "replacementText": "a: number = 1",
                    "line": 18,
                    "column": 5,
                    "endLine": 18,
                    "endColumn": 10
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 39,
            "column": 5,
            "endLine": 39,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1377,
                    "end": 1384,
                    "replacementText": "c: number = 1.5",
                    "line": 39,
                    "column": 5,
                    "endLine": 39,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 45,
            "column": 5,
            "endLine": 45,
            "endColumn": 10,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1561,
                    "end": 1566,
                    "replacementText": "d: number = 2",
                    "line": 45,
                    "column": 5,
                    "endLine": 45,
                    "endColumn": 10
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 51,
            "column": 5,
            "endLine": 51,
            "endColumn": 10,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1712,
                    "end": 1717,
                    "replacementText": "n: number = 2",
                    "line": 51,
                    "column": 5,
                    "endLine": 51,
                    "endColumn": 10
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 55,
            "column": 5,
            "endLine": 55,
            "endColumn": 18,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1747,
                    "end": 1760,
                    "replacementText": "g: number[] = [1, 2, 3]",
                    "line": 55,
                    "column": 5,
                    "endLine": 55,
                    "endColumn": 18
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 57,
            "column": 5,
            "endLine": 57,
            "endColumn": 15,
            "problem": "DefiniteAssignmentError",
            "suggest": "",
            "rule": "Definite assignment assertions are not supported (arkts-no-definite-assignment)",
            "severity": "ERROR"
        },
        {
            "line": 59,
            "column": 5,
            "endLine": 59,
            "endColumn": 18,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1786,
                    "end": 1799,
                    "replacementText": "t8: number = Infinity",
                    "line": 59,
                    "column": 5,
                    "endLine": 59,
                    "endColumn": 18
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 61,
            "column": 5,
            "endLine": 61,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1807,
                    "end": 1821,
                    "replacementText": "t9: number = -Infinity",
                    "line": 61,
                    "column": 5,
                    "endLine": 61,
                    "endColumn": 19
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 63,
            "column": 5,
            "endLine": 63,
            "endColumn": 14,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1830,
                    "end": 1839,
                    "replacementText": "t10: number = NaN",
                    "line": 63,
                    "column": 5,
                    "endLine": 63,
                    "endColumn": 14
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 65,
            "column": 5,
            "endLine": 65,
            "endColumn": 27,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1848,
                    "end": 1870,
                    "replacementText": "t11: number = Number.MAX_VALUE",
                    "line": 65,
                    "column": 5,
                    "endLine": 65,
                    "endColumn": 27
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 67,
            "column": 5,
            "endLine": 67,
            "endColumn": 27,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1879,
                    "end": 1901,
                    "replacementText": "t12: number = Number.MIN_VALUE",
                    "line": 67,
                    "column": 5,
                    "endLine": 67,
                    "endColumn": 27
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 73,
            "column": 5,
            "endLine": 73,
            "endColumn": 11,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1959,
                    "end": 1965,
                    "replacementText": "o2: number = o",
                    "line": 73,
                    "column": 5,
                    "endLine": 73,
                    "endColumn": 11
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 75,
            "column": 5,
            "endLine": 75,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 1975,
                    "end": 1982,
                    "replacementText": "o3: number = oo",
                    "line": 75,
                    "column": 5,
                    "endLine": 75,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 78,
            "column": 4,
            "endLine": 78,
            "endColumn": 10,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2001,
                    "end": 2007,
                    "replacementText": "a: number = 1;",
                    "line": 78,
                    "column": 4,
                    "endLine": 78,
                    "endColumn": 10
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 83,
            "column": 5,
            "endLine": 83,
            "endColumn": 14,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2043,
                    "end": 2052,
                    "replacementText": "t2: number = +123",
                    "line": 83,
                    "column": 5,
                    "endLine": 83,
                    "endColumn": 14
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 85,
            "column": 5,
            "endLine": 85,
            "endColumn": 14,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2061,
                    "end": 2070,
                    "replacementText": "t3: number = -234",
                    "line": 85,
                    "column": 5,
                    "endLine": 85,
                    "endColumn": 14
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 87,
            "column": 5,
            "endLine": 87,
            "endColumn": 26,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2079,
                    "end": 2100,
                    "replacementText": "num: number = Math.floor(4.8)",
                    "line": 87,
                    "column": 5,
                    "endLine": 87,
                    "endColumn": 26
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 89,
            "column": 5,
            "endLine": 89,
            "endColumn": 27,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2124,
                    "end": 2146,
                    "replacementText": "value: number = parseInt(\"42\")",
                    "line": 89,
                    "column": 5,
                    "endLine": 89,
                    "endColumn": 27
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 92,
            "column": 1,
            "endLine": 94,
            "endColumn": 2,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2188,
                    "end": 2193,
                    "replacementText": "x: number = 2",
                    "line": 92,
                    "column": 1,
                    "endLine": 94,
                    "endColumn": 2
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 92,
            "column": 1,
            "endLine": 94,
            "endColumn": 2,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2195,
                    "end": 2200,
                    "replacementText": "y: number = 3",
                    "line": 92,
                    "column": 1,
                    "endLine": 94,
                    "endColumn": 2
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 92,
            "column": 1,
            "endLine": 94,
            "endColumn": 2,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2201,
                    "end": 2201,
                    "replacementText": ": number",
                    "line": 92,
                    "column": 1,
                    "endLine": 94,
                    "endColumn": 2
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 96,
            "column": 1,
            "endLine": 98,
            "endColumn": 2,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2264,
                    "end": 2264,
                    "replacementText": ": number",
                    "line": 96,
                    "column": 1,
                    "endLine": 98,
                    "endColumn": 2
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 103,
            "column": 1,
            "endLine": 103,
            "endColumn": 13,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2347,
                    "end": 2359,
                    "replacementText": "identity<number>(42)",
                    "line": 103,
                    "column": 1,
                    "endLine": 103,
                    "endColumn": 13
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 105,
            "column": 5,
            "endLine": 105,
            "endColumn": 23,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2368,
                    "end": 2386,
                    "replacementText": "an_array: number[] = [1, 2, 3]",
                    "line": 105,
                    "column": 5,
                    "endLine": 105,
                    "endColumn": 23
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 107,
            "column": 5,
            "endLine": 107,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2394,
                    "end": 2408,
                    "replacementText": "g: number = an_array[]",
                    "line": 107,
                    "column": 5,
                    "endLine": 107,
                    "endColumn": 19
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 107,
            "column": 18,
            "endLine": 107,
            "endColumn": 18,
            "problem": "ArrayIndexExprType",
            "suggest": "",
            "rule": "The index expression must be of a numeric type (arkts-array-index-expr-type)",
            "severity": "ERROR"
        },
        {
            "line": 109,
            "column": 7,
            "endLine": 109,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2418,
                    "end": 2423,
                    "replacementText": "a: number = 1",
                    "line": 109,
                    "column": 7,
                    "endLine": 109,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 115,
            "column": 7,
            "endLine": 115,
            "endColumn": 20,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2493,
                    "end": 2506,
                    "replacementText": "test: number = Test.A",
                    "line": 115,
                    "column": 7,
                    "endLine": 115,
                    "endColumn": 20
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 121,
            "column": 3,
            "endLine": 121,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2593,
                    "end": 2609,
                    "replacementText": "readonly c1: number = 1;",
                    "line": 121,
                    "column": 3,
                    "endLine": 121,
                    "endColumn": 19
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 122,
            "column": 3,
            "endLine": 122,
            "endColumn": 21,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2620,
                    "end": 2638,
                    "replacementText": "readonly c4: number = 1.7;",
                    "line": 122,
                    "column": 3,
                    "endLine": 122,
                    "endColumn": 21
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 123,
            "column": 3,
            "endLine": 123,
            "endColumn": 23,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2651,
                    "end": 2671,
                    "replacementText": "readonly c5: number = 0x123;",
                    "line": 123,
                    "column": 3,
                    "endLine": 123,
                    "endColumn": 23
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 124,
            "column": 3,
            "endLine": 124,
            "endColumn": 23,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2683,
                    "end": 2703,
                    "replacementText": "readonly c6: number = 0o123;",
                    "line": 124,
                    "column": 3,
                    "endLine": 124,
                    "endColumn": 23
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 125,
            "column": 3,
            "endLine": 125,
            "endColumn": 23,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2713,
                    "end": 2733,
                    "replacementText": "readonly c7: number = 0b101;",
                    "line": 125,
                    "column": 3,
                    "endLine": 125,
                    "endColumn": 23
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 126,
            "column": 3,
            "endLine": 126,
            "endColumn": 24,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2743,
                    "end": 2764,
                    "replacementText": "readonly c8: number[] = [1, 2, 3];",
                    "line": 126,
                    "column": 3,
                    "endLine": 126,
                    "endColumn": 24
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 137,
            "column": 7,
            "endLine": 137,
            "endColumn": 13,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2893,
                    "end": 2899,
                    "replacementText": "c1: number = 1",
                    "line": 137,
                    "column": 7,
                    "endLine": 137,
                    "endColumn": 13
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 140,
            "column": 3,
            "endLine": 140,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 2923,
                    "end": 2939,
                    "replacementText": "readonly a5: number = 4;",
                    "line": 140,
                    "column": 3,
                    "endLine": 140,
                    "endColumn": 19
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 143,
            "column": 7,
            "endLine": 143,
            "endColumn": 123,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 143,
            "column": 30,
            "endLine": 143,
            "endColumn": 118,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "replacementText": "fingerprintPositionY: number = AppStorage.get<number>(FingerprintConstants.COORDINATE_Y_OF_FINGERPRINT_UD_SCREEN_IN_PX) ?? 0",
                    "start": 2952,
                    "end": 3068,
                    "line": 143,
                    "column": 30,
                    "endLine": 143,
                    "endColumn": 118
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 145,
            "column": 45,
            "endLine": 145,
            "endColumn": 49,
            "problem": "VoidOperator",
            "autofix": [
                {
                    "start": 3117,
                    "end": 3558,
                    "replacementText": "(() => {\r\n    ({\r\n        openFolderLayout, : .getGridSwiperLayout().bgHeight = openFolderLayout.getBackgroundLayout().closedHeight,\r\n        openFolderLayout, : .getGridSwiperLayout().bgWidth = openFolderLayout.getBackgroundLayout().closedWidth,\r\n        let, pos = [-1, -1],\r\n        pos = folderLayoutUtil.getFolderComponentCenterPosition(FolderData.getInstance().getOpenedFolder()),\r\n        let, editModeTranslateY = this.getEditModeTranslateY(pos),\r\n        if(pos) { }, : .length > 1\r\n    });\r\n    return undefined;\r\n})()",
                    "line": 145,
                    "column": 45,
                    "endLine": 145,
                    "endColumn": 49
                }
            ],
            "suggest": "",
            "rule": "\"void\" operator is not supported (arkts-no-void-operator)",
            "severity": "ERROR"
        },
        {
            "line": 145,
            "column": 50,
            "endLine": 145,
            "endColumn": 51,
            "problem": "ObjectLiteralNoContextType",
            "suggest": "",
            "rule": "Object literal must correspond to some explicitly declared class or interface (arkts-no-untyped-obj-literals)",
            "severity": "ERROR"
        },
        {
            "line": 146,
            "column": 5,
            "endLine": 146,
            "endColumn": 21,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3129,
                    "end": 3145,
                    "replacementText": "openFolderLayout: openFolderLayout",
                    "line": 146,
                    "column": 5,
                    "endLine": 146,
                    "endColumn": 21
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 147,
            "column": 5,
            "endLine": 147,
            "endColumn": 21,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3237,
                    "end": 3253,
                    "replacementText": "openFolderLayout: openFolderLayout",
                    "line": 147,
                    "column": 5,
                    "endLine": 147,
                    "endColumn": 21
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 149,
            "column": 5,
            "endLine": 149,
            "endColumn": 8,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3345,
                    "end": 3348,
                    "replacementText": "let: let",
                    "line": 149,
                    "column": 5,
                    "endLine": 149,
                    "endColumn": 8
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 149,
            "column": 9,
            "endLine": 149,
            "endColumn": 23,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3349,
                    "end": 3363,
                    "replacementText": "pos: pos",
                    "line": 149,
                    "column": 9,
                    "endLine": 149,
                    "endColumn": 23
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 150,
            "column": 5,
            "endLine": 150,
            "endColumn": 104,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3370,
                    "end": 3469,
                    "replacementText": "pos: pos",
                    "line": 150,
                    "column": 5,
                    "endLine": 150,
                    "endColumn": 104
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 151,
            "column": 5,
            "endLine": 151,
            "endColumn": 8,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3476,
                    "end": 3479,
                    "replacementText": "let: let",
                    "line": 151,
                    "column": 5,
                    "endLine": 151,
                    "endColumn": 8
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 151,
            "column": 9,
            "endLine": 151,
            "endColumn": 61,
            "problem": "ObjectLiteralProperty",
            "autofix": [
                {
                    "start": 3480,
                    "end": 3532,
                    "replacementText": "editModeTranslateY: editModeTranslateY",
                    "line": 151,
                    "column": 9,
                    "endLine": 151,
                    "endColumn": 61
                }
            ],
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 152,
            "column": 5,
            "endLine": 152,
            "endColumn": 12,
            "problem": "ObjectLiteralProperty",
            "suggest": "",
            "rule": "Object literal properties can only contain name-value pairs (arkts-obj-literal-props)",
            "severity": "ERROR"
        },
        {
            "line": 152,
            "column": 5,
            "endLine": 152,
            "endColumn": 7,
            "problem": "LimitedReturnTypeInference",
            "suggest": "",
            "rule": "Function return type inference is limited (arkts-no-implicit-return-types)",
            "severity": "ERROR"
        },
        {
            "line": 152,
            "column": 5,
            "endLine": 152,
            "endColumn": 7,
            "problem": "InvalidIdentifier",
            "suggest": "",
            "rule": "This keyword cannot be used as identifiers (arkts-invalid-identifier)",
            "severity": "ERROR"
        },
        {
            "line": 152,
            "column": 9,
            "endLine": 152,
            "endColumn": 12,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 166,
            "column": 5,
            "endLine": 166,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 4388,
                    "end": 4395,
                    "replacementText": "f: number = 0.0",
                    "line": 166,
                    "column": 5,
                    "endLine": 166,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 170,
            "column": 5,
            "endLine": 170,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 4440,
                    "end": 4447,
                    "replacementText": "e: number = 0.0",
                    "line": 170,
                    "column": 5,
                    "endLine": 170,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 182,
            "column": 5,
            "endLine": 182,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 4627,
                    "end": 4641,
                    "replacementText": "arr1: number[] = [1, 2, 3]",
                    "line": 182,
                    "column": 5,
                    "endLine": 182,
                    "endColumn": 19
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 185,
            "column": 5,
            "endLine": 185,
            "endColumn": 12,
            "problem": "NumericSemantics",
            "autofix": [
                {
                    "start": 4670,
                    "end": 4677,
                    "replacementText": "a: number = 0.0",
                    "line": 185,
                    "column": 5,
                    "endLine": 185,
                    "endColumn": 12
                }
            ],
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 197,
            "column": 1,
            "endLine": 197,
            "endColumn": 40,
            "problem": "ImportAfterStatement",
            "suggest": "",
            "rule": "\"import\" statements after other statements are not allowed (arkts-no-misplaced-imports)",
            "severity": "ERROR"
        },
        {
            "line": 199,
            "column": 5,
            "endLine": 199,
            "endColumn": 34,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 199,
            "column": 15,
            "endLine": 199,
            "endColumn": 24,
            "problem": "DynamicCtorCall",
            "suggest": "",
            "rule": "\"new\" expression with dynamic constructor type is not supported (arkts-no-dynamic-ctor-call)",
            "severity": "ERROR"
        },
        {
            "line": 205,
            "column": 42,
            "endLine": 205,
            "endColumn": 51,
            "problem": "DynamicCtorCall",
            "suggest": "",
            "rule": "\"new\" expression with dynamic constructor type is not supported (arkts-no-dynamic-ctor-call)",
            "severity": "ERROR"
        },
        {
            "line": 117,
            "column": 2,
            "endLine": 117,
            "endColumn": 7,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 118,
            "column": 2,
            "endLine": 118,
            "endColumn": 11,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 120,
            "column": 4,
            "endLine": 120,
            "endColumn": 9,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 129,
            "column": 5,
            "endLine": 129,
            "endColumn": 22,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 130,
            "column": 7,
            "endLine": 130,
            "endColumn": 11,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 143,
            "column": 30,
            "endLine": 143,
            "endColumn": 40,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 153,
            "column": 46,
            "endLine": 153,
            "endColumn": 56,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 154,
            "column": 33,
            "endLine": 154,
            "endColumn": 43,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        },
        {
            "line": 155,
            "column": 34,
            "endLine": 155,
            "endColumn": 44,
            "problem": "UIInterfaceImport",
            "autofix": [
                {
                    "start": 738,
                    "end": 738,
                    "replacementText": "\r\n\r\nimport { Entry, Component, State, RelativeContainer, Text, AppStorage } from '@kit.ArkUI';\r\n",
                    "line": 155,
                    "column": 34,
                    "endLine": 155,
                    "endColumn": 44
                }
            ],
            "suggest": "",
            "rule": "ArkUI interface should be imported before using (arkui-modular-interface)",
            "severity": "ERROR"
        }
    ]
}