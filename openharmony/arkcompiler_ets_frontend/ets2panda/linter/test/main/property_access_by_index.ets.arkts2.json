{
    "copyright": [
        "Copyright (c) 2024-2025 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "result": [
        {
            "line": 16,
            "column": 10,
            "endLine": 16,
            "endColumn": 21,
            "problem": "NoNeedStdLibSendableContainer",
            "suggest": "",
            "rule": "Sendable containers are not supported (arkts-no-need-stdlib-sendable-containers)",
            "severity": "ERROR"
        },
        {
            "line": 22,
            "column": 3,
            "endLine": 22,
            "endColumn": 14,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 25,
            "column": 10,
            "endLine": 25,
            "endColumn": 21,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 33,
            "column": 5,
            "endLine": 33,
            "endColumn": 23,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 41,
            "column": 7,
            "endLine": 41,
            "endColumn": 24,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 42,
            "column": 5,
            "endLine": 42,
            "endColumn": 25,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 46,
            "column": 3,
            "endLine": 46,
            "endColumn": 9,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 50,
            "column": 3,
            "endLine": 50,
            "endColumn": 9,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 53,
            "column": 5,
            "endLine": 53,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 54,
            "column": 5,
            "endLine": 54,
            "endColumn": 25,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 57,
            "column": 5,
            "endLine": 57,
            "endColumn": 27,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 57,
            "column": 14,
            "endLine": 57,
            "endColumn": 27,
            "problem": "GenericCallNoTypeArgs",
            "suggest": "",
            "rule": "Type inference in case of generic function calls is limited (arkts-no-inferred-generic-params)",
            "severity": "ERROR"
        },
        {
            "line": 107,
            "column": 24,
            "endLine": 107,
            "endColumn": 39,
            "problem": "ArrayIndexExprType",
            "suggest": "",
            "rule": "The index expression must be of a numeric type (arkts-array-index-expr-type)",
            "severity": "ERROR"
        },
        {
            "line": 107,
            "column": 24,
            "endLine": 107,
            "endColumn": 39,
            "problem": "BuiltinSymbolIterator",
            "suggest": "",
            "rule": "Using \"Symbol.iterator\" is not allowed in this API (arkts-builtin-symbol-iterator)",
            "severity": "ERROR"
        },
        {
            "line": 108,
            "column": 5,
            "endLine": 108,
            "endColumn": 40,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 108,
            "column": 17,
            "endLine": 108,
            "endColumn": 40,
            "problem": "AvoidUnionTypes",
            "suggest": "",
            "rule": "Avoid using union types (arkts-common-union-member-access)",
            "severity": "ERROR"
        },
        {
            "line": 112,
            "column": 15,
            "endLine": 112,
            "endColumn": 38,
            "problem": "AvoidUnionTypes",
            "suggest": "",
            "rule": "Avoid using union types (arkts-common-union-member-access)",
            "severity": "ERROR"
        },
        {
            "line": 117,
            "column": 20,
            "endLine": 117,
            "endColumn": 35,
            "problem": "ArrayIndexExprType",
            "suggest": "",
            "rule": "The index expression must be of a numeric type (arkts-array-index-expr-type)",
            "severity": "ERROR"
        },
        {
            "line": 117,
            "column": 20,
            "endLine": 117,
            "endColumn": 35,
            "problem": "BuiltinSymbolIterator",
            "suggest": "",
            "rule": "Using \"Symbol.iterator\" is not allowed in this API (arkts-builtin-symbol-iterator)",
            "severity": "ERROR"
        },
        {
            "line": 118,
            "column": 5,
            "endLine": 118,
            "endColumn": 36,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 118,
            "column": 15,
            "endLine": 118,
            "endColumn": 36,
            "problem": "AvoidUnionTypes",
            "suggest": "",
            "rule": "Avoid using union types (arkts-common-union-member-access)",
            "severity": "ERROR"
        },
        {
            "line": 121,
            "column": 13,
            "endLine": 121,
            "endColumn": 34,
            "problem": "AvoidUnionTypes",
            "suggest": "",
            "rule": "Avoid using union types (arkts-common-union-member-access)",
            "severity": "ERROR"
        },
        {
            "line": 139,
            "column": 12,
            "endLine": 139,
            "endColumn": 31,
            "problem": "CreatingPrimitiveTypes",
            "suggest": "",
            "rule": "ArkTS creating primitive types is not supported (arkts-primitive-type-normalization)",
            "severity": "ERROR"
        },
        {
            "line": 159,
            "column": 3,
            "endLine": 159,
            "endColumn": 9,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 172,
            "column": 1,
            "endLine": 172,
            "endColumn": 9,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 173,
            "column": 1,
            "endLine": 173,
            "endColumn": 13,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 174,
            "column": 1,
            "endLine": 174,
            "endColumn": 13,
            "problem": "PropertyAccessByIndex",
            "suggest": "",
            "rule": "Indexed access is not supported for fields (arkts-no-props-by-index)",
            "severity": "ERROR"
        },
        {
            "line": 177,
            "column": 23,
            "endLine": 177,
            "endColumn": 34,
            "problem": "NoNeedStdLibSendableContainer",
            "suggest": "",
            "rule": "Sendable containers are not supported (arkts-no-need-stdlib-sendable-containers)",
            "severity": "ERROR"
        },
        {
            "line": 180,
            "column": 14,
            "endLine": 180,
            "endColumn": 19,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        }
    ]
}
