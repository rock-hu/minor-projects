{
    "copyright": [
        "Copyright (c) 2025 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "result": [
        {
            "line": 16,
            "column": 22,
            "endLine": 16,
            "endColumn": 28,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 631,
                    "end": 637,
                    "replacementText": "new RegExp(\"bc*d\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 20,
            "column": 17,
            "endLine": 20,
            "endColumn": 82,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 699,
                    "end": 764,
                    "replacementText": "new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\\\\.[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 23,
            "column": 23,
            "endLine": 23,
            "endColumn": 31,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 892,
                    "end": 900,
                    "replacementText": "new RegExp(\"bc*d\", \"ig\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 27,
            "column": 34,
            "endLine": 27,
            "endColumn": 41,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 985,
                    "end": 992,
                    "replacementText": "new RegExp(\"bc*d\", \"i\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 31,
            "column": 23,
            "endLine": 31,
            "endColumn": 28,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1088,
                    "end": 1093,
                    "replacementText": "new RegExp(\"a\\\\\\\\\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 36,
            "column": 44,
            "endLine": 36,
            "endColumn": 50,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1195,
                    "end": 1201,
                    "replacementText": "new RegExp(\"bc*d\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 38,
            "column": 36,
            "endLine": 38,
            "endColumn": 101,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1239,
                    "end": 1304,
                    "replacementText": "new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\\\\.[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 43,
            "column": 22,
            "endLine": 43,
            "endColumn": 28,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1410,
                    "end": 1416,
                    "replacementText": "new RegExp(\"bc*d\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 51,
            "column": 22,
            "endLine": 51,
            "endColumn": 28,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1557,
                    "end": 1563,
                    "replacementText": "new RegExp(\"bc*d\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 59,
            "column": 17,
            "endLine": 59,
            "endColumn": 82,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1694,
                    "end": 1759,
                    "replacementText": "new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\\\\.[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 63,
            "column": 28,
            "endLine": 63,
            "endColumn": 93,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1799,
                    "end": 1864,
                    "replacementText": "new RegExp(\"^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*(\\\\.[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*)*$\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 65,
            "column": 24,
            "endLine": 65,
            "endColumn": 38,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1890,
                    "end": 1904,
                    "replacementText": "new RegExp(\"ab*c\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 67,
            "column": 24,
            "endLine": 67,
            "endColumn": 42,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1929,
                    "end": 1947,
                    "replacementText": "new RegExp(\"ab*c\", \"i\")"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 69,
            "column": 20,
            "endLine": 69,
            "endColumn": 44,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 1968,
                    "end": 1992,
                    "replacementText": "new RegExp('dawfgr' + '12345')"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 71,
            "column": 20,
            "endLine": 71,
            "endColumn": 176,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 2013,
                    "end": 2169,
                    "replacementText": "new RegExp('.∗?(?:(?:元宵|三八|妇女|母亲|父亲|七夕|重阳|情人|儿童|六一' + '|愚人|复活|青年|护士|建军|教师|建党|万圣|感恩|秘书|七一|五四|八一|腊八|光棍|植树|中元)节|除夕|大年三十|大年30|七夕' + '|平安夜|六一|七一|五四|八一|三八|腊八|双十一|双十二).∗')"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 73,
            "column": 24,
            "endLine": 73,
            "endColumn": 56,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 2195,
                    "end": 2227,
                    "replacementText": "new RegExp('dawfgr'.concat('12345'))"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        },
        {
            "line": 75,
            "column": 21,
            "endLine": 75,
            "endColumn": 53,
            "problem": "RegularExpressionLiteral",
            "autofix": [
                {
                    "start": 2250,
                    "end": 2282,
                    "replacementText": "new RegExp('dawfgr' + '12345' + '789')"
                }
            ],
            "suggest": "",
            "rule": "RegExp literals are not supported (arkts-no-regexp-literals)",
            "severity": "ERROR"
        }
    ]
}