{
    "copyright": [
        "Copyright (c) 2023-2024 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "nodes": [
        {
            "line": 18,
            "column": 1,
            "endLine": 18,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 630,
                    "end": 645,
                    "replacementText": "let foo1 = bar1"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 22,
            "column": 1,
            "endLine": 22,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 677,
                    "end": 708,
                    "replacementText": "let foo2 = bar2, toast2 = most2"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 26,
            "column": 1,
            "endLine": 26,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 740,
                    "end": 755,
                    "replacementText": "let foo3 = bar3"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 29,
            "column": 6,
            "endLine": 29,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 796,
                    "end": 802,
                    "replacementText": "let a4"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 32,
            "column": 13,
            "endLine": 32,
            "endColumn": 15,
            "problem": "ForInStatement",
            "suggest": "",
            "rule": "\"for .. in\" is not supported (arkts-no-for-in)"
        },
        {
            "line": 32,
            "column": 6,
            "endLine": 32,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 850,
                    "end": 856,
                    "replacementText": "let a5"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 35,
            "column": 22,
            "endLine": 35,
            "endColumn": 25,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 920,
                    "end": 930,
                    "replacementText": "let c6 = 1"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 38,
            "column": 6,
            "endLine": 38,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 973,
                    "end": 983,
                    "replacementText": "let i7 = 0"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 40,
            "column": 1,
            "endLine": 40,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 40,
            "column": 5,
            "endLine": 40,
            "endColumn": 23,
            "problem": "DestructuringDeclaration",
            "suggest": "",
            "rule": "Destructuring variable declarations are not supported (arkts-no-destruct-decls)"
        },
        {
            "line": 40,
            "column": 21,
            "endLine": 40,
            "endColumn": 22,
            "problem": "ObjectLiteralNoContextType",
            "suggest": "",
            "rule": "Object literal must correspond to some explicitly declared class or interface (arkts-no-untyped-obj-literals)"
        },
        {
            "line": 42,
            "column": 1,
            "endLine": 42,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 1062,
                    "end": 1073,
                    "replacementText": "let a9 = b9"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 42,
            "column": 14,
            "endLine": 42,
            "endColumn": 17,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 44,
            "column": 1,
            "endLine": 44,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 1087,
                    "end": 1100,
                    "replacementText": "let foo10 = 1"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 46,
            "column": 9,
            "endLine": 46,
            "endColumn": 12,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 1110,
                    "end": 1123,
                    "replacementText": "let foo11 = 2"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 49,
            "column": 1,
            "endLine": 49,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 49,
            "column": 12,
            "endLine": 49,
            "endColumn": 91,
            "problem": "FunctionExpression",
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 49,
            "column": 12,
            "endLine": 49,
            "endColumn": 91,
            "problem": "LimitedReturnTypeInference",
            "suggest": "",
            "rule": "Function return type inference is limited (arkts-no-implicit-return-types)"
        },
        {
            "line": 51,
            "column": 1,
            "endLine": 51,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 51,
            "column": 13,
            "endLine": 51,
            "endColumn": 36,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 1254,
                    "end": 1277,
                    "replacementText": "() => { foo13(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 53,
            "column": 1,
            "endLine": 53,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 53,
            "column": 13,
            "endLine": 53,
            "endColumn": 26,
            "problem": "LimitedReturnTypeInference",
            "suggest": "",
            "rule": "Function return type inference is limited (arkts-no-implicit-return-types)"
        },
        {
            "line": 56,
            "column": 1,
            "endLine": 56,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 1319,
                    "end": 1336,
                    "replacementText": "let bar15 = foo15"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 56,
            "column": 20,
            "endLine": 56,
            "endColumn": 23,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 56,
            "column": 32,
            "endLine": 56,
            "endColumn": 56,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 1350,
                    "end": 1374,
                    "replacementText": "() => { foo15(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 58,
            "column": 1,
            "endLine": 58,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "autofix": [
                {
                    "start": 1377,
                    "end": 1413,
                    "replacementText": "let bar16 = function () { foo16(); }"
                }
            ],
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 58,
            "column": 13,
            "endLine": 58,
            "endColumn": 37,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 1389,
                    "end": 1413,
                    "replacementText": "() => { foo16(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 58,
            "column": 39,
            "endLine": 58,
            "endColumn": 42,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 58,
            "column": 51,
            "endLine": 58,
            "endColumn": 64,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 1427,
                    "end": 1440,
                    "replacementText": "() => { }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 61,
            "column": 6,
            "endLine": 61,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 63,
            "column": 1,
            "endLine": 63,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 63,
            "column": 19,
            "endLine": 63,
            "endColumn": 22,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 65,
            "column": 1,
            "endLine": 65,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 65,
            "column": 5,
            "endLine": 65,
            "endColumn": 8,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 65,
            "column": 10,
            "endLine": 65,
            "endColumn": 13,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 65,
            "column": 15,
            "endLine": 65,
            "endColumn": 18,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 65,
            "column": 20,
            "endLine": 65,
            "endColumn": 23,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 65,
            "column": 24,
            "endLine": 65,
            "endColumn": 27,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 68,
            "column": 1,
            "endLine": 68,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 68,
            "column": 5,
            "endLine": 68,
            "endColumn": 8,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 68,
            "column": 21,
            "endLine": 68,
            "endColumn": 24,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 68,
            "column": 25,
            "endLine": 68,
            "endColumn": 28,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 71,
            "column": 14,
            "endLine": 71,
            "endColumn": 17,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 71,
            "column": 18,
            "endLine": 71,
            "endColumn": 21,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 71,
            "column": 23,
            "endLine": 71,
            "endColumn": 26,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 71,
            "column": 28,
            "endLine": 71,
            "endColumn": 31,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 73,
            "column": 6,
            "endLine": 73,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 76,
            "column": 14,
            "endLine": 76,
            "endColumn": 16,
            "problem": "ForInStatement",
            "suggest": "",
            "rule": "\"for .. in\" is not supported (arkts-no-for-in)"
        },
        {
            "line": 76,
            "column": 6,
            "endLine": 76,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 79,
            "column": 6,
            "endLine": 79,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 82,
            "column": 24,
            "endLine": 82,
            "endColumn": 27,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 86,
            "column": 6,
            "endLine": 86,
            "endColumn": 9,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 89,
            "column": 24,
            "endLine": 89,
            "endColumn": 27,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 89,
            "column": 28,
            "endLine": 89,
            "endColumn": 31,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 91,
            "column": 1,
            "endLine": 91,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 91,
            "column": 5,
            "endLine": 91,
            "endColumn": 14,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 93,
            "column": 1,
            "endLine": 93,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 93,
            "column": 5,
            "endLine": 93,
            "endColumn": 21,
            "problem": "DestructuringDeclaration",
            "suggest": "",
            "rule": "Destructuring variable declarations are not supported (arkts-no-destruct-decls)"
        },
        {
            "line": 93,
            "column": 19,
            "endLine": 93,
            "endColumn": 20,
            "problem": "ObjectLiteralNoContextType",
            "suggest": "",
            "rule": "Object literal must correspond to some explicitly declared class or interface (arkts-no-untyped-obj-literals)"
        },
        {
            "line": 95,
            "column": 1,
            "endLine": 95,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 95,
            "column": 5,
            "endLine": 95,
            "endColumn": 26,
            "problem": "DestructuringDeclaration",
            "suggest": "",
            "rule": "Destructuring variable declarations are not supported (arkts-no-destruct-decls)"
        },
        {
            "line": 95,
            "column": 24,
            "endLine": 95,
            "endColumn": 25,
            "problem": "ObjectLiteralNoContextType",
            "suggest": "",
            "rule": "Object literal must correspond to some explicitly declared class or interface (arkts-no-untyped-obj-literals)"
        },
        {
            "line": 97,
            "column": 1,
            "endLine": 97,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 99,
            "column": 26,
            "endLine": 99,
            "endColumn": 29,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 102,
            "column": 12,
            "endLine": 102,
            "endColumn": 15,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 108,
            "column": 13,
            "endLine": 108,
            "endColumn": 16,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 110,
            "column": 20,
            "endLine": 110,
            "endColumn": 23,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 110,
            "column": 24,
            "endLine": 110,
            "endColumn": 27,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 115,
            "column": 1,
            "endLine": 115,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 115,
            "column": 14,
            "endLine": 115,
            "endColumn": 38,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2425,
                    "end": 2449,
                    "replacementText": "() => { foo39(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 117,
            "column": 13,
            "endLine": 117,
            "endColumn": 27,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2467,
                    "end": 2481,
                    "replacementText": "(a) => { }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 117,
            "column": 22,
            "endLine": 117,
            "endColumn": 23,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)"
        },
        {
            "line": 118,
            "column": 1,
            "endLine": 118,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 118,
            "column": 19,
            "endLine": 118,
            "endColumn": 43,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2501,
                    "end": 2525,
                    "replacementText": "() => { foo40(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 120,
            "column": 1,
            "endLine": 120,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 120,
            "column": 28,
            "endLine": 120,
            "endColumn": 52,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2556,
                    "end": 2580,
                    "replacementText": "() => { foo41(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 122,
            "column": 1,
            "endLine": 122,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 122,
            "column": 5,
            "endLine": 122,
            "endColumn": 49,
            "problem": "DestructuringDeclaration",
            "suggest": "",
            "rule": "Destructuring variable declarations are not supported (arkts-no-destruct-decls)"
        },
        {
            "line": 122,
            "column": 25,
            "endLine": 122,
            "endColumn": 49,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2607,
                    "end": 2631,
                    "replacementText": "() => { foo42(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 124,
            "column": 1,
            "endLine": 124,
            "endColumn": 4,
            "problem": "VarDeclaration",
            "suggest": "",
            "rule": "Use \"let\" instead of \"var\" (arkts-no-var)"
        },
        {
            "line": 124,
            "column": 5,
            "endLine": 124,
            "endColumn": 56,
            "problem": "DestructuringDeclaration",
            "suggest": "",
            "rule": "Destructuring variable declarations are not supported (arkts-no-destruct-decls)"
        },
        {
            "line": 124,
            "column": 32,
            "endLine": 124,
            "endColumn": 56,
            "problem": "FunctionExpression",
            "autofix": [
                {
                    "start": 2665,
                    "end": 2689,
                    "replacementText": "() => { foo43(); }"
                }
            ],
            "suggest": "",
            "rule": "Use arrow functions instead of function expressions (arkts-no-func-expressions)"
        },
        {
            "line": 42,
            "column": 10,
            "endLine": 42,
            "endColumn": 12,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'b9' is used before being assigned.",
            "rule": "Variable 'b9' is used before being assigned."
        },
        {
            "line": 56,
            "column": 13,
            "endLine": 56,
            "endColumn": 18,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'foo15' is used before being assigned.",
            "rule": "Variable 'foo15' is used before being assigned."
        },
        {
            "line": 76,
            "column": 27,
            "endLine": 76,
            "endColumn": 30,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'a23' is used before being assigned.",
            "rule": "Variable 'a23' is used before being assigned."
        },
        {
            "line": 79,
            "column": 28,
            "endLine": 79,
            "endColumn": 31,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'a24' is used before being assigned.",
            "rule": "Variable 'a24' is used before being assigned."
        },
        {
            "line": 86,
            "column": 35,
            "endLine": 86,
            "endColumn": 44,
            "problem": "StrictDiagnostic",
            "suggest": "Argument of type '() => never' is not assignable to parameter of type 'never'.",
            "rule": "Argument of type '() => never' is not assignable to parameter of type 'never'."
        },
        {
            "line": 97,
            "column": 11,
            "endLine": 97,
            "endColumn": 14,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'b31' is used before being assigned.",
            "rule": "Variable 'b31' is used before being assigned."
        },
        {
            "line": 120,
            "column": 13,
            "endLine": 120,
            "endColumn": 18,
            "problem": "StrictDiagnostic",
            "suggest": "Variable 'foo41' is used before being assigned.",
            "rule": "Variable 'foo41' is used before being assigned."
        }
    ]
}