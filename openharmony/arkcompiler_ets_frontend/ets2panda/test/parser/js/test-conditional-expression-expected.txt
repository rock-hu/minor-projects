{
  "type": "Program",
  "statements": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ConditionalExpression",
        "test": {
          "type": "Identifier",
          "name": "a",
          "decorators": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 1,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 17,
              "column": 2,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "consequent": {
          "type": "Identifier",
          "name": "b",
          "decorators": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 5,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 17,
              "column": 6,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "alternate": {
          "type": "Identifier",
          "name": "c",
          "decorators": [],
          "loc": {
            "start": {
              "line": 17,
              "column": 9,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 17,
              "column": 10,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "loc": {
          "start": {
            "line": 17,
            "column": 1,
            "program": "test-conditional-expression.js"
          },
          "end": {
            "line": 17,
            "column": 10,
            "program": "test-conditional-expression.js"
          }
        }
      },
      "loc": {
        "start": {
          "line": 17,
          "column": 1,
          "program": "test-conditional-expression.js"
        },
        "end": {
          "line": 17,
          "column": 10,
          "program": "test-conditional-expression.js"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ConditionalExpression",
        "test": {
          "type": "BinaryExpression",
          "operator": "==",
          "left": {
            "type": "Identifier",
            "name": "a",
            "decorators": [],
            "loc": {
              "start": {
                "line": 19,
                "column": 1,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 19,
                "column": 2,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "right": {
            "type": "NumberLiteral",
            "value": 1,
            "loc": {
              "start": {
                "line": 19,
                "column": 6,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 19,
                "column": 7,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "loc": {
            "start": {
              "line": 19,
              "column": 1,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 19,
              "column": 7,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "consequent": {
          "type": "Identifier",
          "name": "a",
          "decorators": [],
          "loc": {
            "start": {
              "line": 20,
              "column": 5,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 20,
              "column": 6,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "alternate": {
          "type": "NumberLiteral",
          "value": 42,
          "loc": {
            "start": {
              "line": 21,
              "column": 5,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 21,
              "column": 7,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "loc": {
          "start": {
            "line": 19,
            "column": 1,
            "program": "test-conditional-expression.js"
          },
          "end": {
            "line": 21,
            "column": 7,
            "program": "test-conditional-expression.js"
          }
        }
      },
      "loc": {
        "start": {
          "line": 19,
          "column": 1,
          "program": "test-conditional-expression.js"
        },
        "end": {
          "line": 21,
          "column": 7,
          "program": "test-conditional-expression.js"
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "res",
            "decorators": [],
            "loc": {
              "start": {
                "line": 23,
                "column": 5,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 23,
                "column": 8,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "BinaryExpression",
              "operator": "==",
              "left": {
                "type": "Identifier",
                "name": "a",
                "decorators": [],
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 12,
                    "program": "test-conditional-expression.js"
                  },
                  "end": {
                    "line": 23,
                    "column": 13,
                    "program": "test-conditional-expression.js"
                  }
                }
              },
              "right": {
                "type": "NumberLiteral",
                "value": 1,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 17,
                    "program": "test-conditional-expression.js"
                  },
                  "end": {
                    "line": 23,
                    "column": 18,
                    "program": "test-conditional-expression.js"
                  }
                }
              },
              "loc": {
                "start": {
                  "line": 23,
                  "column": 12,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 23,
                  "column": 18,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "consequent": {
              "type": "Identifier",
              "name": "a",
              "decorators": [],
              "loc": {
                "start": {
                  "line": 23,
                  "column": 21,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 23,
                  "column": 22,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "alternate": {
              "type": "NumberLiteral",
              "value": 42,
              "loc": {
                "start": {
                  "line": 23,
                  "column": 25,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 23,
                  "column": 27,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "loc": {
              "start": {
                "line": 23,
                "column": 11,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 23,
                "column": 28,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "loc": {
            "start": {
              "line": 23,
              "column": 5,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 23,
              "column": 28,
              "program": "test-conditional-expression.js"
            }
          }
        }
      ],
      "kind": "var",
      "loc": {
        "start": {
          "line": 23,
          "column": 1,
          "program": "test-conditional-expression.js"
        },
        "end": {
          "line": 23,
          "column": 29,
          "program": "test-conditional-expression.js"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ConditionalExpression",
        "test": {
          "type": "LogicalExpression",
          "operator": "||",
          "left": {
            "type": "LogicalExpression",
            "operator": "&&",
            "left": {
              "type": "Identifier",
              "name": "a",
              "decorators": [],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 1,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 25,
                  "column": 2,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "right": {
              "type": "Identifier",
              "name": "b",
              "decorators": [],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 6,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 25,
                  "column": 7,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "loc": {
              "start": {
                "line": 25,
                "column": 1,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 25,
                "column": 7,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "right": {
            "type": "BinaryExpression",
            "operator": "==",
            "left": {
              "type": "Identifier",
              "name": "c",
              "decorators": [],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 11,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 25,
                  "column": 12,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "right": {
              "type": "Identifier",
              "name": "d",
              "decorators": [],
              "loc": {
                "start": {
                  "line": 25,
                  "column": 16,
                  "program": "test-conditional-expression.js"
                },
                "end": {
                  "line": 25,
                  "column": 17,
                  "program": "test-conditional-expression.js"
                }
              }
            },
            "loc": {
              "start": {
                "line": 25,
                "column": 11,
                "program": "test-conditional-expression.js"
              },
              "end": {
                "line": 25,
                "column": 17,
                "program": "test-conditional-expression.js"
              }
            }
          },
          "loc": {
            "start": {
              "line": 25,
              "column": 1,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 25,
              "column": 17,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "consequent": {
          "type": "Identifier",
          "name": "e",
          "decorators": [],
          "loc": {
            "start": {
              "line": 25,
              "column": 20,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 25,
              "column": 21,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "alternate": {
          "type": "Identifier",
          "name": "f",
          "decorators": [],
          "loc": {
            "start": {
              "line": 25,
              "column": 24,
              "program": "test-conditional-expression.js"
            },
            "end": {
              "line": 25,
              "column": 25,
              "program": "test-conditional-expression.js"
            }
          }
        },
        "loc": {
          "start": {
            "line": 25,
            "column": 1,
            "program": "test-conditional-expression.js"
          },
          "end": {
            "line": 25,
            "column": 25,
            "program": "test-conditional-expression.js"
          }
        }
      },
      "loc": {
        "start": {
          "line": 25,
          "column": 1,
          "program": "test-conditional-expression.js"
        },
        "end": {
          "line": 25,
          "column": 25,
          "program": "test-conditional-expression.js"
        }
      }
    }
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 1,
      "program": "test-conditional-expression.js"
    },
    "end": {
      "line": 26,
      "column": 1,
      "program": "test-conditional-expression.js"
    }
  }
}
