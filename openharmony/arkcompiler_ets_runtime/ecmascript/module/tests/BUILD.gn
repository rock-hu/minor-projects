# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_runtime/js_runtime_config.gni")
import("//arkcompiler/ets_runtime/test/test_helper.gni")

test_js_path = "//arkcompiler/ets_runtime/ecmascript/module/tests/module_test/"

test_js_files = [
  "module_test_module_test_module",
  "module_test_module_test_module_base",
  "module_test_module_test_A",
  "module_test_module_test_B",
  "module_test_module_test_C",
  "module_unexecute",
  "module_unexecute_A",
  "module_unexecute_B",
  "module_unexecute_C",
]

foreach(file, test_js_files) {
  es2abc_gen_abc("gen_${file}_abc") {
    test_js = "${test_js_path}${file}.js"
    test_abc = "$target_out_dir/${file}.abc"

    # Only targets in this file can depend on this.
    extra_visibility = [ ":*" ]
    src_js = rebase_path(test_js)
    dst_file = rebase_path(test_abc)
    extra_args = []
    if (file == "module_test_module_test_A") {
      extra_args += [ "--commonjs" ]
    } else if (file == "module_unexecute_C") {
      extra_args += [ "--commonjs" ]
      extra_args += [ "--merge-abc" ]
    } else {
      extra_args += [ "--module" ]
      extra_args += [ "--merge-abc" ]
    }
    in_puts = [ test_js ]
    out_puts = [ test_abc ]
  }
}

module_output_path = "ets_runtime"

host_unittest_action("ModuleTest") {
  module_out_path = module_output_path

  sources = [
    # test file
    "ecma_module_test.cpp",
  ]

  configs = [
    "//arkcompiler/ets_runtime:ecma_test_config",
    "$ark_root/assembler:arkassembler_public_config",
    "$ark_root/libpandafile:arkfile_public_config",
  ]

  deps = [
    "$ark_third_party_root/icu/icu4c:shared_icui18n",
    "$ark_third_party_root/icu/icu4c:shared_icuuc",
    "$js_root:libark_jsruntime_test",
    "//arkcompiler/runtime_core/assembler:libarkassembler_static",
  ]

  foreach(file, test_js_files) {
    deps += [ ":gen_${file}_abc" ]
  }

  if (is_ohos && is_standard_system) {
    test_abc_dir = "/data/test"
  } else {
    test_abc_dir = rebase_path(target_out_dir)
  }
  defines = [ "MODULE_ABC_PATH=\"${test_abc_dir}/\"" ]

  # hiviewdfx libraries
  external_deps = hiviewdfx_ext_deps
  deps += hiviewdfx_deps
  external_deps += [ "zlib:libz" ]
}

group("unittest") {
  testonly = true

  # deps file
  deps = [ ":ModuleTest" ]
}

group("host_unittest") {
  testonly = true

  # deps file
  deps = [ ":ModuleTestAction" ]

  if (is_mac) {
    deps -= [ ":ModuleTestAction" ]
  }
}
