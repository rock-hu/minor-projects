# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/ets_runtime/js_runtime_config.gni")

module_test_list = [
  "addelementinternal",
  "allocatearraybuffer",
  "array",
  "arrayderived",
  "arraypushproto",
  "arraySome",
  "arrayEvery",
  "arrayspeciescreate",
  "arrayconstructor",
  "arrayspliceproto",
  "arrayunshiftproto",
  "arrayfillproto",
  "arrayconcat",
  "arrayfind",
  "arrayfindlast",
  "arrayfill",
  "arrayflat",
  "arrayflatmap",
  "arrayfindindex",
  "arrayfindlastindex",
  "arrayforeach",
  "arrayfrom",
  "arrayjoin",
  "arraymap",
  "getiterator",
  "arraypop",
  "arraytoreversed",
  "arraytospliced",
  "arraywith",
  "arraystablecheck",
  "arraysort",
  "arrayspread",
  "arrayprotochange",
  "arrayshift",
  "arrayslice",
  "arraysplice",
  "arktoolsgetundetectable",
  "arktoolshavesamemap",
  "assignproxy",
  "asyncgenerator",
  "asyncUseLazyValue",
  "barrier",
  "bigint",
  "bindfunction",
  "bitwiseop",
  "builtins",
  "callframe",
  "calltype",
  "changelistener",
  "class",
  "clampedarray",
  "compareobjecthclass",
  "concurrent",
  "container",
  "createarray",
  "createobject",
  "dataproperty",
  "datecase",
  "datecompare",
  "dateparse",
  "datetimezone",
  "decodeuricomponent",
  "definefield",
  "definefunc",
  "definemethod",
  "deleteobjproperty",
  "div",
  "dynamicimport",
  "dyninstruction",
  "ecmastringtable",
  "internstring",
  "equal",
  "errorhelper",
  "errorcause",
  "exp",
  "flatten",
  "forawaitof",
  "forin",
  "forin_delete_property",
  "forin_dictionary_mode",
  "forin_empty_prototype",
  "forin_enum_cache",
  "forin_enum_cache_chain",
  "forin_non_empty_prototype",
  "forin_primitive",
  "forin_special_object",
  "fortest",
  "funcprotochangeobjectandnew",
  "functionapply",
  "generator",
  "getdeletedelementsat",
  "getpropertybyindex",
  "getunmappedargs",
  "global",
  "globalaccessor",
  "globalrecord",
  "globalthis",
  "helloworld",
  "ictest",
  "includesindexof",
  "instanceofic",
  "intl",
  "isin",
  "memleakobjectcreate",
  "merge",
  "module",
  "moduleHandleException",
  "moduleImportJson",
  "moduleLazyImport",
  "moduleTopLevelAwait",
  "moduleUseCjs",
  "multiargs",
  "multiprotoic",
  "negintmin",
  "newobjdynrange",
  "newtaggedsubarray",
  "nextinternalslowpath",
  "object",
  "typedarraymapoverflow",
  "objectcloneproperties",
  "objectdefineproperties",
  "objectgetownproperty",
  "objecthasownproperty",
  "objectkeys",
  "objoperate",
  "objseal",
  "promise",
  "promiseUseLazyValue",
  "promiseUseLazyValueInDynamic",
  "propertydetector",

  #"protobuf",
  "proxy",
  "realm",
  "regressproxy",
  "rangeerror",
  "regexpcallthrow",
  "regexpflagd",
  "regressfunction",
  "regexpmaxindex",
  "regress",
  "regressparseInt",
  "regressmathmaxmin",

  "string",
  "stringlocalecompare",
  "stringrepeat",
  "sharedcheck",
  "sharedarray",
  "shareduse",
  "enum_cache_sendable",
  "sharedtypedarray",
  "sharedcollectionsexception",
  "definesendableclass",
  "sendableenv",
  "sendablefunc",
  "sendablecontext",
  "sendableclassuseimport",
  "sharedmodule",
  "sharedset",
  "sharedmap",
  "sharedJSON",
  "sharedic",
  "sendable",
  "sendablearray",
  "sharedobjectstorebarrier_treestring",
]

# TODO: CMC-GC UT FIX LATER
if (ets_runtime_enable_cmc_gc) {
  module_test_list -= [
    "allocatearraybuffer",
    "builtins",
  ]
}

group("ark_js_moduletest") {
  testonly = true
  test_list = module_test_list
  test_list += [ "async" ]  # asm interpreter run too long
  deps = []
  foreach(test, test_list) {
    deps += [ "${test}:${test}Action" ]
    if (!is_debug) {
      deps += [ "${test}:${test}ContextAction" ]
    }
  }

  if (!is_debug) {
    release_test_list = [ "typedarrayrelease" ]

    foreach(test, release_test_list) {
      deps += [
        "${test}:${test}Action",
        "${test}:${test}ContextAction",
      ]
    }
  }
}

group("ark_js_assert_moduletest") {
  testonly = true
  assert_test_list = [
    "addpropertybyname",
    "cowarray",
    "jsonparser",
    "jsonstringifier",
    "ldmodulensbyic",
    "lexicalenv",
    "arrch64stackoverflow",
    "linkedhashtable",
    "loadicbyname",
    "loadicbyvalue",
    "localelowercase",
    "mapforeach",
    "mapget",
    "regressdefineproperty",
    "regresssstring",
    "require",
    "setobjectwithproto",
    "spreadoperator",
    "stackoverflow",
    "storeglobalvarIC",
    "storeicbyname",
    "storeicbyvalue",
    "stringfromcharcode",
    "stringreplace",
    "stringreplaceall",
    "stringsplit",
    "stubbuilder",
    "throwdyn",
    "throwerror",
    "trycatch",
    "typearray",
    "typedarrayat",
    "typedarrayfill",
    "typedarrayfilter",
    "typedarrayfindlast",
    "typedarrayfrom",

    #"typedarrayfrom_in_api14",
    "typedarrayiterator",
    "typedarraymap",
    "typedarraynan",
    "typedarrayreverse",
    "typedarraysort",
    "typedarraysubarray",
    "typedarraytosorted",
    "typedarraywith",
    "typedarrayjoin",
    "watch",
    "weakcollectionswithsymbol",
    "wrapperclassfunc",
    "yieldstar",
    "esmnestedimportcjs",
    "regexp",
    "regexpcache",
    "deregistermodule",
    "getpropertybyic",
    "regressbufferdetach",
    "regressdate",
    "regresssuper",
    "objectfreeze",
    "getvaluefrombuffer",
  ]

  deps = []
  foreach(test, assert_test_list) {
    deps += [ "${test}:${test}AssertAction" ]
    if (ark_standalone_build && host_os == "linux" && target_os == "ohos") {
      deps += [ "${test}:${test}ActionWithQemu" ]
    }
    if (!is_debug) {
      deps += [ "${test}:${test}ContextAssertAction" ]
    }
  }

  if (!is_debug) {
    release_test_assert_list = [
      "hugearray",
      "hugeictest",
      "multiconstpoolarray",
      "multiconstpoolclass",
      "multiconstpoolconstructor",
      "multiconstpoolfunc",
      "multiconstpoolobj",
      "proxyget",
      "proxyrelease",
      "proxyset",
    ]

    foreach(test, release_test_assert_list) {
      deps += [
        "${test}:${test}AssertAction",
        "${test}:${test}ContextAssertAction",
      ]
    }
  }
}

group("ark_asm_test") {
  testonly = true
  test_list = module_test_list
  test_list += [
    "arrayincludesindexof",  # C interpreter do not support elementskind.
    "elements_kind",  # C interpreter do not support elementskind.
    "allocatesizeoverflow",  # different bound check for C and ASM interpreter
  ]

  deps = []
  foreach(test, test_list) {
    deps += [ "${test}:${test}AsmAction" ]
    if (!is_debug) {
      deps += [ "${test}:${test}AsmContextAction" ]
    }
  }

  if (!is_debug) {
    release_test_list = [
      "throwerrorrelease",
      "typedarrayrelease",
    ]

    foreach(test, release_test_list) {
      deps += [
        "${test}:${test}AsmAction",
        "${test}:${test}AsmContextAction",
      ]
    }
  }
}

group("ark_asm_assert_test") {
  testonly = true
  assert_test_list = [
    "addpropertybyname",
    "cowarray",
    "jsonparser",
    "jsonstringifier",
    "ldmodulensbyic",
    "lexicalenv",
    "linkedhashtable",
    "loadicbyvalue",
    "mapforeach",
    "mapget",
    "setobjectwithproto",
    "spreadoperator",
    "stackoverflow",
    "stringreplace",
    "stringreplaceall",
    "stringsplit",
    "stubbuilder",
    "throwdyn",
    "throwerror",
    "trycatch",
    "typearray",
    "typedarrayat",
    "typedarrayfill",
    "typedarrayfilter",
    "typedarrayfindlast",
    "typedarrayfrom",

    #"typedarrayfrom_in_api14",
    "typedarrayiterator",
    "typedarraymap",
    "typedarraynan",
    "typedarrayreverse",
    "typedarraysort",
    "typedarraytosorted",
    "typedarraywith",
    "watch",
    "weakcollectionswithsymbol",
    "wrapperclassfunc",
    "yieldstar",
    "regexp",
    "deregistermodule",
    "getpropertybyic",
    "getvaluefrombuffer",
  ]
  deps = []

  foreach(test, assert_test_list) {
    deps += [ "${test}:${test}AsmAssertAction" ]
    if (!is_debug) {
      deps += [ "${test}:${test}AsmContextAssertAction" ]
    }
  }

  if (!is_debug) {
    release_test_assert_list = [
      "asmstackoverflow",
      "arrayRelease",
      "hugearray",
      "hugeictest",
      "supercallRelease",
      "multiconstpoolarray",
      "multiconstpoolclass",
      "multiconstpoolconstructor",
      "multiconstpoolfunc",
      "multiconstpoolobj",
      "proxyget",
      "proxyrelease",
      "proxyset",
    ]

    # TODO: CMC-GC UT FIX LATER
    if (ets_runtime_enable_cmc_gc) {
      release_test_assert_list -= [ "hugearray" ]
    }

    foreach(test, release_test_assert_list) {
      deps += [
        "${test}:${test}AsmAssertAction",
        "${test}:${test}AsmContextAssertAction",
      ]
    }
  }
}
