# Autogenerated file -- DO NOT EDIT!
intrinsics:
# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: MathAbsI32
  space: core
  class_name: Math
  method_name: absI32
  safepoint_after_call: false
  private: false
  signature:
    ret: "i32"
    args: ["i32"]
  static: true
  impl: panda::intrinsics::AbsI32
  impl_signature:
    ret: "int32_t"
    args: ["int32_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathAbsI64
  space: core
  class_name: Math
  method_name: absI64
  safepoint_after_call: false
  private: false
  signature:
    ret: "i64"
    args: ["i64"]
  static: true
  impl: panda::intrinsics::AbsI64
  impl_signature:
    ret: "int64_t"
    args: ["int64_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathAbsF32
  space: core
  class_name: Math
  method_name: absF32
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::AbsF32
  impl_signature:
    ret: "float"
    args: ["float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathAbsF64
  space: core
  class_name: Math
  method_name: absF64
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::AbsF64
  impl_signature:
    ret: "double"
    args: ["double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMinI32
  space: core
  class_name: Math
  method_name: minI32
  safepoint_after_call: false
  private: false
  signature:
    ret: "i32"
    args: ["i32", "i32"]
  static: true
  impl: panda::intrinsics::MinI32
  impl_signature:
    ret: "int32_t"
    args: ["int32_t", "int32_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMinI64
  space: core
  class_name: Math
  method_name: minI64
  safepoint_after_call: false
  private: false
  signature:
    ret: "i64"
    args: ["i64", "i64"]
  static: true
  impl: panda::intrinsics::MinI64
  impl_signature:
    ret: "int64_t"
    args: ["int64_t", "int64_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMinF32
  space: core
  class_name: Math
  method_name: minF32
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32", "f32"]
  static: true
  impl: panda::intrinsics::MinF32
  impl_signature:
    ret: "float"
    args: ["float", "float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMinF64
  space: core
  class_name: Math
  method_name: minF64
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64", "f64"]
  static: true
  impl: panda::intrinsics::MinF64
  impl_signature:
    ret: "double"
    args: ["double", "double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMaxI32
  space: core
  class_name: Math
  method_name: maxI32
  safepoint_after_call: false
  private: false
  signature:
    ret: "i32"
    args: ["i32", "i32"]
  static: true
  impl: panda::intrinsics::MaxI32
  impl_signature:
    ret: "int32_t"
    args: ["int32_t", "int32_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMaxI64
  space: core
  class_name: Math
  method_name: maxI64
  safepoint_after_call: false
  private: false
  signature:
    ret: "i64"
    args: ["i64", "i64"]
  static: true
  impl: panda::intrinsics::MaxI64
  impl_signature:
    ret: "int64_t"
    args: ["int64_t", "int64_t"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMaxF32
  space: core
  class_name: Math
  method_name: maxF32
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32", "f32"]
  static: true
  impl: panda::intrinsics::MaxF32
  impl_signature:
    ret: "float"
    args: ["float", "float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathMaxF64
  space: core
  class_name: Math
  method_name: maxF64
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64", "f64"]
  static: true
  impl: panda::intrinsics::MaxF64
  impl_signature:
    ret: "double"
    args: ["double", "double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: DoubleIsInf
  space: core
  class_name: Double
  method_name: isInfinite
  safepoint_after_call: false
  private: false
  signature:
    ret: "u1"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::IsInfF64
  impl_signature:
    ret: "uint8_t"
    args: ["double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateFloatIsInf
  codegen_arch: ["amd64", "arm32", "arm64"]
  need_nullcheck: []
- name: FloatIsInf
  space: core
  class_name: Float
  method_name: isInfinite
  safepoint_after_call: false
  private: false
  signature:
    ret: "u1"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::IsInfF32
  impl_signature:
    ret: "uint8_t"
    args: ["float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateFloatIsInf
  codegen_arch: ["amd64", "arm32", "arm64"]
  need_nullcheck: []
- name: MathSinF32
  space: core
  class_name: Math
  method_name: fsin
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::SinF32
  impl_signature:
    ret: "float"
    args: ["float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathSinF64
  space: core
  class_name: Math
  method_name: sin
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::SinF64
  impl_signature:
    ret: "double"
    args: ["double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathCosF32
  space: core
  class_name: Math
  method_name: fcos
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::CosF32
  impl_signature:
    ret: "float"
    args: ["float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathCosF64
  space: core
  class_name: Math
  method_name: cos
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::CosF64
  impl_signature:
    ret: "double"
    args: ["double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathPowF32
  space: core
  class_name: Math
  method_name: fpow
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32", "f32"]
  static: true
  impl: panda::intrinsics::PowF32
  impl_signature:
    ret: "float"
    args: ["float", "float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathPowF64
  space: core
  class_name: Math
  method_name: pow
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64", "f64"]
  static: true
  impl: panda::intrinsics::PowF64
  impl_signature:
    ret: "double"
    args: ["double", "double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathSqrtF32
  space: core
  class_name: Math
  method_name: fsqrt
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::SqrtF32
  impl_signature:
    ret: "float"
    args: ["float"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: MathSqrtF64
  space: core
  class_name: Math
  method_name: sqrt
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::SqrtF64
  impl_signature:
    ret: "double"
    args: ["double"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintString
  space: core
  class_name: IO
  method_name: printString
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::PrintString
  impl_signature:
    ret: "void"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintF32
  space: core
  class_name: IO
  method_name: printF32
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["f32"]
  static: true
  impl: panda::intrinsics::PrintF32
  impl_signature:
    ret: "void"
    args: ["float"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintF64
  space: core
  class_name: IO
  method_name: printF64
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["f64"]
  static: true
  impl: panda::intrinsics::PrintF64
  impl_signature:
    ret: "void"
    args: ["double"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintI32
  space: core
  class_name: IO
  method_name: printI32
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["i32"]
  static: true
  impl: panda::intrinsics::PrintI32
  impl_signature:
    ret: "void"
    args: ["int32_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintU32
  space: core
  class_name: IO
  method_name: printU32
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["u32"]
  static: true
  impl: panda::intrinsics::PrintU32
  impl_signature:
    ret: "void"
    args: ["uint32_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintI64
  space: core
  class_name: IO
  method_name: printI64
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["i64"]
  static: true
  impl: panda::intrinsics::PrintI64
  impl_signature:
    ret: "void"
    args: ["int64_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: IOPrintU64
  space: core
  class_name: IO
  method_name: printU64
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["u64"]
  static: true
  impl: panda::intrinsics::PrintU64
  impl_signature:
    ret: "void"
    args: ["uint64_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: SystemCompileMethod
  space: core
  class_name: System
  method_name: compileMethod
  safepoint_after_call: false
  private: true
  signature:
    ret: "u8"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::CompileMethod
  impl_signature:
    ret: "uint8_t"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: SystemExit
  space: core
  class_name: System
  method_name: exit
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["i32"]
  static: true
  impl: panda::intrinsics::SystemExit
  impl_signature:
    ret: "void"
    args: ["int32_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: SystemNanoTime
  space: core
  class_name: System
  method_name: nanoTime
  safepoint_after_call: false
  private: false
  signature:
    ret: "i64"
    args: []
  static: true
  impl: panda::intrinsics::NanoTime
  impl_signature:
    ret: "int64_t"
    args: []
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: SystemAssert
  space: core
  class_name: System
  method_name: assert
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["u1"]
  static: true
  impl: panda::intrinsics::Assert
  impl_signature:
    ret: "void"
    args: ["uint8_t"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: SystemAssertPrint
  space: core
  class_name: System
  method_name: assertPrint
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["u1", "panda.String"]
  static: true
  impl: panda::intrinsics::AssertPrint
  impl_signature:
    ret: "void"
    args: ["uint8_t", "coretypes::String *"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToI32
  space: core
  class_name: Convert
  method_name: stringToI32
  safepoint_after_call: false
  private: false
  signature:
    ret: "i32"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToI32
  impl_signature:
    ret: "int32_t"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToU32
  space: core
  class_name: Convert
  method_name: stringToU32
  safepoint_after_call: false
  private: false
  signature:
    ret: "u32"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToU32
  impl_signature:
    ret: "uint32_t"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToI64
  space: core
  class_name: Convert
  method_name: stringToI64
  safepoint_after_call: false
  private: false
  signature:
    ret: "i64"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToI64
  impl_signature:
    ret: "int64_t"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToU64
  space: core
  class_name: Convert
  method_name: stringToU64
  safepoint_after_call: false
  private: false
  signature:
    ret: "u64"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToU64
  impl_signature:
    ret: "uint64_t"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToF32
  space: core
  class_name: Convert
  method_name: stringToF32
  safepoint_after_call: false
  private: false
  signature:
    ret: "f32"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToF32
  impl_signature:
    ret: "float"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ConvertStringToF64
  space: core
  class_name: Convert
  method_name: stringToF64
  safepoint_after_call: false
  private: false
  signature:
    ret: "f64"
    args: ["panda.String"]
  static: true
  impl: panda::intrinsics::ConvertStringToF64
  impl_signature:
    ret: "double"
    args: ["coretypes::String *"]
  need_decl: true
  clear_flags: ["no_dce", "no_hoist", "no_cse", "barrier", "require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectCreateNonMovable
  space: core
  class_name: Object
  method_name: createNonMovable
  safepoint_after_call: false
  private: false
  signature:
    ret: "panda.Object"
    args: ["panda.Class"]
  static: true
  impl: panda::intrinsics::ObjectCreateNonMovable
  impl_signature:
    ret: "ObjectHeader *"
    args: ["coretypes::Class *"]
  need_decl: true
  clear_flags: []
  set_flags: ["can_throw"]
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectMonitorEnter
  space: core
  class_name: Object
  method_name: monitorEnter
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object"]
  static: true
  impl: panda::intrinsics::ObjectMonitorEnter
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectMonitorExit
  space: core
  class_name: Object
  method_name: monitorExit
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object"]
  static: true
  impl: panda::intrinsics::ObjectMonitorExit
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectWait
  space: core
  class_name: Object
  method_name: Wait
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object"]
  static: true
  impl: panda::intrinsics::ObjectWait
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectTimedWait
  space: core
  class_name: Object
  method_name: TimedWait
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object", "u64"]
  static: true
  impl: panda::intrinsics::ObjectTimedWait
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *", "uint64_t"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectTimedWaitNanos
  space: core
  class_name: Object
  method_name: TimedWaitNanos
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object", "u64", "u64"]
  static: true
  impl: panda::intrinsics::ObjectTimedWaitNanos
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *", "uint64_t", "uint64_t"]
  need_decl: true
  clear_flags: []
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectNotify
  space: core
  class_name: Object
  method_name: Notify
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object"]
  static: true
  impl: panda::intrinsics::ObjectNotify
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
- name: ObjectNotifyAll
  space: core
  class_name: Object
  method_name: NotifyAll
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: ["panda.Object"]
  static: true
  impl: panda::intrinsics::ObjectNotifyAll
  impl_signature:
    ret: "void"
    args: ["ObjectHeader *"]
  need_decl: true
  clear_flags: ["require_state", "runtime_call"]
  set_flags: []
  additional_temps: 0
  codegen_arch: []
  need_nullcheck: []
# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: SlowPathEntry
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: SaveRegistersEp
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: RestoreRegistersEp
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: Unreachable
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: ["terminator"]
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: TailCall
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: ["terminator", "no_dst"]
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: InterpreterReturn
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64", "arm64", "arm32"]
  need_nullcheck: []
- name: LoadAcquireMarkWordExclusive
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["runtime_call", "require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["arm64", "arm32"]
  need_nullcheck: []
- name: StoreReleaseMarkWordExclusive
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["runtime_call", "require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["arm64", "arm32"]
  need_nullcheck: []
- name: CompareAndSetMarkWord
  space: core
  class_name: Irtoc
  method_name: 
  safepoint_after_call: false
  private: false
  signature:
    ret: "void"
    args: []
  static: true
  clear_flags: ["runtime_call", "require_state"]
  set_flags: []
  additional_temps: 0
  codegen_func: CreateIrtocIntrinsic
  codegen_arch: ["amd64"]
  need_nullcheck: []
