/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

enum class Format : uint8_t {
% Panda::formats.each do |fmt|
    <%= fmt.pretty.upcase %>,
% end
};

% additional_deprecated_opcodes = ["JNSTRICTEQUNDEFINED",
%                                 "JSTRICTEQUNDEFINED",
%                                 "JNEUNDEFINED",
%                                 "JEQUNDEFINED",
%                                 "JNSTRICTEQNULL",
%                                 "JSTRICTEQNULL",
%                                 "JNENULL",
%                                 "JEQNULL",
%                                 "JNSTRICTEQZ",
%                                 "JSTRICTEQZ",
%                                 "STTOGLOBALRECORD",
%                                 "STCONSTTOGLOBALRECORD",
%                                 "CREATEREGEXPWITHLITERAL",
%                                 "CLOSEITERATOR"]

% replaced_opcodes = ["JNSTRICTEQ",
%                    "JSTRICTEQ",
%                    "JNE",
%                    "JEQ"]

% skipped_opcodes = additional_deprecated_opcodes + replaced_opcodes

enum class Opcode {
% last_name = ""
% Panda::instructions.each do |i|
%   if !(i.opcode.upcase.include? "DEPRECATED_") && !(skipped_opcodes.include? i.mnemonic.upcase)
    <%= i.opcode.upcase %> = <%= i.opcode_idx %>,
%     last_name = i.opcode.upcase
%   end
% end
    LAST = <%= last_name %>
};

enum Flags : uint32_t {
% Panda::properties.each_with_index do |f, i|
    <%= f.tag.upcase %> = <%= format("0x%x", 1 << i) %>,
% end
};

enum Exceptions : uint32_t {
% Panda::exceptions.each_with_index do |f, i|
    <%= f.tag.upcase %> = <%= format("0x%x", 1 << i) %>,
% end
};
