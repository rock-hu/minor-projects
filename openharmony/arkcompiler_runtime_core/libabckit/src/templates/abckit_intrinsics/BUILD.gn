# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/static_core/ark_config.gni")
import("//arkcompiler/runtime_core/static_vm_config.gni")

intrinsics_compiler_gen_dir = get_label_info(
        "$ark_root/compiler:libarkcompiler_intrinsics_gen_inl_get_intrinsics_names_inl",
        "target_gen_dir")
isa_gen_dir = get_label_info("$ark_root/isa:isa_combine", "target_gen_dir")
ark_gen("ark_gen_libabckit") {
  data = [
    "../../abckit_compiler_intrinsics.yaml",
    "$isa_gen_dir/isa.yaml",
  ]
  template_files = [ "inst_builder_abckit_intrinsics.inc.erb" ]
  sources = "."
  api = [
    "$ark_root/compiler/optimizer/templates/intrinsics/compiler_intrinsics.rb",
    "$ark_root/isa/isapi.rb",
  ]
  extra_dependencies = [
    "$ark_root/isa:isa_combine",
    "$ark_root/runtime:arkruntime_gen_intrinsics_yaml",
    "../dyn_intrinsics:isa_gen_libabckit_dyn_intrinsics_opcodes_inc",
    ":ark_gen_libabckit_abckit_intrinsics_inl",
  ]
  requires = [ "$ark_root/libpandabase/utils.rb" ]
  destination = "$intrinsics_compiler_gen_dir/generated"
}

ark_gen("ark_gen_libabckit") {
  data = [
    "../../abckit_compiler_intrinsics.yaml",
    "$isa_gen_dir/isa.yaml",
  ]
  template_files = [ "abckit_intrinsics_opcodes.inc.erb" ]
  sources = "."
  api = [
    "$ark_root/compiler/optimizer/templates/intrinsics/compiler_intrinsics.rb",
    "$ark_root/isa/isapi.rb",
  ]
  extra_dependencies = [
    "$ark_root/isa:isa_combine",
    "$ark_root/runtime:arkruntime_gen_intrinsics_yaml",
    "../dyn_intrinsics/:isa_gen_libabckit_dyn_intrinsics_opcodes_inc",
  ]
  requires = [ "$ark_root/libpandabase/utils.rb" ]
  destination = "$intrinsics_compiler_gen_dir/generated"
}

bco_gen_dir = get_label_info("$ark_root/bytecode_optimizer:libarktsbytecodeopt",
                             "target_gen_dir")
ark_gen("ark_gen_libabckit") {
  data = [
    "../../abckit_compiler_intrinsics.yaml",
    "$isa_gen_dir/isa.yaml",
  ]
  template_files = [
    "abckit_intrinsics_vreg_width.h.erb",
    "abckit_intrinsics.inl.erb",
  ]
  sources = "."
  api = [
    "$ark_root/compiler/optimizer/templates/intrinsics/compiler_intrinsics.rb",
    "$ark_root/isa/isapi.rb",
  ]
  extra_dependencies = [
    "$ark_root/isa:isa_combine",
    "$ark_root/runtime:arkruntime_gen_intrinsics_yaml",
    "../dyn_intrinsics:isa_gen_libabckit_dyn_intrinsics_cases_inc",
  ]
  requires = [ "$ark_root/libpandabase/utils.rb" ]
  destination = "$bco_gen_dir/generated"
}
