/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file by gen_null_arg_tests.rb script -- DO NOT EDIT!

#include "libabckit/include/c/abckit.h"
#include "libabckit/include/c/metadata_core.h"
#include "libabckit/include/c/extensions/arkts/metadata_arkts.h"
#include "libabckit/include/c/extensions/js/metadata_js.h"
#include "libabckit/include/c/ir_core.h"
#include "libabckit/include/c/isa/isa_dynamic.h"
#include "libabckit/src/include_v2/c/isa/isa_static.h"

#include "helpers/helpers.h"
#include "helpers/helpers_nullptr.h"

#include <gtest/gtest.h>

namespace libabckit::test {

static auto g_arktsInspectApiImp = AbckitGetArktsInspectApiImpl(ABCKIT_VERSION_RELEASE_1_0_0);

class LibAbcKitNullptrTestsArktsInspectApiImpl0 : public ::testing::Test {};

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsAnnotationElementToCoreAnnotationElement,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsAnnotationElementToCoreAnnotationElement)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsAnnotationElementToCoreAnnotationElement);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsAnnotationInterfaceFieldToCoreAnnotationInterfaceField,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsAnnotationInterfaceFieldToCoreAnnotationInterfaceField)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsAnnotationInterfaceFieldToCoreAnnotationInterfaceField);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsAnnotationInterfaceToCoreAnnotationInterface,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsAnnotationInterfaceToCoreAnnotationInterface)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsAnnotationInterfaceToCoreAnnotationInterface);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsAnnotationToCoreAnnotation,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsAnnotationToCoreAnnotation)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsAnnotationToCoreAnnotation);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsClassToCoreClass,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsClassToCoreClass)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsClassToCoreClass);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsExportDescriptorToCoreExportDescriptor,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsExportDescriptorToCoreExportDescriptor)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsExportDescriptorToCoreExportDescriptor);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsFunctionToCoreFunction,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsFunctionToCoreFunction)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsFunctionToCoreFunction);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsImportDescriptorToCoreImportDescriptor,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsImportDescriptorToCoreImportDescriptor)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsImportDescriptorToCoreImportDescriptor);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsModuleToCoreModule,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsModuleToCoreModule)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsModuleToCoreModule);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsNamespaceToCoreNamespace,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsNamespaceToCoreNamespace)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsNamespaceToCoreNamespace);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::arktsV1NamespaceGetConstructor,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, arktsV1NamespaceGetConstructor)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->arktsV1NamespaceGetConstructor);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreAnnotationElementToArktsAnnotationElement,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreAnnotationElementToArktsAnnotationElement)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreAnnotationElementToArktsAnnotationElement);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreAnnotationInterfaceFieldToArktsAnnotationInterfaceField,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreAnnotationInterfaceFieldToArktsAnnotationInterfaceField)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreAnnotationInterfaceFieldToArktsAnnotationInterfaceField);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreAnnotationInterfaceToArktsAnnotationInterface,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreAnnotationInterfaceToArktsAnnotationInterface)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreAnnotationInterfaceToArktsAnnotationInterface);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreAnnotationToArktsAnnotation,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreAnnotationToArktsAnnotation)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreAnnotationToArktsAnnotation);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreClassToArktsClass,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreClassToArktsClass)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreClassToArktsClass);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreExportDescriptorToArktsExportDescriptor,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreExportDescriptorToArktsExportDescriptor)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreExportDescriptorToArktsExportDescriptor);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreFunctionToArktsFunction,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreFunctionToArktsFunction)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreFunctionToArktsFunction);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreImportDescriptorToArktsImportDescriptor,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreImportDescriptorToArktsImportDescriptor)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreImportDescriptorToArktsImportDescriptor);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreModuleToArktsModule,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreModuleToArktsModule)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreModuleToArktsModule);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::coreNamespaceToArktsNamespace,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, coreNamespaceToArktsNamespace)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->coreNamespaceToArktsNamespace);
}

// Test: test-kind=api, api=ArktsInspectApiImpl::functionIsNative,
// abc-kind=NoABC, category=negative-nullptr, extension=c
TEST_F(LibAbcKitNullptrTestsArktsInspectApiImpl0, functionIsNative)
{
    helpers_nullptr::TestNullptr(g_arktsInspectApiImp->functionIsNative);
}

}  // namespace libabckit::test
