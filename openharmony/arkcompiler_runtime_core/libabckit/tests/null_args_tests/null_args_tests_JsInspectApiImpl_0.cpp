/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file by gen_null_arg_tests.rb script -- DO NOT EDIT!

#include "libabckit/include/c/abckit.h"
#include "libabckit/include/c/metadata_core.h"
#include "libabckit/include/c/extensions/arkts/metadata_arkts.h"
#include "libabckit/include/c/extensions/js/metadata_js.h"
#include "libabckit/include/c/ir_core.h"
#include "libabckit/include/c/isa/isa_dynamic.h"
#include "libabckit/src/include_v2/c/isa/isa_static.h"

#include "helpers/helpers.h"
#include "helpers/helpers_nullptr.h"

#include <gtest/gtest.h>

namespace libabckit::test {

static auto g_jsInspectApiImp = AbckitGetJsInspectApiImpl(ABCKIT_VERSION_RELEASE_1_0_0);

class LibAbcKitNullptrTestsJsInspectApiImpl0 : public ::testing::Test {};

// Test: test-kind=api, api=JsInspectApiImpl::coreClassToJsClass,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, coreClassToJsClass)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->coreClassToJsClass);
}

// Test: test-kind=api, api=JsInspectApiImpl::coreExportDescriptorToJsExportDescriptor,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, coreExportDescriptorToJsExportDescriptor)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->coreExportDescriptorToJsExportDescriptor);
}

// Test: test-kind=api, api=JsInspectApiImpl::coreFunctionToJsFunction,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, coreFunctionToJsFunction)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->coreFunctionToJsFunction);
}

// Test: test-kind=api, api=JsInspectApiImpl::coreImportDescriptorToJsImportDescriptor,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, coreImportDescriptorToJsImportDescriptor)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->coreImportDescriptorToJsImportDescriptor);
}

// Test: test-kind=api, api=JsInspectApiImpl::coreModuleToJsModule,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, coreModuleToJsModule)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->coreModuleToJsModule);
}

// Test: test-kind=api, api=JsInspectApiImpl::jsClassToCoreClass,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, jsClassToCoreClass)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->jsClassToCoreClass);
}

// Test: test-kind=api, api=JsInspectApiImpl::jsExportDescriptorToCoreExportDescriptor,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, jsExportDescriptorToCoreExportDescriptor)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->jsExportDescriptorToCoreExportDescriptor);
}

// Test: test-kind=api, api=JsInspectApiImpl::jsFunctionToCoreFunction,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, jsFunctionToCoreFunction)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->jsFunctionToCoreFunction);
}

// Test: test-kind=api, api=JsInspectApiImpl::jsImportDescriptorToCoreImportDescriptor,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, jsImportDescriptorToCoreImportDescriptor)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->jsImportDescriptorToCoreImportDescriptor);
}

// Test: test-kind=api, api=JsInspectApiImpl::jsModuleToCoreModule,
// abc-kind=NoABC, category=negative-nullptr
TEST_F(LibAbcKitNullptrTestsJsInspectApiImpl0, jsModuleToCoreModule)
{
    helpers_nullptr::TestNullptr(g_jsInspectApiImp->jsModuleToCoreModule);
}

}  // namespace libabckit::test
