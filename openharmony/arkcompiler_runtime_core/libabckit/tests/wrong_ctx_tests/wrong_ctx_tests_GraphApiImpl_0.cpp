/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file by wrong_ctx_tests.rb script -- DO NOT EDIT!

#include "libabckit/include/c/abckit.h"
#include "libabckit/include/c/metadata_core.h"
#include "libabckit/include/c/extensions/arkts/metadata_arkts.h"
#include "libabckit/include/c/extensions/js/metadata_js.h"
#include "libabckit/include/c/ir_core.h"

#include "helpers/helpers.h"
#include "helpers/helpers_wrong_ctx.h"

#include <gtest/gtest.h>

namespace libabckit::test {

static auto g_graphApiImp = AbckitGetGraphApiImpl(ABCKIT_VERSION_RELEASE_1_0_0);

class LibAbcKitWrongCtxTestsGraphApiImpl0 : public ::testing::Test {};

// Test: test-kind=api, api=GraphApiImpl::bbCheckDominance,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, bbCheckDominance)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->bbCheckDominance);
}

// Test: test-kind=api, api=GraphApiImpl::iCheckDominance,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, iCheckDominance)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->iCheckDominance);
}

// Test: test-kind=api, api=GraphApiImpl::iInsertAfter,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, iInsertAfter)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->iInsertAfter);
}

// Test: test-kind=api, api=GraphApiImpl::bbAddInstBack,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, bbAddInstBack)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->bbAddInstBack);
}

// Test: test-kind=api, api=GraphApiImpl::iSetFunction,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, iSetFunction)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->iSetFunction);
}

// Test: test-kind=api, api=GraphApiImpl::bbAppendSuccBlock,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, bbAppendSuccBlock)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->bbAppendSuccBlock);
}

// Test: test-kind=api, api=GraphApiImpl::iInsertBefore,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, iInsertBefore)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->iInsertBefore);
}

// Test: test-kind=api, api=GraphApiImpl::iAppendInput,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, iAppendInput)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->iAppendInput);
}

// Test: test-kind=api, api=GraphApiImpl::bbAddInstFront,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, bbAddInstFront)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->bbAddInstFront);
}

// Test: test-kind=api, api=GraphApiImpl::bbInsertSuccBlock,
// abc-kind=NoABC, category=negative-file
TEST_F(LibAbcKitWrongCtxTestsGraphApiImpl0, bbInsertSuccBlock)
{
    helpers_wrong_ctx::TestWrongCtx(g_graphApiImp->bbInsertSuccBlock);
}

}  // namespace libabckit::test
