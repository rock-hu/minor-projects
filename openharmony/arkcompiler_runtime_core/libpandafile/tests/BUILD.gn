# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/ark_config.gni")
import("$ark_root/tests/test_helper.gni")

host_unittest_action("LibPandaFileTest") {
  module_out_path = module_output_path

  sources = [
    "bytecode_emitter_tests.cpp",
    "bytecode_imm_fetch_tests.cpp",
    "bytecode_jump_range_tests.cpp",
    "bytecode_rerturn_throw_tests.cpp",
    "data_protect_test.cpp",
    "debug_info_extractor_test.cpp",
    "file_format_version_test.cpp",
    "file_item_container_test.cpp",
    "file_items_test.cpp",
    "file_test.cpp",
    "pgo_test.cpp",
  ]

  configs = [
    "$ark_root:ark_config",
    "$ark_root/assembler:arkassembler_public_config",
    "$ark_root/libpandabase:arkbase_public_config",
    "$ark_root/libpandafile:arkfile_public_config",
    "$ark_root/libziparchive:arkziparchive_config",
  ]

  deps = [
    "$ark_root/assembler:libarkassembler_static",
    "$ark_root/libpandafile:libarkfile_static",
  ]
  external_deps = []
  if (ark_standalone_build) {
    deps += [ "$build_root/third_party_gn/googletest:gmock_main" ]
  } else {
    external_deps += [ "googletest:gmock_main" ]
  }

  external_deps += [
    "zlib:libz",
    sdk_libc_secshared_dep,
  ]

  cflags = [ "-DWITH_MOCK" ]
}

group("unittest") {
  testonly = true
  deps = [ ":LibPandaFileTest" ]
}

group("host_unittest") {
  testonly = true
  deps = [ ":LibPandaFileTestAction" ]
}
