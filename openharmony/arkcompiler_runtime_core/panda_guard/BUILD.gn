# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/ark_config.gni")

config("panda_guard_public_config") {
  include_dirs = [ "$ark_root/panda_guard" ]
}

panda_guard_sources = [
  "configs/guard_args_parser.cpp",
  "configs/guard_context.cpp",
  "configs/guard_graph_context.cpp",
  "configs/guard_name_cache.cpp",
  "configs/guard_options.cpp",
  "generator/name_mapping.cpp",
  "generator/order_name_generator.cpp",
  "guard4program.cpp",
  "guard_driver.cpp",
  "obfuscate/class.cpp",
  "obfuscate/entity.cpp",
  "obfuscate/file_path.cpp",
  "obfuscate/function.cpp",
  "obfuscate/graph_analyzer.cpp",
  "obfuscate/inst_obf.cpp",
  "obfuscate/instruction_info.cpp",
  "obfuscate/method.cpp",
  "obfuscate/module_record.cpp",
  "obfuscate/node.cpp",
  "obfuscate/object.cpp",
  "obfuscate/program.cpp",
  "obfuscate/property.cpp",
  "obfuscate/ui_decorator.cpp",
  "util/error.cpp",
  "util/file_util.cpp",
  "util/json_util.cpp",
  "util/string_util.cpp",
]

panda_guard_configs = [
  "$ark_root:ark_config",
  "$ark_root/libpandabase:arkbase_public_config",
  "$ark_root/assembler:arkassembler_public_config",
  "$ark_root/libpandafile:arkfile_public_config",
  "$ark_root/compiler:arkcompiler_public_config",
]

ohos_static_library("panda_guard_static") {
  sources = panda_guard_sources

  include_dirs = [ "$ark_root/abc2program" ]

  configs = panda_guard_configs

  public_configs = [ ":panda_guard_public_config" ]

  deps = [
    "$ark_root/abc2program:abc2program_frontend_static",
    "$ark_root/assembler:libarkassembler_frontend_static",
    "$ark_root/compiler:libarkcompiler_frontend_static",
    "$ark_root/libpandabase:libarkbase_frontend_static",
    "$ark_root/libpandafile:libarkfile_frontend_static",
  ]

  external_deps = [ sdk_libc_secshared_dep ]

  part_name = "runtime_core"
  subsystem_name = "arkcompiler"
}

ohos_executable("panda_guard") {
  sources = [ "guard_main.cpp" ]

  configs = panda_guard_configs

  deps = [ ":panda_guard_static" ]

  install_enable = false

  part_name = "runtime_core"
  subsystem_name = "arkcompiler"
}

if (is_linux || (is_build_sdk && is_ohos)) {
  ohos_copy("panda_guard_build_ets") {
    deps = [ ":panda_guard" ]
    sources = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard" ]
    outputs = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard-ets" ]
    module_source_dir = "${root_out_dir}/arkcompiler/runtime_core"
    module_install_name = "panda_guard"

    part_name = "runtime_core"
    subsystem_name = "arkcompiler"
  }
}

if (is_mingw) {
  ohos_copy("panda_guard_build_win_ets") {
    deps = [ ":panda_guard" ]
    sources = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard.exe" ]
    outputs = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard-win-ets" ]
    module_source_dir = "${root_out_dir}/arkcompiler/runtime_core"
    module_install_name = "panda_guard.exe"

    part_name = "runtime_core"
    subsystem_name = "arkcompiler"
  }
}

if (is_mac) {
  ohos_copy("panda_guard_build_mac_ets") {
    deps = [ ":panda_guard" ]
    sources = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard" ]
    outputs = [ "${root_out_dir}/arkcompiler/runtime_core/panda_guard-mac-ets" ]
    module_source_dir = "${root_out_dir}/arkcompiler/runtime_core"
    module_install_name = "panda_guard"

    part_name = "runtime_core"
    subsystem_name = "arkcompiler"
  }
}
