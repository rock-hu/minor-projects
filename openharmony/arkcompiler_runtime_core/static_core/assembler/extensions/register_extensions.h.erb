/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef PANDA_ASSEMBLER_EXTENSIONS_REGISTER_EXTENSIONS_H
#define PANDA_ASSEMBLER_EXTENSIONS_REGISTER_EXTENSIONS_H

#include "extensions/extensions.h"

% Common::each_plugin_option "Metadatas" do |metadatas|
%   metadatas.each_value do |new_class_opts|
// NOLINTNEXTLINE(readability-duplicate-include)
#include "<%= new_class_opts["header_path"] %>"
%   end
% end

namespace ark::pandasm::extensions {

// NOLINTBEGIN(misc-definitions-in-headers)

%["RecordMetadata", "FieldMetadata", "FunctionMetadata", "ParamMetadata"].each do |metadata|
/* static */
std::unique_ptr<<%= metadata %>> MetadataExtension::Create<%= metadata %>([[maybe_unused]] ark::panda_file::SourceLang lang)
{
%   Common::each_plugin_suboption("Metadatas", metadata) do |new_class_opts, _, plugin_opts|
    if (lang == <%= plugin_opts["lang_enum"] %>) {
        return std::make_unique <<%= new_class_opts["new_class_name"] %>>();
    }
%   end

    return std::make_unique<<%= metadata %>>();
}

% end

// NOLINTEND(misc-definitions-in-headers)

}  // namespace ark::pandasm::extensions

#endif  // PANDA_ASSEMBLER_EXTENSIONS_REGISTER_EXTENSIONS_H
