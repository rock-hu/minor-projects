/**
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file -- DO NOT EDIT!

// NOLINTNEXTLINE(readability-function-size)
inline std::string GetIntrinsicName(RuntimeInterface::IntrinsicId intrinsic) {
    switch (intrinsic)
    {
% Compiler::intrinsics.each do |intrinsic|
    case RuntimeInterface::IntrinsicId::<%= intrinsic.entrypoint_name %>:
        return "<%= intrinsic.name %>";
% end
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_8:
        return "LIB_CALL_MEMSET_8";
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_16:
        return "LIB_CALL_MEMSET_16";
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_32:
        return "LIB_CALL_MEMSET_32";
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_64:
        return "LIB_CALL_MEMSET_64";
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_F32:
        return "LIB_CALL_MEMSET_F32";
    case RuntimeInterface::IntrinsicId::LIB_CALL_MEMSET_F64:
        return "LIB_CALL_MEMSET_F64";
#ifdef ENABLE_LIBABCKIT
#include "get_dyn_intrinsics_names.inc"
#endif
    default:
        return "";
    }
}

