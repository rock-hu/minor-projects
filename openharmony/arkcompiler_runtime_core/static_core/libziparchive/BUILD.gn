# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/static_core/ark_config.gni")
if (ark_standalone_build) {
  import("$build_root/ark.gni")
} else {
  import("//build/ohos.gni")
}

config("arkziparchive_config") {
  include_dirs = [
    "$ark_root/libziparchive",
    "$ark_root/libpandabase",
  ]

  if (ark_standalone_build) {
    include_dirs += [ "//third_party/zlib/contrib/minizip" ]
  }
}

ohos_source_set("libarktsziparchive_static") {
  sources = [ "zip_archive.cpp" ]

  public_configs = [
    ":arkziparchive_config",
    "$ark_root:ark_config",
    "$ark_root/libpandabase:arkbase_public_config",
  ]

  deps = [ "$ark_root/libpandabase:libarktsbase" ]

  if (ark_static_standalone_build) {
    public_configs += [ zlib_public_config ]
    deps += [ zlib_dep ]
  }

  external_deps = [
    sdk_libc_secshared_dep,
    zlib_dep,
  ]

  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

ohos_shared_library("libarktsziparchive") {
  deps = [ ":libarktsziparchive_static" ]

  if (!is_mingw && !is_mac) {
    output_extension = "so"
  }
  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

ohos_source_set("libarktsziparchive_frontend_set_static") {
  sources = [ "zip_archive.cpp" ]

  public_configs = [
    ":arkziparchive_config",
    "$ark_root:ark_config",
    "$ark_root/libpandabase:arkbase_public_config",
  ]

  deps = [ "$ark_root/libpandabase:logger_enum_gen_h" ]

  if (ark_static_standalone_build || ark_standalone_build) {
    public_configs += [ zlib_public_config ]
  }

  if (ark_static_standalone_build) {
    deps += [
      sdk_libc_secshared_dep,
      zlib_dep,
    ]
  }

  external_deps = [
    sdk_libc_secshared_dep,
    zlib_dep,
  ]

  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

ohos_static_library("libarktsziparchive_frontend_static") {
  deps = [ ":libarktsziparchive_frontend_set_static" ]
  part_name = ark_part_name
  subsystem_name = ark_subsystem_name
}
