# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

  ets: |-
    % name = inst.opcode.upcase.split('_')[1]
    % case name
    % when "LAUNCH"
    %   is_range = inst.opcode.include? 'range'
    %   is_virtual = inst.opcode.include? 'virt'
    %   acc_read = inst.acc_read?
    BuildLaunch<Opcode::<%= is_virtual ? 'CallLaunchVirtual' : 'CallLaunchStatic' %>, <%= is_range ? 'true' : 'false' %>, <%= acc_read %>>(instruction);
    % when "LDOBJ"
    BuildLdObjByName(instruction, <%= get_type(inst.dtype) %>);
    % when "STOBJ"
    BuildStObjByName(instruction, <%= get_type(inst.type(0)) %>);
    % when "LDUNDEFINED"
    UpdateDefinitionAcc(graph_->GetOrCreateUndefinedInst());
    % when "MOVUNDEFINED"
    UpdateDefinition(instruction->GetVReg<<%=inst.get_format%>, 0>(), graph_->GetOrCreateUndefinedInst());
    % when "ISUNDEFINED"
    auto undef_inst = graph_->GetOrCreateUndefinedInst();
    auto cmp_inst = graph_->CreateInstCompare(DataType::BOOL, GetPc(instruction->GetAddress()), GetDefinitionAcc(),
                                              undef_inst, DataType::REFERENCE, ConditionCode::CC_EQ);
    AddInstruction(cmp_inst);
    UpdateDefinitionAcc(cmp_inst);
    % when "EQUALS"
    BuildEquals(instruction);
    % else
    UNREACHABLE();
    % end
