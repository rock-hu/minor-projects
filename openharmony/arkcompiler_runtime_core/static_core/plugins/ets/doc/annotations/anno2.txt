..
    Copyright (c) 2021-2024 Huawei Device Co., Ltd.
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

Annotations - 2
###############



.. _Built-in Annotations:

Built-in Annotations
********************

A set of *built-in annotations* can be added to some future language version.
Such annotation will be used by the compiler. 

A list of built-in annotations will be defined later.
As an example of such annotation, the annotation ``@Deprecated``
is briefly described below.

|

.. _@Deprecated:

@Deprecated
===========

The annotation ``@Deprecated`` indicates that the annotated declaration is
deprecated, and must not be used any longer:

.. code-block:: typescript
   :linenos:

    @Deprecated
    function Foo() {/*body*/}

The annotation ``@Deprecated`` has no argument.

|

.. _Plugin-Defined Annotations:

Plugin-Defined Annotations
**************************

A notion of *plugin-defined annotations* can be added to some future language version.

Various language extensions implemented as compiler plugins can define their
specific sets of annotations.

An example of such extensions is ArkUI that defines its own set of specific
annotations (e.g., ``@Component`` or ``@Link``).

.. code-block:: abnf

    pluginDefinedAnnotationDeclaration:
        '@type' Identifier StringLiteral?
        ;

The declaration above defines the name and, optionally, the string literal that
denotes the plugin name of the annotation.

A language extension commonly defines a list of exported *plugin-defined
annotations* in a module that is imported, explicitly or implicitly, to any
source code by using this extension. This common case allows using the defined
annotation:

.. code-block:: typescript
   :linenos:

    // module ui_annotations
    export @type Component
    export @type State

    // other module:
    
    import * from "ui_annotations"
    
    @Component
    struct PersonView {}

**TBD**:

- Does plugin define syntax of annotation usage syntax?
- Or do we want to define fields for plugin-defined annotations?
- Implicit import *  - is it enough

|



