' Copyright (c) 2025 Huawei Device Co., Ltd.
' Licensed under the Apache License, Version 2.0 (the "License");
' you may not use this file except in compliance with the License.
' You may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.

@startuml
box "Worker thread #1" #LightBlue
participant "coroutine A"
participant "coroutine C"
participant "Thread #1"
end box

box "Worker thread #2" #Orange
participant "coroutine B"
participant "coroutine D"
participant "Thread #2"
end box

"coroutine A" -> "Thread #1": start execution
note left
    // coroutine A could acquire locks A and B
end note
"coroutine C" -> "Thread #1": added to execution list for this Thread
note right
    // coroutine C could  release lock A
end note
"coroutine B" --> "Thread #2": start execution
note left
    // coroutine B could acquire locks A and B
end note
"coroutine D" --> "Thread #2": added to execution list for this Thread
note right
    // coroutine D could release lock B
end note
"Thread #1" -> "Thread #1": acquire Lock A
"Thread #2" -> "Thread #2": acquire Lock B
"Thread #1" -> "Thread #1": try to acquire Lock B, locked via pthread_mutex_lock
"Thread #2" -> "Thread #2": try to acquire Lock A, locked via pthread_mutex_lock
"Thread #1" -> "Thread #1"
note left #red
    Thread #1 can't be unlocked because coroutine D can't be scheduled 
end note
"Thread #2" -> "Thread #2"
note left #red
    Thread #2 can't be unlocked because coroutine C can't be scheduled 
end note
@enduml