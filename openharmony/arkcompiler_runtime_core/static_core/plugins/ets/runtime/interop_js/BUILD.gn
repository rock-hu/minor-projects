# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/static_core/ark_config.gni")

if (ark_standalone_build) {
  import("$build_root/ark.gni")
} else {
  import("//build/ohos.gni")
}

if (is_ohos && is_standard_system) {
  ohos_prebuilt_etc("etsstdlib_install") {
    deps = [ "$ark_root/plugins/ets:etsstdlib" ]
    stdlib_dir =
        get_label_info("$ark_root/plugins/ets:etsstdlib", "target_gen_dir")
    source = "$stdlib_dir/etsstdlib.abc"
    part_name = ark_part_name
    subsystem_name = ark_subsystem_name
  }
}

ark_gen_file("interop_intrinsic_kinds_h") {
  template_file =
      "$ark_root/plugins/ets/compiler/optimizer/interop_intrinsic_kinds.h.erb"
  data = [ "$target_gen_dir/../../../../runtime/intrinsics.yaml" ]
  api = [
    "$ark_root/compiler/optimizer/templates/intrinsics/compiler_intrinsics.rb",
  ]
  output_file =
      "$target_gen_dir/../../compiler/generated/interop_intrinsic_kinds.h"
  extra_dependencies = [ "$ark_root/runtime:arkruntime_gen_intrinsics_yaml" ]
}

ohos_source_set("ets_interop_js_napi_static") {
  configs = [
    "$ark_root:ark_config",
    "$ark_root/runtime:arkruntime_public_config",
    ":interop_js_public_config",
  ]

  sources = [ "ets_vm_plugin.cpp" ]

  deps = [
    ":interop_intrinsic_kinds_h",
    "$ark_root/compiler:libarktscompiler",
    "$ark_root/libpandabase:libarktsbase",
    "$ark_root/runtime:libarkruntime",
  ]

  if (is_ohos && is_standard_system) {
    defines = [ "PANDA_OHOS_USE_INNER_HILOG" ]
    deps += [ ":etsstdlib_install" ]
    external_deps = [
      "hilog:libhilog",
      "libuv:uv",
      "napi:ace_napi",
      sdk_libc_secshared_dep,
    ]
  } else if (ark_standalone_build && ark_ets_hybrid) {
    deps += [
      "$ark_third_party_root/libuv:uv",
      "$arkui_root/napi:ace_napi",
    ]
  }
  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

ohos_shared_library("ets_interop_js_napi") {
  deps = [ ":ets_interop_js_napi_static" ]
  relative_install_dir = "module"
  part_name = ark_part_name
  subsystem_name = "$ark_subsystem_name"
}

config("interop_js_public_config") {
  include_dirs = [ "$arkplatform_include" ]
  defines = []
  if (ark_ets_hybrid) {
    defines += [ "PANDA_JS_ETS_HYBRID_MODE" ]
  } else if (ark_standalone_build || ark_static_standalone_build) {
    node_version = "v18.13.0"
    distro = "linux-x64"

    include_dirs += [ "$ark_root/third_party/nodejs/node-${node_version}-${distro}/include/node" ]
  }
}
