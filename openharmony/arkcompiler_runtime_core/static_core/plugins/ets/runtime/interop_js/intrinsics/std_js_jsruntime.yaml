# Copyright (c) 2023-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

coretypes:
- managed_class: std.core.Object
  mirror_class: ark::ets::EtsObject

- managed_class: std.core.Class
  mirror_class: ark::ets::EtsClass

- managed_class: std.core.String
  mirror_class: ark::ets::EtsString

- managed_class: std.interop.js.JSValue
  mirror_class: ark::ets::interop::js::JSValue

- managed_class: escompat.BigInt
  mirror_class: ark::ets::EtsBigInt

- managed_class: std.core.Type
  mirror_class: ark::ets::EtsTypeAPIType

- managed_class: escompat.ArrayBuffer
  mirror_class: ark::ets::EtsEscompatArrayBuffer

- managed_class: std.interop.ESValue
  mirror_class: ark::ets::interop::js::ESValue

- managed_class: std.core.RuntimeLinker
  mirror_class: ark::ets::EtsRuntimeLinker

intrinsics_namespace: ark::ets::interop::js::intrinsics


############################
# std.interop.js.JSRuntime #
############################
intrinsics:
  - name: JSRuntimeFinalizationRegistryCallback
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: finalizationRegistryCallback
    static: true
    signature:
      ret: void
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeFinalizationRegistryCallbackIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeNewJSValueDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueDouble
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ f64 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueDoubleIntrinsic
    peephole_func: PeepholeJSRuntimeNewJSValueDouble
    clear_flags: [can_throw, heap_inv, no_dce, no_cse]

  - name: JSRuntimeNewJSValueBoolean
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueBoolean
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ u1 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueBooleanIntrinsic
    peephole_func: PeepholeJSRuntimeNewJSValueBoolean
    clear_flags: [can_throw, heap_inv, no_dce, no_cse]

  - name: JSRuntimeNewJSValueString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueString
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueStringIntrinsic
    peephole_func: PeepholeJSRuntimeNewJSValueString
    clear_flags: [can_throw, heap_inv, no_dce, no_cse]

  - name: JSRuntimeNewJSValueObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueObject
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueObjectIntrinsic
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeIsJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: isJSValue
    static: true
    signature:
      ret: u1
      args: [ std.core.Object ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeIsJSValueIntrinsic
    clear_flags: [can_throw, heap_inv, no_cse]    

  - name: JSRuntimeNewJSValueBigInt
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: newJSValueBigInt
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ escompat.BigInt ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeNewJSValueBigIntIntrinsic
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeGetValueDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueDoubleIntrinsic
    peephole_func: PeepholeJSRuntimeGetValueDouble
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeGetValueBoolean
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueBoolean
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueBooleanIntrinsic
    peephole_func: PeepholeJSRuntimeGetValueBoolean
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeGetValueString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueString
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueStringIntrinsic
    peephole_func: PeepholeJSRuntimeGetValueString
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeGetValueObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getValueObject
    static: true
    signature:
      ret: std.core.Object
      args: [ std.interop.js.JSValue, std.core.Class ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetValueObjectIntrinsic
    clear_flags: [can_throw, heap_inv, no_cse]

  - name: JSRuntimeGetPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyJSValue
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyJSValueIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetPropertyJSValueByKey
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyJSValue
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyJSValueyByKeyIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetPropertyDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyDoubleIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetPropertyString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyString
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyStringIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetPropertyBoolean
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getPropertyBoolean
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyBooleanIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeSetPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyJSValue
    static: true
    signature:
      ret: void
      args: [ std.interop.js.JSValue, std.core.String, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyJSValueIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeSetElementJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setElementJSValue
    static: true
    signature:
      ret: void
      args: [ std.interop.js.JSValue, i32, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetElementJSValueIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeSetPropertyDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyDouble
    static: true
    signature:
      ret: void
      args: [ std.interop.js.JSValue, std.core.String, f64 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyDoubleIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeSetPropertyString
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyString
    static: true
    signature:
      ret: void
      args: [ std.interop.js.JSValue, std.core.String, std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyStringIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeSetPropertyBoolean
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: setPropertyBoolean
    static: true
    signature:
      ret: void
      args: [ std.interop.js.JSValue, std.core.String, u1 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeSetPropertyBooleanIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetElementJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getElementJSValue
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, i32 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetElementJSValueIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetElementDouble
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getElementDouble
    static: true
    signature:
      ret: f64
      args: [ std.interop.js.JSValue, i32 ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetElementDoubleIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetUndefined
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getUndefined
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetUndefinedIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetNull
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getNull
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetNullIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeGetGlobal
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getGlobal
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetGlobalIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeCreateObject
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: createObject
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeCreateObjectIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeCreateArray
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: createArray
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeCreateArrayIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeInstantiate
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: instantiate
    static: true
    signature:
      ret: std.interop.js.JSValue
      args:
        - std.interop.js.JSValue
        - std.interop.js.JSValue[]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInstantiateIntrinsic
    clear_flags: []

  - name: JSRuntimeInstanceOf
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: instanceOfStaticType
    static: true
    signature:
      ret: u1
      args:
        - std.interop.js.JSValue
        - std.core.Type
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInstanceOfStaticTypeIntrinsic
    clear_flags: []

  - name: JSRuntimeInstanceOfDynamic
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: instanceOfDynamic
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInstanceOfDynamicIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeInstanceOfStatic
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: instanceOfStatic
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.core.Class ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInstanceOfStaticIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeInitJSCallClass
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: __initJSCallClass
    static: true
    signature:
      ret: u1
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInitJSCallClassIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeInitJSNewClass
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: __initJSNewClass
    static: true
    signature:
      ret: u1
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInitJSNewClassIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeLoadModule
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: loadModule
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.core.String ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeLoadModuleIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeStrictEqual
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: strictEqual
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeStrictEqualIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: JSRuntimeHasProperty
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: hasProperty
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.core.String]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeHasPropertyIntrinsic
    clear_flags: []

  - name: JSRuntimeGetProperty
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: getProperty
    static: true
    signature:
      ret: std.interop.js.JSValue
      args: [ std.interop.js.JSValue, std.interop.js.JSValue]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeGetPropertyIntrinsic
    clear_flags: []

  - name: JSRuntimeHasPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: hasPropertyJSValue
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeHasPropertyJSValueIntrinsic
    clear_flags: []

  - name: JSRuntimeHasElement
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: hasElement
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, i32]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeHasElementIntrinsic
    clear_flags: []

  - name: JSRuntimeHasOwnProperty
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: hasOwnProperty
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.core.String]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeHasOwnPropertyIntrinsic
    clear_flags: []

  - name: JSRuntimeHasOwnPropertyJSValue
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: hasOwnPropertyJSValue
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue, std.interop.js.JSValue]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeHasOwnPropertyJSValueIntrinsic
    clear_flags: []

  - name: JSRuntimeTypeOf
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: typeOf
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeTypeOfIntrinsic
    clear_flags: []

  - name: JSRuntimeIsPromise
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: isPromise
    static: true
    signature:
      ret: u1
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeIsPromiseIntrinsic
    clear_flags: []

  - name: JSRuntimeInvoke
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: invoke
    static: true
    signature:
      ret: std.interop.js.JSValue
      args:
        - std.interop.js.JSValue
        - std.interop.js.JSValue
        - std.interop.js.JSValue[]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeInvokeIntrinsic
    clear_flags: []

  - name: JSRuntimeXgc
    space: ets
    class_name: std.interop.js.JSRuntime
    method_name: xgc
    static: true
    signature:
      ret: i64
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSRuntimeXgcStartIntrinsic
    clear_flags: []

####################
# std.js.JSValue #
####################
  - name: JSValueToString
    space: ets
    class_name: std.interop.js.JSValue
    method_name: toString
    static: false
    signature:
      ret: std.core.String
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::JSValueToStringIntrinsic
    clear_flags: [ ]

#######################
# JSON instrinsics #
#######################

  - name: JSONStringify
    space: ets
    class_name: escompat.JSON
    method_name: stringify
    static: true
    signature:
      ret: std.core.String
      args: [ std.interop.js.JSValue ]
    impl: ark::ets::interop::js::intrinsics::JSONStringifyIntrinsic
    clear_flags: [can_throw]

#######################
# Internal intrinsics #
#######################
  - name: CompilerGetJSNamedProperty
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerGetJSNamedPropertyIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [can_throw, heap_inv]

  - name: CompilerGetJSProperty
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerGetJSPropertyIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [ ]

  - name: CompilerGetJSElement
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, i32]
    impl: ark::ets::interop::js::intrinsics::CompilerGetJSElementIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [can_throw, heap_inv]

  # Not implemented, must be removed before codegen
  - name: CompilerResolveQualifiedJSCall
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, u32, u32, u32]
    interop_intrinsic_kind: creates_local
    peephole_func: PeepholeResolveQualifiedJSCall
    clear_flags: [ no_dce ]

  # Not implemented, must be removed before codegen
  - name: CompilerLoadResolvedJSFunction
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr]
    interop_intrinsic_kind: creates_local
    clear_flags: [ no_dce ]

  - name: CompilerJSCallCheck
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallCheckIntrinsic
    interop_intrinsic_kind: need_scope
    clear_flags: [can_throw, heap_inv]

  - name: CompilerJSCallFunction
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallFunctionIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [can_throw, heap_inv]

  - name: CompilerJSCallVoidFunction
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ptr, ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSCallVoidFunctionIntrinsic
    interop_intrinsic_kind: need_scope
    clear_flags: [can_throw, heap_inv]

  - name: CompilerJSNewInstance
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [ptr, u32]
      stackrange: true
    impl: ark::ets::interop::js::intrinsics::CompilerJSNewInstanceIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [can_throw, heap_inv]

  - name: CompilerCreateLocalScope
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::CompilerCreateLocalScopeIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: CompilerDestroyLocalScope
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ ]
    impl: ark::ets::interop::js::intrinsics::CompilerDestroyLocalScopeIntrinsic
    clear_flags: [can_throw, heap_inv]

  - name: CompilerLoadJSConstantPool
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: []
    impl: ark::ets::interop::js::intrinsics::CompilerLoadJSConstantPoolIntrinsic
    interop_intrinsic_kind: creates_local
    clear_flags: [no_dce ]

  - name: CompilerInitJSCallClassForCtx
    space: ets
    compiler_only: true
    signature:
      ret: void
      args: [ ptr ] # LoadAndInitClass inst
    impl: ark::ets::interop::js::intrinsics::CompilerInitJSCallClassForCtxIntrinsic
    clear_flags: [ no_cse, no_hoist ]

########################################################
# Internal intrinsics, convert ets value to napi_value #
########################################################
  - name: CompilerConvertVoidToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: []
    impl: ark::ets::interop::js::intrinsics::CompilerConvertVoidToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertU1ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u1]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU1ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertU8ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u8]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU8ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertI8ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i8]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI8ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertU16ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u16]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU16ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertI16ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i16]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI16ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertU32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertI32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertU64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [u64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertU64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertI64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [i64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertI64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertF32ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [f32]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertF32ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertF64ToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [f64]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertF64ToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertRefTypeToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [std.core.Object]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertRefTypeToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertJSValueToLocal
    space: ets
    compiler_only: true
    signature:
      ret: ptr
      args: [std.interop.js.JSValue]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertJSValueToLocalIntrinsic
    interop_intrinsic_kind: wrap
    clear_flags: [no_dce, can_throw, heap_inv]

########################################################
# Internal intrinsics, convert napi_value to ets value #
########################################################
  - name: CompilerConvertLocalToU1
    space: ets
    compiler_only: true
    signature:
      ret: u1
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU1Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToU8
    space: ets
    compiler_only: true
    signature:
      ret: u8
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU8Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToI8
    space: ets
    compiler_only: true
    signature:
      ret: i8
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI8Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToU16
    space: ets
    compiler_only: true
    signature:
      ret: u16
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU16Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToI16
    space: ets
    compiler_only: true
    signature:
      ret: i16
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI16Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToU32
    space: ets
    compiler_only: true
    signature:
      ret: u32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU32Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToI32
    space: ets
    compiler_only: true
    signature:
      ret: i32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI32Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToU64
    space: ets
    compiler_only: true
    signature:
      ret: u64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToU64Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToI64
    space: ets
    compiler_only: true
    signature:
      ret: i64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToI64Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToF32
    space: ets
    compiler_only: true
    signature:
      ret: f32
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToF32Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToF64
    space: ets
    compiler_only: true
    signature:
      ret: f64
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToF64Intrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToJSValue
    space: ets
    compiler_only: true
    signature:
      ret: std.interop.js.JSValue
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToJSValueIntrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [no_dce, can_throw, heap_inv]

  - name: CompilerConvertLocalToString
    space: ets
    compiler_only: true
    signature:
      ret: std.core.String
      args: [ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToStringIntrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

  - name: CompilerConvertLocalToRefType
    space: ets
    compiler_only: true
    signature:
      ret: std.core.Object
      args: [ptr, ptr]
    impl: ark::ets::interop::js::intrinsics::CompilerConvertLocalToRefTypeIntrinsic
    interop_intrinsic_kind: unwrap
    clear_flags: [heap_inv]

#################################
# std.interop.js.PromiseInterop #
#################################
  - name: PromiseInteropResolve
    space: ets
    class_name: std.interop.js.PromiseInterop
    method_name: resolve
    static: true
    signature:
      ret: void
      args: [std.core.Object, i64]
    impl: ark::ets::interop::js::intrinsics::PromiseInteropResolveIntrinsic
    clear_flags: [can_throw]

  - name: PromiseInteropReject
    space: ets
    class_name: std.interop.js.PromiseInterop
    method_name: reject
    static: true
    signature:
      ret: void
      args: [std.core.Object, i64]
    impl: ark::ets::interop::js::intrinsics::PromiseInteropRejectIntrinsic
    clear_flags: [can_throw]

####################
# std.js.InteropTransferHelper #
####################
  - name: InteropTransferHelperTransferArrayBufferToStaticImpl
    space: ets
    class_name: std.interop.js.InteropTransferHelper
    method_name: transferArrayBufferToStaticImpl
    static: true
    signature:
      ret: escompat.ArrayBuffer
      args: [std.interop.ESValue]
    impl: ark::ets::interop::js::intrinsics::InteropTransferHelperTransferArrayBufferToStaticImplIntrinsic
    clear_flags: []

  - name: InteropTransferHelperTransferArrayBufferToDynamicImpl
    space: ets
    class_name: std.interop.js.InteropTransferHelper
    method_name: transferArrayBufferToDynamicImpl
    static: true
    signature:
      ret: std.core.Object
      args: [escompat.ArrayBuffer]
    impl: ark::ets::interop::js::intrinsics::InteropTransferHelperTransferArrayBufferToDynamicImplIntrinsic
    clear_flags: []

  - name: InteropTransferHelperCreateDynamicTypedArray
    space: ets
    class_name: std.interop.js.InteropTransferHelper
    method_name: createDynamicTypedArray
    static: true
    signature:
      ret: std.core.Object
      args: [escompat.ArrayBuffer, i32, f64, f64]
    impl: ark::ets::interop::js::intrinsics::InteropTransferHelperCreateDynamicTypedArrayIntrinsic
    clear_flags: []

  - name: InteropTransferHelperCreateDynamicDataView
    space: ets
    class_name: std.interop.js.InteropTransferHelper
    method_name: createDynamicDataView
    static: true
    signature:
      ret: std.core.Object
      args: [escompat.ArrayBuffer, f64, f64]
    impl: ark::ets::interop::js::intrinsics::InteropTransferHelperCreateDynamicDataViewIntrinsic
    clear_flags: []

####################
# std.interop.InteropContext #
####################
  - name: InteropContextSetInteropRuntimeLinkerImpl
    space: ets
    class_name: std.interop.InteropContext
    method_name: setInteropRuntimeLinker
    static: true
    signature:
      ret: void
      args: [std.core.RuntimeLinker]
    impl: ark::ets::interop::js::intrinsics::InteropContextSetInteropRuntimeLinkerImplIntrinsic
    clear_flags: []