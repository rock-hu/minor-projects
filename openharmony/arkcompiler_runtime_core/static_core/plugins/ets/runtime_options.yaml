# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

options:
- name: boot-intrinsic-spaces
  type: arg_list_t
  default:
    - ets
  possible_values:
    - ets
  description: Load specified intrinsic spaces. This option is for fine tuning. Use load-runtimes instead
  delimiter: ":"

- name: boot-class-spaces
  type: arg_list_t
  default:
    - core
  possible_values:
    - core
    - ets
  description: Load specified class spaces. This option is for fine tuning. Use load-runtimes instead
  delimiter: ":"

- name: runtime-type
  type: std::string
  default: core
  possible_values:
    - core
    - ets
  description: Runtime type. This option is for fine tuning. Use load-runtimes instead

- name: load-runtimes
  type: arg_list_t
  default:
    - core
  possible_values:
    - core
    - ets
  description: Load specified class and intrinsic spaces and define runtime type
  delimiter: ":"

- name: run-gc-in-place
  lang:
    - ets
  type: bool
  default: false
  description: Enable/disable running GC only in place

- name: gc-type
  lang:
    - ets
  type: std::string
  default: g1-gc
  possible_values:
    - epsilon
    - epsilon-g1
    - stw
    - gen-gc
    - g1-gc
  description: Type of used GC

- name: gc-trigger-type
  lang:
    - ets
  type: std::string
  default: heap-trigger-test
  possible_values:
    - heap-trigger-test
    - heap-trigger
    - adaptive-heap-trigger
    - trigger-heap-occupancy
    - no-gc-for-start-up
    - debug
    - debug-never
  description: Type of used GC trigger

- name: skip-startup-gc-count
  lang:
    - ets
  type: uint32_t
  default: 10
  description: No stw gc count for no-gc-for-start-up

- name: gc-debug-trigger-start
  lang:
    - ets
  type: uint64_t
  default: 0
  description: First iteration to start returning true in debug trigger

- name: gc-dump-heap
  lang:
    - ets
  type: bool
  default: false
  description: Dump heap before and after GC

- name: reference-processor-enable
  type: bool
  default: true
  description: Enables/disables ReferenceProcessor

- name: gc-enable-tracing
  lang:
    - ets
  type: bool
  default: false
  description: enables/disables tracing gc

- name: native-gc-trigger-type
  lang:
    - ets
  type: std::string
  default: simple-strategy
  possible_values:
    - no-native-gc-trigger
    - simple-strategy
  description: Type of native gc trigger

- name: enable-fast-heap-verifier
  lang:
    - ets
  type: bool
  default: true
  description: Enable fast heap verifier, which is faster than ordinary heap verifier but uses more internal memory

- name: fail-on-heap-verification
  lang:
    - ets
  type: bool
  default: false
  description: if enabled then fail execution if heap verifier found heap corruption

- name: pre-gc-heap-verify-enabled
  lang:
    - ets
  type: bool
  default: false
  description: whether verify heap before GC

- name: into-gc-heap-verify-enabled
  lang:
    - ets
  type: bool
  default: false
  description: whether verify heap during GC

- name: post-gc-heap-verify-enabled
  lang:
    - ets
  type: bool
  default: false
  description: whether verify heap after GC

- name: concurrent-gc-enabled
  lang:
    - ets
  type: bool
  default: true
  description: whether concurrent GC is enabled

- name: enable-paralled-young-gc
  lang:
    - ets
  type: bool
  default: true
  description: enable-paralled-young-gc

- name: coroutine-impl
  lang:
    - ets
  type: std::string
  default: stackful
  possible_values:
    - threaded
    - stackful
  description: chooses coroutine implementation (either OS thread based emulation or full-featured fiber like)

- name: coroutine-workers-count
  lang:
    - ets
  type: uint32_t
  default: 0
  description: Number of worker threads for the NxM coroutine scheme (use 0 for auto)

- name: coroutine-js-mode
  lang:
    - ets
  type: bool
  default: false
  description: Enable JS interop mode (affects launch behaviour and async functions)

- name: coroutine-dump-stats
  lang:
    - ets
  type: bool
  default: false
  description: Collect coroutine stats and dump it at the end of the program

- name: native-library-path
  lang:
    - ets
  type: arg_list_t
  default: []
  description: Pathes to find native libraries
  delimiter: ":"
