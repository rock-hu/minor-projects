/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package std.containers;

export interface List<T> {
    push_front(e: T): void;
    pop_front(): T;
    push_back(e: T): void;
    pop_back(): T;

    size(): int;
    at(index: int): T;
    has(e: T): boolean;

    forEach(fn: (e: T): T): List<T>;
    map<U, LU implements List<U>>(fn: (e: T): U): LU;
    fold(combine: (lhs: T, rhs: T): T): T;
    foldWith<U>(combine: (lhs: U, rhs: T): U, initVal: U): U;
    filter(filterCond: (e: T): boolean): List<T>;
    sort(comparator: (lhs: T, rhs: T): boolean): List<T>;
}
