/**
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Autogenerated file. DO NOT EDIT
package std.core;

export interface Tuple {}


export class Tuple0 implements Tuple
{

    constructor() {
    }

    public override toString(): string {
        return ""
    }
}

export class Tuple1<T0> implements Tuple
{
    public $0: T0

    constructor(p0: T0) {
        this.$0 = p0
    }

    public override toString(): string {
        return "" +
            this.$0
    }
}

export class Tuple2<T0, T1> implements Tuple
{
    public $0: T0
    public $1: T1

    constructor(p0: T0, p1: T1) {
        this.$0 = p0
        this.$1 = p1
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1
    }
}

export class Tuple3<T0, T1, T2> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2

    constructor(p0: T0, p1: T1, p2: T2) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2
    }
}

export class Tuple4<T0, T1, T2, T3> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3

    constructor(p0: T0, p1: T1, p2: T2, p3: T3) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3
    }
}

export class Tuple5<T0, T1, T2, T3, T4> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4
    }
}

export class Tuple6<T0, T1, T2, T3, T4, T5> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5
    }
}

export class Tuple7<T0, T1, T2, T3, T4, T5, T6> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6
    }
}

export class Tuple8<T0, T1, T2, T3, T4, T5, T6, T7> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7
    }
}

export class Tuple9<T0, T1, T2, T3, T4, T5, T6, T7, T8> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8
    }
}

export class Tuple10<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9
    }
}

export class Tuple11<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10
    }
}

export class Tuple12<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10
    public $11: T11

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10, p11: T11) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
        this.$11 = p11
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10 + "," +
            this.$11
    }
}

export class Tuple13<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10
    public $11: T11
    public $12: T12

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10, p11: T11, p12: T12) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
        this.$11 = p11
        this.$12 = p12
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10 + "," +
            this.$11 + "," +
            this.$12
    }
}

export class Tuple14<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10
    public $11: T11
    public $12: T12
    public $13: T13

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10, p11: T11, p12: T12, p13: T13) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
        this.$11 = p11
        this.$12 = p12
        this.$13 = p13
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10 + "," +
            this.$11 + "," +
            this.$12 + "," +
            this.$13
    }
}

export class Tuple15<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10
    public $11: T11
    public $12: T12
    public $13: T13
    public $14: T14

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10, p11: T11, p12: T12, p13: T13, p14: T14) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
        this.$11 = p11
        this.$12 = p12
        this.$13 = p13
        this.$14 = p14
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10 + "," +
            this.$11 + "," +
            this.$12 + "," +
            this.$13 + "," +
            this.$14
    }
}

export class Tuple16<T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> implements Tuple
{
    public $0: T0
    public $1: T1
    public $2: T2
    public $3: T3
    public $4: T4
    public $5: T5
    public $6: T6
    public $7: T7
    public $8: T8
    public $9: T9
    public $10: T10
    public $11: T11
    public $12: T12
    public $13: T13
    public $14: T14
    public $15: T15

    constructor(p0: T0, p1: T1, p2: T2, p3: T3, p4: T4, p5: T5, p6: T6, p7: T7, p8: T8, p9: T9, p10: T10, p11: T11, p12: T12, p13: T13, p14: T14, p15: T15) {
        this.$0 = p0
        this.$1 = p1
        this.$2 = p2
        this.$3 = p3
        this.$4 = p4
        this.$5 = p5
        this.$6 = p6
        this.$7 = p7
        this.$8 = p8
        this.$9 = p9
        this.$10 = p10
        this.$11 = p11
        this.$12 = p12
        this.$13 = p13
        this.$14 = p14
        this.$15 = p15
    }

    public override toString(): string {
        return "" +
            this.$0 + "," +
            this.$1 + "," +
            this.$2 + "," +
            this.$3 + "," +
            this.$4 + "," +
            this.$5 + "," +
            this.$6 + "," +
            this.$7 + "," +
            this.$8 + "," +
            this.$9 + "," +
            this.$10 + "," +
            this.$11 + "," +
            this.$12 + "," +
            this.$13 + "," +
            this.$14 + "," +
            this.$15
    }
}

export class TupleN implements Tuple
{
    $tupleValues: Any[]

    constructor(...p: Any[]) {
        this.$tupleValues = p;
    }
}
