/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//! CHECKER       AOT IR Builder, check StringBuilder internal buffer reserve
//! SKIP_IF       @architecture == "arm32"
//! RUN_PAOC      options: "--compiler-regex='.*reserve[0-9]*' --compiler-inlining=true"
//!
//! METHOD        "ETSGLOBAL::reserve1"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::reserve2"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve3"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve4"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve5"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=5)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=5)"
//!
//! METHOD        "ETSGLOBAL::nested_loop_reserve6"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=14)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=14)"
//!
//! METHOD        "ETSGLOBAL::if_reserve7"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::if_reserve8"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::if_loop_reserve9"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=6)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=6)"
//!
//! METHOD        "ETSGLOBAL::loop_if_reserve10"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve11"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve12"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve13"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::switch_reserve14"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::switch_reserve15"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=10)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=10)"
//!
//! METHOD        "ETSGLOBAL::reverse_loop_reserve16"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step2_reverse_loop_reserve17"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step2_reverse_loop_reserve18"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step5_loop_reserve19"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=5)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=5)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_reserve20"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_if_reserve21"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_if_reserve22"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_loop_reserve23"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=19)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=19)"
//!
//! METHOD        "ETSGLOBAL::types_reserve24"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=10)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=10)"
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve25"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",1
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",2
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve26"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",1
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",2
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve27"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve28"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::partially_uncountable_reserve29"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=6)"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=6)"
//! INST_NOT      "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::try_catch_reserve30"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::try_finally_reserve31"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::out_reserve32"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::in_reserve33"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::global_reserve34"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve35"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::more_types_reserve36"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=20)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=20)"
//!
//! METHOD        "ETSGLOBAL::nested_loop_reserve37"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=12)"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=12)"
//! INST          "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::uber_reserve38"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=78)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=78)"
//!
//! METHOD        "ETSGLOBAL::store_reserve39"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve40"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve41"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::arg_reserve42"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::store_reserve43"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::store_reserve44"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reserve
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--compiler-regex='.*reserve[0-9]*' --compiler-inlining=true", entry: "ETSGLOBAL::main"
//!
//! METHOD        "ETSGLOBAL::reserve1"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::reserve2"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve3"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve4"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::loop_reserve5"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=5)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=5)"
//!
//! METHOD        "ETSGLOBAL::nested_loop_reserve6"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=14)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=14)"
//!
//! METHOD        "ETSGLOBAL::if_reserve7"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::if_reserve8"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::if_loop_reserve9"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=6)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=6)"
//!
//! METHOD        "ETSGLOBAL::loop_if_reserve10"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve11"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve12"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::uncountable_loop_reserve13"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::switch_reserve14"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=4)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=4)"
//!
//! METHOD        "ETSGLOBAL::switch_reserve15"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=10)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=10)"
//!
//! METHOD        "ETSGLOBAL::reverse_loop_reserve16"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step2_reverse_loop_reserve17"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step2_reverse_loop_reserve18"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::step5_loop_reserve19"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=5)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=5)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_reserve20"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_if_reserve21"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_if_reserve22"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::multi_toString_loop_reserve23"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=19)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=19)"
//!
//! METHOD        "ETSGLOBAL::types_reserve24"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=10)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=10)"
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve25"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",1
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",2
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve26"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",1
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_COUNT    "NewArray (size=3)",2
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve27"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::lenArray_reserve28"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::partially_uncountable_reserve29"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=6)"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=6)"
//! INST_NOT      "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::try_catch_reserve30"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::try_finally_reserve31"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::out_reserve32"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::in_reserve33"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::global_reserve34"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=1)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve35"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::more_types_reserve36"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=20)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=20)"
//!
//! METHOD        "ETSGLOBAL::nested_loop_reserve37"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=12)"
//! INST_NOT      "NewArray (size=9)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=12)"
//! INST          "NewArray (size=9)"
//!
//! METHOD        "ETSGLOBAL::uber_reserve38"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=78)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=78)"
//!
//! METHOD        "ETSGLOBAL::store_reserve39"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve40"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::chain_reserve41"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=3)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST          "NewArray (size=3)"
//!
//! METHOD        "ETSGLOBAL::arg_reserve42"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::store_reserve43"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//!
//! METHOD        "ETSGLOBAL::store_reserve44"
//! PASS_BEFORE   "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"
//! PASS_AFTER    "ReserveStringBuilderBuffer"
//! INST_NOT      "NewArray (size=2)"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events occured
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--compiler-reserve-string-builder-buffer=false --compiler-inlining=true", entry: "ETSGLOBAL::main_events_check"
//! EVENT         "SbBufferRealloc"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events not occured
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--compiler-reserve-string-builder-buffer=true --compiler-inlining=true", entry: "ETSGLOBAL::main_events_check"
//! EVENT_NOT     "SbBufferRealloc"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events occured (uber_only)
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--compiler-reserve-string-builder-buffer=false --compiler-inlining=true", entry: "ETSGLOBAL::main_uber_only"
//! EVENT_NEXT    /SbBufferRealloc,\d+,0x[0-9a-fA-F]+,32.*/
//! EVENT_NEXT    /SbBufferRealloc,\d+,0x[0-9a-fA-F]+,64.*/

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events not occured (uber_only)
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--compiler-reserve-string-builder-buffer=true --compiler-inlining=true", entry: "ETSGLOBAL::main_uber_only"
//! EVENT_NOT     "SbBufferRealloc"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events not occured (uber_only, --gc-type=gen-gc)
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--gc-type=gen-gc --no-async-jit=false --compiler-reserve-string-builder-buffer=true --compiler-inlining=true", entry: "ETSGLOBAL::main_uber_only"

//! CHECKER       JIT IR Builder, check StringBuilder internal buffer reallocation events not occured (uber_only, --gc-type=g1-gc)
//! SKIP_IF       @architecture == "arm32"
//! RUN           force_jit: true, options: "--gc-type=g1-gc --no-async-jit=false --compiler-reserve-string-builder-buffer=true --compiler-inlining=true", entry: "ETSGLOBAL::main_uber_only"

function reserve1() : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    return sb.toString()
}

function reserve2() : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    sb.append("1")
    return sb.toString()
}

function loop_reserve3() : string {
    let sb = new StringBuilder()            // applied
    for (let i = 0; i < 3; ++i)
        sb.append(i)
    return sb.toString()
}

function loop_reserve4() : string {
    let sb = new StringBuilder()            // applied
    sb.append("0")
    for (let i = 0; i < 3; ++i)
        sb.append(i + 1)
    return sb.toString()
}

function loop_reserve5() : string {
    let sb = new StringBuilder()            // applied
    sb.append("0")
    for (let i = 0; i < 3; ++i)
        sb.append(i + 1)
    sb.append("4")
    return sb.toString()
}

function nested_loop_reserve6() : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    for (let i = 0; i < 3; ++i) {
        sb.append(i*4 + 1)
        for (let j = 0; j < 2; ++j)
            sb.append(i*4 + j + 2)
        sb.append(i*4 + 4)
    }
    sb.append(13)
    return sb.toString()
}

function if_reserve7(cond: boolean) : string {
    let sb = new StringBuilder()            // applied
    if (cond)
        sb.append(0)
    return sb.toString()
}

function if_reserve8(cond: boolean) : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    if (cond) {
        sb.append("1")
        sb.append(2)
    }
    else {
        sb.append("null")
    }
    sb.append("3")

    return sb.toString()
}

function if_loop_reserve9(cond: boolean) : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    if (cond) {
        for (let i = 0; i < 3; ++i)
            sb.append(i + 1)
        sb.append(4)
    }
    else {
        sb.append("null")
    }
    sb.append("5")

    return sb.toString()
}

function loop_if_reserve10(cond: boolean) : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    for (let i = 0; i < 3; ++i) {
        if (cond) {
            sb.append(2*i + 1)
            sb.append(2*i + 2)
        }
        else {
            sb.append("null")
        }
    }
    sb.append(7)
    sb.append("8")

    return sb.toString()
}

function uncountable_loop_reserve11() : string {
    let sb = new StringBuilder()            // not applied, due to uncountable loop
    sb.append(0)
    for (let i:number = 1.0; i < 3.0; ++i)
        sb.append(i)
    return sb.toString()
}

function uncountable_loop_reserve12() : string {
    let sb = new StringBuilder()            // not applied, due to uncountable loop
    let i = 0;
    sb.append(i++)
    while (sb.toString().getLength() < 3.0)
        sb.append(i++)
    return sb.toString()
}

function uncountable_loop_reserve13() : string {
    let sb = new StringBuilder()            // not applied, due to uncountable loop
    let i = 0;
    sb.append(i++)
    do
        sb.append(i++)
    while (sb.toString().getLength() < 3.0)

    return sb.toString()
}

function switch_reserve14(n : int) : string {
    let sb = new StringBuilder              // applied
    switch (n) {
        case 0:
        break;
        case 1:
            sb.append(0)
        break;
        case 2:
            sb.append("0")
            sb.append(1)
        break;
        case 3:
            sb.append("0")
            sb.append(1)
            sb.append(2.0)
        break;
        default:
            sb.append("0")
            sb.append(1)
            sb.append(2.0)
            sb.append(3)
        break;
    }
    return sb.toString()
}

function switch_reserve15(n : int) : string {
    let sb = new StringBuilder              // applied
    switch (n) {
        case 0:
        case 1:
            sb.append(0)
        case 2:
            sb.append("0")
            sb.append(1)
        case 3:
            sb.append("0")
            sb.append(1)
            sb.append(2.0)
        default:
            sb.append("0")
            sb.append(1)
            sb.append(2.0)
            sb.append(3)
    }
    return sb.toString()
}

function reverse_loop_reserve16() : string {
    let sb = new StringBuilder()            // applied
    for (let i = 2; i >= 0; --i)
        sb.append(i)
    return sb.toString()
}

function step2_reverse_loop_reserve17() : string {
    let sb = new StringBuilder()            // applied
    for (let i = 4; i >= 0; i -= 2)
        sb.append(i)
    return sb.toString()
}

function step2_reverse_loop_reserve18() : string {
    let sb = new StringBuilder()            // applied
    for (let i = 5; i >= 0; i -= 2)
        sb.append(i)
    return sb.toString()
}

function step5_loop_reserve19() : string {
    let sb = new StringBuilder()            // applied
    for (let i = 2; i < 24; i += 5)
        sb.append(i)
    return sb.toString()
}

function multi_toString_reserve20() : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    sb.append(sb.toString())
    sb.append(1)
    return sb.toString()
}

function multi_toString_if_reserve21() : string {
    let sb = new StringBuilder()            // applied
    sb.append(0)
    if (sb.toString().getLength() > 0)
        sb.append(sb.toString())
    sb.append(1)
    return sb.toString()
}

function multi_toString_if_reserve22() : string {
    let sb = new StringBuilder()            // applied
    sb.append(sb.toString())
    if (sb.toString().getLength() > 0)
        sb.append(sb.toString())
    sb.append(sb.toString())
    return sb.toString()
}

function multi_toString_loop_reserve23() : string {
    let sb = new StringBuilder()            // applied
    sb.append(sb.toString())
    for (let i = 0; i < 3; ++i) {
        sb.append(sb.toString())
        if (sb.toString().getLength() > 0)
            for (let j = 0; j < 3; ++j)
                sb.append(sb.toString())
        sb.append(sb.toString())
    }
    sb.append(sb.toString())
    if (sb.toString().getLength() > 0)
        sb.append(sb.toString())
    else
        sb.append(sb.toString())
    sb.append(sb.toString())
    return sb.toString()
}

function types_reserve24() : string {
    let sb = new StringBuilder()            // applied
    sb.append(false as boolean)
    sb.append(c'1' as char)
    sb.append(2 as byte)
    sb.append(3 as short)
    sb.append(4 as int)
    sb.append(5 as long)
    sb.append(6 as float)
    sb.append(7 as double)
    sb.append("8" as string)
    sb.append(new Object)
    return sb.toString()
}

function lenArray_reserve25() : string {
    let strings: string[] = ["0", "1", "2"]
    let sb = new StringBuilder()            // applied, due loop is countable
    for (let i = 0; i < strings.length; ++i)
        sb.append(strings[i])
    return sb.toString()
}

function lenArray_reserve26() : string {
    let strings: string[] = ["0", "1", "2"]
    let sb = new StringBuilder()            // applied, due loop is countable
    for (let s : string in strings)
        sb.append(s)
    return sb.toString()
}

function lenArray_reserve27(strings: string[]) : string {
    let sb = new StringBuilder()            // not applied, due loop is uncountable
    for (let i = 0; i < strings.length; ++i)
        sb.append(strings[i])
    return sb.toString()
}

function lenArray_reserve28(strings: string[]) : string {
    let sb = new StringBuilder()            // not applied, due loop is uncountable
    for (let s : string in strings)
        sb.append(s)
    return sb.toString()
}

function partially_uncountable_reserve29() : string {
    let sb_countable = new StringBuilder()  // applied, due loop is countable
    for (let i : int = 2; i < 8; ++i)
        sb_countable.append(i)

    let sb_uncountable = new StringBuilder()    // not applied, due loop is uncountable
    for (let i : number = 2; i < 11; ++i)
        sb_uncountable.append(i)

    return sb_countable.toString() + sb_uncountable.toString()
}

function try_catch_reserve30(do_throw: boolean) : string {
    let sb = new StringBuilder()            // applied
    try {
        sb.append(0)
        if (do_throw)
            throw new Exception("Exception")
    }
    catch (ex) {
        sb.append("1")
        sb.append(ex)
    }
    return sb.toString()
}

function try_finally_reserve31() : string {
    let sb = new StringBuilder()            // applied
    try {
        sb.append(0)
    }
    finally {
        sb.append("1")
    }
    return sb.toString()
}

function out_reserve32() : StringBuilder {
    let sb = new StringBuilder()            // not applied, due to object being stored/returned
    sb.append(0)
    return sb
}

function in_reserve33(sb : StringBuilder) : String {
    sb.append(1)                            // not applied, due to instance allocated outside block
    return sb.toString()
}

let sb_global : StringBuilder = new StringBuilder
function global_reserve34() : String {
    sb_global.append(0)                            // not applied, due to instance allocated outside block
    return sb_global.toString()
}

function chain_reserve35() : String {
    return new StringBuilder().append(0).append(1).toString()   // applied
}

function more_types_reserve36() : String {
    const emptyString = "";
    let nullString: String = new String(null);
    let chArray: char[] = [c'!', c'@', c'#', c'$', c'%'];

    let sb: StringBuilder = new StringBuilder(chArray);
    sb.append(' ')
        .append("abcΣΨΩ0123456789")
        .append(' ')
        .append(true)
        .append(' ')
        .append(false)
        .append(' ')
        .append(57 as byte)
        .append(' ')
        .append(127 as byte)
        .append(' ')
        .append(32767 as short)
        .append(' ')
        .append(128934675 as int)
        .append(' ')
        .append(701234987654321 as long)
        .append(' ')
        .append(emptyString)
        .append(nullString);
    return sb.toString();
}

function nested_loop_reserve37() : string {
    let sb_outer = new StringBuilder()      // applied, due loop is countable
    for (let i = 2; i < 8; ++i) {
        sb_outer.append(i)

        let sb_inner = new StringBuilder()  // applied, due loop is countable
        for (let j = 2; j < 11; ++j)
            sb_inner.append(j)

        sb_outer.append(sb_inner.toString())
    }
    return sb_outer.toString()
}

function uber_reserve38(cond: boolean) : string
{
    let nullString: String = new String(null);
    let sb = new StringBuilder()
    sb.append(nullString)
    sb.append("-")
    for (let i = 0; i < 5; ++i) {
        switch (i) {
            case 0:
                sb.append(i)
                sb.append((i as Number).toString())
                sb.append(i as number)
                sb.append(i as long)
                sb.append("-")
            break
            case 1:
                sb.append(i)
                if (cond)
                    sb.append((i as Number).toString())
                else
                    sb.append(i as number)
                sb.append(i as long)
                sb.append("-")
            break
            case 2:
                sb.append(i)
                for (let j = 0; j < 5; ++j)
                    sb.append(5*i + j)
                sb.append(i)
                sb.append("-")
            break
            case 3:
                sb.append(i)
                for (let j = 0; j < 3; ++j) {
                    sb.append(j*4 + 1)
                    for (let k = 0; k < 2; ++k)
                        sb.append(j*4 + j + 2)
                    sb.append(j*4 + 4)
                }
                sb.append(i)
                sb.append("-")
            break
            case 4:
                sb.append(i)
                if (cond) {
                    sb.append(i + 1)
                    for (let j = 0; j < 3; ++j) {
                        sb.append(j*4 + 1)
                        if (cond)
                            sb.append(j*4 + 2)
                        else
                            sb.append(j*4 + 3)
                    }
                }
                else
                    sb.append(i + 5)
                sb.append(i)
                sb.append("-")
            break
            default:
                assert false
        }
    }
    sb.append(nullString)
    return sb.toString()
}

function store_reserve39() : string {
    sb_global = new StringBuilder()            // not applied, due to object being stored
    sb_global.append(0)
    sb_global.append(1)
    sb_global.append(2)
    return sb_global.toString()
}

function chain_reserve40() : String {
    let chars = new char[1]
    chars[0] = c'0'
    return new StringBuilder(chars).append(1).append(2).toString()   // applied
}

function chain_reserve41(str: string) : String {
    return new StringBuilder(str).append(1).append(2).toString()   // applied
}

function __noinline__foo(sb: StringBuilder)
{
    sb.append(1)
}

function arg_reserve42(): string
{
    let sb = new StringBuilder()                // not applied, due to object being passed to non-inlined function
    sb.append(0)
    __noinline__foo(sb)
    sb.append("2")
    return sb.toString();
}

class StringBuilderHolder
{
    sb : StringBuilder = new StringBuilder()
}
let sb_holder = new StringBuilderHolder
function store_reserve43() : string
{
    let sb = new StringBuilder()                // not applied, due to object being stored
    sb.append(0)

    sb_holder.sb = sb

    sb.append(1)
    return sb.toString();
}

let sb_array = new StringBuilder[1]
function store_reserve44() : string
{
    let sb = new StringBuilder()                // not applied, due to object being stored
    sb.append(0)

    sb_array[0] = sb

    sb.append(1)
    return sb.toString();
}

function main_events_check() : int {
    assert reserve1() == "0": "Wrong result at reserve1";
    assert reserve2() == "01": "Wrong result at reserve2";
    assert loop_reserve3() == "012": "Wrong result at loop_reserve3";
    assert loop_reserve4() == "0123": "Wrong result at loop_reserve4";
    assert loop_reserve5() == "01234": "Wrong result at loop_reserve5";
    assert nested_loop_reserve6() == "012345678910111213": "Wrong result at nested_loop_reserve6";
    assert if_reserve7(true) == "0": "Wrong result at if_reserve7";
    assert if_reserve8(true) == "0123": "Wrong result at if_reserve8";
    assert if_loop_reserve9(true) == "012345": "Wrong result at if_loop_reserve9";
    assert loop_if_reserve10(true) == "012345678": "Wrong result at loop_if_reserve10";
    assert uncountable_loop_reserve11() == "012": "Wrong result at uncountable_loop_reserve11";
    assert uncountable_loop_reserve12() == "012": "Wrong result at uncountable_loop_reserve12";
    assert uncountable_loop_reserve13() == "012": "Wrong result at uncountable_loop_reserve13";
    assert switch_reserve14(3) == "012": "Wrong result at switch_reserve14";
    assert switch_reserve15(3) == "0120123": "Wrong result at switch_reserve15";
    assert reverse_loop_reserve16() == "210": "Wrong result at reverse_loop_reserve16";
    assert step2_reverse_loop_reserve17() == "420": "Wrong result at step2_reverse_loop_reserve17";
    assert step2_reverse_loop_reserve18() == "531": "Wrong result at step2_reverse_loop_reserve18";
    assert step5_loop_reserve19() == "27121722": "Wrong result at step5_loop_reserve19";
    assert multi_toString_reserve20() == "001": "Wrong result at multi_toString_reserve20";
    assert multi_toString_if_reserve21() == "001": "Wrong result at multi_toString_if_reserve21";
    assert multi_toString_if_reserve22() == "": "Wrong result at multi_toString_if_reserve22";
    assert multi_toString_loop_reserve23() == "": "Wrong result at multi_toString_loop_reserve23";
    // Issue #16227 : different output for empty Object : expected false12345678{}, got false12345678[object Object]
    assert types_reserve24() == "false12345678[object Object]": "Wrong result at types_reserve24";
    assert lenArray_reserve25() == "012": "Wrong result at lenArray_reserve25";
    assert lenArray_reserve26() == "012": "Wrong result at lenArray_reserve26";
    assert lenArray_reserve27(["0", "1", "2"]) == "012": "Wrong result at lenArray_reserve27";
    assert lenArray_reserve28(["0", "1", "2"]) == "012": "Wrong result at lenArray_reserve28";
    assert partially_uncountable_reserve29() == "2345672345678910": "Wrong result at partially_uncountable_reserve29";
    assert try_finally_reserve31() == "01": "Wrong result at try_finally_reserve31";
    assert out_reserve32().append(1).toString() == "01": "Wrong result at out_reserve32";
    assert in_reserve33(new StringBuilder().append(0)) == "01": "Wrong result at in_reserve33";
    assert global_reserve34() == "0": "Wrong result at in_reserve34";
    assert chain_reserve35() == "01": "Wrong result at chain_reserve35";
    assert more_types_reserve36() == "!@#$% abcΣΨΩ0123456789 true false 57 127 32767 128934675 701234987654321 null": "Wrong result at more_types_reserve36";
    assert nested_loop_reserve37() == "223456789103234567891042345678910523456789106234567891072345678910": "Wrong result at nested_loop_reserve37";
    assert uber_reserve38(false) == "null-0000-111-210111213142-31224577891212123-494-null": "Wrong result at uber_reserve38";
    assert uber_reserve38(true) == "null-0000-111-210111213142-31224577891212123-4512569104-null": "Wrong result at uber_reserve38";
    assert store_reserve39() == "012": "Wrong result at store_reserve39";
    assert chain_reserve40() == "012": "Wrong result at chain_reserve40";
    assert chain_reserve41("0") == "012": "Wrong result at chain_reserve41";
    assert store_reserve43() == "01": "Wrong result at store_reserve43";
    assert store_reserve44() == "01": "Wrong result at store_reserve44";

    return 0
}

function main_compile_check() : int {
    assert try_catch_reserve30(false).startsWith("0"): "Wrong result at try_catch_reserve30";
    assert try_catch_reserve30(true).startsWith("01Exception"): "Wrong result at try_catch_reserve30";
    assert arg_reserve42() == "012": "Wrong result at arg_reserve42";
    return 0
}

function main_uber_only() : int {
    uber_reserve38(true)
    return 0
}

function main() : int {
    main_events_check()
    main_compile_check()
    return 0
}
