/*
 * Copyright (c) 2023-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class C0 {
   x0: boolean
}

function test_1() : C0 {
   return ([{x0: true}])[0]
}

function test_2() : C0 {
   return (([[{x0: true}]])[0])[0];
}

function test_3() {
    let x0: C0 = ([{x0: true}])[0];
    if (false) {
        return x0;
    }

    // Expecting type to be inferred from the other return expression
    return ([{x0: true}])[0];
}

function test_parameter(x : C0) {
}

function main() : void {
   let x0: C0 = ([{x0: true}])[0];
   assertTrue(x0.x0, "Incorrect class composite property #1!");

   let x1: C0 = (([[{x0: true}]])[0])[0];
   assertTrue(x1.x0, "Incorrect class composite property #2!");

   let x2: C0 = ((([[[{x0: true}]]])[0])[0])[0];
   assertTrue(x2.x0, "Incorrect class composite property #3!");

   let f1: C0 = test_1();
   assertTrue(f1.x0, "Incorrect class composite property #4!");

   let f2: C0 = test_2();
   assertTrue(f2.x0, "Incorrect class composite property #5!");

   let f3: C0 = test_3();
   assertTrue(f3.x0, "Incorrect class composite property #6!");

   test_parameter(([{x0: true}])[0]);
   test_parameter((([[{x0: true}]])[0])[0]);
}
