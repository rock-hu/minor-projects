# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of valid bigint functions
bigint_functions:
    - { func: 'BigInt("1")', res: 1n }
    - { func: 'BigInt("1234567890")', res: 1234567890n }
    - { func: 'BigInt("               123                  ")', res: 123n }
    - { func: 'BigInt(1 as long)', res: 1n }
    - { func: 'BigInt(1234567890 as long)', res: 1234567890n }

    - { func: 'BigInt(123 as byte)', res: 123n }
    - { func: 'BigInt(1 as int)', res: "1n" }
    - { func: 'BigInt(1 as bigint | number | string | boolean)', res: "1n" }

    - { func: 'BigInt.asIntN(32, 0n)', res: 0n }
    - { func: 'BigInt.asIntN(0, 12345678901234567890n)', res: 0n }
    - { func: 'BigInt.asIntN(4, 16n)', res: 0n }
    - { func: 'BigInt.asIntN(4, 15n)', res: -1n }
    - { func: 'BigInt.asIntN(32, 12345678901234567890n)', res: -350287150n }

    - { func: 'BigInt.asUintN(32, 0n)', res: 0n }
    - { func: 'BigInt.asUintN(0, 12345678901234567890n)', res: 0n }
    - { func: 'BigInt.asUintN(4, 16n)', res: 0n }
    - { func: 'BigInt.asUintN(4, 15n)', res: 15n }
    - { func: 'BigInt.asUintN(32, 12345678901234567890n)', res: 3944680146n }
