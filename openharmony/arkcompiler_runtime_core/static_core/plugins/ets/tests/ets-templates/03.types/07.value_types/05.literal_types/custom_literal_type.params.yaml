# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - doc: |-
          Custom type made of string literal
      decl: |-
          type LITERAL = "some str"
      use: |-
          let a: LITERAL = "some str"
          assertTrue( a instanceof "some str" )
          assertTrue( a instanceof LITERAL )
          assertEQ( a, "some str" )

    - doc: |-
          Union may include literals, boxed and unboxed types
      decl: |-
      use: |-
          let a: "some str" | "another str" | Number | boolean | string = "some str"
          assertEQ( a, "some str" )
          a = "another str"
          assertEQ( a, "another str" )
          a = new Number(3)
          assertEQ( a.unboxed(), 3 )
          a = "str"
          assertEQ( a, "str" )
          a = true
          assertTrue( a )

    - doc: |-
          Custom union type may include literals, boxed and unboxed types
      decl: |-
          type LITERAL = "some str" | "another str" | Number | boolean | string
      use: |-
          let a: LITERAL = "some str"
          assertTrue( a instanceof LITERAL )
          assertEQ( a, "some str" )
          a = "another str"
          assertEQ( a, "another str" )
          a = new Number(3)
          assertEQ( a.unboxed(), 3 )
          a = "str"
          assertEQ( a, "str" )
          a = true
          assertTrue( a )
