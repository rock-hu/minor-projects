# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of declarations
function_variables:
  - |-
      let binaryOp: (x: double, y: double) => double
  - |-
      type BinaryOp = (x: double, y: double) => double
      let op: BinaryOp;
  - |-
      type ThrowingOp = () => boolean throws
      let op: ThrowingOp = () => boolean throws Exception { throws new Exception("test ex"); return true; }
  - |-
      type ThrowingOp = () => boolean throws
      let op1: ThrowingOp = () => boolean throws Exception { throws new Exception("test ex"); return true; }
      let op2: ThrowingOp = op1;
  - |-
      type ThrowingOp = () => boolean throws
      let op1: ThrowingOp = () => boolean throws Exception { throws new Exception("test ex"); return true; }
      let op2: ThrowingOp = op1;
      let op3: ThrowingOp = op2;
  - |-
      type NonThrowingOp = () => boolean
      let op: NonThrowingOp = () => boolean { return true; }
  - |-
      type NonThrowingOp = () => boolean
      let op1: NonThrowingOp = () => boolean { return true; }
      let op2: NonThrowingOp = op1;
  - |-
      type NonThrowingOp = () => boolean
      type ThrowingOp = () => boolean throws
      let op1: ThrowingOp = () => boolean throws Exception { throws new Exception("test ex"); return true; }
      let op2: NonThrowingOp = () => boolean { return true; }
      let op3: NonThrowingOp = op1;
