# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - from_type: byte
      values:
          - { expr: 0 as byte, val: 0n }
          - { expr: 0x7F as byte, val: 127n }
          - { expr: 0x80 as byte, val: -128n }

    - from_type: short
      values:
          - { expr: 0 as short, val: 0n }
          - { expr: 0x007F as short, val: 127n }
          - { expr: 0xFF80 as short, val: -128n }
          - { expr: 0x7FFF as short, val: 32767n }
          - { expr: 0x8000 as short, val: -32768n }

    - from_type: int
      values:
          - { expr: 0 as int, val: 0n }
          - { expr: 0x0000007F as int, val: 127n }
          - { expr: 0xFFFFFF80 as int, val: -128n }
          - { expr: 0x00007FFF as int, val: 32767n }
          - { expr: 0xFFFF8000 as int, val: -32768n }
          - { expr: 0x7FFFFFFF as int, val: 2147483647n }
          - { expr: 0x80000000 as int, val: -2147483648n }

    - from_type: long
      values:
          - { expr: 0 as long, val: 0n }
          - { expr: 0x000000000000007F as long, val: 127n }
          - { expr: 0xFFFFFFFFFFFFFF80 as long, val: -128n }
          - { expr: 0x0000000000007FFF as long, val: 32767n }
          - { expr: 0xFFFFFFFFFFFF8000 as long, val: -32768n }
          - { expr: 0x000000007FFFFFFF as long, val: 2147483647n }
          - { expr: 0xFFFFFFFF80000000 as long, val: -2147483648n }
          - { expr: 0x8000000000000000 as long, val: -9223372036854775808n }
          - { expr: 0x7FFFFFFFFFFFFFFF as long, val: 9223372036854775807n }

    - from_type: float
      values:
          - { expr: +0.0000000000f, val: 0n }
          - { expr: -0.00f, val: 0n }
          - { expr: 1e10f, val: 10000000000n }

    - from_type: double
      values:
          - { expr: '+0.0', val: 0n }
          - { expr: '-0.0', val: 0n }
          - { expr: '1.234567890123456e15', val: 1234567890123456n }

    - from_type: number
      values:
          - { expr: '+0.0e0', val: 0n }
          - { expr: '-0.0e-0', val: 0n }
          - { expr: '-1234567890123456.0', val: -1234567890123456n }

    - from_type: float
      values:
          - { expr: Float.MAX_VALUE, val: new BigInt(Float.MAX_VALUE) }

    - from_type: double
      values:
          - { expr: Double.MAX_VALUE, val: new BigInt(Double.MAX_VALUE) }
