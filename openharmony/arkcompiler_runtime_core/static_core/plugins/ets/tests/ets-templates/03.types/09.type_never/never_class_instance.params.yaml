# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # List of types
types:
    - decl: |-
          type NT = string | number | never
      use: |-
          let x: NT = 42.0
          assertTrue( x as number == 42.0)
          x = "abc"
          assertTrue( x as string == "abc")

    - use: |-
          let x: (number|never)[] = [1.0, 2.0, 3.0]
          assertTrue( x[2] as number == 3.0)

    - use: |-
          let x: (string|never)[] = ['1', '2', '3']
          assertTrue( x[2] as string == '3')

    - decl: |-
          class A<T> {}
      use: |-
          let x: A<never> = new A<never>()
          assertTrue( x instanceof Object)

    - use: |-
          let x: Record<string, never|null> = { "abc": null }

    - use: |-
          let x: (never|null|undefined) = null
          assertTrue( x === null)
          x = undefined
          assertTrue( x === undefined)

    - use: |-
          let x: never[] = [] as never[]