# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
  - decl: |-
      class A {
        private _foo: int
        get foo(): int { return this._foo } 
        set foo(i: int) { this._foo = i } 
      }
    check: |-
      type t = keyof A
      let a: t = "foo"
      assertEQ(typeof a, string)

  - decl: |-
      class A {
        private _foo: int
        get foo(): int { return this._foo } 
        set foo(i: int) { this._foo = i } 
      }
    check: |-
      type t = keyof A
      let a: t = "_foo"
    tags: compile-only,negative

  - decl: |-
      abstract class A {
        private _foo: int
        get foo(): int { return this._foo } 
        set foo(i: int) { this._foo = i } 
      }
    check: |-
      type t = keyof A
      let a: t = "foo"
      assertEQ(typeof a, string)

  - decl: |-
      final class A {
        private _foo: int
        get foo(): int { return this._foo } 
        set foo(i: int) { this._foo = i } 
      }
    check: |-
      type t = keyof A
      let a: t = "foo"
      assertEQ(typeof a, string)

  - decl: |-
      interface I {
        get foo(): int 
        set foo(i: int) 
      }
    check: |-
      type t = keyof I
      let a: t = "foo"
      assertEQ(typeof a, string)
