# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - realType: boolean
      type: string | number
      value: |-
          true

    - realType: string
      type: boolean | number
      value: '"a"'

    - realType: number
      type: string | boolean
      value: 1

    - realType: Float32Array
      type: number | string | boolean
      value: |-
          new Float32Array([1.1, 2.2, 3.3])

    - realType: |-
          []
      type: Color | number
      value: |-
          []
      enumerate: |-
          enum Color {
            Red,
            Green,
            Blue
          }

    - realType: array
      type: Color | string
      value: |-
          [1, 2, 3]
      enumerate: |-
          enum Color {
            Red,
            Green,
            Blue
          }

    - realType: |-
          null
      type: string[] | boolean[] | number
      value: |-
          null

    - realType: undefined
      type: string | boolean | null
      value: undefined

    - realType: string
      type: Date | number
      value: '"abc"'

    - realType: string
      type: Map<string, number> | number
      value: '"abc"'

    - realType: boolean
      type: null | number
      value: |-
          true

    - realType: Class
      type: Promise<string> | string
      value: new CustomClass()
      class: |-
        class CustomClass {
          constructor() {}
        }

    - realType: string
      type: Error | number
      value: |-
          '"abc"'

    - realType: array
      type: ArrayBuffer | number
      value: |-
          [[1, 2], [3, 4]]

    - realType: Promise
      type: DataView | number
      value: |-
          Promise.resolve('Hello')

    - realType: Float64Array
      type: Int32Array | number
      value: |-
          new Float64Array([1.1, 2.2, 3.3])
