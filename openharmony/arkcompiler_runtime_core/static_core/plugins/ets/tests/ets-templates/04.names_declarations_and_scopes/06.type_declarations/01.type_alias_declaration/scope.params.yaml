# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
    # use an alias defined in another unit

    - files: ['./pkg_a/pkg_0.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS0 } from './pkg_a/pkg_0.sts'
      use: |-
          let v: PKG_ALIAS0 = true // should not be visible here
          let ok = true

    - files: ['./pkg_a/pkg_0.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS0 } from './pkg_a/pkg_0.sts'
      use: |-
          let v: pkg_a.PKG_ALIAS0 = true // should not be visible here
          let ok = true

    - files: ['./mod/mod_0.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { MOD_ALIAS0 } from './mod/mod_0.sts'
      use: |-
          let v: MOD_ALIAS0 = true  // should not be visible here
          let ok = true

    # use an alias defined and exported as type from another unit

    - files: ['./pkg_a/pkg_1.sts']
      decl: |-
          import { PKG_ALIAS1 } from './pkg_a/pkg_1.sts'
      use: |-
          let v: PKG_ALIAS1 = true // should be visible here
          let ok = v

    - files: ['./pkg_a/pkg_1.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS1 } from './pkg_a/pkg_1.sts'
      use: |-
          let v: pkg_a.PKG_ALIAS1 = true
          let ok = true

    - files: ['./mod/mod_1.sts']
      decl: |-
          import { MOD_ALIAS1 } from './mod/mod_1.sts'
      use: |-
          let v: MOD_ALIAS1 = true  // should be visible here
          let ok = v

    # use an alias defined and exported from another unit

    - files: ['./pkg_a/pkg_2.sts']
      decl: |-
          import { PKG_ALIAS2 } from './pkg_a/pkg_2.sts'
      use: |-
          let v: PKG_ALIAS2 = true // should be visible here
          let ok = true

    - files: ['./pkg_a/pkg_2.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS2 } from './pkg_a/pkg_2.sts'
      use: |-
          let v: pkg_a.PKG_ALIAS2 = true
          let ok = true

    - files: ['./mod/mod_2.sts']
      decl: |-
          import { MOD_ALIAS2 } from './mod/mod_2.sts'
      use: |-
          let v: MOD_ALIAS2 = true  // should be visible here
          let ok = true

    # use an alias defined and exported as type under a different name from another unit

    - files: ['./pkg_a/pkg_3.sts']
      decl: |-
          import { X } from './pkg_a/pkg_3.sts'
      use: |-
          let v: X = true // should be visible here
          let ok = v

    - files: ['./pkg_a/pkg_3.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { X } from './pkg_a/pkg_3.sts'
      use: |-
          let v: pkg_a.X = true
          let ok = true

    - files: ['./mod/mod_3.sts']
      decl: |-
          import { X } from './mod/mod_3.sts'
      use: |-
          let v: X = true  // should be visible here
          let ok = v

    # use an alias defined and not exported from another unit

    - files: ['./pkg_a/pkg_4.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { EClass } from './pkg_a/pkg_4.sts'
      use: |-
          let v: PKG_ALIAS4 = new EClass() // should not be visible here
          let ok = v instanceof EClass

    - files: ['./pkg_a/pkg_4.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { EClass } from './pkg_a/pkg_4.sts'
      use: |-
          let v: pkg_a.PKG_ALIAS4 = new EClass() // should not be visible here
          let ok = v instanceof EClass

    - files: ['./mod/mod_4.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { EClass } from './mod/mod_4.sts'
      use: |-
          let v: MOD_ALIAS4 = new EClass()  // should not be visible here
          let ok = v instanceof EClass

    # use an alias defined and exported from another unit, duplicate

    - files: ['./pkg_a/pkg_5.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS5 } from './pkg_a/pkg_5.sts'
          type PKG_ALIAS5 = Integer
      use: |-
          let v: PKG_ALIAS5 = 1 // should not be visible here
          let ok = true

    - files: ['./pkg_a/pkg_5.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { PKG_ALIAS5 } from './pkg_a/pkg_5.sts'
          type PKG_ALIAS5 = Integer
      use: |-
          let v: pkg_a.PKG_ALIAS5 = true // should not be visible here
          let ok = true

    - files: ['./mod/mod_5.sts']
      tags: 'compile-only, negative'
      decl: |-
          import { MOD_ALIAS5 } from './mod/mod_5.sts'
          type MOD_ALIAS5 = Integer
      use: |-
          let v: MOD_ALIAS5 = 1.0  // should not be visible here
          let ok = true
