# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - defs: |-
        enum Planet { Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune }
      type: Planet
      val: Planet.Mars
      assert: v == Planet.Mars

    - defs: |-
        class Planet {
            name: String;
            public constructor(name: String) {
                this.name = name;
            }
        }
      type: Planet
      val: new Planet("Jupiter")
      assert: v instanceof Planet && v.name == "Jupiter"

    - defs: |-
        enum SolarSystem { Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune }

        interface Inhabited {
            isInhabited(): boolean;
        }

        class Planet implements Inhabited {
            planet: SolarSystem;

            public constructor(planet: SolarSystem) {
                this.planet = planet;
            }

            public override isInhabited(): boolean {
                return this.planet == SolarSystem.Earth;
            }
        }
      type: Inhabited
      val: new Planet(SolarSystem.Mars)
      assert: v instanceof Inhabited && v.isInhabited() == false
