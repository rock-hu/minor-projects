# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |-
      class C<T extends float|Int> {} // -> Numeric
      function main() {
          new C<float>()
          new C<Int>()
      }

  - decl: |-
      final class C<T extends float|Int> {} // -> Numeric
      function main() {
          new C<float>()
          new C<Int>()
      }

  - decl: |-
      abstract class AC<T extends float|Int> {} // -> Numeric
      class C<T extends float|Int> extends AC<T> {} // -> Numeric
      function main() {
          new C<float>()
          new C<Int>()
      }

  - decl: |-
      class C<T extends float|number> {} // -> Floating
      function main() {
          new C<float>()
          new C<number>()
      }

  - decl: |-
      final class C<T extends float|number> {} // -> Floating
      function main() {
          new C<float>()
          new C<number>()
      }

  - decl: |-
      abstract class AC<T extends float|number> {} // -> Floating
      class C<T extends float|number> extends AC<T> {} // -> Floating
      function main() {
          new C<float>()
          new C<number>()
      }

  - decl: |-
      class C<T extends number|number> {} // -> number

  - decl: |-
      class C<T extends "literal"|string> {} // -> string
