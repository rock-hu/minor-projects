# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # Method modifiers for implemented methods
method_modifiers:
  - static
  - ""

# Type constraints for generic parameters
constraints:
  - type: Int | Double
    use: Int
    decl: let a = new Int()
    p: a
    expected: a
  - type: Int | Double
    use: Double
    decl: let a = new Double()
    p: a
    expected: a
  - type: '"a" | "b"'
    use: '"a"'
    p: '"a"'
    expected: '"a"'
  - type: byte
    use: byte
    p: 1 as byte
    expected: 1 as byte
  - type: short
    use: short
    p: 1 as short
    expected: 1 as short
  - type: int
    use: int
    p: 1 as int
    expected: 1 as int
  - type: long
    use: long
    p: 1 as long
    expected: 1 as long
  - type: float
    use: float
    p: 1.1 as float
    expected: 1.1 as float
  - type: double
    use: double
    p: 1.2 as double
    expected: 1.2 as double
  - type: double
    use: number
    p: 1.3 as number
    expected: 1.3 as number
  - type: number
    use: double
    p: 1.4 as double
    expected: 1.4 as double
  - type: number
    use: number
    p: 1.5 as number
    expected: 1.5 as number
  - type: boolean
    use: boolean
    p: "true"
    expected: "true"
  - type: char
    use: char
    p: c'V'
    expected: c'V'
  - type: "null"
    use: "null"
    p: "null"
    expected: "null"
  - type: 'undefined'
    use: 'undefined'
    p: 'undefined'
    expected: 'undefined'
  - type: Int[]
    use: Int[]
    decl: let a = [new Int()]
    p: a
    expected: a
  - type: int[]
    use: int[]
    decl: let i = [ 1 as int ]
    p: i
    expected: i
  - type: Color
    use: Color
    p: Color.Red
    expected: Color.Red
