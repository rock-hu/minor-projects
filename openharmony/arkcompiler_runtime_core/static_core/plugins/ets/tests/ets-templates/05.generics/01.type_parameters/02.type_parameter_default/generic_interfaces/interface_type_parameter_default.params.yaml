# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |-
      interface Base<T = SomeType> {}
      class Derived implements Base {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T = SomeType> {}
      class Derived implements Base<OtherType> {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T = SomeType> {}
      class Derived<T = OtherType> implements Base<T> {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T = SomeType, U = OtherType> {}
      class Derived implements Base {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T, U = OtherType> {}
      class Derived implements Base<SomeType> {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T, U = OtherType> {}
      class Derived implements Base<OtherType, SomeType> {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T, U = OtherType> {}
      class Derived<V> implements Base<V> {}
    use: |-
      let a = new Derived<SomeType>()
  - decl: |-
      interface Base<T = Base<SomeType>> {}
      class Derived implements Base {}
    use: |-
      let a = new Derived()
  - decl: |-
      interface Base<T, U = SomeType, V = OtherType> {}
    use: |-
      let a: Base<number> = {}
      let b: Base<number, OtherType> = {}
      let c: Base<number, Object, SomeType> = {}
