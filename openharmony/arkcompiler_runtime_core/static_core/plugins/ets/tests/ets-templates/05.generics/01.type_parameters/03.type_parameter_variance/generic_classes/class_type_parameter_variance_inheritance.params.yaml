# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - { class: class,     param: 'T',     type1: A, type2: A, desc: Invariant                    }
  - { class: class,     param: 'T',     type1: A, type2: B, desc: Invariant,     tag: negative }
  - { class: class,     param: 'T',     type1: B, type2: A, desc: Invariant,     tag: negative }
  - { class: class,     param: 'T',     type1: B, type2: B, desc: Invariant                    }
  - { class: class,     param: 'in T',  type1: A, type2: A, desc: Contravariant                }
  - { class: class,     param: 'in T',  type1: A, type2: B, desc: Contravariant, tag: negative }
  - { class: class,     param: 'in T',  type1: B, type2: A, desc: Contravariant                }
  - { class: class,     param: 'in T',  type1: B, type2: B, desc: Contravariant                }
  - { class: class,     param: 'out T', type1: A, type2: A, desc: Covariant                    }
  - { class: class,     param: 'out T', type1: A, type2: B, desc: Covariant                    }
  - { class: class,     param: 'out T', type1: B, type2: A, desc: Covariant,     tag: negative }
  - { class: class,     param: 'out T', type1: B, type2: B, desc: Covariant                    }
  - { class: interface, param: 'T',     type1: A, type2: A, desc: Invariant                    }
  - { class: interface, param: 'T',     type1: A, type2: B, desc: Invariant,     tag: negative }
  - { class: interface, param: 'T',     type1: B, type2: A, desc: Invariant,     tag: negative }
  - { class: interface, param: 'T',     type1: B, type2: B, desc: Invariant                    }
  - { class: interface, param: 'in T',  type1: A, type2: A, desc: Contravariant                }
  - { class: interface, param: 'in T',  type1: A, type2: B, desc: Contravariant, tag: negative }
  - { class: interface, param: 'in T',  type1: B, type2: A, desc: Contravariant                }
  - { class: interface, param: 'in T',  type1: B, type2: B, desc: Contravariant                }
  - { class: interface, param: 'out T', type1: A, type2: A, desc: Covariant                    }
  - { class: interface, param: 'out T', type1: A, type2: B, desc: Covariant                    }
  - { class: interface, param: 'out T', type1: B, type2: A, desc: Covariant,     tag: negative }
  - { class: interface, param: 'out T', type1: B, type2: B, desc: Covariant                    }
