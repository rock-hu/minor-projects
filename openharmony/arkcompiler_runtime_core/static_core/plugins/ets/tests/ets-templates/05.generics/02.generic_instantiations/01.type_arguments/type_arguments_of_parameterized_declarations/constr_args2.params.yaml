# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # classes
  - use: |-
      let v: A<X,X> = new A<X,X>(new X(), new X())

  - use: |-
      let v: A<Int,X|null> = new A<Int,X|null>(new Int(), new X())

  - use: |-
      let v: A<Int|null,X|null> = new A<Int|null,X|null>(null, null)

  - use: |-
      let v: A<X,X|null> = new A<X,X|null>(new X(), new X())
    bound: ' extends X|null'

  - use: |-
      let v: A<Object,X|null> = new  A<Object,X|null>(new X(), null)
    bound: ' extends Object|null'

  # interfaces
  - use: |-
      let v: A<I,I> = new A<I,I>(new X(), new X())

  - use: |-
      let v: A<I|null,I|null> = new A<I|null,I|null>(null, new Y())

  - use: |-
      let v: A<Y,I|null> = new A<Y,I|null>(new Y(), new Y())
    bound: ' extends I|null'

  # arrays
  - use: |-
      let v: A<int[],X[]> = new A<int[],X[]>(new int[1], new X[0])

  - use: |-
      let v: A<int[]|null,X[]|null> = new A<int[]|null,X[]|null>(null, new X[0])

# aliases
  - use: |-
      let v: A<B,B> = new A<B,B>([Color.Red], [Color.Blue])
    decl: type B = Color[]

  - use: |-
      let v: A<B,B> = new A<B,B>(null, new X[1][0])
    decl: type B = X[][]|null

  - use: |-
      let v: A<Y,B> = new A<Y,B>(new Y(), new Y[0])
    decl: type B = Y[]

