# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - decl: |-
      class A {
        static i: int = 0
        j: int = 0
      }
    check: |-
      let a: Partial<A> = {i:1, j:2}
      assertEQ(a.j, 2)
    tags: compile-only, negative
    doc: Static field is not a part of Partial<T>

  - decl: |-
      abstract class AC {
        static i: int = 0
        j: int = 0
      }
    check: |-
      let a: Partial<AC> = {i:1, j:2}
      assertEQ(a.j, 2)
    tags: compile-only, negative
    doc: Static field is not a part of Partial<T>

  - decl: |-
      class A {
        static i: int = 0
        j: int = 0
      }
    check: |-
      let a: Partial<A> = {j:2}
      assertEQ(a.j, 2)

  - decl: |-
      abstract class AC {
        static i: int = 0
        j: int = 0
      }
    check: |-
      let a: Partial<AC> = {j:2}
      assertEQ(a.j, 2)

  - decl: |-
      let firstrun = true
      class A {
        static i: int = 1
        j: int = 0
      }
      type P = Partial<A>
    check: |-
      let a: P = {j:2}
      if(firstrun) {
        assertEQ(P.i, undefined)
        P.i = 3
        firstrun = false
      }
      assertEQ(P.i, 3)
      assertEQ(A.i, 1)
    doc: |-
      Static field is a part of Partial<T> class. Field becomes optional and, thus, gets undefined value.

  - decl: |-
      let firstrun = true
      abstract class AC {
        static i: int = 2
        j: int = 0
      }
      type P = Partial<AC>
    check: |-
      let a: P = {j:2}
      if(firstrun) {
        assertEQ(P.i, undefined)
        P.i = 3
        firstrun = false
      }
      assertEQ(P.i, 3)
      assertEQ(AC.i, 2)
    doc: |-
      Static field is a part of Partial<T> class. Field becomes optional and, thus, gets undefined value.

  - decl: |-
      class A {
        static foo(){}
        j: int = 0
      }
      type P = Partial<A>
    check: |-
      P.foo()
    tags: compile-only, negative
    doc: Static method is not a part of Partial<T>.

  - decl: |-
      abstract class AC {
        static foo(){}
        j: int = 0
      }
      type P = Partial<AC>
    check: |-
      P.foo()
    tags: compile-only, negative
    doc: Static method is not a part of Partial<T>.
