# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:

  - type: short
    ref_type: Byte
    values: [new Byte(-128 as byte), new Byte(0 as byte), new Byte(127 as byte)]

  - type: int
    ref_type: Byte
    values: [new Byte(-128 as byte), new Byte(0 as byte), new Byte(127 as byte)]

  - type: long
    ref_type: Byte
    values: [new Byte(-128 as byte), new Byte(0 as byte), new Byte(127 as byte)]

  - type: float
    ref_type: Byte
    values: [new Byte(-128 as byte), new Byte(0 as byte), new Byte(127 as byte)]

  - type: double
    ref_type: Byte
    values: [new Byte(-128 as byte), new Byte(0 as byte), new Byte(127 as byte)]


  - type: int
    ref_type: Char
    values: ["new Char(c'\\u0000')", "new Char(c'X')", "new Char(c'\\uffff')"]

  - type: long
    ref_type: Char
    values: ["new Char(c'\\u0000')", "new Char(c'X')", "new Char(c'\\uffff')"]

  - type: float
    ref_type: Char
    values: ["new Char(c'\\u0000')", "new Char(c'X')", "new Char(c'\\uffff')"]

  - type: double
    ref_type: Char
    values: ["new Char(c'\\u0000')", "new Char(c'X')", "new Char(c'\\uffff')"]


  - type: int
    ref_type: Short
    values: [new Short(Short.MIN_VALUE as short), new Short(255 as short)]

  - type: long
    ref_type: Short
    values: [new Short(Short.MIN_VALUE as short), new Short(255 as short)]

  - type: float
    ref_type: Short
    values: [new Short(Short.MIN_VALUE as short), new Short(255 as short)]

  - type: double
    ref_type: Short
    values: [new Short(Short.MIN_VALUE as short), new Short(255 as short)]


  - type: long
    ref_type: Int
    values: [new Int(127), new Int(32767), new Int(Int.MAX_VALUE as int)]

  - type: float
    ref_type: Int
    values: [new Int(127), new Int(32767), new Int(Int.MAX_VALUE as int)]

  - type: double
    ref_type: Int
    values: [new Int(127), new Int(32767), new Int(Int.MAX_VALUE as int)]


  - type: float
    ref_type: Long
    values: [new Long(Long.MIN_VALUE as long), new Long(9223372036854775807 as long)]

  - type: double
    ref_type: Long
    values: [new Long(Long.MIN_VALUE as long), new Long(9223372036854775807 as long)]


  - type: double
    ref_type: Float
    values: [new Float(1.401298464324817e-45 as float), new Float(Float.MAX_VALUE)]
