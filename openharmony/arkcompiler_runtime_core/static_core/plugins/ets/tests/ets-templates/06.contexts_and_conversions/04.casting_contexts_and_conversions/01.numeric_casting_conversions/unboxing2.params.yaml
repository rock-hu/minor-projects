# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - types:
      - { dtype: short, dval: 119 as short, type: Byte, val: 0x77 as byte }
      - { dtype: int, dval: 119, type: Byte, val: 0x77 as byte }
      - { dtype: long, dval: 119 as long, type: Byte, val: 0x77 as byte }
      - { dtype: float, dval: 16.0 as float, type: Byte, val: 16 as byte }
      - { dtype: double, dval: 16.0 as double, type: Byte, val: 16 as byte }

      - { dtype: int, dval: 13, type: Char, val: "c'\\r'" }
      - { dtype: long, dval: 13 as long, type: Char, val: "c'\\r'" }
      - { dtype: float, dval: 32.0 as float, type: Char, val: "c'\\u0020'" }
      - { dtype: double, dval: 2.0 as double, type: Char, val: "c'\\u0002'" }

      - { dtype: int, dval: 21845, type: Short, val: 0x5555 as short }
      - { dtype: long, dval: 21845 as long, type: Short, val: 0x5555 as short }
      - { dtype: float, dval: 32 as float, type: Short, val: 0x20 as short }
      - { dtype: double, dval: 32.0, type: Short, val: 0x20 as short }

      - { dtype: long, dval: 18 as long, type: Int, val: 0x12 as int }
      - { dtype: float, dval: 2 as float, type: Int, val: 0x2 as int }
      - { dtype: double, dval: 2 as double, type: Int, val: 0x2 as int }

      - { dtype: float, dval: 4 as float, type: Long, val: 4 as long }
      - { dtype: double, dval: 4 as double, type: Long, val: 4 as long }

      - { dtype: double, dval: 0.5, type: Float, val: 0.5 as float }
