# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  - types:
      - { dtype: Boolean, stype: Object, pval: 'true' }
      - { dtype: Boolean, stype: Comparable<Boolean>, pval: 'true' }
      - { dtype: Boolean, stype: Object, pval: 'false' }
      - { dtype: Boolean, stype: Comparable<Boolean>, pval: 'false' }

      - { dtype: Byte, stype: Object, pval: 0x55 as byte }
      - { dtype: Byte, stype: Numeric, pval: 0x7F as byte }
      - { dtype: Byte, stype: Integral, pval: 0x80 as byte }
      - { dtype: Byte, stype: Comparable<Byte>, pval: 0x80 as byte }

      - { dtype: Char, stype: Object, pval: "c'W'" }
      - { dtype: Char, stype: Comparable<Char>, pval: "c'Z'" }

      - { dtype: Short, stype: Object, pval: 0x5555 as short }
      - { dtype: Short, stype: Numeric, pval: 0x5555 as short }
      - { dtype: Short, stype: Integral, pval: 0x5555 as short }
      - { dtype: Short, stype: Comparable<Short>, pval: 0x5555 as short }

      - { dtype: Int, stype: Object, pval: '0x12121212' }
      - { dtype: Int, stype: Numeric, pval: '0x12121212' }
      - { dtype: Int, stype: Integral, pval: '0x12121212' }
      - { dtype: Int, stype: Comparable<Int>, pval: '0x12121212' }

      - { dtype: Long, stype: Object, pval: 0x3434343456565656 as long }
      - { dtype: Long, stype: Numeric, pval: 0x3434343456565656 as long }
      - { dtype: Long, stype: Integral, pval: 0x3434343456565656 as long }
      - { dtype: Long, stype: Comparable<Long>, pval: 0x3434343456565656 as long }

      - { dtype: Float, stype: Object, pval: 0.00001f }
      - { dtype: Float, stype: Numeric, pval: -0.00001f }
      - { dtype: Float, stype: Floating, pval: 0.00001f }
      - { dtype: Float, stype: Comparable<Float>, pval: -0.00001f }

      - { dtype: Double, stype: Object, pval: '0.00000000001' }
      - { dtype: Double, stype: Numeric, pval: '0.00000000001' }
      - { dtype: Double, stype: Floating, pval: '0.00000000001' }
      - { dtype: Double, stype: Comparable<Double>, pval: '0.00000000001' }

      - { dtype: String, stype: Object, pval: '"ABC"' }
      - { dtype: String, stype: Comparable<String>, pval: '"XYZ"' }
