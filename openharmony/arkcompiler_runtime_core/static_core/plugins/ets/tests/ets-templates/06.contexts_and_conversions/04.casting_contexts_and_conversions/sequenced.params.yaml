# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - { stype: byte, sval: '0 as byte', dtype: Short }
    - { stype: byte, sval: '0 as byte', dtype: Char }
    - { stype: byte, sval: '0 as byte', dtype: Int }
    - { stype: byte, sval: '0 as byte', dtype: Long }
    - { stype: byte, sval: '0 as byte', dtype: Float }
    - { stype: byte, sval: '0 as byte', dtype: Double }

    - { stype: char, sval: "c'X'", dtype: Byte }
    - { stype: char, sval: "c'X'", dtype: Short }
    - { stype: char, sval: "c'X'", dtype: Int }
    - { stype: char, sval: "c'X'", dtype: Long }
    - { stype: char, sval: "c'X'", dtype: Float }
    - { stype: char, sval: "c'X'", dtype: Double }

    - { stype: short, sval: '0 as short', dtype: Byte }
    - { stype: short, sval: '0 as short', dtype: Char }
    - { stype: short, sval: '0 as short', dtype: Int }
    - { stype: short, sval: '0 as short', dtype: Long }
    - { stype: short, sval: '0 as short', dtype: Float }
    - { stype: short, sval: '0 as short', dtype: Double }

    - { stype: int, sval: '0', dtype: Byte }
    - { stype: int, sval: '0', dtype: Short }
    - { stype: int, sval: '0', dtype: Char }
    - { stype: int, sval: '0', dtype: Long }
    - { stype: int, sval: '0', dtype: Float }
    - { stype: int, sval: '0', dtype: Double }

    - { stype: long, sval: '0 as long', dtype: Byte }
    - { stype: long, sval: '0 as long', dtype: Short }
    - { stype: long, sval: '0 as long', dtype: Char }
    - { stype: long, sval: '0 as long', dtype: Int }
    - { stype: long, sval: '0 as long', dtype: Float }
    - { stype: long, sval: '0 as long', dtype: Double }

    - { stype: float, sval: '0f', dtype: Byte }
    - { stype: float, sval: '0f', dtype: Short }
    - { stype: float, sval: '0f', dtype: Char }
    - { stype: float, sval: '0f', dtype: Int }
    - { stype: float, sval: '0f', dtype: Long }
    - { stype: float, sval: '0f', dtype: Double }

    - { stype: double, sval: '0.0', dtype: Byte }
    - { stype: double, sval: '0.0', dtype: Short }
    - { stype: double, sval: '0.0', dtype: Char }
    - { stype: double, sval: '0.0', dtype: Int }
    - { stype: double, sval: '0.0', dtype: Long }
    - { stype: double, sval: '0.0', dtype: Float }

    - { stype: Byte, sval: 'new Byte()', dtype: char }
    - { stype: Byte, sval: 'new Byte()', dtype: short }
    - { stype: Byte, sval: 'new Byte()', dtype: int }
    - { stype: Byte, sval: 'new Byte()', dtype: long }
    - { stype: Byte, sval: 'new Byte()', dtype: float }
    - { stype: Byte, sval: 'new Byte()', dtype: double }
    - { stype: Byte, sval: 'new Byte()', dtype: Short }
    - { stype: Byte, sval: 'new Byte()', dtype: Char }
    - { stype: Byte, sval: 'new Byte()', dtype: Int }
    - { stype: Byte, sval: 'new Byte()', dtype: Long }
    - { stype: Byte, sval: 'new Byte()', dtype: Float }
    - { stype: Byte, sval: 'new Byte()', dtype: Double }

    - { stype: Char, sval: "new Char(c'X')", dtype: byte }
    - { stype: Char, sval: "new Char(c'X')", dtype: short }
    - { stype: Char, sval: "new Char(c'X')", dtype: int }
    - { stype: Char, sval: "new Char(c'X')", dtype: long }
    - { stype: Char, sval: "new Char(c'X')", dtype: float }
    - { stype: Char, sval: "new Char(c'X')", dtype: double }
    - { stype: Char, sval: "new Char(c'X')", dtype: Byte }
    - { stype: Char, sval: "new Char(c'X')", dtype: Short }
    - { stype: Char, sval: "new Char(c'X')", dtype: Int }
    - { stype: Char, sval: "new Char(c'X')", dtype: Long }
    - { stype: Char, sval: "new Char(c'X')", dtype: Float }
    - { stype: Char, sval: "new Char(c'X')", dtype: Double }

    - { stype: Short, sval: 'new Short()', dtype: byte }
    - { stype: Short, sval: 'new Short()', dtype: char }
    - { stype: Short, sval: 'new Short()', dtype: int }
    - { stype: Short, sval: 'new Short()', dtype: long }
    - { stype: Short, sval: 'new Short()', dtype: float }
    - { stype: Short, sval: 'new Short()', dtype: double }
    - { stype: Short, sval: 'new Short()', dtype: Byte }
    - { stype: Short, sval: 'new Short()', dtype: Char }
    - { stype: Short, sval: 'new Short()', dtype: Int }
    - { stype: Short, sval: 'new Short()', dtype: Long }
    - { stype: Short, sval: 'new Short()', dtype: Float }
    - { stype: Short, sval: 'new Short()', dtype: Double }

    - { stype: Int, sval: 'new Int()', dtype: byte }
    - { stype: Int, sval: 'new Int()', dtype: short }
    - { stype: Int, sval: 'new Int()', dtype: char }
    - { stype: Int, sval: 'new Int()', dtype: long }
    - { stype: Int, sval: 'new Int()', dtype: float }
    - { stype: Int, sval: 'new Int()', dtype: double }
    - { stype: Int, sval: 'new Int()', dtype: Byte }
    - { stype: Int, sval: 'new Int()', dtype: Short }
    - { stype: Int, sval: 'new Int()', dtype: Char }
    - { stype: Int, sval: 'new Int()', dtype: Long }
    - { stype: Int, sval: 'new Int()', dtype: Float }
    - { stype: Int, sval: 'new Int()', dtype: Double }

    - { stype: Long, sval: 'new Long()', dtype: byte }
    - { stype: Long, sval: 'new Long()', dtype: short }
    - { stype: Long, sval: 'new Long()', dtype: char }
    - { stype: Long, sval: 'new Long()', dtype: int }
    - { stype: Long, sval: 'new Long()', dtype: float }
    - { stype: Long, sval: 'new Long()', dtype: double }
    - { stype: Long, sval: 'new Long()', dtype: Byte }
    - { stype: Long, sval: 'new Long()', dtype: Short }
    - { stype: Long, sval: 'new Long()', dtype: Char }
    - { stype: Long, sval: 'new Long()', dtype: Int }
    - { stype: Long, sval: 'new Long()', dtype: Float }
    - { stype: Long, sval: 'new Long()', dtype: Double }

    - { stype: Float, sval: 'new Float()', dtype: byte }
    - { stype: Float, sval: 'new Float()', dtype: short }
    - { stype: Float, sval: 'new Float()', dtype: char }
    - { stype: Float, sval: 'new Float()', dtype: int }
    - { stype: Float, sval: 'new Float()', dtype: long }
    - { stype: Float, sval: 'new Float()', dtype: double }
    - { stype: Float, sval: 'new Float()', dtype: Byte }
    - { stype: Float, sval: 'new Float()', dtype: Short }
    - { stype: Float, sval: 'new Float()', dtype: Char }
    - { stype: Float, sval: 'new Float()', dtype: Int }
    - { stype: Float, sval: 'new Float()', dtype: Long }
    - { stype: Float, sval: 'new Float()', dtype: Double }

    - { stype: Double, sval: 'new Double()', dtype: byte }
    - { stype: Double, sval: 'new Double()', dtype: short }
    - { stype: Double, sval: 'new Double()', dtype: char }
    - { stype: Double, sval: 'new Double()', dtype: int }
    - { stype: Double, sval: 'new Double()', dtype: long }
    - { stype: Double, sval: 'new Double()', dtype: float }
    - { stype: Double, sval: 'new Double()', dtype: Byte }
    - { stype: Double, sval: 'new Double()', dtype: Short }
    - { stype: Double, sval: 'new Double()', dtype: Char }
    - { stype: Double, sval: 'new Double()', dtype: Int }
    - { stype: Double, sval: 'new Double()', dtype: Long }
    - { stype: Double, sval: 'new Double()', dtype: Float }
