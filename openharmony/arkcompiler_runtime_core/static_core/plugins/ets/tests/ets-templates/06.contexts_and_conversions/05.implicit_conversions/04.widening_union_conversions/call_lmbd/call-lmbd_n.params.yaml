# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - to_type: byte|short|int|long
      values:
          - { from_type: 'float', expr: '3.5f' }

    - to_type: Float|Double|Number
      values:
          - { from_type: 'string|number|float', expr: '"abcdefghijklmnopqrstuvwxyz"' }

    - to_type: byte|short|int|long|float|double
      values:
          - { from_type: 'bigint|double', expr: '11111111111111111111111111111111111111111n' }

    - decl: |-
          interface I {}
          interface J {}
          interface K {}
          class A implements J {}
          let a: A = new A()
      to_type: Error|I|K
      values:
          - { from_type: 'A', expr: 'a' }

    - decl: |-
          class A {}
          class B {}
          type BU = B | undefined
          let b1: BU = new B()
      to_type: A|B
      values:
          - { from_type: 'BU', expr: 'b1' }

    - decl: |-
          class A {}
          class B {}
          let n: null = null
      to_type: float|A|B|undefined|short|boolean
      values:
          - { from_type: 'null', expr: 'n' }

    - to_type: null|undefined|never|boolean
      values:
          - { from_type: 'float', expr: '2.5e02f' }

    - decl: |-
          class A<T> {}
          class B<T> extends A<T> {}
          const a1: A<Int> = new A<Int>()
      to_type: A<Long>|A<Short>|B<Error>|B<Boolean>
      values:
          - { from_type: 'A<Int>|A<Number>|A<Boolean>', expr: 'a1' }
