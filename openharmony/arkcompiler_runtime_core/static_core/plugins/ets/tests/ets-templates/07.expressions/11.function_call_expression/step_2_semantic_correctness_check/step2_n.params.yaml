# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - decl: |-
          function foo(a: number, ...b: Boolean[]): string {
              return "A"
          }
      use: |-
          // incompatible types
          let arr: Object[] = [new Object(), new Object()]
          assert foo(1.0, ...arr) == "A"

    - decl: |-
          function foo(...a: number[]): string {
              return "N"
          }
      use: |-
          // cannot use multiple spread operators
          let arr: number[] = [1.0, 2.0]
          assert foo(...arr, ...arr) == "N"

    - decl: |-
          class A {}
          function foo(p1: A, p2: A): string {
              return "A"
          }
      use: |-
          // cannot use spread operator for foo
          let arr: A[] = [new A(), new A()]
          assert foo(...arr) == "A"

    - decl: |-
          class A {}
          class B extends A {}
          class C extends B {}
          function foo(...p: B[]): string {
              return "B"
          }
      use: |-
          // incompatible types
          let arr: A[] = [new B(), new C()]
          assert foo(...arr) == "B"

