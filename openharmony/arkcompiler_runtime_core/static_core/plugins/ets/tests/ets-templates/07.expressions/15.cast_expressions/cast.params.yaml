# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
cases:
    - decl: |-
          let s = 42
      use: |-
          let t = s as number  // primitive widening
          assertEQ( t, 42.0 )

    - decl: |-
          let s = 42
      use: |-
          let t = s as Number  // primitive widening and boxing
          assertTrue( t instanceof Number && t.unboxed() == 42.0 )

    - decl: |-
          let s = Float.MAX_VALUE
      use: |-
          let t = s as Float  // boxing
          assertTrue( t instanceof Float && t.unboxed() == Float.MAX_VALUE )

    - decl: |-
          let s = new Float(3.5 as float)
      use: |-
          let t = s as float  // unboxing
          assertEQ( t, 3.5 )

    - decl: |-
          let s = "string"
      use: |-
          let t = s as Object  // reference widening
          assertTrue( t instanceof Object && (t as string) == "string" )

    - decl: |-
          let s = 42.0
      use: |-
          let t = s as int  // primitive narrowing
          assertEQ( t, 42 )

    - decl: |-
          let s: byte = 0x40 as byte
      use: |-
          let t = s as char  // primitive widening and narrowing
          assertEQ( t, c'@' )

    - decl: |-
          interface I {}
          class B implements I {}
          let s = new B()
      use: |-
          let t = s as I  // reference widening
          assertTrue( t instanceof I )
