# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
enums:
    - decl: |-
          // default integer values
          enum Color { Red, Green, Blue }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // integer min and max values
          enum Color { Blue = 2147483647, Red = -2147483648, Green = 0 }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // integer some duplicate values
          enum Color { Blue = -1, Red = -1, Green }
      op: ['', '!', '!', '', '', '!', '!', '!', '', '!', '', '']

    - decl: |-
          // integer all duplicate values
          enum Color { Blue = 555, Red = 555, Green = 555 }
      op: ['!', '!', '!', '', '', '', '!', '!', '!', '', '', '']

    - decl: |-
          // integer all negative values
          enum Color { Green = -300, Blue, Red = -301 }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // integer all positive values
          enum Color { Blue = 32767, Green = 2047, Red = 127 }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // single char string values
          enum Color { Red = "a", Green = "b", Blue = "c" }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // string all duplicate values
          enum Color { Green = "\u0000\u0001\u0000", Blue = "\u0000\u0001\u0000", Red = "\u0000\u0001\u0000" }
      op: ['!', '!', '!', '', '', '', '!', '!', '!', '', '', '']

    - decl: |-
          // same length string values
          enum Color {
              Blue = "kajsgkjsgffjsg adsgf jsdhgjfadhsgf ajhdgfa jhsgdfjahsgdf jhfgyegfajsdhg ajjsdfgaj shdfga efjhbg",
              Red = "kajsgkjsgffjsg adsgf jsdhgjfadhsgf ajhdgfa jhsgdfjahsgdf jhfgyegfajsdhg ajjsdfgaj shdfga dfjhag",
              Green = "kajsgkjsgffjsg adsgf jsdhgjfadhsgf ajhdgfa jhsgdfjahsgdf jhfgyegfajsdhg ajjsdfgaj shdfga efjhag"
          }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // different length string values
          enum Color { Blue = "   ", Red = "", Green = "  " }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

    - decl: |-
          // different case and encoding string values
          enum Color { Blue = "   Ð° code", Red = "   A code", Green = "   a code" }
      op: ['', '', '', '', '', '', '!', '!', '!', '!', '!', '!']

operands:
    - [rl(0), Color.Green, bl(2)]
    - [r, gl(1), Color.Blue]
    - [Color.Red, gl(1), bl(2)]
