# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - { ltype: 'String', lval: '"test0"', op: '==', rtype: 'Boolean', rval: 'true' }
    - { ltype: 'String', lval: '"test1"', op: '==', rtype: 'Byte' , rval: '0' }
    - { ltype: 'String', lval: '"test2"', op: '==', rtype: 'Int' , rval: '-134242' }
    - { ltype: 'String', lval: '"test3"', op: '==', rtype: 'Short' , rval: '43000' }
    - { ltype: 'String', lval: '"test4"', op: '==', rtype: 'Long' , rval: '147483647' }

    - { rtype: 'String', rval: '"test5"', op: '==', ltype: 'Float', lval: '0.1' }
    - { rtype: 'String', rval: '"test6"', op: '==', ltype: 'Double', lval: '4E10' }
    - { rtype: 'String', rval: '"test7"', op: '==', ltype: 'BigInt', lval: '123456789n' }
    - { rtype: 'String', rval: '"test8"', op: '==', ltype: 'FixedArray<String>', lval: '["test1"]' }
    - { rtype: 'String', rval: '"test9"', op: '==', ltype: 'TestClass', lval: 'new TestClass()' }

    - { ltype: 'String', lval: '"test10"', op: '!=', rtype: 'Boolean', rval: 'false' }
    - { ltype: 'String', lval: '"test11"', op: '!=', rtype: 'Byte' , rval: '10' }
    - { ltype: 'String', lval: '"test12"', op: '!=', rtype: 'Int' , rval: '10000' }
    - { ltype: 'String', lval: '"test13"', op: '!=', rtype: 'Short' , rval: '-134242' }
    - { ltype: 'String', lval: '"test14"', op: '!=', rtype: 'Long' , rval: '147483647' }

    - { rtype: 'String', rval: '"test15"', op: '!=', ltype: 'Double', lval: '1E19' }
    - { rtype: 'String', rval: '"test16"', op: '!=', ltype: 'Float', lval: '0.0001' }
    - { rtype: 'String', rval: '"test17"', op: '!=', ltype: 'BigInt', lval: '0n' }
    - { rtype: 'String', rval: '"test18"', op: '!=', ltype: 'FixedArray<String>', lval: '["test2"]' }
    - { rtype: 'String', rval: '"test19"', op: '!=', ltype: 'TestClass', lval: 'new TestClass()' }

    - { ltype: 'String', lval: '"test20"', op: '===', rtype: 'Boolean', rval: 'false' }
    - { ltype: 'String', lval: '"test21"', op: '===', rtype: 'Byte' , rval: '100' }
    - { ltype: 'String', lval: '"test22"', op: '===', rtype: 'Int' , rval: '-100000' }
    - { ltype: 'String', lval: '"test23"', op: '===', rtype: 'Short' , rval: '-242' }
    - { ltype: 'String', lval: '"test24"', op: '===', rtype: 'Long' , rval: '-147483647' }

    - { rtype: 'String', rval: '"test25"', op: '===', ltype: 'Double', lval: '-0.7543221' }
    - { rtype: 'String', rval: '"test26"', op: '===', ltype: 'Rloat', lval: '1.111111' }
    - { rtype: 'String', rval: '"test27"', op: '===', ltype: 'BigInt', lval: '1919191919191919n' }
    - { rtype: 'String', rval: '"test28"', op: '===', ltype: 'FixedArray<String>', lval: '["test3"]' }
    - { rtype: 'String', rval: '"test29"', op: '===', ltype: 'TestClass', lval: 'new TestClass()' }

    - { ltype: 'String', lval: '"test30"', op: '!==', rtype: 'Boolean', rval: 'false' }
    - { ltype: 'String', lval: '"test31"', op: '!==', rtype: 'Byte' , rval: '55' }
    - { ltype: 'String', lval: '"test32"', op: '!==', rtype: 'Int' , rval: '2000000' }
    - { ltype: 'String', lval: '"test33"', op: '!==', rtype: 'Short' , rval: '13001' }
    - { ltype: 'String', lval: '"test34"', op: '!==', rtype: 'Long' , rval: '1413131317' }

    - { rtype: 'String', rval: '"test35"', op: '!==', ltype: 'Double', lval: 'Infinity' }
    - { rtype: 'String', rval: '"test36"', op: '!==', ltype: 'float', lval: '12345.0' }
    - { rtype: 'String', rval: '"test37"', op: '!==', ltype: 'BigInt', lval: '123456789n' }
    - { rtype: 'String', rval: '"test38"', op: '!==', ltype: 'FixedArray<String>', lval: '["test4"]' }
    - { rtype: 'String', rval: '"test29"', op: '!==', ltype: 'TestClass', lval: 'new TestClass()' }
