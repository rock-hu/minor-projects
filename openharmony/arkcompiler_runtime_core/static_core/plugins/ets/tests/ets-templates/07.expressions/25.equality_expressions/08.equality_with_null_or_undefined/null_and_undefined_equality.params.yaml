# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
        let a: undefined;
        assertEQ( a, undefined )

    - use: |-
        let a: undefined|null;
        assertEQ( a, undefined )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null;
        assertEQ( a, undefined )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null;
        assertTrue( a == null )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null;
        assertTrue( a === undefined )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null;
        assertTrue( a !== null )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null = new A();
        assertNE( a, null )

    - decl: |-
        class A {}
      use: |-
        let a: A|undefined|null = new A();
        assertNE( a, undefined )

    - use: |-
        assertNE( ((): void => {}), null )

    - use: |-
        assertNE( ((): void => {}), undefined )

    - use: |-
        assertNE( 3, null )

    - use: |-
        assertNE( 3, undefined )

    - decl: |-
        function foo(x: string | null): boolean {
          return x == null;
        }
      use: |-
        assertTrue( foo(null) )

    - decl: |-
        function foo(x: String | undefined): boolean {
          return x == undefined;
        }
      use: |-
        assertTrue( foo(undefined) )

    - decl: |-
        function foo(x: string | null | undefined): boolean {
          return x == null;
        }
      use: |-
        assertTrue( foo(null) )

    - decl: |-
        function foo(x: Object | null | undefined): boolean {
          return x == null;
        }
      use: |-
        assertTrue( foo(undefined) )

    - decl: |-
        function foo(x: String | null | undefined): boolean {
          return x == null;
        }
      use: |-
        assertTrue( !foo("") )

    - use: |-
        let a: Float;
        assertTrue( a != null );

    - use: |-
        let a: Float;
        assertTrue( a != undefined );

    - use: |-
        let a: Object = new Object();
        assertNE( a, null )

    - use: |-
        let a: Object = new Object();
        assertNE( a, undefined )

    - decl: |-
        class A {}
      use: |-
        let a: A;
        assertTrue( a != null )

    - decl: |-
        class A {}
      use: |-
        let a: A;
        assertTrue( a != undefined );

    - decl: |-
        function foo(x: string | undefined): boolean {
          return x == undefined
        }
      use: |-
        assertTrue( foo(undefined) )

    - decl: |-
        function foo(x: String | null): boolean {
          return x == null
        }
      use: |-
        assertTrue( foo(null) )
