# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # Conditional AND for Boolean
cases:
  - doc: Conditional AND for 2x Boolean - true true
    decl: |-
      let a: Boolean = true;
      let b: Boolean = true;
      assertTrue((a && b) == true);

  - doc: Conditional AND for 2x Boolean - true false
    decl: |-
      let a: Boolean = true;
      let b: Boolean = false;
      assertTrue((a && b) == false);

  - doc: Conditional AND for 2x Boolean - false unknown
    decl: |-
      let a: Boolean = false;
      assertTrue((a && fail()) == false);

  - doc: Conditional AND for 4x Boolean - true true true true
    decl: |-
      let a: Boolean = true;
      let b: Boolean = true;
      let c: Boolean = true;
      let d: Boolean = true;
      assertTrue((a && b && c && d) == true)

  - doc: Conditional AND for 4x Boolean - true true true false
    decl: |-
      let a: Boolean = true;
      let b: Boolean = true;
      let c: Boolean = true;
      let d: Boolean = false;
      assertTrue((a && b && c && d) == false)

  - doc: Conditional AND for 4x Boolean - true true false unknown
    decl: |-
      let a: Boolean = true;
      let b: Boolean = true;
      let c: Boolean = false;
      assertTrue((a && b && c && fail()) == false)

  - doc: Conditional AND for 4x Boolean - true false unknown...
    decl: |-
      let a: Boolean = true;
      let b: Boolean = false;
      assertTrue((a && b && fail() && fail()) == false)

  - doc: Conditional AND for 4x Boolean - false unknown...
    decl: |-
      let a: Boolean = false;
      assertTrue((a && fail() && fail() && fail()) == false)

