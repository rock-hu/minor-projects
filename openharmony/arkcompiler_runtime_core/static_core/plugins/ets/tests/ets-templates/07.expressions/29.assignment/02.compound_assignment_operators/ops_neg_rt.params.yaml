# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # primitive
  - { type: float, v: Float.POSITIVE_INFINITY, op: '-', q: Float.POSITIVE_INFINITY }
  - { type: float, v: Float.NEGATIVE_INFINITY, op: '-', q: Float.NEGATIVE_INFINITY }
  - { type: double, v: Double.POSITIVE_INFINITY, op: '-', q: Double.POSITIVE_INFINITY }
  - { type: double, v: Double.NEGATIVE_INFINITY, op: '-', q: Double.NEGATIVE_INFINITY }
  - { type: float, v: Float.POSITIVE_INFINITY, op: '/', q: Float.POSITIVE_INFINITY }
  - { type: float, v: Float.NEGATIVE_INFINITY, op: '/', q: Float.NEGATIVE_INFINITY }
  - { type: double, v: Double.POSITIVE_INFINITY, op: '/', q: Double.POSITIVE_INFINITY }
  - { type: double, v: Double.NEGATIVE_INFINITY, op: '/', q: Double.NEGATIVE_INFINITY }
  - { type: float, v: Float.POSITIVE_INFINITY, op: '%', q: Float.POSITIVE_INFINITY }
  - { type: float, v: Float.NEGATIVE_INFINITY, op: '%', q: Float.NEGATIVE_INFINITY }
  - { type: double, v: Double.POSITIVE_INFINITY, op: '%', q: Double.POSITIVE_INFINITY }
  - { type: double, v: Double.NEGATIVE_INFINITY, op: '%', q: Double.NEGATIVE_INFINITY }
  - { type: float, v: 0.0, op: '/', q: -0.0 }
  - { type: double, v: 0.0, op: '/', q: -0.0 }
  - { type: float, v: 0.0, op: '%', q: -0.0 }
  - { type: double, v: 0.0, op: '%', q: -0.0 }

  # boxed
  - { type: Float, v: Float.POSITIVE_INFINITY, op: '-', q: Float.POSITIVE_INFINITY }
  - { type: Float, v: Float.NEGATIVE_INFINITY, op: '-', q: Float.NEGATIVE_INFINITY }
  - { type: Double, v: Double.POSITIVE_INFINITY, op: '-', q: Double.POSITIVE_INFINITY }
  - { type: Double, v: Double.NEGATIVE_INFINITY, op: '-', q: Double.NEGATIVE_INFINITY }
  - { type: Float, v: Float.POSITIVE_INFINITY, op: '/', q: Float.POSITIVE_INFINITY }
  - { type: Float, v: Float.NEGATIVE_INFINITY, op: '/', q: Float.NEGATIVE_INFINITY }
  - { type: Double, v: Double.POSITIVE_INFINITY, op: '/', q: Double.POSITIVE_INFINITY }
  - { type: Double, v: Double.NEGATIVE_INFINITY, op: '/', q: Double.NEGATIVE_INFINITY }
  - { type: Float, v: Float.POSITIVE_INFINITY, op: '%', q: Float.POSITIVE_INFINITY }
  - { type: Float, v: Float.NEGATIVE_INFINITY, op: '%', q: Float.NEGATIVE_INFINITY }
  - { type: Double, v: Double.POSITIVE_INFINITY, op: '%', q: Double.POSITIVE_INFINITY }
  - { type: Double, v: Double.NEGATIVE_INFINITY, op: '%', q: Double.NEGATIVE_INFINITY }
  - { type: Float, v: 0.0, op: '/', q: -0.0 }
  - { type: Double, v: 0.0, op: '/', q: -0.0 }
  - { type: Float, v: 0.0, op: '%', q: -0.0 }
  - { type: Double, v: 0.0, op: '%', q: -0.0 }
