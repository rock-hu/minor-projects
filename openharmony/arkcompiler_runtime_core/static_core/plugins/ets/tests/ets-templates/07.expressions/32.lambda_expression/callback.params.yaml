# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


--- # Callbacks and type inference
cases:
  - desc: one value arg
    impl: |-
        function test(op: (a: int) => int) {
            const arg = 4
            return op(arg)
        }
        assertEQ(test((n) => n + n), 8, "Dub failed")

  - desc: two value args
    impl: |-
        function test(op: (a: int, b: int) => int) {
            const a = 5
            const b = 3
            return op(a, b)
        }
        assertEQ(test((a, b) => a + b), 8, "Sum failed")

  - desc: two reference args
    impl: |-
        function test(op: (a: String, b: String) => String) {
            const a = "Hello, "
            const b = "World!"
            return op(a, b)
        }
        assertEQ(test((a, b) => a + b), "Hello, World!", "Concat failed")

  - desc: one value arg without parenseses
    impl: |-
        function test(op: (a: int) => int) {
            const arg = 4
            return op(arg)
        }
        assertEQ(test(n => n), 4, "Same failed")
