# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  # error propagation to caller context
  - defs: |-
      class Er extends Error {}

      function foo(e: Er, cnt: int): Er {
          if (cnt > 0) throw foo(e, --cnt);
          return e;
      }
    use: |-
      try {
          foo(new Er(), 100);
      } catch (e) {
          return e instanceof Er ? 0 : 1;
      }
      return 1;

  # assignment compatible to error
  - defs: |-
      interface I {}
      class Er extends Error implements I {}
    use: |-
      let err: I = new Er();
      try {
          if (1 != 2) throw err as Error;
      } catch (e) {
          return e instanceof I && e instanceof Er ? 0 : 1;
      }
      return 1;
