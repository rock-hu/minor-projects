# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # public access modifier
    - files: './dir_pub_1/file_A.ets'
      decl: |-
          import { A } from './dir_pub_1/file_A';
      use: |-
          // separate module, positive case with public accessor
          let a = new A
          a.foo = 42
          assertEQ( a.foo, 42 )

    - files: './dir_pub_2/file_B.ets'
      decl: |-
          import { B } from './dir_pub_2/file_B';
      use: |-
          // separate module, positive case with public accessor, from subclass
          let b = new B
          b.foo = 42
          assertEQ( b.foo, 44 )

    # protected access modifier
    - files: './dir_prot_1/file_A.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { A } from './dir_prot_1/file_A';
      use: |-
          // separate module, negative case with protected accessor
          let a = new A
          a.foo = 42
          assertEQ( a.foo, 42 )

    - files: './dir_prot_2/file_B.ets'
      decl: |-
          import { B } from './dir_prot_2/file_B';
      use: |-
          // separate module, positive case with protected accessor, from subclass
          let b = new B
          b.foo = 42
          assertEQ( b.foo, 44 )

    # private access modifier
    - files: './dir_priv_1/file_A.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { A } from './dir_priv_1/file_A';
      use: |-
          // separate module, negative case with private accessor
          let a = new A
          a.foo = 42
          assertEQ( a.foo, 42 )

    - files: './dir_priv_2/file_B.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { B } from './dir_priv_2/file_B';
      use: |-
          // separate module, negative case with private accessor, from subclass
          let b = new B
          b.foo = 42
          assertEQ( b.foo, 44 )
