# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
  #0. Type parameter number[][]
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myMatrix: dm.Matrix ;
      assertTrue(typeof myMatrix == 'object' ) ;

  #1. Type parameter with arrow function
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myHandler: dm.Handler = (s: string, no: number) => "ret_string";
      assertTrue(typeof myHandler == 'function' )

  #2. Type parameter with generic and arrow function
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myPredicate: dm.Predicate<string> = (s: string) => true;
      assertTrue(typeof myPredicate == 'function' )      

  #3. Type parameter Nullable
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myNumber: dm.NullableNumber;
      assertTrue( (typeof myNumber as string) == 'undefined' );
      myNumber = 1;
      assertTrue(typeof myNumber == 'number' );
      myNumber = null;
      assertTrue(typeof myNumber == 'object' );

  #4. Type parameter with generic
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myMapOfString: dm.MapOfString<string> = new Map<string, string>();
      assertTrue(typeof myMapOfString == 'object' );   

  #5. Type parameter with generic
  - imp: |-
      import * as dm from "./declaration_module.ets"
    use: |-
      let myAAA: dm.AAA<string> = new Array<dm.AAA<string>>;
      assertTrue(typeof myAAA == 'object' );

