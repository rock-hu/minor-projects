# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - |-
          bb = bd // OK: identical parameter types, and covariant return type
    - |-
          db = bd // OK: contravariant parameter types, and covariant return type
    - |-
          let f: (p: Base, n: number) => Base = bb // OK: subtype has less parameters
    - |-
          let f: (p: Base) => void = bb // OK: return type of supertype is void
    - |-
          function foo(p?: Base): void {}
          let f: (p?: Base) => void = foo // OK: parameters are optional
    - |-
          function foo(...p: Base[]): void {}
          let f: (...p: Base[]) => void = foo // OK: parameters are rest
