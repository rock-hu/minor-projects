# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
 # use enum
 - tags: negative, compile-only
   decl: |-
     class C {
         p1: int;
         p2: int;
     }
     function foo(i: C) { return i.p2; }
   use: |-
     let c: C = { p1 = 1, p2 = 2 };
     assertTrue(foo(c) == 2);

 # use object literal
 - decl: |-
     class C {
         p1: string = "";
         p2: int;
     }
     function foo(i: C) { return i.p2; }
   use: |-
     let c: C = { p1: "Xzc", p2: 2 };
     assertTrue(foo(c) == 2);

 # use tuple
 - tags: negative, compile-only
   decl: |-
     class C {
         p1: string = "";
         p2: int;
     }
     function foo(i: C) { return i.p2; }
   use: |-
     let c: C = [ "Xzc", 2 ];
     assertTrue(foo(c) == 2);
