# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
    # var init
    - code: |-
          let v: Object[]|undefined = new X[1]
          res = v[0].int2str(123) + 4 == '1234'

    # var assignment
    - code: |-
          let v: Object[]|undefined = undefined
          v = [new X()] as X[]
          res = v[0].int2str(987) + 6 == '9876'

    # function argument
    - decl: |-
          function foo(p: X[]): string {
              return p[0].int2str(123)
          }
      code: |-
          let v: Object[]|undefined = undefined
          v = [new X()] as X[]
          res = foo(v) == '123'

    # constructor argument
    - decl: |-
          class A {
              fld: X[]
              constructor(p: X[]) {
                  this.fld = p
              }
          }
      code: |-
          let v: Object[]|undefined = undefined
          v = new X[1]
          let a: A = new A(v)
          res = a.fld[0].int2str(123) == '123'

    # method argument
    - decl: |-
          class A {
              meth(p: X[]): string {
                  return p[0].int2str(123)
              }
          }
      code: |-
          let v: Object[]|null = null
          let a: A = new A()
          v = new X[1]
          res = a.meth(v) == '123'

    # array literal element
    - code: |-
          let v: Object[]|null = new Error[1]
          let arr: X[][]
          v = new X[1]
          arr = [v, v]
          res = arr[0][0].int2str(9) == '9' && arr[1][0].int2str(-8) == '-8'

    # object literal
    - decl: |-
          class A {
              f: X[] = []
          }
      code: |-
          let v: Object|undefined = new Int()
          v = new X[1]
          let a: A = { f: v }
          res = a.f[0].int2str(5) == '5'

    # lambda argument
    - code: |-
          let v: Object[]|undefined|null = undefined
          v = new X[1]
          res = ((p: X[]): string => { return p[0].int2str(777) })(v) == '777'
