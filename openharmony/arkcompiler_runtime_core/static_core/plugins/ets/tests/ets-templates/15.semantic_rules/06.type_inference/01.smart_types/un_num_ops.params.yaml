# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cases:
    # numeric operations
    - decl: |-
          function foo(p: number): number {
              return p + 1
          }
      code: |-
          let v: string|number|Error|null = new Error()
          v = foo(0.0)
          if (!res) {
              res = v > -13.0 && v < 42.0
          }

    - decl: |-
          function foo(p: number): number {
              return p + 1
          }
      tags: 'compile-only, negative'
      code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = foo(0.0)
          }
          res = v > -13.0 && v < 42.0

    - code: |-
          let v: string|number|Error|null = new Error()
          res = (v = 42.0) > -13.0 && v < 44.0

    - code: |-
          let v: string|number|Error|null = new Error()
          v = 0.0
          if (!res) {
              res = v >= -13.0 && v <= 0.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = 0.0
          }
          res = v >= -13.0 && v <= 0.0
      tags: 'compile-only, negative'

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              res = (v = 0.0) >= -13.0 && v <= 0.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          v = 0.0
          if (!res) {
              res = v == 0 && v != 1
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          v = 42.0
          if (!res) {
              res = -v - (+v) == -84.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = 42.0
          }
          res = -v - (+v) == -84.0
      tags: 'compile-only, negative'

    - code: |-
          let v: string|number|Error|null = new Error()
          res = (v = 42.0) * 2 + v / 2 + v % 13.0 == 108.0

    - code: |-
          let v: string|number|Error|null = new Error()
          v = 42.0
          if (!res) {
              res = ++v + v++ + --v + v-- == 172.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = 42.0
          }
          res = ++v + v++ + --v + v-- == 172.0
      tags: 'compile-only, negative'

    - code: |-
          let v: string|number|Error|null = new Error()
          v = 42.0
          if (!res) {
              res = v << 2 + v >> 2 + v >>> 1 == 21
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = 42.0
          }
          res = v << 2 + v >> 2 + v >>> 1 == 21
      tags: 'compile-only, negative'

    - code: |-
          let v: string|number|Error|null = new Error()
          v = -42.0
          if (!res) {
              res = ~v + ~(~v) == -1
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          if (!res) {
              v = -42.0
          }
          res = ~v + ~(~v) == -1
      tags: 'compile-only, negative'

    - code: |-
          let v: string|number|Error|null = new Error()
          let q: boolean|number|Error|null = false
          v = 42.0
          q = 156.0
          if (!res) {
              res = (v & q + v | q + v ^ q) == 90
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          let q: boolean|number|Error|null = false
          if (!res) {
              v = 42.0
              q = 156.0
          }
          res = (v & q + v | q + v ^ q) == 90
      tags: 'compile-only, negative'

    - code: |-
          let v: number|string|boolean = true
          v = v ? (v = 20.0) / 2.0 : 1.0
          if (!res) {
              res = v == 10.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          let q: boolean|number|Error|null = false
          v = 42.0
          q = 156.0
          if (!res) {
              res = (q > 155.0 ? v < 41.0 ? 1.0 : 2.0 : 3.0) == 2.0
          }

    - code: |-
          let v: string|number|Error|null = new Error()
          let q: boolean|number|Error|null = false
          if (!res) {
              v = 42.0
              q = 156.0
          }
          res = (q > 155.0 ? v < 41.0 ? 1.0 : 2.0 : 3.0) == 2.0
      tags: 'compile-only, negative'
