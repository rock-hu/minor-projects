/*---
Copyright (c) 2024 Huawei Device Co., Ltd.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
---*/

/*---
desc: >-
    A function can be declared in or imported to the scope. It is not allowed to mix functions declared and imported, or
    imported from different compilation units to prevent uncontrolled overloading. To be more precise, a compile-time
    error occurs for functions with the same name, if
    • Functions are imported from different compilation units;
    • Some functions are imported and others are declared.
files:
- ./modules/function_export_all.sts
---*/

import {foo} from "./modules/function_export_all.sts"
import {TPL} from "./modules/function_export_all.sts"

function main(): void {
    let tpl: TPL = [new Number(), new String()];

    assert(foo(true) == 2);
    assert(foo(new Boolean()) == 3);
    assert(foo(c'A') == 4);
    assert(foo(new Char()) == 5);
    assert(foo(1 as short) == 6);
    assert(foo(new Short()) == 7);
    assert(foo(1 as int) == 8);
    assert(foo(new Int()) == 9);
    assert(foo(1 as long) == 10);
    assert(foo(new Long()) == 11);
    assert(foo(1.1 as float) == 12);
    assert(foo(new Float()) == 13);
    assert(foo(1.2 as double) == 14);
    assert(foo(new Number()) == 15);
    assert(foo("knock-knock") == 16);
    assert(foo(new Object()) == 17);
    assert(foo(new Number[2]) == 18);
    assert(foo(tpl) == 19);
    assert(foo<Number, String>(new Number(), new String()) == 20);
    assert(foo( () => { return false; } ) == 21);
    assert(foo(1, 1.2, "who`s there?" ) == 22);
}
