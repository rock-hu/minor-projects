# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
          let v: number[] = new number[false]  // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[] = new number[true]  // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[] = new number[new Object()]   // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[] = new number[new Error()]  // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[][] = new number[null][undefined]  // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[][] = new number[new Boolean(false)][1]  // CTE: dimension is not convertible to integer type

    - use: |-
          let v: number[][] = new number["abc"]["def"]   // CTE: dimension is not convertible to integer type

    - defs: |-
          enum Color { Red, Green, Blue }
      use: |-
          let v: string[][] = new string[Color.Green][Color.Blue]  // CTE: not a numeric conversion

    - use: |-
          let size: bigint = 1n  // CTE: not convertible to int
          let v: number[] = new number[size]

    - use: |-
          let size: BigInt = new BigInt(1n)  // CTE: not convertible to int
          let v: number[] = new number[size]

    - use: |-
          let v: number[][][] = new number[2][2][-1]  // CTE: constant expression, negative value

    - use: |-
          const size: int = -10
          let v: number[][] = new number[size][-size]  // CTE: constant expression, negative value

    - use: |-
          let v: string[] = new string[3]  // CTE: string has no default value
