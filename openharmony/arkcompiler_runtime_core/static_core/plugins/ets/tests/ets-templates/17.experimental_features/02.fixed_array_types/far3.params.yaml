# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    - use: |-
          let obj = new A<Byte>(0x80 as byte, 0x7f as byte).toObj()
          let arr = foo<Byte>(obj)
          let v: byte = arr[0]
          arr[1] = (arr[1] + v) as byte
          assertEQ(arr[1], -1)

    - use: |-
          let obj = new A<Short>(0x8000 as short, 0x7fff as short).toObj()
          let arr = foo<Short>(obj)
          let v: short = arr[0]
          arr[1] = (arr[1] + v) as short
          assertEQ(arr[1], -1)

    - use: |-
          let obj = new A<Int>(0x80000000, 0x7fffffff).toObj()
          let arr = foo<Int>(obj)
          let v: int = arr[0]
          arr[1] = arr[1] + v
          assertEQ(arr[1], -1)

    - use: |-
          let obj = new A<Long>(0x8000000000000000, 0x7fffffffffffffff).toObj()
          let arr = foo<Long>(obj)
          let v: long = arr[0]
          arr[1] = (arr[1] + v) as long
          assertEQ(arr[1], -1)

    - use: |-
          let obj = new A<Number>(1.0, 2.0).toObj()
          let arr = foo<Number>(obj)
          let v: number = arr[0]
          arr[1] = arr[1] + v
          assertEQ(arr[1], 3.0)

    - use: |-
          let obj = new A<String>("a", "b").toObj()
          let arr = foo<String>(obj)
          let v: string = arr[0]
          arr[1] = arr[1] + v
          assertEQ(arr[1], 'ba')

    - use: |-
          let obj = new A<Char>(c'a', c'b').toObj()
          let arr = foo<Char>(obj)
          let v: char = arr[0]
          arr[1] = (arr[1] + v) as char
          assertEQ(arr[1], 195)

    - use: |-
          let obj = new A<Boolean>(true, false).toObj()
          let arr = foo<Boolean>(obj)
          let v: boolean = arr[0]
          arr[1] = arr[1] & v
          assertEQ(arr[1], false)
