# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # byte type index
    - ind_type: byte
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128 as byte, val: '1.7' }
          - { ind: 127 as byte, val: '1.8' }

    - ind_type: Byte
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128 as byte, val: '1.7' }
          - { ind: 127 as byte, val: '1.8' }

    # short type index
    - ind_type: short
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128 as byte, val: '1.7' }
          - { ind: 127 as byte, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768 as short, val: '1.7' }
          - { ind: 32767 as short, val: '1.8' }

    - ind_type: Short
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128 as byte, val: '1.7' }
          - { ind: 127 as byte, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768 as short, val: '1.7' }
          - { ind: 32767 as short, val: '1.8' }

    # int type index
    - ind_type: int
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128, val: '1.7' }
          - { ind: 127, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768, val: '1.7' }
          - { ind: 32767, val: '1.8' }
          - { ind: Int.MIN_VALUE, val: '1.5' }
          - { ind: Int.MAX_VALUE, val: '1.6' }
          - { ind: -2147483648, val: '1.7' }
          - { ind: 2147483647, val: '1.8' }

    - ind_type: Int
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128, val: '1.7' }
          - { ind: 127, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768, val: '1.7' }
          - { ind: 32767, val: '1.8' }
          - { ind: Int.MIN_VALUE, val: '1.5' }
          - { ind: Int.MAX_VALUE, val: '1.6' }
          - { ind: -2147483648, val: '1.7' }
          - { ind: 2147483647, val: '1.8' }

    # long type index
    - ind_type: long
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128, val: '1.7' }
          - { ind: 127, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768, val: '1.7' }
          - { ind: 32767, val: '1.8' }
          - { ind: Int.MIN_VALUE, val: '1.5' }
          - { ind: Int.MAX_VALUE, val: '1.6' }
          - { ind: -2147483648, val: '1.7' }
          - { ind: 2147483647, val: '1.8' }
          - { ind: Long.MIN_VALUE, val: '1.5' }
          - { ind: Long.MAX_VALUE, val: '1.5' }
          - { ind: -9223372036854775808 as long, val: '1.5' }
          - { ind: 9223372036854775807 as long, val: '1.5' }

    - ind_type: Long
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128, val: '1.7' }
          - { ind: 127, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768, val: '1.7' }
          - { ind: 32767, val: '1.8' }
          - { ind: Int.MIN_VALUE, val: '1.5' }
          - { ind: Int.MAX_VALUE, val: '1.6' }
          - { ind: -2147483648, val: '1.7' }
          - { ind: 2147483647, val: '1.8' }
          - { ind: Long.MIN_VALUE, val: '1.5' }
          - { ind: Long.MAX_VALUE, val: '1.5' }
          - { ind: -9223372036854775808 as long, val: '1.5' }
          - { ind: 9223372036854775807 as long, val: '1.5' }

    # float and double index
    - ind_type: number
      val_type: number
      values:
          - { ind: '1.0f', val: '0.2' }
          - { ind: '2.0f', val: '0.3' }
          - { ind: '0.0f', val: '0.1' }
          - { ind: '1.0', val: '0.5' }
          - { ind: '2.0', val: '0.6' }
          - { ind: '0.0', val: '0.4' }
          - { ind: '-1.0f', val: '0.8' }
          - { ind: '-2.0f', val: '0.9' }
          - { ind: '-0.0f', val: '0.7' }
          - { ind: '-1.0', val: '1.1' }
          - { ind: '-2.0', val: '1.2' }
          - { ind: '-0.0', val: '1.0' }

    - ind_type: Number
      val_type: number
      values:
          - { ind: '1.0f', val: '0.2' }
          - { ind: '2.0f', val: '0.3' }
          - { ind: '0.0f', val: '0.1' }
          - { ind: '1.0', val: '0.5' }
          - { ind: '2.0', val: '0.6' }
          - { ind: '0.0', val: '0.4' }
          - { ind: '-1.0f', val: '0.8' }
          - { ind: '-2.0f', val: '0.9' }
          - { ind: '-0.0f', val: '0.7' }
          - { ind: '-1.0', val: '1.1' }
          - { ind: '-2.0', val: '1.2' }
          - { ind: '-0.0', val: '1.0' }

    # float and double index with fraction
    - ind_type: number
      val_type: number
      values:
          - { ind: '0.1f', val: '0.1' }
          - { ind: '-0.2f', val: '0.2' }
          - { ind: '1.3f', val: '0.3' }
          - { ind: '-1.4f', val: '0.4' }
          - { ind: '2.5f', val: '0.5' }
          - { ind: '-2.6f', val: '0.6' }
          - { ind: '0.7', val: '0.7' }
          - { ind: '-0.8', val: '0.8' }
          - { ind: '1.9', val: '0.9' }
          - { ind: '-1.1', val: '1.0' }
          - { ind: '2.2', val: '1.1' }
          - { ind: '-2.3', val: '1.2' }

    - ind_type: Number
      val_type: number
      values:
          - { ind: '0.1f', val: '0.1' }
          - { ind: '-0.2f', val: '0.2' }
          - { ind: '1.3f', val: '0.3' }
          - { ind: '-1.4f', val: '0.4' }
          - { ind: '2.5f', val: '0.5' }
          - { ind: '-2.6f', val: '0.6' }
          - { ind: '0.7', val: '0.7' }
          - { ind: '-0.8', val: '0.8' }
          - { ind: '1.9', val: '0.9' }
          - { ind: '-1.1', val: '1.0' }
          - { ind: '2.2', val: '1.1' }
          - { ind: '-2.3', val: '1.2' }

    # float and double index special cases
    - ind_type: number
      val_type: number
      values:
          - { ind: Float.POSITIVE_INFINITY, val: '0.3' }
          - { ind: Float.NEGATIVE_INFINITY, val: '0.4' }
          - { ind: Double.POSITIVE_INFINITY, val: '0.5' }
          - { ind: Double.NEGATIVE_INFINITY, val: '0.6' }

    - ind_type: Number
      val_type: number
      values:
          - { ind: Float.POSITIVE_INFINITY, val: '0.3' }
          - { ind: Float.NEGATIVE_INFINITY, val: '0.4' }
          - { ind: Double.POSITIVE_INFINITY, val: '0.5' }
          - { ind: Double.NEGATIVE_INFINITY, val: '0.6' }

    # char type index
    - ind_type: char
      val_type: char
      values:
          - { ind: Char.MAX_VALUE, val: "c'\\uF002'" }
          - { ind: Char.MIN_VALUE, val: "c'\\uF001'" }
          - { ind: "c'\\uFFFF'", val: "c'\\uF004'" }
          - { ind: "c'\\u0000'", val: "c'\\uF003'" }

    - ind_type: Char
      val_type: char
      values:
          - { ind: Char.MAX_VALUE, val: "c'\\uF002'" }
          - { ind: Char.MIN_VALUE, val: "c'\\uF001'" }
          - { ind: "c'\\uFFFF'", val: "c'\\uF004'" }
          - { ind: "c'\\u0000'", val: "c'\\uF003'" }

    # number index
    - ind_type: number
      val_type: number
      values:
          - { ind: Byte.MIN_VALUE, val: '1.5' }
          - { ind: Byte.MAX_VALUE, val: '1.6' }
          - { ind: -128, val: '1.7' }
          - { ind: 127, val: '1.8' }
          - { ind: Short.MIN_VALUE, val: '1.5' }
          - { ind: Short.MAX_VALUE, val: '1.6' }
          - { ind: -32768, val: '1.7' }
          - { ind: 32767, val: '1.8' }
          - { ind: Int.MIN_VALUE, val: '1.5' }
          - { ind: Int.MAX_VALUE, val: '1.6' }
          - { ind: -2147483648, val: '1.7' }
          - { ind: 2147483647, val: '1.8' }

    # string type index
    - ind_type: string
      val_type: number
      values:
          - { ind: "''", val: Double.MAX_SAFE_INTEGER }
          - { ind: "'\\u0000'", val: Double.MIN_SAFE_INTEGER }
          - { ind: "' '", val: '1.0' }
          - { ind: "'0.1'", val: '2.0' }
          - ind: "'uNWg4C5uvdoWVQpBtVa4qPYNRNrveJbGd8FqhQoNRKN65lMUBRZ3xz41YETWnqelAuhLPO90zCKUJ6h4TZnlScRPol6sqG624yJjwyGiIFT3Q3egI6xpFQRHjSd5HKG5kpQiBN35XOy3X9iRG6Fa6yXChLe3QDhFOtErB'"
            val: '3.5'
          - ind: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"
            val: '2.5e2'

    - ind_type: String
      val_type: number
      values:
          - { ind: "''", val: Double.MAX_SAFE_INTEGER }
          - { ind: "'\\u0000'", val: Double.MIN_SAFE_INTEGER }
          - { ind: "' '", val: '1.0' }
          - { ind: "'0.1'", val: '2.0' }
          - ind: "'uNWg4C5uvdoWVQpBtVa4qPYNRNrveJbGd8FqhQoNRKN65lMUBRZ3xz41YETWnqelAuhLPO90zCKUJ6h4TZnlScRPol6sqG624yJjwyGiIFT3Q3egI6xpFQRHjSd5HKG5kpQiBN35XOy3X9iRG6Fa6yXChLe3QDhFOtErB'"
            val: '3.5'
          - ind: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"
            val: '2.5e2'

    # string type index, string type value
    - ind_type: string
      val_type: string
      values:
          - { ind: "''", val: "''" }
          - { ind: "'\\u0000'", val: "'\\u0000'" }
          - { ind: "' '", val: "' '" }
          - { ind: "'0.1'", val: "'0.0'" }
          - ind: "'uNWg4C5uvdoWVQpBtVa4qPYNRNrveJbGd8FqhQoNRKN65lMUBRZ3xz41YETWnqelAuhLPO90zCKUJ6h4TZnlScRPol6sqG624yJjwyGiIFT3Q3egI6xpFQRHjSd5HKG5kpQiBN35XOy3X9iRG6Fa6yXChLe3QDhFOtErB'"
            val: "'==='"
          - ind: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"
            val: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"

    - ind_type: String
      val_type: string
      values:
          - { ind: "''", val: "''" }
          - { ind: "'\\u0000'", val: "'\\u0000'" }
          - { ind: "' '", val: "' '" }
          - { ind: "'0.1'", val: "'0.0'" }
          - ind: "'uNWg4C5uvdoWVQpBtVa4qPYNRNrveJbGd8FqhQoNRKN65lMUBRZ3xz41YETWnqelAuhLPO90zCKUJ6h4TZnlScRPol6sqG624yJjwyGiIFT3Q3egI6xpFQRHjSd5HKG5kpQiBN35XOy3X9iRG6Fa6yXChLe3QDhFOtErB'"
            val: "'==='"
          - ind: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"
            val: "'ZKF4iFmBMyAibBDOotckevShohdFohEalJro6X5Jw3vwthDs5yjP35jBHpbEWctRB4RoMPxxwhalah2xOGPcZ3DLrAmuF7Y43CPhiN9ClzX4C4xPfcWjzZwrUZunGNIEUQHrdjv7yfHg4D0AjNJiU9CZOwCy9I7ztV2IXW94FPFBzDgCgUEEpw5LiWKoSztRwze0M3D7g34GknAT3raBprQ6FDcOITvql0URYI1MlMpBCo8tb7fZA9sh4hiB3l6ViTd'"

    # boolean type index
    - decl: |-
          const t: boolean = true
          const f: boolean = false
      ind_type: boolean
      val_type: number
      values:
          - { ind: 'true', val: '1.5' }
          - { ind: 'false', val: '1.6' }
          - { ind: 't', val: '1.7' }
          - { ind: 'f', val: '1.8' }

    - decl: |-
          const t: Boolean = new Boolean(true)
          const f: Boolean = new Boolean(false)
      ind_type: Boolean
      val_type: number
      values:
          - { ind: 'true', val: '1.5' }
          - { ind: 'false', val: '1.6' }
          - { ind: 't', val: '1.7' }
          - { ind: 'f', val: '1.8' }

    # custom class index
    - decl: |-
          class Z {}
          let a1: Z = new Z()
          let a2: Z = new Z()
      ind_type: Z
      val_type: number
      values:
          - { ind: a1, val: '1.5' }
          - { ind: a2, val: '1.6' }

    # union type index
    - ind_type: string|number|null
      val_type: number
      values:
          - { ind: '1.0', val: '1.5' }
          - { ind: "'abc'", val: '1.6' }
          - { ind: '2.0', val: '1.7' }
          - { ind: "'def'", val: '1.8' }

    # tuple type index
    - decl: |-
          type TT = [string, number]
          let t1: TT = ['a', 1.0]
          let t2: TT = ['b', 2.0]
          let t3: TT = ['c', 3.0]
      ind_type: TT
      val_type: number
      values:
          - { ind: t1, val: '1.5' }
          - { ind: t2, val: '1.6' }
          - { ind: t3, val: '1.7' }

    # enum type index
    - decl: |-
          enum Color { Red, Green, Blue }
      ind_type: 'Color'
      val_type: number
      values:
          - { ind: "Color.Green", val: '1.5' }
          - { ind: "Color.Red", val: '1.6' }
          - { ind: "Color.Blue", val: '1.7' }

    # array type index
    - decl: |-
          let a1: number[] = [1.0, 1.0]
          let a2: number[] = [2.0, 2.0]
      ind_type: 'number[]'
      val_type: number
      values:
          - { ind: "a1", val: '1.5' }
          - { ind: "a2", val: '1.6' }

    # object type index
    - decl: |-
          let a1: number[] = [1.0, 1.0]
          let a2: string = 'abc'
          let a3: Error = new Error()
      ind_type: Object
      val_type: number
      values:
          - { ind: "a1", val: '1.5' }
          - { ind: "a2", val: '1.6' }
          - { ind: "a3", val: '1.7' }

    # parameterized custom class index
    - decl: |-
          class Z<T> {}
          let a1: Z<Error> = new Z<Error>()
          let a2: Z<Error> = new Z<Error>()
      ind_type: Z<Error>
      val_type: number
      values:
          - { ind: a1, val: '1.5' }
          - { ind: a2, val: '1.6' }
