/*
 * Copyright (c) 2021-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*---
desc: A catch clause contains a block that corresponds to the exception parameter and handles exceptions.
---*/

class ZeroDivisor extends Exception {}

function divide(a: int, b: int): int throws {
    if (b == 0) throw new ZeroDivisor()
    return a / b
}

const MaxInt = 2147483647

function processNumbers(a: int, b: int): int {
    try {
        let res = divide(a, b)
        return res
    }
    catch (d: ZeroDivisor) {
        return MaxInt
    }
    catch (e) {
        return 0
    }
}

function main() {
    assert processNumbers(4, 2) == 2
    assert processNumbers(4, 0) == MaxInt
}
