# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # 0. Regular extension functions
    - decl: |-
          interface I {}
          class A implements I {}
          function I.test(n: int) { return n }
      use: |-
          let a = new A()
          assert a.test(99) == 99

    # 1. Extension functions with different signatures
    - decl: |-
          interface I {}
          class A implements I {}
          function I.test(n: double) { return 1 }
          function I.test(n: string) { return 2 }
          function I.test(n: int) { return 3 }
      use: |-
          let a = new A()
          assert a.test(1) == 3
          assert a.test(14.1) == 1
          assert a.test("test") == 2

    # 2. Extension function working with interface member function
    - decl: |-
          interface I { 
              sum(n1: int, n2: int) {
                return n1 + n2
              }
          }
          class A implements I {}
          function I.test(n1: int, n2: int) { 
              return this.sum(n1, n2) 
          }
      use: |-
          let a = new A()
          assert a.test(99, 100) == 199

    # 3. Extension function is shadowed by a interface member function
    - decl: |-
          interface I {
              test(): int { return 1 }
          }
          class A implements I {}
          function I.test(): int { return 2 }
      use: |-
          let a = new A()
          assert a.test() == 1

    # 4. Extension function and member function with different signatures
    - decl: |-
          interface I {
              test(n: long): int { return 1 }
          }
          class A implements I {}
          function I.test(n: double): int { return 2 }
      use: |-
          let a = new A()
          assert a.test(4140100.0) == 2
          assert a.test(4140100) == 1
