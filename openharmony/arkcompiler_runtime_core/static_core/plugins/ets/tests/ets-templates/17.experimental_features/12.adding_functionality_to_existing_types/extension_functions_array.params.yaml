# Copyright (c) 2024-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # 0. Regular extension functions
    - decl: |-
          class A {}
          function test(this: FixedArray<A>) { return 1 }
          function test(this: FixedArray<FixedArray<A>>) { return 2 }
          function test(this: FixedArray<FixedArray<FixedArray<A>>>) { return 3 }
      use: |-
          let a: FixedArray<A> = []
          let b: FixedArray<FixedArray<A>> = [[]]
          let c: FixedArray<FixedArray<FixedArray<A>>> = [[[]]]
          assertEQ( a.test(), 1 )
          assertEQ( b.test(), 2 )
          assertEQ( c.test(), 3 )

    # 1. Extension functions with different signatures
    - decl: |-
          class A {}
          function test(this: A[], n: double) { return 1 }
          function test(this: A[], n: string) { return 2 }
          function test(this: A[], n: int) { return 3 }
      use: |-
          let a: A[] = [new A(), new A(), new A()]
          assertEQ( a.test(1), 3 )
          assertEQ( a.test(14.1), 1 )
          assertEQ( a.test("test"), 2 )

    # 2. Extension Function working with an array element
    - decl: |-
          class A {
              value: int
              constructor(n: int) { this.value = n }
          }
          function test(this: A[], i: int) { return this[i].value }
      use: |-
          let a: A[] = [new A(42), new A(81), new A(1), new A(890)] 
          assertEQ( a.test(0), 42 )
          assertEQ( a.test(1), 81 )
          assertEQ( a.test(2), 1 )
          assertEQ( a.test(3), 890 )
  
    # 3. Extension function working with built-in array member
    - decl: |-
          class A {}
          function test_len(this: A[]) { return this.length }
      use: |-
          let a: A[] = [new A(), new A(), new A(), new A()]
          let b: A[] = []
          assertEQ( a.test_len(), 4 )
          assertEQ( b.test_len(), 0 )

    # 4. Extension function with the same signatures for the class and the array.
    - decl: |-
          class A {}
          function test(this: A) { return 1 }
          function test(this: A[]) { return 2 }
      use: |-
          let a = new A()
          let b = [new A()]
          assertEQ( a.test(), 1 )
          assertEQ( b.test(), 2 )

    # 5. Extension function for primitive array
    - decl: |-
          function sum(this: int[]) {
              let sum: int = 0;
              for (let i of this) {
                  sum += i
              }
              return sum;
          }
      use: |-
          let a: int[] = [800000, 80000, 8000, 800, 80, 8]
          assertEQ( a.sum(), 888888 )

