# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

--- # Interfaces with static members and type parameters inside
cases:
  - desc: Start a coroutine using an async function.
    decl: |-
      async function cof(a: int): Promise<int> {
        return a * 2;
      }
    logic: |-
      let cof_result = cof(10);
      cof_result.then((result: int) => {
        assertEQ(result, 20);
      });
  - desc: Start a coroutine with a complex lambda expression.
    logic: |-
      const complexLambda = async (n: number): Promise<int> => {
        let sum: int = 0;
        for (let i = 1; i <= n; i++) {
          sum += i;
        }
        return Promise.resolve(sum);
      };
      const result: int = await complexLambda(3);
      assertEQ(result, 6);