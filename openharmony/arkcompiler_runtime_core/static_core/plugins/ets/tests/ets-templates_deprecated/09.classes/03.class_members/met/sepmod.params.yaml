# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
cases:
    # internal access modifier
    - files: './dir_int_1/file_A.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { A } from './dir_int_1/file_A';
      use: |-
          // separate module, negative case with internal method
          assertEQ( new A().foo(42), 84 )

    - files: './dir_int_1/file_A.ets'
      decl: |-
          import { C } from './dir_int_1/file_A';
      use: |-
          // separate module, positive case with internal method, from same-module public subclass
          assertEQ( new C().foo(42), 94 )

    - files: './dir_int_1/file_A.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { D } from './dir_int_1/file_A';
      use: |-
          // separate module, negative case with internal method, from same-module subclass
          assertEQ( new D().foo(42), 184 )

    - files: './dir_int_2/file_A.ets, ./dir_int_2/file_B.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { B } from './dir_int_2/file_B';
      use: |-
          // separate module, negative case with internal method, from other-module subclass
          assertEQ( new B().foo(42), 184 )

    - files: './dir_int_3/file_A.ets, ./dir_int_3/file_B.ets'
      tags: 'negative, compile-only'
      decl: |-
          import { F } from './dir_int_3/file_B';
      use: |-
          // separate module, negative case with internal method, from other-module subclass
          assertEQ( new F().foo(42), 184 )
