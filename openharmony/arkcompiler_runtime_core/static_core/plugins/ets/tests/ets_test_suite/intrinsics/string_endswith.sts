/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const Empty: String = '';
const Hello: String = 'Hello';
const Nature: String = '自然界';

function main(): int {

    assert Empty.endsWith('') == true;
    assert Empty.endsWith('', -1) == true;
    assert Empty.endsWith('', 0) == true;
    assert Empty.endsWith('', 1) == true;
    assert Empty.endsWith('x') == false;
    assert Empty.endsWith('x', -1) == false;
    assert Empty.endsWith('x', 0) == false;
    assert Empty.endsWith('x', 1) == false;
    assert Empty.endsWith('x', 100) == false;

    assert Hello.endsWith('') == true;
    assert Hello.endsWith('',-1) == true;
    assert Hello.endsWith('', 0) == true;
    assert Hello.endsWith('', 1) == true;
    assert Hello.endsWith('', 5) == true;
    assert Hello.endsWith('', 100) == true;

    assert Hello.endsWith('o') == true;
    assert Hello.endsWith('o', -1) == false;
    assert Hello.endsWith('o', 0) == false;
    assert Hello.endsWith('o', 1) == false;
    assert Hello.endsWith('o', 2) == false;
    assert Hello.endsWith('o', 3) == false;
    assert Hello.endsWith('o', 4) == false;
    assert Hello.endsWith('o', 5) == true;
    assert Hello.endsWith('o', 100) == true;

    assert Hello.endsWith('ello') == true;
    assert Hello.endsWith('ello', -1) == false;
    assert Hello.endsWith('ello', 0) == false;
    assert Hello.endsWith('ello', 1) == false;
    assert Hello.endsWith('ello', 2) == false;
    assert Hello.endsWith('ello', 3) == false;
    assert Hello.endsWith('ello', 4) == false;
    assert Hello.endsWith('ello', 5) == true;
    assert Hello.endsWith('ello', 100) == true;

    assert Hello.endsWith('Hello') == true;
    assert Hello.endsWith('Hello', -1) == false;
    assert Hello.endsWith('Hello', 0) == false;
    assert Hello.endsWith('Hello', 1) == false;
    assert Hello.endsWith('Hello', 2) == false;
    assert Hello.endsWith('Hello', 3) == false;
    assert Hello.endsWith('Hello', 4) == false;
    assert Hello.endsWith('Hello', 4.0) == false;
    assert Hello.endsWith('Hello', 4.5) == false;
    assert Hello.endsWith('Hello', 5) == true;
    assert Hello.endsWith('Hello', 5.0) == true;
    assert Hello.endsWith('Hello', 5.5) == true;
    assert Hello.endsWith('Hello', 100) == true;
    assert Hello.endsWith('Hello', 100.5) == true;

    assert Nature.endsWith('') == true;
    assert Nature.endsWith('', -1) == true;
    assert Nature.endsWith('', 0) == true;
    assert Nature.endsWith('', 1) == true;
    assert Nature.endsWith('', 2) == true;
    assert Nature.endsWith('', 3) == true;
    assert Nature.endsWith('', 100) == true;

    assert Nature.endsWith('然界') == true;
    assert Nature.endsWith('然界', -1) == false;
    assert Nature.endsWith('然界', 0) == false;
    assert Nature.endsWith('然界', 1) == false;
    assert Nature.endsWith('然界', 2) == false;
    assert Nature.endsWith('然界', 3) == true;
    assert Nature.endsWith('然界', 3.0) == true;
    assert Nature.endsWith('然界', 3.5) == true;
    assert Nature.endsWith('然界', 100) == true;
    assert Nature.endsWith('然界', 100.5) == true;

    assert Nature.endsWith('自然界') == true;
    assert Nature.endsWith('自然界', -1) == false;
    assert Nature.endsWith('自然界', 0) == false;
    assert Nature.endsWith('自然界', 1) == false;
    assert Nature.endsWith('自然界', 2) == false;
    assert Nature.endsWith('自然界', 100) == true;

    console.println("PASS");
    return 0;
}
