/*
 * Copyright (c) 2023-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare const exports: any;
let ETSGLOBAL: any = (globalThis as any).Panda.getClass('LETSGLOBAL;');

function _$init$_(): void { return {} as any; };
(_$init$_ as any) = ETSGLOBAL._$init$_;
_$init$_();

function AsyncIdentity(param: number): Promise<number> { return {} as any; };
(AsyncIdentity as any) = ETSGLOBAL.AsyncIdentity;
export {AsyncIdentity};
exports.AsyncIdentity = AsyncIdentity;


function AsyncIdentity$asyncimpl(param: number): any { return {} as any; };
(AsyncIdentity$asyncimpl as any) = ETSGLOBAL.AsyncIdentity$asyncimpl;
export {AsyncIdentity$asyncimpl};
exports.AsyncIdentity$asyncimpl = AsyncIdentity$asyncimpl;


class PromiseWrapper {
    public promise_: Promise<string> = {} as any;
    constructor() {};
};
(PromiseWrapper as any) = (globalThis as any).Panda.getClass('LPromiseWrapper;');
export {PromiseWrapper};
exports.PromiseWrapper = PromiseWrapper;

