/*
 * Copyright (c) 2023-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare function Identity<T>(x: T): T;
export declare function ForEach<T extends Object>(a: T[], cb: (e: T, idx: number) => void): void;
export declare function foo1<T>(x: Partial<C1<T>>): void;
export declare class GenericClass<T extends Object> {
    public identity(x: T): T;
    constructor();
}
export declare interface IGeneric0<T> {
    I0Method(a: T): T;
}
export declare interface IGeneric1<T> {
    I1Method(a: T): T;
}
export declare class BaseGeneric<T, U> {
    public get c(): T;
    public set c(value: T);
    public get d(): U;
    public set d(value: U);
    public constructor(c: T, d: U);
}
export declare class C1<T> {
    constructor();
}
export type Callback<T, C = void, V = void> = (data: T, data2: C) => V;
export declare class C2 {
    public get a(): Callback<string, number>;
    public set a(value: Callback<string, number>);
    public constructor();
}
