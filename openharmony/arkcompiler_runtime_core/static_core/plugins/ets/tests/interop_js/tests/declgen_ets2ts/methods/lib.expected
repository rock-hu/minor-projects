/*
 * Copyright (c) 2023-2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

declare const exports: any;
let ETSGLOBAL: any = (globalThis as any).Panda.getClass('LETSGLOBAL;');

function _$init$_(): void { return {} as any; };
(_$init$_ as any) = ETSGLOBAL._$init$_;
_$init$_();

function _$trigger_cctor$_(): void { return {} as any; };
(_$trigger_cctor$_ as any) = ETSGLOBAL._$trigger_cctor$_;
export {_$trigger_cctor$_};
exports._$trigger_cctor$_ = _$trigger_cctor$_;


class Methods {
    public IsTrue(a: boolean): boolean { return {} as any; };
    public SumString(a: string, b: string): string { return {} as any; };
    public static StaticSumDouble(a: number, b: number): number { return {} as any; };
    public SumIntArray(a: number[]): number { return {} as any; };
    public OptionalString(a: string | undefined): string | undefined { return {} as any; };
    public SumIntVariadic(a: number, ...b: number[]): number { return {} as any; };
    constructor() {};
};
(Methods as any) = (globalThis as any).Panda.getClass('LMethods;');
export {Methods};
exports.Methods = Methods;

