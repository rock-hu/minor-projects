/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare let s: Set<number>;
export declare const weakMap: WeakMap<Object, string>;
export declare let w: WeakSet<Object>;
export declare let map: Map<string, number>;
export declare let f32: Float32Array;
export declare let f64: Float64Array;
export declare let i8: Int8Array;
export declare let i16: Int16Array;
export declare let i32: Int32Array;
export declare let ui8: Uint8Array;
export declare let ui16: Uint16Array;
export declare let ui32: Uint32Array;
export declare let ui8c: Uint8ClampedArray;
export declare const dataView: DataView;
export declare let b64: BigInt64Array;
export declare let ub64: BigUint64Array;
export declare const matchResult: RegExpExecArray | null;
export declare const regExp2: RegExp;
export declare let foo: (...nums: number[]) => void;
export type StringDictionary = Record<string, string>;
export type Matrix = number[][];
export type Handler = (s: string, no: number) => string;
export type Predicate<T> = (x: T) => boolean;
export type NullableNumber = number | null;
export type Dictionary = Map<string, string>;
