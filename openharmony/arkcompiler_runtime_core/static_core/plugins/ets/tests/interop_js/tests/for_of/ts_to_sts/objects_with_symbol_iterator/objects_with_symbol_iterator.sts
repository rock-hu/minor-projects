/**
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import {
    CustomArrayIterTest,
    NonIterable
} from 'array_with_symbol_iterator_js';

function checkArrayWithSymbolIterator()
{
    let expectedArr: number[] = [10, 20, 30, 40, 50];
    let arr = new CustomArrayIterTest(expectedArr);

    let length = 0;
    let result = true;

    let callback = (arrElem: JSValue): void => {
        if (arrElem !== expectedArr[length]) {
            console.log(`Comparison failed:`);
            console.log(`arrElem = ${arrElem}, expectedArr[${length}] = ${expectedArr[length]}`);
            result = false;
        }

        ++length;
    };

    JSRuntime.iterate(arr, callback);

    if (!result) {
        console.log(`checkArrayWithSymbolIterator test failed.`);
        return false;
    }

    if (length !== expectedArr.length) {
        console.log(`length !== expectedArr.length; length = ${length}, expectedArr.length = ${expectedArr.length}`);
        return false;
    }

    if (arr.getCountedLength() as number !== expectedArr.length) {
        console.log(`arr.getCountedLength() = ${arr.getCountedLength()}, expectedArr.length = ${expectedArr.length}`);
        return false;
    }

    return true;
}
