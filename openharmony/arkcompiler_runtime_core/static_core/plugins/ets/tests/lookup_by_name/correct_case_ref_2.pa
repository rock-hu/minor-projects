# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

.language eTS

.record std.core.Object
.record std.core.String <external>
.function u1 std.core.String.equals(std.core.String a0, std.core.Object a1) <external>
.record std.core.Exception <external> {
    std.core.String message <external>
}
.record std.core.LinkerUnresolvedFieldError <external> {
    std.core.String message <external>
}
.record A {}
.record B {
    std.core.Exception bar
    std.core.LinkerUnresolvedFieldError baz
}
.record C {
    std.core.LinkerUnresolvedFieldError foo
}

.function std.core.LinkerUnresolvedFieldError A.<get>baz(A a0) <access.function=public> {
    newobj v0, std.core.LinkerUnresolvedFieldError
    lda.str "42"
    stobj.obj v0, std.core.LinkerUnresolvedFieldError.message
    lda.obj v0
    return.obj
}

.function void C.<set>bar(C a0, std.core.Exception a1) <access.function=public> {
    ldobj.v.obj v0, a0, C.foo
    ldobj.obj a1, std.core.Exception.message
    stobj.obj v0, std.core.LinkerUnresolvedFieldError.message
    return.void
}

.record $NamedAccessMeta-std-core-Exception {
    std.core.Exception bar
}

.record $NamedAccessMeta-std-core-LinkerUnresolvedFieldError {
    std.core.LinkerUnresolvedFieldError baz
}

.function void test(std.core.Object a0, std.core.Object a1) {
    ets.ldobj.name.obj a0, $NamedAccessMeta-std-core-LinkerUnresolvedFieldError.baz
    sta.obj v0
    ldobj.v.obj v1, v0, std.core.LinkerUnresolvedFieldError.message
    lda.str "42"
    sta.obj v2
    call.short std.core.String.equals, v1, v2
    movi v2, 1
    jne v2, fail_test
    lda.str "44"
    stobj.obj v0, std.core.LinkerUnresolvedFieldError.message
    lda.obj v0
    ets.stobj.name.obj a1, $NamedAccessMeta-std-core-Exception.bar
    return.void
fail_test:
    lda.str "88"
    stobj.obj v0, std.core.LinkerUnresolvedFieldError.message
    lda.obj v0
    ets.stobj.name.obj a1, $NamedAccessMeta-std-core-Exception.bar
    return.void
}

.function i32 main() {
    newobj v0, A
    newobj v1, B
    newobj v2, C
    newobj v3, std.core.LinkerUnresolvedFieldError
    lda.str "42"
    stobj.obj v3, std.core.LinkerUnresolvedFieldError.message
    stobj.v.obj v3, v1, B.baz
    newobj v4, std.core.LinkerUnresolvedFieldError
    lda.str "42"
    stobj.obj v4, std.core.LinkerUnresolvedFieldError.message
    stobj.v.obj v4, v2, C.foo

    call.short test, v0, v1
    ldobj.v.obj v4, v1, B.bar
    ldobj.v.obj v4, v4, std.core.Exception.message
    lda.str "44"
    sta.obj v5
    call.short std.core.String.equals, v4, v5
    movi v3, 1
    jne v3, error1

    call.short test, v1, v2
    ldobj.v.obj v4, v2, C.foo
    ldobj.v.obj v4, v4, std.core.Exception.message
    lda.str "44"
    sta.obj v5
    call.short std.core.String.equals, v4, v5
    movi v3, 1
    jne v3, error2

    call.short test, v0, v2
    ldobj.v.obj v4, v2, C.foo
    ldobj.v.obj v4, v4, std.core.Exception.message
    lda.str "44"
    sta.obj v5
    call.short std.core.String.equals, v4, v5
    movi v3, 1
    jne v3, error3

    call.short test, v1, v1
    ldobj.v.obj v4, v1, B.bar
    ldobj.v.obj v4, v4, std.core.Exception.message
    lda.str "44"
    sta.obj v5
    call.short std.core.String.equals, v4, v5
    movi v3, 1
    jne v3, error4

    ldai 0
    return
error1:
    ldai 1
    return
error2:
    ldai 2
    return
error3:
    ldai 3
    return
error4:
    return
}
