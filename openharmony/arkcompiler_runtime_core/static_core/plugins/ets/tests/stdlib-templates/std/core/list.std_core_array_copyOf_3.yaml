# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<boolean>",
    method_signature: { arr: "FixedArray<boolean>"},
    method_throws: "false",
    method_signature_desc: {arr: "boolean_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
          },
        test2:
          {
            arr: "[true]",
          },
        test3:
          {
            arr: "[true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false]",
          },
        test4:
          {
            arr: "[]"
          }
        },
    method_expected_data:
      {
        test1: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
        test2: "[true]",
        test3: "[true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false]",
        test4: "[]"
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<byte>",
    method_signature: { arr: "FixedArray<byte>"},
    method_throws: "false",
    method_signature_desc: {arr: "byte_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[]",
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<short>",
    method_signature: { arr: "FixedArray<short>"},
    method_throws: "false",
    method_signature_desc: {arr: "short_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[]"
      },
  }
- {
    method_name: slice,
    result_nature: array,
    method_nature: function,
    result_type: "FixedArray<int>",
    method_signature: { arr: "FixedArray<int>"},
    method_throws: "false",
    method_signature_desc: {arr: "int_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[]"
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<long>",
    method_signature: { arr: "FixedArray<long>"},
    method_throws: "false",
    method_signature_desc: {arr: "long_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[]"
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<float>",
    method_signature: { arr: "FixedArray<float>"},
    method_throws: "false",
    method_signature_desc: {arr: "float_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[0.1, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.77, 8.88, 9.99, 10.10101, 11.11111, 12.1212, 13.1313, 14.1414, 15.1515]",
          },
        test4:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[0.1, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.77, 8.88, 9.99, 10.10101, 11.11111, 12.1212, 13.1313, 14.1414, 15.1515]",
        test4: "[]"
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<double>",
    method_signature: { arr: "FixedArray<double>"},
    method_throws: "false",
    method_signature_desc: {arr: "double_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[0.1, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.77, 8.88, 9.99, 10.10101, 11.11111, 12.1212, 13.1313, 14.1414, 15.1515]",
          },
        test4:
          {
            arr: "[]"
          }

      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[0.1, 1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.77, 8.88, 9.99, 10.10101, 11.11111, 12.1212, 13.1313, 14.1414, 15.1515]",
        test4: "[]"
      },
  }
- {
    method_name: slice,
    method_nature: function,
    result_nature: array,
    result_type: "FixedArray<char>",
    method_signature: { arr: "FixedArray<char>"},
    method_throws: "false",
    method_signature_desc: {arr: "char_array"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
          },
        test2:
          {
            arr: "[0]",
          },
        test3:
          {
            arr: "[]"
          }
      },
    method_expected_data:
      {
        test1: "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]",
        test2: "[0]",
        test3: "[]"
      },
  }
