# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<boolean>",
    method_signature: { arr: "FixedArray<boolean>", value: boolean },
    method_throws: "false",
    method_signature_desc: {first: "boolean_array", value: "boolean"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]",
            value: "true",
          },
        test2:
          {
            arr: "[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]",
            value: "false",
          },
        test3:
          {
            arr: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
            value: "false",
          },
        test4:
          {
            arr: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
            value: "true",
          },
        test5: { arr: "[true]", value: "false" },
      },
    method_expected_data:
      {
        test1: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
        test2: "[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]",
        test3: "[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]",
        test4: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
        test5: "[false]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<byte>",
    method_signature: { arr: "FixedArray<byte>", value: byte },
    method_throws: "false",
    method_signature_desc: {first: "byte_array", value: "byte"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<short>",
    method_signature: { arr: "FixedArray<short>", value: short },
    method_throws: "false",
    method_signature_desc: {first: "short_array", value: "short"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<int>",
    method_signature: { arr: "FixedArray<int>", value: int },
    method_throws: "false",
    method_signature_desc: {first: "int_array", value: "int"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<long>",
    method_signature: { arr: "FixedArray<long>", value: long },
    method_throws: "false",
    method_signature_desc: {first: "long_array", value: "long"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<float>",
    method_signature: { arr: "FixedArray<float>", value: float },
    method_throws: "false",
    method_signature_desc: {first: "float_array", value: "float"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }

- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<double>",
    method_signature: { arr: "FixedArray<double>", value: double },
    method_throws: "false",
    method_signature_desc: {first: "double_array", value: "double"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },
  }
- {
    method_name: fill,
    method_nature: procedure,
    result: arr,
    result_nature: array,
    result_type: "FixedArray<char>",
    method_signature: { arr: "FixedArray<char>", value: char },
    method_signature_desc: {first: "char_array", value: "char"},
    method_throws: "false",
    method_test_index_data:
      {
        test1:
          {
            arr: "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]",
            value: 0,
          },
        test2: { arr: "[1]", value: 0 },
      },
    method_expected_data:
      {
        test1: "[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
        test2: "[0]",
      },

  }
