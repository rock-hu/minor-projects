# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "boolean[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "boolean_array", delimiter: "String"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[true,  true,  true,  true,  true,  true,  true,  true,  true]",
            delimiter: '""',
          },
        test2:
          {
            arr: "[true,  true,  true,  true,  true,  true,  true,  true,  true]",
            delimiter: '" "',
          },
        test3:
          {
            arr: "[true,  true,  true,  true,  true,  true,  true,  true,  true]",
            delimiter: '"------"',
          },
        test4:
          {
            arr: "[true,  true,  true,  true,  true,  true,  true,  true,  true]",
            delimiter: '","',
          },
        test5: {arr: "[]",  delimiter: '","'},

      },
    method_expected_data:
      {
        test1: '"truetruetruetruetruetruetruetruetrue"',
        test2: '"true true true true true true true true true"',
        test3: '"true------true------true------true------true------true------true------true------true"',
        test4: '"true,true,true,true,true,true,true,true,true"',
        test5: '""'
      },
  }
- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "byte[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "byte_array", delimiter: "String"},
    method_test_index_data:
      {
        test1: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '""' },
        test2: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '" "' },
        test3:
          { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '"------"' },
        test4: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '","' },
        test5: { arr: "[]",  delimiter: '","'},
      },
    method_expected_data:
      {
        test1: '"12233445566778899"',
        test2: '"1 22 33 44 55 66 77 88 99"',
        test3: '"1------22------33------44------55------66------77------88------99"',
        test4: '"1,22,33,44,55,66,77,88,99"',
        test5: '""'
      },
  }
- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "short[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "short_array", delimiter: "String"},
    method_test_index_data:
      {
        test1: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '""' },
        test2: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '" "' },
        test3:
          { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '"------"' },
        test4: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '","' },
        test5: {arr: "[]",  delimiter: '","'},
      },

    method_expected_data:
      {
        test1: '"12233445566778899"',
        test2: '"1 22 33 44 55 66 77 88 99"',
        test3: '"1------22------33------44------55------66------77------88------99"',
        test4: '"1,22,33,44,55,66,77,88,99"',
        test5: '""'
      },
  }

- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "int[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "int_array", delimiter: "String"},
    method_test_index_data:
      {
        test1: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '""' },
        test2: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '" "' },
        test3:
          { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '"------"' },
        test4: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '","' },
        test5: {arr: "[]",  delimiter: '","'},
      },

    method_expected_data:
      {
        test1: '"12233445566778899"',
        test2: '"1 22 33 44 55 66 77 88 99"',
        test3: '"1------22------33------44------55------66------77------88------99"',
        test4: '"1,22,33,44,55,66,77,88,99"',
        test5: '""'
      },
  }
- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "long[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "long_array", delimiter: "String"},
    method_test_index_data:
      {
        test1: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '""' },
        test2: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '" "' },
        test3:
          { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '"------"' },
        test4: { arr: "[1, 22, 33, 44, 55, 66, 77, 88, 99]", delimiter: '","' },
        test5: {arr: "[]",  delimiter: '","'},
      },

    method_expected_data:
      {
        test1: '"12233445566778899"',
        test2: '"1 22 33 44 55 66 77 88 99"',
        test3: '"1------22------33------44------55------66------77------88------99"',
        test4: '"1,22,33,44,55,66,77,88,99"',
        test5: '""'
      },
  }
- {
    method_name: join,
    result_nature: Object,
    method_nature: function,
    result_type: String,
    method_signature: { arr: "float[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "float_array", delimiter: "String"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '""',
          },
        test2:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '" "',
          },
        test3:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '"------"',
          },
        test4:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '","',
          },
        test5: {arr: "[]",  delimiter: '","'},
      },
    method_expected_data:
      {
        test1: '"1.122.133.144.155.166.177.188.199.1"',
        test2: '"1.1 22.1 33.1 44.1 55.1 66.1 77.1 88.1 99.1"',
        test3: '"1.1------22.1------33.1------44.1------55.1------66.1------77.1------88.1------99.1"',
        test4: '"1.1,22.1,33.1,44.1,55.1,66.1,77.1,88.1,99.1"',
        test5: '""'
      },
  }
- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "double[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "double_array", delimiter: "String"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '""',
          },
        test2:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '" "',
          },
        test3:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '"------"',
          },
        test4:
          {
            arr: "[1.1, 22.1, 33.1, 44.1, 55.1, 66.1, 77.1, 88.1, 99.1]",
            delimiter: '","',
          },
        test5: {arr: "[]",  delimiter: '","'},
          
      },
    method_expected_data:
      {
        test1: '"1.122.133.144.155.166.177.188.199.1"',
        test2: '"1.1 22.1 33.1 44.1 55.1 66.1 77.1 88.1 99.1"',
        test3: '"1.1------22.1------33.1------44.1------55.1------66.1------77.1------88.1------99.1"',
        test4: '"1.1,22.1,33.1,44.1,55.1,66.1,77.1,88.1,99.1"',
        test5: '""'
      },
  }
- {
    method_name: join,
    method_nature: function,
    result_nature: Object,
    result_type: String,
    method_signature: { arr: "char[]", delimiter: "String" },
    method_throws: "false",
    method_signature_desc: {first: "char_array", delimiter: "String"},
    method_test_index_data:
      {
        test1:
          {
            arr: "[c'A', c'B', c'C', c'D', c'E', c'F', c'G', c'H', c'J']",
            delimiter: '""',
          },
        test2:
          {
            arr: "[c'A', c'B', c'C', c'D', c'E', c'F', c'G', c'H', c'J']",
            delimiter: '" "',
          },
        test3:
          {
            arr: "[c'A', c'B', c'C', c'D', c'E', c'F', c'G', c'H', c'J']",
            delimiter: '"------"',
          },
        test4:
          {
            arr: "[c'A', c'B', c'C', c'D', c'E', c'F', c'G', c'H', c'J']",
            delimiter: '","',
          },
        test5: {arr: "[]",  delimiter: '","'},
      },
    method_expected_data:
      {
        test1: '"ABCDEFGHJ"',
        test2: '"A B C D E F G H J"',
        test3: '"A------B------C------D------E------F------G------H------J"',
        test4: '"A,B,C,D,E,F,G,H,J"',
        test5: '""'
      },
  }
