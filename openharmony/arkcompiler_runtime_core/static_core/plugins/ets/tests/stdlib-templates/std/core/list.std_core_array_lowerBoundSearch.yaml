# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "boolean[]", key: "boolean", startIndex: int, endIndex: int },
    method_signature_desc: {first: "boolean_array", key: "boolean", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
        test10:
          {
            arr: "[false, false, false, false, false, false, false, false, true, true, true, true, true, true, true]",
            key: "true",
            startIndex: 6,
            endIndex: arr.length,
          },
        test20:
          {
            arr: "[false, false, false, false, false, false, false, false, true, true, true, true, true, true, true]",
            key: "false",
            startIndex: 0,
            endIndex: 8,
          },
        test30:
          {
            arr: "[false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]",
            key: "true",
            startIndex: 3,
            endIndex: 8,
          },
        test40:
          {
            arr: "[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true]",
            key: "false",
            startIndex: 3,
            endIndex: 8,
          },
       },
    method_expected_data:
      {
        test10: 8,
        test20: 0,
        test30: 8,
        test40: 3
      },
  }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "byte[]", key: "byte", startIndex: int, endIndex: int },
    method_signature_desc: {first: "byte_array", key: "byte", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
        test20:
          {
          arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
          key: 7,
          startIndex: 4,
          endIndex: 12,
          },
        test30:
          {
          arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
          key: 7,
          startIndex: 0,
          endIndex: 8,
          },
        test40:
          {
          arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
          key: 7,
          startIndex: 6,
          endIndex: 16,
          },
        test50:
          {
          arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
          key: 7,
          startIndex: 4,
          endIndex: 12,
          },
        test60:
          {
          arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
          key: 7,
          startIndex: 0,
          endIndex: 10,
          },
        test70:
          {
          arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
          key: 16,
          startIndex: 10,
          endIndex: 16,
          },
        test80:
          {
          arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
          key: 7,
          startIndex: 7,
          endIndex: 11,
          },
      },
    method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,
      },
  }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "short[]", key: "short", startIndex: int, endIndex: int },
    method_signature_desc: {first: "short_array", key: "short", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
      {
      arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
      key: 7,
      startIndex: 4,
      endIndex: 12,
      },
      test20:
      {
      arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
      key: 7,
      startIndex: 4,
      endIndex: 12,
      },
      test30:
      {
      arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
      key: 7,
      startIndex: 0,
      endIndex: 8,
      },
      test40:
      {
      arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
      key: 7,
      startIndex: 6,
      endIndex: 16,
      },
      test50:
      {
      arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
      key: 7,
      startIndex: 4,
      endIndex: 12,
      },
      test60:
      {
      arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
      key: 7,
      startIndex: 0,
      endIndex: 10,
      },
      test70:
      {
      arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
      key: 16,
      startIndex: 10,
      endIndex: 16,
      },
      test80:
      {
      arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
      key: 7,
      startIndex: 7,
      endIndex: 11,
      },
    },
    method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,

      },
 }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "int[]", key: "int", startIndex: int, endIndex: int },
    method_signature_desc: {first: "int_array", key: "int", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test20:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test30:
        {
        arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
        key: 7,
        startIndex: 0,
        endIndex: 8,
        },
      test40:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
        key: 7,
        startIndex: 6,
        endIndex: 16,
        },
      test50:
        {
        arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test60:
        {
        arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
        key: 7,
        startIndex: 0,
        endIndex: 10,
        },
      test70:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 16,
        startIndex: 10,
        endIndex: 16,
        },
      test80:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
        key: 7,
        startIndex: 7,
        endIndex: 11,
        },
      },
     method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,
      },
 }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "long[]", key: "long", startIndex: int, endIndex: int },
    method_signature_desc: {first: "long_array", key: "long", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test20:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test30:
        {
        arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
        key: 7,
        startIndex: 0,
        endIndex: 8,
        },
      test40:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
        key: 7,
        startIndex: 6,
        endIndex: 16,
        },
      test50:
        {
        arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test60:
        {
        arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
        key: 7,
        startIndex: 0,
        endIndex: 10,
        },
      test70:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 16,
        startIndex: 10,
        endIndex: 16,
        },
      test80:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
        key: 7,
        startIndex: 7,
        endIndex: 11,
        },
      },
     method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,

      },
 }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "float[]", key: "float", startIndex: int, endIndex: int },
    method_signature_desc: {first: "float_array", key: "float", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test20:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test30:
        {
        arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
        key: 7,
        startIndex: 0,
        endIndex: 8,
        },
      test40:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
        key: 7,
        startIndex: 6,
        endIndex: 16,
        },
      test50:
        {
        arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test60:
        {
        arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
        key: 7,
        startIndex: 0,
        endIndex: 10,
        },
      test70:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 16,
        startIndex: 10,
        endIndex: 16,
        },
      test80:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
        key: 7,
        startIndex: 7,
        endIndex: 11,
        },
      },
     method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,

      },
 }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "double[]", key: "double", startIndex: int, endIndex: int },
    method_signature_desc: {first: "double_array", key: "double", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test20:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
        test30:
          {
          arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
          key: 7,
          startIndex: 0,
          endIndex: 8,
          },
        test40:
          {
          arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
          key: 7,
          startIndex: 6,
          endIndex: 16,
          },
        test50:
          {
          arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
          key: 7,
          startIndex: 4,
          endIndex: 12,
          },
        test60:
          {
          arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
          key: 7,
          startIndex: 0,
          endIndex: 10,
          },
        test70:
          {
          arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
          key: 16,
          startIndex: 10,
          endIndex: 16,
          },
        test80:
          {
          arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
          key: 7,
          startIndex: 7,
          endIndex: 11,
          },
      },
     method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,

      },
 }
- {
    method_name: lowerBoundSearch,
    method_nature: function,
    result_type: int,
    method_signature:  { arr: "char[]", key: "char", startIndex: int, endIndex: int },
    method_signature_desc: {first: "char_array", key: "char", startIndex: int, endIndex: int},
    method_throws: "true",
    method_test_index_data:
      {
      test10:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test20:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14,15]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test30:
        {
        arr: "[7,7,7,7,7,8,9,10,11,12,13,14,15,16,17,18]",
        key: 7,
        startIndex: 0,
        endIndex: 8,
        },
      test40:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,7,7,7,7]",
        key: 7,
        startIndex: 6,
        endIndex: 16,
        },
      test50:
        {
        arr: "[0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16]",
        key: 7,
        startIndex: 4,
        endIndex: 12,
        },
      test60:
        {
        arr: "[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]",
        key: 7,
        startIndex: 0,
        endIndex: 10,
        },
      test70:
        {
        arr: "[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
        key: 16,
        startIndex: 10,
        endIndex: 16,
        },
      test80:
        {
        arr: "[0,1,2,3,4,5,6,7,7,7,7,7,12,13,14]",
        key: 7,
        startIndex: 7,
        endIndex: 11,
        },

      },
     method_expected_data:
      {
        test10: 7,
        test20: 7,
        test30: 0,
        test40: 7,
        test50: 7,
        test60: 0,
        test70: 16,
        test80: 7,

      },
 }
