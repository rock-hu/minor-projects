# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- {
    method_name: log,
    method_nature: function, 
    result_type: double,
    method_signature:
      {v: "double"},

    method_test_index_data:
      {
        test1: {v: 1.0,},
        test2: {v: E, },
        test3: {v: E * E,},
        test4: {v: E * E * E, },
        test5: {v: PI,},
        test6: {v: doubleNaN, },
        test7: {v: doubleInf, },
        test8: {v: doubleNegInf,},
      },
    method_expected_data:
      {
        test1: 0.0,
        test2: 1.0,
        test3: 2.0,
        test4: 3.0,
        test5: 1.14472989,
        test6: doubleNaN,
        test7: doubleInf,
        test8: -doubleNaN,
      },
  }
- {
    method_name: log10,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double"},

    method_test_index_data:
      {
        test1: { v: 1.0, },
        test2: { v: 10.0,},
        test3: { v: 10.0 * 10.0, },
        test4: { v: 10.0 * 10.0 * 10.0, },
        test5: { v: PI,  },
        test6: { v: E, },
        test7: { v: doubleNaN, },
        test8: { v: doubleInf, },
        test9: { v: doubleNegInf,},
      },
    method_expected_data:
      {
        test1:   0.0,
        test2:   1.0,
        test3:   2.0,
        test4:   3.0,
        test5:   0.497149873,
        test6:   0.434294482,
        test7:  -doubleNaN,
        test8:   doubleInf,
        test9: -doubleNaN,
      },
  }
- {
    method_name: log2,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double"},

    method_test_index_data:
      {
        test1: { v: 1.0, },
        test2: { v: 2.0,},
        test3: { v: 3.0, },
        test4: { v: 4.0, },
        test5: { v: PI,  },
        test6: { v: E, },
        test7: { v: doubleNaN, },
        test8: { v: doubleInf, },
        test9: { v: doubleNegInf,},
      },
    method_expected_data:
      {
        test1: 0.0,
        test2: 1.0,
        test3: 1.58496225,
        test4: 2.0,
        test5: 1.65149613,
        test6: 1.442695041,
        test7: -doubleNaN,
        test8: doubleInf,
        test9: -doubleNaN,
      },
  }
- {
    method_name: log1p,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "double"},

    method_test_index_data:
      {
        test1: { v: 0.0,},
        test2: { v: 1.0,},
        test3: { v: 9.0},
        test4: { v: E,},
        test5: { v: PI, },
        test6: { v: doubleNaN,},
        test7: { v: doubleInf,},
        test8:{ v: doubleNegInf, },
      },
    method_expected_data:
      {
        test1:  0.0,
        test2:  0.69314718,
        test3:  2.30258509,
        test4:  1.31326169,
        test5:  1.42108041,
        test6: -doubleNaN,
        test7:  doubleInf,
        test8: -doubleNaN,
      },
  }
- {
    method_name: log10,
    method_nature: function, 
    result_type: double,
    method_signature:  {v: "int"},

    method_test_index_data:
      {
        test1: { v: 1, },
        test2: { v: 10,},
        test3: { v: 10 * 10, },
        test4: { v: 10 * 10 * 10, },
        test5: { v: doubleNaN, },
        test6: { v: doubleInf, },
        test7: { v: doubleNegInf,},
      },
    method_expected_data:
     {
        test1:   0.0,
        test2:   1.0,
        test3:   2.0,
        test4:   3.0,
        test5:  -doubleNaN,
        test6:   doubleInf,
        test7: -doubleNaN,
      },
    }
