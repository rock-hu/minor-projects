/**
 * Copyright (c) 2021-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

function main(): int {
    let failCounter: int = 0;
    let testResult: int = 0;
    let arrayVar : FixedArray<{{.item.name}}> = [];
    let expectedType : Type;
    let arrayType : ArrayType;
    let obj : FixedArray<{{.item.name}}>;
    {% for array_size in item.array_sizes %}
      arrayVar = new {{.item.name}}[{{.array_size}}];
      for (let i = 0; i < {{.array_size}}; ++i) {
        arrayVar[i] = {{.item.init_value}};
      }
      arrayType = Type.of(arrayVar) as ArrayType;
      testResult = checkTestResult(arrayType.getElementType(), Type.of({{.item.init_value}}));
      printTestVerdict(testResult, "Type.of({{.item.name}}[]).getElementType() == {{.item.name}}");
      failCounter += testResult;
      obj = arrayType.make({{.array_size}}) as FixedArray<{{.item.name}}>;
      testResult = checkTestResult(obj, arrayVar);
      printTestVerdict(testResult, "Type.of({{.item.name}}[]).make()");
      failCounter += testResult;
    {% endfor %}
    if (failCounter > 0) return 1
    return 0;
}

function printTestVerdict(flag: int, testName: String) {
    if (flag == 0) {
      console.println(testName + " : PASSED")
    } else {
      console.println(testName + " : FAILED")
    }
}

function checkTestResult(actual: Type, expected: Type) : int {
   if (actual == expected) return 0;
   return 1;
}

function checkTestResult(actual : FixedArray<{{.item.name}}>, expected : FixedArray<{{.item.name}}>) : int {
  console.print("\nACTUAL\n")
  for (let i: int = 0; i < actual.length; i++) {
     console.print(actual[i] + " ")
  }
  console.print("\nEXPECTED\n")
  for (let i: int = 0; i < expected.length; i++) {
     console.print(expected[i] + " ")
  }

  for (let i: int = 0; i < actual.length; i++) {
     if (actual[i] != expected[i])  return 1
  }
  console.println("\n****")
  return 0;
}
