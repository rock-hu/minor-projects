# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

chapters:
  - all:
    - algorithms
    - arkui
    - escompat
    - koala-related-benchmarks
    - regression
    - spec
    - std

  # One folder - one chapter
  - algorithms-dir:
    - algorithms
  - arkui-dir:
    - arkui
  - escompat-dir:
    - escompat
  - koala-related-benchmarks-dir:
    - koala-related-benchmarks
  - regression-dir:
    - regression
  - std-containers-dir:
    - std/containers
  - std-core-dir:
    - std/core
  - std-math-dir:
    - std/math
  - std-time-dir:
    - std/time
  - std-serialization-dir:
    - std/serialization
  - spec1:
    - spec/conditional-expression
    - spec/generic
    - spec/import_export
    - spec/lambda
    - spec/never_type
    - spec/rest-params
    - spec/string_enum
    - spec/struct-type
    - spec/trailing_lambdas
    - spec/undefined-type
  - spec2:
    - spec
    - exclude:
      - spec1

  # chapters by several folders
  - std-core1:
    - 'std/core/BadRadixTest*.sts'
    - 'std/core/EscapeUnescapeTest*.sts'
    - 'std/core/EscapeUnescapeURITest*.sts'
    - 'std/core/GoodRadixTest*.sts'
    - 'std/core/SortInternalTestBoolean*.sts'
    - 'std/core/SortInternalTestByte*.sts'
    - 'std/core/SortInternalTestInt*.sts'
    - 'std/core/SortInternalTestLong*.sts'
    - 'std/core/SortInternalTestShort*.sts'
    - 'std/core/SortNotFromBeginningTest*.sts'
    - 'std/core/SortStringsTest*.sts'
    - 'std/core/StringAtExceptionTest*.sts'
    - 'std/core/TypeAssignableFromTest*.sts'
    - 'std/core/TypeCreateClassTest*.sts'
    - 'std/core/TypeCreateErasedBodyTest*.sts'
    - 'std/core/TypeCreateInterfaceTest*.sts'
    - 'std/core/TypeCreatePrimitiveNameTest*.sts'
    - 'std/core/TypeCreateVoidTest*.sts'
    - 'std/core/TypeMethodInvoke*.sts'
    - 'std/core/TypeMethodInvokeConstructor*.sts'
    - 'std/core/TypeMethodInvokeVirt*.sts'
    - 'std/core/TypeMethodResolveConstructor*.sts'
    - 'std/core/TypeMethodResolveConstructorFew*.sts'
    - 'std/core/TypeResolve*.sts'
  - std-core2:
    - 'std/core/std_core_array*.sts'
    - 'std/core/std_core_array_exception*.sts'
  - std-core3:
    - 'std/core/std_core_boolean*.sts'
    - 'std/core/std_core_byte*.sts'
    - 'std/core/std_core_char*.sts'
    - 'std/core/std_core_constructor*.sts'
    - 'std/core/std_core_double*.sts'
    - 'std/core/std_core_float*.sts'
    - 'std/core/std_core_int*.sts'
    - 'std/core/std_core_long*.sts'
    - 'std/core/std_core_regexp*.sts'
    - 'std/core/std_core_short*.sts'
    - 'std/core/std_core_string*.sts'
    - 'std/core/std_core_stringbuilder*.sts'
    - 'std/core/std_core_typedarrays*.sts'
  - std-core4:
    - std/core
    - exclude:
      - "std-core1"
      - "std-core2"
      - "std-core3"
  - not-specified:
    - '*'
    - exclude:
      - all
