' Copyright (c) 2024 Huawei Device Co., Ltd.
' Licensed under the Apache License, Version 2.0 (the "License");
' you may not use this file except in compliance with the License.
' You may obtain a copy of the License at
'
' http://www.apache.org/licenses/LICENSE-2.0
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.

@startuml

title ArkTS Sampling Profiler Backend

interface RuntimeListener

class Sampler {
    + {static} Sampler *Create()
    + {static} void Destroy(Sampler *sampler)
    + {static} const ThreadCommunicator &GetSampleCommunicator()
    + void SetSampleInterval(uint32_t us)
    + bool Start(const char *filename)
    + void Stop()

    - {static} Sampler *instance_
    - std::unique_ptr<std::thread> samplerThread_
    - std::unique_ptr<std::thread> listenerThread_
    - ThreadCommunicator communicator_
}

RuntimeListener <|-- Sampler

class ThreadCommunicator {
    + bool Init()
    + bool IsPipeEmpty()
    + bool SendSample(const SampleInfo &sample)
    + bool ReadSample(SampleInfo *sample)
}

Sampler *-- ThreadCommunicator

circle SamplerThread

SamplerThread ..> ThreadCommunicator

circle ListenerThread

ListenerThread ..> ThreadCommunicator

class StreamWriter {
    + StreamWriter(const char *filename)
    + void WriteModule(const FileInfo &info)
    + void WriteSample(const SampleInfo &info)
    + bool IsModuleWritten(const FileInfo &info)
}

ListenerThread *-- StreamWriter

@enduml
