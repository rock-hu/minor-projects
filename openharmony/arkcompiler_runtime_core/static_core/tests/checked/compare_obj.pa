# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#! CHECKER      Replace Compare with reference types to constant
#! RUN          force_jit: true, options: "--compiler-inlining=false", entry: "_GLOBAL::main"
#! METHOD       "_GLOBAL::check_obj_null__noinline__"
#! PASS_BEFORE  "Peephole"
#! INST         "Compare"
#! PASS_AFTER   "ChecksElimination"
#! INST_NOT     "Compare"
#! METHOD       "_GLOBAL::check_null_null__noinline__"
#! PASS_BEFORE  "Peephole"
#! INST         "Compare"
#! PASS_AFTER   "ChecksElimination"
#! INST_NOT     "Compare"
#! METHOD       "_GLOBAL::check_obj__noinline__"
#! PASS_BEFORE  "Peephole"
#! INST         "Compare"
#! PASS_AFTER   "ChecksElimination"
#! INST_NOT     "Compare"
#! METHOD       "_GLOBAL::check_equals_obj__noinline__"
#! PASS_BEFORE  "Peephole"
#! INST         "Compare"
#! PASS_AFTER   "ChecksElimination"
#! INST_NOT     "Compare"

.function i32 check_obj_null__noinline__() {
    movi v1, 3
    newarr v0, v1, i32[]
    lda.obj v0
    mov.null v0
    jeq.obj v0, jump_label
    ldai 0
    return
jump_label:
    ldai 1
    return
}

.function i32 check_null_null__noinline__() {
    mov.null v0
    lda.obj v0
    mov.null v0
    jne.obj v0, jump_label
    ldai 0
    return
jump_label:
    ldai 1
    return
}

.record A {
    i32 i
}

.function i32 check_obj__noinline__() {
    newobj v0, A
    lda.obj v0
    newobj v0, A
    jeq.obj v0, jump_label
    ldai 0
    return
jump_label:
    ldai 1
    return
}

.function i32 check_equals_obj__noinline__() {
    newobj v0, A
    lda.obj v0
    jne.obj v0, jump_label
    ldai 0
    return
jump_label:
    ldai 1
    return
}

.function u32 main() {
    call check_obj_null__noinline__
    jnez jump_label_false_1
    call check_obj__noinline__
    jnez jump_label_false_2
    call check_null_null__noinline__
    jnez jump_label_false_3
    call check_equals_obj__noinline__
    jnez jump_label_false_4
    ldai 0
    return
jump_label_false_1:
    ldai 1
    return
jump_label_false_2:
    ldai 2
    return
jump_label_false_3:
    ldai 3
    return
jump_label_false_4:
    ldai 4
    return
}