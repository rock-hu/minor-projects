# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#! CHECKER      Check Float IfConversion in JIT
#! SKIP_IF      @architecture != "arm64"
#! RUN          force_jit: true, options: "", entry: "_GLOBAL::main"
#! EVENT        /Compilation,_GLOBAL::__noinline__test_dd,.*COMPILED/
#! EVENT        /Compilation,_GLOBAL::__noinline__test_di,.*COMPILED/
#! EVENT        /Compilation,_GLOBAL::__noinline__test_id,.*COMPILED/
#! METHOD       "_GLOBAL::__noinline__test_dd"
#! PASS_BEFORE  "IfConversion"
#! INST_NOT     "Select"
#! PASS_AFTER   "IfConversion"
#! INST         "Select"
#! METHOD       "_GLOBAL::__noinline__test_id"
#! PASS_BEFORE  "IfConversion"
#! INST_NOT     "Select"
#! PASS_AFTER   "IfConversion"
#! INST         "Select"
#! METHOD       "_GLOBAL::__noinline__test_di"
#! PASS_BEFORE  "IfConversion"
#! INST_NOT     "Select"
#! PASS_AFTER   "IfConversion"
#! INST_NOT     "Select"
#! INST         "Fcmp"

.function f64 __noinline__test_dd (f64 a0) <> {
    fldai.64 3.0
    fcmpg.64 a0
    jnez let_1_0
    fmovi.64 v0, 2.0
    jmp exit
let_1_0:
    fmovi.64 v0, 1.0
exit:
    lda.64 v0
    return.64
}

.function f64 __noinline__test_id (i32 a0) {
    ldai 3
    ucmp a0
    jnez let_1_0
    fmovi.64 v0, 2.0
    jmp exit
let_1_0:
    fmovi.64 v0, 1.0
exit:
    lda.64 v0
    return.64
}

.function i32 __noinline__test_di (f64 a0) {
    fldai.64 3.0
    fcmpg.64 a0
    jnez let_1_0
    movi v0, 2
    jmp exit
let_1_0:
    movi v0, 1
exit:
    return
}

.function i32 main() {
    fmovi.64 v0, 1.0
    call __noinline__test_dd, v0
    fmovi.64 v1, 1.0
    fcmpg.64 v1
    jnez failure_exit_1
    movi v0, 1
    call __noinline__test_id, v0
    fmovi.64 v1, 1.0
    fcmpg.64 v1
    jnez failure_exit_2
    fmovi.64 v0, 1.0
    call __noinline__test_di, v0
    addi -1
    jnez failure_exit_3
    ldai 0
    return
failure_exit_1:
    ldai 1
    return
failure_exit_2:
    ldai 2
    return
failure_exit_3:
    ldai 3
    return
}