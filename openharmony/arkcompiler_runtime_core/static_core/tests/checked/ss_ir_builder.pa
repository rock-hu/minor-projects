# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Check that object in acc is correct, GraphChecker will pass in this case

#! CHECKER      Check SaveState in IrBuilder is correct create
#! RUN          force_jit: true, options: "", entry: "_GLOBAL::main"
#! METHOD       "_GLOBAL::main"
#! PASS_AFTER   "IrBuilder"
#! INST         "NewObject"
#! INST_NEXT    /SaveState.*v3\(ACC\)/
#! INST         "CallVirtual"
#! INST         /Phi.*v3/
#! INST_NEXT    /SaveState.*[^v3\(ACC\)]/

.record A {}
.function void A.constructor(A a0) <ctor> {
    return.void
}

.record panda.Class <external>
.function void A.foo(A a0, panda.Class a1) {
    return.void
}

.function i32 main() {
    initobj.short A.constructor
    sta.obj v0
    lda.obj v0
    jeqz.obj jump_label_0

    initobj.short A.constructor
    sta.obj v0

    lda.type A
    sta.obj v1
    call.virt.short A.foo, v0, v1
    jmp jump_label_1

jump_label_0:
    mov.obj v2, v0

jump_label_1:
    lda.type A
    sta.obj v1
    call.virt.short A.foo, v0, v1

    ldai 0
    return

}
