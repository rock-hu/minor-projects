# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#! CHECKER        VirtualToStatic at Regular AOT
#! RUN_PAOC       options: ""
#! EVENT          /Inline,_GLOBAL::main,Factory::newFactory.*VIRTUAL,SUCCESS/
#! RUN            options: "", entry: "_GLOBAL::main"

#! CHECKER        VirtualToStatic at LLVM AOT
#! RUN_LLVM       options: "--llvm-pre-opt=0 --llvm-options='--print-before=intrinsics-lowering'"
#! READ_FILE      "console.out"
#! LLVM_METHOD    /define protected.*_GLOBAL::main/
#! INST_NEXT      /call ptr @__builtin_load_init_class/
#! INST_NEXT_NOT  /call/
#! INST_NEXT      /ret i32 0/
#! RUN            options: "", entry: "_GLOBAL::main"
#
# class Factory {
#     int i;
#
#     Factory newFactory() {
#         Factory factory = new Factory();
#         factory.i = 42;
#         return factory;
#     }
# }
#
# public class _GLOBAL {
#     int main(String[] args) {
#         Factory factory = new Factory();
#         factory = factory.newFactory();
#         factory = factory.newFactory();
#         if (factory.i != 42) {
#             return 1;
#         }
#         return 0;
#     }
# }

.record Factory {
    i32 i
}

.function Factory Factory.newFactory(Factory a0) {
    newobj v0, Factory
    ldai 42
    stobj v0, Factory.i
    lda.obj v0

    return.obj
}

.function i32 main() {
    newobj v0, Factory
    call.virt Factory.newFactory, v0
    sta.obj v0
    call.virt Factory.newFactory, v0
    sta.obj v0

    movi.64 v1, 42
    ldobj v0, Factory.i
    i32toi64
    cmp.64 v1
    return
}
