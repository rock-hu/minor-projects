# Copyright (c) 2021-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# a2 - a0 * a1
.function i32 msubv_i32(i32 a0, i32 a1, i32 a2) {
    mulv a0, a1
    subv a2, a0
    lda a2
    return
}

# - (a0 * a1) + a2
.function i32 msubv_i32_var0(i32 a0, i32 a1, i32 a2) {
    mulv a0, a1
    lda a0
    neg
    add2v v0, a2
    lda v0
    return
}

# (-a0) * a1 + a2
.function i32 msubv_i32_var1(i32 a0, i32 a1, i32 a2) {
    lda a0
    neg
    mul2v v0, a1
    addv v0, a2
    lda v0
    return
}

# a2 - a0 * a1
.function i64 msubv_i64(i64 a0, i64 a1, i64 a2) {
    lda.64 a1
    mul2v.64 v0, a0
    lda.64 a2
    sub2v.64 v0, v0
    lda.64 v0
    return.64
}

# - (a0 * a1) + a2
.function i64 msubv_i64_var0(i64 a0, i64 a1, i64 a2) {
    lda.64 a1
    mul2v.64 v0, a0
    lda.64 v0
    neg.64
    add2v.64 v0, a2
    lda.64 v0
    return.64
}

# (-a0) * a1 + a2
.function i64 msubv_i64_var1(i64 a0, i64 a1, i64 a2) {
    lda.64 a0
    neg.64
    mul2v.64 v0, a1
    lda.64 a2
    add2v.64 v0, v0
    lda.64 v0
    return.64
}

.function i32 main() {
    movi v0, 10
    movi v1, 1000
    movi v2, -56
    call msubv_i32, v0, v1, v2
    sta v0
    ldai -10056
    jne v0, exit_error_0
    movi v0, 10
    movi v1, 1000
    movi v2, -56
    call msubv_i32_var0, v0, v1, v2
    sta v0
    ldai -10056
    jne v0, exit_error_1
    movi v0, 10
    movi v1, 1000
    movi v2, -56
    call msubv_i32_var1, v0, v1, v2
    sta v0
    ldai -10056
    jne v0, exit_error_2
    movi.64 v0, -1
    movi.64 v1, 123
    movi.64 v2, 19
    call msubv_i64, v0, v1, v2
    sta.64 v0
    ldai.64 142
    cmp.64 v0
    jnez exit_error_3
    movi.64 v0, -1
    movi.64 v1, 123
    movi.64 v2, 19
    call msubv_i64_var0, v0, v1, v2
    sta.64 v0
    ldai.64 142
    cmp.64 v0
    jnez exit_error_4
    movi.64 v0, -1
    movi.64 v1, 123
    movi.64 v2, 19
    call msubv_i64_var1, v0, v1, v2
    sta.64 v0
    ldai.64 142
    cmp.64 v0
    jnez exit_error_5
    ldai 0
    return
exit_error_0:
    ldai 1
    return
exit_error_1:
    ldai 2
    return
exit_error_2:
    ldai 3
    return
exit_error_3:
    ldai 4
exit_error_4:
    ldai 5
exit_error_5:
    ldai 6
    return
}
