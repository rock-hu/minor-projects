/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function sumArray(nums: Array<i32>, base: i32): i32;

function getArrayValue(nums: Array<i64>, idx: i32): i64;

function toStingArray(nums: Array<i32>): Array<String>;

function makeIntArray(value: i32, num: i32): Array<i32>;

enum Color: String {
    RED = "Red",
    GREEN = "Green",
    BLUE = "Blue",
}
function makeEnumArray(value: Color, num: i32): Array<Color>;

function makeRecordArray(key: String, val: i64, num: i32): Array<Map<String, i64>>;

struct Data {
    a: String;
    b: String;
    c: i32;
}
function makeStructArray(a: String, b: String, c: i32, num: i32): Array<Data>;
function makeIntArray2(value: Array<i32>, num: i32): Array<Array<i32>>;
function changeEnumArray(value: Array<Color>, color: Color): Array<Color>;
function changeRecordArray(value: Array<Map<String, i64>>, k: String, v: i64): Array<Map<String, i64>>;
function changeStructArray(value: Array<Data>, a: String, b: String, c: i32): Array<Data>;
@gen_async("fetchBinaryData")
@gen_promise("fetchBinaryData")
function fetchBinaryDataSync(num:i32): Array<f32>;
function makeStructArrayArray(a: String, b: String, c: i32, num1: i32, num2: i32): Array<Array<Data>>;

