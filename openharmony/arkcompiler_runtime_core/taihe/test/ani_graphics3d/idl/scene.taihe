/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
from sceneNodeParameters use SceneNodeParameters as SceneNodeParameters;
interface SceneResourceFactory {
    @gen_async("createCamera")
    @gen_promise("createCamera")    
    createCameraPro(params: SceneNodeParameters): Camera;

    @gen_async("createLight")
    @gen_promise("createLight")  
    createLightPro(params: SceneNodeParameters, lightType: LightType): Light;

    @gen_async("createNode")
    @gen_promise("createNode")  
    createNodePro(params: SceneNodeParameters): Node;

    @gen_async("createMaterial")
    @gen_promise("createMaterial")  
    createMaterialPro(params: SceneResourceParameters, materialType: MaterialType): Material;

    @gen_async("createShader")
    @gen_promise("createShader")  
    createShaderPro(params: SceneResourceParameters): Shader;

    @gen_async("createImage")
    @gen_promise("createImage")  
    createImagePro(params: SceneResourceParameters): Image;

    @gen_async("createEnvironment")
    @gen_promise("createEnvironment")  
    createEnvironmentPro(params: SceneResourceParameters): Environment;
}
function GetSceneResourceFactory(): SceneResourceFactory;

interface Camera {
    @set SetFov(fov: f32): void;
    @get GetFov(): f32;
}
function GetCamera(): Camera;

enum LightType: i8 {
    DIRECTIONAL = 1,
    SPOT = 2
}

interface Light {
    @set SetIntensity(inten: f32): void;
    @get GetIntensity(): f32;
}
function GetLight(): Light;

interface Node {
    @set SetVisible(visible: bool): void;
    @get GetVisible(): bool;
    @get GetPath(): String;
}
function GetNode(): Node;

interface SceneResourceParameters {
    @set SetName(name: String): void;
    @get GetName(): String;
}
function GetSceneResourceParameters(): SceneResourceParameters;

enum MaterialType: i8 {
    SHADER = 1
}

interface Material {
    @get GetMaterialType(): i8;
}
function GetMaterial(): Material;

interface Shader {
    @get GetInputs(): @record Map<String, i32>;
}
function GetShader(): Shader;

interface Image {
    @get GetWidth(): f32;
    @get GetHeight(): f32;
}
function GetImage(): Image;

interface Environment {
    @get GetBackgroundType(): i32;
}
function GetEnvironment(): Environment;