/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
union Union {
  sValue: String;
  iValue: i32;
}

interface ExampleInterface {

    func_primitive_i8(param1: Optional<i8>): void;
    func_primitive_i16(param1: Optional<i16>): void;
    func_primitive_i32(param1: Optional<i32>): void;
    func_primitive_i64(param1: Optional<i64>): void;
    func_primitive_f32(param1: Optional<f32>): void;
    func_primitive_f64(param1: Optional<f64>): void;
    func_primitive_bool(param1: Optional<bool>): void;
    func_primitive_String(param1: Optional<String>): void;
    

    func_Array(param1: Optional<Array<i32>>):void;
    func_Buffer(param1: Optional<Array<u8>>):void;
    func_Union(param1: Optional<Union>):void;
    func_Map(param1: Optional<Map<String,i32>>):void;

    @get getName(): Optional<String>;
    @get geti8(): Optional<i8>;
    @get geti16(): Optional<i16>;
    @get geti32(): Optional<i32>;
    @get geti64(): Optional<i64>;  // 注意：这里应该是i64，你可能需要修正类型
    @get getf32(): Optional<f32>;
    @get getf64(): Optional<f64>;
    @get getbool(): Optional<bool>;
    @get getArraybuffer(): Optional<Array<u8>>;

}

function get_interface(): ExampleInterface;
function printTestInterfaceName(testiface: ExampleInterface): void;
function printTestInterfaceNumberi8(testiface: ExampleInterface): void;
function printTestInterfaceNumberi16(testiface: ExampleInterface): void;
function printTestInterfaceNumberi32(testiface: ExampleInterface): void;
function printTestInterfaceNumberi64(testiface: ExampleInterface): void;
function printTestInterfaceNumberf32(testiface: ExampleInterface): void;
function printTestInterfaceNumberf64(testiface: ExampleInterface): void;
function printTestInterfacebool(testiface: ExampleInterface): void;
function printTestInterfaceArraybuffer(testiface: ExampleInterface): void;