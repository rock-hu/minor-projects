/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function concatString(a: String, b: String): String;
function makeString(a: String, b: i32): String;
struct StringPair {
    _0: String;
    _1: String;
}
function split(a: String, n: i32): StringPair;
function split2(a: String, n: i32): Array<String>;
function to_i32(a: String): i32;
function from_i32(a: i32): String;
interface PlayString {
    pickString(nums: Array<String>, n1: i32, n2: i32): String;
    @get
    getName(): String;
    @set
    setName(name: String): void;
}
function makePlayStringIface(): PlayString;
function to_f32(a: String): f32;
function from_f32(a: f32): String;
function concatString2(s:String, n: i32, sArr: Array<String>, b: bool, buffer: Array<u8>): String;