/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
struct Data {
    src: String;
    dest: f64;
    files: Array<String>;
}

function makeData(): Data;
function showData(s: Data): void;

union Union {
    empty;
    iValue: i32;
    fValue: f32;
    sValue: String;
}

function makeUnion(v: i32): Union;
function showUnion(u: Union): void;

function showOptionalInt(x: Optional<i32>): void;
function makeOptionalInt(b: bool): Optional<i32>;

function showArrayInt(x: Array<i32>): void;
function makeArrayInt(n: i32, v: i32): Array<i32>;

interface Foo {
    bar(): void;
}

interface A {
    b(): B;
}

interface B {
    a(): A;
}

function makeFoo(list: Array<String>): Array<Foo>;
function callBar(arr: Array<Foo>): void;
