# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#! CHECKER      Check that save state gracefully handle 0 when optimizations are disabled, test for 5372
#! RUN          force_jit: true, options: "--compiler-non-optimizing=true", entry: "_GLOBAL::main0"
#! EVENT        /Compilation,_GLOBAL::main0,.*COMPILED/

#! CHECKER      Check that save state correctly propogated in presense of null ref, test for 5372
#! RUN          force_jit: true, options: "--compiler-lowering=false", entry: "_GLOBAL::main1"
#! EVENT        /Compilation,_GLOBAL::main1,.*COMPILED/

.record E {}

.function void __noinline__call(u64 a0) {
    newobj v0, E
    throw v0
}

.function u1 main0() {
    movi.64 v0, 0
try_begin:
    call __noinline__call, v0
    ldai 1
    return
try_end:
catch_begin:
    ldai 0
    return
.catchall try_begin, try_end, catch_begin
}

.record C {}
.record IO <external>
# fake mehod, never used
.function void IO.printObj(E a0) <external>

.function void C.static__noinline__call(E a0) <static> {
    return.void
}

.function void delegate_call(E a0) {
    call C.static__noinline__call, a0
    return.void
}

.function u1 main1() {
    mov.null v0
    newobj v1, E
try_begin:
    call delegate_call, v1
    ldai 0
    return
try_end:
catch_begin:
    call.short IO.printObj, v0
    ldai 0
    return
.catchall try_begin, try_end, catch_begin
}