# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# The following comment until the empty line must be a valid YAML document
# containing exact copies of ISA specification assertions relevant to this test.
#---
#   - title: Load from array
#     description: >
#       Load an element from array using accumulator as an index and puts it into accumulator.
#     instructions:
#       - sig: fldarr.32 vs
#         format: [op_vs_8]
#         type: obj
#         dtype: f32
#         etype: f32
#         properties: [acc_read, acc_write, float]
#   - title: Store to array
#     description: >
#       Store accumulator content into array slot pointed by index.
#     instructions:
#       - sig: fstarr.32 vs1, vs2
#         format: [op_vs1_4_vs2_4]
#         type: f32
#         dtype: none
#         etype: f32
#         properties: [acc_read, float]

#assert that operations with array of f32 works fine
#i32 i;
#for(i=0; i<7; i++) array[i]=(float)i;
#for(i=6; i>=0; i--) assert_eq((float)i, array[i]);

.function i32 main(){
    movi v0, 7
    newarr v1, v0, f32[]
    movi v2, 0
    ldai 0
loop:
    jeq v0, loop_exit
    i32tof32
    fstarr.32 v1, v2
    inci v2, 1
    lda v2
    jmp loop
loop_exit:
    subi 1
    sta v2
loop2:
    jltz loop2_exit
    lda v2
    i32tof32
    sta v3
    lda v2
    fldarr.32 v1
    fsub2 v3
    sta v3
    call.short abs, v3, v3
    sta v3
    fldai 1e-6
    fcmpl v3
    jlez exit_failure
    inci v2, -1
    lda v2
    jmp loop2
loop2_exit:
    ldai 0
    return
exit_failure:
    ldai 1
    return
}

.function f32 abs(f32 a0){
    fldai 0.0
    fcmpl a0
    jlez label
    lda a0
    fneg
    return
label:
    lda a0
    return
}

