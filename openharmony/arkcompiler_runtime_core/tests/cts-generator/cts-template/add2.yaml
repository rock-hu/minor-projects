# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions: []
tests:
  - file-name: "add2"
    isa:
      title: Two address binary operation on accumulator
      description: >
        Perform specified binary operation on accumulator and register and store result into accumulator
      exceptions:
        - x_none
    commands:
      - file-name: "op_vs_8_zero"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai 0
              movi v0, %s
              add2 v0
              movi v0, %s
              jne v0, set_failure
              ldai 0
              jmp fall_through
          set_failure:
              ldai 1
          fall_through:
        description: Check add2 with zero and various values.
        cases:
          - values:
              - "0"
              - "0"
          - values:
              - "1"
              - "1"
          - values:
              - "-1"
              - "-1"
          - values:
              - "0x7FFFFFFF"
              - "0x7FFFFFFF"
          - values:
              - "0x80000000"
              - "0x80000000"
          - values:
              - "-0x7FFFFFFF"
              - "-0x7FFFFFFF"
          - values:
              - "-0x80000000"
              - "-0x80000000"
          - values:
              - "0xFFFFFFFF"
              - "0xFFFFFFFF"
          - values:
              - "-0xFFFFFFFF"
              - "-0xFFFFFFFF"

      - file-name: "op_vs_8_pone"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
            #
                ldai 1
                movi v0, %s
                add2 v0
                movi v0, %s
                jne v0, set_failure
                ldai 0
                jmp fall_through
            set_failure:
                ldai 1
            fall_through:
        description: Check add2 with +1 and various values.
        cases:
            - values:
                - "0"
                - "1"
            - values:
                - "1"
                - "2"
            - values:
                - "-1"
                - "0"
            - values:
                - "0x7FFFFFFF"
                - "0x80000000"
              bugid: ["966"]
            - values:
                - "0x80000000"
                - "0x80000001"
            - values:
                - "-0x7FFFFFFF"
                - "-0x7FFFFFFE"
            - values:
                - "-0x80000000"
                - "-0x7FFFFFFF"
            - values:
                - "0xFFFFFFFF"
                - "0"
            - values:
                - "-0xFFFFFFFF"
                - "-0xFFFFFFFE"
      - file-name: "op_vs_8_none"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
            #
                ldai -1
                movi v0, %s
                add2 v0
                movi v0, %s
                jne v0, set_failure
                ldai 0
                jmp fall_through
            set_failure:
                ldai 1
            fall_through:
        description: Check add2 with -1 and various values.
        cases:
            - values:
                - "0"
                - "-1"
            - values:
                - "1"
                - "0"
            - values:
                - "-1"
                - "-2"
            - values:
                - "0x7FFFFFFF"
                - "0x7FFFFFFE"
            - values:
                - "0x80000000"
                - "0x7FFFFFFF"
              bugid: ["966"]
            - values:
                - "-0x7FFFFFFF"
                - "-0x80000000"
            - values:
                - "-0x80000000"
                - "-0x80000001"
              bugid: ["966"]
            - values:
                - "0xFFFFFFFF"
                - "-2"
            - values:
                - "-0xFFFFFFFF"
                - "0"
      - file-name: "op_vs_8_pmax"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
            #
                ldai 0x7FFFFFFF
                movi v0, %s
                add2 v0
                movi v0, %s
                jne v0, set_failure
                ldai 0
                jmp fall_through
            set_failure:
                ldai 1
            fall_through:
        description: Check add2 with +max and various values.
        cases:
            - values:
                - "0"
                - "0x7fffffff"
            - values:
                - "1"
                - "0x80000000"
              bugid: ["966"]
            - values:
                - "-1"
                - "0x7FFFFFFE"
            - values:
                - "0x7FFFFFFF"
                - "0xFFFFFFFE"
              bugid: ["966"]
            - values:
                - "0x80000000"
                - "0xFFFFFFFF"
            - values:
                - "-0x7FFFFFFF"
                - "0"
            - values:
                - "-0x80000000"
                - "0xFFFFFFFF"
            - values:
                - "0xFFFFFFFF"
                - "0x7FFFFFFE"
            - values:
                - "-0xFFFFFFFF"
                - "0x80000000"
              bugid: ["966"]

      - file-name: "op_vs_8_nmax"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
            #
                ldai -0x80000000
                movi v0, %s
                add2 v0
                movi v0, %s
                jne v0, set_failure
                ldai 0
                jmp fall_through
            set_failure:
                ldai 1
            fall_through:
        description: Check add2 with -max and various values.
        cases:
            - values:
                - "0"
                - "0x80000000"
            - values:
                - "1"
                - "0x80000001"
            - values:
                - "-1"
                - "0x7FFFFFFF"
              bugid: ["966"]
            - values:
                - "0x7FFFFFFF"
                - "-1"
            - values:
                - "0x80000000"
                - "0"
              bugid: ["966"]
            - values:
                - "-0x7FFFFFFF"
                - "1"
              bugid: ["966"]
            - values:
                - "-0x80000000"
                - "0"
              bugid: ["966"]
            - values:
                - "0xFFFFFFFF"
                - "0x7FFFFFFF"
              bugid: ["966"]
            - values:
                - "-0xFFFFFFFF"
                - "-0x7FFFFFFF"

      - file-name: "vals"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        tags: ['tsan']
        code-template: |
            #
                ldai %s
                movi v0, %s
                add2 v0
                movi v0, %s
                jne v0, set_failure
                ldai 0
                jmp fall_through
            set_failure:
                ldai 1
            fall_through:
        description: Check add2 with various values.
        cases:
            - values:
                - "0x455ed8f5"
                - "0xfe61fbdd"
                - "0x43c0d4d2"
            - values:
                - "0xc3e6a70"
                - "0xae9b1e98"
                - "0xbad98908"
            - values:
                - "0xd2670242"
                - "0xef691c0f"
                - "0xc1d01e51"
            - values:
                - "0xf6d0f4f8"
                - "0x4ee5e5df"
                - "0x45b6dad7"
            - values:
                - "0xded7f996"
                - "0xd94428a1"
                - "0xb81c2237"
            - values:
                - "0x262d5e15"
                - "0x1a85200d"
                - "0x40b27e22"
            - values:
                - "0x4bb930e4"
                - "0x416b3a07"
                - "0x8d246aeb"
              bugid: ["966"]
            - values:
                - "0x61a80560"
                - "0xb076ee9"
                - "0x6caf7449"
            - values:
                - "0x42bd8cd3"
                - "0x9e28b8b6"
                - "0xe0e64589"
            - values:
                - "0x3c0a62e1"
                - "0xb18cfa"
                - "0x3cbbefdb"

      - file-name: "vals_mod32_1"
        bugid: ['1324', '2072']
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
          #
              ldai %s
              movi v0, %s
              add2 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check add2 with incorrect register and accumulator type.
        cases:
          - values:
              - "0x7FFFFFFF"
              - "0x7FFFFFFF"
              - "0xFFFFFFFFFFFFFFFE"
            bugid: ["966"]
          - values:
              - "0x7FFFFFFF"
              - "0x80000000"
              - "0xFFFFFFFFFFFFFFFF"
          - values:
              - "0x80000000"
              - "0x80000000"
              - "0"
            bugid: ["966"]

      - file-name: "vals_mod32_2"
        bugid: ['1324']
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        code-template: |
            #
                ldai.64 %s
                movi.64 v0, %s
                add2 v0
                movi.64 v0, %s
                cmp.64 v0
        description: Check add2 with incorrect register and accumulator type.
        cases:
            - values:
                - "0x17FFFFFFF"
                - "0x17FFFFFFF"
                - "0xFFFFFFFFFFFFFFFE"
              bugid: ["966"]
            - values:
                - "0x777777777FFFFFFF"
                - "0x1111111180000000"
                - "0xFFFFFFFFFFFFFFFF"
            - values:
                - "0x180000000"
                - "0x180000000"
                - "0"
              bugid: ["966"]

      - file-name: "regs"
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        runner-options: ['compile-only']
        code-template: |
            #
                add2 %s
        check-type: none
        description: Check add2 with various register numbers.
        cases:
            - values:
                - "v255"
            - values:
                - "v256"
              runner-options: ['compile-failure']

      - file-name: "type"
        bugid: ["964", "966"]
        tags: ["verifier"]
        isa:
          verification:
            - acc_type
            - v1_type
        runner-options: ['verifier-failure', 'verifier-config']
        header-template: []
        code-template: |
          .record T {}
          .function i32 main() {
              %s
              *s
              add2 v0
        check-type: exit-positive
        description: Check 'add2' with incorrect accumulator and/or register types.
        cases:
          - values:
            - ldai 0
            id: acc_ok
          - values:
            - ldai.64 0
          - values:
            - fldai 0
            bugid: ['7315']
          - values:
            - fldai.64 0
          - values:
            - lda.null
          - values:
            - |
              #
                  movi v1, 0
                  newarr v1, v1, i32[]
                  lda.obj v1
          - values:
            - lda.str "0"
          - values:
            - lda.type T
          - values:
            - |
              #
                  newobj v1, T
                  lda.obj v1
        template-cases:
          - values:
            - movi v0, 0
            exclude: [acc_ok]
          - values:
            - movi.64 v0, 0
          - values:
            - fmovi v0, 0
            bugid: ['7315']
          - values:
            - fmovi.64 v0, 0
          - values:
            - mov.null v0
          - values:
            - |
              #
                  movi v0, 0
                  newarr v0, v0, i32[]
          - values:
            - |
              #
                  lda.str "0"
                  sta.obj v0
          - values:
            - |
              #
                  lda.type T
                  sta.obj v0
          - values:
            - newobj v0, T

      - file-name: uninitialized_regs
        isa:
          instructions:
            - sig: add2 v:in:i32
              acc: inout:i32
              format: [op_v_8]
        description: Check 'add2' with uninitialized registers.
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        code-template: |
          #
              %s
              *s
              add2 *s
        check-type: exit-positive
        template-cases:
          - values:
              - ''
          - values:
              - ldai 0
            exclude: [init]
        cases:
          - values:
              - ''
              - v0
          - values:
              - movi v1, 0
              - v1
            id: init
          - values:
              - ''
              - v8
          - values:
              - ''
              - v15
          - values:
              - movi v15, 0
              - v15
            id: init
