# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions: []
tests:
  - file-name: "ashr2.64"
    isa:
      title: Two address binary operation on accumulator
      description: >
        Perform specified binary operation on accumulator and register and store result into accumulator
      exceptions:
        - x_none
    commands:
      - file-name: "op_vs_8_zero"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 0
              movi.64 v0, %s
              mov.64 v1, v0
              ashr2.64 v0
              movi.64 v0, 0
              cmp.64 v0
        description: Check ashr2.64 with 0 and various values.
        cases:
          - values:
              - "0"
          - values:
              - "1"
          - values:
              - "-1"
            bugid: ['1387']
          - values:
              - "0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "0x8000000000000000"
            bugid: ['1387']
          - values:
              - "-0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0x8000000000000000"
            bugid: ['1387']
          - values:
              - "0xFFFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0xFFFFFFFFFFFFFFFF"

      - file-name: "op_vs_8_pone"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 1
              movi.64 v0, %s
              ashr2.64 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check ashr2.64 with +1 and various values.
        cases:
          - values:
              - "0"
              - "1"
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
            bugid: ['1387']
          - values:
              - "0x7FFFFFFFFFFFFFFF"
              - "0"
            bugid: ['1387']
          - values:
              - "0x8000000000000000"
              - "1"
            bugid: ['1387']
          - values:
              - "-0x7FFFFFFFFFFFFFFF"
              - "0"
            bugid: ['1387']
          - values:
              - "-0x8000000000000000"
              - "1"
            bugid: ['1387']
          - values:
              - "0xFFFFFFFFFFFFFFFF"
              - "0"
            bugid: ['1387']
          - values:
              - "-0xFFFFFFFFFFFFFFFF"
              - "0"
      - file-name: "op_vs_8_none"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 -1
              movi.64 v0, %s
              ashr2.64 v0
              movi.64 v0, 0xFFFFFFFFFFFFFFFF
              cmp.64 v0
        description: Check ashr2.64 with -1 and various values.
        cases:
          - values:
              - "0"
          - values:
              - "1"
          - values:
              - "-1"
            bugid: ['1387']
          - values:
              - "0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "0x8000000000000000"
            bugid: ['1387']
          - values:
              - "-0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0x8000000000000000"
            bugid: ['1387']
          - values:
              - "0xFFFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0xFFFFFFFFFFFFFFFF"

      - file-name: "op_vs_8_pmax"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 0x7FFFFFFFFFFFFFFF
              movi.64 v0, %s
              ashr2.64 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check ashr2.64 with +max and various values.
        cases:
          - values:
              - "0"
              - "0x7FFFFFFFFFFFFFFF"
          - values:
              - "1"
              - "0x3FFFFFFFFFFFFFFF"
          - values:
              - "-1"
              - "0"
            bugid: ['1387']
          - values:
              - "0x7FFFFFFFFFFFFFFF"
              - "0"
            bugid: ['1387']
          - values:
              - "0x8000000000000000"
              - "0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0x7FFFFFFFFFFFFFFF"
              - "0x3FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0x8000000000000000"
              - "0x7FFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "0xFFFFFFFFFFFFFFFF"
              - "0"
            bugid: ['1387']
          - values:
              - "-0xFFFFFFFFFFFFFFFF"
              - "0x3FFFFFFFFFFFFFFF"

      - file-name: "op_vs_8_nmax"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 -0x8000000000000000
              movi.64 v0, %s
              ashr2.64 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check ashr2.64 with -max and various values.
        cases:
          - values:
              - "0"
              - "0x8000000000000000"
          - values:
              - "1"
              - "0xC000000000000000"
          - values:
              - "-1"
              - "0xFFFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "0x7FFFFFFFFFFFFFFF"
              - "0xFFFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "0x8000000000000000"
              - "0x8000000000000000"
            bugid: ['1387']
          - values:
              - "-0x7FFFFFFFFFFFFFFF"
              - "0xC000000000000000"
            bugid: ['1387']
          - values:
              - "-0x8000000000000000"
              - "0x8000000000000000"
            bugid: ['1387']
          - values:
              - "0xFFFFFFFFFFFFFFFF"
              - "0xFFFFFFFFFFFFFFFF"
            bugid: ['1387']
          - values:
              - "-0xFFFFFFFFFFFFFFFF"
              - "0xC000000000000000"

      - file-name: "vals"
        bugid: ['1387']
        tags: [tsan]
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        code-template: |
          #
              ldai.64 %s
              movi.64 v0, %s
              ashr2.64 v0
              movi.64 v0, %s
              cmp.64 v0
        description: Check ashr2.64 with various values.
        cases:
          - values:
              - "0xFE6674C201B14627"
              - "0x2601D2490A8864EA"
              - "0xFFFFFFFFFFFF999D"
          - values:
              - "0x842E04478F67F2E3"
              - "0x368CE351BEBEDC0B"
              - "0xFFF085C088F1ECFE"
          - values:
              - "0x1B16734EA3D2AF62"
              - "0x1FC29369311C09EF"
              - "0x362C"
          - values:
              - "0x183164BF6007479A"
              - "0x52B816408F69B085"
              - "0xC18B25FB003A3C"
          - values:
              - "0x564211418F5FFAB3"
              - "0xE67A09B21E79C43C"
              - "0x5"
          - values:
              - "0xE31AE0FB7EF37660"
              - "0xBFC173B45A158E5D"
              - "0xFFFFFFFF18D707DB"
          - values:
              - "0xB16BE43C76A2D3B8"
              - "0xE78C20F13E09B801"
              - "0xD8B5F21E3B5169DC"
          - values:
              - "0x7584DE0D203F130C"
              - "0xE6DA75A526C62DF8"
              - "0x75"
          - values:
              - "0xA646E54FA8F51A68"
              - "0xF363814FD00C529C"
              - "0xFFFFFFFA646E54FA"
          - values:
              - "0xE96F352D8B13BB9A"
              - "0x67833675616CF416"
              - "0xFFFFFFA5BCD4B62C"

      - file-name: "regs"
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        runner-options: ['compile-only']
        code-template: |
          #
              ashr2.64 %s
        check-type: none
        description: Check ashr2.64 with various register numbers.
        cases:
          - values:
              - "v255"
          - values:
              - "v256"
            runner-options: ['compile-failure']

      - file-name: "type"
        bugid: ["964", "966"]
        tags: ["verifier"]
        isa:
          verification:
            - acc_type
            - v1_type
        runner-options: ['verifier-failure', 'verifier-config']
        header-template: []
        code-template: |
          .record T {}
          .function i32 main() {
              %s
              *s
              ashr2.64 v0
        check-type: exit-positive
        description: Check 'ashr2.64' with incorrect accumulator and/or register types.
        cases:
          - values:
            - ldai 0
          - values:
            - ldai.64 0
            id: acc_ok
          - values:
            - fldai 0
            bugid: ['7315']
          - values:
            - fldai.64 0
            bugid: ['7315']
          - values:
            - lda.null
          - values:
            - |
              #
                  movi v1, 0
                  newarr v1, v1, i32[]
                  lda.obj v1
          - values:
            - lda.str "0"
          - values:
            - lda.type T
          - values:
            - |
              #
                  newobj v1, T
                  lda.obj v1
        template-cases:
          - values:
            - movi v0, 0
          - values:
            - movi.64 v0, 0
            exclude: [acc_ok]
          - values:
            - fmovi v0, 0
            bugid: ['7315']
          - values:
            - fmovi.64 v0, 0
            bugid: ['7315']
          - values:
            - mov.null v0
          - values:
            - |
              #
                  movi v0, 0
                  newarr v0, v0, i32[]
          - values:
            - |
              #
                  lda.str "0"
                  sta.obj v0
          - values:
            - |
              #
                  lda.type T
                  sta.obj v0
          - values:
            - newobj v0, T


      - file-name: uninitialized_regs
        isa:
          instructions:
            - sig: ashr2.64 v:in:i64
              acc: inout:i64
              prefix: bit
              format: [pref_op_v_8]
        description: Check 'ashr2.64' with uninitialized registers.
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        code-template: |
          #
              %s
              *s
              ashr2.64 *s
        check-type: exit-positive
        template-cases:
          - values:
              - ''
          - values:
              - ldai.64 0
            exclude: [init]
        cases:
          - values:
              - ''
              - v0
          - values:
              - movi.64 v1, 0
              - v1
            id: init
          - values:
              - ''
              - v8
          - values:
              - ''
              - v15
          - values:
              - movi.64 v15, 0
              - v15
            id: init
