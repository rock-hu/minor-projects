# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions: []
tests:
  - file-name: "f32tof64"
    isa:
      title: Conversions between integer and floating point types
      description: >
        Perform specified primitive type conversion of accumulator.
      exceptions:
        - x_none
    commands:
      - file-name: "op_none"
        isa:
          instructions:
            - sig: f32tof64
              acc: inout:f32->f64
              prefix: f32
              format: [pref_op_none]
        code-template: |
          #
              fldai %s
              f32tof64
              fmovi.64 v0, %s
              fcmpg.64 v0
        description: Check f32tof64 with various values.
        tags: ['tsan', 'irtoc_ignore']
        cases:
            - values:
                - "0.0"
                - "0.0"
            - values:
                - "-0.0"
                - "-0.0"
            - values:
                - "1.0"
                - "1.0"
            - values:
                - "-1.0"
                - "-1.0"
            - values:
                # +inf
                - "0x7f800000"
                - "0x7ff0000000000000"
            - values:
                # -inf
                - "0xff800000"
                - "0xfff0000000000000"
            - values:
                # +max -> 3.4028234663852886e38
                - "0x7f7fffff"
                - "0x47efffffe0000000"
            - values:
                # +min -> 1.401298464324817e-45
                - "0x00000001"
                - "0x36a0000000000000"
            - values:
                # -max -> -3.4028234663852886e38
                - "0xff7fffff"
                - "0xc7efffffe0000000"
            - values:
                # -min -> -1.401298464324817e-45
                - "0x80000001"
                - "0xb6a0000000000000"
            - values:
                - "3.1415927"
                - "3.1415927410125732"
            - values:
                - "-3.1415927"
                - "-3.1415927410125732"

      - file-name: "type"
        isa:
          instructions:
            - sig: f32tof64
              acc: inout:f32->f64
              prefix: f32
              format: [pref_op_none]
          verification:
              - acc_type
        description: |
          Check `f32tof64` with incorrect accumulator type.
          Load different values (objects, strings, types, 64-bit floating point values, 64-bit integer values) and invokes `f32tof64`.
          Return 0 to indicate that negative test failed, because this line is unreachable and code will not be executed after verification error.
        bugid: ["964", "1653"]
        tags: ["verifier"]
        runner-options: ['verifier-failure', 'verifier-config']
        header-template: []
        code-template: |
            #
            .record B {}
            .record panda.String <external>
            .record panda.Object <external>
            .function i32 main() {
                %s
                f32tof64
        check-type: exit-positive
        cases:
            - values:
                - ldai 0
            - values:
                - ldai.64 0
            - values:
                - fldai.64 0
            - values:
                - lda.type B
            - values:
                - lda.type B[]
            - values:
                - lda.type panda.String
            - values:
                - lda.str "string"
            - values:
                - lda.type panda.Object
            - values:
                - |
                  #
                      movi v0, 10
                      newarr v0, v0, i32[]
                      lda.obj v0
            - values:
                - lda.null

      - file-name: uninitialized_regs
        isa:
          instructions:
            - sig: f32tof64
              acc: inout:f32->f64
              prefix: f32
              format: [pref_op_none]
        description: Check 'f32tof64' with uninitialized accumulator.
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        code-template: |
            #
                f32tof64
        check-type: exit-positive
