# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions: []
tests:
  - file-name: "fmod2"
    isa:
      title: Two address floating-point binary operation on accumulator
      description: >
        Perform specified floating-point binary operation on accumulator and register and store result into accumulator.
        The results of instructions correspond IEEE-754 arithmetic rules.
      exceptions:
        - x_none
    commands:
      - file-name: "op_vs_8_nan"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
          description: Any operation with NaN results to NaN value.
        check-type: check-acc-nan-f32
        tags: ['irtoc_ignore']
        code-template: |
          #
              fldai %s
              fmovi v0, *s
              fmod2 v0
        description: >
          Check fmod2 results in NaN when acc or v0 is NaN
        template-cases:
          - values:
              # NaN
            - "0x7fc00000"
          - values:
              # NaN representation
            - "0xFFFFFFFF"
          - values:
            - "0"
            exclude: [hasval]
          - values:
              # Negative zero
              # -0.0d
              - "0x80000000"
            exclude: [hasval]
          - values:
            - "1"
            exclude: [hasval]
          - values:
            - "-1"
            exclude: [hasval]
          - values:
            # +Inf
            - "0x7f800000"
            exclude: [hasval]
          - values:
            # -Inf
            - "0xff800000"
            exclude: [hasval]
          - values:
            # +max
            - "0x7f7ffffff"
            exclude: [hasval]
          - values:
            # -max
            - "0xff7ffffff"
            exclude: [hasval]
          - values:
            # +min
            - "0x000000001"
            exclude: [hasval]
          - values:
            # -min
            - "0x800000001"
            exclude: [hasval]
          - values:
            - "3.1415927"
            exclude: [hasval]
          - values:
            - "1234567890"
            exclude: [hasval]
        cases:
          - values:
              # NaN
              - "0x7fc00000"
          - values:
              # NaN
              - "0xFFFFFFFF"
          - values:
              - "0"
            id: hasval
            bugid: ['3846']
          - values:
              # Negative zero
              # -0.0d
              - "0x80000000"
            id: hasval
            bugid: ['3846']
          - values:
              - "1"
            id: hasval
          - values:
              - "-1"
            id: hasval
          - values:
              # +Inf
              - "0x7f800000"
            id: hasval
          - values:
              # -Inf
              - "0xff800000"
            id: hasval
          - values:
              # +max
              - "0x7f7fffff"
            id: hasval
          - values:
              # -max
              - "0xff7fffff"
            id: hasval
          - values:
              # +min
              - "0x00000001"
            id: hasval
          - values:
              # -min
              - "0x80000001"
            id: hasval
          - values:
              - "3.1415927"
            id: hasval
          - values:
              - "1234567890"
            id: hasval

      - file-name: "op_vs_8_pinf"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-acc-nan-f32
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai 0x7f800000 # +Inf
                fmovi v0, %s
            # Mod of +Inf and value
                fmod2 v0
        description: Check fmod2 with positive Inf and various values (NaN, Inf, min, max, numbers).
        cases:
          - values:
              # NaN
              - "0x7fc00000"
          - values:
              # NaN
              - "0xFFFFFFFF"
          - values:
              - "0"
            bugid: ['3846']
          - values:
              # -0.0
              - "0x80000000"
            bugid: ['3846']
          - values:
              - "1"
          - values:
             - "-1"
          - values:
              # +Inf
              - "0x7f800000"
          - values:
              # -Inf
              - "0xff800000"
          - values:
              # +max
              - "0x7f7fffff"
          - values:
              # -max
              - "0xff7fffff"
          - values:
              # +min
              - "0x00000001"
          - values:
              # -min
              - "0x80000001"
          - values:
              - "3.1415927"
          - values:
              - "1234567890"

      - file-name: "op_vs_8_ninf"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-acc-nan-f32
        tags: ['irtoc_ignore']

        code-template: |
            #
                fldai 0xff800000 # -Inf
                fmovi v0, %s
            # Mod of -Inf and value
                fmod2 v0
        description: Check fmod2 with negative Inf and various values (NaN, Inf, min, max, numbers).
        cases:
          - values:
              # NaN
              - "0x7fc00000"
          - values:
              # NaN
              - "0xFFFFFFFF"
          - values:
              - "0"
            bugid: ['3846']
          - values:
              # -0.0d
              - "0x80000000"
            bugid: ['3846']
          - values:
              - "1"
          - values:
              - "-1"
          - values:
              # +Inf
              - "0x7f800000"
          - values:
              # -Inf
              - "0xff800000"
          - values:
              # +max
              - "0x7f7fffff"
          - values:
              # -max
              - "0xff7fffff"
          - values:
              # +min
              - "0x00000001"
          - values:
              # -min
              - "0x80000001"
          - values:
              - "3.1415927"
          - values:
              - "1234567890"

      - file-name: "op_vs_8_inf_nan"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
          description: >
            Division is NaN if Infinity is divided by Infinity.
        check-type: check-acc-nan-f32
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai %s
                fmovi v0, *s
            # Modulo of Inf by Inf
                fmod2 v0
        description: >
          Check fmod2 of Inf by Inf is NaN. (Case of Modulo)
        template-cases:
          - values: ["0x7f800000"]
          - values: ["0xff800000"]
        cases:
          - values: ["0x7f800000"]
          - values: ["0xff800000"]

      - file-name: "op_vs_8_pzero"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai 0.0 #
                fmovi v0, %s
            # Mod of +0.0 and value
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with +0 and various values (NaN, Inf, min, max, numbers).
        cases:
            - values:
                # +Inf
                - "0x7f800000"
                - "0"
            - values:
                # -Inf
                - "0xff800000"
                - "0"
            - values:
                # 1d
                - "1"
                - "0"
            - values:
                - "-1"
                # -0.0
                - "0x80000000"

            - values:
                # +max
                - "0x7f7fffff"
                - "0"
            - values:
                # -max
                - "0xff7fffff"
                # -0.0
                - "0x80000000"
            - values:
                # +min
                - "0x00000001"
                - "0"
            - values:
                # -min
                - "0x80000001"
                # -0.0
                - "0x80000000"
            - values:
                # Some FP value, 3.1415927
                - "3.1415927"
                - "0"

      - file-name: "op_vs_8_nzero"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai -0.0 #
                fmovi v0, %s
            # Mod of -0.0 and value
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with -0 and various values (NaN, Inf, min, max, numbers).
        cases:
          - values:
              # +Inf
              - "0x7f800000"
              - "0"
          - values:
              # -Inf
              - "0xff800000"
              - "0"
          - values:
              - "1"
              # -0.0d
              - "0x80000000"
          - values:
              - "-1"
              - "0"
          - values:
              # +max
              - "0x7f7fffff"
              # -0.0d
              - "0x80000000"
          - values:
              # -max
              - "0xff7fffff"
              - "0"
          - values:
              # +min
              - "0x00000001"
              # -0.0d
              - "0x80000000"
          - values:
              # -min
              - "0x80000001"
              - "0"
          - values:
              - "3.1415927"
              # -0.0d
              - "0x80000000"
          - values:
              # Some FP value,
              - "-3.1415927"
              - "0"

      - file-name: "op_vs_8_pone"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai 1.0 #
                fmovi v0, %s
            # Mod of 1.0 and value
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with +1 and various values (NaN, Inf, min, max, numbers).
        cases:
          - values:
              - "1"
              - "0"
          - values:
              - "-1"
              - "0"
          - values:
              # +Inf
              - "0x7f800000"
              - "1"
          - values:
              # -Inf
              - "0xff800000"
              - "1"
          - values:
              # +max
              - "0x7f7fffff"
              - "1"
          - values:
              # -max
              - "0xff7fffff"
              - "1"
          - values:
              # +min
              - "0x00000001"
              - "0"
          - values:
              # -min
              - "0x80000001"
              - "0"
          - values:
              # Some FP value,
              - "3.1415927"
              - "1"
          - values:
              - "-3.1415927"
              - "1"
          - values:
              - "1234.9876"
              - "1"

      - file-name: "op_vs_8_none"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai -1.0 #
                fmovi v0, %s
            # Mod of -1.0 and value
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with -1 and various values (NaN, Inf, min, max, numbers).
        cases:
          - values:
              - "1"
              - "-0.0"
          - values:
              - "-1"
              - "-0.0"
          - values:
              # +Inf
              - "0x7f800000"
              - "-1"
          - values:
              # -Inf
              - "0xFF800000"
              - "-1"
          - values:
              # +max
              - "0x7f7fffff"
              - "-1"
          - values:
              # -max
              - "0xff7fffff"
              - "-1"
          - values:
              # +min
              - "0x00000001"
              - "-0.0"
          - values:
              # -min
              - "0x80000001"
              - "-0.0"
          - values:
              # Some FP value,
              - "3.1415927"
              - "-1"
          - values:
              - "-3.1415927"
              - "-1"
          - values:
              - "1234.9876"
              - "-1"

      - file-name: "op_vs_8"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai %s #
                fmovi v0, %s
            # Mod of -1.0 and value
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with various values.
        cases:
            - values:
                - "1.0"
                - "-1.0"
                - "0.0"
            - values:
                - "1.0"
                - "1.0"
                - "0.0"
            - values:
                - "-1.0"
                - "1.0"
                - "0.0"
            - values:
                - "1.0e10"
                - "1.0e10"
                - "0.0"
            - values:
                - "1.0e10"
                - "-1.0e10"
                - "-0.0"
            - values:
                - "1.0e+10"
                - "1.0e-10"
                - "2.6432634e-11"
            - values:
                - "-1.0e10"
                - "1.0e10"
                - "-0.0"
            - values:
                - "-1.0e-10"
                - "1.0e-10"
                - "-0.0"
            - values:
                - "-1.0e+10"
                - "-1.0e-10"
                - "-2.6432634e-11"
            - values:
                - "3.1415927"
                - "-3.1415927"
                - "0.0"
            - values:
                - "3.1415927e10"
                - "-3.1415927e10"
                - "-0.0"
#            - values:
#              # TODO add test cases for maximal and minimal FP value in decimal scientific literal

      - file-name: "op_vs_8_max"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai %s
                fmovi v0, %s
            # Mod of two values
                fmod2 v0
                fmovi v1, 0
                fcmpg v1
        description: Check fmod2 with various maximal values.
        cases:
          - values:
              # +max
              - "0x7f7fffff"
              # +max
              - "0x7f7fffff"
          - values:
              # -max
              - "0xff7fffff"
              - "0xff7fffff"
          - values:
              # +max
              - "0x7f7fffff"
              # -max
              - "0xff7fffff"
          - values:
              # +max
              - "0x7f7fffff"
              - "1"
          - values:
              # +max
              - "0x7f7fffff"
              - "-1"
          - values:
              # -max
              - "0xff7fffff"
              - "1"
          - values:
              # -max
              - "0xff7fffff"
              - "-1"

      - file-name: "op_vs_8_zeroes_nan"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-acc-nan-f32
        tags: ['irtoc_ignore']
        code-template: |
            #
                fldai %s #
                fmovi v0, %s
            # Mod of -1.0 and value
                fmod2 v0
        description: Check fmod2 with zeroes.
        bugid: ['3846']
        cases:
            - values:
                - "0.0"
                - "0.0"
            - values:
                - "0.0"
                - "-0.0"
            - values:
                - "-0.0"
                - "0.0"
            - values:
                - "-0.0"
                - "-0.0"

      - file-name: "incorrect_reg"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: none
        runner-options: [compile-failure]
        description: Check fmod2 with incorrect register numbers.
        code-template: |
          #
              fmod2 %s
        cases:
          - values: [v256]
          - values: [v65535]
          - values: [a0]
          - values: [a255]
          - values: ['null']
          - values: [0]
          - values: [1.1]
          - values: ['2.2']

      - file-name: "reg_number"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: none
        runner-options: [compile-only]
        description: Check fmod2 with correct register numbers.
        code-template: |
          #
              fmod2 %s
        cases:
          - values: [v0]
          - values: [v16]
          - values: [v128]
          - values: [v255]

      - file-name: "calc"
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        check-type: check-positive
        code-template: |
            #
                fldai %s #
                fmovi v0, %s
                fmod2 v0
                fmovi v1, %s
                fcmpg v1
        description: Check fmod2 with various values.
        tags: ['tsan', 'irtoc_ignore']
        cases:
          - values:
              - "0.1201831"
              - "-0.0251311"
              - "0.0196587"
          - values:
              - "0.2244025"
              - "0.2947366"
              - "0.2244025"
          - values:
              - "0.3033862"
              - "-0.375601"
              - "0.3033862"
          - values:
              - "0.2936997"
              - "-0.1764426"
              - "0.11725712"
          - values:
              - "-0.0995693"
              - "-0.3877892"
              - "-0.0995693"
          - values:
              - "0.33149309"
              - "-0.13506203"
              - "0.06136903"
          - values:
              - "0.12451977"
              - "-0.39010722"
              - "0.12451977"
          - values:
              - "0.2255692"
              - "-0.3969391"
              - "0.2255692"
          - values:
              - "-0.3573151"
              - "0.3968803"
              - "-0.3573151"
          - values:
              - "0.16934379"
              - "0.40037033"
              - "0.16934379"

      - file-name: "type"
        isa:
            instructions:
              - sig: fmod2 v:in:f32
                acc: inout:f32
                format: [op_v_8]
            verification:
              - acc_type
              - v1_type
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        header-template: []
        code-template: |
          #
          .record A {}
          .record B {}
          .record panda.String <external>
          .record panda.Object <external>
          .function i32 main() {
              %s
              *s
              fmod2 v0
        check-type: exit-positive
        description: Check 'fmod2' with incorrect register and accumulator type.
        template-cases:
          - values:
              - movi v0, 0
          - values:
              - movi.64 v0, 0
          - values:
              - fmovi v0, 0
            exclude: [val]
          - values:
              - fmovi.64 v0, 0
          - values:
              - |
                #
                    lda.type B
                    sta.obj v0
          - values:
              - |
                #
                    lda.type B[]
                    sta.obj v0
          - values:
              - |
                #
                    lda.type panda.String
                    sta.obj v0
          - values:
              - |
                #
                    lda.str "string"
                    sta.obj v0
          - values:
              - |
                #
                    movi v0, 10
                    newarr v0, v0, i32[]
          - values:
              - mov.null v0

        cases:
          - values:
              - ldai 0
          - values:
              - ldai.64 0
          - values:
              - fldai 0
            id: val
          - values:
              - fldai.64 0
          - values:
              - |
                #
                    lda.type A
          - values:
              - |
                #
                    lda.type A[]
          - values:
              - |
                #
                    lda.type panda.String
          - values:
              - |
                #
                    lda.str "string"
          - values:
              - |
                #
                    movi v1, 10
                    newarr v1, v1, f32[]
                    lda.obj v1
          - values:
              - lda.null

      - file-name: uninitialized_regs
        isa:
          instructions:
            - sig: fmod2 v:in:f32
              acc: inout:f32
              format: [op_v_8]
        description: Check 'fmod2' with uninitialized register and accumulator.
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        code-template: |
            #
                %s
                *s
                fmod2 %s
        check-type: exit-positive
        template-cases:
          - values:
              - ''
              - v0
          - values:
              - fmovi v0, 0
              - v0
            exclude: [init]
          - values:
              - ''
              - v7
          - values:
              - ''
              - v15
          - values:
              - fmovi v15, 0
              - v15
            exclude: [init]
          - values:
              - ''
              - v128
          - values:
              - fmovi v128, 0
              - v128
            exclude: [init]
          - values:
              - ''
              - v255
          - values:
              - fmovi v255, 0
              - v255
            exclude: [init]
        cases:
          - values:
              - ''
          - values:
              - fldai 0
            id: init
