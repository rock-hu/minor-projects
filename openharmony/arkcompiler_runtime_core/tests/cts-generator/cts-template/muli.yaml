# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
definitions: []
tests:
  - file-name: muli
    isa:
      title: Two address binary operation with immediate on accumulator
      description: >
        Perform specified binary operation on accumulator and immediate and store result into accumulator.
        Immediate is sign extended to operand size.
      exceptions:
        - x_none
    commands:
      - file-name: op_imm_8_zero
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai 0
              muli %s
              movi v0, 0
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with zero and various values.
        tags: ['tsan']
        cases:
          - values: ["0"]
          - values: ["1"]
          - values: ["-1"]
          - values: ["0xF"]
          - values: ["-0xF"]
          - values: ["0x7F"]
          - values: ["-0x7F"]
          - values: ["0x80"]
          - values: ["-0x80"]
          - values: ["0xFF"]
          - values: ["-0xFF"]


      - file-name: op_imm_8_pone
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai 1
              muli %s
              movi v0, %s
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with +1 and various values.
        cases:
          - values: ["0", "0x0"]
          - values: ["1", "0x1"]
          - values: ["-1", "0xFFFFFFFF"]
          - values: ["0xF", "0xF"]
          - values: ["-0xF", "0xFFFFFFF1"]
          - values: ["0x7F", "0x7F"]
          - values: ["-0x7F", "0xFFFFFF81"]
          - values: ["0x80", "0xFFFFFF80"]
          - values: ["-0x80", "0xFFFFFF80"]
          - values: ["0xFF", "0xFFFFFFFF"]
          - values: ["-0xFF", "0x1"]


      - file-name: op_imm_8_none
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai -1
              muli %s
              movi v0, %s
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with -1 and various values.
        cases:
          - values: ["0", "0x0"]
          - values: ["1", "0xFFFFFFFF"]
          - values: ["-1", "0x1"]
          - values: ["0xF", "0xFFFFFFF1"]
          - values: ["-0xF", "0xF"]
          - values: ["0x7F", "0xFFFFFF81"]
          - values: ["-0x7F", "0x7F"]
          - values: ["0x80", "0x80"]
          - values: ["-0x80", "0x80"]
          - values: ["0xFF", "0x1"]
          - values: ["-0xFF", "0xFFFFFFFF"]


      - file-name: op_imm_8_pmax
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai 0x7FFFFFFF
              muli %s
              movi v0, %s
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with +max and various values.
        cases:
          - values: ["0", "0x0"]
          - values: ["1", "0x7FFFFFFF"]
          - values: ["-1", "0x80000001"]
          - values: ["0xF", "0x7FFFFFF1"]
          - values: ["-0xF", "0x8000000F"]
          - values: ["0x7F", "0x7FFFFF81"]
          - values: ["-0x7F", "0x8000007F"]
          - values: ["0x80", "0x80"]
          - values: ["-0x80", "0x80"]
          - values: ["0xFF", "0x80000001"]
          - values: ["-0xFF", "0x7FFFFFFF"]


      - file-name: op_imm_8_nmax
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai -0x80000000
              muli %s
              movi v0, %s
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with -max and various values.
        cases:
          - values: ["0", "0x0"]
          - values: ["1", "0x80000000"]
          - values: ["-1", "0x80000000"]
          - values: ["0xF", "0x80000000"]
          - values: ["-0xF", "0x80000000"]
          - values: ["0x7F", "0x80000000"]
          - values: ["-0x7F", "0x80000000"]
          - values: ["0x80", "0x0"]
          - values: ["-0x80", "0x0"]
          - values: ["0xFF", "0x80000000"]
          - values: ["-0xFF", "0x80000000"]


      - file-name: vals
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        code-template: |
          #
              ldai %s
              muli %s
              movi v0, %s
              jne v0, set_failure
              ldai 0
              return
          set_failure:
              ldai 1
              return
        check-type: none
        description: Check `muli` with various values.
        cases:
          - values: ["0xD6FE0B32", "0x88", "0x38EAC090"]
          - values: ["0x13484A42", "0x9A", "0x513269B4"]
          - values: ["0x7D62F544", "0xDE", "0x58DB6CF8"]
          - values: ["0xAEBE9BAC", "0x3B", "0x45EDE0A4"]
          - values: ["0xBE2A4011", "0x46", "0xFF8D84A6"]
          - values: ["0x1853EB07", "0x3E", "0xE452EBB2"]
          - values: ["0x756756C8", "0x1F", "0x37838238"]
          - values: ["0x84F26D1", "0x8A", "0x2B841BAA"]
          - values: ["0x87224E03", "0x94", "0xFD8716BC"]
          - values: ["0x379F75A8", "0x10", "0x79F75A80"]


      - file-name: type
        isa:
          verification:
            - acc_type
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        header-template: []
        code-template: |
          #
          .record panda.Object <external>
          .function i32 main() {
              %s
              muli 0
        check-type: exit-positive
        description: Check 'muli' with incorrect acc type.
        cases:
          - values: [ldai.64 0]
          - values: [fldai 0]
            bugid: ['7315']
          - values: [fldai.64 0]
          - values: [lda.null]
          - values: [lda.type panda.Object]
          - values: ['lda.type i32[]']
          - values: [lda.str ""]
          - values:
            - |
              #
                  newobj v0, panda.Object
                  lda.obj v0
          - values:
            - |
              #
                  movi v0, 10
                  newarr v0, v0, i32[]
                  lda.obj v0


      - file-name: uninitialized_acc
        isa:
          instructions:
            - sig: muli imm:i32
              acc: inout:i32
              format: [op_imm_8]
        description: Check 'muli' with uninitialized accumulator.
        tags: ['verifier']
        runner-options: ['verifier-failure', 'verifier-config']
        code-template: |
            #
                muli 0
        check-type: exit-positive
