# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

definitions:
  - name: PandaAssembly
    template: |
      .language PandaAssembly
  - name: obj-ctor
    template: |
        .record Obj {}

        .function void Obj.ctor(Obj a0) <ctor> {
            return.void
        }
tests:
  - file-name: "return.64"
    isa:
      title: Return value from method
      description: >
        Return from the current method, i.e. restore the frame of method invoker and return control to the
        invoker. Return value should be in accumulator.
      exceptions:
        - x_none
    commands:
      - file-name: 'call_s_p'
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        description: Check 'return.64' returns control flow to caller, static call, Pandasm context.
        tags: ['tsan']
        header-template: []
        code-template: |
          .function i64 func(%s) {
              ldai.64 0x123456789ABCDEF0
              return.64
          }

          .function i32 main() {
              %s
              call func%s
              movi.64 v0, 0x123456789ABCDEF0
              cmp.64 v0
        check-type: no-check
        cases:
          - values:
              - ''
              - ''
              - ''
          - values:
              - 'i32 a0'
              - 'movi v0, 0x12345678'
              - ', v0'
          - values:
              - 'u16 a0, f64 a1'
              - |
                #
                    movi v0, 0
                    fmovi.64 v1, 1.2
              - ', v0, v1'
          - values:
              - 'i8 a0, f32 a1, i64 a2'
              - |
                #
                    movi v0, 0
                    fmovi v1, 1.2
                    movi.64 v2, 0xFF
              - ', v0, v1, v2'
          - values:
              - 'i16 a0, u1 a1, u64 a2, Obj a3'
              - |
                #
                    movi v0, 0
                    movi v1, 1
                    movi.64 v2, 0xFF
                    mov.null v3
              - ', v0, v1, v2, v3'
            case-header-template: [obj-ctor]

      - file-name: 'call_s_j'
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        description: Check 'return.64' returns control flow to caller, static call, PandaAssembly context.
        tags: ['tsan']
        header-template: [PandaAssembly, obj-ctor]
        runner-options: [use-pa]
        code-template: |
          .function f64 Obj.func(%s) {
              fldai.64 3.1415926
              return.64
          }

          .function i32 main() {
              %s
              call Obj.func%s
              fmovi.64 v0, 3.1415926
              fcmpg.64 v0
        check-type: no-check
        cases:
          - values:
              - ''
              - ''
              - ''
          - values:
              - 'i32 a0'
              - 'movi v0, 0x12345678'
              - ', v0'
          - values:
              - 'u16 a0, f64 a1'
              - |
                #
                    movi v0, 0
                    fmovi.64 v1, 1.2
              - ', v0, v1'
          - values:
              - 'i8 a0, f32 a1, i64 a2'
              - |
                #
                    movi v0, 0
                    fmovi v1, 1.2
                    movi.64 v2, 0xFF
              - ', v0, v1, v2'
          - values:
              - 'i16 a0, u1 a1, i64 a2, Obj a3'
              - |
                #
                    movi v0, 0
                    movi v1, 1
                    movi.64 v2, 0xFF
                    mov.null v3
              - ', v0, v1, v2, v3'

      - file-name: 'call_v_p'
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        description: Check 'return.64' returns control flow to caller, virtual call, Pandasm context.
        tags: ['tsan']
        header-template: [obj-ctor]
        code-template: |
          .function u64 Obj.func(%s) {
              ldai.64 0x123456789ABCDEF0
              return.64
          }

          .function i32 main() {
              %s
              newobj v10, Obj
              call.virt Obj.func%s
              movi.64 v0, 0x123456789ABCDEF0
              ucmp.64 v0
        check-type: no-check
        cases:
          - values:
              - 'Obj a0'
              - ''
              - ', v10'

          - values:
              - 'Obj a0, i32 a1'
              - 'movi v0, 0x12345678'
              - ', v10, v0'

          - values:
              - 'Obj a0, u8 a1, f64 a2'
              - |
                #
                    movi v0, 0
                    fmovi.64 v1, 1.2
              - ', v10, v0, v1'
          - values:
              - 'Obj a0, i16 a1, f32 a2, i64 a3'
              - |
                #
                    movi v0, 0
                    fmovi v1, 1.2
                    movi.64 v2, 0xFF
              - ', v10, v0, v1, v2'

      - file-name: 'call_v_j'
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        description: Check 'return.64' returns control flow to caller, virtual call, PandaAssembly context.
        tags: ['tsan']
        header-template: [PandaAssembly, obj-ctor]
        runner-options: [use-pa]
        code-template: |
          .function i64 Obj.func(%s) {
              ldai.64 0x123456789ABCDEF0
              return.64
          }
          .record Obj2 <panda.extends=Obj> {}

          .function i32 main() {
              %s
              newobj v10, Obj2
              call.virt Obj.func%s
              movi.64 v0, 0x123456789ABCDEF0
              cmp.64 v0
        check-type: no-check
        cases:
          - values:
              - 'Obj a0'
              - ''
              - ', v10'

          - values:
              - 'Obj a0, i32 a1'
              - 'movi v0, 0x12345678'
              - ', v10, v0'

          - values:
              - 'Obj a0, i8 a1, f64 a2'
              - |
                #
                    movi v0, 0
                    fmovi.64 v1, 1.2
              - ', v10, v0, v1'
          - values:
              - 'Obj a0, i8 a1, f32 a2, i64 a3'
              - |
                #
                    movi v0, 0
                    fmovi v1, 1.2
                    movi.64 v2, 0xFF
              - ', v10, v0, v1, v2'

      - file-name: "wrong_return"
        tags: [verifier]
        runner-options: ['verifier-failure', 'verifier-config']
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: []
        code-template: |
          .function f64 func() {
              fldai.64 0x12345678
              %s
          }

          .function i32 main() {
              call.short func
        check-type: exit-positive
        description: Check the verifier behavior when expected 'return.64' is not given.
        cases:
          - values: ['']
          - values: ['return.void']
          - values: ['return']
          - values: ['return.obj']

      - file-name: "type"
        bugid: ["964", "966", "1324"]
        tags: ["verifier"]
        runner-options: ['verifier-failure', 'verifier-config']
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
          verification:
            - acc_return_type
        header-template: []
        code-template: |
          .record panda.Object <external>
          .function %s func() {
              *s
              return.64
          }

          .function i32 main() {
              call.short func
        check-type: exit-positive
        description: Check that 'return.64' is used with correct accumulator value and function return type.
        template-cases:
          - values: [void]
          - values: [u1]
          - values: [i8]
          - values: [u8]
          - values: [i16]
          - values: [u16]
          - values: [i32]
          - values: [u32]
          - values: [i64]
            exclude: [case_i64]
            bugid: ['7360']
            ignore: true
          - values: [u64]
            exclude: [case_i64]
            bugid: ['7360']
            ignore: true
          - values: [f32]
            bugid: ['7360']
          - values: [f64]
            exclude: [case_f64]
            bugid: ['7360']
            ignore: true
          - values: [panda.Object]
        cases:
          - values: ['']
          - values: [ldai 0]
            bugid: ['1324', '1813']
          - values: [ldai.64 0]
            id: case_i64
          - values: [fldai 0]
          - values: [fldai.64 0]
            id: case_f64
          - values: [lda.null]
          - values: [lda.str "some string"]
          - values:
              - initobj Obj.ctor
            case-header-template: [obj-ctor]
          - values:
              - lda.type Obj
            case-header-template: [obj-ctor]

      - file-name: "regs_restore"
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: []
        check-type: none
        code-template: |
          .function %s func(%s) {
              %s
              ldai.64 0
              return.64
          }

          .function i32 main() {
              %s
              call func%s
              %s
        description: Check that after 'return.64' register are restored in caller.
        cases:
          - values:
              - 'i64'
              - ''
              - ''
              - 'movi v0, 0x12345678'
              - ''
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is not used in function."
          - values:
              - 'f64'
              - ''
              - ''
              - 'movi v0, 0x12345678'
              - ''
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is not used in function."
          - values:
              - 'i64'
              - 'i32 a0'
              - 'movi v0, 0x87654321'
              - 'movi v0, 0x12345678'
              - ', v0'
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is used in function."
          - values:
              - 'f64'
              - 'i32 a0'
              - 'movi v0, 0x87654321'
              - 'movi v0, 0x12345678'
              - ', v0'
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is used in function."

          - values:
              - 'i64'
              - 'i32 a0'
              - ''
              - 'movi v0, 0x12345678'
              - ', v0'
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is not used in function."
          - values:
              - 'f64'
              - 'i32 a0'
              - ''
              - 'movi v0, 0x12345678'
              - ', v0'
              - |
                #
                    ldai 0x12345678
                    jne v0, exit_failure
                    ldai 0
                    return
                exit_failure: ldai 1
                    return
            description: "Register is not used in function."

          - values:
              - 'i64'
              - 'f64 a0, i64 a1'
              - |
                #
                    fmovi.64 v0, 0
                    movi.64 v1, 0
              - |
                #
                    fmovi.64 v0, 3.1415926535
                    movi.64 v1, 0x123456789ABCDEF0
              - ', v0, v1'
              - |
                #
                    fldai.64 3.1415926535
                    fcmpg.64 v0
                    jeqz check2
                    ldai 1
                    return
                check2:
                    ldai.64 0x123456789ABCDEF0
                    cmp.64 v1
                    jnez exit_failure
                    ldai 0
                    return
                exit_failure:
                    ldai 1
                    return
            description: "Registers are used in function."
          - values:
              - 'f64'
              - 'f64 a0, i64 a1'
              - |
                #
                    fmovi.64 v0, 0
                    movi.64 v1, 0
              - |
                #
                    fmovi.64 v0, 3.1415926535
                    movi.64 v1, 0x123456789ABCDEF0
              - ', v0, v1'
              - |
                #
                    fldai.64 3.1415926535
                    fcmpg.64 v0
                    jeqz check2
                    ldai 1
                    return
                check2:
                    ldai.64 0x123456789ABCDEF0
                    cmp.64 v1
                    jnez exit_failure
                    ldai 0
                    return
                exit_failure:
                    ldai 1
                    return
            description: "Registers are used in function."

          - values:
              - 'i64'
              - 'f64 a0, i64 a1, i32 a2, f64 a3'
              - |
                #
                    fmovi.64 v0, 0
                    movi.64 v1, 0
                    movi v2, 0
                    fmovi.64 v3, 0
              - |
                #
                    fmovi.64 v0, 3.1415926535
                    movi.64 v1, 0x123456789ABCDEF0
                    movi v2, 123456789
                    fmovi.64 v3, 0x8000000000000001
              - ', v0, v1, v2, v3'
              - |
                #
                    fldai.64 3.1415926535
                    fcmpg.64 v0
                    jeqz check1
                    ldai 1
                    return
                check1:
                    ldai.64 0x123456789ABCDEF0
                    cmp.64 v1
                    jeqz check2
                    ldai 1
                    return
                check2:
                    ldai 123456789
                    jeq v2, check3
                    ldai 1
                    return
                check3:
                    fldai.64 0x8000000000000001
                    fcmpg.64 v3
                    jnez exit_failure
                    ldai 0
                    return
                exit_failure:
                    ldai 1
                    return
            description: "Registers are used in function."
          - values:
              - 'f64'
              - 'f64 a0, i64 a1, i32 a2, f64 a3'
              - |
                #
                    fmovi.64 v0, 0
                    movi.64 v1, 0
                    movi v2, 0
                    fmovi.64 v3, 0
              - |
                #
                    fmovi.64 v0, 3.1415926535
                    movi.64 v1, 0x123456789ABCDEF0
                    movi v2, 123456789
                    fmovi.64 v3, 0x8000000000000001
              - ', v0, v1, v2, v3'
              - |
                #
                    fldai.64 3.1415926535
                    fcmpg.64 v0
                    jeqz check1
                    ldai 1
                    return
                check1:
                    ldai.64 0x123456789ABCDEF0
                    cmp.64 v1
                    jeqz check2
                    ldai 1
                    return
                check2:
                    ldai 123456789
                    jeq v2, check3
                    ldai 1
                    return
                check3:
                    fldai.64 0x8000000000000001
                    fcmpg.64 v3
                    jnez exit_failure
                    ldai 0
                    return
                exit_failure:
                    ldai 1
                    return
            description: "Registers are used in function."


      - file-name: "uninitialized_acc_p_s"
        tags: [verifier]
        runner-options: [verifier-failure, verifier-config]
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: []
        code-template: |
          .function i64 func() {
              return.64
          }

          .function i32 main() {
              call.short func
        check-type: exit-positive
        description: Check that verifier reports an error if accumulator is not initialized in Pandasm context with static call.

      - file-name: "uninitialized_acc_j_s"
        tags: [verifier]
        runner-options: [verifier-failure, verifier-config, use-pa]
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: [PandaAssembly]
        code-template: |
          .function i64 func() {
              return.64
          }

          .function i32 main() {
              call.short func
        check-type: exit-positive
        description: Check that verifier reports an error if accumulator is not initialized in PandaAssembly context with static call.

      - file-name: "uninitialized_acc_p_v"
        tags: [verifier]
        runner-options: [verifier-failure, verifier-config]
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: [obj-ctor]
        code-template: |
          .function i64 Obj.func(Obj a0) {
              return.64
          }

          .function i32 main() {
              newobj v10, Obj
              call.virt.short Obj.func, v10
        check-type: exit-positive
        description: Check that verifier reports an error if accumulator is not initialized in Pandasm context with virtual call.

      - file-name: "uninitialized_acc_j_v"
        tags: [verifier]
        runner-options: [verifier-failure, verifier-config, use-pa]
        isa:
          instructions:
            - sig: return.64
              acc: in:b64
              format: [op_none]
        header-template: [PandaAssembly, obj-ctor]
        code-template: |
          .function i64 Obj.func(Obj a0) {
              return.64
          }

          .function i32 main() {
              newobj v10, Obj
              call.virt.short Obj.func, v10
        check-type: exit-positive
        description: Check that verifier reports an error if accumulator is not initialized in PandaAssembly context with virtual call.
