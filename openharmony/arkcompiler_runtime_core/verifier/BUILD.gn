# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/runtime_core/ark_config.gni")

arkverifier_sources = [
  "main.cpp",
  "verifier.cpp",
  "verify.cpp",
]

config("arkverifier_public_config") {
  include_dirs = [ "$ark_root/verifier" ]
}

arkverifier_configs = [
  "$ark_root:ark_config",
  "$ark_root/libpandafile:arkfile_public_config",
  ":arkverifier_public_config",
]

ohos_executable("ark_verifier") {
  sources = arkverifier_sources

  deps = [ "$ark_root/libpandafile:libarkfile_static_verifier" ]
  external_deps = [
    "zlib:libz",
    sdk_libc_secshared_dep,
  ]

  if (enable_hilog) {
    external_deps += [ "hilog:libhilog" ]
  }

  configs = arkverifier_configs

  public_configs = [ ":arkverifier_public_config" ]

  install_enable = true
  part_name = "runtime_core"
  subsystem_name = "arkcompiler"
}

libarkverifier_sources = [
  "verifier.cpp",
  "verify.cpp",
]

ohos_shared_library("libarkverifier") {
  if (!ark_standalone_build) {
    branch_protector_ret = "pac_ret"
  }
  sources = libarkverifier_sources

  deps = [ "$ark_root/libpandafile:libarkfile_static_verifier" ]
  external_deps = [
    "zlib:libz",
    sdk_libc_secshared_dep,
  ]
  if (enable_hilog) {
    external_deps += [ "hilog:libhilog" ]
  }

  configs = arkverifier_configs

  public_configs = [ ":arkverifier_public_config" ]

  if (!is_standard_system) {
    relative_install_dir = "ark"
  }

  output_extension = "so"

  install_enable = true
  part_name = "runtime_core"
  subsystem_name = "arkcompiler"
}
