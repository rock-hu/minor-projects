# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/toolchain/toolchain.gni")
import("$build_root/config/components/ets_frontend/ets_frontend_config.gni")

print("root_out_dir=$root_out_dir")
print("root_build_dir=$root_build_dir")
print("root_gen_dir=$root_gen_dir")
print("default_toolchain=$default_toolchain")
print("current_toolchain=$current_toolchain")
print("host_toolchain=$host_toolchain")
print("current_os=$current_os,   current_cpu=$current_cpu")
print("host_os=$host_os,      host_cpu=$host_cpu")
print("target_os=$target_os,    target_cpu=$target_cpu")

print()

group("default") {
  deps = [
    ":ets_frontend",
    ":ets_runtime",
    ":runtime_core",
    ":toolchain",
  ]
}

group("unittest_packages") {
  testonly = true
  deps = [
    "$js_root:ark_runtime_host_unittest",
    "$toolchain_root:ark_toolchain_host_unittest",
  ]
}

group("runtime_core_unittest_packages") {
  testonly = true
  deps = [ "$toolchain_root:runtime_core_host_ut" ]
}

group("ets_runtime") {
  deps = [
    "$js_root:js_type_metadata",
    "$js_root:libark_jsruntime",
    "$js_root/ecmascript/dfx/hprof:ark_js_heap_snapshot_tool",
    "$js_root/ecmascript/dfx/hprof/rawheap_translate:rawheap_translator",
    "$js_root/ecmascript/js_vm:ark_js_vm",
    "$js_root/ecmascript/quick_fix:quick_fix",
  ]
  if ((target_os == "linux" && target_cpu == "x64") ||
      (target_cpu == "arm64" && target_os == "ohos") ||
      (target_cpu == "arm64" && target_os == "mac")) {
    deps += [
      "$js_root/ecmascript/compiler:ark_aot_compiler",
      "$js_root/ecmascript/compiler:ark_stub_compiler",
      "$js_root/ecmascript/compiler:libark_jsoptimizer",
      "$js_root/ecmascript/compiler:stub.an",
      "$js_root/ecmascript/pgo_profiler/prof_dump:profdump",
    ]
  }
}

group("ets_frontend") {
  if ((target_os == "linux" && target_cpu == "x64") || target_os == "mingw" ||
      target_os == "mac") {
    deps = [
      "$ets_frontend_root/es2panda:es2panda",
      "$ets_frontend_root/merge_abc:merge_abc",
    ]
  }
}

group("runtime_core") {
  deps = [
    "$ark_root:ark_host_defectscanaux_tools",
    "$ark_root/disassembler:ark_disasm",
  ]
}

group("static_core") {
  deps = [
    "$ark_root/static_core/assembler:libarktsassembler",
    "$ark_root/static_core/compiler:libarktscompiler",
    "$ark_root/static_core/libpandabase:libarktsbase",
    "$ark_root/static_core/libpandafile:libarktsfile",
  ]
}

group("toolchain") {
  deps = []
  if (target_cpu != "mipsel") {
    deps += [
      "$toolchain_root/inspector:ark_debugger",
      "$toolchain_root/inspector:connectserver_debugger",
      "$toolchain_root/tooling:libark_ecma_debugger",
    ]
  }
  if (target_os != "mingw") {
    deps += [
      "$toolchain_root/tooling/client:libark_client",
      "$toolchain_root/tooling/client/ark_cli:arkdb",
      "$toolchain_root/tooling/client/ark_multi:ark_multi",
    ]
  }
}
