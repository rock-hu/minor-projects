# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/toolchain/toolchain.gni")

ohos_source_set("ark_debugger_static") {
  stack_protector_ret = true
  defines = []

  if (is_mingw || is_mac) {
    cflags = [ "-std=c++17" ]
  }

  include_dirs = [
    "$toolchain_root",
    "$toolchain_root/websocket",
  ]

  if (target_os == "android" && !ark_standalone_build) {
    libs = [ "log" ]
  }

  deps = [ "../websocket:libwebsocket_server" ]
  sources = [
    "../common/log_wrapper.cpp",
    "inspector.cpp",
    "init_static.cpp",
    "library_loader.cpp",
    "ws_server.cpp",
  ]

  # hiviewdfx libraries
  external_deps = hiviewdfx_ext_deps
  external_deps += [ "bounds_checking_function:libsec_shared" ]
  deps += hiviewdfx_deps

  if (is_ohos && is_standard_system && !is_arkui_x) {
    defines += [ "ENABLE_FFRT_INTERFACES" ]
    external_deps += [ "ffrt:libffrt" ]
  }

  configs = [ "..:ark_toolchain_common_config" ]
  subsystem_name = "arkcompiler"
  part_name = "toolchain"
}

ohos_shared_library("ark_debugger") {
  stack_protector_ret = true
  deps = [ ":ark_debugger_static" ]

  if (is_mingw) {
    ldflags = [
      "-lwsock32",
      "-lws2_32",
    ]
  }
  if (enable_hilog) {
    external_deps = [ "hilog:libhilog" ]
  }
  subsystem_name = "arkcompiler"
  part_name = "toolchain"
  output_name = "ark_inspector"
}

ohos_source_set("connectserver_debugger_static") {
  stack_protector_ret = true
  defines = []

  if (is_mingw || is_mac) {
    if (is_mingw) {
      lib_dirs = [ "//prebuilts/mingw-w64/ohos/linux-x86_64/clang-mingw/x86_64-w64-mingw32/lib" ]
      libs = [ "wsock32" ]
    }

    cflags = [ "-std=c++17" ]
  }

  include_dirs = [
    "$toolchain_root",
    "$toolchain_root/websocket",
  ]

  external_deps = []
  if (is_arkui_x && target_os == "ios") {
    external_deps += [ "cJSON:cjson_static" ]
  } else {
    external_deps += [ "cJSON:cjson" ]
  }

  deps = [ "../websocket:libwebsocket_server" ]
  sources = [
    "../common/log_wrapper.cpp",
    "../tooling/dynamic/base/pt_json.cpp",
    "connect_inspector.cpp",
    "connect_server.cpp",
  ]

  if (target_os == "ios") {
    sources -= [ "../common/log_wrapper.cpp" ]
  }

  # hiviewdfx libraries
  external_deps += hiviewdfx_ext_deps
  external_deps += [ "bounds_checking_function:libsec_shared" ]
  deps += hiviewdfx_deps
  configs = [ "..:ark_toolchain_common_config" ]
  subsystem_name = "arkcompiler"
  part_name = "toolchain"
}

ohos_shared_library("connectserver_debugger") {
  deps = [ ":connectserver_debugger_static" ]
  if (enable_hilog) {
    external_deps = [ "hilog:libhilog" ]
  }
  subsystem_name = "arkcompiler"
  part_name = "toolchain"
  output_name = "ark_connect_inspector"
}
