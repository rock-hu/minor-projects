# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//arkcompiler/toolchain/toolchain.gni")

ohos_source_set("libark_client_set") {
  stack_protector_ret = true
  defines = []
  deps = []

  # hiviewdfx libraries
  external_deps = hiviewdfx_ext_deps
  deps += hiviewdfx_deps

  include_dirs = [
    "..",
    "$toolchain_root/websocket",
  ]

  sources = [
    "../utils/utils.cpp",
    "domain/debugger_client.cpp",
    "domain/heapprofiler_client.cpp",
    "domain/profiler_client.cpp",
    "domain/runtime_client.cpp",
    "domain/test_client.cpp",
    "manager/breakpoint_manager.cpp",
    "manager/domain_manager.cpp",
    "manager/source_manager.cpp",
    "manager/stack_manager.cpp",
    "manager/variable_manager.cpp",
    "manager/watch_manager.cpp",
    "session/session.cpp",
    "tcpServer/tcp_server.cpp",
    "utils/cli_command.cpp",
  ]

  deps += [
    "$toolchain_root/websocket:websocket_client",
    "..:libark_ecma_debugger",
  ]

  external_deps += [
    "bounds_checking_function:libsec_shared",
    "cJSON:cjson_static",
    "ets_runtime:libark_jsruntime",
    "libuv:uv",
  ]

  configs = [ "../..:ark_toolchain_common_config" ]

  cflags_cc = [ "-Wno-vla-extension" ]

  subsystem_name = "arkcompiler"
  part_name = "toolchain"
}

ohos_shared_library("libark_client") {
  stack_protector_ret = true
  deps = [ ":libark_client_set" ]

  install_enable = false
  if (!is_mingw && !is_mac) {
    output_extension = "so"
  }
  external_deps = []
  external_deps += [
    "bounds_checking_function:libsec_shared",
    "cJSON:cjson_static",
  ]
  if (enable_hilog) {
    external_deps += [ "hilog:libhilog" ]
  }

  subsystem_name = "test"
}
