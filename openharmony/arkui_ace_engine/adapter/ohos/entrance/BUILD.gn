# Copyright (c) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

# build static
template("ace_ohos_standard_source_set") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    defines += invoker.defines
    cflags_cc += invoker.cflags_cc

    sources = [
      "$ace_root/adapter/ohos/entrance/ace_ability.cpp",
      "$ace_root/adapter/ohos/entrance/ace_application_info.cpp",
      "$ace_root/adapter/ohos/entrance/ace_container.cpp",
      "$ace_root/adapter/ohos/entrance/ace_data_ability.cpp",
      "$ace_root/adapter/ohos/entrance/ace_extra_input_data.cpp",
      "$ace_root/adapter/ohos/entrance/ace_form_ability.cpp",
      "$ace_root/adapter/ohos/entrance/ace_new_pipe_judgement.cpp",
      "$ace_root/adapter/ohos/entrance/ace_service_ability.cpp",
      "$ace_root/adapter/ohos/entrance/ace_translate_manager.cpp",
      "$ace_root/adapter/ohos/entrance/ace_view_ohos.cpp",
      "$ace_root/adapter/ohos/entrance/aps_monitor_impl.cpp",
      "$ace_root/adapter/ohos/entrance/capability_registry.cpp",
      "$ace_root/adapter/ohos/entrance/data_ability_helper_standard.cpp",
      "$ace_root/adapter/ohos/entrance/dialog_container.cpp",
      "$ace_root/adapter/ohos/entrance/event_pass_through_subscriber.cpp",
      "$ace_root/adapter/ohos/entrance/file_asset_provider_impl.cpp",
      "$ace_root/adapter/ohos/entrance/form_utils_impl.cpp",
      "$ace_root/adapter/ohos/entrance/global_pipeline_context_manager.cpp",
      "$ace_root/adapter/ohos/entrance/hap_asset_provider_impl.cpp",
      "$ace_root/adapter/ohos/entrance/high_contrast_observer.cpp",
      "$ace_root/adapter/ohos/entrance/mmi_event_convertor.cpp",
      "$ace_root/adapter/ohos/entrance/navigation_controller_helper.cpp",
      "$ace_root/adapter/ohos/entrance/pa_container.cpp",
      "$ace_root/adapter/ohos/entrance/plugin_utils_impl.cpp",
      "$ace_root/adapter/ohos/entrance/reporter_impl.cpp",
      "$ace_root/adapter/ohos/entrance/rs_adapter.cpp",
      "$ace_root/adapter/ohos/entrance/subwindow/subwindow_ohos.cpp",
      "$ace_root/adapter/ohos/entrance/touch_event_convertor.cpp",
      "$ace_root/adapter/ohos/entrance/window/foldable_window_ohos.cpp",
      "$ace_root/adapter/ohos/entrance/window_free_container.cpp",

      # innerkits impl
      "$ace_root/adapter/ohos/entrance/ui_content_impl.cpp",
      "$ace_root/adapter/ohos/entrance/ui_event_impl.cpp",
      "$ace_root/adapter/ohos/entrance/utils.cpp",

      # drag window
      "$ace_root/adapter/ohos/entrance/window/drag_window_ohos.cpp",

      # ArkTs Card
      "$ace_root/adapter/ohos/entrance/form_module_preloader.cpp",

      # Dynamic Component
      "$ace_root/adapter/ohos/entrance/dynamic_component/dynamic_component_renderer_impl.cpp",
      "$ace_root/adapter/ohos/entrance/dynamic_component/uv_task_wrapper_impl.cpp",

      #Miscdevice Vibrator
      "$ace_root/adapter/ohos/entrance/vibrator/vibrator_utils.cpp",

      # CJUtils
      "$ace_root/adapter/ohos/entrance/cj_utils/cj_utils.cpp",

      # AudioHaptic
      "$ace_root/adapter/ohos/entrance/picker/picker_haptic_factory.cpp",
    ]

    if (enable_audio_framework && enable_player_framework) {
      sources += [
        "$ace_root/adapter/ohos/entrance/picker/picker_haptic_controller.cpp",
        "$ace_root/adapter/ohos/entrance/picker/picker_haptic_impl.cpp",
      ]
    }

    if (target_cpu == "arm64") {
      defines += [ "_ARM64_" ]
    }
    if (current_os == "ohos" && current_cpu == "x86_64") {
      defines += [ "SIMULATOR_64" ]
    }

    configs = [ "$ace_root:ace_config" ]

    include_dirs = [
      "$ace_root/interfaces/inner_api/ui_session",
      "$ace_root",
    ]

    deps = [
      "$ace_root/adapter/ohos/capability:ace_capability_ohos",
      "$ace_root/interfaces/inner_api/ace:ace_uicontent",
      "$ace_root/interfaces/inner_api/ui_session:ui_session",
    ]

    external_deps = [
      "ability_base:base",
      "ability_base:configuration",
      "ability_base:extractortool",
      "ability_base:view_data",
      "ability_base:want",
      "ability_runtime:ability_connect_callback_stub",
      "ability_runtime:ability_context_native",
      "ability_runtime:ability_manager",
      "ability_runtime:abilitykit_native",
      "ability_runtime:app_context",
      "ability_runtime:auto_fill_manager",
      "ability_runtime:data_ability_helper",
      "ability_runtime:napi_common",
      "ability_runtime:ui_extension",
      "bundle_framework:appexecfwk_core",
      "common_event_service:cesfwk_innerkits",
      "data_share:datashare_consumer",
      "ets_runtime:libark_jsruntime",
      "eventhandler:libeventhandler",
      "graphic_2d:2d_graphics",
      "graphic_2d:librender_service_client",
      "graphic_2d:rosen_text",
      "i18n:intl_util",
      "input:libmmi-client",
      "ipc:ipc_core",
      "ipc:ipc_napi",
      "miscdevice:vibrator_interface_native",
      "napi:ace_napi",
      "preferences:native_preferences",
      "relational_store:native_dataability",
      "relational_store:native_rdb",
      "resource_management:global_resmgr",
      "safwk:system_ability_fwk",
      "samgr:samgr_proxy",
      "window_manager:libdm",
      "window_manager:libwm",
      "window_manager:libwsutils",
      "window_manager:scene_session",
      "window_manager:screen_session_manager_client",
      "zlib:shared_libz",
    ]
    defines += [ "INDEXER_SUPPORT_VIBRATOR" ]
    if (defined(config.enable_rosen_backend) && config.enable_rosen_backend) {
      external_deps += [ "graphic_2d:librender_service_base" ]
    }

    if (defined(global_parts_info) &&
        defined(global_parts_info.resourceschedule_resource_schedule_service)) {
      external_deps += [ "resource_schedule_service:ressched_client" ]
      defines += [ "RESOURCE_SCHEDULE_SERVICE_ENABLE" ]
    }

    if (form_fwk_enable) {
      external_deps += [
        "form_fwk:fmskit_native",
        "form_fwk:fmskit_provider_client",
        "form_fwk:form_manager",
      ]
    }

    if (defined(config.media_library_exists) && config.media_library_exists) {
      external_deps += [ "media_library:media_library_manager" ]
    }

    if (enable_audio_framework) {
      external_deps += [ "audio_framework:audio_client" ]
    }

    if (enable_player_framework) {
      external_deps += [ "player_framework:audio_haptic" ]
    }

    if (os_account_exists) {
      external_deps += [ "os_account:os_account_innerkits" ]
    }

    if (defined(config.accessibility_support) && config.accessibility_support) {
      external_deps += [ "accessibility:accessibilityconfig" ]
    }

    deps +=
        [ "$ace_root/interfaces/inner_api/ui_service_manager:ui_service_mgr" ]
  }
}

foreach(item, ace_platforms) {
  platform = item.name
  if (platform == "ohos" || platform == "ohos_ng") {
    ace_ohos_standard_source_set("ace_ohos_standard_entrance_${platform}") {
      defines = []
      cflags_cc = []
      config = {
      }

      if (defined(item.config)) {
        config = item.config
      }

      if (defined(config.defines)) {
        defines = config.defines
      }

      if (defined(config.cflags_cc)) {
        cflags_cc = config.cflags_cc
      }
    }
  }
}
