# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")

# build framework bridge
template("framework_bridge") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    if (current_os == "ohos") {
      sanitize = {
        integer_overflow = true
        boundary_sanitize = true
        debug = ace_sanitize_debug
      }
    }
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    configs = [ "$ace_root:ace_config" ]

    deps = [
      "declarative_frontend:declarative_frontend_$platform",

      # bridge source
      "card_frontend:card_frontend_$platform",
      "codec:data_codec",
      "common:bridge_common_$platform",
      "common/accessibility:bridge_accessibility_$platform",
      "js_frontend:js_frontend_$platform",
      "plugin_frontend:plugin_frontend_$platform",
    ]

    if (defined(config.js_pa_support) && config.js_pa_support) {
      deps += [ "$ace_root/${config.pa_engine_path}:pa_backend_$platform" ]
    }
    if (use_hilog) {
      external_deps = [ "hilog:libhilog" ]
    }
  }
}

# build ng framework bridge
template("framework_bridge_ng") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    if (current_os == "ohos") {
      sanitize = {
        integer_overflow = true
        boundary_sanitize = true
        debug = ace_sanitize_debug
      }
    }
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    configs = [ "$ace_root:ace_config" ]

    deps = [
      "codec:data_codec",
      "common:bridge_common_ng_$platform",
      "common/accessibility:bridge_accessibility_$platform",
      "declarative_frontend:declarative_frontend_$platform",
    ]

    if (defined(config.js_pa_support) && config.js_pa_support) {
      deps += [ "$ace_root/${config.pa_engine_path}:pa_backend_$platform" ]
    }
    if (use_hilog) {
      external_deps = [ "hilog:libhilog" ]
    }
  }
}

foreach(item, ace_platforms) {
  framework_bridge("framework_bridge_" + item.name) {
    platform = item.name
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }
  }

  framework_bridge_ng("framework_bridge_ng_" + item.name) {
    platform = item.name
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }
  }
}
