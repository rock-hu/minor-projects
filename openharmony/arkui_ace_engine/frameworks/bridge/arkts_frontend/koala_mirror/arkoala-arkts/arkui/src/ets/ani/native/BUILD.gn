# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/ets2abc_config.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/adapter/ohos/build/common.gni")

group("ace_ani_native_package") {
  deps = [
    "ui_extension:arkuiuiextension_group",
    "custom:arkuicustomnode_group",
    ]
}

ohos_shared_library("arkoala_native_ani") {
  subsystem_name = ace_engine_subsystem
  part_name = ace_engine_part

  include_dirs = [ "./" ]

  sources = [
    "animation/animation_ani_impl.cpp",
    "common/common_module.cpp",
    "componentSnapshot/componentSnapshot_module.cpp",
    "content_slot/content_slot_module.cpp",
    "custom_node/custom_node_module.cpp",
    "dragController/drag_controller_module.cpp",
    "drag_and_drop/native_drag_drop_global.cpp",
    "image/image_module.cpp",
    "image_span/image_span_module.cpp",
    "interop/interop_module.cpp",
    "load.cpp",
    "module.cpp",
    "shape/shape_module_methods.cpp",
    "utils/ani_utils.cpp",
    "utils/convert_utils.cpp",
    "video/video_module_methods.cpp",
    "stateMgmt/stateMgmt_module.cpp",
    "water_flow/waterFlowSection_module.cpp",
    "list/list_children_main_size_module.cpp",
    "web/web_module_methods.cpp",
    "xcomponent/xcomponent_module_methods.cpp",
    "condition_scope/condition_scope.cpp",
  ]

  external_deps = [
    "hilog:libhilog",
    "image_framework:image",
    "image_framework:image_taihe",
    "runtime_core:ani",
    "runtime_core:ani_helpers",
    "udmf:libudmf",
    "udmf:udmf_client",
    "udmf:udmf_taihe_native",
  ]

  configs = [ "$ace_root:ace_config" ]
  defines = []
  if (pixel_map_support) {
    defines += [ "PIXEL_MAP_SUPPORTED" ]
  }
  if (enable_rosen_backend) {
    defines += [ "ENABLE_ROSEN_BACKEND" ]
  }
  output_extension = "so"
}
