
/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_ARKOALA_API_H
#define GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_ARKOALA_API_H

/**
 * THIS FILE IS GENERATED, DO NOT MAKE CHANGES, THEY WILL BE LOST ON NEXT GENERATION!
 */

/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

#ifndef _INTEROP_TYPES_H_
#define _INTEROP_TYPES_H_

#ifdef __cplusplus
  #include <cstdint>
#else
  #include <stdint.h>
#endif

#ifdef __cplusplus
extern "C" [[noreturn]]
#endif
void InteropLogFatal(const char* format, ...);
#define INTEROP_FATAL(msg, ...) do { InteropLogFatal(msg, ##__VA_ARGS__); } while (0)

typedef enum InteropTag
{
  INTEROP_TAG_UNDEFINED = 101,
  INTEROP_TAG_INT32 = 102,
  INTEROP_TAG_FLOAT32 = 103,
  INTEROP_TAG_STRING = 104,
  INTEROP_TAG_LENGTH = 105,
  INTEROP_TAG_RESOURCE = 106,
  INTEROP_TAG_OBJECT = 107,
} InteropTag;

typedef enum InteropRuntimeType
{
  INTEROP_RUNTIME_UNEXPECTED = -1,
  INTEROP_RUNTIME_NUMBER = 1,
  INTEROP_RUNTIME_STRING = 2,
  INTEROP_RUNTIME_OBJECT = 3,
  INTEROP_RUNTIME_BOOLEAN = 4,
  INTEROP_RUNTIME_UNDEFINED = 5,
  INTEROP_RUNTIME_BIGINT = 6,
  INTEROP_RUNTIME_FUNCTION = 7,
  INTEROP_RUNTIME_SYMBOL = 8,
  INTEROP_RUNTIME_MATERIALIZED = 9,
} InteropRuntimeType;

typedef float InteropFloat32;
typedef double InteropFloat64;
typedef int32_t InteropInt32;
typedef unsigned int InteropUInt32; // TODO: update unsigned int
typedef int64_t InteropInt64;
typedef uint64_t InteropUInt64;
typedef int8_t InteropInt8;
typedef uint8_t InteropUInt8;
typedef int64_t InteropDate;
typedef int8_t InteropBoolean;
typedef const char* InteropCharPtr;
typedef void* InteropNativePointer;

struct _InteropVMContext;
typedef struct _InteropVMContext* InteropVMContext;
struct _InteropPipelineContext;
typedef struct _InteropPipelineContext* InteropPipelineContext;
struct _InteropVMObject;
typedef struct _InteropVMObject* InteropVMObject;
struct _InteropNode;
typedef struct _InteropNode* InteropNodeHandle;
typedef struct InteropDeferred {
    void* handler;
    void* context;
    void (*resolve)(struct InteropDeferred* thiz, uint8_t* data, int32_t length);
    void (*reject)(struct InteropDeferred* thiz, const char* message);
} InteropDeferred;

// Binary layout of InteropString must match that of KStringPtrImpl.
typedef struct InteropString {
  const char* chars;
  InteropInt32 length;
} InteropString;

typedef struct InteropEmpty {
  InteropInt32 dummy; // Empty structs are forbidden in C.
} InteropEmpty;

typedef struct InteropNumber {
  InteropInt8 tag;
  union {
    InteropFloat32 f32;
    InteropInt32 i32;
  };
} InteropNumber;

// Binary layout of InteropLength must match that of KLength.
typedef struct InteropLength
{
  InteropInt8 type;
  InteropFloat32 value;
  InteropInt32 unit;
  InteropInt32 resource;
} InteropLength;

typedef struct InteropCustomObject {
  char kind[20];
  InteropInt32 id;
  // Data of custom object.
  union {
    InteropInt32 ints[4];
    InteropFloat32 floats[4];
    void* pointers[4];
    InteropString string;
  };
} InteropCustomObject;

typedef struct InteropUndefined {
  InteropInt32 dummy; // Empty structs are forbidden in C.
} InteropUndefined;

typedef struct InteropVoid {
  InteropInt32 dummy; // Empty structs are forbidden in C.
} InteropVoid;

typedef struct InteropFunction {
  InteropInt32 id;
} InteropFunction;
typedef InteropFunction InteropCallback;
typedef InteropFunction InteropErrorCallback;

typedef struct InteropMaterialized {
  InteropNativePointer ptr;
} InteropMaterialized;

typedef struct InteropCallbackResource {
  InteropInt32 resourceId;
  void (*hold)(InteropInt32 resourceId);
  void (*release)(InteropInt32 resourceId);
} InteropCallbackResource;

typedef struct InteropBuffer {
  InteropCallbackResource resource;
  InteropNativePointer data;
  InteropInt64 length;
} InteropBuffer;

typedef struct InteropAsyncWork {
  InteropNativePointer workId;
  void (*queue)(InteropNativePointer workId);
  void (*cancel)(InteropNativePointer workId);
} InteropAsyncWork;

typedef struct InteropAsyncWorker {
  InteropAsyncWork (*createWork)(
    InteropVMContext context,
    InteropNativePointer handle,
    void (*execute)(InteropNativePointer handle),
    void (*complete)(InteropNativePointer handle)
  );
} InteropAsyncWorker;
typedef const InteropAsyncWorker* InteropAsyncWorkerPtr;

typedef struct InteropObject {
  InteropCallbackResource resource;
} InteropObject;

#endif // _INTEROP_TYPES_H_


// The only include allowed in this file! Do not add anything else ever.
#include <stdint.h>

#define GENERATED_ARKUI_FULL_API_VERSION 132
#define GENERATED_ARKUI_NODE_API_VERSION GENERATED_ARKUI_FULL_API_VERSION

#define GENERATED_ARKUI_BASIC_NODE_API_VERSION 1
#define GENERATED_ARKUI_EXTENDED_NODE_API_VERSION 8
#define GENERATED_ARKUI_NODE_GRAPHICS_API_VERSION 5
#define GENERATED_ARKUI_NODE_MODIFIERS_API_VERSION 6

#define GENERATED_ARKUI_AUTO_GENERATE_NODE_ID (-2)

/* clang-format off */

#ifdef __cplusplus
extern "C" {
#endif

typedef InteropTag Ark_Tag;
typedef InteropRuntimeType Ark_RuntimeType;

typedef InteropFloat32 Ark_Float32;
typedef InteropFloat64 Ark_Float64;
typedef InteropInt32 Ark_Int32;
typedef InteropUInt32 Ark_UInt32;
typedef InteropInt64 Ark_Int64;
typedef InteropInt8 Ark_Int8;
typedef InteropBoolean Ark_Boolean;
typedef InteropCharPtr Ark_CharPtr;
typedef InteropNativePointer Ark_NativePointer;
typedef InteropString Ark_String;
typedef InteropCallbackResource Ark_CallbackResource;
typedef InteropNumber Ark_Number;
typedef InteropMaterialized Ark_Materialized;
typedef InteropCustomObject Ark_CustomObject;
typedef InteropUndefined Ark_Undefined;
typedef InteropVMContext Ark_VMContext;
typedef InteropBuffer Ark_Buffer;
typedef InteropNodeHandle Ark_NodeHandle;
typedef InteropPipelineContext Ark_PipelineContext;
typedef InteropCustomObject Ark_CustomObject;
typedef InteropDate Ark_Date;
typedef InteropFunction Ark_Function;
typedef InteropAsyncWork Ark_AsyncWork;
typedef InteropAsyncWorker Ark_AsyncWorker;
typedef InteropAsyncWorkerPtr Ark_AsyncWorkerPtr;
typedef InteropObject Ark_Object;

// Improve: generate!
typedef struct Opt_Ark_Callback {
  Ark_Tag tag;
  Ark_CustomObject value;
} Opt_Ark_Callback;

enum GENERATED_Ark_APIVariantKind {
    GENERATED_BASIC = 10,
    GENERATED_FULL = 11,
    GENERATED_GRAPHICS = 12,
    GENERATED_EXTENDED = 13,
    GENERATED_COUNT = GENERATED_EXTENDED + 1
};

enum Ark_APINodeFlags {
    GENERATED_CUSTOM_NONE = 0,
    GENERATED_CUSTOM_MEASURE = 1 << 0,
    GENERATED_CUSTOM_LAYOUT = 1 << 1,
    GENERATED_CUSTOM_DRAW = 1 << 2,
    GENERATED_CUSTOM_FOREGROUND_DRAW = 1 << 3,
    GENERATED_CUSTOM_OVERLAY_DRAW = 1 << 4,
};
enum Ark_APICustomOp {
    GENERATED_MEASURE = 1,
    GENERATED_LAYOUT = 2,
    GENERATED_DRAW = 3
};

struct _Ark_Canvas;
typedef struct _Ark_Canvas* Ark_CanvasHandle;



typedef struct Opt_Int32 Opt_Int32;
typedef struct AccessibilityCallback AccessibilityCallback;
typedef struct Opt_AccessibilityCallback Opt_AccessibilityCallback;
typedef struct AccessibilityFocusCallback AccessibilityFocusCallback;
typedef struct Opt_AccessibilityFocusCallback Opt_AccessibilityFocusCallback;
typedef struct BaseContextPeer BaseContextPeer;
typedef struct BaseContextPeer* Ark_BaseContext;
typedef struct Opt_BaseContext Opt_BaseContext;
typedef struct BaseCustomComponentPeer BaseCustomComponentPeer;
typedef struct BaseCustomComponentPeer* Ark_BaseCustomComponent;
typedef struct Opt_BaseCustomComponent Opt_BaseCustomComponent;
typedef struct BaseCustomDialogPeer BaseCustomDialogPeer;
typedef struct BaseCustomDialogPeer* Ark_BaseCustomDialog;
typedef struct Opt_BaseCustomDialog Opt_BaseCustomDialog;
typedef struct BaseShapePeer BaseShapePeer;
typedef struct BaseShapePeer* Ark_BaseShape;
typedef struct Opt_BaseShape Opt_BaseShape;
typedef struct Opt_Boolean Opt_Boolean;
typedef struct Opt_Buffer Opt_Buffer;
typedef struct BuilderNodeOpsPeer BuilderNodeOpsPeer;
typedef struct BuilderNodeOpsPeer* Ark_BuilderNodeOps;
typedef struct Opt_BuilderNodeOps Opt_BuilderNodeOps;
typedef struct CalendarPickerDialogPeer CalendarPickerDialogPeer;
typedef struct CalendarPickerDialogPeer* Ark_CalendarPickerDialog;
typedef struct Opt_CalendarPickerDialog Opt_CalendarPickerDialog;
typedef struct CanvasGradientPeer CanvasGradientPeer;
typedef struct CanvasGradientPeer* Ark_CanvasGradient;
typedef struct Opt_CanvasGradient Opt_CanvasGradient;
typedef struct CanvasPathPeer CanvasPathPeer;
typedef struct CanvasPathPeer* Ark_CanvasPath;
typedef struct Opt_CanvasPath Opt_CanvasPath;
typedef struct CanvasPatternPeer CanvasPatternPeer;
typedef struct CanvasPatternPeer* Ark_CanvasPattern;
typedef struct Opt_CanvasPattern Opt_CanvasPattern;
typedef struct Ark_CircleOptions Ark_CircleOptions;
typedef struct Opt_CircleOptions Opt_CircleOptions;
typedef struct CircleShapePeer CircleShapePeer;
typedef struct CircleShapePeer* Ark_CircleShape;
typedef struct Opt_CircleShape Opt_CircleShape;
typedef struct ClientAuthenticationHandlerPeer ClientAuthenticationHandlerPeer;
typedef struct ClientAuthenticationHandlerPeer* Ark_ClientAuthenticationHandler;
typedef struct Opt_ClientAuthenticationHandler Opt_ClientAuthenticationHandler;
typedef struct ColorContentPeer ColorContentPeer;
typedef struct ColorContentPeer* Ark_ColorContent;
typedef struct Opt_ColorContent Opt_ColorContent;
typedef struct ColorFilterPeer ColorFilterPeer;
typedef struct ColorFilterPeer* Ark_ColorFilter;
typedef struct Opt_ColorFilter Opt_ColorFilter;
typedef struct ColorMetricsPeer ColorMetricsPeer;
typedef struct ColorMetricsPeer* Ark_ColorMetrics;
typedef struct Opt_ColorMetrics Opt_ColorMetrics;
typedef struct CommonShapePeer CommonShapePeer;
typedef struct CommonShapePeer* Ark_CommonShape;
typedef struct Opt_CommonShape Opt_CommonShape;
typedef struct ComponentContentPeer ComponentContentPeer;
typedef struct ComponentContentPeer* Ark_ComponentContent;
typedef struct Opt_ComponentContent Opt_ComponentContent;
typedef struct ConsoleMessagePeer ConsoleMessagePeer;
typedef struct ConsoleMessagePeer* Ark_ConsoleMessage;
typedef struct Opt_ConsoleMessage Opt_ConsoleMessage;
typedef struct ContextPeer ContextPeer;
typedef struct ContextPeer* Ark_Context;
typedef struct Opt_Context Opt_Context;
typedef struct ControllerHandlerPeer ControllerHandlerPeer;
typedef struct ControllerHandlerPeer* Ark_ControllerHandler;
typedef struct Opt_ControllerHandler Opt_ControllerHandler;
typedef struct Ark_CornerRadius Ark_CornerRadius;
typedef struct Opt_CornerRadius Opt_CornerRadius;
typedef struct curves_ICurvePeer curves_ICurvePeer;
typedef struct curves_ICurvePeer* Ark_curves_ICurve;
typedef struct Opt_curves_ICurve Opt_curves_ICurve;
typedef struct CustomComponentV2Peer CustomComponentV2Peer;
typedef struct CustomComponentV2Peer* Ark_CustomComponentV2;
typedef struct Opt_CustomComponentV2 Opt_CustomComponentV2;
typedef struct CustomDialogControllerPeer CustomDialogControllerPeer;
typedef struct CustomDialogControllerPeer* Ark_CustomDialogController;
typedef struct Opt_CustomDialogController Opt_CustomDialogController;
typedef struct Opt_CustomObject Opt_CustomObject;
typedef struct DataResubmissionHandlerPeer DataResubmissionHandlerPeer;
typedef struct DataResubmissionHandlerPeer* Ark_DataResubmissionHandler;
typedef struct Opt_DataResubmissionHandler Opt_DataResubmissionHandler;
typedef struct Opt_Date Opt_Date;
typedef struct DatePickerDialogPeer DatePickerDialogPeer;
typedef struct DatePickerDialogPeer* Ark_DatePickerDialog;
typedef struct Opt_DatePickerDialog Opt_DatePickerDialog;
typedef struct DrawableDescriptorPeer DrawableDescriptorPeer;
typedef struct DrawableDescriptorPeer* Ark_DrawableDescriptor;
typedef struct Opt_DrawableDescriptor Opt_DrawableDescriptor;
typedef struct DrawContextPeer DrawContextPeer;
typedef struct DrawContextPeer* Ark_DrawContext;
typedef struct Opt_DrawContext Opt_DrawContext;
typedef struct drawing_BrushPeer drawing_BrushPeer;
typedef struct drawing_BrushPeer* Ark_drawing_Brush;
typedef struct Opt_drawing_Brush Opt_drawing_Brush;
typedef struct drawing_CanvasPeer drawing_CanvasPeer;
typedef struct drawing_CanvasPeer* Ark_drawing_Canvas;
typedef struct Opt_drawing_Canvas Opt_drawing_Canvas;
typedef struct drawing_ColorFilterPeer drawing_ColorFilterPeer;
typedef struct drawing_ColorFilterPeer* Ark_drawing_ColorFilter;
typedef struct Opt_drawing_ColorFilter Opt_drawing_ColorFilter;
typedef struct drawing_FontPeer drawing_FontPeer;
typedef struct drawing_FontPeer* Ark_drawing_Font;
typedef struct Opt_drawing_Font Opt_drawing_Font;
typedef struct drawing_ImageFilterPeer drawing_ImageFilterPeer;
typedef struct drawing_ImageFilterPeer* Ark_drawing_ImageFilter;
typedef struct Opt_drawing_ImageFilter Opt_drawing_ImageFilter;
typedef struct drawing_LatticePeer drawing_LatticePeer;
typedef struct drawing_LatticePeer* Ark_drawing_Lattice;
typedef struct Opt_drawing_Lattice Opt_drawing_Lattice;
typedef struct drawing_MaskFilterPeer drawing_MaskFilterPeer;
typedef struct drawing_MaskFilterPeer* Ark_drawing_MaskFilter;
typedef struct Opt_drawing_MaskFilter Opt_drawing_MaskFilter;
typedef struct drawing_MatrixPeer drawing_MatrixPeer;
typedef struct drawing_MatrixPeer* Ark_drawing_Matrix;
typedef struct Opt_drawing_Matrix Opt_drawing_Matrix;
typedef struct drawing_PathPeer drawing_PathPeer;
typedef struct drawing_PathPeer* Ark_drawing_Path;
typedef struct Opt_drawing_Path Opt_drawing_Path;
typedef struct drawing_PathEffectPeer drawing_PathEffectPeer;
typedef struct drawing_PathEffectPeer* Ark_drawing_PathEffect;
typedef struct Opt_drawing_PathEffect Opt_drawing_PathEffect;
typedef struct drawing_PenPeer drawing_PenPeer;
typedef struct drawing_PenPeer* Ark_drawing_Pen;
typedef struct Opt_drawing_Pen Opt_drawing_Pen;
typedef struct drawing_RegionPeer drawing_RegionPeer;
typedef struct drawing_RegionPeer* Ark_drawing_Region;
typedef struct Opt_drawing_Region Opt_drawing_Region;
typedef struct drawing_RoundRectPeer drawing_RoundRectPeer;
typedef struct drawing_RoundRectPeer* Ark_drawing_RoundRect;
typedef struct Opt_drawing_RoundRect Opt_drawing_RoundRect;
typedef struct drawing_SamplingOptionsPeer drawing_SamplingOptionsPeer;
typedef struct drawing_SamplingOptionsPeer* Ark_drawing_SamplingOptions;
typedef struct Opt_drawing_SamplingOptions Opt_drawing_SamplingOptions;
typedef struct drawing_ShaderEffectPeer drawing_ShaderEffectPeer;
typedef struct drawing_ShaderEffectPeer* Ark_drawing_ShaderEffect;
typedef struct Opt_drawing_ShaderEffect Opt_drawing_ShaderEffect;
typedef struct drawing_ShadowLayerPeer drawing_ShadowLayerPeer;
typedef struct drawing_ShadowLayerPeer* Ark_drawing_ShadowLayer;
typedef struct Opt_drawing_ShadowLayer Opt_drawing_ShadowLayer;
typedef struct drawing_TextBlobPeer drawing_TextBlobPeer;
typedef struct drawing_TextBlobPeer* Ark_drawing_TextBlob;
typedef struct Opt_drawing_TextBlob Opt_drawing_TextBlob;
typedef struct drawing_TypefacePeer drawing_TypefacePeer;
typedef struct drawing_TypefacePeer* Ark_drawing_Typeface;
typedef struct Opt_drawing_Typeface Opt_drawing_Typeface;
typedef struct Ark_EllipseOptions Ark_EllipseOptions;
typedef struct Opt_EllipseOptions Opt_EllipseOptions;
typedef struct EllipseShapePeer EllipseShapePeer;
typedef struct EllipseShapePeer* Ark_EllipseShape;
typedef struct Opt_EllipseShape Opt_EllipseShape;
typedef struct EventResultPeer EventResultPeer;
typedef struct EventResultPeer* Ark_EventResult;
typedef struct Opt_EventResult Opt_EventResult;
typedef struct EventTargetInfoPeer EventTargetInfoPeer;
typedef struct EventTargetInfoPeer* Ark_EventTargetInfo;
typedef struct Opt_EventTargetInfo Opt_EventTargetInfo;
typedef struct ExtendableComponentPeer ExtendableComponentPeer;
typedef struct ExtendableComponentPeer* Ark_ExtendableComponent;
typedef struct Opt_ExtendableComponent Opt_ExtendableComponent;
typedef struct FileSelectorParamPeer FileSelectorParamPeer;
typedef struct FileSelectorParamPeer* Ark_FileSelectorParam;
typedef struct Opt_FileSelectorParam Opt_FileSelectorParam;
typedef struct FileSelectorResultPeer FileSelectorResultPeer;
typedef struct FileSelectorResultPeer* Ark_FileSelectorResult;
typedef struct Opt_FileSelectorResult Opt_FileSelectorResult;
typedef struct Opt_Float32 Opt_Float32;
typedef struct Opt_Float64 Opt_Float64;
typedef struct Ark_FormSize Ark_FormSize;
typedef struct Opt_FormSize Opt_FormSize;
typedef struct FrameNodePeer FrameNodePeer;
typedef struct FrameNodePeer* Ark_FrameNode;
typedef struct Opt_FrameNode Opt_FrameNode;
typedef struct FrictionMotionPeer FrictionMotionPeer;
typedef struct FrictionMotionPeer* Ark_FrictionMotion;
typedef struct Opt_FrictionMotion Opt_FrictionMotion;
typedef struct FullScreenExitHandlerPeer FullScreenExitHandlerPeer;
typedef struct FullScreenExitHandlerPeer* Ark_FullScreenExitHandler;
typedef struct Opt_FullScreenExitHandler Opt_FullScreenExitHandler;
typedef struct Ark_FullscreenInfo Ark_FullscreenInfo;
typedef struct Opt_FullscreenInfo Opt_FullscreenInfo;
typedef struct GesturePeer GesturePeer;
typedef struct GesturePeer* Ark_Gesture;
typedef struct Opt_Gesture Opt_Gesture;
typedef struct GestureGroupInterfacePeer GestureGroupInterfacePeer;
typedef struct GestureGroupInterfacePeer* Ark_GestureGroupInterface;
typedef struct Opt_GestureGroupInterface Opt_GestureGroupInterface;
typedef struct GestureModifierPeer GestureModifierPeer;
typedef struct GestureModifierPeer* Ark_GestureModifier;
typedef struct Opt_GestureModifier Opt_GestureModifier;
typedef struct GestureRecognizerPeer GestureRecognizerPeer;
typedef struct GestureRecognizerPeer* Ark_GestureRecognizer;
typedef struct Opt_GestureRecognizer Opt_GestureRecognizer;
typedef struct GestureStylePeer GestureStylePeer;
typedef struct GestureStylePeer* Ark_GestureStyle;
typedef struct Opt_GestureStyle Opt_GestureStyle;
typedef struct Ark_GestureType Ark_GestureType;
typedef struct Opt_GestureType Opt_GestureType;
typedef struct HttpAuthHandlerPeer HttpAuthHandlerPeer;
typedef struct HttpAuthHandlerPeer* Ark_HttpAuthHandler;
typedef struct Opt_HttpAuthHandler Opt_HttpAuthHandler;
typedef struct image_PixelMapPeer image_PixelMapPeer;
typedef struct image_PixelMapPeer* Ark_image_PixelMap;
typedef struct Opt_image_PixelMap Opt_image_PixelMap;
typedef struct ImageAnalyzerControllerPeer ImageAnalyzerControllerPeer;
typedef struct ImageAnalyzerControllerPeer* Ark_ImageAnalyzerController;
typedef struct Opt_ImageAnalyzerController Opt_ImageAnalyzerController;
typedef struct IndicatorComponentControllerPeer IndicatorComponentControllerPeer;
typedef struct IndicatorComponentControllerPeer* Ark_IndicatorComponentController;
typedef struct Opt_IndicatorComponentController Opt_IndicatorComponentController;
typedef struct Opt_Int64 Opt_Int64;
typedef struct JsGeolocationPeer JsGeolocationPeer;
typedef struct JsGeolocationPeer* Ark_JsGeolocation;
typedef struct Opt_JsGeolocation Opt_JsGeolocation;
typedef struct JsResultPeer JsResultPeer;
typedef struct JsResultPeer* Ark_JsResult;
typedef struct Opt_JsResult Opt_JsResult;
typedef struct LayoutCallbackPeer LayoutCallbackPeer;
typedef struct LayoutCallbackPeer* Ark_LayoutCallback;
typedef struct Opt_LayoutCallback Opt_LayoutCallback;
typedef struct LayoutManagerPeer LayoutManagerPeer;
typedef struct LayoutManagerPeer* Ark_LayoutManager;
typedef struct Opt_LayoutManager Opt_LayoutManager;
typedef struct LayoutPolicyPeer LayoutPolicyPeer;
typedef struct LayoutPolicyPeer* Ark_LayoutPolicy;
typedef struct Opt_LayoutPolicy Opt_LayoutPolicy;
typedef struct LevelOrderPeer LevelOrderPeer;
typedef struct LevelOrderPeer* Ark_LevelOrder;
typedef struct Opt_LevelOrder Opt_LevelOrder;
typedef struct LifeCyclePeer LifeCyclePeer;
typedef struct LifeCyclePeer* Ark_LifeCycle;
typedef struct Opt_LifeCycle Opt_LifeCycle;
typedef struct LinearGradientPeer LinearGradientPeer;
typedef struct LinearGradientPeer* Ark_LinearGradient;
typedef struct Opt_LinearGradient Opt_LinearGradient;
typedef struct LinearIndicatorControllerPeer LinearIndicatorControllerPeer;
typedef struct LinearIndicatorControllerPeer* Ark_LinearIndicatorController;
typedef struct Opt_LinearIndicatorController Opt_LinearIndicatorController;
typedef struct Ark_LineOptions Ark_LineOptions;
typedef struct Opt_LineOptions Opt_LineOptions;
typedef struct ListScrollerPeer ListScrollerPeer;
typedef struct ListScrollerPeer* Ark_ListScroller;
typedef struct Opt_ListScroller Opt_ListScroller;
typedef struct Ark_LoadingProgressConfiguration Ark_LoadingProgressConfiguration;
typedef struct Opt_LoadingProgressConfiguration Opt_LoadingProgressConfiguration;
typedef struct LongPressGestureInterfacePeer LongPressGestureInterfacePeer;
typedef struct LongPressGestureInterfacePeer* Ark_LongPressGestureInterface;
typedef struct Opt_LongPressGestureInterface Opt_LongPressGestureInterface;
typedef struct LongPressRecognizerPeer LongPressRecognizerPeer;
typedef struct LongPressRecognizerPeer* Ark_LongPressRecognizer;
typedef struct Opt_LongPressRecognizer Opt_LongPressRecognizer;
typedef struct matrix4_Matrix4TransitPeer matrix4_Matrix4TransitPeer;
typedef struct matrix4_Matrix4TransitPeer* Ark_matrix4_Matrix4Transit;
typedef struct Opt_matrix4_Matrix4Transit Opt_matrix4_Matrix4Transit;
typedef struct Ark_NativeMediaPlayerConfig Ark_NativeMediaPlayerConfig;
typedef struct Opt_NativeMediaPlayerConfig Opt_NativeMediaPlayerConfig;
typedef struct Opt_NativePointer Opt_NativePointer;
typedef struct NavPathStackPeer NavPathStackPeer;
typedef struct NavPathStackPeer* Ark_NavPathStack;
typedef struct Opt_NavPathStack Opt_NavPathStack;
typedef struct Ark_NestedScrollOptions Ark_NestedScrollOptions;
typedef struct Opt_NestedScrollOptions Opt_NestedScrollOptions;
typedef struct NodeContentPeer NodeContentPeer;
typedef struct NodeContentPeer* Ark_NodeContent;
typedef struct Opt_NodeContent Opt_NodeContent;
typedef struct Ark_NodeController Ark_NodeController;
typedef struct Opt_NodeController Opt_NodeController;
typedef struct Opt_Number Opt_Number;
typedef struct Opt_Object Opt_Object;
typedef struct OffscreenCanvasPeer OffscreenCanvasPeer;
typedef struct OffscreenCanvasPeer* Ark_OffscreenCanvas;
typedef struct Opt_OffscreenCanvas Opt_OffscreenCanvas;
typedef struct Ark_Offset_componentutils Ark_Offset_componentutils;
typedef struct Opt_Offset_componentutils Opt_Offset_componentutils;
typedef struct Ark_OffsetResult Ark_OffsetResult;
typedef struct Opt_OffsetResult Opt_OffsetResult;
typedef struct Ark_OnAudioStateChangedEvent Ark_OnAudioStateChangedEvent;
typedef struct Opt_OnAudioStateChangedEvent Opt_OnAudioStateChangedEvent;
typedef struct Ark_OnConsoleEvent Ark_OnConsoleEvent;
typedef struct Opt_OnConsoleEvent Opt_OnConsoleEvent;
typedef struct Ark_OnDataResubmittedEvent Ark_OnDataResubmittedEvent;
typedef struct Opt_OnDataResubmittedEvent Opt_OnDataResubmittedEvent;
typedef struct Ark_OnFaviconReceivedEvent Ark_OnFaviconReceivedEvent;
typedef struct Opt_OnFaviconReceivedEvent Opt_OnFaviconReceivedEvent;
typedef struct Ark_OnFirstContentfulPaintEvent Ark_OnFirstContentfulPaintEvent;
typedef struct Opt_OnFirstContentfulPaintEvent Opt_OnFirstContentfulPaintEvent;
typedef struct Ark_OnFoldStatusChangeInfo Ark_OnFoldStatusChangeInfo;
typedef struct Opt_OnFoldStatusChangeInfo Opt_OnFoldStatusChangeInfo;
typedef struct Ark_OnOverScrollEvent Ark_OnOverScrollEvent;
typedef struct Opt_OnOverScrollEvent Opt_OnOverScrollEvent;
typedef struct Ark_OnProgressChangeEvent Ark_OnProgressChangeEvent;
typedef struct Opt_OnProgressChangeEvent Opt_OnProgressChangeEvent;
typedef struct Ark_OnScaleChangeEvent Ark_OnScaleChangeEvent;
typedef struct Opt_OnScaleChangeEvent Opt_OnScaleChangeEvent;
typedef struct Ark_OnScrollEvent Ark_OnScrollEvent;
typedef struct Opt_OnScrollEvent Opt_OnScrollEvent;
typedef struct Ark_OnScrollFrameBeginHandlerResult Ark_OnScrollFrameBeginHandlerResult;
typedef struct Opt_OnScrollFrameBeginHandlerResult Opt_OnScrollFrameBeginHandlerResult;
typedef struct Ark_OnSearchResultReceiveEvent Ark_OnSearchResultReceiveEvent;
typedef struct Opt_OnSearchResultReceiveEvent Opt_OnSearchResultReceiveEvent;
typedef struct Ark_OnShowFileSelectorEvent Ark_OnShowFileSelectorEvent;
typedef struct Opt_OnShowFileSelectorEvent Opt_OnShowFileSelectorEvent;
typedef struct PageLifeCyclePeer PageLifeCyclePeer;
typedef struct PageLifeCyclePeer* Ark_PageLifeCycle;
typedef struct Opt_PageLifeCycle Opt_PageLifeCycle;
typedef struct PanGestureInterfacePeer PanGestureInterfacePeer;
typedef struct PanGestureInterfacePeer* Ark_PanGestureInterface;
typedef struct Opt_PanGestureInterface Opt_PanGestureInterface;
typedef struct PanGestureOptionsPeer PanGestureOptionsPeer;
typedef struct PanGestureOptionsPeer* Ark_PanGestureOptions;
typedef struct Opt_PanGestureOptions Opt_PanGestureOptions;
typedef struct PanRecognizerPeer PanRecognizerPeer;
typedef struct PanRecognizerPeer* Ark_PanRecognizer;
typedef struct Opt_PanRecognizer Opt_PanRecognizer;
typedef struct Path2DPeer Path2DPeer;
typedef struct Path2DPeer* Ark_Path2D;
typedef struct Opt_Path2D Opt_Path2D;
typedef struct Ark_PathOptions Ark_PathOptions;
typedef struct Opt_PathOptions Opt_PathOptions;
typedef struct PathShapePeer PathShapePeer;
typedef struct PathShapePeer* Ark_PathShape;
typedef struct Opt_PathShape Opt_PathShape;
typedef struct PatternLockControllerPeer PatternLockControllerPeer;
typedef struct PatternLockControllerPeer* Ark_PatternLockController;
typedef struct Opt_PatternLockController Opt_PatternLockController;
typedef struct PermissionRequestPeer PermissionRequestPeer;
typedef struct PermissionRequestPeer* Ark_PermissionRequest;
typedef struct Opt_PermissionRequest Opt_PermissionRequest;
typedef struct PinchGestureInterfacePeer PinchGestureInterfacePeer;
typedef struct PinchGestureInterfacePeer* Ark_PinchGestureInterface;
typedef struct Opt_PinchGestureInterface Opt_PinchGestureInterface;
typedef struct PinchRecognizerPeer PinchRecognizerPeer;
typedef struct PinchRecognizerPeer* Ark_PinchRecognizer;
typedef struct Opt_PinchRecognizer Opt_PinchRecognizer;
typedef struct PixelMapMockPeer PixelMapMockPeer;
typedef struct PixelMapMockPeer* Ark_PixelMapMock;
typedef struct Opt_PixelMapMock Opt_PixelMapMock;
typedef struct Ark_PlaybackInfo Ark_PlaybackInfo;
typedef struct Opt_PlaybackInfo Opt_PlaybackInfo;
typedef struct Ark_PolygonOptions Ark_PolygonOptions;
typedef struct Opt_PolygonOptions Opt_PolygonOptions;
typedef struct Ark_PolylineOptions Ark_PolylineOptions;
typedef struct Opt_PolylineOptions Opt_PolylineOptions;
typedef struct Ark_PopupStateChangeParam Ark_PopupStateChangeParam;
typedef struct Opt_PopupStateChangeParam Opt_PopupStateChangeParam;
typedef struct Ark_PositionWithAffinity Ark_PositionWithAffinity;
typedef struct Opt_PositionWithAffinity Opt_PositionWithAffinity;
typedef struct Ark_PreparedInfo Ark_PreparedInfo;
typedef struct Opt_PreparedInfo Opt_PreparedInfo;
typedef struct Ark_ProgressConfiguration Ark_ProgressConfiguration;
typedef struct Opt_ProgressConfiguration Opt_ProgressConfiguration;
typedef struct ProgressMaskPeer ProgressMaskPeer;
typedef struct ProgressMaskPeer* Ark_ProgressMask;
typedef struct Opt_ProgressMask Opt_ProgressMask;
typedef struct PromptActionPeer PromptActionPeer;
typedef struct PromptActionPeer* Ark_PromptAction;
typedef struct Opt_PromptAction Opt_PromptAction;
typedef struct Ark_RectResult Ark_RectResult;
typedef struct Opt_RectResult Opt_RectResult;
typedef struct RectShapePeer RectShapePeer;
typedef struct RectShapePeer* Ark_RectShape;
typedef struct Opt_RectShape Opt_RectShape;
typedef struct RichEditorBaseControllerPeer RichEditorBaseControllerPeer;
typedef struct RichEditorBaseControllerPeer* Ark_RichEditorBaseController;
typedef struct Opt_RichEditorBaseController Opt_RichEditorBaseController;
typedef struct RichEditorControllerPeer RichEditorControllerPeer;
typedef struct RichEditorControllerPeer* Ark_RichEditorController;
typedef struct Opt_RichEditorController Opt_RichEditorController;
typedef struct Ark_RichEditorOptions Ark_RichEditorOptions;
typedef struct Opt_RichEditorOptions Opt_RichEditorOptions;
typedef struct RichEditorStyledStringControllerPeer RichEditorStyledStringControllerPeer;
typedef struct RichEditorStyledStringControllerPeer* Ark_RichEditorStyledStringController;
typedef struct Opt_RichEditorStyledStringController Opt_RichEditorStyledStringController;
typedef struct Ark_RichEditorStyledStringOptions Ark_RichEditorStyledStringOptions;
typedef struct Opt_RichEditorStyledStringOptions Opt_RichEditorStyledStringOptions;
typedef struct Ark_RootSceneSession Ark_RootSceneSession;
typedef struct Opt_RootSceneSession Opt_RootSceneSession;
typedef struct Ark_RotateResult Ark_RotateResult;
typedef struct Opt_RotateResult Opt_RotateResult;
typedef struct RotationGesturePeer RotationGesturePeer;
typedef struct RotationGesturePeer* Ark_RotationGesture;
typedef struct Opt_RotationGesture Opt_RotationGesture;
typedef struct RotationRecognizerPeer RotationRecognizerPeer;
typedef struct RotationRecognizerPeer* Ark_RotationRecognizer;
typedef struct Opt_RotationRecognizer Opt_RotationRecognizer;
typedef struct Ark_RoundedRectOptions Ark_RoundedRectOptions;
typedef struct Opt_RoundedRectOptions Opt_RoundedRectOptions;
typedef struct Ark_RowOptionsV2 Ark_RowOptionsV2;
typedef struct Opt_RowOptionsV2 Opt_RowOptionsV2;
typedef struct Ark_RRect Ark_RRect;
typedef struct Opt_RRect Opt_RRect;
typedef struct Ark_ScaleResult Ark_ScaleResult;
typedef struct Opt_ScaleResult Opt_ScaleResult;
typedef struct ScenePeer ScenePeer;
typedef struct ScenePeer* Ark_Scene;
typedef struct Opt_Scene Opt_Scene;
typedef struct ScreenCaptureHandlerPeer ScreenCaptureHandlerPeer;
typedef struct ScreenCaptureHandlerPeer* Ark_ScreenCaptureHandler;
typedef struct Opt_ScreenCaptureHandler Opt_ScreenCaptureHandler;
typedef struct ScrollableTargetInfoPeer ScrollableTargetInfoPeer;
typedef struct ScrollableTargetInfoPeer* Ark_ScrollableTargetInfo;
typedef struct Opt_ScrollableTargetInfo Opt_ScrollableTargetInfo;
typedef struct ScrollerPeer ScrollerPeer;
typedef struct ScrollerPeer* Ark_Scroller;
typedef struct Opt_Scroller Opt_Scroller;
typedef struct ScrollMotionPeer ScrollMotionPeer;
typedef struct ScrollMotionPeer* Ark_ScrollMotion;
typedef struct Opt_ScrollMotion Opt_ScrollMotion;
typedef struct ScrollResultPeer ScrollResultPeer;
typedef struct ScrollResultPeer* Ark_ScrollResult;
typedef struct Opt_ScrollResult Opt_ScrollResult;
typedef struct SearchControllerPeer SearchControllerPeer;
typedef struct SearchControllerPeer* Ark_SearchController;
typedef struct Opt_SearchController Opt_SearchController;
typedef struct ShapeClipPeer ShapeClipPeer;
typedef struct ShapeClipPeer* Ark_ShapeClip;
typedef struct Opt_ShapeClip Opt_ShapeClip;
typedef struct ShapeMaskPeer ShapeMaskPeer;
typedef struct ShapeMaskPeer* Ark_ShapeMask;
typedef struct Opt_ShapeMask Opt_ShapeMask;
typedef struct Ark_Size Ark_Size;
typedef struct Opt_Size Opt_Size;
typedef struct Ark_SizeResult Ark_SizeResult;
typedef struct Opt_SizeResult Opt_SizeResult;
typedef struct SpringMotionPeer SpringMotionPeer;
typedef struct SpringMotionPeer* Ark_SpringMotion;
typedef struct Opt_SpringMotion Opt_SpringMotion;
typedef struct SpringPropPeer SpringPropPeer;
typedef struct SpringPropPeer* Ark_SpringProp;
typedef struct Opt_SpringProp Opt_SpringProp;
typedef struct SslErrorHandlerPeer SslErrorHandlerPeer;
typedef struct SslErrorHandlerPeer* Ark_SslErrorHandler;
typedef struct Opt_SslErrorHandler Opt_SslErrorHandler;
typedef struct Opt_String Opt_String;
typedef struct StyledStringPeer StyledStringPeer;
typedef struct StyledStringPeer* Ark_StyledString;
typedef struct Opt_StyledString Opt_StyledString;
typedef struct StyledStringControllerPeer StyledStringControllerPeer;
typedef struct StyledStringControllerPeer* Ark_StyledStringController;
typedef struct Opt_StyledStringController Opt_StyledStringController;
typedef struct SubmitEventPeer SubmitEventPeer;
typedef struct SubmitEventPeer* Ark_SubmitEvent;
typedef struct Opt_SubmitEvent Opt_SubmitEvent;
typedef struct SwipeGesturePeer SwipeGesturePeer;
typedef struct SwipeGesturePeer* Ark_SwipeGesture;
typedef struct Opt_SwipeGesture Opt_SwipeGesture;
typedef struct Ark_SwiperAnimationEvent Ark_SwiperAnimationEvent;
typedef struct Opt_SwiperAnimationEvent Opt_SwiperAnimationEvent;
typedef struct SwiperContentTransitionProxyPeer SwiperContentTransitionProxyPeer;
typedef struct SwiperContentTransitionProxyPeer* Ark_SwiperContentTransitionProxy;
typedef struct Opt_SwiperContentTransitionProxy Opt_SwiperContentTransitionProxy;
typedef struct Ark_SwiperContentWillScrollResult Ark_SwiperContentWillScrollResult;
typedef struct Opt_SwiperContentWillScrollResult Opt_SwiperContentWillScrollResult;
typedef struct SwiperControllerPeer SwiperControllerPeer;
typedef struct SwiperControllerPeer* Ark_SwiperController;
typedef struct Opt_SwiperController Opt_SwiperController;
typedef struct SwipeRecognizerPeer SwipeRecognizerPeer;
typedef struct SwipeRecognizerPeer* Ark_SwipeRecognizer;
typedef struct Opt_SwipeRecognizer Opt_SwipeRecognizer;
typedef struct SymbolEffectPeer SymbolEffectPeer;
typedef struct SymbolEffectPeer* Ark_SymbolEffect;
typedef struct Opt_SymbolEffect Opt_SymbolEffect;
typedef struct Ark_SymbolGlyphModifier Ark_SymbolGlyphModifier;
typedef struct Opt_SymbolGlyphModifier Opt_SymbolGlyphModifier;
typedef struct TabContentTransitionProxyPeer TabContentTransitionProxyPeer;
typedef struct TabContentTransitionProxyPeer* Ark_TabContentTransitionProxy;
typedef struct Opt_TabContentTransitionProxy Opt_TabContentTransitionProxy;
typedef struct Ark_TabsAnimationEvent Ark_TabsAnimationEvent;
typedef struct Opt_TabsAnimationEvent Opt_TabsAnimationEvent;
typedef struct TabsControllerPeer TabsControllerPeer;
typedef struct TabsControllerPeer* Ark_TabsController;
typedef struct Opt_TabsController Opt_TabsController;
typedef struct TapGestureInterfacePeer TapGestureInterfacePeer;
typedef struct TapGestureInterfacePeer* Ark_TapGestureInterface;
typedef struct Opt_TapGestureInterface Opt_TapGestureInterface;
typedef struct TapRecognizerPeer TapRecognizerPeer;
typedef struct TapRecognizerPeer* Ark_TapRecognizer;
typedef struct Opt_TapRecognizer Opt_TapRecognizer;
typedef struct text_FontCollectionPeer text_FontCollectionPeer;
typedef struct text_FontCollectionPeer* Ark_text_FontCollection;
typedef struct Opt_text_FontCollection Opt_text_FontCollection;
typedef struct Ark_text_FontFeature Ark_text_FontFeature;
typedef struct Opt_text_FontFeature Opt_text_FontFeature;
typedef struct Ark_text_FontVariation Ark_text_FontVariation;
typedef struct Opt_text_FontVariation Opt_text_FontVariation;
typedef struct text_LineTypesetPeer text_LineTypesetPeer;
typedef struct text_LineTypesetPeer* Ark_text_LineTypeset;
typedef struct Opt_text_LineTypeset Opt_text_LineTypeset;
typedef struct text_ParagraphPeer text_ParagraphPeer;
typedef struct text_ParagraphPeer* Ark_text_Paragraph;
typedef struct Opt_text_Paragraph Opt_text_Paragraph;
typedef struct text_ParagraphBuilderPeer text_ParagraphBuilderPeer;
typedef struct text_ParagraphBuilderPeer* Ark_text_ParagraphBuilder;
typedef struct Opt_text_ParagraphBuilder Opt_text_ParagraphBuilder;
typedef struct Ark_text_PositionWithAffinity Ark_text_PositionWithAffinity;
typedef struct Opt_text_PositionWithAffinity Opt_text_PositionWithAffinity;
typedef struct Ark_text_Range Ark_text_Range;
typedef struct Opt_text_Range Opt_text_Range;
typedef struct text_RunPeer text_RunPeer;
typedef struct text_RunPeer* Ark_text_Run;
typedef struct Opt_text_Run Opt_text_Run;
typedef struct text_TextLinePeer text_TextLinePeer;
typedef struct text_TextLinePeer* Ark_text_TextLine;
typedef struct Opt_text_TextLine Opt_text_TextLine;
typedef struct Ark_text_TextTab Ark_text_TextTab;
typedef struct Opt_text_TextTab Opt_text_TextTab;
typedef struct Ark_text_TypographicBounds Ark_text_TypographicBounds;
typedef struct Opt_text_TypographicBounds Opt_text_TypographicBounds;
typedef struct TextAreaControllerPeer TextAreaControllerPeer;
typedef struct TextAreaControllerPeer* Ark_TextAreaController;
typedef struct Opt_TextAreaController Opt_TextAreaController;
typedef struct TextBaseControllerPeer TextBaseControllerPeer;
typedef struct TextBaseControllerPeer* Ark_TextBaseController;
typedef struct Opt_TextBaseController Opt_TextBaseController;
typedef struct Ark_TextClockConfiguration Ark_TextClockConfiguration;
typedef struct Opt_TextClockConfiguration Opt_TextClockConfiguration;
typedef struct TextClockControllerPeer TextClockControllerPeer;
typedef struct TextClockControllerPeer* Ark_TextClockController;
typedef struct Opt_TextClockController Opt_TextClockController;
typedef struct TextContentControllerBasePeer TextContentControllerBasePeer;
typedef struct TextContentControllerBasePeer* Ark_TextContentControllerBase;
typedef struct Opt_TextContentControllerBase Opt_TextContentControllerBase;
typedef struct TextControllerPeer TextControllerPeer;
typedef struct TextControllerPeer* Ark_TextController;
typedef struct Opt_TextController Opt_TextController;
typedef struct TextEditControllerExPeer TextEditControllerExPeer;
typedef struct TextEditControllerExPeer* Ark_TextEditControllerEx;
typedef struct Opt_TextEditControllerEx Opt_TextEditControllerEx;
typedef struct TextInputControllerPeer TextInputControllerPeer;
typedef struct TextInputControllerPeer* Ark_TextInputController;
typedef struct Opt_TextInputController Opt_TextInputController;
typedef struct TextMenuControllerPeer TextMenuControllerPeer;
typedef struct TextMenuControllerPeer* Ark_TextMenuController;
typedef struct Opt_TextMenuController Opt_TextMenuController;
typedef struct TextMenuItemIdPeer TextMenuItemIdPeer;
typedef struct TextMenuItemIdPeer* Ark_TextMenuItemId;
typedef struct Opt_TextMenuItemId Opt_TextMenuItemId;
typedef struct Ark_TextMetrics Ark_TextMetrics;
typedef struct Opt_TextMetrics Opt_TextMetrics;
typedef struct Ark_TextModifier Ark_TextModifier;
typedef struct Opt_TextModifier Opt_TextModifier;
typedef struct Ark_TextOptions Ark_TextOptions;
typedef struct Opt_TextOptions Opt_TextOptions;
typedef struct Ark_TextOverflowOptions Ark_TextOverflowOptions;
typedef struct Opt_TextOverflowOptions Opt_TextOverflowOptions;
typedef struct TextPickerDialogPeer TextPickerDialogPeer;
typedef struct TextPickerDialogPeer* Ark_TextPickerDialog;
typedef struct Opt_TextPickerDialog Opt_TextPickerDialog;
typedef struct Ark_TextTimerConfiguration Ark_TextTimerConfiguration;
typedef struct Opt_TextTimerConfiguration Opt_TextTimerConfiguration;
typedef struct TextTimerControllerPeer TextTimerControllerPeer;
typedef struct TextTimerControllerPeer* Ark_TextTimerController;
typedef struct Opt_TextTimerController Opt_TextTimerController;
typedef struct ThemeControlPeer ThemeControlPeer;
typedef struct ThemeControlPeer* Ark_ThemeControl;
typedef struct Opt_ThemeControl Opt_ThemeControl;
typedef struct TimePickerDialogPeer TimePickerDialogPeer;
typedef struct TimePickerDialogPeer* Ark_TimePickerDialog;
typedef struct Opt_TimePickerDialog Opt_TimePickerDialog;
typedef struct Ark_TimePickerResult Ark_TimePickerResult;
typedef struct Opt_TimePickerResult Opt_TimePickerResult;
typedef struct Ark_TouchTestInfo Ark_TouchTestInfo;
typedef struct Opt_TouchTestInfo Opt_TouchTestInfo;
typedef struct Ark_TranslateResult Ark_TranslateResult;
typedef struct Opt_TranslateResult Opt_TranslateResult;
typedef struct Ark_Tuple_Number_Number Ark_Tuple_Number_Number;
typedef struct Opt_Tuple_Number_Number Opt_Tuple_Number_Number;
typedef struct Ark_Tuple_Number_Number_Number_Number Ark_Tuple_Number_Number_Number_Number;
typedef struct Opt_Tuple_Number_Number_Number_Number Opt_Tuple_Number_Number_Number_Number;
typedef struct UICommonEventPeer UICommonEventPeer;
typedef struct UICommonEventPeer* Ark_UICommonEvent;
typedef struct Opt_UICommonEvent Opt_UICommonEvent;
typedef struct UIContextPeer UIContextPeer;
typedef struct UIContextPeer* Ark_UIContext;
typedef struct Opt_UIContext Opt_UIContext;
typedef struct Ark_uiEffect_Filter Ark_uiEffect_Filter;
typedef struct Opt_uiEffect_Filter Opt_uiEffect_Filter;
typedef struct Ark_uiEffect_Tuple_Number_Number_Number Ark_uiEffect_Tuple_Number_Number_Number;
typedef struct Opt_uiEffect_Tuple_Number_Number_Number Opt_uiEffect_Tuple_Number_Number_Number;
typedef struct uiEffect_VisualEffectPeer uiEffect_VisualEffectPeer;
typedef struct uiEffect_VisualEffectPeer* Ark_uiEffect_VisualEffect;
typedef struct Opt_uiEffect_VisualEffect Opt_uiEffect_VisualEffect;
typedef struct UIExtensionProxyPeer UIExtensionProxyPeer;
typedef struct UIExtensionProxyPeer* Ark_UIExtensionProxy;
typedef struct Opt_UIExtensionProxy Opt_UIExtensionProxy;
typedef struct Ark_UIGestureEvent Ark_UIGestureEvent;
typedef struct Opt_UIGestureEvent Opt_UIGestureEvent;
typedef struct unifiedDataChannel_UnifiedDataPeer unifiedDataChannel_UnifiedDataPeer;
typedef struct unifiedDataChannel_UnifiedDataPeer* Ark_unifiedDataChannel_UnifiedData;
typedef struct Opt_unifiedDataChannel_UnifiedData Opt_unifiedDataChannel_UnifiedData;
typedef struct Ark_Union_Boolean_Number Ark_Union_Boolean_Number;
typedef struct Opt_Union_Boolean_Number Opt_Union_Boolean_Number;
typedef struct Ark_Union_CircleShape_EllipseShape_PathShape_RectShape Ark_Union_CircleShape_EllipseShape_PathShape_RectShape;
typedef struct Opt_Union_CircleShape_EllipseShape_PathShape_RectShape Opt_Union_CircleShape_EllipseShape_PathShape_RectShape;
typedef struct Ark_Union_Color_Number_String Ark_Union_Color_Number_String;
typedef struct Opt_Union_Color_Number_String Opt_Union_Color_Number_String;
typedef struct Ark_Union_ColorFilter_DrawingColorFilter Ark_Union_ColorFilter_DrawingColorFilter;
typedef struct Opt_Union_ColorFilter_DrawingColorFilter Opt_Union_ColorFilter_DrawingColorFilter;
typedef struct Ark_Union_ContentClipMode_RectShape Ark_Union_ContentClipMode_RectShape;
typedef struct Opt_Union_ContentClipMode_RectShape Opt_Union_ContentClipMode_RectShape;
typedef struct Ark_Union_Curve_ICurve Ark_Union_Curve_ICurve;
typedef struct Opt_Union_Curve_ICurve Opt_Union_Curve_ICurve;
typedef struct Ark_Union_Curve_String_ICurve Ark_Union_Curve_String_ICurve;
typedef struct Opt_Union_Curve_String_ICurve Opt_Union_Curve_String_ICurve;
typedef struct Ark_Union_FontWeight_Number_String Ark_Union_FontWeight_Number_String;
typedef struct Opt_Union_FontWeight_Number_String Opt_Union_FontWeight_Number_String;
typedef struct Ark_Union_I64_String Ark_Union_I64_String;
typedef struct Opt_Union_I64_String Opt_Union_I64_String;
typedef struct Ark_Union_Number_FontStyle Ark_Union_Number_FontStyle;
typedef struct Opt_Union_Number_FontStyle Opt_Union_Number_FontStyle;
typedef struct Ark_Union_Number_FontWeight_String Ark_Union_Number_FontWeight_String;
typedef struct Opt_Union_Number_FontWeight_String Opt_Union_Number_FontWeight_String;
typedef struct Ark_Union_Number_String Ark_Union_Number_String;
typedef struct Opt_Union_Number_String Opt_Union_Number_String;
typedef struct Ark_Union_Number_String_FontWeight Ark_Union_Number_String_FontWeight;
typedef struct Opt_Union_Number_String_FontWeight Opt_Union_Number_String_FontWeight;
typedef struct Ark_Union_Number_String_PlaybackSpeed Ark_Union_Number_String_PlaybackSpeed;
typedef struct Opt_Union_Number_String_PlaybackSpeed Opt_Union_Number_String_PlaybackSpeed;
typedef struct Ark_Union_Number_TextCase Ark_Union_Number_TextCase;
typedef struct Opt_Union_Number_TextCase Opt_Union_Number_TextCase;
typedef struct Ark_Union_Number_TextOverflow Ark_Union_Number_TextOverflow;
typedef struct Opt_Union_Number_TextOverflow Opt_Union_Number_TextOverflow;
typedef struct Ark_Union_PixelMap_String Ark_Union_PixelMap_String;
typedef struct Opt_Union_PixelMap_String Opt_Union_PixelMap_String;
typedef struct Ark_Union_ResponseType_RichEditorResponseType Ark_Union_ResponseType_RichEditorResponseType;
typedef struct Opt_Union_ResponseType_RichEditorResponseType Opt_Union_ResponseType_RichEditorResponseType;
typedef struct Ark_Union_SpringMotion_FrictionMotion_ScrollMotion Ark_Union_SpringMotion_FrictionMotion_ScrollMotion;
typedef struct Opt_Union_SpringMotion_FrictionMotion_ScrollMotion Opt_Union_SpringMotion_FrictionMotion_ScrollMotion;
typedef struct Ark_Union_String_FunctionKey Ark_Union_String_FunctionKey;
typedef struct Opt_Union_String_FunctionKey Opt_Union_String_FunctionKey;
typedef struct Ark_Union_String_Number Ark_Union_String_Number;
typedef struct Opt_Union_String_Number Opt_Union_String_Number;
typedef struct Ark_Union_String_Number_CanvasGradient_CanvasPattern Ark_Union_String_Number_CanvasGradient_CanvasPattern;
typedef struct Opt_Union_String_Number_CanvasGradient_CanvasPattern Opt_Union_String_Number_CanvasGradient_CanvasPattern;
typedef struct Ark_Union_SwiperAnimationMode_Boolean Ark_Union_SwiperAnimationMode_Boolean;
typedef struct Opt_Union_SwiperAnimationMode_Boolean Opt_Union_SwiperAnimationMode_Boolean;
typedef struct Ark_Union_TextInputStyle_TextContentStyle Ark_Union_TextInputStyle_TextContentStyle;
typedef struct Opt_Union_TextInputStyle_TextContentStyle Opt_Union_TextInputStyle_TextContentStyle;
typedef struct UrlStylePeer UrlStylePeer;
typedef struct UrlStylePeer* Ark_UrlStyle;
typedef struct Opt_UrlStyle Opt_UrlStyle;
typedef struct UserDataSpanPeer UserDataSpanPeer;
typedef struct UserDataSpanPeer* Ark_UserDataSpan;
typedef struct Opt_UserDataSpan Opt_UserDataSpan;
typedef struct Ark_Vector2 Ark_Vector2;
typedef struct Opt_Vector2 Opt_Vector2;
typedef struct Ark_Vector3 Ark_Vector3;
typedef struct Opt_Vector3 Opt_Vector3;
typedef struct VideoControllerPeer VideoControllerPeer;
typedef struct VideoControllerPeer* Ark_VideoController;
typedef struct Opt_VideoController Opt_VideoController;
typedef struct Ark_VP Ark_VP;
typedef struct Opt_VP Opt_VP;
typedef struct WaterFlowSectionsPeer WaterFlowSectionsPeer;
typedef struct WaterFlowSectionsPeer* Ark_WaterFlowSections;
typedef struct Opt_WaterFlowSections Opt_WaterFlowSections;
typedef struct WebContextMenuParamPeer WebContextMenuParamPeer;
typedef struct WebContextMenuParamPeer* Ark_WebContextMenuParam;
typedef struct Opt_WebContextMenuParam Opt_WebContextMenuParam;
typedef struct WebContextMenuResultPeer WebContextMenuResultPeer;
typedef struct WebContextMenuResultPeer* Ark_WebContextMenuResult;
typedef struct Opt_WebContextMenuResult Opt_WebContextMenuResult;
typedef struct WebCookiePeer WebCookiePeer;
typedef struct WebCookiePeer* Ark_WebCookie;
typedef struct Opt_WebCookie Opt_WebCookie;
typedef struct WebKeyboardControllerPeer WebKeyboardControllerPeer;
typedef struct WebKeyboardControllerPeer* Ark_WebKeyboardController;
typedef struct Opt_WebKeyboardController Opt_WebKeyboardController;
typedef struct WebResourceErrorPeer WebResourceErrorPeer;
typedef struct WebResourceErrorPeer* Ark_WebResourceError;
typedef struct Opt_WebResourceError Opt_WebResourceError;
typedef struct WebResourceRequestPeer WebResourceRequestPeer;
typedef struct WebResourceRequestPeer* Ark_WebResourceRequest;
typedef struct Opt_WebResourceRequest Opt_WebResourceRequest;
typedef struct WebResourceResponsePeer WebResourceResponsePeer;
typedef struct WebResourceResponsePeer* Ark_WebResourceResponse;
typedef struct Opt_WebResourceResponse Opt_WebResourceResponse;
typedef struct Ark_webview_WebHeader Ark_webview_WebHeader;
typedef struct Opt_webview_WebHeader Opt_webview_WebHeader;
typedef struct webview_WebviewControllerPeer webview_WebviewControllerPeer;
typedef struct webview_WebviewControllerPeer* Ark_webview_WebviewController;
typedef struct Opt_webview_WebviewController Opt_webview_WebviewController;
typedef struct Ark_WindowAnimationTarget Ark_WindowAnimationTarget;
typedef struct Opt_WindowAnimationTarget Opt_WindowAnimationTarget;
typedef struct Ark_WorkerEventListener Ark_WorkerEventListener;
typedef struct Opt_WorkerEventListener Opt_WorkerEventListener;
typedef struct Array_Array_String Array_Array_String;
typedef struct Opt_Array_Array_String Opt_Array_Array_String;
typedef struct Array_BarrierStyle Array_BarrierStyle;
typedef struct Opt_Array_BarrierStyle Opt_Array_BarrierStyle;
typedef struct Array_Buffer Array_Buffer;
typedef struct Opt_Array_Buffer Opt_Array_Buffer;
typedef struct Array_ColorStop Array_ColorStop;
typedef struct Opt_Array_ColorStop Opt_Array_ColorStop;
typedef struct Array_common2D_Point Array_common2D_Point;
typedef struct Opt_Array_common2D_Point Opt_Array_common2D_Point;
typedef struct Array_common2D_Rect Array_common2D_Rect;
typedef struct Opt_Array_common2D_Rect Opt_Array_common2D_Rect;
typedef struct Array_CustomObject Array_CustomObject;
typedef struct Opt_Array_CustomObject Opt_Array_CustomObject;
typedef struct Array_DateRange Array_DateRange;
typedef struct Opt_Array_DateRange Opt_Array_DateRange;
typedef struct Array_Dimension Array_Dimension;
typedef struct Opt_Array_Dimension Opt_Array_Dimension;
typedef struct Array_DragPreviewMode Array_DragPreviewMode;
typedef struct Opt_Array_DragPreviewMode Opt_Array_DragPreviewMode;
typedef struct Array_drawing_RectType Array_drawing_RectType;
typedef struct Opt_Array_drawing_RectType Opt_Array_drawing_RectType;
typedef struct Array_drawing_TextBlobRunBuffer Array_drawing_TextBlobRunBuffer;
typedef struct Opt_Array_drawing_TextBlobRunBuffer Opt_Array_drawing_TextBlobRunBuffer;
typedef struct Array_FingerInfo Array_FingerInfo;
typedef struct Opt_Array_FingerInfo Opt_Array_FingerInfo;
typedef struct Array_font_UIFontAdjustInfo Array_font_UIFontAdjustInfo;
typedef struct Opt_Array_font_UIFontAdjustInfo Opt_Array_font_UIFontAdjustInfo;
typedef struct Array_font_UIFontAliasInfo Array_font_UIFontAliasInfo;
typedef struct Opt_Array_font_UIFontAliasInfo Opt_Array_font_UIFontAliasInfo;
typedef struct Array_font_UIFontFallbackGroupInfo Array_font_UIFontFallbackGroupInfo;
typedef struct Opt_Array_font_UIFontFallbackGroupInfo Opt_Array_font_UIFontFallbackGroupInfo;
typedef struct Array_font_UIFontFallbackInfo Array_font_UIFontFallbackInfo;
typedef struct Opt_Array_font_UIFontFallbackInfo Opt_Array_font_UIFontFallbackInfo;
typedef struct Array_font_UIFontGenericInfo Array_font_UIFontGenericInfo;
typedef struct Opt_Array_font_UIFontGenericInfo Opt_Array_font_UIFontGenericInfo;
typedef struct Array_FractionStop Array_FractionStop;
typedef struct Opt_Array_FractionStop Opt_Array_FractionStop;
typedef struct Array_GestureRecognizer Array_GestureRecognizer;
typedef struct Opt_Array_GestureRecognizer Opt_Array_GestureRecognizer;
typedef struct Array_GestureType Array_GestureType;
typedef struct Opt_Array_GestureType Opt_Array_GestureType;
typedef struct Array_GuideLineStyle Array_GuideLineStyle;
typedef struct Opt_Array_GuideLineStyle Opt_Array_GuideLineStyle;
typedef struct Array_Header Array_Header;
typedef struct Opt_Array_Header Opt_Array_Header;
typedef struct Array_HistoricalPoint Array_HistoricalPoint;
typedef struct Opt_Array_HistoricalPoint Opt_Array_HistoricalPoint;
typedef struct Array_ImageAnalyzerType Array_ImageAnalyzerType;
typedef struct Opt_Array_ImageAnalyzerType Opt_Array_ImageAnalyzerType;
typedef struct Array_ImageFrameInfo Array_ImageFrameInfo;
typedef struct Opt_Array_ImageFrameInfo Opt_Array_ImageFrameInfo;
typedef struct Array_Layoutable Array_Layoutable;
typedef struct Opt_Array_Layoutable Opt_Array_Layoutable;
typedef struct Array_LayoutSafeAreaEdge Array_LayoutSafeAreaEdge;
typedef struct Opt_Array_LayoutSafeAreaEdge Opt_Array_LayoutSafeAreaEdge;
typedef struct Array_LayoutSafeAreaType Array_LayoutSafeAreaType;
typedef struct Opt_Array_LayoutSafeAreaType Opt_Array_LayoutSafeAreaType;
typedef struct Array_Length Array_Length;
typedef struct Opt_Array_Length Opt_Array_Length;
typedef struct Array_LengthMetrics Array_LengthMetrics;
typedef struct Opt_Array_LengthMetrics Opt_Array_LengthMetrics;
typedef struct Array_Measurable Array_Measurable;
typedef struct Opt_Array_Measurable Opt_Array_Measurable;
typedef struct Array_MenuElement Array_MenuElement;
typedef struct Opt_Array_MenuElement Opt_Array_MenuElement;
typedef struct Array_ModifierKey Array_ModifierKey;
typedef struct Opt_Array_ModifierKey Opt_Array_ModifierKey;
typedef struct Array_MouseButton Array_MouseButton;
typedef struct Opt_Array_MouseButton Opt_Array_MouseButton;
typedef struct Array_NavDestinationTransition Array_NavDestinationTransition;
typedef struct Opt_Array_NavDestinationTransition Opt_Array_NavDestinationTransition;
typedef struct Array_NavigationMenuItem Array_NavigationMenuItem;
typedef struct Opt_Array_NavigationMenuItem Opt_Array_NavigationMenuItem;
typedef struct Array_NavPathInfo Array_NavPathInfo;
typedef struct Opt_Array_NavPathInfo Opt_Array_NavPathInfo;
typedef struct Array_NestedScrollInfo Array_NestedScrollInfo;
typedef struct Opt_Array_NestedScrollInfo Opt_Array_NestedScrollInfo;
typedef struct Array_Number Array_Number;
typedef struct Opt_Array_Number Opt_Array_Number;
typedef struct Array_Object Array_Object;
typedef struct Opt_Array_Object Opt_Array_Object;
typedef struct Array_ObscuredReasons Array_ObscuredReasons;
typedef struct Opt_Array_ObscuredReasons Opt_Array_ObscuredReasons;
typedef struct Array_Opt_Object Array_Opt_Object;
typedef struct Opt_Array_Opt_Object Opt_Array_Opt_Object;
typedef struct Array_RadiusItem Array_RadiusItem;
typedef struct Opt_Array_RadiusItem Opt_Array_RadiusItem;
typedef struct Array_Rectangle Array_Rectangle;
typedef struct Opt_Array_Rectangle Opt_Array_Rectangle;
typedef struct Array_ResourceColor Array_ResourceColor;
typedef struct Opt_Array_ResourceColor Opt_Array_ResourceColor;
typedef struct Array_ResourceStr Array_ResourceStr;
typedef struct Opt_Array_ResourceStr Opt_Array_ResourceStr;
typedef struct Array_RichEditorImageSpanResult Array_RichEditorImageSpanResult;
typedef struct Opt_Array_RichEditorImageSpanResult Opt_Array_RichEditorImageSpanResult;
typedef struct Array_RichEditorParagraphResult Array_RichEditorParagraphResult;
typedef struct Opt_Array_RichEditorParagraphResult Opt_Array_RichEditorParagraphResult;
typedef struct Array_RichEditorSpan Array_RichEditorSpan;
typedef struct Opt_Array_RichEditorSpan Opt_Array_RichEditorSpan;
typedef struct Array_RichEditorTextSpanResult Array_RichEditorTextSpanResult;
typedef struct Opt_Array_RichEditorTextSpanResult Opt_Array_RichEditorTextSpanResult;
typedef struct Array_SafeAreaEdge Array_SafeAreaEdge;
typedef struct Opt_Array_SafeAreaEdge Opt_Array_SafeAreaEdge;
typedef struct Array_SafeAreaType Array_SafeAreaType;
typedef struct Opt_Array_SafeAreaType Opt_Array_SafeAreaType;
typedef struct Array_ScriptItem Array_ScriptItem;
typedef struct Opt_Array_ScriptItem Opt_Array_ScriptItem;
typedef struct Array_Scroller Array_Scroller;
typedef struct Opt_Array_Scroller Opt_Array_Scroller;
typedef struct Array_SectionOptions Array_SectionOptions;
typedef struct Opt_Array_SectionOptions Opt_Array_SectionOptions;
typedef struct Array_SelectOption Array_SelectOption;
typedef struct Opt_Array_SelectOption Opt_Array_SelectOption;
typedef struct Array_ShadowOptions Array_ShadowOptions;
typedef struct Opt_Array_ShadowOptions Opt_Array_ShadowOptions;
typedef struct Array_ShapePoint Array_ShapePoint;
typedef struct Opt_Array_ShapePoint Opt_Array_ShapePoint;
typedef struct Array_SourceTool Array_SourceTool;
typedef struct Opt_Array_SourceTool Opt_Array_SourceTool;
typedef struct Array_SpanStyle Array_SpanStyle;
typedef struct Opt_Array_SpanStyle Opt_Array_SpanStyle;
typedef struct Array_String Array_String;
typedef struct Opt_Array_String Opt_Array_String;
typedef struct Array_StyleOptions Array_StyleOptions;
typedef struct Opt_Array_StyleOptions Opt_Array_StyleOptions;
typedef struct Array_text_FontDescriptor Array_text_FontDescriptor;
typedef struct Opt_Array_text_FontDescriptor Opt_Array_text_FontDescriptor;
typedef struct Array_text_FontFeature Array_text_FontFeature;
typedef struct Opt_Array_text_FontFeature Opt_Array_text_FontFeature;
typedef struct Array_text_FontVariation Array_text_FontVariation;
typedef struct Opt_Array_text_FontVariation Opt_Array_text_FontVariation;
typedef struct Array_text_LineMetrics Array_text_LineMetrics;
typedef struct Opt_Array_text_LineMetrics Opt_Array_text_LineMetrics;
typedef struct Array_text_Run Array_text_Run;
typedef struct Opt_Array_text_Run Opt_Array_text_Run;
typedef struct Array_text_TextBox Array_text_TextBox;
typedef struct Opt_Array_text_TextBox Opt_Array_text_TextBox;
typedef struct Array_text_TextLine Array_text_TextLine;
typedef struct Opt_Array_text_TextLine Opt_Array_text_TextLine;
typedef struct Array_text_TextShadow Array_text_TextShadow;
typedef struct Opt_Array_text_TextShadow Opt_Array_text_TextShadow;
typedef struct Array_TextCascadePickerRangeContent Array_TextCascadePickerRangeContent;
typedef struct Opt_Array_TextCascadePickerRangeContent Opt_Array_TextCascadePickerRangeContent;
typedef struct Array_TextDataDetectorType Array_TextDataDetectorType;
typedef struct Opt_Array_TextDataDetectorType Opt_Array_TextDataDetectorType;
typedef struct Array_TextMenuItem Array_TextMenuItem;
typedef struct Opt_Array_TextMenuItem Opt_Array_TextMenuItem;
typedef struct Array_TextPickerRangeContent Array_TextPickerRangeContent;
typedef struct Opt_Array_TextPickerRangeContent Opt_Array_TextPickerRangeContent;
typedef struct Array_ToolbarItem Array_ToolbarItem;
typedef struct Opt_Array_ToolbarItem Opt_Array_ToolbarItem;
typedef struct Array_TouchObject Array_TouchObject;
typedef struct Opt_Array_TouchObject Opt_Array_TouchObject;
typedef struct Array_TouchTestInfo Array_TouchTestInfo;
typedef struct Opt_Array_TouchTestInfo Opt_Array_TouchTestInfo;
typedef struct Array_Tuple_ResourceColor_Number Array_Tuple_ResourceColor_Number;
typedef struct Opt_Array_Tuple_ResourceColor_Number Opt_Array_Tuple_ResourceColor_Number;
typedef struct Array_Tuple_Union_ResourceColor_LinearGradient_Number Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Array_Tuple_Union_ResourceColor_LinearGradient_Number Opt_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Array_uniformTypeDescriptor_UniformDataType Array_uniformTypeDescriptor_UniformDataType;
typedef struct Opt_Array_uniformTypeDescriptor_UniformDataType Opt_Array_uniformTypeDescriptor_UniformDataType;
typedef struct Array_Union_Number_String Array_Union_Number_String;
typedef struct Opt_Array_Union_Number_String Opt_Array_Union_Number_String;
typedef struct Array_Union_ResourceColor_LinearGradient Array_Union_ResourceColor_LinearGradient;
typedef struct Opt_Array_Union_ResourceColor_LinearGradient Opt_Array_Union_ResourceColor_LinearGradient;
typedef struct Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Opt_Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult Opt_Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Opt_Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult Opt_Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Array_webview_WebHeader Array_webview_WebHeader;
typedef struct Opt_Array_webview_WebHeader Opt_Array_webview_WebHeader;
typedef struct AsyncCallback_image_PixelMap_Void AsyncCallback_image_PixelMap_Void;
typedef struct Opt_AsyncCallback_image_PixelMap_Void Opt_AsyncCallback_image_PixelMap_Void;
typedef struct ButtonModifierBuilder ButtonModifierBuilder;
typedef struct Opt_ButtonModifierBuilder Opt_ButtonModifierBuilder;
typedef struct ButtonTriggerClickCallback ButtonTriggerClickCallback;
typedef struct Opt_ButtonTriggerClickCallback Opt_ButtonTriggerClickCallback;
typedef struct Callback_Area_Area_Void Callback_Area_Area_Void;
typedef struct Opt_Callback_Area_Area_Void Opt_Callback_Area_Area_Void;
typedef struct Callback_Array_Number_Void Callback_Array_Number_Void;
typedef struct Opt_Callback_Array_Number_Void Opt_Callback_Array_Number_Void;
typedef struct Callback_Array_String_Void Callback_Array_String_Void;
typedef struct Opt_Callback_Array_String_Void Opt_Callback_Array_String_Void;
typedef struct Callback_Array_TextMenuItem_Void Callback_Array_TextMenuItem_Void;
typedef struct Opt_Callback_Array_TextMenuItem_Void Opt_Callback_Array_TextMenuItem_Void;
typedef struct Callback_Array_TouchTestInfo_TouchResult Callback_Array_TouchTestInfo_TouchResult;
typedef struct Opt_Callback_Array_TouchTestInfo_TouchResult Opt_Callback_Array_TouchTestInfo_TouchResult;
typedef struct Callback_AxisEvent_Void Callback_AxisEvent_Void;
typedef struct Opt_Callback_AxisEvent_Void Opt_Callback_AxisEvent_Void;
typedef struct Callback_Boolean Callback_Boolean;
typedef struct Opt_Callback_Boolean Opt_Callback_Boolean;
typedef struct Callback_Boolean_HoverEvent_Void Callback_Boolean_HoverEvent_Void;
typedef struct Opt_Callback_Boolean_HoverEvent_Void Opt_Callback_Boolean_HoverEvent_Void;
typedef struct Callback_Boolean_Void Callback_Boolean_Void;
typedef struct Opt_Callback_Boolean_Void Opt_Callback_Boolean_Void;
typedef struct Callback_Buffer_Void Callback_Buffer_Void;
typedef struct Opt_Callback_Buffer_Void Opt_Callback_Buffer_Void;
typedef struct Callback_ClickEvent_LocationButtonOnClickResult_Void Callback_ClickEvent_LocationButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_LocationButtonOnClickResult_Void Opt_Callback_ClickEvent_LocationButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_PasteButtonOnClickResult_Void Callback_ClickEvent_PasteButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_PasteButtonOnClickResult_Void Opt_Callback_ClickEvent_PasteButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_SaveButtonOnClickResult_Void Callback_ClickEvent_SaveButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_SaveButtonOnClickResult_Void Opt_Callback_ClickEvent_SaveButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_Void Callback_ClickEvent_Void;
typedef struct Opt_Callback_ClickEvent_Void Opt_Callback_ClickEvent_Void;
typedef struct Callback_CompatibleComponentInfo_Void Callback_CompatibleComponentInfo_Void;
typedef struct Opt_Callback_CompatibleComponentInfo_Void Opt_Callback_CompatibleComponentInfo_Void;
typedef struct Callback_ComputedBarAttribute_Void Callback_ComputedBarAttribute_Void;
typedef struct Opt_Callback_ComputedBarAttribute_Void Opt_Callback_ComputedBarAttribute_Void;
typedef struct Callback_CopyEvent_Void Callback_CopyEvent_Void;
typedef struct Opt_Callback_CopyEvent_Void Opt_Callback_CopyEvent_Void;
typedef struct Callback_CreateItem Callback_CreateItem;
typedef struct Opt_Callback_CreateItem Opt_Callback_CreateItem;
typedef struct Callback_CrownEvent_Void Callback_CrownEvent_Void;
typedef struct Opt_Callback_CrownEvent_Void Opt_Callback_CrownEvent_Void;
typedef struct Callback_CustomSpanMeasureInfo_CustomSpanMetrics Callback_CustomSpanMeasureInfo_CustomSpanMetrics;
typedef struct Opt_Callback_CustomSpanMeasureInfo_CustomSpanMetrics Opt_Callback_CustomSpanMeasureInfo_CustomSpanMetrics;
typedef struct Callback_CustomSpanMetrics_Void Callback_CustomSpanMetrics_Void;
typedef struct Opt_Callback_CustomSpanMetrics_Void Opt_Callback_CustomSpanMetrics_Void;
typedef struct Callback_CutEvent_Void Callback_CutEvent_Void;
typedef struct Opt_Callback_CutEvent_Void Opt_Callback_CutEvent_Void;
typedef struct Callback_Date_Void Callback_Date_Void;
typedef struct Opt_Callback_Date_Void Opt_Callback_Date_Void;
typedef struct Callback_DeleteValue_Boolean Callback_DeleteValue_Boolean;
typedef struct Opt_Callback_DeleteValue_Boolean Opt_Callback_DeleteValue_Boolean;
typedef struct Callback_DeleteValue_Void Callback_DeleteValue_Void;
typedef struct Opt_Callback_DeleteValue_Void Opt_Callback_DeleteValue_Void;
typedef struct Callback_DismissContentCoverAction_Void Callback_DismissContentCoverAction_Void;
typedef struct Opt_Callback_DismissContentCoverAction_Void Opt_Callback_DismissContentCoverAction_Void;
typedef struct Callback_DismissDialogAction_Void Callback_DismissDialogAction_Void;
typedef struct Opt_Callback_DismissDialogAction_Void Opt_Callback_DismissDialogAction_Void;
typedef struct Callback_DismissPopupAction_Void Callback_DismissPopupAction_Void;
typedef struct Opt_Callback_DismissPopupAction_Void Opt_Callback_DismissPopupAction_Void;
typedef struct Callback_DismissSheetAction_Void Callback_DismissSheetAction_Void;
typedef struct Opt_Callback_DismissSheetAction_Void Opt_Callback_DismissSheetAction_Void;
typedef struct Callback_DragEvent_Opt_String_Void Callback_DragEvent_Opt_String_Void;
typedef struct Opt_Callback_DragEvent_Opt_String_Void Opt_Callback_DragEvent_Opt_String_Void;
typedef struct Callback_DrawContext_CustomSpanDrawInfo_Void Callback_DrawContext_CustomSpanDrawInfo_Void;
typedef struct Opt_Callback_DrawContext_CustomSpanDrawInfo_Void Opt_Callback_DrawContext_CustomSpanDrawInfo_Void;
typedef struct Callback_DrawContext_Void Callback_DrawContext_Void;
typedef struct Opt_Callback_DrawContext_Void Opt_Callback_DrawContext_Void;
typedef struct Callback_EditableTextChangeValue_Boolean Callback_EditableTextChangeValue_Boolean;
typedef struct Opt_Callback_EditableTextChangeValue_Boolean Opt_Callback_EditableTextChangeValue_Boolean;
typedef struct Callback_EnterKeyType_Void Callback_EnterKeyType_Void;
typedef struct Opt_Callback_EnterKeyType_Void Opt_Callback_EnterKeyType_Void;
typedef struct Callback_ErrorInformation_Void Callback_ErrorInformation_Void;
typedef struct Opt_Callback_ErrorInformation_Void Opt_Callback_ErrorInformation_Void;
typedef struct Callback_Extender_OnFinish Callback_Extender_OnFinish;
typedef struct Opt_Callback_Extender_OnFinish Opt_Callback_Extender_OnFinish;
typedef struct Callback_Extender_OnProgress Callback_Extender_OnProgress;
typedef struct Opt_Callback_Extender_OnProgress Opt_Callback_Extender_OnProgress;
typedef struct Callback_FocusAxisEvent_Void Callback_FocusAxisEvent_Void;
typedef struct Opt_Callback_FocusAxisEvent_Void Opt_Callback_FocusAxisEvent_Void;
typedef struct Callback_FormCallbackInfo_Void Callback_FormCallbackInfo_Void;
typedef struct Opt_Callback_FormCallbackInfo_Void Opt_Callback_FormCallbackInfo_Void;
typedef struct Callback_FullscreenInfo_Void Callback_FullscreenInfo_Void;
typedef struct Opt_Callback_FullscreenInfo_Void Opt_Callback_FullscreenInfo_Void;
typedef struct Callback_GestureEvent_Void Callback_GestureEvent_Void;
typedef struct Opt_Callback_GestureEvent_Void Opt_Callback_GestureEvent_Void;
typedef struct Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult;
typedef struct Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult;
typedef struct Callback_GestureJudgeResult_Void Callback_GestureJudgeResult_Void;
typedef struct Opt_Callback_GestureJudgeResult_Void Opt_Callback_GestureJudgeResult_Void;
typedef struct Callback_GestureRecognizer_Void Callback_GestureRecognizer_Void;
typedef struct Opt_Callback_GestureRecognizer_Void Opt_Callback_GestureRecognizer_Void;
typedef struct Callback_HitTestMode_Void Callback_HitTestMode_Void;
typedef struct Opt_Callback_HitTestMode_Void Opt_Callback_HitTestMode_Void;
typedef struct Callback_HoverEvent_Void Callback_HoverEvent_Void;
typedef struct Opt_Callback_HoverEvent_Void Opt_Callback_HoverEvent_Void;
typedef struct Callback_InsertValue_Boolean Callback_InsertValue_Boolean;
typedef struct Opt_Callback_InsertValue_Boolean Opt_Callback_InsertValue_Boolean;
typedef struct Callback_InsertValue_Void Callback_InsertValue_Void;
typedef struct Opt_Callback_InsertValue_Void Opt_Callback_InsertValue_Void;
typedef struct Callback_ItemDragInfo_Number_Number_Boolean_Void Callback_ItemDragInfo_Number_Number_Boolean_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void;
typedef struct Callback_ItemDragInfo_Number_Number_Void Callback_ItemDragInfo_Number_Number_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Number_Void Opt_Callback_ItemDragInfo_Number_Number_Void;
typedef struct Callback_ItemDragInfo_Number_Void Callback_ItemDragInfo_Number_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Void Opt_Callback_ItemDragInfo_Number_Void;
typedef struct Callback_ItemDragInfo_Void Callback_ItemDragInfo_Void;
typedef struct Opt_Callback_ItemDragInfo_Void Opt_Callback_ItemDragInfo_Void;
typedef struct Callback_KeyEvent_Boolean Callback_KeyEvent_Boolean;
typedef struct Opt_Callback_KeyEvent_Boolean Opt_Callback_KeyEvent_Boolean;
typedef struct Callback_KeyEvent_Void Callback_KeyEvent_Void;
typedef struct Opt_Callback_KeyEvent_Void Opt_Callback_KeyEvent_Void;
typedef struct Callback_Map_String_Object_Void Callback_Map_String_Object_Void;
typedef struct Opt_Callback_Map_String_Object_Void Opt_Callback_Map_String_Object_Void;
typedef struct Callback_MarqueeState_Void Callback_MarqueeState_Void;
typedef struct Opt_Callback_MarqueeState_Void Opt_Callback_MarqueeState_Void;
typedef struct Callback_MouseEvent_Void Callback_MouseEvent_Void;
typedef struct Opt_Callback_MouseEvent_Void Opt_Callback_MouseEvent_Void;
typedef struct Callback_NativeEmbedDataInfo_Void Callback_NativeEmbedDataInfo_Void;
typedef struct Opt_Callback_NativeEmbedDataInfo_Void Opt_Callback_NativeEmbedDataInfo_Void;
typedef struct Callback_NativeEmbedTouchInfo_Void Callback_NativeEmbedTouchInfo_Void;
typedef struct Opt_Callback_NativeEmbedTouchInfo_Void Opt_Callback_NativeEmbedTouchInfo_Void;
typedef struct Callback_NavDestinationActiveReason_Void Callback_NavDestinationActiveReason_Void;
typedef struct Opt_Callback_NavDestinationActiveReason_Void Opt_Callback_NavDestinationActiveReason_Void;
typedef struct Callback_NavDestinationContext_Void Callback_NavDestinationContext_Void;
typedef struct Opt_Callback_NavDestinationContext_Void Opt_Callback_NavDestinationContext_Void;
typedef struct Callback_NavigationMode_Void Callback_NavigationMode_Void;
typedef struct Opt_Callback_NavigationMode_Void Opt_Callback_NavigationMode_Void;
typedef struct Callback_NavigationTitleMode_Void Callback_NavigationTitleMode_Void;
typedef struct Opt_Callback_NavigationTitleMode_Void Opt_Callback_NavigationTitleMode_Void;
typedef struct Callback_NavigationTransitionProxy_Void Callback_NavigationTransitionProxy_Void;
typedef struct Opt_Callback_NavigationTransitionProxy_Void Opt_Callback_NavigationTransitionProxy_Void;
typedef struct Callback_Number_Number_Boolean Callback_Number_Number_Boolean;
typedef struct Opt_Callback_Number_Number_Boolean Opt_Callback_Number_Number_Boolean;
typedef struct Callback_Number_Number_ComputedBarAttribute Callback_Number_Number_ComputedBarAttribute;
typedef struct Opt_Callback_Number_Number_ComputedBarAttribute Opt_Callback_Number_Number_ComputedBarAttribute;
typedef struct Callback_Number_Number_Number_Void Callback_Number_Number_Number_Void;
typedef struct Opt_Callback_Number_Number_Number_Void Opt_Callback_Number_Number_Number_Void;
typedef struct Callback_Number_Number_Void Callback_Number_Number_Void;
typedef struct Opt_Callback_Number_Number_Void Opt_Callback_Number_Number_Void;
typedef struct Callback_Number_SliderChangeMode_Void Callback_Number_SliderChangeMode_Void;
typedef struct Opt_Callback_Number_SliderChangeMode_Void Opt_Callback_Number_SliderChangeMode_Void;
typedef struct Callback_Number_Tuple_Number_Number Callback_Number_Tuple_Number_Number;
typedef struct Opt_Callback_Number_Tuple_Number_Number Opt_Callback_Number_Tuple_Number_Number;
typedef struct Callback_Number_Tuple_Number_Number_Number_Number Callback_Number_Tuple_Number_Number_Number_Number;
typedef struct Opt_Callback_Number_Tuple_Number_Number_Number_Number Opt_Callback_Number_Tuple_Number_Number_Number_Number;
typedef struct Callback_Number_Void Callback_Number_Void;
typedef struct Opt_Callback_Number_Void Opt_Callback_Number_Void;
typedef struct Callback_Object_Void Callback_Object_Void;
typedef struct Opt_Callback_Object_Void Opt_Callback_Object_Void;
typedef struct Callback_OnAlertEvent_Boolean Callback_OnAlertEvent_Boolean;
typedef struct Opt_Callback_OnAlertEvent_Boolean Opt_Callback_OnAlertEvent_Boolean;
typedef struct Callback_OnAudioStateChangedEvent_Void Callback_OnAudioStateChangedEvent_Void;
typedef struct Opt_Callback_OnAudioStateChangedEvent_Void Opt_Callback_OnAudioStateChangedEvent_Void;
typedef struct Callback_OnBeforeUnloadEvent_Boolean Callback_OnBeforeUnloadEvent_Boolean;
typedef struct Opt_Callback_OnBeforeUnloadEvent_Boolean Opt_Callback_OnBeforeUnloadEvent_Boolean;
typedef struct Callback_OnClientAuthenticationEvent_Void Callback_OnClientAuthenticationEvent_Void;
typedef struct Opt_Callback_OnClientAuthenticationEvent_Void Opt_Callback_OnClientAuthenticationEvent_Void;
typedef struct Callback_OnConfirmEvent_Boolean Callback_OnConfirmEvent_Boolean;
typedef struct Opt_Callback_OnConfirmEvent_Boolean Opt_Callback_OnConfirmEvent_Boolean;
typedef struct Callback_OnConsoleEvent_Boolean Callback_OnConsoleEvent_Boolean;
typedef struct Opt_Callback_OnConsoleEvent_Boolean Opt_Callback_OnConsoleEvent_Boolean;
typedef struct Callback_OnContextMenuShowEvent_Boolean Callback_OnContextMenuShowEvent_Boolean;
typedef struct Opt_Callback_OnContextMenuShowEvent_Boolean Opt_Callback_OnContextMenuShowEvent_Boolean;
typedef struct Callback_OnDataResubmittedEvent_Void Callback_OnDataResubmittedEvent_Void;
typedef struct Opt_Callback_OnDataResubmittedEvent_Void Opt_Callback_OnDataResubmittedEvent_Void;
typedef struct Callback_OnDownloadStartEvent_Void Callback_OnDownloadStartEvent_Void;
typedef struct Opt_Callback_OnDownloadStartEvent_Void Opt_Callback_OnDownloadStartEvent_Void;
typedef struct Callback_OnErrorReceiveEvent_Void Callback_OnErrorReceiveEvent_Void;
typedef struct Opt_Callback_OnErrorReceiveEvent_Void Opt_Callback_OnErrorReceiveEvent_Void;
typedef struct Callback_OnFaviconReceivedEvent_Void Callback_OnFaviconReceivedEvent_Void;
typedef struct Opt_Callback_OnFaviconReceivedEvent_Void Opt_Callback_OnFaviconReceivedEvent_Void;
typedef struct Callback_OnFirstContentfulPaintEvent_Void Callback_OnFirstContentfulPaintEvent_Void;
typedef struct Opt_Callback_OnFirstContentfulPaintEvent_Void Opt_Callback_OnFirstContentfulPaintEvent_Void;
typedef struct Callback_OnGeolocationShowEvent_Void Callback_OnGeolocationShowEvent_Void;
typedef struct Opt_Callback_OnGeolocationShowEvent_Void Opt_Callback_OnGeolocationShowEvent_Void;
typedef struct Callback_OnHttpAuthRequestEvent_Boolean Callback_OnHttpAuthRequestEvent_Boolean;
typedef struct Opt_Callback_OnHttpAuthRequestEvent_Boolean Opt_Callback_OnHttpAuthRequestEvent_Boolean;
typedef struct Callback_OnHttpErrorReceiveEvent_Void Callback_OnHttpErrorReceiveEvent_Void;
typedef struct Opt_Callback_OnHttpErrorReceiveEvent_Void Opt_Callback_OnHttpErrorReceiveEvent_Void;
typedef struct Callback_OnInterceptRequestEvent_WebResourceResponse Callback_OnInterceptRequestEvent_WebResourceResponse;
typedef struct Opt_Callback_OnInterceptRequestEvent_WebResourceResponse Opt_Callback_OnInterceptRequestEvent_WebResourceResponse;
typedef struct Callback_OnLoadInterceptEvent_Boolean Callback_OnLoadInterceptEvent_Boolean;
typedef struct Opt_Callback_OnLoadInterceptEvent_Boolean Opt_Callback_OnLoadInterceptEvent_Boolean;
typedef struct Callback_onMeasureSize_SizeResult Callback_onMeasureSize_SizeResult;
typedef struct Opt_Callback_onMeasureSize_SizeResult Opt_Callback_onMeasureSize_SizeResult;
typedef struct Callback_OnOverScrollEvent_Void Callback_OnOverScrollEvent_Void;
typedef struct Opt_Callback_OnOverScrollEvent_Void Opt_Callback_OnOverScrollEvent_Void;
typedef struct Callback_OnPageBeginEvent_Void Callback_OnPageBeginEvent_Void;
typedef struct Opt_Callback_OnPageBeginEvent_Void Opt_Callback_OnPageBeginEvent_Void;
typedef struct Callback_OnPageEndEvent_Void Callback_OnPageEndEvent_Void;
typedef struct Opt_Callback_OnPageEndEvent_Void Opt_Callback_OnPageEndEvent_Void;
typedef struct Callback_OnPageVisibleEvent_Void Callback_OnPageVisibleEvent_Void;
typedef struct Opt_Callback_OnPageVisibleEvent_Void Opt_Callback_OnPageVisibleEvent_Void;
typedef struct Callback_OnPermissionRequestEvent_Void Callback_OnPermissionRequestEvent_Void;
typedef struct Opt_Callback_OnPermissionRequestEvent_Void Opt_Callback_OnPermissionRequestEvent_Void;
typedef struct Callback_onPlaceChildren_Void Callback_onPlaceChildren_Void;
typedef struct Opt_Callback_onPlaceChildren_Void Opt_Callback_onPlaceChildren_Void;
typedef struct Callback_OnProgressChangeEvent_Void Callback_OnProgressChangeEvent_Void;
typedef struct Opt_Callback_OnProgressChangeEvent_Void Opt_Callback_OnProgressChangeEvent_Void;
typedef struct Callback_OnPromptEvent_Boolean Callback_OnPromptEvent_Boolean;
typedef struct Opt_Callback_OnPromptEvent_Boolean Opt_Callback_OnPromptEvent_Boolean;
typedef struct Callback_OnRefreshAccessedHistoryEvent_Void Callback_OnRefreshAccessedHistoryEvent_Void;
typedef struct Opt_Callback_OnRefreshAccessedHistoryEvent_Void Opt_Callback_OnRefreshAccessedHistoryEvent_Void;
typedef struct Callback_OnRenderExitedEvent_Void Callback_OnRenderExitedEvent_Void;
typedef struct Opt_Callback_OnRenderExitedEvent_Void Opt_Callback_OnRenderExitedEvent_Void;
typedef struct Callback_OnResourceLoadEvent_Void Callback_OnResourceLoadEvent_Void;
typedef struct Opt_Callback_OnResourceLoadEvent_Void Opt_Callback_OnResourceLoadEvent_Void;
typedef struct Callback_OnScaleChangeEvent_Void Callback_OnScaleChangeEvent_Void;
typedef struct Opt_Callback_OnScaleChangeEvent_Void Opt_Callback_OnScaleChangeEvent_Void;
typedef struct Callback_OnScreenCaptureRequestEvent_Void Callback_OnScreenCaptureRequestEvent_Void;
typedef struct Opt_Callback_OnScreenCaptureRequestEvent_Void Opt_Callback_OnScreenCaptureRequestEvent_Void;
typedef struct Callback_OnScrollEvent_Void Callback_OnScrollEvent_Void;
typedef struct Opt_Callback_OnScrollEvent_Void Opt_Callback_OnScrollEvent_Void;
typedef struct Callback_OnScrollFrameBeginHandlerResult_Void Callback_OnScrollFrameBeginHandlerResult_Void;
typedef struct Opt_Callback_OnScrollFrameBeginHandlerResult_Void Opt_Callback_OnScrollFrameBeginHandlerResult_Void;
typedef struct Callback_OnSearchResultReceiveEvent_Void Callback_OnSearchResultReceiveEvent_Void;
typedef struct Opt_Callback_OnSearchResultReceiveEvent_Void Opt_Callback_OnSearchResultReceiveEvent_Void;
typedef struct Callback_OnShowFileSelectorEvent_Boolean Callback_OnShowFileSelectorEvent_Boolean;
typedef struct Opt_Callback_OnShowFileSelectorEvent_Boolean Opt_Callback_OnShowFileSelectorEvent_Boolean;
typedef struct Callback_OnSslErrorEventReceiveEvent_Void Callback_OnSslErrorEventReceiveEvent_Void;
typedef struct Opt_Callback_OnSslErrorEventReceiveEvent_Void Opt_Callback_OnSslErrorEventReceiveEvent_Void;
typedef struct Callback_OnTitleReceiveEvent_Void Callback_OnTitleReceiveEvent_Void;
typedef struct Opt_Callback_OnTitleReceiveEvent_Void Opt_Callback_OnTitleReceiveEvent_Void;
typedef struct Callback_OnTouchIconUrlReceivedEvent_Void Callback_OnTouchIconUrlReceivedEvent_Void;
typedef struct Opt_Callback_OnTouchIconUrlReceivedEvent_Void Opt_Callback_OnTouchIconUrlReceivedEvent_Void;
typedef struct Callback_OnWindowNewEvent_Void Callback_OnWindowNewEvent_Void;
typedef struct Opt_Callback_OnWindowNewEvent_Void Opt_Callback_OnWindowNewEvent_Void;
typedef struct Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void Opt_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void;
typedef struct Callback_Opt_Array_NavDestinationTransition_Void Callback_Opt_Array_NavDestinationTransition_Void;
typedef struct Opt_Callback_Opt_Array_NavDestinationTransition_Void Opt_Callback_Opt_Array_NavDestinationTransition_Void;
typedef struct Callback_Opt_Array_String_Opt_Array_String_Void Callback_Opt_Array_String_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_String_Opt_Array_String_Void Opt_Callback_Opt_Array_String_Opt_Array_String_Void;
typedef struct Callback_Opt_Array_String_Void Callback_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_String_Void Opt_Callback_Opt_Array_String_Void;
typedef struct Callback_Opt_Boolean_Void Callback_Opt_Boolean_Void;
typedef struct Opt_Callback_Opt_Boolean_Void Opt_Callback_Opt_Boolean_Void;
typedef struct Callback_Opt_CustomBuilder_Void Callback_Opt_CustomBuilder_Void;
typedef struct Opt_Callback_Opt_CustomBuilder_Void Opt_Callback_Opt_CustomBuilder_Void;
typedef struct Callback_Opt_FontDescriptor_Opt_Array_String_Void Callback_Opt_FontDescriptor_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_FontDescriptor_Opt_Array_String_Void Opt_Callback_Opt_FontDescriptor_Opt_Array_String_Void;
typedef struct Callback_Opt_NavigationAnimatedTransition_Void Callback_Opt_NavigationAnimatedTransition_Void;
typedef struct Opt_Callback_Opt_NavigationAnimatedTransition_Void Opt_Callback_Opt_NavigationAnimatedTransition_Void;
typedef struct Callback_Opt_Number_Void Callback_Opt_Number_Void;
typedef struct Opt_Callback_Opt_Number_Void Opt_Callback_Opt_Number_Void;
typedef struct Callback_Opt_Object_Void Callback_Opt_Object_Void;
typedef struct Opt_Callback_Opt_Object_Void Opt_Callback_Opt_Object_Void;
typedef struct Callback_Opt_OffsetResult_Void Callback_Opt_OffsetResult_Void;
typedef struct Opt_Callback_Opt_OffsetResult_Void Opt_Callback_Opt_OffsetResult_Void;
typedef struct Callback_Opt_Scene_Opt_Array_String_Void Callback_Opt_Scene_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Scene_Opt_Array_String_Void Opt_Callback_Opt_Scene_Opt_Array_String_Void;
typedef struct Callback_Opt_ScrollResult_Void Callback_Opt_ScrollResult_Void;
typedef struct Opt_Callback_Opt_ScrollResult_Void Opt_Callback_Opt_ScrollResult_Void;
typedef struct Callback_Opt_String_Opt_Array_String_Void Callback_Opt_String_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_String_Opt_Array_String_Void Opt_Callback_Opt_String_Opt_Array_String_Void;
typedef struct Callback_Opt_StyledString_Opt_Array_String_Void Callback_Opt_StyledString_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_StyledString_Opt_Array_String_Void Opt_Callback_Opt_StyledString_Opt_Array_String_Void;
typedef struct Callback_Opt_TabContentAnimatedTransition_Void Callback_Opt_TabContentAnimatedTransition_Void;
typedef struct Opt_Callback_Opt_TabContentAnimatedTransition_Void Opt_Callback_Opt_TabContentAnimatedTransition_Void;
typedef struct Callback_Opt_Union_Number_Resource_Void Callback_Opt_Union_Number_Resource_Void;
typedef struct Opt_Callback_Opt_Union_Number_Resource_Void Opt_Callback_Opt_Union_Number_Resource_Void;
typedef struct Callback_Opt_Union_ResourceStr_String_Resource_Void Callback_Opt_Union_ResourceStr_String_Resource_Void;
typedef struct Opt_Callback_Opt_Union_ResourceStr_String_Resource_Void Opt_Callback_Opt_Union_ResourceStr_String_Resource_Void;
typedef struct Callback_PlaybackInfo_Void Callback_PlaybackInfo_Void;
typedef struct Opt_Callback_PlaybackInfo_Void Opt_Callback_PlaybackInfo_Void;
typedef struct Callback_Pointer_Void Callback_Pointer_Void;
typedef struct Opt_Callback_Pointer_Void Opt_Callback_Pointer_Void;
typedef struct Callback_PopInfo_Void Callback_PopInfo_Void;
typedef struct Opt_Callback_PopInfo_Void Opt_Callback_PopInfo_Void;
typedef struct Callback_PreDragStatus_Void Callback_PreDragStatus_Void;
typedef struct Opt_Callback_PreDragStatus_Void Opt_Callback_PreDragStatus_Void;
typedef struct Callback_PreparedInfo_Void Callback_PreparedInfo_Void;
typedef struct Opt_Callback_PreparedInfo_Void Opt_Callback_PreparedInfo_Void;
typedef struct Callback_RangeUpdate Callback_RangeUpdate;
typedef struct Opt_Callback_RangeUpdate Opt_Callback_RangeUpdate;
typedef struct Callback_RefreshStatus_Void Callback_RefreshStatus_Void;
typedef struct Opt_Callback_RefreshStatus_Void Opt_Callback_RefreshStatus_Void;
typedef struct Callback_RichEditorChangeValue_Boolean Callback_RichEditorChangeValue_Boolean;
typedef struct Opt_Callback_RichEditorChangeValue_Boolean Opt_Callback_RichEditorChangeValue_Boolean;
typedef struct Callback_RichEditorDeleteValue_Boolean Callback_RichEditorDeleteValue_Boolean;
typedef struct Opt_Callback_RichEditorDeleteValue_Boolean Opt_Callback_RichEditorDeleteValue_Boolean;
typedef struct Callback_RichEditorInsertValue_Boolean Callback_RichEditorInsertValue_Boolean;
typedef struct Opt_Callback_RichEditorInsertValue_Boolean Opt_Callback_RichEditorInsertValue_Boolean;
typedef struct Callback_RichEditorRange_Void Callback_RichEditorRange_Void;
typedef struct Opt_Callback_RichEditorRange_Void Opt_Callback_RichEditorRange_Void;
typedef struct Callback_RichEditorSelection_Void Callback_RichEditorSelection_Void;
typedef struct Opt_Callback_RichEditorSelection_Void Opt_Callback_RichEditorSelection_Void;
typedef struct Callback_RichEditorTextSpanResult_Void Callback_RichEditorTextSpanResult_Void;
typedef struct Opt_Callback_RichEditorTextSpanResult_Void Opt_Callback_RichEditorTextSpanResult_Void;
typedef struct Callback_RotationGesture Callback_RotationGesture;
typedef struct Opt_Callback_RotationGesture Opt_Callback_RotationGesture;
typedef struct Callback_RotationGesture_Void Callback_RotationGesture_Void;
typedef struct Opt_Callback_RotationGesture_Void Opt_Callback_RotationGesture_Void;
typedef struct Callback_SheetDismiss_Void Callback_SheetDismiss_Void;
typedef struct Opt_Callback_SheetDismiss_Void Opt_Callback_SheetDismiss_Void;
typedef struct Callback_SheetType_Void Callback_SheetType_Void;
typedef struct Opt_Callback_SheetType_Void Opt_Callback_SheetType_Void;
typedef struct Callback_SizeResult_Void Callback_SizeResult_Void;
typedef struct Opt_Callback_SizeResult_Void Opt_Callback_SizeResult_Void;
typedef struct Callback_SpringBackAction_Void Callback_SpringBackAction_Void;
typedef struct Opt_Callback_SpringBackAction_Void Opt_Callback_SpringBackAction_Void;
typedef struct Callback_StateStylesChange Callback_StateStylesChange;
typedef struct Opt_Callback_StateStylesChange Opt_Callback_StateStylesChange;
typedef struct Callback_String_PasteEvent_Void Callback_String_PasteEvent_Void;
typedef struct Opt_Callback_String_PasteEvent_Void Opt_Callback_String_PasteEvent_Void;
typedef struct Callback_String_SurfaceRect_Void Callback_String_SurfaceRect_Void;
typedef struct Opt_Callback_String_SurfaceRect_Void Opt_Callback_String_SurfaceRect_Void;
typedef struct Callback_String_Void Callback_String_Void;
typedef struct Opt_Callback_String_Void Opt_Callback_String_Void;
typedef struct Callback_StyledStringChangeValue_Boolean Callback_StyledStringChangeValue_Boolean;
typedef struct Opt_Callback_StyledStringChangeValue_Boolean Opt_Callback_StyledStringChangeValue_Boolean;
typedef struct Callback_StyledStringMarshallingValue_Void Callback_StyledStringMarshallingValue_Void;
typedef struct Opt_Callback_StyledStringMarshallingValue_Void Opt_Callback_StyledStringMarshallingValue_Void;
typedef struct Callback_SwipeActionState_Void Callback_SwipeActionState_Void;
typedef struct Opt_Callback_SwipeActionState_Void Opt_Callback_SwipeActionState_Void;
typedef struct Callback_SwipeGesture Callback_SwipeGesture;
typedef struct Opt_Callback_SwipeGesture Opt_Callback_SwipeGesture;
typedef struct Callback_SwipeGesture_Void Callback_SwipeGesture_Void;
typedef struct Opt_Callback_SwipeGesture_Void Opt_Callback_SwipeGesture_Void;
typedef struct Callback_SwiperContentTransitionProxy_Void Callback_SwiperContentTransitionProxy_Void;
typedef struct Opt_Callback_SwiperContentTransitionProxy_Void Opt_Callback_SwiperContentTransitionProxy_Void;
typedef struct Callback_T Callback_T;
typedef struct Opt_Callback_T Opt_Callback_T;
typedef struct Callback_T_Void Callback_T_Void;
typedef struct Opt_Callback_T_Void Opt_Callback_T_Void;
typedef struct Callback_TabContentTransitionProxy_Void Callback_TabContentTransitionProxy_Void;
typedef struct Opt_Callback_TabContentTransitionProxy_Void Opt_Callback_TabContentTransitionProxy_Void;
typedef struct Callback_TerminationInfo_Void Callback_TerminationInfo_Void;
typedef struct Opt_Callback_TerminationInfo_Void Opt_Callback_TerminationInfo_Void;
typedef struct Callback_TextPickerResult_Void Callback_TextPickerResult_Void;
typedef struct Opt_Callback_TextPickerResult_Void Opt_Callback_TextPickerResult_Void;
typedef struct Callback_TextRange_Void Callback_TextRange_Void;
typedef struct Opt_Callback_TextRange_Void Opt_Callback_TextRange_Void;
typedef struct Callback_TimePickerResult_Void Callback_TimePickerResult_Void;
typedef struct Opt_Callback_TimePickerResult_Void Opt_Callback_TimePickerResult_Void;
typedef struct Callback_TouchEvent_HitTestMode Callback_TouchEvent_HitTestMode;
typedef struct Opt_Callback_TouchEvent_HitTestMode Opt_Callback_TouchEvent_HitTestMode;
typedef struct Callback_TouchEvent_Void Callback_TouchEvent_Void;
typedef struct Opt_Callback_TouchEvent_Void Opt_Callback_TouchEvent_Void;
typedef struct Callback_TouchResult_Void Callback_TouchResult_Void;
typedef struct Opt_Callback_TouchResult_Void Opt_Callback_TouchResult_Void;
typedef struct Callback_Tuple_Number_Number_Number_Number_Void Callback_Tuple_Number_Number_Number_Number_Void;
typedef struct Opt_Callback_Tuple_Number_Number_Number_Number_Void Opt_Callback_Tuple_Number_Number_Number_Number_Void;
typedef struct Callback_Tuple_Number_Number_Void Callback_Tuple_Number_Number_Void;
typedef struct Opt_Callback_Tuple_Number_Number_Void Opt_Callback_Tuple_Number_Number_Void;
typedef struct Callback_UIExtensionProxy_Void Callback_UIExtensionProxy_Void;
typedef struct Opt_Callback_UIExtensionProxy_Void Opt_Callback_UIExtensionProxy_Void;
typedef struct Callback_Union_CustomBuilder_DragItemInfo_Void Callback_Union_CustomBuilder_DragItemInfo_Void;
typedef struct Opt_Callback_Union_CustomBuilder_DragItemInfo_Void Opt_Callback_Union_CustomBuilder_DragItemInfo_Void;
typedef struct Callback_Union_Number_Array_Number_Void Callback_Union_Number_Array_Number_Void;
typedef struct Opt_Callback_Union_Number_Array_Number_Void Opt_Callback_Union_Number_Array_Number_Void;
typedef struct Callback_Union_ResourceStr_Array_ResourceStr_Void Callback_Union_ResourceStr_Array_ResourceStr_Void;
typedef struct Opt_Callback_Union_ResourceStr_Array_ResourceStr_Void Opt_Callback_Union_ResourceStr_Array_ResourceStr_Void;
typedef struct Callback_Union_ResourceStr_Resource_String_Void Callback_Union_ResourceStr_Resource_String_Void;
typedef struct Opt_Callback_Union_ResourceStr_Resource_String_Void Opt_Callback_Union_ResourceStr_Resource_String_Void;
typedef struct Callback_Void Callback_Void;
typedef struct Opt_Callback_Void Opt_Callback_Void;
typedef struct Callback_WebKeyboardOptions_Void Callback_WebKeyboardOptions_Void;
typedef struct Opt_Callback_WebKeyboardOptions_Void Opt_Callback_WebKeyboardOptions_Void;
typedef struct Callback_WebResourceResponse_Void Callback_WebResourceResponse_Void;
typedef struct Opt_Callback_WebResourceResponse_Void Opt_Callback_WebResourceResponse_Void;
typedef struct CheckBoxModifierBuilder CheckBoxModifierBuilder;
typedef struct Opt_CheckBoxModifierBuilder Opt_CheckBoxModifierBuilder;
typedef struct CompatibleInitCallback CompatibleInitCallback;
typedef struct Opt_CompatibleInitCallback Opt_CompatibleInitCallback;
typedef struct CompatibleUpdateCallback CompatibleUpdateCallback;
typedef struct Opt_CompatibleUpdateCallback Opt_CompatibleUpdateCallback;
typedef struct ContentDidScrollCallback ContentDidScrollCallback;
typedef struct Opt_ContentDidScrollCallback Opt_ContentDidScrollCallback;
typedef struct ContentWillScrollCallback ContentWillScrollCallback;
typedef struct Opt_ContentWillScrollCallback Opt_ContentWillScrollCallback;
typedef struct Context_getGroupDir_Callback Context_getGroupDir_Callback;
typedef struct Opt_Context_getGroupDir_Callback Opt_Context_getGroupDir_Callback;
typedef struct CustomNodeBuilder CustomNodeBuilder;
typedef struct Opt_CustomNodeBuilder Opt_CustomNodeBuilder;
typedef struct CustomStyles CustomStyles;
typedef struct Opt_CustomStyles Opt_CustomStyles;
typedef struct DataPanelModifierBuilder DataPanelModifierBuilder;
typedef struct Opt_DataPanelModifierBuilder Opt_DataPanelModifierBuilder;
typedef struct EditableTextOnChangeCallback EditableTextOnChangeCallback;
typedef struct Opt_EditableTextOnChangeCallback Opt_EditableTextOnChangeCallback;
typedef struct ErrorCallback ErrorCallback;
typedef struct Opt_ErrorCallback Opt_ErrorCallback;
typedef struct GaugeModifierBuilder GaugeModifierBuilder;
typedef struct Opt_GaugeModifierBuilder Opt_GaugeModifierBuilder;
typedef struct GestureRecognizerJudgeBeginCallback GestureRecognizerJudgeBeginCallback;
typedef struct Opt_GestureRecognizerJudgeBeginCallback Opt_GestureRecognizerJudgeBeginCallback;
typedef struct GetItemMainSizeByIndex GetItemMainSizeByIndex;
typedef struct Opt_GetItemMainSizeByIndex Opt_GetItemMainSizeByIndex;
typedef struct HoverCallback HoverCallback;
typedef struct Opt_HoverCallback Opt_HoverCallback;
typedef struct ImageCompleteCallback ImageCompleteCallback;
typedef struct Opt_ImageCompleteCallback Opt_ImageCompleteCallback;
typedef struct ImageErrorCallback ImageErrorCallback;
typedef struct Opt_ImageErrorCallback Opt_ImageErrorCallback;
typedef struct ImageOnCompleteCallback ImageOnCompleteCallback;
typedef struct Opt_ImageOnCompleteCallback Opt_ImageOnCompleteCallback;
typedef struct InterceptionModeCallback InterceptionModeCallback;
typedef struct Opt_InterceptionModeCallback Opt_InterceptionModeCallback;
typedef struct InterceptionShowCallback InterceptionShowCallback;
typedef struct Opt_InterceptionShowCallback Opt_InterceptionShowCallback;
typedef struct LoadingProgressModifierBuilder LoadingProgressModifierBuilder;
typedef struct Opt_LoadingProgressModifierBuilder Opt_LoadingProgressModifierBuilder;
typedef struct Map_AxisModel_Number Map_AxisModel_Number;
typedef struct Opt_Map_AxisModel_Number Opt_Map_AxisModel_Number;
typedef struct Map_Number_text_RunMetrics Map_Number_text_RunMetrics;
typedef struct Opt_Map_Number_text_RunMetrics Opt_Map_Number_text_RunMetrics;
typedef struct Map_String_ComponentContent Map_String_ComponentContent;
typedef struct Opt_Map_String_ComponentContent Opt_Map_String_ComponentContent;
typedef struct Map_String_Int64 Map_String_Int64;
typedef struct Opt_Map_String_Int64 Opt_Map_String_Int64;
typedef struct Map_String_Object Map_String_Object;
typedef struct Opt_Map_String_Object Opt_Map_String_Object;
typedef struct Map_String_String Map_String_String;
typedef struct Opt_Map_String_String Opt_Map_String_String;
typedef struct MenuCallback MenuCallback;
typedef struct Opt_MenuCallback Opt_MenuCallback;
typedef struct MenuItemModifierBuilder MenuItemModifierBuilder;
typedef struct Opt_MenuItemModifierBuilder Opt_MenuItemModifierBuilder;
typedef struct MenuOnAppearCallback MenuOnAppearCallback;
typedef struct Opt_MenuOnAppearCallback Opt_MenuOnAppearCallback;
typedef struct ModifierKeyStateGetter ModifierKeyStateGetter;
typedef struct Opt_ModifierKeyStateGetter Opt_ModifierKeyStateGetter;
typedef struct NavDestinationTransitionDelegate NavDestinationTransitionDelegate;
typedef struct Opt_NavDestinationTransitionDelegate Opt_NavDestinationTransitionDelegate;
typedef struct NavExtender_OnUpdateStack NavExtender_OnUpdateStack;
typedef struct Opt_NavExtender_OnUpdateStack Opt_NavExtender_OnUpdateStack;
typedef struct OnAdsBlockedCallback OnAdsBlockedCallback;
typedef struct Opt_OnAdsBlockedCallback Opt_OnAdsBlockedCallback;
typedef struct OnAlphabetIndexerPopupSelectCallback OnAlphabetIndexerPopupSelectCallback;
typedef struct Opt_OnAlphabetIndexerPopupSelectCallback Opt_OnAlphabetIndexerPopupSelectCallback;
typedef struct OnAlphabetIndexerRequestPopupDataCallback OnAlphabetIndexerRequestPopupDataCallback;
typedef struct Opt_OnAlphabetIndexerRequestPopupDataCallback Opt_OnAlphabetIndexerRequestPopupDataCallback;
typedef struct OnAlphabetIndexerSelectCallback OnAlphabetIndexerSelectCallback;
typedef struct Opt_OnAlphabetIndexerSelectCallback Opt_OnAlphabetIndexerSelectCallback;
typedef struct OnCheckboxChangeCallback OnCheckboxChangeCallback;
typedef struct Opt_OnCheckboxChangeCallback Opt_OnCheckboxChangeCallback;
typedef struct OnCheckboxGroupChangeCallback OnCheckboxGroupChangeCallback;
typedef struct Opt_OnCheckboxGroupChangeCallback Opt_OnCheckboxGroupChangeCallback;
typedef struct OnContentScrollCallback OnContentScrollCallback;
typedef struct Opt_OnContentScrollCallback Opt_OnContentScrollCallback;
typedef struct OnContextMenuHideCallback OnContextMenuHideCallback;
typedef struct Opt_OnContextMenuHideCallback Opt_OnContextMenuHideCallback;
typedef struct OnCreateMenuCallback OnCreateMenuCallback;
typedef struct Opt_OnCreateMenuCallback Opt_OnCreateMenuCallback;
typedef struct OnDidChangeCallback OnDidChangeCallback;
typedef struct Opt_OnDidChangeCallback Opt_OnDidChangeCallback;
typedef struct OnDragEventCallback OnDragEventCallback;
typedef struct Opt_OnDragEventCallback Opt_OnDragEventCallback;
typedef struct OnFirstMeaningfulPaintCallback OnFirstMeaningfulPaintCallback;
typedef struct Opt_OnFirstMeaningfulPaintCallback Opt_OnFirstMeaningfulPaintCallback;
typedef struct OnFoldStatusChangeCallback OnFoldStatusChangeCallback;
typedef struct Opt_OnFoldStatusChangeCallback Opt_OnFoldStatusChangeCallback;
typedef struct OnFullScreenEnterCallback OnFullScreenEnterCallback;
typedef struct Opt_OnFullScreenEnterCallback Opt_OnFullScreenEnterCallback;
typedef struct OnHoverCallback OnHoverCallback;
typedef struct Opt_OnHoverCallback Opt_OnHoverCallback;
typedef struct OnHoverStatusChangeCallback OnHoverStatusChangeCallback;
typedef struct Opt_OnHoverStatusChangeCallback Opt_OnHoverStatusChangeCallback;
typedef struct OnIntelligentTrackingPreventionCallback OnIntelligentTrackingPreventionCallback;
typedef struct Opt_OnIntelligentTrackingPreventionCallback Opt_OnIntelligentTrackingPreventionCallback;
typedef struct OnItemDragStartCallback OnItemDragStartCallback;
typedef struct Opt_OnItemDragStartCallback Opt_OnItemDragStartCallback;
typedef struct OnLargestContentfulPaintCallback OnLargestContentfulPaintCallback;
typedef struct Opt_OnLargestContentfulPaintCallback Opt_OnLargestContentfulPaintCallback;
typedef struct OnLinearIndicatorChangeCallback OnLinearIndicatorChangeCallback;
typedef struct Opt_OnLinearIndicatorChangeCallback Opt_OnLinearIndicatorChangeCallback;
typedef struct OnMenuItemClickCallback OnMenuItemClickCallback;
typedef struct Opt_OnMenuItemClickCallback Opt_OnMenuItemClickCallback;
typedef struct OnMoveHandler OnMoveHandler;
typedef struct Opt_OnMoveHandler Opt_OnMoveHandler;
typedef struct OnNativeEmbedVisibilityChangeCallback OnNativeEmbedVisibilityChangeCallback;
typedef struct Opt_OnNativeEmbedVisibilityChangeCallback Opt_OnNativeEmbedVisibilityChangeCallback;
typedef struct OnNativeLoadCallback OnNativeLoadCallback;
typedef struct Opt_OnNativeLoadCallback Opt_OnNativeLoadCallback;
typedef struct OnNavigationEntryCommittedCallback OnNavigationEntryCommittedCallback;
typedef struct Opt_OnNavigationEntryCommittedCallback Opt_OnNavigationEntryCommittedCallback;
typedef struct OnOverrideUrlLoadingCallback OnOverrideUrlLoadingCallback;
typedef struct Opt_OnOverrideUrlLoadingCallback Opt_OnOverrideUrlLoadingCallback;
typedef struct OnPasteCallback OnPasteCallback;
typedef struct Opt_OnPasteCallback Opt_OnPasteCallback;
typedef struct OnRadioChangeCallback OnRadioChangeCallback;
typedef struct Opt_OnRadioChangeCallback Opt_OnRadioChangeCallback;
typedef struct OnRatingChangeCallback OnRatingChangeCallback;
typedef struct Opt_OnRatingChangeCallback Opt_OnRatingChangeCallback;
typedef struct OnRenderProcessNotRespondingCallback OnRenderProcessNotRespondingCallback;
typedef struct Opt_OnRenderProcessNotRespondingCallback Opt_OnRenderProcessNotRespondingCallback;
typedef struct OnRenderProcessRespondingCallback OnRenderProcessRespondingCallback;
typedef struct Opt_OnRenderProcessRespondingCallback Opt_OnRenderProcessRespondingCallback;
typedef struct OnSafeBrowsingCheckResultCallback OnSafeBrowsingCheckResultCallback;
typedef struct Opt_OnSafeBrowsingCheckResultCallback Opt_OnSafeBrowsingCheckResultCallback;
typedef struct OnScrollCallback OnScrollCallback;
typedef struct Opt_OnScrollCallback Opt_OnScrollCallback;
typedef struct OnScrollEdgeCallback OnScrollEdgeCallback;
typedef struct Opt_OnScrollEdgeCallback Opt_OnScrollEdgeCallback;
typedef struct OnScrollFrameBeginCallback OnScrollFrameBeginCallback;
typedef struct Opt_OnScrollFrameBeginCallback Opt_OnScrollFrameBeginCallback;
typedef struct OnScrollVisibleContentChangeCallback OnScrollVisibleContentChangeCallback;
typedef struct Opt_OnScrollVisibleContentChangeCallback Opt_OnScrollVisibleContentChangeCallback;
typedef struct OnSelectCallback OnSelectCallback;
typedef struct Opt_OnSelectCallback Opt_OnSelectCallback;
typedef struct OnSslErrorEventCallback OnSslErrorEventCallback;
typedef struct Opt_OnSslErrorEventCallback Opt_OnSslErrorEventCallback;
typedef struct OnSubmitCallback OnSubmitCallback;
typedef struct Opt_OnSubmitCallback Opt_OnSubmitCallback;
typedef struct OnSwiperAnimationEndCallback OnSwiperAnimationEndCallback;
typedef struct Opt_OnSwiperAnimationEndCallback Opt_OnSwiperAnimationEndCallback;
typedef struct OnSwiperAnimationStartCallback OnSwiperAnimationStartCallback;
typedef struct Opt_OnSwiperAnimationStartCallback Opt_OnSwiperAnimationStartCallback;
typedef struct OnSwiperGestureSwipeCallback OnSwiperGestureSwipeCallback;
typedef struct Opt_OnSwiperGestureSwipeCallback Opt_OnSwiperGestureSwipeCallback;
typedef struct OnTabsAnimationEndCallback OnTabsAnimationEndCallback;
typedef struct Opt_OnTabsAnimationEndCallback Opt_OnTabsAnimationEndCallback;
typedef struct OnTabsAnimationStartCallback OnTabsAnimationStartCallback;
typedef struct Opt_OnTabsAnimationStartCallback Opt_OnTabsAnimationStartCallback;
typedef struct OnTabsContentWillChangeCallback OnTabsContentWillChangeCallback;
typedef struct Opt_OnTabsContentWillChangeCallback Opt_OnTabsContentWillChangeCallback;
typedef struct OnTabsGestureSwipeCallback OnTabsGestureSwipeCallback;
typedef struct Opt_OnTabsGestureSwipeCallback Opt_OnTabsGestureSwipeCallback;
typedef struct OnTextPickerChangeCallback OnTextPickerChangeCallback;
typedef struct Opt_OnTextPickerChangeCallback Opt_OnTextPickerChangeCallback;
typedef struct OnTextSelectionChangeCallback OnTextSelectionChangeCallback;
typedef struct Opt_OnTextSelectionChangeCallback Opt_OnTextSelectionChangeCallback;
typedef struct OnTimePickerChangeCallback OnTimePickerChangeCallback;
typedef struct Opt_OnTimePickerChangeCallback Opt_OnTimePickerChangeCallback;
typedef struct OnViewportFitChangedCallback OnViewportFitChangedCallback;
typedef struct Opt_OnViewportFitChangedCallback Opt_OnViewportFitChangedCallback;
typedef struct OnWillScrollCallback OnWillScrollCallback;
typedef struct Opt_OnWillScrollCallback Opt_OnWillScrollCallback;
typedef struct PageMapBuilder PageMapBuilder;
typedef struct Opt_PageMapBuilder Opt_PageMapBuilder;
typedef struct PageTransitionCallback PageTransitionCallback;
typedef struct Opt_PageTransitionCallback Opt_PageTransitionCallback;
typedef struct PasteEventCallback PasteEventCallback;
typedef struct Opt_PasteEventCallback Opt_PasteEventCallback;
typedef struct PluginErrorCallback PluginErrorCallback;
typedef struct Opt_PluginErrorCallback Opt_PluginErrorCallback;
typedef struct PopupStateChangeCallback PopupStateChangeCallback;
typedef struct Opt_PopupStateChangeCallback Opt_PopupStateChangeCallback;
typedef struct Profiler_Callback_String_Void Profiler_Callback_String_Void;
typedef struct Opt_Profiler_Callback_String_Void Opt_Profiler_Callback_String_Void;
typedef struct ProgressModifierBuilder ProgressModifierBuilder;
typedef struct Opt_ProgressModifierBuilder Opt_ProgressModifierBuilder;
typedef struct RadioModifierBuilder RadioModifierBuilder;
typedef struct Opt_RadioModifierBuilder Opt_RadioModifierBuilder;
typedef struct RatingModifierBuilder RatingModifierBuilder;
typedef struct Opt_RatingModifierBuilder Opt_RatingModifierBuilder;
typedef struct RestrictedWorker_onerror_Callback RestrictedWorker_onerror_Callback;
typedef struct Opt_RestrictedWorker_onerror_Callback Opt_RestrictedWorker_onerror_Callback;
typedef struct RestrictedWorker_onexit_Callback RestrictedWorker_onexit_Callback;
typedef struct Opt_RestrictedWorker_onexit_Callback Opt_RestrictedWorker_onexit_Callback;
typedef struct RestrictedWorker_onmessage_Callback RestrictedWorker_onmessage_Callback;
typedef struct Opt_RestrictedWorker_onmessage_Callback Opt_RestrictedWorker_onmessage_Callback;
typedef struct ReuseIdCallback ReuseIdCallback;
typedef struct Opt_ReuseIdCallback Opt_ReuseIdCallback;
typedef struct ScrollOnScrollCallback ScrollOnScrollCallback;
typedef struct Opt_ScrollOnScrollCallback Opt_ScrollOnScrollCallback;
typedef struct ScrollOnWillScrollCallback ScrollOnWillScrollCallback;
typedef struct Opt_ScrollOnWillScrollCallback Opt_ScrollOnWillScrollCallback;
typedef struct SearchSubmitCallback SearchSubmitCallback;
typedef struct Opt_SearchSubmitCallback Opt_SearchSubmitCallback;
typedef struct SearchValueCallback SearchValueCallback;
typedef struct Opt_SearchValueCallback Opt_SearchValueCallback;
typedef struct ShouldBuiltInRecognizerParallelWithCallback ShouldBuiltInRecognizerParallelWithCallback;
typedef struct Opt_ShouldBuiltInRecognizerParallelWithCallback Opt_ShouldBuiltInRecognizerParallelWithCallback;
typedef struct SizeChangeCallback SizeChangeCallback;
typedef struct Opt_SizeChangeCallback Opt_SizeChangeCallback;
typedef struct SliderModifierBuilder SliderModifierBuilder;
typedef struct Opt_SliderModifierBuilder Opt_SliderModifierBuilder;
typedef struct SliderTriggerChangeCallback SliderTriggerChangeCallback;
typedef struct Opt_SliderTriggerChangeCallback Opt_SliderTriggerChangeCallback;
typedef struct StyledStringMarshallCallback StyledStringMarshallCallback;
typedef struct Opt_StyledStringMarshallCallback Opt_StyledStringMarshallCallback;
typedef struct StyledStringUnmarshallCallback StyledStringUnmarshallCallback;
typedef struct Opt_StyledStringUnmarshallCallback Opt_StyledStringUnmarshallCallback;
typedef struct SubmitCallback SubmitCallback;
typedef struct Opt_SubmitCallback Opt_SubmitCallback;
typedef struct TabsCustomContentTransitionCallback TabsCustomContentTransitionCallback;
typedef struct Opt_TabsCustomContentTransitionCallback Opt_TabsCustomContentTransitionCallback;
typedef struct text_Callback_Number_Number_Boolean_Boolean text_Callback_Number_Number_Boolean_Boolean;
typedef struct Opt_text_Callback_Number_Number_Boolean_Boolean Opt_text_Callback_Number_Number_Boolean_Boolean;
typedef struct TextAreaSubmitCallback TextAreaSubmitCallback;
typedef struct Opt_TextAreaSubmitCallback Opt_TextAreaSubmitCallback;
typedef struct TextClockModifierBuilder TextClockModifierBuilder;
typedef struct Opt_TextClockModifierBuilder Opt_TextClockModifierBuilder;
typedef struct TextFieldValueCallback TextFieldValueCallback;
typedef struct Opt_TextFieldValueCallback Opt_TextFieldValueCallback;
typedef struct TextPickerEnterSelectedAreaCallback TextPickerEnterSelectedAreaCallback;
typedef struct Opt_TextPickerEnterSelectedAreaCallback Opt_TextPickerEnterSelectedAreaCallback;
typedef struct TextPickerScrollStopCallback TextPickerScrollStopCallback;
typedef struct Opt_TextPickerScrollStopCallback Opt_TextPickerScrollStopCallback;
typedef struct TextTimerModifierBuilder TextTimerModifierBuilder;
typedef struct Opt_TextTimerModifierBuilder Opt_TextTimerModifierBuilder;
typedef struct ToggleModifierBuilder ToggleModifierBuilder;
typedef struct Opt_ToggleModifierBuilder Opt_ToggleModifierBuilder;
typedef struct TransitionFinishCallback TransitionFinishCallback;
typedef struct Opt_TransitionFinishCallback Opt_TransitionFinishCallback;
typedef struct Type_CommonMethod_onDragStart Type_CommonMethod_onDragStart;
typedef struct Opt_Type_CommonMethod_onDragStart Opt_Type_CommonMethod_onDragStart;
typedef struct Type_NavigationAttribute_customNavContentTransition Type_NavigationAttribute_customNavContentTransition;
typedef struct Opt_Type_NavigationAttribute_customNavContentTransition Opt_Type_NavigationAttribute_customNavContentTransition;
typedef struct UpdateTransitionCallback UpdateTransitionCallback;
typedef struct Opt_UpdateTransitionCallback Opt_UpdateTransitionCallback;
typedef struct VisibleAreaChangeCallback VisibleAreaChangeCallback;
typedef struct Opt_VisibleAreaChangeCallback Opt_VisibleAreaChangeCallback;
typedef struct VoidCallback VoidCallback;
typedef struct Opt_VoidCallback Opt_VoidCallback;
typedef struct WebKeyboardCallback WebKeyboardCallback;
typedef struct Opt_WebKeyboardCallback Opt_WebKeyboardCallback;
typedef struct Ark_AccessibilityOptions Ark_AccessibilityOptions;
typedef struct Opt_AccessibilityOptions Opt_AccessibilityOptions;
typedef struct Ark_AdsBlockedDetails Ark_AdsBlockedDetails;
typedef struct Opt_AdsBlockedDetails Opt_AdsBlockedDetails;
typedef struct Ark_AlignRuleOption Ark_AlignRuleOption;
typedef struct Opt_AlignRuleOption Opt_AlignRuleOption;
typedef struct Ark_AlphabetIndexerOptions Ark_AlphabetIndexerOptions;
typedef struct Opt_AlphabetIndexerOptions Opt_AlphabetIndexerOptions;
typedef struct Ark_AnimationNumberRange Ark_AnimationNumberRange;
typedef struct Opt_AnimationNumberRange Opt_AnimationNumberRange;
typedef struct AppearSymbolEffectPeer AppearSymbolEffectPeer;
typedef struct AppearSymbolEffectPeer* Ark_AppearSymbolEffect;
typedef struct Opt_AppearSymbolEffect Opt_AppearSymbolEffect;
typedef struct Ark_ASTCResource Ark_ASTCResource;
typedef struct Opt_ASTCResource Opt_ASTCResource;
typedef struct Ark_AutoPlayOptions Ark_AutoPlayOptions;
typedef struct Opt_AutoPlayOptions Opt_AutoPlayOptions;
typedef struct Ark_BackgroundBrightnessOptions Ark_BackgroundBrightnessOptions;
typedef struct Opt_BackgroundBrightnessOptions Opt_BackgroundBrightnessOptions;
typedef struct Ark_BackgroundImageOptions Ark_BackgroundImageOptions;
typedef struct Opt_BackgroundImageOptions Opt_BackgroundImageOptions;
typedef struct Ark_BackgroundOptions Ark_BackgroundOptions;
typedef struct Opt_BackgroundOptions Opt_BackgroundOptions;
typedef struct Ark_BarrierStyle Ark_BarrierStyle;
typedef struct Opt_BarrierStyle Opt_BarrierStyle;
typedef struct BaselineOffsetStylePeer BaselineOffsetStylePeer;
typedef struct BaselineOffsetStylePeer* Ark_BaselineOffsetStyle;
typedef struct Opt_BaselineOffsetStyle Opt_BaselineOffsetStyle;
typedef struct Ark_Bias Ark_Bias;
typedef struct Opt_Bias Opt_Bias;
typedef struct Ark_BlurOptions Ark_BlurOptions;
typedef struct Opt_BlurOptions Opt_BlurOptions;
typedef struct Ark_BorderRadiuses_graphics Ark_BorderRadiuses_graphics;
typedef struct Opt_BorderRadiuses_graphics Opt_BorderRadiuses_graphics;
typedef struct BounceSymbolEffectPeer BounceSymbolEffectPeer;
typedef struct BounceSymbolEffectPeer* Ark_BounceSymbolEffect;
typedef struct Opt_BounceSymbolEffect Opt_BounceSymbolEffect;
typedef struct Ark_BreakPoints Ark_BreakPoints;
typedef struct Opt_BreakPoints Opt_BreakPoints;
typedef struct Ark_BuilderNodeOptions Ark_BuilderNodeOptions;
typedef struct Opt_BuilderNodeOptions Opt_BuilderNodeOptions;
typedef struct Ark_BusinessError Ark_BusinessError;
typedef struct Opt_BusinessError Opt_BusinessError;
typedef struct Ark_ButtonConfiguration Ark_ButtonConfiguration;
typedef struct Opt_ButtonConfiguration Opt_ButtonConfiguration;
typedef struct Ark_ButtonOptions Ark_ButtonOptions;
typedef struct Opt_ButtonOptions Opt_ButtonOptions;
typedef struct Ark_CancelButtonSymbolOptions Ark_CancelButtonSymbolOptions;
typedef struct Opt_CancelButtonSymbolOptions Opt_CancelButtonSymbolOptions;
typedef struct Ark_CaretOffset Ark_CaretOffset;
typedef struct Opt_CaretOffset Opt_CaretOffset;
typedef struct Ark_ChainWeightOptions Ark_ChainWeightOptions;
typedef struct Opt_ChainWeightOptions Opt_ChainWeightOptions;
typedef struct Ark_CheckBoxConfiguration Ark_CheckBoxConfiguration;
typedef struct Opt_CheckBoxConfiguration Opt_CheckBoxConfiguration;
typedef struct Ark_CheckboxGroupOptions Ark_CheckboxGroupOptions;
typedef struct Opt_CheckboxGroupOptions Opt_CheckboxGroupOptions;
typedef struct Ark_CheckboxGroupResult Ark_CheckboxGroupResult;
typedef struct Opt_CheckboxGroupResult Opt_CheckboxGroupResult;
typedef struct Ark_CheckboxOptions Ark_CheckboxOptions;
typedef struct Opt_CheckboxOptions Opt_CheckboxOptions;
typedef struct ChildrenMainSizePeer ChildrenMainSizePeer;
typedef struct ChildrenMainSizePeer* Ark_ChildrenMainSize;
typedef struct Opt_ChildrenMainSize Opt_ChildrenMainSize;
typedef struct Ark_Circle Ark_Circle;
typedef struct Opt_Circle Opt_Circle;
typedef struct Ark_ClickEffect Ark_ClickEffect;
typedef struct Opt_ClickEffect Opt_ClickEffect;
typedef struct Ark_CloseSwipeActionOptions Ark_CloseSwipeActionOptions;
typedef struct Opt_CloseSwipeActionOptions Opt_CloseSwipeActionOptions;
typedef struct Ark_ColorFilterType Ark_ColorFilterType;
typedef struct Opt_ColorFilterType Opt_ColorFilterType;
typedef struct Ark_ColumnOptions Ark_ColumnOptions;
typedef struct Opt_ColumnOptions Opt_ColumnOptions;
typedef struct Ark_ColumnOptionsV2 Ark_ColumnOptionsV2;
typedef struct Opt_ColumnOptionsV2 Opt_ColumnOptionsV2;
typedef struct Ark_CommandPath Ark_CommandPath;
typedef struct Opt_CommandPath Opt_CommandPath;
typedef struct common_ContextPeer common_ContextPeer;
typedef struct common_ContextPeer* Ark_common_Context;
typedef struct Opt_common_Context Opt_common_Context;
typedef struct Ark_common2D_Color Ark_common2D_Color;
typedef struct Opt_common2D_Color Opt_common2D_Color;
typedef struct Ark_common2D_Point Ark_common2D_Point;
typedef struct Opt_common2D_Point Opt_common2D_Point;
typedef struct Ark_common2D_Point3d Ark_common2D_Point3d;
typedef struct Opt_common2D_Point3d Opt_common2D_Point3d;
typedef struct Ark_common2D_Rect Ark_common2D_Rect;
typedef struct Opt_common2D_Rect Opt_common2D_Rect;
typedef struct Ark_CompatibleComponentInfo Ark_CompatibleComponentInfo;
typedef struct Opt_CompatibleComponentInfo Opt_CompatibleComponentInfo;
typedef struct Ark_ComputedBarAttribute Ark_ComputedBarAttribute;
typedef struct Opt_ComputedBarAttribute Opt_ComputedBarAttribute;
typedef struct Ark_CrossLanguageOptions Ark_CrossLanguageOptions;
typedef struct Opt_CrossLanguageOptions Opt_CrossLanguageOptions;
typedef struct Ark_CrownEvent Ark_CrownEvent;
typedef struct Opt_CrownEvent Opt_CrownEvent;
typedef struct CustomSpanPeer CustomSpanPeer;
typedef struct CustomSpanPeer* Ark_CustomSpan;
typedef struct Opt_CustomSpan Opt_CustomSpan;
typedef struct Ark_CustomSpanDrawInfo Ark_CustomSpanDrawInfo;
typedef struct Opt_CustomSpanDrawInfo Opt_CustomSpanDrawInfo;
typedef struct Ark_CustomSpanMeasureInfo Ark_CustomSpanMeasureInfo;
typedef struct Opt_CustomSpanMeasureInfo Opt_CustomSpanMeasureInfo;
typedef struct Ark_CustomSpanMetrics Ark_CustomSpanMetrics;
typedef struct Opt_CustomSpanMetrics Opt_CustomSpanMetrics;
typedef struct Ark_DataPanelConfiguration Ark_DataPanelConfiguration;
typedef struct Opt_DataPanelConfiguration Opt_DataPanelConfiguration;
typedef struct Ark_DataPanelOptions Ark_DataPanelOptions;
typedef struct Opt_DataPanelOptions Opt_DataPanelOptions;
typedef struct Ark_DatePickerOptions Ark_DatePickerOptions;
typedef struct Opt_DatePickerOptions Opt_DatePickerOptions;
typedef struct Ark_DateRange Ark_DateRange;
typedef struct Opt_DateRange Opt_DateRange;
typedef struct Ark_DeleteValue Ark_DeleteValue;
typedef struct Opt_DeleteValue Opt_DeleteValue;
typedef struct Ark_DirectionalEdgesT Ark_DirectionalEdgesT;
typedef struct Opt_DirectionalEdgesT Opt_DirectionalEdgesT;
typedef struct DisappearSymbolEffectPeer DisappearSymbolEffectPeer;
typedef struct DisappearSymbolEffectPeer* Ark_DisappearSymbolEffect;
typedef struct Opt_DisappearSymbolEffect Opt_DisappearSymbolEffect;
typedef struct Ark_DismissContentCoverAction Ark_DismissContentCoverAction;
typedef struct Opt_DismissContentCoverAction Opt_DismissContentCoverAction;
typedef struct DismissDialogActionPeer DismissDialogActionPeer;
typedef struct DismissDialogActionPeer* Ark_DismissDialogAction;
typedef struct Opt_DismissDialogAction Opt_DismissDialogAction;
typedef struct DismissPopupActionPeer DismissPopupActionPeer;
typedef struct DismissPopupActionPeer* Ark_DismissPopupAction;
typedef struct Opt_DismissPopupAction Opt_DismissPopupAction;
typedef struct Ark_DismissSheetAction Ark_DismissSheetAction;
typedef struct Opt_DismissSheetAction Opt_DismissSheetAction;
typedef struct Ark_DoubleAnimationParam Ark_DoubleAnimationParam;
typedef struct Opt_DoubleAnimationParam Opt_DoubleAnimationParam;
typedef struct DragEventPeer DragEventPeer;
typedef struct DragEventPeer* Ark_DragEvent;
typedef struct Opt_DragEvent Opt_DragEvent;
typedef struct Ark_DragInteractionOptions Ark_DragInteractionOptions;
typedef struct Opt_DragInteractionOptions Opt_DragInteractionOptions;
typedef struct Ark_DragItemInfo Ark_DragItemInfo;
typedef struct Opt_DragItemInfo Opt_DragItemInfo;
typedef struct Ark_drawing_FontMetrics Ark_drawing_FontMetrics;
typedef struct Opt_drawing_FontMetrics Opt_drawing_FontMetrics;
typedef struct Ark_drawing_TextBlobRunBuffer Ark_drawing_TextBlobRunBuffer;
typedef struct Opt_drawing_TextBlobRunBuffer Opt_drawing_TextBlobRunBuffer;
typedef struct DrawingRenderingContextPeer DrawingRenderingContextPeer;
typedef struct DrawingRenderingContextPeer* Ark_DrawingRenderingContext;
typedef struct Opt_DrawingRenderingContext Opt_DrawingRenderingContext;
typedef struct DrawModifierPeer DrawModifierPeer;
typedef struct DrawModifierPeer* Ark_DrawModifier;
typedef struct Opt_DrawModifier Opt_DrawModifier;
typedef struct Ark_DropOptions Ark_DropOptions;
typedef struct Opt_DropOptions Opt_DropOptions;
typedef struct Ark_EdgeEffectOptions Ark_EdgeEffectOptions;
typedef struct Opt_EdgeEffectOptions Opt_EdgeEffectOptions;
typedef struct Ark_EdgeOutlineStyles Ark_EdgeOutlineStyles;
typedef struct Opt_EdgeOutlineStyles Opt_EdgeOutlineStyles;
typedef struct Ark_EdgeStyles Ark_EdgeStyles;
typedef struct Opt_EdgeStyles Opt_EdgeStyles;
typedef struct Ark_EditMenuOptions Ark_EditMenuOptions;
typedef struct Opt_EditMenuOptions Opt_EditMenuOptions;
typedef struct Ark_EmbedOptions Ark_EmbedOptions;
typedef struct Opt_EmbedOptions Opt_EmbedOptions;
typedef struct Ark_ErrorEvent Ark_ErrorEvent;
typedef struct Opt_ErrorEvent Opt_ErrorEvent;
typedef struct Ark_ErrorInformation Ark_ErrorInformation;
typedef struct Opt_ErrorInformation Opt_ErrorInformation;
typedef struct Ark_Event Ark_Event;
typedef struct Opt_Event Opt_Event;
typedef struct Ark_ExpectedFrameRateRange Ark_ExpectedFrameRateRange;
typedef struct Opt_ExpectedFrameRateRange Opt_ExpectedFrameRateRange;
typedef struct Ark_FingerInfo Ark_FingerInfo;
typedef struct Opt_FingerInfo Opt_FingerInfo;
typedef struct Ark_FirstMeaningfulPaint Ark_FirstMeaningfulPaint;
typedef struct Opt_FirstMeaningfulPaint Opt_FirstMeaningfulPaint;
typedef struct Ark_FocusMovement Ark_FocusMovement;
typedef struct Opt_FocusMovement Opt_FocusMovement;
typedef struct Ark_FolderStackOptions Ark_FolderStackOptions;
typedef struct Opt_FolderStackOptions Opt_FolderStackOptions;
typedef struct Ark_font_UIFontAdjustInfo Ark_font_UIFontAdjustInfo;
typedef struct Opt_font_UIFontAdjustInfo Opt_font_UIFontAdjustInfo;
typedef struct Ark_font_UIFontAliasInfo Ark_font_UIFontAliasInfo;
typedef struct Opt_font_UIFontAliasInfo Opt_font_UIFontAliasInfo;
typedef struct Ark_font_UIFontConfig Ark_font_UIFontConfig;
typedef struct Opt_font_UIFontConfig Opt_font_UIFontConfig;
typedef struct Ark_font_UIFontFallbackGroupInfo Ark_font_UIFontFallbackGroupInfo;
typedef struct Opt_font_UIFontFallbackGroupInfo Opt_font_UIFontFallbackGroupInfo;
typedef struct Ark_font_UIFontFallbackInfo Ark_font_UIFontFallbackInfo;
typedef struct Opt_font_UIFontFallbackInfo Opt_font_UIFontFallbackInfo;
typedef struct Ark_font_UIFontGenericInfo Ark_font_UIFontGenericInfo;
typedef struct Opt_font_UIFontGenericInfo Opt_font_UIFontGenericInfo;
typedef struct Ark_FontInfo Ark_FontInfo;
typedef struct Opt_FontInfo Opt_FontInfo;
typedef struct Ark_FontSettingOptions Ark_FontSettingOptions;
typedef struct Opt_FontSettingOptions Opt_FontSettingOptions;
typedef struct Ark_ForegroundEffectOptions Ark_ForegroundEffectOptions;
typedef struct Opt_ForegroundEffectOptions Opt_ForegroundEffectOptions;
typedef struct Ark_FormCallbackInfo Ark_FormCallbackInfo;
typedef struct Opt_FormCallbackInfo Opt_FormCallbackInfo;
typedef struct Ark_FormLinkOptions Ark_FormLinkOptions;
typedef struct Opt_FormLinkOptions Opt_FormLinkOptions;
typedef struct Ark_FractionStop Ark_FractionStop;
typedef struct Opt_FractionStop Opt_FractionStop;
typedef struct Ark_Frame Ark_Frame;
typedef struct Opt_Frame Opt_Frame;
typedef struct Ark_FullScreenEnterEvent Ark_FullScreenEnterEvent;
typedef struct Opt_FullScreenEnterEvent Opt_FullScreenEnterEvent;
typedef struct Ark_GaugeConfiguration Ark_GaugeConfiguration;
typedef struct Opt_GaugeConfiguration Opt_GaugeConfiguration;
typedef struct Ark_GaugeOptions Ark_GaugeOptions;
typedef struct Opt_GaugeOptions Opt_GaugeOptions;
typedef struct Ark_GeometryTransitionOptions Ark_GeometryTransitionOptions;
typedef struct Opt_GeometryTransitionOptions Opt_GeometryTransitionOptions;
typedef struct Ark_GestureInfo Ark_GestureInfo;
typedef struct Opt_GestureInfo Opt_GestureInfo;
typedef struct Ark_GestureStyleInterface Ark_GestureStyleInterface;
typedef struct Opt_GestureStyleInterface Opt_GestureStyleInterface;
typedef struct Ark_GridColColumnOption Ark_GridColColumnOption;
typedef struct Opt_GridColColumnOption Opt_GridColColumnOption;
typedef struct Ark_GridItemOptions Ark_GridItemOptions;
typedef struct Opt_GridItemOptions Opt_GridItemOptions;
typedef struct Ark_GridLayoutOptions Ark_GridLayoutOptions;
typedef struct Opt_GridLayoutOptions Opt_GridLayoutOptions;
typedef struct Ark_GridRowColumnOption Ark_GridRowColumnOption;
typedef struct Opt_GridRowColumnOption Opt_GridRowColumnOption;
typedef struct Ark_Header Ark_Header;
typedef struct Opt_Header Opt_Header;
typedef struct HierarchicalSymbolEffectPeer HierarchicalSymbolEffectPeer;
typedef struct HierarchicalSymbolEffectPeer* Ark_HierarchicalSymbolEffect;
typedef struct Opt_HierarchicalSymbolEffect Opt_HierarchicalSymbolEffect;
typedef struct Ark_HoverEventParam Ark_HoverEventParam;
typedef struct Opt_HoverEventParam Opt_HoverEventParam;
typedef struct Ark_ImageAIOptions Ark_ImageAIOptions;
typedef struct Opt_ImageAIOptions Opt_ImageAIOptions;
typedef struct Ark_ImageAnalyzerConfig Ark_ImageAnalyzerConfig;
typedef struct Opt_ImageAnalyzerConfig Opt_ImageAnalyzerConfig;
typedef struct ImageBitmapPeer ImageBitmapPeer;
typedef struct ImageBitmapPeer* Ark_ImageBitmap;
typedef struct Opt_ImageBitmap Opt_ImageBitmap;
typedef struct Ark_ImageCompleteEvent Ark_ImageCompleteEvent;
typedef struct Opt_ImageCompleteEvent Opt_ImageCompleteEvent;
typedef struct ImageDataPeer ImageDataPeer;
typedef struct ImageDataPeer* Ark_ImageData;
typedef struct Opt_ImageData Opt_ImageData;
typedef struct Ark_ImageLoadResult Ark_ImageLoadResult;
typedef struct Opt_ImageLoadResult Opt_ImageLoadResult;
typedef struct Ark_ImageSourceSize Ark_ImageSourceSize;
typedef struct Opt_ImageSourceSize Opt_ImageSourceSize;
typedef struct Ark_InputCounterOptions Ark_InputCounterOptions;
typedef struct Opt_InputCounterOptions Opt_InputCounterOptions;
typedef struct Ark_InsertValue Ark_InsertValue;
typedef struct Opt_InsertValue Opt_InsertValue;
typedef struct Ark_IntelligentTrackingPreventionDetails Ark_IntelligentTrackingPreventionDetails;
typedef struct Opt_IntelligentTrackingPreventionDetails Opt_IntelligentTrackingPreventionDetails;
typedef struct Ark_intl_DateTimeOptions Ark_intl_DateTimeOptions;
typedef struct Opt_intl_DateTimeOptions Opt_intl_DateTimeOptions;
typedef struct Ark_InvertOptions Ark_InvertOptions;
typedef struct Opt_InvertOptions Opt_InvertOptions;
typedef struct Ark_ItemDragInfo Ark_ItemDragInfo;
typedef struct Opt_ItemDragInfo Opt_ItemDragInfo;
typedef struct Ark_JavaScriptProxy Ark_JavaScriptProxy;
typedef struct Opt_JavaScriptProxy Opt_JavaScriptProxy;
typedef struct Ark_KeyboardOptions Ark_KeyboardOptions;
typedef struct Opt_KeyboardOptions Opt_KeyboardOptions;
typedef struct KeyEventPeer KeyEventPeer;
typedef struct KeyEventPeer* Ark_KeyEvent;
typedef struct Opt_KeyEvent Opt_KeyEvent;
typedef struct Ark_LargestContentfulPaint Ark_LargestContentfulPaint;
typedef struct Opt_LargestContentfulPaint Opt_LargestContentfulPaint;
typedef struct Ark_LayoutConstraint Ark_LayoutConstraint;
typedef struct Opt_LayoutConstraint Opt_LayoutConstraint;
typedef struct LengthMetricsPeer LengthMetricsPeer;
typedef struct LengthMetricsPeer* Ark_LengthMetrics;
typedef struct Opt_LengthMetrics Opt_LengthMetrics;
typedef struct LetterSpacingStylePeer LetterSpacingStylePeer;
typedef struct LetterSpacingStylePeer* Ark_LetterSpacingStyle;
typedef struct Opt_LetterSpacingStyle Opt_LetterSpacingStyle;
typedef struct Ark_LinearGradientBlurOptions Ark_LinearGradientBlurOptions;
typedef struct Opt_LinearGradientBlurOptions Opt_LinearGradientBlurOptions;
typedef struct Ark_LinearGradientOptions Ark_LinearGradientOptions;
typedef struct Opt_LinearGradientOptions Opt_LinearGradientOptions;
typedef struct Ark_LinearIndicatorStartOptions Ark_LinearIndicatorStartOptions;
typedef struct Opt_LinearIndicatorStartOptions Opt_LinearIndicatorStartOptions;
typedef struct LineHeightStylePeer LineHeightStylePeer;
typedef struct LineHeightStylePeer* Ark_LineHeightStyle;
typedef struct Opt_LineHeightStyle Opt_LineHeightStyle;
typedef struct Ark_ListItemGroupOptions Ark_ListItemGroupOptions;
typedef struct Opt_ListItemGroupOptions Opt_ListItemGroupOptions;
typedef struct Ark_ListItemOptions Ark_ListItemOptions;
typedef struct Opt_ListItemOptions Opt_ListItemOptions;
typedef struct Ark_ListOptions Ark_ListOptions;
typedef struct Opt_ListOptions Opt_ListOptions;
typedef struct Ark_LoadCommittedDetails Ark_LoadCommittedDetails;
typedef struct Opt_LoadCommittedDetails Opt_LoadCommittedDetails;
typedef struct Ark_LocalizedHorizontalAlignParam Ark_LocalizedHorizontalAlignParam;
typedef struct Opt_LocalizedHorizontalAlignParam Opt_LocalizedHorizontalAlignParam;
typedef struct Ark_LocalizedVerticalAlignParam Ark_LocalizedVerticalAlignParam;
typedef struct Opt_LocalizedVerticalAlignParam Opt_LocalizedVerticalAlignParam;
typedef struct Ark_LongPressGestureHandlerOptions Ark_LongPressGestureHandlerOptions;
typedef struct Opt_LongPressGestureHandlerOptions Opt_LongPressGestureHandlerOptions;
typedef struct Ark_LongPressGestureInterface_Invoke_Literal Ark_LongPressGestureInterface_Invoke_Literal;
typedef struct Opt_LongPressGestureInterface_Invoke_Literal Opt_LongPressGestureInterface_Invoke_Literal;
typedef struct Ark_MarqueeOptions Ark_MarqueeOptions;
typedef struct Opt_MarqueeOptions Opt_MarqueeOptions;
typedef struct Matrix2DPeer Matrix2DPeer;
typedef struct Matrix2DPeer* Ark_Matrix2D;
typedef struct Opt_Matrix2D Opt_Matrix2D;
typedef struct Ark_Matrix4 Ark_Matrix4;
typedef struct Opt_Matrix4 Opt_Matrix4;
typedef struct Ark_matrix4_Matrix4TransformPoint Ark_matrix4_Matrix4TransformPoint;
typedef struct Opt_matrix4_Matrix4TransformPoint Opt_matrix4_Matrix4TransformPoint;
typedef struct Ark_matrix4_PolyToPolyOptions Ark_matrix4_PolyToPolyOptions;
typedef struct Opt_matrix4_PolyToPolyOptions Opt_matrix4_PolyToPolyOptions;
typedef struct Ark_Matrix4Result Ark_Matrix4Result;
typedef struct Opt_Matrix4Result Opt_Matrix4Result;
typedef struct MeasurablePeer MeasurablePeer;
typedef struct MeasurablePeer* Ark_Measurable;
typedef struct Opt_Measurable Opt_Measurable;
typedef struct Ark_MeasureResult Ark_MeasureResult;
typedef struct Opt_MeasureResult Opt_MeasureResult;
typedef struct Ark_MessageEvents Ark_MessageEvents;
typedef struct Opt_MessageEvents Opt_MessageEvents;
typedef struct Ark_MotionBlurAnchor Ark_MotionBlurAnchor;
typedef struct Opt_MotionBlurAnchor Opt_MotionBlurAnchor;
typedef struct Ark_MotionBlurOptions Ark_MotionBlurOptions;
typedef struct Opt_MotionBlurOptions Opt_MotionBlurOptions;
typedef struct Ark_MotionPathOptions Ark_MotionPathOptions;
typedef struct Opt_MotionPathOptions Opt_MotionPathOptions;
typedef struct MutableStyledStringPeer MutableStyledStringPeer;
typedef struct MutableStyledStringPeer* Ark_MutableStyledString;
typedef struct Opt_MutableStyledString Opt_MutableStyledString;
typedef struct Ark_NativeEmbedVisibilityInfo Ark_NativeEmbedVisibilityInfo;
typedef struct Opt_NativeEmbedVisibilityInfo Opt_NativeEmbedVisibilityInfo;
typedef struct Ark_NavContentInfo Ark_NavContentInfo;
typedef struct Opt_NavContentInfo Opt_NavContentInfo;
typedef struct Ark_NavDestinationTransition Ark_NavDestinationTransition;
typedef struct Opt_NavDestinationTransition Opt_NavDestinationTransition;
typedef struct Ark_NavigationAnimatedTransition Ark_NavigationAnimatedTransition;
typedef struct Opt_NavigationAnimatedTransition Opt_NavigationAnimatedTransition;
typedef struct Ark_NavigationInterception Ark_NavigationInterception;
typedef struct Opt_NavigationInterception Opt_NavigationInterception;
typedef struct Ark_NavigationOptions Ark_NavigationOptions;
typedef struct Opt_NavigationOptions Opt_NavigationOptions;
typedef struct NavPathInfoPeer NavPathInfoPeer;
typedef struct NavPathInfoPeer* Ark_NavPathInfo;
typedef struct Opt_NavPathInfo Opt_NavPathInfo;
typedef struct Ark_NestedScrollInfo Ark_NestedScrollInfo;
typedef struct Opt_NestedScrollInfo Opt_NestedScrollInfo;
typedef struct Ark_NestedScrollOptionsExt Ark_NestedScrollOptionsExt;
typedef struct Opt_NestedScrollOptionsExt Opt_NestedScrollOptionsExt;
typedef struct Ark_OnAlertEvent Ark_OnAlertEvent;
typedef struct Opt_OnAlertEvent Opt_OnAlertEvent;
typedef struct Ark_OnBeforeUnloadEvent Ark_OnBeforeUnloadEvent;
typedef struct Opt_OnBeforeUnloadEvent Opt_OnBeforeUnloadEvent;
typedef struct Ark_OnClientAuthenticationEvent Ark_OnClientAuthenticationEvent;
typedef struct Opt_OnClientAuthenticationEvent Opt_OnClientAuthenticationEvent;
typedef struct Ark_OnConfirmEvent Ark_OnConfirmEvent;
typedef struct Opt_OnConfirmEvent Opt_OnConfirmEvent;
typedef struct Ark_OnContextMenuShowEvent Ark_OnContextMenuShowEvent;
typedef struct Opt_OnContextMenuShowEvent Opt_OnContextMenuShowEvent;
typedef struct Ark_OnDownloadStartEvent Ark_OnDownloadStartEvent;
typedef struct Opt_OnDownloadStartEvent Opt_OnDownloadStartEvent;
typedef struct Ark_OnErrorReceiveEvent Ark_OnErrorReceiveEvent;
typedef struct Opt_OnErrorReceiveEvent Opt_OnErrorReceiveEvent;
typedef struct Ark_OnGeolocationShowEvent Ark_OnGeolocationShowEvent;
typedef struct Opt_OnGeolocationShowEvent Opt_OnGeolocationShowEvent;
typedef struct Ark_OnHttpAuthRequestEvent Ark_OnHttpAuthRequestEvent;
typedef struct Opt_OnHttpAuthRequestEvent Opt_OnHttpAuthRequestEvent;
typedef struct Ark_OnHttpErrorReceiveEvent Ark_OnHttpErrorReceiveEvent;
typedef struct Opt_OnHttpErrorReceiveEvent Opt_OnHttpErrorReceiveEvent;
typedef struct Ark_OnInterceptRequestEvent Ark_OnInterceptRequestEvent;
typedef struct Opt_OnInterceptRequestEvent Opt_OnInterceptRequestEvent;
typedef struct Ark_OnLoadInterceptEvent Ark_OnLoadInterceptEvent;
typedef struct Opt_OnLoadInterceptEvent Opt_OnLoadInterceptEvent;
typedef struct Ark_OnPageBeginEvent Ark_OnPageBeginEvent;
typedef struct Opt_OnPageBeginEvent Opt_OnPageBeginEvent;
typedef struct Ark_OnPageEndEvent Ark_OnPageEndEvent;
typedef struct Opt_OnPageEndEvent Opt_OnPageEndEvent;
typedef struct Ark_OnPageVisibleEvent Ark_OnPageVisibleEvent;
typedef struct Opt_OnPageVisibleEvent Opt_OnPageVisibleEvent;
typedef struct Ark_OnPermissionRequestEvent Ark_OnPermissionRequestEvent;
typedef struct Opt_OnPermissionRequestEvent Opt_OnPermissionRequestEvent;
typedef struct Ark_OnPromptEvent Ark_OnPromptEvent;
typedef struct Opt_OnPromptEvent Opt_OnPromptEvent;
typedef struct Ark_OnRefreshAccessedHistoryEvent Ark_OnRefreshAccessedHistoryEvent;
typedef struct Opt_OnRefreshAccessedHistoryEvent Opt_OnRefreshAccessedHistoryEvent;
typedef struct Ark_OnRenderExitedEvent Ark_OnRenderExitedEvent;
typedef struct Opt_OnRenderExitedEvent Opt_OnRenderExitedEvent;
typedef struct Ark_OnResourceLoadEvent Ark_OnResourceLoadEvent;
typedef struct Opt_OnResourceLoadEvent Opt_OnResourceLoadEvent;
typedef struct Ark_OnScreenCaptureRequestEvent Ark_OnScreenCaptureRequestEvent;
typedef struct Opt_OnScreenCaptureRequestEvent Opt_OnScreenCaptureRequestEvent;
typedef struct Ark_OnSslErrorEventReceiveEvent Ark_OnSslErrorEventReceiveEvent;
typedef struct Opt_OnSslErrorEventReceiveEvent Opt_OnSslErrorEventReceiveEvent;
typedef struct Ark_OnTitleReceiveEvent Ark_OnTitleReceiveEvent;
typedef struct Opt_OnTitleReceiveEvent Opt_OnTitleReceiveEvent;
typedef struct Ark_OnTouchIconUrlReceivedEvent Ark_OnTouchIconUrlReceivedEvent;
typedef struct Opt_OnTouchIconUrlReceivedEvent Opt_OnTouchIconUrlReceivedEvent;
typedef struct Ark_OnWindowNewEvent Ark_OnWindowNewEvent;
typedef struct Opt_OnWindowNewEvent Opt_OnWindowNewEvent;
typedef struct Ark_OverlayOffset Ark_OverlayOffset;
typedef struct Opt_OverlayOffset Opt_OverlayOffset;
typedef struct Ark_PanGestureHandlerOptions Ark_PanGestureHandlerOptions;
typedef struct Opt_PanGestureHandlerOptions Opt_PanGestureHandlerOptions;
typedef struct Ark_PanGestureInterface_Invoke_Literal Ark_PanGestureInterface_Invoke_Literal;
typedef struct Opt_PanGestureInterface_Invoke_Literal Opt_PanGestureInterface_Invoke_Literal;
typedef struct Ark_PathShapeOptions Ark_PathShapeOptions;
typedef struct Opt_PathShapeOptions Opt_PathShapeOptions;
typedef struct Ark_PinchGestureHandlerOptions Ark_PinchGestureHandlerOptions;
typedef struct Opt_PinchGestureHandlerOptions Opt_PinchGestureHandlerOptions;
typedef struct Ark_PinchGestureInterface_Invoke_Literal Ark_PinchGestureInterface_Invoke_Literal;
typedef struct Opt_PinchGestureInterface_Invoke_Literal Opt_PinchGestureInterface_Invoke_Literal;
typedef struct Ark_PixelRoundPolicy Ark_PixelRoundPolicy;
typedef struct Opt_PixelRoundPolicy Opt_PixelRoundPolicy;
typedef struct Ark_PluginComponentTemplate Ark_PluginComponentTemplate;
typedef struct Opt_PluginComponentTemplate Opt_PluginComponentTemplate;
typedef struct Ark_PluginErrorData Ark_PluginErrorData;
typedef struct Opt_PluginErrorData Opt_PluginErrorData;
typedef struct Ark_PopInfo Ark_PopInfo;
typedef struct Opt_PopInfo Opt_PopInfo;
typedef struct Ark_PopupButton Ark_PopupButton;
typedef struct Opt_PopupButton Opt_PopupButton;
typedef struct Ark_PosterOptions Ark_PosterOptions;
typedef struct Opt_PosterOptions Opt_PosterOptions;
typedef struct Ark_PostMessageOptions Ark_PostMessageOptions;
typedef struct Opt_PostMessageOptions Opt_PostMessageOptions;
typedef struct Ark_PreviewConfiguration Ark_PreviewConfiguration;
typedef struct Opt_PreviewConfiguration Opt_PreviewConfiguration;
typedef struct Ark_PreviewMenuOptions Ark_PreviewMenuOptions;
typedef struct Opt_PreviewMenuOptions Opt_PreviewMenuOptions;
typedef struct Ark_PreviewText Ark_PreviewText;
typedef struct Opt_PreviewText Opt_PreviewText;
typedef struct Ark_ProgressOptions Ark_ProgressOptions;
typedef struct Opt_ProgressOptions Opt_ProgressOptions;
typedef struct Ark_RadioConfiguration Ark_RadioConfiguration;
typedef struct Opt_RadioConfiguration Opt_RadioConfiguration;
typedef struct Ark_RadioOptions Ark_RadioOptions;
typedef struct Opt_RadioOptions Opt_RadioOptions;
typedef struct Ark_RatingConfiguration Ark_RatingConfiguration;
typedef struct Opt_RatingConfiguration Opt_RatingConfiguration;
typedef struct Ark_RatingOptions Ark_RatingOptions;
typedef struct Opt_RatingOptions Opt_RatingOptions;
typedef struct RenderingContextSettingsPeer RenderingContextSettingsPeer;
typedef struct RenderingContextSettingsPeer* Ark_RenderingContextSettings;
typedef struct Opt_RenderingContextSettings Opt_RenderingContextSettings;
typedef struct Ark_RenderProcessNotRespondingData Ark_RenderProcessNotRespondingData;
typedef struct Opt_RenderProcessNotRespondingData Opt_RenderProcessNotRespondingData;
typedef struct ReplaceSymbolEffectPeer ReplaceSymbolEffectPeer;
typedef struct ReplaceSymbolEffectPeer* Ark_ReplaceSymbolEffect;
typedef struct Opt_ReplaceSymbolEffect Opt_ReplaceSymbolEffect;
typedef struct Ark_Resource Ark_Resource;
typedef struct Opt_Resource Opt_Resource;
typedef struct Ark_ResourceColor Ark_ResourceColor;
typedef struct Opt_ResourceColor Opt_ResourceColor;
typedef struct Ark_ResourceStr Ark_ResourceStr;
typedef struct Opt_ResourceStr Opt_ResourceStr;
typedef struct Ark_RichEditorBuilderSpanOptions Ark_RichEditorBuilderSpanOptions;
typedef struct Opt_RichEditorBuilderSpanOptions Opt_RichEditorBuilderSpanOptions;
typedef struct Ark_RichEditorDeleteValue Ark_RichEditorDeleteValue;
typedef struct Opt_RichEditorDeleteValue Opt_RichEditorDeleteValue;
typedef struct Ark_RichEditorGesture Ark_RichEditorGesture;
typedef struct Opt_RichEditorGesture Opt_RichEditorGesture;
typedef struct Ark_RichEditorInsertValue Ark_RichEditorInsertValue;
typedef struct Opt_RichEditorInsertValue Opt_RichEditorInsertValue;
typedef struct Ark_RichEditorRange Ark_RichEditorRange;
typedef struct Opt_RichEditorRange Opt_RichEditorRange;
typedef struct Ark_RichEditorSelection Ark_RichEditorSelection;
typedef struct Opt_RichEditorSelection Opt_RichEditorSelection;
typedef struct Ark_RichEditorSpanPosition Ark_RichEditorSpanPosition;
typedef struct Opt_RichEditorSpanPosition Opt_RichEditorSpanPosition;
typedef struct Ark_RotateOptions Ark_RotateOptions;
typedef struct Opt_RotateOptions Opt_RotateOptions;
typedef struct Ark_RotationGestureHandlerOptions Ark_RotationGestureHandlerOptions;
typedef struct Opt_RotationGestureHandlerOptions Opt_RotationGestureHandlerOptions;
typedef struct Ark_RoundRect Ark_RoundRect;
typedef struct Opt_RoundRect Opt_RoundRect;
typedef struct Ark_RoundRectShapeOptions Ark_RoundRectShapeOptions;
typedef struct Opt_RoundRectShapeOptions Opt_RoundRectShapeOptions;
typedef struct Ark_RouteMapConfig Ark_RouteMapConfig;
typedef struct Opt_RouteMapConfig Opt_RouteMapConfig;
typedef struct Ark_RowOptions Ark_RowOptions;
typedef struct Opt_RowOptions Opt_RowOptions;
typedef struct Ark_ScaleOptions Ark_ScaleOptions;
typedef struct Opt_ScaleOptions Opt_ScaleOptions;
typedef struct ScaleSymbolEffectPeer ScaleSymbolEffectPeer;
typedef struct ScaleSymbolEffectPeer* Ark_ScaleSymbolEffect;
typedef struct Opt_ScaleSymbolEffect Opt_ScaleSymbolEffect;
typedef struct Ark_ScreenCaptureConfig Ark_ScreenCaptureConfig;
typedef struct Opt_ScreenCaptureConfig Opt_ScreenCaptureConfig;
typedef struct Ark_ScriptItem Ark_ScriptItem;
typedef struct Opt_ScriptItem Opt_ScriptItem;
typedef struct Ark_ScrollAnimationOptions Ark_ScrollAnimationOptions;
typedef struct Opt_ScrollAnimationOptions Opt_ScrollAnimationOptions;
typedef struct Ark_ScrollBarOptions Ark_ScrollBarOptions;
typedef struct Opt_ScrollBarOptions Opt_ScrollBarOptions;
typedef struct Ark_ScrollEdgeOptions Ark_ScrollEdgeOptions;
typedef struct Opt_ScrollEdgeOptions Opt_ScrollEdgeOptions;
typedef struct Ark_ScrollPageOptions Ark_ScrollPageOptions;
typedef struct Opt_ScrollPageOptions Opt_ScrollPageOptions;
typedef struct Ark_SelectionMenuOptionsExt Ark_SelectionMenuOptionsExt;
typedef struct Opt_SelectionMenuOptionsExt Opt_SelectionMenuOptionsExt;
typedef struct Ark_SelectionOptions Ark_SelectionOptions;
typedef struct Opt_SelectionOptions Opt_SelectionOptions;
typedef struct Ark_ShapeSize Ark_ShapeSize;
typedef struct Opt_ShapeSize Opt_ShapeSize;
typedef struct Ark_SheetDismiss Ark_SheetDismiss;
typedef struct Opt_SheetDismiss Opt_SheetDismiss;
typedef struct Ark_SlideRange Ark_SlideRange;
typedef struct Opt_SlideRange Opt_SlideRange;
typedef struct Ark_SliderConfiguration Ark_SliderConfiguration;
typedef struct Opt_SliderConfiguration Opt_SliderConfiguration;
typedef struct Ark_SliderOptions Ark_SliderOptions;
typedef struct Opt_SliderOptions Opt_SliderOptions;
typedef struct Ark_SnapshotOptions Ark_SnapshotOptions;
typedef struct Opt_SnapshotOptions Opt_SnapshotOptions;
typedef struct Ark_SpringBackAction Ark_SpringBackAction;
typedef struct Opt_SpringBackAction Opt_SpringBackAction;
typedef struct Ark_SslErrorEvent Ark_SslErrorEvent;
typedef struct Opt_SslErrorEvent Opt_SslErrorEvent;
typedef struct Ark_StackOptions Ark_StackOptions;
typedef struct Opt_StackOptions Opt_StackOptions;
typedef struct Ark_StateStyles Ark_StateStyles;
typedef struct Opt_StateStyles Opt_StateStyles;
typedef struct Ark_StepperOptions Ark_StepperOptions;
typedef struct Opt_StepperOptions Opt_StepperOptions;
typedef struct Ark_StyledStringChangedListener Ark_StyledStringChangedListener;
typedef struct Opt_StyledStringChangedListener Opt_StyledStringChangedListener;
typedef struct Ark_SurfaceRect Ark_SurfaceRect;
typedef struct Opt_SurfaceRect Opt_SurfaceRect;
typedef struct Ark_SurfaceRotationOptions Ark_SurfaceRotationOptions;
typedef struct Opt_SurfaceRotationOptions Opt_SurfaceRotationOptions;
typedef struct Ark_SwipeGestureHandlerOptions Ark_SwipeGestureHandlerOptions;
typedef struct Opt_SwipeGestureHandlerOptions Opt_SwipeGestureHandlerOptions;
typedef struct Ark_SwiperAutoFill Ark_SwiperAutoFill;
typedef struct Opt_SwiperAutoFill Opt_SwiperAutoFill;
typedef struct Ark_SwiperContentAnimatedTransition Ark_SwiperContentAnimatedTransition;
typedef struct Opt_SwiperContentAnimatedTransition Opt_SwiperContentAnimatedTransition;
typedef struct Ark_SystemAdaptiveOptions Ark_SystemAdaptiveOptions;
typedef struct Opt_SystemAdaptiveOptions Opt_SystemAdaptiveOptions;
typedef struct TabBarSymbolPeer TabBarSymbolPeer;
typedef struct TabBarSymbolPeer* Ark_TabBarSymbol;
typedef struct Opt_TabBarSymbol Opt_TabBarSymbol;
typedef struct Ark_TabContentAnimatedTransition Ark_TabContentAnimatedTransition;
typedef struct Opt_TabContentAnimatedTransition Opt_TabContentAnimatedTransition;
typedef struct Ark_TabsOptions Ark_TabsOptions;
typedef struct Opt_TabsOptions Opt_TabsOptions;
typedef struct Ark_TapGestureParameters Ark_TapGestureParameters;
typedef struct Opt_TapGestureParameters Opt_TapGestureParameters;
typedef struct Ark_TargetInfo Ark_TargetInfo;
typedef struct Opt_TargetInfo Opt_TargetInfo;
typedef struct Ark_text_FontDescriptor Ark_text_FontDescriptor;
typedef struct Opt_text_FontDescriptor Opt_text_FontDescriptor;
typedef struct Ark_text_LineMetrics Ark_text_LineMetrics;
typedef struct Opt_text_LineMetrics Opt_text_LineMetrics;
typedef struct Ark_text_PlaceholderSpan Ark_text_PlaceholderSpan;
typedef struct Opt_text_PlaceholderSpan Opt_text_PlaceholderSpan;
typedef struct Ark_text_RectStyle Ark_text_RectStyle;
typedef struct Opt_text_RectStyle Opt_text_RectStyle;
typedef struct Ark_text_StrutStyle Ark_text_StrutStyle;
typedef struct Opt_text_StrutStyle Opt_text_StrutStyle;
typedef struct Ark_text_TextBox Ark_text_TextBox;
typedef struct Opt_text_TextBox Opt_text_TextBox;
typedef struct Ark_TextClockOptions Ark_TextClockOptions;
typedef struct Opt_TextClockOptions Opt_TextClockOptions;
typedef struct Ark_TextContentControllerOptions Ark_TextContentControllerOptions;
typedef struct Opt_TextContentControllerOptions Opt_TextContentControllerOptions;
typedef struct Ark_TextMarqueeOptions Ark_TextMarqueeOptions;
typedef struct Opt_TextMarqueeOptions Opt_TextMarqueeOptions;
typedef struct Ark_TextMenuOptions Ark_TextMenuOptions;
typedef struct Opt_TextMenuOptions Opt_TextMenuOptions;
typedef struct Ark_TextRange Ark_TextRange;
typedef struct Opt_TextRange Opt_TextRange;
typedef struct TextShadowStylePeer TextShadowStylePeer;
typedef struct TextShadowStylePeer* Ark_TextShadowStyle;
typedef struct Opt_TextShadowStyle Opt_TextShadowStyle;
typedef struct Ark_TextTimerOptions Ark_TextTimerOptions;
typedef struct Opt_TextTimerOptions Opt_TextTimerOptions;
typedef struct Ark_TimePickerOptions Ark_TimePickerOptions;
typedef struct Opt_TimePickerOptions Opt_TimePickerOptions;
typedef struct Ark_TipsMessageType Ark_TipsMessageType;
typedef struct Opt_TipsMessageType Opt_TipsMessageType;
typedef struct Ark_ToggleConfiguration Ark_ToggleConfiguration;
typedef struct Opt_ToggleConfiguration Opt_ToggleConfiguration;
typedef struct Ark_ToggleOptions Ark_ToggleOptions;
typedef struct Opt_ToggleOptions Opt_ToggleOptions;
typedef struct Ark_TouchObject Ark_TouchObject;
typedef struct Opt_TouchObject Opt_TouchObject;
typedef struct Ark_TouchResult Ark_TouchResult;
typedef struct Opt_TouchResult Opt_TouchResult;
typedef struct Ark_TranslateOptions Ark_TranslateOptions;
typedef struct Opt_TranslateOptions Opt_TranslateOptions;
typedef struct Ark_Tuple_ResourceColor_Number Ark_Tuple_ResourceColor_Number;
typedef struct Opt_Tuple_ResourceColor_Number Opt_Tuple_ResourceColor_Number;
typedef struct Ark_uiEffect_BrightnessBlender Ark_uiEffect_BrightnessBlender;
typedef struct Opt_uiEffect_BrightnessBlender Opt_uiEffect_BrightnessBlender;
typedef struct Ark_uiEffect_BrightnessBlenderParam Ark_uiEffect_BrightnessBlenderParam;
typedef struct Opt_uiEffect_BrightnessBlenderParam Opt_uiEffect_BrightnessBlenderParam;
typedef struct Ark_UIExtensionOptions Ark_UIExtensionOptions;
typedef struct Opt_UIExtensionOptions Opt_UIExtensionOptions;
typedef struct Ark_unifiedDataChannel_Summary Ark_unifiedDataChannel_Summary;
typedef struct Opt_unifiedDataChannel_Summary Opt_unifiedDataChannel_Summary;
typedef struct Ark_Union_Array_MenuElement_CustomBuilder Ark_Union_Array_MenuElement_CustomBuilder;
typedef struct Opt_Union_Array_MenuElement_CustomBuilder Opt_Union_Array_MenuElement_CustomBuilder;
typedef struct Ark_Union_Array_NavigationMenuItem_CustomBuilder Ark_Union_Array_NavigationMenuItem_CustomBuilder;
typedef struct Opt_Union_Array_NavigationMenuItem_CustomBuilder Opt_Union_Array_NavigationMenuItem_CustomBuilder;
typedef struct Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent;
typedef struct Opt_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent Opt_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent;
typedef struct Ark_Union_Array_ToolbarItem_CustomBuilder Ark_Union_Array_ToolbarItem_CustomBuilder;
typedef struct Opt_Union_Array_ToolbarItem_CustomBuilder Opt_Union_Array_ToolbarItem_CustomBuilder;
typedef struct Ark_Union_BlendMode_Blender Ark_Union_BlendMode_Blender;
typedef struct Opt_Union_BlendMode_Blender Opt_Union_BlendMode_Blender;
typedef struct Ark_Union_Boolean_Callback_DismissPopupAction_Void Ark_Union_Boolean_Callback_DismissPopupAction_Void;
typedef struct Opt_Union_Boolean_Callback_DismissPopupAction_Void Opt_Union_Boolean_Callback_DismissPopupAction_Void;
typedef struct Ark_Union_Boolean_Resource Ark_Union_Boolean_Resource;
typedef struct Opt_Union_Boolean_Resource Opt_Union_Boolean_Resource;
typedef struct Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier;
typedef struct Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier;
typedef struct Ark_Union_BorderStyle_EdgeStyles Ark_Union_BorderStyle_EdgeStyles;
typedef struct Opt_Union_BorderStyle_EdgeStyles Opt_Union_BorderStyle_EdgeStyles;
typedef struct Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback;
typedef struct Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback;
typedef struct Ark_Union_Callback_String_Void_SearchSubmitCallback Ark_Union_Callback_String_Void_SearchSubmitCallback;
typedef struct Opt_Union_Callback_String_Void_SearchSubmitCallback Opt_Union_Callback_String_Void_SearchSubmitCallback;
typedef struct Ark_Union_Color_Number_String_Resource Ark_Union_Color_Number_String_Resource;
typedef struct Opt_Union_Color_Number_String_Resource Opt_Union_Color_Number_String_Resource;
typedef struct Ark_Union_Color_String_Resource Ark_Union_Color_String_Resource;
typedef struct Opt_Union_Color_String_Resource Opt_Union_Color_String_Resource;
typedef struct Ark_Union_Color_String_Resource_ColoringStrategy Ark_Union_Color_String_Resource_ColoringStrategy;
typedef struct Opt_Union_Color_String_Resource_ColoringStrategy Opt_Union_Color_String_Resource_ColoringStrategy;
typedef struct Ark_Union_Color_String_Resource_Number Ark_Union_Color_String_Resource_Number;
typedef struct Opt_Union_Color_String_Resource_Number Opt_Union_Color_String_Resource_Number;
typedef struct Ark_Union_ColumnOptions_ColumnOptionsV2 Ark_Union_ColumnOptions_ColumnOptionsV2;
typedef struct Opt_Union_ColumnOptions_ColumnOptionsV2 Opt_Union_ColumnOptions_ColumnOptionsV2;
typedef struct Ark_Union_CustomBuilder_DragItemInfo Ark_Union_CustomBuilder_DragItemInfo;
typedef struct Opt_Union_CustomBuilder_DragItemInfo Opt_Union_CustomBuilder_DragItemInfo;
typedef struct Ark_Union_CustomBuilder_DragItemInfo_String Ark_Union_CustomBuilder_DragItemInfo_String;
typedef struct Opt_Union_CustomBuilder_DragItemInfo_String Opt_Union_CustomBuilder_DragItemInfo_String;
typedef struct Ark_Union_CustomBuilder_ExtendableComponent Ark_Union_CustomBuilder_ExtendableComponent;
typedef struct Opt_Union_CustomBuilder_ExtendableComponent Opt_Union_CustomBuilder_ExtendableComponent;
typedef struct Ark_Union_DragPreviewMode_Array_DragPreviewMode Ark_Union_DragPreviewMode_Array_DragPreviewMode;
typedef struct Opt_Union_DragPreviewMode_Array_DragPreviewMode Opt_Union_DragPreviewMode_Array_DragPreviewMode;
typedef struct Ark_Union_EdgeOutlineStyles_OutlineStyle Ark_Union_EdgeOutlineStyles_OutlineStyle;
typedef struct Opt_Union_EdgeOutlineStyles_OutlineStyle Opt_Union_EdgeOutlineStyles_OutlineStyle;
typedef struct Ark_Union_EdgeStyles_BorderStyle Ark_Union_EdgeStyles_BorderStyle;
typedef struct Opt_Union_EdgeStyles_BorderStyle Opt_Union_EdgeStyles_BorderStyle;
typedef struct Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource;
typedef struct Opt_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource Opt_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource;
typedef struct Ark_Union_ImageBitmap_PixelMap Ark_Union_ImageBitmap_PixelMap;
typedef struct Opt_Union_ImageBitmap_PixelMap Opt_Union_ImageBitmap_PixelMap;
typedef struct Ark_Union_LengthMetrics_String Ark_Union_LengthMetrics_String;
typedef struct Opt_Union_LengthMetrics_String Opt_Union_LengthMetrics_String;
typedef struct Ark_Union_MenuPreviewMode_CustomBuilder Ark_Union_MenuPreviewMode_CustomBuilder;
typedef struct Opt_Union_MenuPreviewMode_CustomBuilder Opt_Union_MenuPreviewMode_CustomBuilder;
typedef struct Ark_Union_NestedScrollOptions_NestedScrollOptionsExt Ark_Union_NestedScrollOptions_NestedScrollOptionsExt;
typedef struct Opt_Union_NestedScrollOptions_NestedScrollOptionsExt Opt_Union_NestedScrollOptions_NestedScrollOptionsExt;
typedef struct Ark_Union_Number_Array_Number Ark_Union_Number_Array_Number;
typedef struct Opt_Union_Number_Array_Number Opt_Union_Number_Array_Number;
typedef struct Ark_Union_Number_FontWeight_ResourceStr Ark_Union_Number_FontWeight_ResourceStr;
typedef struct Opt_Union_Number_FontWeight_ResourceStr Opt_Union_Number_FontWeight_ResourceStr;
typedef struct Ark_Union_Number_GridColColumnOption Ark_Union_Number_GridColColumnOption;
typedef struct Opt_Union_Number_GridColColumnOption Opt_Union_Number_GridColColumnOption;
typedef struct Ark_Union_Number_GridRowColumnOption Ark_Union_Number_GridRowColumnOption;
typedef struct Opt_Union_Number_GridRowColumnOption Opt_Union_Number_GridRowColumnOption;
typedef struct Ark_Union_Number_InvertOptions Ark_Union_Number_InvertOptions;
typedef struct Opt_Union_Number_InvertOptions Opt_Union_Number_InvertOptions;
typedef struct Ark_Union_Number_Resource Ark_Union_Number_Resource;
typedef struct Opt_Union_Number_Resource Opt_Union_Number_Resource;
typedef struct Ark_Union_Number_ResourceStr Ark_Union_Number_ResourceStr;
typedef struct Opt_Union_Number_ResourceStr Opt_Union_Number_ResourceStr;
typedef struct Ark_Union_Number_String_Array_Union_Number_String Ark_Union_Number_String_Array_Union_Number_String;
typedef struct Opt_Union_Number_String_Array_Union_Number_String Opt_Union_Number_String_Array_Union_Number_String;
typedef struct Ark_Union_Number_String_Resource Ark_Union_Number_String_Resource;
typedef struct Opt_Union_Number_String_Resource Opt_Union_Number_String_Resource;
typedef struct Ark_Union_Number_String_SwiperAutoFill Ark_Union_Number_String_SwiperAutoFill;
typedef struct Opt_Union_Number_String_SwiperAutoFill Opt_Union_Number_String_SwiperAutoFill;
typedef struct Ark_Union_OutlineStyle_EdgeOutlineStyles Ark_Union_OutlineStyle_EdgeOutlineStyles;
typedef struct Opt_Union_OutlineStyle_EdgeOutlineStyles Opt_Union_OutlineStyle_EdgeOutlineStyles;
typedef struct Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions;
typedef struct Opt_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions Opt_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions;
typedef struct Ark_Union_PixelMap_ResourceStr Ark_Union_PixelMap_ResourceStr;
typedef struct Opt_Union_PixelMap_ResourceStr Opt_Union_PixelMap_ResourceStr;
typedef struct Ark_Union_PixelMap_ResourceStr_DrawableDescriptor Ark_Union_PixelMap_ResourceStr_DrawableDescriptor;
typedef struct Opt_Union_PixelMap_ResourceStr_DrawableDescriptor Opt_Union_PixelMap_ResourceStr_DrawableDescriptor;
typedef struct Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent;
typedef struct Opt_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent Opt_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent;
typedef struct Ark_Union_PX_VP_LPX_Resource Ark_Union_PX_VP_LPX_Resource;
typedef struct Opt_Union_PX_VP_LPX_Resource Opt_Union_PX_VP_LPX_Resource;
typedef struct Ark_Union_Resource_String Ark_Union_Resource_String;
typedef struct Opt_Union_Resource_String Opt_Union_Resource_String;
typedef struct Ark_Union_ResourceColor_ColorContent_ColorMetrics Ark_Union_ResourceColor_ColorContent_ColorMetrics;
typedef struct Opt_Union_ResourceColor_ColorContent_ColorMetrics Opt_Union_ResourceColor_ColorContent_ColorMetrics;
typedef struct Ark_Union_ResourceColor_ColoringStrategy Ark_Union_ResourceColor_ColoringStrategy;
typedef struct Opt_Union_ResourceColor_ColoringStrategy Opt_Union_ResourceColor_ColoringStrategy;
typedef struct Ark_Union_ResourceColor_LinearGradient Ark_Union_ResourceColor_LinearGradient;
typedef struct Opt_Union_ResourceColor_LinearGradient Opt_Union_ResourceColor_LinearGradient;
typedef struct Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Ark_Union_ResourceStr_Array_ResourceStr Ark_Union_ResourceStr_Array_ResourceStr;
typedef struct Opt_Union_ResourceStr_Array_ResourceStr Opt_Union_ResourceStr_Array_ResourceStr;
typedef struct Ark_Union_ResourceStr_ComponentContent Ark_Union_ResourceStr_ComponentContent;
typedef struct Opt_Union_ResourceStr_ComponentContent Opt_Union_ResourceStr_ComponentContent;
typedef struct Ark_Union_ResourceStr_CustomBuilder Ark_Union_ResourceStr_CustomBuilder;
typedef struct Opt_Union_ResourceStr_CustomBuilder Opt_Union_ResourceStr_CustomBuilder;
typedef struct Ark_Union_ResourceStr_PixelMap Ark_Union_ResourceStr_PixelMap;
typedef struct Opt_Union_ResourceStr_PixelMap Opt_Union_ResourceStr_PixelMap;
typedef struct Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier;
typedef struct Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier;
typedef struct Ark_Union_ResourceStr_Resource_String Ark_Union_ResourceStr_Resource_String;
typedef struct Opt_Union_ResourceStr_Resource_String Opt_Union_ResourceStr_Resource_String;
typedef struct Ark_Union_ResourceStr_String_Resource Ark_Union_ResourceStr_String_Resource;
typedef struct Opt_Union_ResourceStr_String_Resource Opt_Union_ResourceStr_String_Resource;
typedef struct Ark_Union_ResourceStr_TabBarSymbol Ark_Union_ResourceStr_TabBarSymbol;
typedef struct Opt_Union_ResourceStr_TabBarSymbol Opt_Union_ResourceStr_TabBarSymbol;
typedef struct Ark_Union_ResourceStr_Union_ResourceStr_ComponentContent Ark_Union_ResourceStr_Union_ResourceStr_ComponentContent;
typedef struct Opt_Union_ResourceStr_Union_ResourceStr_ComponentContent Opt_Union_ResourceStr_Union_ResourceStr_ComponentContent;
typedef struct Ark_Union_RowOptions_RowOptionsV2 Ark_Union_RowOptions_RowOptionsV2;
typedef struct Opt_Union_RowOptions_RowOptionsV2 Opt_Union_RowOptions_RowOptionsV2;
typedef struct Ark_Union_ScrollAnimationOptions_Boolean Ark_Union_ScrollAnimationOptions_Boolean;
typedef struct Opt_Union_ScrollAnimationOptions_Boolean Opt_Union_ScrollAnimationOptions_Boolean;
typedef struct Ark_Union_String_Array_String Ark_Union_String_Array_String;
typedef struct Opt_Union_String_Array_String Opt_Union_String_Array_String;
typedef struct Ark_Union_String_CustomBuilder_ComponentContent Ark_Union_String_CustomBuilder_ComponentContent;
typedef struct Opt_Union_String_CustomBuilder_ComponentContent Opt_Union_String_CustomBuilder_ComponentContent;
typedef struct Ark_Union_String_Number_Buffer_Resource Ark_Union_String_Number_Buffer_Resource;
typedef struct Opt_Union_String_Number_Buffer_Resource Opt_Union_String_Number_Buffer_Resource;
typedef struct Ark_Union_String_Number_Resource Ark_Union_String_Number_Resource;
typedef struct Opt_Union_String_Number_Resource Opt_Union_String_Number_Resource;
typedef struct Ark_Union_String_Number_Resource_Buffer Ark_Union_String_Number_Resource_Buffer;
typedef struct Opt_Union_String_Number_Resource_Buffer Opt_Union_String_Number_Resource_Buffer;
typedef struct Ark_Union_String_PixelMap_Resource Ark_Union_String_PixelMap_Resource;
typedef struct Opt_Union_String_PixelMap_Resource Opt_Union_String_PixelMap_Resource;
typedef struct Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier;
typedef struct Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier;
typedef struct Ark_Union_String_Resource Ark_Union_String_Resource;
typedef struct Opt_Union_String_Resource Opt_Union_String_Resource;
typedef struct Ark_Union_String_Resource_ComponentContent Ark_Union_String_Resource_ComponentContent;
typedef struct Opt_Union_String_Resource_ComponentContent Opt_Union_String_Resource_ComponentContent;
typedef struct Ark_Union_String_Resource_LinearGradientOptions Ark_Union_String_Resource_LinearGradientOptions;
typedef struct Opt_Union_String_Resource_LinearGradientOptions Opt_Union_String_Resource_LinearGradientOptions;
typedef struct Ark_Union_String_Resource_PixelMap Ark_Union_String_Resource_PixelMap;
typedef struct Opt_Union_String_Resource_PixelMap Opt_Union_String_Resource_PixelMap;
typedef struct Ark_VisibleAreaEventOptions Ark_VisibleAreaEventOptions;
typedef struct Opt_VisibleAreaEventOptions Opt_VisibleAreaEventOptions;
typedef struct Ark_VisibleListContentInfo Ark_VisibleListContentInfo;
typedef struct Opt_VisibleListContentInfo Opt_VisibleListContentInfo;
typedef struct Ark_Want Ark_Want;
typedef struct Opt_Want Opt_Want;
typedef struct Ark_WaterFlowOptions Ark_WaterFlowOptions;
typedef struct Opt_WaterFlowOptions Opt_WaterFlowOptions;
typedef struct Ark_WebKeyboardCallbackInfo Ark_WebKeyboardCallbackInfo;
typedef struct Opt_WebKeyboardCallbackInfo Opt_WebKeyboardCallbackInfo;
typedef struct Ark_WebKeyboardOptions Ark_WebKeyboardOptions;
typedef struct Opt_WebKeyboardOptions Opt_WebKeyboardOptions;
typedef struct Ark_WebMediaOptions Ark_WebMediaOptions;
typedef struct Opt_WebMediaOptions Opt_WebMediaOptions;
typedef struct Ark_WebOptions Ark_WebOptions;
typedef struct Opt_WebOptions Opt_WebOptions;
typedef struct Ark_window_SystemBarStyle Ark_window_SystemBarStyle;
typedef struct Opt_window_SystemBarStyle Opt_window_SystemBarStyle;
typedef struct Ark_WorkerOptions Ark_WorkerOptions;
typedef struct Opt_WorkerOptions Opt_WorkerOptions;
typedef struct XComponentControllerPeer XComponentControllerPeer;
typedef struct XComponentControllerPeer* Ark_XComponentController;
typedef struct Opt_XComponentController Opt_XComponentController;
typedef struct Ark_AnimateParam Ark_AnimateParam;
typedef struct Opt_AnimateParam Opt_AnimateParam;
typedef struct Ark_BackgroundBlurStyleOptions Ark_BackgroundBlurStyleOptions;
typedef struct Opt_BackgroundBlurStyleOptions Opt_BackgroundBlurStyleOptions;
typedef struct Ark_BackgroundEffectOptions Ark_BackgroundEffectOptions;
typedef struct Opt_BackgroundEffectOptions Opt_BackgroundEffectOptions;
typedef struct Ark_ButtonIconOptions Ark_ButtonIconOptions;
typedef struct Opt_ButtonIconOptions Opt_ButtonIconOptions;
typedef struct Ark_CalendarOptions Ark_CalendarOptions;
typedef struct Opt_CalendarOptions Opt_CalendarOptions;
typedef struct CanvasRendererPeer CanvasRendererPeer;
typedef struct CanvasRendererPeer* Ark_CanvasRenderer;
typedef struct Opt_CanvasRenderer Opt_CanvasRenderer;
typedef struct CanvasRenderingContext2DPeer CanvasRenderingContext2DPeer;
typedef struct CanvasRenderingContext2DPeer* Ark_CanvasRenderingContext2D;
typedef struct Opt_CanvasRenderingContext2D Opt_CanvasRenderingContext2D;
typedef struct Ark_CircleStyleOptions Ark_CircleStyleOptions;
typedef struct Opt_CircleStyleOptions Opt_CircleStyleOptions;
typedef struct Ark_Colors Ark_Colors;
typedef struct Opt_Colors Opt_Colors;
typedef struct Ark_ComponentInfo Ark_ComponentInfo;
typedef struct Opt_ComponentInfo Opt_ComponentInfo;
typedef struct Ark_CopyEvent Ark_CopyEvent;
typedef struct Opt_CopyEvent Opt_CopyEvent;
typedef struct Ark_CutEvent Ark_CutEvent;
typedef struct Opt_CutEvent Opt_CutEvent;
typedef struct Ark_DataPanelShadowOptions Ark_DataPanelShadowOptions;
typedef struct Opt_DataPanelShadowOptions Opt_DataPanelShadowOptions;
typedef struct DecorationStylePeer DecorationStylePeer;
typedef struct DecorationStylePeer* Ark_DecorationStyle;
typedef struct Opt_DecorationStyle Opt_DecorationStyle;
typedef struct Ark_DecorationStyleInterface Ark_DecorationStyleInterface;
typedef struct Opt_DecorationStyleInterface Opt_DecorationStyleInterface;
typedef struct Ark_DecorationStyleResult Ark_DecorationStyleResult;
typedef struct Opt_DecorationStyleResult Opt_DecorationStyleResult;
typedef struct Ark_Dimension Ark_Dimension;
typedef struct Opt_Dimension Opt_Dimension;
typedef struct Ark_DividerStyleOptions Ark_DividerStyleOptions;
typedef struct Opt_DividerStyleOptions Opt_DividerStyleOptions;
typedef struct Ark_DragPreviewOptions Ark_DragPreviewOptions;
typedef struct Opt_DragPreviewOptions Opt_DragPreviewOptions;
typedef struct Ark_EdgeColors Ark_EdgeColors;
typedef struct Opt_EdgeColors Opt_EdgeColors;
typedef struct Ark_FadingEdgeOptions Ark_FadingEdgeOptions;
typedef struct Opt_FadingEdgeOptions Opt_FadingEdgeOptions;
typedef struct Ark_FlexSpaceOptions Ark_FlexSpaceOptions;
typedef struct Opt_FlexSpaceOptions Opt_FlexSpaceOptions;
typedef struct Ark_FocusBoxStyle Ark_FocusBoxStyle;
typedef struct Opt_FocusBoxStyle Opt_FocusBoxStyle;
typedef struct Ark_FontOptions Ark_FontOptions;
typedef struct Opt_FontOptions Opt_FontOptions;
typedef struct Ark_ForegroundBlurStyleOptions Ark_ForegroundBlurStyleOptions;
typedef struct Opt_ForegroundBlurStyleOptions Opt_ForegroundBlurStyleOptions;
typedef struct Ark_FormInfo Ark_FormInfo;
typedef struct Opt_FormInfo Opt_FormInfo;
typedef struct Ark_GaugeShadowOptions Ark_GaugeShadowOptions;
typedef struct Opt_GaugeShadowOptions Opt_GaugeShadowOptions;
typedef struct Ark_GridColOptions Ark_GridColOptions;
typedef struct Opt_GridColOptions Opt_GridColOptions;
typedef struct Ark_HistoricalPoint Ark_HistoricalPoint;
typedef struct Opt_HistoricalPoint Opt_HistoricalPoint;
typedef struct Ark_ImageError Ark_ImageError;
typedef struct Opt_ImageError Opt_ImageError;
typedef struct Ark_ImageFrameInfo Ark_ImageFrameInfo;
typedef struct Opt_ImageFrameInfo Opt_ImageFrameInfo;
typedef struct LayoutablePeer LayoutablePeer;
typedef struct LayoutablePeer* Ark_Layoutable;
typedef struct Opt_Layoutable Opt_Layoutable;
typedef struct Ark_Length Ark_Length;
typedef struct Opt_Length Opt_Length;
typedef struct Ark_LengthConstrain Ark_LengthConstrain;
typedef struct Opt_LengthConstrain Opt_LengthConstrain;
typedef struct Ark_LightSource Ark_LightSource;
typedef struct Opt_LightSource Opt_LightSource;
typedef struct Ark_LinearIndicatorStyle Ark_LinearIndicatorStyle;
typedef struct Opt_LinearIndicatorStyle Opt_LinearIndicatorStyle;
typedef struct Ark_LocalizedAlignRuleOptions Ark_LocalizedAlignRuleOptions;
typedef struct Opt_LocalizedAlignRuleOptions Opt_LocalizedAlignRuleOptions;
typedef struct Ark_LocalizedBorderRadiuses Ark_LocalizedBorderRadiuses;
typedef struct Opt_LocalizedBorderRadiuses Opt_LocalizedBorderRadiuses;
typedef struct Ark_LocalizedEdgeColors Ark_LocalizedEdgeColors;
typedef struct Opt_LocalizedEdgeColors Opt_LocalizedEdgeColors;
typedef struct Ark_LocalizedEdges Ark_LocalizedEdges;
typedef struct Opt_LocalizedEdges Opt_LocalizedEdges;
typedef struct Ark_LocalizedEdgeWidths Ark_LocalizedEdgeWidths;
typedef struct Opt_LocalizedEdgeWidths Opt_LocalizedEdgeWidths;
typedef struct Ark_LocalizedPadding Ark_LocalizedPadding;
typedef struct Opt_LocalizedPadding Opt_LocalizedPadding;
typedef struct Ark_LocalizedPosition Ark_LocalizedPosition;
typedef struct Opt_LocalizedPosition Opt_LocalizedPosition;
typedef struct Ark_MeasureOptions Ark_MeasureOptions;
typedef struct Opt_MeasureOptions Opt_MeasureOptions;
typedef struct Ark_MenuElement Ark_MenuElement;
typedef struct Opt_MenuElement Opt_MenuElement;
typedef struct Ark_MenuItemConfiguration Ark_MenuItemConfiguration;
typedef struct Opt_MenuItemConfiguration Opt_MenuItemConfiguration;
typedef struct Ark_MenuItemGroupOptions Ark_MenuItemGroupOptions;
typedef struct Opt_MenuItemGroupOptions Opt_MenuItemGroupOptions;
typedef struct Ark_MenuItemOptions Ark_MenuItemOptions;
typedef struct Opt_MenuItemOptions Opt_MenuItemOptions;
typedef struct Ark_NativeXComponentParameters Ark_NativeXComponentParameters;
typedef struct Opt_NativeXComponentParameters Opt_NativeXComponentParameters;
typedef struct Ark_NavDestinationCommonTitle Ark_NavDestinationCommonTitle;
typedef struct Opt_NavDestinationCommonTitle Opt_NavDestinationCommonTitle;
typedef struct NavDestinationContextPeer NavDestinationContextPeer;
typedef struct NavDestinationContextPeer* Ark_NavDestinationContext;
typedef struct Opt_NavDestinationContext Opt_NavDestinationContext;
typedef struct Ark_NavigationCommonTitle Ark_NavigationCommonTitle;
typedef struct Opt_NavigationCommonTitle Opt_NavigationCommonTitle;
typedef struct Ark_NavigationMenuItem Ark_NavigationMenuItem;
typedef struct Opt_NavigationMenuItem Opt_NavigationMenuItem;
typedef struct NavigationTransitionProxyPeer NavigationTransitionProxyPeer;
typedef struct NavigationTransitionProxyPeer* Ark_NavigationTransitionProxy;
typedef struct Opt_NavigationTransitionProxy Opt_NavigationTransitionProxy;
typedef struct OffscreenCanvasRenderingContext2DPeer OffscreenCanvasRenderingContext2DPeer;
typedef struct OffscreenCanvasRenderingContext2DPeer* Ark_OffscreenCanvasRenderingContext2D;
typedef struct Opt_OffscreenCanvasRenderingContext2D Opt_OffscreenCanvasRenderingContext2D;
typedef struct Ark_Offset Ark_Offset;
typedef struct Opt_Offset Opt_Offset;
typedef struct Ark_OverlayOptions Ark_OverlayOptions;
typedef struct Opt_OverlayOptions Opt_OverlayOptions;
typedef struct Ark_PasswordIcon Ark_PasswordIcon;
typedef struct Opt_PasswordIcon Opt_PasswordIcon;
typedef struct Ark_PasteEvent Ark_PasteEvent;
typedef struct Opt_PasteEvent Opt_PasteEvent;
typedef struct Ark_PluginComponentOptions Ark_PluginComponentOptions;
typedef struct Opt_PluginComponentOptions Opt_PluginComponentOptions;
typedef struct Ark_PopupMaskType Ark_PopupMaskType;
typedef struct Opt_PopupMaskType Opt_PopupMaskType;
typedef struct Ark_RadioStyle Ark_RadioStyle;
typedef struct Opt_RadioStyle Opt_RadioStyle;
typedef struct Ark_RadiusItem Ark_RadiusItem;
typedef struct Opt_RadiusItem Opt_RadiusItem;
typedef struct Ark_RectShapeOptions Ark_RectShapeOptions;
typedef struct Opt_RectShapeOptions Opt_RectShapeOptions;
typedef struct Ark_RefreshOptions Ark_RefreshOptions;
typedef struct Opt_RefreshOptions Opt_RefreshOptions;
typedef struct RestrictedWorkerPeer RestrictedWorkerPeer;
typedef struct RestrictedWorkerPeer* Ark_RestrictedWorker;
typedef struct Opt_RestrictedWorker Opt_RestrictedWorker;
typedef struct Ark_ReuseOptions Ark_ReuseOptions;
typedef struct Opt_ReuseOptions Opt_ReuseOptions;
typedef struct Ark_RichEditorChangeValue Ark_RichEditorChangeValue;
typedef struct Opt_RichEditorChangeValue Opt_RichEditorChangeValue;
typedef struct Ark_RichEditorSymbolSpanStyle Ark_RichEditorSymbolSpanStyle;
typedef struct Opt_RichEditorSymbolSpanStyle Opt_RichEditorSymbolSpanStyle;
typedef struct Ark_RichEditorUpdateSymbolSpanStyleOptions Ark_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Opt_RichEditorUpdateSymbolSpanStyleOptions Opt_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Ark_RichEditorUrlStyle Ark_RichEditorUrlStyle;
typedef struct Opt_RichEditorUrlStyle Opt_RichEditorUrlStyle;
typedef struct Ark_ScrollOptions Ark_ScrollOptions;
typedef struct Opt_ScrollOptions Opt_ScrollOptions;
typedef struct Ark_ScrollToIndexOptions Ark_ScrollToIndexOptions;
typedef struct Opt_ScrollToIndexOptions Opt_ScrollToIndexOptions;
typedef struct Ark_SearchOptions Ark_SearchOptions;
typedef struct Opt_SearchOptions Opt_SearchOptions;
typedef struct Ark_SelectionMenuOptions Ark_SelectionMenuOptions;
typedef struct Opt_SelectionMenuOptions Opt_SelectionMenuOptions;
typedef struct Ark_SelectOption Ark_SelectOption;
typedef struct Opt_SelectOption Opt_SelectOption;
typedef struct Ark_ShadowOptions Ark_ShadowOptions;
typedef struct Opt_ShadowOptions Opt_ShadowOptions;
typedef struct Ark_ShapePoint Ark_ShapePoint;
typedef struct Opt_ShapePoint Opt_ShapePoint;
typedef struct Ark_sharedTransitionOptions Ark_sharedTransitionOptions;
typedef struct Opt_sharedTransitionOptions Opt_sharedTransitionOptions;
typedef struct Ark_SheetTitleOptions Ark_SheetTitleOptions;
typedef struct Opt_SheetTitleOptions Opt_SheetTitleOptions;
typedef struct Ark_SliderBlockStyle Ark_SliderBlockStyle;
typedef struct Opt_SliderBlockStyle Opt_SliderBlockStyle;
typedef struct Ark_StarStyleOptions Ark_StarStyleOptions;
typedef struct Opt_StarStyleOptions Opt_StarStyleOptions;
typedef struct Ark_StyledStringChangeValue Ark_StyledStringChangeValue;
typedef struct Opt_StyledStringChangeValue Opt_StyledStringChangeValue;
typedef struct Ark_SwitchStyle Ark_SwitchStyle;
typedef struct Opt_SwitchStyle Opt_SwitchStyle;
typedef struct Ark_TabBarIconStyle Ark_TabBarIconStyle;
typedef struct Opt_TabBarIconStyle Opt_TabBarIconStyle;
typedef struct Ark_TabBarOptions Ark_TabBarOptions;
typedef struct Opt_TabBarOptions Opt_TabBarOptions;
typedef struct Ark_TerminationInfo Ark_TerminationInfo;
typedef struct Opt_TerminationInfo Opt_TerminationInfo;
typedef struct Ark_text_Decoration Ark_text_Decoration;
typedef struct Opt_text_Decoration Opt_text_Decoration;
typedef struct Ark_text_TextShadow Ark_text_TextShadow;
typedef struct Opt_text_TextShadow Opt_text_TextShadow;
typedef struct Ark_TextAreaOptions Ark_TextAreaOptions;
typedef struct Opt_TextAreaOptions Opt_TextAreaOptions;
typedef struct Ark_TextCascadePickerRangeContent Ark_TextCascadePickerRangeContent;
typedef struct Opt_TextCascadePickerRangeContent Opt_TextCascadePickerRangeContent;
typedef struct Ark_TextChangeOptions Ark_TextChangeOptions;
typedef struct Opt_TextChangeOptions Opt_TextChangeOptions;
typedef struct Ark_TextDecorationOptions Ark_TextDecorationOptions;
typedef struct Opt_TextDecorationOptions Opt_TextDecorationOptions;
typedef struct Ark_TextInputOptions Ark_TextInputOptions;
typedef struct Opt_TextInputOptions Opt_TextInputOptions;
typedef struct Ark_TextMenuItem Ark_TextMenuItem;
typedef struct Opt_TextMenuItem Opt_TextMenuItem;
typedef struct Ark_TextPickerOptions Ark_TextPickerOptions;
typedef struct Opt_TextPickerOptions Opt_TextPickerOptions;
typedef struct Ark_TextPickerRangeContent Ark_TextPickerRangeContent;
typedef struct Opt_TextPickerRangeContent Opt_TextPickerRangeContent;
typedef struct Ark_TextPickerResult Ark_TextPickerResult;
typedef struct Opt_TextPickerResult Opt_TextPickerResult;
typedef struct TextStylePeer TextStylePeer;
typedef struct TextStylePeer* Ark_TextStyle;
typedef struct Opt_TextStyle Opt_TextStyle;
typedef struct Ark_TextStyleInterface Ark_TextStyleInterface;
typedef struct Opt_TextStyleInterface Opt_TextStyleInterface;
typedef struct Ark_ToolbarItem Ark_ToolbarItem;
typedef struct Opt_ToolbarItem Opt_ToolbarItem;
typedef struct Ark_Tuple_Dimension_Dimension Ark_Tuple_Dimension_Dimension;
typedef struct Opt_Tuple_Dimension_Dimension Opt_Tuple_Dimension_Dimension;
typedef struct Ark_Tuple_Length_Length Ark_Tuple_Length_Length;
typedef struct Opt_Tuple_Length_Length Opt_Tuple_Length_Length;
typedef struct Ark_Tuple_Union_ResourceColor_LinearGradient_Number Ark_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Tuple_Union_ResourceColor_LinearGradient_Number Opt_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Ark_UnderlineColor Ark_UnderlineColor;
typedef struct Opt_UnderlineColor Opt_UnderlineColor;
typedef struct Ark_Union_Boolean_PopupMaskType Ark_Union_Boolean_PopupMaskType;
typedef struct Opt_Union_Boolean_PopupMaskType Opt_Union_Boolean_PopupMaskType;
typedef struct Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext;
typedef struct Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext;
typedef struct Ark_Union_Dimension_Array_Dimension Ark_Union_Dimension_Array_Dimension;
typedef struct Opt_Union_Dimension_Array_Dimension Opt_Union_Dimension_Array_Dimension;
typedef struct Ark_Union_Dimension_OptionWidthMode Ark_Union_Dimension_OptionWidthMode;
typedef struct Opt_Union_Dimension_OptionWidthMode Opt_Union_Dimension_OptionWidthMode;
typedef struct Ark_Union_EdgeColors_ResourceColor_LocalizedEdgeColors Ark_Union_EdgeColors_ResourceColor_LocalizedEdgeColors;
typedef struct Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors;
typedef struct Ark_Union_Length_Array_RadiusItem Ark_Union_Length_Array_RadiusItem;
typedef struct Opt_Union_Length_Array_RadiusItem Opt_Union_Length_Array_RadiusItem;
typedef struct Ark_Union_Length_LayoutPolicy Ark_Union_Length_LayoutPolicy;
typedef struct Opt_Union_Length_LayoutPolicy Opt_Union_Length_LayoutPolicy;
typedef struct Ark_Union_Length_Number Ark_Union_Length_Number;
typedef struct Opt_Union_Length_Number Opt_Union_Length_Number;
typedef struct Ark_Union_MenuItemOptions_CustomBuilder Ark_Union_MenuItemOptions_CustomBuilder;
typedef struct Opt_Union_MenuItemOptions_CustomBuilder Opt_Union_MenuItemOptions_CustomBuilder;
typedef struct Ark_Union_NavDestinationContext_NavBar Ark_Union_NavDestinationContext_NavBar;
typedef struct Opt_Union_NavDestinationContext_NavBar Opt_Union_NavDestinationContext_NavBar;
typedef struct Ark_Union_Number_LengthConstrain Ark_Union_Number_LengthConstrain;
typedef struct Opt_Union_Number_LengthConstrain Opt_Union_Number_LengthConstrain;
typedef struct Ark_Union_RectShapeOptions_RoundRectShapeOptions Ark_Union_RectShapeOptions_RoundRectShapeOptions;
typedef struct Opt_Union_RectShapeOptions_RoundRectShapeOptions Opt_Union_RectShapeOptions_RoundRectShapeOptions;
typedef struct Ark_Union_ResourceColor_EdgeColors Ark_Union_ResourceColor_EdgeColors;
typedef struct Opt_Union_ResourceColor_EdgeColors Opt_Union_ResourceColor_EdgeColors;
typedef struct Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors;
typedef struct Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors;
typedef struct Ark_Union_ResourceColor_UnderlineColor Ark_Union_ResourceColor_UnderlineColor;
typedef struct Opt_Union_ResourceColor_UnderlineColor Opt_Union_ResourceColor_UnderlineColor;
typedef struct Ark_Union_ShadowOptions_Array_ShadowOptions Ark_Union_ShadowOptions_Array_ShadowOptions;
typedef struct Opt_Union_ShadowOptions_Array_ShadowOptions Opt_Union_ShadowOptions_Array_ShadowOptions;
typedef struct Ark_Union_ShadowOptions_ShadowStyle Ark_Union_ShadowOptions_ShadowStyle;
typedef struct Opt_Union_ShadowOptions_ShadowStyle Opt_Union_ShadowOptions_ShadowStyle;
typedef struct Ark_Union_SheetSize_Length Ark_Union_SheetSize_Length;
typedef struct Opt_Union_SheetSize_Length Opt_Union_SheetSize_Length;
typedef struct Ark_Union_SheetTitleOptions_CustomBuilder Ark_Union_SheetTitleOptions_CustomBuilder;
typedef struct Opt_Union_SheetTitleOptions_CustomBuilder Opt_Union_SheetTitleOptions_CustomBuilder;
typedef struct Ark_Union_TitleHeight_Length Ark_Union_TitleHeight_Length;
typedef struct Opt_Union_TitleHeight_Length Opt_Union_TitleHeight_Length;
typedef struct Ark_VideoOptions Ark_VideoOptions;
typedef struct Opt_VideoOptions Opt_VideoOptions;
typedef struct Ark_XComponentOptions Ark_XComponentOptions;
typedef struct Opt_XComponentOptions Opt_XComponentOptions;
typedef struct Ark_XComponentParameter Ark_XComponentParameter;
typedef struct Opt_XComponentParameter Opt_XComponentParameter;
typedef struct Ark_ArrowStyle Ark_ArrowStyle;
typedef struct Opt_ArrowStyle Opt_ArrowStyle;
typedef struct Ark_BadgeStyle Ark_BadgeStyle;
typedef struct Opt_BadgeStyle Opt_BadgeStyle;
typedef struct Ark_BarGridColumnOptions Ark_BarGridColumnOptions;
typedef struct Opt_BarGridColumnOptions Opt_BarGridColumnOptions;
typedef struct Ark_BoardStyle Ark_BoardStyle;
typedef struct Opt_BoardStyle Opt_BoardStyle;
typedef struct Ark_BorderRadiuses Ark_BorderRadiuses;
typedef struct Opt_BorderRadiuses Opt_BorderRadiuses;
typedef struct Ark_BorderRadiusType Ark_BorderRadiusType;
typedef struct Opt_BorderRadiusType Opt_BorderRadiusType;
typedef struct Ark_ButtonStyle Ark_ButtonStyle;
typedef struct Opt_ButtonStyle Opt_ButtonStyle;
typedef struct Ark_CaretStyle Ark_CaretStyle;
typedef struct Opt_CaretStyle Opt_CaretStyle;
typedef struct Ark_ChainAnimationOptions Ark_ChainAnimationOptions;
typedef struct Opt_ChainAnimationOptions Opt_ChainAnimationOptions;
typedef struct Ark_ColorStop Ark_ColorStop;
typedef struct Opt_ColorStop Opt_ColorStop;
typedef struct Ark_ColumnSplitDividerStyle Ark_ColumnSplitDividerStyle;
typedef struct Opt_ColumnSplitDividerStyle Opt_ColumnSplitDividerStyle;
typedef struct Ark_ConstraintSizeOptions Ark_ConstraintSizeOptions;
typedef struct Opt_ConstraintSizeOptions Opt_ConstraintSizeOptions;
typedef struct Ark_CustomTheme Ark_CustomTheme;
typedef struct Opt_CustomTheme Opt_CustomTheme;
typedef struct Ark_DividerOptions Ark_DividerOptions;
typedef struct Opt_DividerOptions Opt_DividerOptions;
typedef struct Ark_DividerStyle Ark_DividerStyle;
typedef struct Opt_DividerStyle Opt_DividerStyle;
typedef struct Ark_DotIndicator Ark_DotIndicator;
typedef struct Opt_DotIndicator Opt_DotIndicator;
typedef struct Ark_EdgeOutlineWidths Ark_EdgeOutlineWidths;
typedef struct Opt_EdgeOutlineWidths Opt_EdgeOutlineWidths;
typedef struct Ark_Edges Ark_Edges;
typedef struct Opt_Edges Opt_Edges;
typedef struct Ark_EdgeWidths Ark_EdgeWidths;
typedef struct Opt_EdgeWidths Opt_EdgeWidths;
typedef struct Ark_EditableTextChangeValue Ark_EditableTextChangeValue;
typedef struct Opt_EditableTextChangeValue Opt_EditableTextChangeValue;
typedef struct Ark_FlexOptions Ark_FlexOptions;
typedef struct Opt_FlexOptions Opt_FlexOptions;
typedef struct Ark_Font Ark_Font;
typedef struct Opt_Font Opt_Font;
typedef struct Ark_GaugeIndicatorOptions Ark_GaugeIndicatorOptions;
typedef struct Opt_GaugeIndicatorOptions Opt_GaugeIndicatorOptions;
typedef struct Ark_GridRowSizeOption Ark_GridRowSizeOption;
typedef struct Opt_GridRowSizeOption Opt_GridRowSizeOption;
typedef struct Ark_GuideLinePosition Ark_GuideLinePosition;
typedef struct Opt_GuideLinePosition Opt_GuideLinePosition;
typedef struct Ark_GuideLineStyle Ark_GuideLineStyle;
typedef struct Opt_GuideLineStyle Opt_GuideLineStyle;
typedef struct Ark_IconOptions Ark_IconOptions;
typedef struct Opt_IconOptions Opt_IconOptions;
typedef struct Ark_LeadingMarginPlaceholder Ark_LeadingMarginPlaceholder;
typedef struct Opt_LeadingMarginPlaceholder Opt_LeadingMarginPlaceholder;
typedef struct Ark_LinearStyleOptions Ark_LinearStyleOptions;
typedef struct Opt_LinearStyleOptions Opt_LinearStyleOptions;
typedef struct Ark_ListDividerOptions Ark_ListDividerOptions;
typedef struct Opt_ListDividerOptions Opt_ListDividerOptions;
typedef struct Ark_MarkStyle Ark_MarkStyle;
typedef struct Opt_MarkStyle Opt_MarkStyle;
typedef struct Ark_MoreButtonOptions Ark_MoreButtonOptions;
typedef struct Opt_MoreButtonOptions Opt_MoreButtonOptions;
typedef struct Ark_NavDestinationCustomTitle Ark_NavDestinationCustomTitle;
typedef struct Opt_NavDestinationCustomTitle Opt_NavDestinationCustomTitle;
typedef struct Ark_NavigationCustomTitle Ark_NavigationCustomTitle;
typedef struct Opt_NavigationCustomTitle Opt_NavigationCustomTitle;
typedef struct Ark_NavigationTitleOptions Ark_NavigationTitleOptions;
typedef struct Opt_NavigationTitleOptions Opt_NavigationTitleOptions;
typedef struct Ark_OffsetOptions Ark_OffsetOptions;
typedef struct Opt_OffsetOptions Opt_OffsetOptions;
typedef struct Ark_OutlineRadiuses Ark_OutlineRadiuses;
typedef struct Opt_OutlineRadiuses Opt_OutlineRadiuses;
typedef struct Ark_Padding Ark_Padding;
typedef struct Opt_Padding Opt_Padding;
typedef struct Ark_PixelStretchEffectOptions Ark_PixelStretchEffectOptions;
typedef struct Opt_PixelStretchEffectOptions Opt_PixelStretchEffectOptions;
typedef struct Ark_PointLightStyle Ark_PointLightStyle;
typedef struct Opt_PointLightStyle Opt_PointLightStyle;
typedef struct Ark_Position Ark_Position;
typedef struct Opt_Position Opt_Position;
typedef struct Ark_ProgressStyleOptions Ark_ProgressStyleOptions;
typedef struct Opt_ProgressStyleOptions Opt_ProgressStyleOptions;
typedef struct Ark_RadialGradientOptions Ark_RadialGradientOptions;
typedef struct Opt_RadialGradientOptions Opt_RadialGradientOptions;
typedef struct Ark_Rectangle Ark_Rectangle;
typedef struct Opt_Rectangle Opt_Rectangle;
typedef struct Ark_RectOptions Ark_RectOptions;
typedef struct Opt_RectOptions Opt_RectOptions;
typedef struct RenderNodePeer RenderNodePeer;
typedef struct RenderNodePeer* Ark_RenderNode;
typedef struct Opt_RenderNode Opt_RenderNode;
typedef struct Ark_RichEditorSymbolSpanOptions Ark_RichEditorSymbolSpanOptions;
typedef struct Opt_RichEditorSymbolSpanOptions Opt_RichEditorSymbolSpanOptions;
typedef struct Ark_RingStyleOptions Ark_RingStyleOptions;
typedef struct Opt_RingStyleOptions Opt_RingStyleOptions;
typedef struct Ark_ScrollableBarModeOptions Ark_ScrollableBarModeOptions;
typedef struct Opt_ScrollableBarModeOptions Opt_ScrollableBarModeOptions;
typedef struct Ark_ScrollSnapOptions Ark_ScrollSnapOptions;
typedef struct Opt_ScrollSnapOptions Opt_ScrollSnapOptions;
typedef struct Ark_SearchButtonOptions Ark_SearchButtonOptions;
typedef struct Opt_SearchButtonOptions Opt_SearchButtonOptions;
typedef struct Ark_SizeOptions Ark_SizeOptions;
typedef struct Opt_SizeOptions Opt_SizeOptions;
typedef struct Ark_SubTabBarIndicatorStyle Ark_SubTabBarIndicatorStyle;
typedef struct Opt_SubTabBarIndicatorStyle Opt_SubTabBarIndicatorStyle;
typedef struct Ark_SweepGradientOptions Ark_SweepGradientOptions;
typedef struct Opt_SweepGradientOptions Opt_SweepGradientOptions;
typedef struct Ark_SwipeActionItem Ark_SwipeActionItem;
typedef struct Opt_SwipeActionItem Opt_SwipeActionItem;
typedef struct Ark_text_TextStyle Ark_text_TextStyle;
typedef struct Opt_text_TextStyle Opt_text_TextStyle;
typedef struct Ark_TextDataDetectorConfig Ark_TextDataDetectorConfig;
typedef struct Opt_TextDataDetectorConfig Opt_TextDataDetectorConfig;
typedef struct Ark_TipsOptions Ark_TipsOptions;
typedef struct Opt_TipsOptions Opt_TipsOptions;
typedef struct Ark_TripleLengthDetents Ark_TripleLengthDetents;
typedef struct Opt_TripleLengthDetents Opt_TripleLengthDetents;
typedef struct Ark_Union_Array_Rectangle_Rectangle Ark_Union_Array_Rectangle_Rectangle;
typedef struct Opt_Union_Array_Rectangle_Rectangle Opt_Union_Array_Rectangle_Rectangle;
typedef struct Ark_Union_ArrowStyle_Boolean Ark_Union_ArrowStyle_Boolean;
typedef struct Opt_Union_ArrowStyle_Boolean Opt_Union_ArrowStyle_Boolean;
typedef struct Ark_Union_BadgePosition_Position Ark_Union_BadgePosition_Position;
typedef struct Opt_Union_BadgePosition_Position Opt_Union_BadgePosition_Position;
typedef struct Ark_Union_BorderRadiuses_Length_LocalizedBorderRadiuses Ark_Union_BorderRadiuses_Length_LocalizedBorderRadiuses;
typedef struct Opt_Union_BorderRadiuses_Length_LocalizedBorderRadiuses Opt_Union_BorderRadiuses_Length_LocalizedBorderRadiuses;
typedef struct Ark_Union_CustomBuilder_SwipeActionItem Ark_Union_CustomBuilder_SwipeActionItem;
typedef struct Opt_Union_CustomBuilder_SwipeActionItem Opt_Union_CustomBuilder_SwipeActionItem;
typedef struct Ark_Union_Dimension_BorderRadiuses Ark_Union_Dimension_BorderRadiuses;
typedef struct Opt_Union_Dimension_BorderRadiuses Opt_Union_Dimension_BorderRadiuses;
typedef struct Ark_Union_Dimension_EdgeOutlineWidths Ark_Union_Dimension_EdgeOutlineWidths;
typedef struct Opt_Union_Dimension_EdgeOutlineWidths Opt_Union_Dimension_EdgeOutlineWidths;
typedef struct Ark_Union_Dimension_EdgeWidths Ark_Union_Dimension_EdgeWidths;
typedef struct Opt_Union_Dimension_EdgeWidths Opt_Union_Dimension_EdgeWidths;
typedef struct Ark_Union_Dimension_EdgeWidths_LocalizedEdgeWidths Ark_Union_Dimension_EdgeWidths_LocalizedEdgeWidths;
typedef struct Opt_Union_Dimension_EdgeWidths_LocalizedEdgeWidths Opt_Union_Dimension_EdgeWidths_LocalizedEdgeWidths;
typedef struct Ark_Union_Dimension_LeadingMarginPlaceholder Ark_Union_Dimension_LeadingMarginPlaceholder;
typedef struct Opt_Union_Dimension_LeadingMarginPlaceholder Opt_Union_Dimension_LeadingMarginPlaceholder;
typedef struct Ark_Union_Dimension_Margin Ark_Union_Dimension_Margin;
typedef struct Opt_Union_Dimension_Margin Opt_Union_Dimension_Margin;
typedef struct Ark_Union_Dimension_OutlineRadiuses Ark_Union_Dimension_OutlineRadiuses;
typedef struct Opt_Union_Dimension_OutlineRadiuses Opt_Union_Dimension_OutlineRadiuses;
typedef struct Ark_Union_EdgeOutlineWidths_Dimension Ark_Union_EdgeOutlineWidths_Dimension;
typedef struct Opt_Union_EdgeOutlineWidths_Dimension Opt_Union_EdgeOutlineWidths_Dimension;
typedef struct Ark_Union_EdgeWidths_Length_LocalizedEdgeWidths Ark_Union_EdgeWidths_Length_LocalizedEdgeWidths;
typedef struct Opt_Union_EdgeWidths_Length_LocalizedEdgeWidths Opt_Union_EdgeWidths_Length_LocalizedEdgeWidths;
typedef struct Ark_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths Ark_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths;
typedef struct Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths;
typedef struct Ark_Union_IconOptions_SymbolGlyphModifier Ark_Union_IconOptions_SymbolGlyphModifier;
typedef struct Opt_Union_IconOptions_SymbolGlyphModifier Opt_Union_IconOptions_SymbolGlyphModifier;
typedef struct Ark_Union_Length_BorderRadiuses Ark_Union_Length_BorderRadiuses;
typedef struct Opt_Union_Length_BorderRadiuses Opt_Union_Length_BorderRadiuses;
typedef struct Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths;
typedef struct Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths;
typedef struct Ark_Union_Length_GridRowSizeOption Ark_Union_Length_GridRowSizeOption;
typedef struct Opt_Union_Length_GridRowSizeOption Opt_Union_Length_GridRowSizeOption;
typedef struct Ark_Union_LengthMetrics_BorderRadiuses Ark_Union_LengthMetrics_BorderRadiuses;
typedef struct Opt_Union_LengthMetrics_BorderRadiuses Opt_Union_LengthMetrics_BorderRadiuses;
typedef struct Ark_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses Ark_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Opt_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses Opt_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Ark_Union_LengthMetrics_LeadingMarginPlaceholder Ark_Union_LengthMetrics_LeadingMarginPlaceholder;
typedef struct Opt_Union_LengthMetrics_LeadingMarginPlaceholder Opt_Union_LengthMetrics_LeadingMarginPlaceholder;
typedef struct Ark_Union_LengthMetrics_Margin Ark_Union_LengthMetrics_Margin;
typedef struct Opt_Union_LengthMetrics_Margin Opt_Union_LengthMetrics_Margin;
typedef struct Ark_Union_LengthMetrics_Padding Ark_Union_LengthMetrics_Padding;
typedef struct Opt_Union_LengthMetrics_Padding Opt_Union_LengthMetrics_Padding;
typedef struct Ark_Union_Margin_Dimension Ark_Union_Margin_Dimension;
typedef struct Opt_Union_Margin_Dimension Opt_Union_Margin_Dimension;
typedef struct Ark_Union_Margin_Length_LocalizedMargin Ark_Union_Margin_Length_LocalizedMargin;
typedef struct Opt_Union_Margin_Length_LocalizedMargin Opt_Union_Margin_Length_LocalizedMargin;
typedef struct Ark_Union_Number_LeadingMarginPlaceholder Ark_Union_Number_LeadingMarginPlaceholder;
typedef struct Opt_Union_Number_LeadingMarginPlaceholder Opt_Union_Number_LeadingMarginPlaceholder;
typedef struct Ark_Union_OutlineRadiuses_Dimension Ark_Union_OutlineRadiuses_Dimension;
typedef struct Opt_Union_OutlineRadiuses_Dimension Opt_Union_OutlineRadiuses_Dimension;
typedef struct Ark_Union_Padding_Dimension Ark_Union_Padding_Dimension;
typedef struct Opt_Union_Padding_Dimension Opt_Union_Padding_Dimension;
typedef struct Ark_Union_Padding_Dimension_LocalizedPadding Ark_Union_Padding_Dimension_LocalizedPadding;
typedef struct Opt_Union_Padding_Dimension_LocalizedPadding Opt_Union_Padding_Dimension_LocalizedPadding;
typedef struct Ark_Union_Padding_Length_LocalizedPadding Ark_Union_Padding_Length_LocalizedPadding;
typedef struct Opt_Union_Padding_Length_LocalizedPadding Opt_Union_Padding_Length_LocalizedPadding;
typedef struct Ark_Union_Padding_LengthMetrics_LocalizedPadding Ark_Union_Padding_LengthMetrics_LocalizedPadding;
typedef struct Opt_Union_Padding_LengthMetrics_LocalizedPadding Opt_Union_Padding_LengthMetrics_LocalizedPadding;
typedef struct Ark_Union_Position_Alignment Ark_Union_Position_Alignment;
typedef struct Opt_Union_Position_Alignment Opt_Union_Position_Alignment;
typedef struct Ark_Union_Position_Edges_LocalizedEdges Ark_Union_Position_Edges_LocalizedEdges;
typedef struct Opt_Union_Position_Edges_LocalizedEdges Opt_Union_Position_Edges_LocalizedEdges;
typedef struct Ark_Union_Position_LocalizedPosition Ark_Union_Position_LocalizedPosition;
typedef struct Opt_Union_Position_LocalizedPosition Opt_Union_Position_LocalizedPosition;
typedef struct Ark_Union_RectOptions_RoundedRectOptions Ark_Union_RectOptions_RoundedRectOptions;
typedef struct Opt_Union_RectOptions_RoundedRectOptions Opt_Union_RectOptions_RoundedRectOptions;
typedef struct Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle;
typedef struct Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle;
typedef struct Ark_Union_SizeOptions_ImageSize Ark_Union_SizeOptions_ImageSize;
typedef struct Opt_Union_SizeOptions_ImageSize Opt_Union_SizeOptions_ImageSize;
typedef struct Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource;
typedef struct Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource;
typedef struct Ark_Union_Union_Padding_Dimension_LocalizedPadding Ark_Union_Union_Padding_Dimension_LocalizedPadding;
typedef struct Opt_Union_Union_Padding_Dimension_LocalizedPadding Opt_Union_Union_Padding_Dimension_LocalizedPadding;
typedef struct Ark_ViewportRect Ark_ViewportRect;
typedef struct Opt_ViewportRect Opt_ViewportRect;
typedef struct Ark_Area Ark_Area;
typedef struct Opt_Area Opt_Area;
typedef struct Ark_BadgeParamWithNumber Ark_BadgeParamWithNumber;
typedef struct Opt_BadgeParamWithNumber Opt_BadgeParamWithNumber;
typedef struct Ark_BadgeParamWithString Ark_BadgeParamWithString;
typedef struct Opt_BadgeParamWithString Opt_BadgeParamWithString;
typedef struct Ark_BorderImageOption Ark_BorderImageOption;
typedef struct Opt_BorderImageOption Opt_BorderImageOption;
typedef struct Ark_BorderOptions Ark_BorderOptions;
typedef struct Opt_BorderOptions Opt_BorderOptions;
typedef struct Ark_ButtonLabelStyle Ark_ButtonLabelStyle;
typedef struct Opt_ButtonLabelStyle Opt_ButtonLabelStyle;
typedef struct Ark_CancelButtonOptions Ark_CancelButtonOptions;
typedef struct Opt_CancelButtonOptions Opt_CancelButtonOptions;
typedef struct Ark_CapsuleStyleOptions Ark_CapsuleStyleOptions;
typedef struct Opt_CapsuleStyleOptions Opt_CapsuleStyleOptions;
typedef struct Ark_CustomDialogControllerOptions Ark_CustomDialogControllerOptions;
typedef struct Opt_CustomDialogControllerOptions Opt_CustomDialogControllerOptions;
typedef struct Ark_DigitIndicator Ark_DigitIndicator;
typedef struct Opt_DigitIndicator Opt_DigitIndicator;
typedef struct Ark_EventTarget Ark_EventTarget;
typedef struct Opt_EventTarget Opt_EventTarget;
typedef struct FocusAxisEventPeer FocusAxisEventPeer;
typedef struct FocusAxisEventPeer* Ark_FocusAxisEvent;
typedef struct Opt_FocusAxisEvent Opt_FocusAxisEvent;
typedef struct Ark_GeometryInfo Ark_GeometryInfo;
typedef struct Opt_GeometryInfo Opt_GeometryInfo;
typedef struct GestureEventPeer GestureEventPeer;
typedef struct GestureEventPeer* Ark_GestureEvent;
typedef struct Opt_GestureEvent Opt_GestureEvent;
typedef struct Ark_GutterOption Ark_GutterOption;
typedef struct Opt_GutterOption Opt_GutterOption;
typedef struct HoverEventPeer HoverEventPeer;
typedef struct HoverEventPeer* Ark_HoverEvent;
typedef struct Opt_HoverEvent Opt_HoverEvent;
typedef struct Ark_ImageAttachmentLayoutStyle Ark_ImageAttachmentLayoutStyle;
typedef struct Opt_ImageAttachmentLayoutStyle Opt_ImageAttachmentLayoutStyle;
typedef struct LayoutChildPeer LayoutChildPeer;
typedef struct LayoutChildPeer* Ark_LayoutChild;
typedef struct Opt_LayoutChild Opt_LayoutChild;
typedef struct LongPressGestureEventPeer LongPressGestureEventPeer;
typedef struct LongPressGestureEventPeer* Ark_LongPressGestureEvent;
typedef struct Opt_LongPressGestureEvent Opt_LongPressGestureEvent;
typedef struct Ark_MenuOutlineOptions Ark_MenuOutlineOptions;
typedef struct Opt_MenuOutlineOptions Opt_MenuOutlineOptions;
typedef struct MouseEventPeer MouseEventPeer;
typedef struct MouseEventPeer* Ark_MouseEvent;
typedef struct Opt_MouseEvent Opt_MouseEvent;
typedef struct Ark_NativeEmbedInfo Ark_NativeEmbedInfo;
typedef struct Opt_NativeEmbedInfo Opt_NativeEmbedInfo;
typedef struct Ark_NavigationMenuOptions Ark_NavigationMenuOptions;
typedef struct Opt_NavigationMenuOptions Opt_NavigationMenuOptions;
typedef struct Ark_NavigationToolbarOptions Ark_NavigationToolbarOptions;
typedef struct Opt_NavigationToolbarOptions Opt_NavigationToolbarOptions;
typedef struct Ark_OutlineOptions Ark_OutlineOptions;
typedef struct Opt_OutlineOptions Opt_OutlineOptions;
typedef struct PanGestureEventPeer PanGestureEventPeer;
typedef struct PanGestureEventPeer* Ark_PanGestureEvent;
typedef struct Opt_PanGestureEvent Opt_PanGestureEvent;
typedef struct ParagraphStylePeer ParagraphStylePeer;
typedef struct ParagraphStylePeer* Ark_ParagraphStyle;
typedef struct Opt_ParagraphStyle Opt_ParagraphStyle;
typedef struct Ark_ParagraphStyleInterface Ark_ParagraphStyleInterface;
typedef struct Opt_ParagraphStyleInterface Opt_ParagraphStyleInterface;
typedef struct Ark_PickerDialogButtonStyle Ark_PickerDialogButtonStyle;
typedef struct Opt_PickerDialogButtonStyle Opt_PickerDialogButtonStyle;
typedef struct Ark_PickerTextStyle Ark_PickerTextStyle;
typedef struct Opt_PickerTextStyle Opt_PickerTextStyle;
typedef struct PinchGestureEventPeer PinchGestureEventPeer;
typedef struct PinchGestureEventPeer* Ark_PinchGestureEvent;
typedef struct Opt_PinchGestureEvent Opt_PinchGestureEvent;
typedef struct Ark_PlaceholderStyle Ark_PlaceholderStyle;
typedef struct Opt_PlaceholderStyle Opt_PlaceholderStyle;
typedef struct Ark_PopupMessageOptions Ark_PopupMessageOptions;
typedef struct Opt_PopupMessageOptions Opt_PopupMessageOptions;
typedef struct Ark_ResizableOptions Ark_ResizableOptions;
typedef struct Opt_ResizableOptions Opt_ResizableOptions;
typedef struct Ark_RichEditorLayoutStyle Ark_RichEditorLayoutStyle;
typedef struct Opt_RichEditorLayoutStyle Opt_RichEditorLayoutStyle;
typedef struct Ark_RichEditorParagraphStyle Ark_RichEditorParagraphStyle;
typedef struct Opt_RichEditorParagraphStyle Opt_RichEditorParagraphStyle;
typedef struct Ark_RichEditorParagraphStyleOptions Ark_RichEditorParagraphStyleOptions;
typedef struct Opt_RichEditorParagraphStyleOptions Opt_RichEditorParagraphStyleOptions;
typedef struct RotationGestureEventPeer RotationGestureEventPeer;
typedef struct RotationGestureEventPeer* Ark_RotationGestureEvent;
typedef struct Opt_RotationGestureEvent Opt_RotationGestureEvent;
typedef struct Ark_SectionOptions Ark_SectionOptions;
typedef struct Opt_SectionOptions Opt_SectionOptions;
typedef struct Ark_SheetOptions Ark_SheetOptions;
typedef struct Opt_SheetOptions Opt_SheetOptions;
typedef struct Ark_SwipeActionOptions Ark_SwipeActionOptions;
typedef struct Opt_SwipeActionOptions Opt_SwipeActionOptions;
typedef struct SwipeGestureEventPeer SwipeGestureEventPeer;
typedef struct SwipeGestureEventPeer* Ark_SwipeGestureEvent;
typedef struct Opt_SwipeGestureEvent Opt_SwipeGestureEvent;
typedef struct Ark_TabBarLabelStyle Ark_TabBarLabelStyle;
typedef struct Opt_TabBarLabelStyle Opt_TabBarLabelStyle;
typedef struct TapGestureEventPeer TapGestureEventPeer;
typedef struct TapGestureEventPeer* Ark_TapGestureEvent;
typedef struct Opt_TapGestureEvent Opt_TapGestureEvent;
typedef struct Ark_text_ParagraphStyle Ark_text_ParagraphStyle;
typedef struct Opt_text_ParagraphStyle Opt_text_ParagraphStyle;
typedef struct Ark_text_RunMetrics Ark_text_RunMetrics;
typedef struct Opt_text_RunMetrics Opt_text_RunMetrics;
typedef struct Ark_TextBackgroundStyle Ark_TextBackgroundStyle;
typedef struct Opt_TextBackgroundStyle Opt_TextBackgroundStyle;
typedef struct Ark_TextPickerTextStyle Ark_TextPickerTextStyle;
typedef struct Opt_TextPickerTextStyle Opt_TextPickerTextStyle;
typedef struct TouchEventPeer TouchEventPeer;
typedef struct TouchEventPeer* Ark_TouchEvent;
typedef struct Opt_TouchEvent Opt_TouchEvent;
typedef struct Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions;
typedef struct Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions;
typedef struct Ark_Union_DotIndicator_DigitIndicator Ark_Union_DotIndicator_DigitIndicator;
typedef struct Opt_Union_DotIndicator_DigitIndicator Opt_Union_DotIndicator_DigitIndicator;
typedef struct Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean;
typedef struct Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean;
typedef struct Ark_Union_Length_GutterOption Ark_Union_Length_GutterOption;
typedef struct Opt_Union_Length_GutterOption Opt_Union_Length_GutterOption;
typedef struct Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions;
typedef struct Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions;
typedef struct AccessibilityHoverEventPeer AccessibilityHoverEventPeer;
typedef struct AccessibilityHoverEventPeer* Ark_AccessibilityHoverEvent;
typedef struct Opt_AccessibilityHoverEvent Opt_AccessibilityHoverEvent;
typedef struct AxisEventPeer AxisEventPeer;
typedef struct AxisEventPeer* Ark_AxisEvent;
typedef struct Opt_AxisEvent Opt_AxisEvent;
typedef struct BackgroundColorStylePeer BackgroundColorStylePeer;
typedef struct BackgroundColorStylePeer* Ark_BackgroundColorStyle;
typedef struct Opt_BackgroundColorStyle Opt_BackgroundColorStyle;
typedef struct BaseEventPeer BaseEventPeer;
typedef struct BaseEventPeer* Ark_BaseEvent;
typedef struct Opt_BaseEvent Opt_BaseEvent;
typedef struct BaseGestureEventPeer BaseGestureEventPeer;
typedef struct BaseGestureEventPeer* Ark_BaseGestureEvent;
typedef struct Opt_BaseGestureEvent Opt_BaseGestureEvent;
typedef struct Ark_BottomTabBarStyle Ark_BottomTabBarStyle;
typedef struct Opt_BottomTabBarStyle Opt_BottomTabBarStyle;
typedef struct Ark_CalendarDialogOptions Ark_CalendarDialogOptions;
typedef struct Opt_CalendarDialogOptions Opt_CalendarDialogOptions;
typedef struct ClickEventPeer ClickEventPeer;
typedef struct ClickEventPeer* Ark_ClickEvent;
typedef struct Opt_ClickEvent Opt_ClickEvent;
typedef struct Ark_GridRowOptions Ark_GridRowOptions;
typedef struct Opt_GridRowOptions Opt_GridRowOptions;
typedef struct ImageAttachmentPeer ImageAttachmentPeer;
typedef struct ImageAttachmentPeer* Ark_ImageAttachment;
typedef struct Opt_ImageAttachment Opt_ImageAttachment;
typedef struct Ark_ImageAttachmentInterface Ark_ImageAttachmentInterface;
typedef struct Opt_ImageAttachmentInterface Opt_ImageAttachmentInterface;
typedef struct Ark_NativeEmbedDataInfo Ark_NativeEmbedDataInfo;
typedef struct Opt_NativeEmbedDataInfo Opt_NativeEmbedDataInfo;
typedef struct Ark_NativeEmbedTouchInfo Ark_NativeEmbedTouchInfo;
typedef struct Opt_NativeEmbedTouchInfo Opt_NativeEmbedTouchInfo;
typedef struct Ark_ResourceImageAttachmentOptions Ark_ResourceImageAttachmentOptions;
typedef struct Opt_ResourceImageAttachmentOptions Opt_ResourceImageAttachmentOptions;
typedef struct Ark_RichEditorImageSpanStyle Ark_RichEditorImageSpanStyle;
typedef struct Opt_RichEditorImageSpanStyle Opt_RichEditorImageSpanStyle;
typedef struct Ark_RichEditorImageSpanStyleResult Ark_RichEditorImageSpanStyleResult;
typedef struct Opt_RichEditorImageSpanStyleResult Opt_RichEditorImageSpanStyleResult;
typedef struct Ark_RichEditorParagraphResult Ark_RichEditorParagraphResult;
typedef struct Opt_RichEditorParagraphResult Opt_RichEditorParagraphResult;
typedef struct Ark_RichEditorTextStyle Ark_RichEditorTextStyle;
typedef struct Opt_RichEditorTextStyle Opt_RichEditorTextStyle;
typedef struct Ark_RichEditorTextStyleResult Ark_RichEditorTextStyleResult;
typedef struct Opt_RichEditorTextStyleResult Opt_RichEditorTextStyleResult;
typedef struct Ark_RichEditorUpdateImageSpanStyleOptions Ark_RichEditorUpdateImageSpanStyleOptions;
typedef struct Opt_RichEditorUpdateImageSpanStyleOptions Opt_RichEditorUpdateImageSpanStyleOptions;
typedef struct Ark_RichEditorUpdateTextSpanStyleOptions Ark_RichEditorUpdateTextSpanStyleOptions;
typedef struct Opt_RichEditorUpdateTextSpanStyleOptions Opt_RichEditorUpdateTextSpanStyleOptions;
typedef struct Ark_StyledStringValue Ark_StyledStringValue;
typedef struct Opt_StyledStringValue Opt_StyledStringValue;
typedef struct Ark_StyleOptions Ark_StyleOptions;
typedef struct Opt_StyleOptions Opt_StyleOptions;
typedef struct Ark_SubTabBarStyle Ark_SubTabBarStyle;
typedef struct Opt_SubTabBarStyle Opt_SubTabBarStyle;
typedef struct Ark_TextPickerDialogOptions Ark_TextPickerDialogOptions;
typedef struct Opt_TextPickerDialogOptions Opt_TextPickerDialogOptions;
typedef struct Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions;
typedef struct Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions;
typedef struct Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Opt_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions Opt_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Ark_Union_String_ImageAttachment_CustomSpan Ark_Union_String_ImageAttachment_CustomSpan;
typedef struct Opt_Union_String_ImageAttachment_CustomSpan Opt_Union_String_ImageAttachment_CustomSpan;
typedef struct Ark_AttachmentType Ark_AttachmentType;
typedef struct Opt_AttachmentType Opt_AttachmentType;
typedef struct Ark_RichEditorImageSpanOptions Ark_RichEditorImageSpanOptions;
typedef struct Opt_RichEditorImageSpanOptions Opt_RichEditorImageSpanOptions;
typedef struct Ark_RichEditorImageSpanResult Ark_RichEditorImageSpanResult;
typedef struct Opt_RichEditorImageSpanResult Opt_RichEditorImageSpanResult;
typedef struct Ark_RichEditorTextSpanOptions Ark_RichEditorTextSpanOptions;
typedef struct Opt_RichEditorTextSpanOptions Opt_RichEditorTextSpanOptions;
typedef struct Ark_RichEditorTextSpanResult Ark_RichEditorTextSpanResult;
typedef struct Opt_RichEditorTextSpanResult Opt_RichEditorTextSpanResult;
typedef struct Ark_SpanStyle Ark_SpanStyle;
typedef struct Opt_SpanStyle Opt_SpanStyle;
typedef struct Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Opt_Union_RichEditorImageSpanResult_RichEditorTextSpanResult Opt_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Opt_Union_RichEditorTextSpanResult_RichEditorImageSpanResult Opt_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Ark_RichEditorSpan Ark_RichEditorSpan;
typedef struct Opt_RichEditorSpan Opt_RichEditorSpan;
typedef struct Ark_Union_ImageAttachmentInterface_Opt_AttachmentType Ark_Union_ImageAttachmentInterface_Opt_AttachmentType;
typedef struct Opt_Union_ImageAttachmentInterface_Opt_AttachmentType Opt_Union_ImageAttachmentInterface_Opt_AttachmentType;
typedef struct Ark_AsymmetricTransitionOption Ark_AsymmetricTransitionOption;
typedef struct Opt_AsymmetricTransitionOption Opt_AsymmetricTransitionOption;
typedef struct Ark_ContentCoverOptions Ark_ContentCoverOptions;
typedef struct Opt_ContentCoverOptions Opt_ContentCoverOptions;
typedef struct Ark_ContextMenuAnimationOptions Ark_ContextMenuAnimationOptions;
typedef struct Opt_ContextMenuAnimationOptions Opt_ContextMenuAnimationOptions;
typedef struct Ark_ContextMenuOptions Ark_ContextMenuOptions;
typedef struct Opt_ContextMenuOptions Opt_ContextMenuOptions;
typedef struct Ark_CustomPopupOptions Ark_CustomPopupOptions;
typedef struct Opt_CustomPopupOptions Opt_CustomPopupOptions;
typedef struct Ark_MenuOptions Ark_MenuOptions;
typedef struct Opt_MenuOptions Opt_MenuOptions;
typedef struct Ark_PopupCommonOptions Ark_PopupCommonOptions;
typedef struct Opt_PopupCommonOptions Opt_PopupCommonOptions;
typedef struct Ark_PopupOptions Ark_PopupOptions;
typedef struct Opt_PopupOptions Opt_PopupOptions;
typedef struct TransitionEffectPeer TransitionEffectPeer;
typedef struct TransitionEffectPeer* Ark_TransitionEffect;
typedef struct Opt_TransitionEffect Opt_TransitionEffect;
typedef struct Ark_Union_PopupOptions_CustomPopupOptions Ark_Union_PopupOptions_CustomPopupOptions;
typedef struct Opt_Union_PopupOptions_CustomPopupOptions Opt_Union_PopupOptions_CustomPopupOptions;
typedef Ark_Object Ark_ContentModifier;
typedef Opt_Object Opt_ContentModifier;
typedef enum Ark_AccessibilityHoverType {
    ARK_ACCESSIBILITY_HOVER_TYPE_HOVER_ENTER = 0,
    ARK_ACCESSIBILITY_HOVER_TYPE_HOVER_MOVE = 1,
    ARK_ACCESSIBILITY_HOVER_TYPE_HOVER_EXIT = 2,
    ARK_ACCESSIBILITY_HOVER_TYPE_HOVER_CANCEL = 3,
} Ark_AccessibilityHoverType;
typedef struct Opt_AccessibilityHoverType {
    Ark_Tag tag;
    Ark_AccessibilityHoverType value;
} Opt_AccessibilityHoverType;
typedef enum Ark_AccessibilityRoleType {
    ARK_ACCESSIBILITY_ROLE_TYPE_ACTION_SHEET = 0,
    ARK_ACCESSIBILITY_ROLE_TYPE_ALERT_DIALOG = 1,
    ARK_ACCESSIBILITY_ROLE_TYPE_INDEXER_COMPONENT = 2,
    ARK_ACCESSIBILITY_ROLE_TYPE_BADGE_COMPONENT = 3,
    ARK_ACCESSIBILITY_ROLE_TYPE_BLANK = 4,
    ARK_ACCESSIBILITY_ROLE_TYPE_BUTTON = 5,
    ARK_ACCESSIBILITY_ROLE_TYPE_BACK_BUTTON = 6,
    ARK_ACCESSIBILITY_ROLE_TYPE_SHEET_DRAG_BAR = 7,
    ARK_ACCESSIBILITY_ROLE_TYPE_CALENDAR_PICKER = 8,
    ARK_ACCESSIBILITY_ROLE_TYPE_CALENDAR = 9,
    ARK_ACCESSIBILITY_ROLE_TYPE_CANVAS = 10,
    ARK_ACCESSIBILITY_ROLE_TYPE_CANVAS_GRADIENT = 11,
    ARK_ACCESSIBILITY_ROLE_TYPE_CANVAS_PATTERN = 12,
    ARK_ACCESSIBILITY_ROLE_TYPE_CHECKBOX = 13,
    ARK_ACCESSIBILITY_ROLE_TYPE_CHECKBOX_GROUP = 14,
    ARK_ACCESSIBILITY_ROLE_TYPE_CIRCLE = 15,
    ARK_ACCESSIBILITY_ROLE_TYPE_COLUMN_SPLIT = 16,
    ARK_ACCESSIBILITY_ROLE_TYPE_COLUMN = 17,
    ARK_ACCESSIBILITY_ROLE_TYPE_CANVAS_RENDERING_CONTEXT_2D = 18,
    ARK_ACCESSIBILITY_ROLE_TYPE_CHART = 19,
    ARK_ACCESSIBILITY_ROLE_TYPE_COUNTER = 20,
    ARK_ACCESSIBILITY_ROLE_TYPE_CONTAINER_MODAL = 21,
    ARK_ACCESSIBILITY_ROLE_TYPE_DATA_PANEL = 22,
    ARK_ACCESSIBILITY_ROLE_TYPE_DATE_PICKER = 23,
    ARK_ACCESSIBILITY_ROLE_TYPE_DIALOG = 24,
    ARK_ACCESSIBILITY_ROLE_TYPE_DIVIDER = 25,
    ARK_ACCESSIBILITY_ROLE_TYPE_DRAG_BAR = 26,
    ARK_ACCESSIBILITY_ROLE_TYPE_EFFECT_COMPONENT = 27,
    ARK_ACCESSIBILITY_ROLE_TYPE_ELLIPSE = 28,
    ARK_ACCESSIBILITY_ROLE_TYPE_FLEX = 29,
    ARK_ACCESSIBILITY_ROLE_TYPE_FLOW_ITEM = 30,
    ARK_ACCESSIBILITY_ROLE_TYPE_FORM_COMPONENT = 31,
    ARK_ACCESSIBILITY_ROLE_TYPE_FORM_LINK = 32,
    ARK_ACCESSIBILITY_ROLE_TYPE_GAUGE = 33,
    ARK_ACCESSIBILITY_ROLE_TYPE_GRID = 34,
    ARK_ACCESSIBILITY_ROLE_TYPE_GRID_COL = 35,
    ARK_ACCESSIBILITY_ROLE_TYPE_GRID_CONTAINER = 36,
    ARK_ACCESSIBILITY_ROLE_TYPE_GRID_ITEM = 37,
    ARK_ACCESSIBILITY_ROLE_TYPE_GRID_ROW = 38,
    ARK_ACCESSIBILITY_ROLE_TYPE_HYPERLINK = 39,
    ARK_ACCESSIBILITY_ROLE_TYPE_IMAGE = 40,
    ARK_ACCESSIBILITY_ROLE_TYPE_IMAGE_ANIMATOR = 41,
    ARK_ACCESSIBILITY_ROLE_TYPE_IMAGE_BITMAP = 42,
    ARK_ACCESSIBILITY_ROLE_TYPE_IMAGE_DATA = 43,
    ARK_ACCESSIBILITY_ROLE_TYPE_IMAGE_SPAN = 44,
    ARK_ACCESSIBILITY_ROLE_TYPE_LABEL = 45,
    ARK_ACCESSIBILITY_ROLE_TYPE_LINE = 46,
    ARK_ACCESSIBILITY_ROLE_TYPE_LIST = 47,
    ARK_ACCESSIBILITY_ROLE_TYPE_LIST_ITEM = 48,
    ARK_ACCESSIBILITY_ROLE_TYPE_LIST_ITEM_GROUP = 49,
    ARK_ACCESSIBILITY_ROLE_TYPE_LOADING_PROGRESS = 50,
    ARK_ACCESSIBILITY_ROLE_TYPE_MARQUEE = 51,
    ARK_ACCESSIBILITY_ROLE_TYPE_MATRIX2D = 52,
    ARK_ACCESSIBILITY_ROLE_TYPE_MENU = 53,
    ARK_ACCESSIBILITY_ROLE_TYPE_MENU_ITEM = 54,
    ARK_ACCESSIBILITY_ROLE_TYPE_MENU_ITEM_GROUP = 55,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAV_DESTINATION = 56,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAV_ROUTER = 57,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAVIGATION = 58,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAVIGATION_BAR = 59,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAVIGATION_MENU = 60,
    ARK_ACCESSIBILITY_ROLE_TYPE_NAVIGATOR = 61,
    ARK_ACCESSIBILITY_ROLE_TYPE_OFFSCREEN_CANVAS = 62,
    ARK_ACCESSIBILITY_ROLE_TYPE_OFFSCREEN_CANVAS_RENDERING_CONTEXT2D = 63,
    ARK_ACCESSIBILITY_ROLE_TYPE_OPTION = 64,
    ARK_ACCESSIBILITY_ROLE_TYPE_PANEL = 65,
    ARK_ACCESSIBILITY_ROLE_TYPE_PAPER_PAGE = 66,
    ARK_ACCESSIBILITY_ROLE_TYPE_PATH = 67,
    ARK_ACCESSIBILITY_ROLE_TYPE_PATH2D = 68,
    ARK_ACCESSIBILITY_ROLE_TYPE_PATTERN_LOCK = 69,
    ARK_ACCESSIBILITY_ROLE_TYPE_PICKER = 70,
    ARK_ACCESSIBILITY_ROLE_TYPE_PICKER_VIEW = 71,
    ARK_ACCESSIBILITY_ROLE_TYPE_PLUGIN_COMPONENT = 72,
    ARK_ACCESSIBILITY_ROLE_TYPE_POLYGON = 73,
    ARK_ACCESSIBILITY_ROLE_TYPE_POLYLINE = 74,
    ARK_ACCESSIBILITY_ROLE_TYPE_POPUP = 75,
    ARK_ACCESSIBILITY_ROLE_TYPE_PROGRESS = 76,
    ARK_ACCESSIBILITY_ROLE_TYPE_QRCODE = 77,
    ARK_ACCESSIBILITY_ROLE_TYPE_RADIO = 78,
    ARK_ACCESSIBILITY_ROLE_TYPE_RATING = 79,
    ARK_ACCESSIBILITY_ROLE_TYPE_RECT = 80,
    ARK_ACCESSIBILITY_ROLE_TYPE_REFRESH = 81,
    ARK_ACCESSIBILITY_ROLE_TYPE_RELATIVE_CONTAINER = 82,
    ARK_ACCESSIBILITY_ROLE_TYPE_REMOTE_WINDOW = 83,
    ARK_ACCESSIBILITY_ROLE_TYPE_RICH_EDITOR = 84,
    ARK_ACCESSIBILITY_ROLE_TYPE_RICH_TEXT = 85,
    ARK_ACCESSIBILITY_ROLE_TYPE_ROLE_PAGER = 86,
    ARK_ACCESSIBILITY_ROLE_TYPE_ROW = 87,
    ARK_ACCESSIBILITY_ROLE_TYPE_ROW_SPLIT = 88,
    ARK_ACCESSIBILITY_ROLE_TYPE_SCROLL = 89,
    ARK_ACCESSIBILITY_ROLE_TYPE_SCROLL_BAR = 90,
    ARK_ACCESSIBILITY_ROLE_TYPE_SEARCH = 91,
    ARK_ACCESSIBILITY_ROLE_TYPE_SEARCH_FIELD = 92,
    ARK_ACCESSIBILITY_ROLE_TYPE_SELECT = 93,
    ARK_ACCESSIBILITY_ROLE_TYPE_SHAPE = 94,
    ARK_ACCESSIBILITY_ROLE_TYPE_SIDEBAR_CONTAINER = 95,
    ARK_ACCESSIBILITY_ROLE_TYPE_SLIDER = 96,
    ARK_ACCESSIBILITY_ROLE_TYPE_SPAN = 97,
    ARK_ACCESSIBILITY_ROLE_TYPE_STACK = 98,
    ARK_ACCESSIBILITY_ROLE_TYPE_STEPPER = 99,
    ARK_ACCESSIBILITY_ROLE_TYPE_STEPPER_ITEM = 100,
    ARK_ACCESSIBILITY_ROLE_TYPE_SWIPER = 101,
    ARK_ACCESSIBILITY_ROLE_TYPE_SWIPER_INDICATOR = 102,
    ARK_ACCESSIBILITY_ROLE_TYPE_SWITCH = 103,
    ARK_ACCESSIBILITY_ROLE_TYPE_SYMBOL_GLYPH = 104,
    ARK_ACCESSIBILITY_ROLE_TYPE_TAB_CONTENT = 105,
    ARK_ACCESSIBILITY_ROLE_TYPE_TAB_BAR = 106,
    ARK_ACCESSIBILITY_ROLE_TYPE_TABS = 107,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT = 108,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_CLOCK = 109,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_ENTRY = 110,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_INPUT = 111,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_PICKER = 112,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_TIMER = 113,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_AREA = 114,
    ARK_ACCESSIBILITY_ROLE_TYPE_TEXT_FIELD = 115,
    ARK_ACCESSIBILITY_ROLE_TYPE_TIME_PICKER = 116,
    ARK_ACCESSIBILITY_ROLE_TYPE_TITLE_BAR = 117,
    ARK_ACCESSIBILITY_ROLE_TYPE_TOGGLER = 118,
    ARK_ACCESSIBILITY_ROLE_TYPE_UI_EXTENSION_COMPONENT = 119,
    ARK_ACCESSIBILITY_ROLE_TYPE_VIDEO = 120,
    ARK_ACCESSIBILITY_ROLE_TYPE_WATER_FLOW = 121,
    ARK_ACCESSIBILITY_ROLE_TYPE_WEB = 122,
    ARK_ACCESSIBILITY_ROLE_TYPE_XCOMPONENT = 123,
    ARK_ACCESSIBILITY_ROLE_TYPE_ROLE_NONE = 124,
} Ark_AccessibilityRoleType;
typedef struct Opt_AccessibilityRoleType {
    Ark_Tag tag;
    Ark_AccessibilityRoleType value;
} Opt_AccessibilityRoleType;
typedef enum Ark_AccessibilitySamePageMode {
    ARK_ACCESSIBILITY_SAME_PAGE_MODE_SEMI_SILENT = 0,
    ARK_ACCESSIBILITY_SAME_PAGE_MODE_FULL_SILENT = 1,
} Ark_AccessibilitySamePageMode;
typedef struct Opt_AccessibilitySamePageMode {
    Ark_Tag tag;
    Ark_AccessibilitySamePageMode value;
} Opt_AccessibilitySamePageMode;
typedef enum Ark_AdaptiveColor {
    ARK_ADAPTIVE_COLOR_DEFAULT = 0,
    ARK_ADAPTIVE_COLOR_AVERAGE = 1,
} Ark_AdaptiveColor;
typedef struct Opt_AdaptiveColor {
    Ark_Tag tag;
    Ark_AdaptiveColor value;
} Opt_AdaptiveColor;
typedef enum Ark_Alignment {
    ARK_ALIGNMENT_TOP_START = 0,
    ARK_ALIGNMENT_TOP = 1,
    ARK_ALIGNMENT_TOP_END = 2,
    ARK_ALIGNMENT_START = 3,
    ARK_ALIGNMENT_CENTER = 4,
    ARK_ALIGNMENT_END = 5,
    ARK_ALIGNMENT_BOTTOM_START = 6,
    ARK_ALIGNMENT_BOTTOM = 7,
    ARK_ALIGNMENT_BOTTOM_END = 8,
} Ark_Alignment;
typedef struct Opt_Alignment {
    Ark_Tag tag;
    Ark_Alignment value;
} Opt_Alignment;
typedef enum Ark_AnimationMode {
    ARK_ANIMATION_MODE_CONTENT_FIRST = 0,
    ARK_ANIMATION_MODE_ACTION_FIRST = 1,
    ARK_ANIMATION_MODE_NO_ANIMATION = 2,
    ARK_ANIMATION_MODE_CONTENT_FIRST_WITH_JUMP = 3,
    ARK_ANIMATION_MODE_ACTION_FIRST_WITH_JUMP = 4,
} Ark_AnimationMode;
typedef struct Opt_AnimationMode {
    Ark_Tag tag;
    Ark_AnimationMode value;
} Opt_AnimationMode;
typedef enum Ark_AnimationStatus {
    ARK_ANIMATION_STATUS_INITIAL = 0,
    ARK_ANIMATION_STATUS_RUNNING = 1,
    ARK_ANIMATION_STATUS_PAUSED = 2,
    ARK_ANIMATION_STATUS_STOPPED = 3,
} Ark_AnimationStatus;
typedef struct Opt_AnimationStatus {
    Ark_Tag tag;
    Ark_AnimationStatus value;
} Opt_AnimationStatus;
typedef enum Ark_AppRotation {
    ARK_APP_ROTATION_ROTATION_0 = 0,
    ARK_APP_ROTATION_ROTATION_90 = 1,
    ARK_APP_ROTATION_ROTATION_180 = 2,
    ARK_APP_ROTATION_ROTATION_270 = 3,
} Ark_AppRotation;
typedef struct Opt_AppRotation {
    Ark_Tag tag;
    Ark_AppRotation value;
} Opt_AppRotation;
typedef enum Ark_ArrowPointPosition {
    ARK_ARROW_POINT_POSITION_START,
    ARK_ARROW_POINT_POSITION_CENTER,
    ARK_ARROW_POINT_POSITION_END,
} Ark_ArrowPointPosition;
typedef struct Opt_ArrowPointPosition {
    Ark_Tag tag;
    Ark_ArrowPointPosition value;
} Opt_ArrowPointPosition;
typedef enum Ark_ArrowPosition {
    ARK_ARROW_POSITION_END = 0,
    ARK_ARROW_POSITION_START = 1,
} Ark_ArrowPosition;
typedef struct Opt_ArrowPosition {
    Ark_Tag tag;
    Ark_ArrowPosition value;
} Opt_ArrowPosition;
typedef enum Ark_AutoCapitalizationMode {
    ARK_AUTO_CAPITALIZATION_MODE_NONE = 0,
    ARK_AUTO_CAPITALIZATION_MODE_WORDS = 1,
    ARK_AUTO_CAPITALIZATION_MODE_SENTENCES = 2,
    ARK_AUTO_CAPITALIZATION_MODE_ALL_CHARACTERS = 3,
} Ark_AutoCapitalizationMode;
typedef struct Opt_AutoCapitalizationMode {
    Ark_Tag tag;
    Ark_AutoCapitalizationMode value;
} Opt_AutoCapitalizationMode;
typedef enum Ark_AvoidanceMode {
    ARK_AVOIDANCE_MODE_COVER_TARGET = 0,
    ARK_AVOIDANCE_MODE_AVOID_AROUND_TARGET = 1,
} Ark_AvoidanceMode;
typedef struct Opt_AvoidanceMode {
    Ark_Tag tag;
    Ark_AvoidanceMode value;
} Opt_AvoidanceMode;
typedef enum Ark_Axis {
    ARK_AXIS_VERTICAL = 0,
    ARK_AXIS_HORIZONTAL = 1,
} Ark_Axis;
typedef struct Opt_Axis {
    Ark_Tag tag;
    Ark_Axis value;
} Opt_Axis;
typedef enum Ark_AxisAction {
    ARK_AXIS_ACTION_NONE = 0,
    ARK_AXIS_ACTION_BEGIN = 1,
    ARK_AXIS_ACTION_UPDATE = 2,
    ARK_AXIS_ACTION_END = 3,
    ARK_AXIS_ACTION_CANCEL = 4,
} Ark_AxisAction;
typedef struct Opt_AxisAction {
    Ark_Tag tag;
    Ark_AxisAction value;
} Opt_AxisAction;
typedef enum Ark_AxisModel {
    ARK_AXIS_MODEL_ABS_X = 0,
    ARK_AXIS_MODEL_ABS_Y = 1,
    ARK_AXIS_MODEL_ABS_Z = 2,
    ARK_AXIS_MODEL_ABS_RZ = 3,
    ARK_AXIS_MODEL_ABS_GAS = 4,
    ARK_AXIS_MODEL_ABS_BRAKE = 5,
    ARK_AXIS_MODEL_ABS_HAT0X = 6,
    ARK_AXIS_MODEL_ABS_HAT0Y = 7,
} Ark_AxisModel;
typedef struct Opt_AxisModel {
    Ark_Tag tag;
    Ark_AxisModel value;
} Opt_AxisModel;
typedef enum Ark_BadgePosition {
    ARK_BADGE_POSITION_RIGHT_TOP = 0,
    ARK_BADGE_POSITION_RIGHT = 1,
    ARK_BADGE_POSITION_LEFT = 2,
} Ark_BadgePosition;
typedef struct Opt_BadgePosition {
    Ark_Tag tag;
    Ark_BadgePosition value;
} Opt_BadgePosition;
typedef enum Ark_BarMode {
    ARK_BAR_MODE_SCROLLABLE = 0,
    ARK_BAR_MODE_FIXED = 1,
} Ark_BarMode;
typedef struct Opt_BarMode {
    Ark_Tag tag;
    Ark_BarMode value;
} Opt_BarMode;
typedef enum Ark_BarPosition {
    ARK_BAR_POSITION_START = 0,
    ARK_BAR_POSITION_END = 1,
} Ark_BarPosition;
typedef struct Opt_BarPosition {
    Ark_Tag tag;
    Ark_BarPosition value;
} Opt_BarPosition;
typedef enum Ark_BarrierDirection {
    ARK_BARRIER_DIRECTION_LEFT = 0,
    ARK_BARRIER_DIRECTION_RIGHT = 1,
    ARK_BARRIER_DIRECTION_TOP = 2,
    ARK_BARRIER_DIRECTION_BOTTOM = 3,
} Ark_BarrierDirection;
typedef struct Opt_BarrierDirection {
    Ark_Tag tag;
    Ark_BarrierDirection value;
} Opt_BarrierDirection;
typedef enum Ark_BarState {
    ARK_BAR_STATE_OFF = 0,
    ARK_BAR_STATE_AUTO = 1,
    ARK_BAR_STATE_ON = 2,
} Ark_BarState;
typedef struct Opt_BarState {
    Ark_Tag tag;
    Ark_BarState value;
} Opt_BarState;
typedef enum Ark_BarStyle {
    ARK_BAR_STYLE_STANDARD = 0,
    ARK_BAR_STYLE_STACK = 1,
    ARK_BAR_STYLE_SAFE_AREA_PADDING = 2,
} Ark_BarStyle;
typedef struct Opt_BarStyle {
    Ark_Tag tag;
    Ark_BarStyle value;
} Opt_BarStyle;
typedef enum Ark_BlendApplyType {
    ARK_BLEND_APPLY_TYPE_FAST = 0,
    ARK_BLEND_APPLY_TYPE_OFFSCREEN = 1,
} Ark_BlendApplyType;
typedef struct Opt_BlendApplyType {
    Ark_Tag tag;
    Ark_BlendApplyType value;
} Opt_BlendApplyType;
typedef enum Ark_BlendMode {
    ARK_BLEND_MODE_NONE = 0,
    ARK_BLEND_MODE_CLEAR = 1,
    ARK_BLEND_MODE_SRC = 2,
    ARK_BLEND_MODE_DST = 3,
    ARK_BLEND_MODE_SRC_OVER = 4,
    ARK_BLEND_MODE_DST_OVER = 5,
    ARK_BLEND_MODE_SRC_IN = 6,
    ARK_BLEND_MODE_DST_IN = 7,
    ARK_BLEND_MODE_SRC_OUT = 8,
    ARK_BLEND_MODE_DST_OUT = 9,
    ARK_BLEND_MODE_SRC_ATOP = 10,
    ARK_BLEND_MODE_DST_ATOP = 11,
    ARK_BLEND_MODE_XOR = 12,
    ARK_BLEND_MODE_PLUS = 13,
    ARK_BLEND_MODE_MODULATE = 14,
    ARK_BLEND_MODE_SCREEN = 15,
    ARK_BLEND_MODE_OVERLAY = 16,
    ARK_BLEND_MODE_DARKEN = 17,
    ARK_BLEND_MODE_LIGHTEN = 18,
    ARK_BLEND_MODE_COLOR_DODGE = 19,
    ARK_BLEND_MODE_COLOR_BURN = 20,
    ARK_BLEND_MODE_HARD_LIGHT = 21,
    ARK_BLEND_MODE_SOFT_LIGHT = 22,
    ARK_BLEND_MODE_DIFFERENCE = 23,
    ARK_BLEND_MODE_EXCLUSION = 24,
    ARK_BLEND_MODE_MULTIPLY = 25,
    ARK_BLEND_MODE_HUE = 26,
    ARK_BLEND_MODE_SATURATION = 27,
    ARK_BLEND_MODE_COLOR = 28,
    ARK_BLEND_MODE_LUMINOSITY = 29,
} Ark_BlendMode;
typedef struct Opt_BlendMode {
    Ark_Tag tag;
    Ark_BlendMode value;
} Opt_BlendMode;
typedef enum Ark_BlurOnKeyboardHideMode {
    ARK_BLUR_ON_KEYBOARD_HIDE_MODE_SILENT = 0,
    ARK_BLUR_ON_KEYBOARD_HIDE_MODE_BLUR = 1,
} Ark_BlurOnKeyboardHideMode;
typedef struct Opt_BlurOnKeyboardHideMode {
    Ark_Tag tag;
    Ark_BlurOnKeyboardHideMode value;
} Opt_BlurOnKeyboardHideMode;
typedef enum Ark_BlurStyle {
    ARK_BLUR_STYLE_THIN = 0,
    ARK_BLUR_STYLE_REGULAR = 1,
    ARK_BLUR_STYLE_THICK = 2,
    ARK_BLUR_STYLE_BACKGROUND_THIN = 3,
    ARK_BLUR_STYLE_BACKGROUND_REGULAR = 4,
    ARK_BLUR_STYLE_BACKGROUND_THICK = 5,
    ARK_BLUR_STYLE_BACKGROUND_ULTRA_THICK = 6,
    ARK_BLUR_STYLE_NONE = 7,
    ARK_BLUR_STYLE_COMPONENT_ULTRA_THIN = 8,
    ARK_BLUR_STYLE_COMPONENT_THIN = 9,
    ARK_BLUR_STYLE_COMPONENT_REGULAR = 10,
    ARK_BLUR_STYLE_COMPONENT_THICK = 11,
    ARK_BLUR_STYLE_COMPONENT_ULTRA_THICK = 12,
} Ark_BlurStyle;
typedef struct Opt_BlurStyle {
    Ark_Tag tag;
    Ark_BlurStyle value;
} Opt_BlurStyle;
typedef enum Ark_BlurStyleActivePolicy {
    ARK_BLUR_STYLE_ACTIVE_POLICY_FOLLOWS_WINDOW_ACTIVE_STATE = 0,
    ARK_BLUR_STYLE_ACTIVE_POLICY_ALWAYS_ACTIVE = 1,
    ARK_BLUR_STYLE_ACTIVE_POLICY_ALWAYS_INACTIVE = 2,
} Ark_BlurStyleActivePolicy;
typedef struct Opt_BlurStyleActivePolicy {
    Ark_Tag tag;
    Ark_BlurStyleActivePolicy value;
} Opt_BlurStyleActivePolicy;
typedef enum Ark_BorderStyle {
    ARK_BORDER_STYLE_DOTTED = 0,
    ARK_BORDER_STYLE_DASHED = 1,
    ARK_BORDER_STYLE_SOLID = 2,
} Ark_BorderStyle;
typedef struct Opt_BorderStyle {
    Ark_Tag tag;
    Ark_BorderStyle value;
} Opt_BorderStyle;
typedef enum Ark_BreakpointsReference {
    ARK_BREAKPOINTS_REFERENCE_WINDOW_SIZE = 0,
    ARK_BREAKPOINTS_REFERENCE_COMPONENT_SIZE = 1,
} Ark_BreakpointsReference;
typedef struct Opt_BreakpointsReference {
    Ark_Tag tag;
    Ark_BreakpointsReference value;
} Opt_BreakpointsReference;
typedef enum Ark_ButtonRole {
    ARK_BUTTON_ROLE_NORMAL = 0,
    ARK_BUTTON_ROLE_ERROR = 1,
} Ark_ButtonRole;
typedef struct Opt_ButtonRole {
    Ark_Tag tag;
    Ark_ButtonRole value;
} Opt_ButtonRole;
typedef enum Ark_ButtonStyleMode {
    ARK_BUTTON_STYLE_MODE_NORMAL = 0,
    ARK_BUTTON_STYLE_MODE_EMPHASIZED = 1,
    ARK_BUTTON_STYLE_MODE_TEXTUAL = 2,
} Ark_ButtonStyleMode;
typedef struct Opt_ButtonStyleMode {
    Ark_Tag tag;
    Ark_ButtonStyleMode value;
} Opt_ButtonStyleMode;
typedef enum Ark_ButtonType {
    ARK_BUTTON_TYPE_CAPSULE = 0,
    ARK_BUTTON_TYPE_CIRCLE = 1,
    ARK_BUTTON_TYPE_NORMAL = 2,
    ARK_BUTTON_TYPE_ROUNDED_RECTANGLE = 3,
} Ark_ButtonType;
typedef struct Opt_ButtonType {
    Ark_Tag tag;
    Ark_ButtonType value;
} Opt_ButtonType;
typedef enum Ark_CacheMode {
    ARK_CACHE_MODE_DEFAULT = 0,
    ARK_CACHE_MODE_NONE = 1,
    ARK_CACHE_MODE_ONLINE = 2,
    ARK_CACHE_MODE_ONLY = 3,
} Ark_CacheMode;
typedef struct Opt_CacheMode {
    Ark_Tag tag;
    Ark_CacheMode value;
} Opt_CacheMode;
typedef enum Ark_CalendarAlign {
    ARK_CALENDAR_ALIGN_START = 0,
    ARK_CALENDAR_ALIGN_CENTER = 1,
    ARK_CALENDAR_ALIGN_END = 2,
} Ark_CalendarAlign;
typedef struct Opt_CalendarAlign {
    Ark_Tag tag;
    Ark_CalendarAlign value;
} Opt_CalendarAlign;
typedef enum Ark_CancelButtonStyle {
    ARK_CANCEL_BUTTON_STYLE_CONSTANT = 0,
    ARK_CANCEL_BUTTON_STYLE_INVISIBLE = 1,
    ARK_CANCEL_BUTTON_STYLE_INPUT = 2,
} Ark_CancelButtonStyle;
typedef struct Opt_CancelButtonStyle {
    Ark_Tag tag;
    Ark_CancelButtonStyle value;
} Opt_CancelButtonStyle;
typedef enum Ark_ChainEdgeEffect {
    ARK_CHAIN_EDGE_EFFECT_DEFAULT = 0,
    ARK_CHAIN_EDGE_EFFECT_STRETCH = 1,
} Ark_ChainEdgeEffect;
typedef struct Opt_ChainEdgeEffect {
    Ark_Tag tag;
    Ark_ChainEdgeEffect value;
} Opt_ChainEdgeEffect;
typedef enum Ark_ChainStyle {
    ARK_CHAIN_STYLE_SPREAD = 0,
    ARK_CHAIN_STYLE_SPREAD_INSIDE = 1,
    ARK_CHAIN_STYLE_PACKED = 2,
} Ark_ChainStyle;
typedef struct Opt_ChainStyle {
    Ark_Tag tag;
    Ark_ChainStyle value;
} Opt_ChainStyle;
typedef enum Ark_CheckBoxShape {
    ARK_CHECK_BOX_SHAPE_CIRCLE = 0,
    ARK_CHECK_BOX_SHAPE_ROUNDED_SQUARE = 1,
} Ark_CheckBoxShape;
typedef struct Opt_CheckBoxShape {
    Ark_Tag tag;
    Ark_CheckBoxShape value;
} Opt_CheckBoxShape;
typedef enum Ark_ClickEffectLevel {
    ARK_CLICK_EFFECT_LEVEL_LIGHT = 0,
    ARK_CLICK_EFFECT_LEVEL_MIDDLE = 1,
    ARK_CLICK_EFFECT_LEVEL_HEAVY = 2,
} Ark_ClickEffectLevel;
typedef struct Opt_ClickEffectLevel {
    Ark_Tag tag;
    Ark_ClickEffectLevel value;
} Opt_ClickEffectLevel;
typedef enum Ark_Color {
    ARK_COLOR_WHITE = 0,
    ARK_COLOR_BLACK = 1,
    ARK_COLOR_BLUE = 2,
    ARK_COLOR_BROWN = 3,
    ARK_COLOR_GRAY = 4,
    ARK_COLOR_GREEN = 5,
    ARK_COLOR_GREY = 6,
    ARK_COLOR_ORANGE = 7,
    ARK_COLOR_PINK = 8,
    ARK_COLOR_RED = 9,
    ARK_COLOR_YELLOW = 10,
    ARK_COLOR_TRANSPARENT = 11,
} Ark_Color;
typedef struct Opt_Color {
    Ark_Tag tag;
    Ark_Color value;
} Opt_Color;
typedef enum Ark_ColoringStrategy {
    ARK_COLORING_STRATEGY_INVERT,
    ARK_COLORING_STRATEGY_AVERAGE,
    ARK_COLORING_STRATEGY_PRIMARY,
} Ark_ColoringStrategy;
typedef struct Opt_ColoringStrategy {
    Ark_Tag tag;
    Ark_ColoringStrategy value;
} Opt_ColoringStrategy;
typedef enum Ark_ColorMode {
    ARK_COLOR_MODE_LIGHT = 0,
    ARK_COLOR_MODE_DARK = 1,
} Ark_ColorMode;
typedef struct Opt_ColorMode {
    Ark_Tag tag;
    Ark_ColorMode value;
} Opt_ColorMode;
typedef enum Ark_ContentClipMode {
    ARK_CONTENT_CLIP_MODE_CONTENT_ONLY = 0,
    ARK_CONTENT_CLIP_MODE_BOUNDARY = 1,
    ARK_CONTENT_CLIP_MODE_SAFE_AREA = 2,
} Ark_ContentClipMode;
typedef struct Opt_ContentClipMode {
    Ark_Tag tag;
    Ark_ContentClipMode value;
} Opt_ContentClipMode;
typedef enum Ark_ContentType {
    ARK_CONTENT_TYPE_USER_NAME = 0,
    ARK_CONTENT_TYPE_PASSWORD = 1,
    ARK_CONTENT_TYPE_NEW_PASSWORD = 2,
    ARK_CONTENT_TYPE_FULL_STREET_ADDRESS = 3,
    ARK_CONTENT_TYPE_HOUSE_NUMBER = 4,
    ARK_CONTENT_TYPE_DISTRICT_ADDRESS = 5,
    ARK_CONTENT_TYPE_CITY_ADDRESS = 6,
    ARK_CONTENT_TYPE_PROVINCE_ADDRESS = 7,
    ARK_CONTENT_TYPE_COUNTRY_ADDRESS = 8,
    ARK_CONTENT_TYPE_PERSON_FULL_NAME = 9,
    ARK_CONTENT_TYPE_PERSON_LAST_NAME = 10,
    ARK_CONTENT_TYPE_PERSON_FIRST_NAME = 11,
    ARK_CONTENT_TYPE_PHONE_NUMBER = 12,
    ARK_CONTENT_TYPE_PHONE_COUNTRY_CODE = 13,
    ARK_CONTENT_TYPE_FULL_PHONE_NUMBER = 14,
    ARK_CONTENT_TYPE_EMAIL_ADDRESS = 15,
    ARK_CONTENT_TYPE_BANK_CARD_NUMBER = 16,
    ARK_CONTENT_TYPE_ID_CARD_NUMBER = 17,
    ARK_CONTENT_TYPE_NICKNAME = 23,
    ARK_CONTENT_TYPE_DETAIL_INFO_WITHOUT_STREET = 24,
    ARK_CONTENT_TYPE_FORMAT_ADDRESS = 25,
    ARK_CONTENT_TYPE_PASSPORT_NUMBER = 26,
    ARK_CONTENT_TYPE_VALIDITY = 27,
    ARK_CONTENT_TYPE_ISSUE_AT = 28,
    ARK_CONTENT_TYPE_ORGANIZATION = 29,
    ARK_CONTENT_TYPE_TAX_ID = 30,
    ARK_CONTENT_TYPE_ADDRESS_CITY_AND_STATE = 31,
    ARK_CONTENT_TYPE_FLIGHT_NUMBER = 32,
    ARK_CONTENT_TYPE_LICENSE_NUMBER = 33,
    ARK_CONTENT_TYPE_LICENSE_FILE_NUMBER = 34,
    ARK_CONTENT_TYPE_LICENSE_PLATE = 35,
    ARK_CONTENT_TYPE_ENGINE_NUMBER = 36,
    ARK_CONTENT_TYPE_LICENSE_CHASSIS_NUMBER = 37,
} Ark_ContentType;
typedef struct Opt_ContentType {
    Ark_Tag tag;
    Ark_ContentType value;
} Opt_ContentType;
typedef enum Ark_ContextMenuEditStateFlags {
    ARK_CONTEXT_MENU_EDIT_STATE_FLAGS_NONE = 0,
    ARK_CONTEXT_MENU_EDIT_STATE_FLAGS_CAN_CUT = 1,
    ARK_CONTEXT_MENU_EDIT_STATE_FLAGS_CAN_COPY = 2,
    ARK_CONTEXT_MENU_EDIT_STATE_FLAGS_CAN_PASTE = 3,
    ARK_CONTEXT_MENU_EDIT_STATE_FLAGS_CAN_SELECT_ALL = 4,
} Ark_ContextMenuEditStateFlags;
typedef struct Opt_ContextMenuEditStateFlags {
    Ark_Tag tag;
    Ark_ContextMenuEditStateFlags value;
} Opt_ContextMenuEditStateFlags;
typedef enum Ark_ContextMenuInputFieldType {
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_NONE = 0,
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_PLAIN_TEXT = 1,
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_PASSWORD = 2,
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_NUMBER = 3,
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_TELEPHONE = 4,
    ARK_CONTEXT_MENU_INPUT_FIELD_TYPE_OTHER = 5,
} Ark_ContextMenuInputFieldType;
typedef struct Opt_ContextMenuInputFieldType {
    Ark_Tag tag;
    Ark_ContextMenuInputFieldType value;
} Opt_ContextMenuInputFieldType;
typedef enum Ark_ContextMenuMediaType {
    ARK_CONTEXT_MENU_MEDIA_TYPE_NONE = 0,
    ARK_CONTEXT_MENU_MEDIA_TYPE_IMAGE = 1,
} Ark_ContextMenuMediaType;
typedef struct Opt_ContextMenuMediaType {
    Ark_Tag tag;
    Ark_ContextMenuMediaType value;
} Opt_ContextMenuMediaType;
typedef enum Ark_ContextMenuSourceType {
    ARK_CONTEXT_MENU_SOURCE_TYPE_NONE = 0,
    ARK_CONTEXT_MENU_SOURCE_TYPE_MOUSE = 1,
    ARK_CONTEXT_MENU_SOURCE_TYPE_LONG_PRESS = 2,
} Ark_ContextMenuSourceType;
typedef struct Opt_ContextMenuSourceType {
    Ark_Tag tag;
    Ark_ContextMenuSourceType value;
} Opt_ContextMenuSourceType;
typedef enum Ark_ControlSize {
    ARK_CONTROL_SIZE_SMALL,
    ARK_CONTROL_SIZE_NORMAL,
} Ark_ControlSize;
typedef struct Opt_ControlSize {
    Ark_Tag tag;
    Ark_ControlSize value;
} Opt_ControlSize;
typedef enum Ark_CopyOptions {
    ARK_COPY_OPTIONS_NONE = 0,
    ARK_COPY_OPTIONS_IN_APP = 1,
    ARK_COPY_OPTIONS_LOCAL_DEVICE = 2,
} Ark_CopyOptions;
typedef struct Opt_CopyOptions {
    Ark_Tag tag;
    Ark_CopyOptions value;
} Opt_CopyOptions;
typedef enum Ark_CrownAction {
    ARK_CROWN_ACTION_BEGIN = 0,
    ARK_CROWN_ACTION_UPDATE = 1,
    ARK_CROWN_ACTION_END = 2,
} Ark_CrownAction;
typedef struct Opt_CrownAction {
    Ark_Tag tag;
    Ark_CrownAction value;
} Opt_CrownAction;
typedef enum Ark_CrownSensitivity {
    ARK_CROWN_SENSITIVITY_LOW = 0,
    ARK_CROWN_SENSITIVITY_MEDIUM = 1,
    ARK_CROWN_SENSITIVITY_HIGH = 2,
} Ark_CrownSensitivity;
typedef struct Opt_CrownSensitivity {
    Ark_Tag tag;
    Ark_CrownSensitivity value;
} Opt_CrownSensitivity;
typedef enum Ark_curves_Curve {
    ARK_CURVES_CURVE_LINEAR = 0,
    ARK_CURVES_CURVE_EASE = 1,
    ARK_CURVES_CURVE_EASE_IN = 2,
    ARK_CURVES_CURVE_EASE_OUT = 3,
    ARK_CURVES_CURVE_EASE_IN_OUT = 4,
    ARK_CURVES_CURVE_FAST_OUT_SLOW_IN = 5,
    ARK_CURVES_CURVE_LINEAR_OUT_SLOW_IN = 6,
    ARK_CURVES_CURVE_FAST_OUT_LINEAR_IN = 7,
    ARK_CURVES_CURVE_EXTREME_DECELERATION = 8,
    ARK_CURVES_CURVE_SHARP = 9,
    ARK_CURVES_CURVE_RHYTHM = 10,
    ARK_CURVES_CURVE_SMOOTH = 11,
    ARK_CURVES_CURVE_FRICTION = 12,
} Ark_curves_Curve;
typedef struct Opt_curves_Curve {
    Ark_Tag tag;
    Ark_curves_Curve value;
} Opt_curves_Curve;
typedef enum Ark_DataOperationType {
    ARK_DATA_OPERATION_TYPE_ADD,
    ARK_DATA_OPERATION_TYPE_DELETE,
    ARK_DATA_OPERATION_TYPE_EXCHANGE,
    ARK_DATA_OPERATION_TYPE_MOVE,
    ARK_DATA_OPERATION_TYPE_CHANGE,
    ARK_DATA_OPERATION_TYPE_RELOAD,
} Ark_DataOperationType;
typedef struct Opt_DataOperationType {
    Ark_Tag tag;
    Ark_DataOperationType value;
} Opt_DataOperationType;
typedef enum Ark_DataPanelType {
    ARK_DATA_PANEL_TYPE_LINE = 0,
    ARK_DATA_PANEL_TYPE_CIRCLE = 1,
} Ark_DataPanelType;
typedef struct Opt_DataPanelType {
    Ark_Tag tag;
    Ark_DataPanelType value;
} Opt_DataPanelType;
typedef enum Ark_DatePickerMode {
    ARK_DATE_PICKER_MODE_DATE = 0,
    ARK_DATE_PICKER_MODE_YEAR_AND_MONTH = 1,
    ARK_DATE_PICKER_MODE_MONTH_AND_DAY = 2,
} Ark_DatePickerMode;
typedef struct Opt_DatePickerMode {
    Ark_Tag tag;
    Ark_DatePickerMode value;
} Opt_DatePickerMode;
typedef enum Ark_DialogAlignment {
    ARK_DIALOG_ALIGNMENT_TOP = 0,
    ARK_DIALOG_ALIGNMENT_CENTER = 1,
    ARK_DIALOG_ALIGNMENT_BOTTOM = 2,
    ARK_DIALOG_ALIGNMENT_DEFAULT = 3,
    ARK_DIALOG_ALIGNMENT_TOP_START = 4,
    ARK_DIALOG_ALIGNMENT_TOP_END = 5,
    ARK_DIALOG_ALIGNMENT_CENTER_START = 6,
    ARK_DIALOG_ALIGNMENT_CENTER_END = 7,
    ARK_DIALOG_ALIGNMENT_BOTTOM_START = 8,
    ARK_DIALOG_ALIGNMENT_BOTTOM_END = 9,
} Ark_DialogAlignment;
typedef struct Opt_DialogAlignment {
    Ark_Tag tag;
    Ark_DialogAlignment value;
} Opt_DialogAlignment;
typedef enum Ark_DialogButtonDirection {
    ARK_DIALOG_BUTTON_DIRECTION_AUTO = 0,
    ARK_DIALOG_BUTTON_DIRECTION_HORIZONTAL = 1,
    ARK_DIALOG_BUTTON_DIRECTION_VERTICAL = 2,
} Ark_DialogButtonDirection;
typedef struct Opt_DialogButtonDirection {
    Ark_Tag tag;
    Ark_DialogButtonDirection value;
} Opt_DialogButtonDirection;
typedef enum Ark_DialogButtonStyle {
    ARK_DIALOG_BUTTON_STYLE_DEFAULT = 0,
    ARK_DIALOG_BUTTON_STYLE_HIGHLIGHT = 1,
} Ark_DialogButtonStyle;
typedef struct Opt_DialogButtonStyle {
    Ark_Tag tag;
    Ark_DialogButtonStyle value;
} Opt_DialogButtonStyle;
typedef enum Ark_Direction {
    ARK_DIRECTION_LTR = 0,
    ARK_DIRECTION_RTL = 1,
    ARK_DIRECTION_AUTO = 2,
} Ark_Direction;
typedef struct Opt_Direction {
    Ark_Tag tag;
    Ark_Direction value;
} Opt_Direction;
typedef enum Ark_DismissReason {
    ARK_DISMISS_REASON_PRESS_BACK = 0,
    ARK_DISMISS_REASON_TOUCH_OUTSIDE = 1,
    ARK_DISMISS_REASON_CLOSE_BUTTON = 2,
    ARK_DISMISS_REASON_SLIDE_DOWN = 3,
} Ark_DismissReason;
typedef struct Opt_DismissReason {
    Ark_Tag tag;
    Ark_DismissReason value;
} Opt_DismissReason;
typedef enum Ark_DistributionType {
    ARK_DISTRIBUTION_TYPE_UNIFORM = 0,
    ARK_DISTRIBUTION_TYPE_GAUSSIAN = 1,
} Ark_DistributionType;
typedef struct Opt_DistributionType {
    Ark_Tag tag;
    Ark_DistributionType value;
} Opt_DistributionType;
typedef enum Ark_DisturbanceFieldShape {
    ARK_DISTURBANCE_FIELD_SHAPE_RECT = 0,
    ARK_DISTURBANCE_FIELD_SHAPE_CIRCLE = 1,
    ARK_DISTURBANCE_FIELD_SHAPE_ELLIPSE = 2,
} Ark_DisturbanceFieldShape;
typedef struct Opt_DisturbanceFieldShape {
    Ark_Tag tag;
    Ark_DisturbanceFieldShape value;
} Opt_DisturbanceFieldShape;
typedef enum Ark_DividerMode {
    ARK_DIVIDER_MODE_FLOATING_ABOVE_MENU = 0,
    ARK_DIVIDER_MODE_EMBEDDED_IN_MENU = 1,
} Ark_DividerMode;
typedef struct Opt_DividerMode {
    Ark_Tag tag;
    Ark_DividerMode value;
} Opt_DividerMode;
typedef enum Ark_DpiFollowStrategy {
    ARK_DPI_FOLLOW_STRATEGY_FOLLOW_HOST_DPI = 0,
    ARK_DPI_FOLLOW_STRATEGY_FOLLOW_UI_EXTENSION_ABILITY_DPI = 1,
} Ark_DpiFollowStrategy;
typedef struct Opt_DpiFollowStrategy {
    Ark_Tag tag;
    Ark_DpiFollowStrategy value;
} Opt_DpiFollowStrategy;
typedef enum Ark_DragBehavior {
    ARK_DRAG_BEHAVIOR_COPY = 0,
    ARK_DRAG_BEHAVIOR_MOVE = 1,
} Ark_DragBehavior;
typedef struct Opt_DragBehavior {
    Ark_Tag tag;
    Ark_DragBehavior value;
} Opt_DragBehavior;
typedef enum Ark_DraggingSizeChangeEffect {
    ARK_DRAGGING_SIZE_CHANGE_EFFECT_DEFAULT = 0,
    ARK_DRAGGING_SIZE_CHANGE_EFFECT_SIZE_TRANSITION = 1,
    ARK_DRAGGING_SIZE_CHANGE_EFFECT_SIZE_CONTENT_TRANSITION = 2,
} Ark_DraggingSizeChangeEffect;
typedef struct Opt_DraggingSizeChangeEffect {
    Ark_Tag tag;
    Ark_DraggingSizeChangeEffect value;
} Opt_DraggingSizeChangeEffect;
typedef enum Ark_DragPreviewMode {
    ARK_DRAG_PREVIEW_MODE_AUTO = 1,
    ARK_DRAG_PREVIEW_MODE_DISABLE_SCALE = 2,
    ARK_DRAG_PREVIEW_MODE_ENABLE_DEFAULT_SHADOW = 3,
    ARK_DRAG_PREVIEW_MODE_ENABLE_DEFAULT_RADIUS = 4,
    ARK_DRAG_PREVIEW_MODE_ENABLE_DRAG_ITEM_GRAY_EFFECT = 5,
    ARK_DRAG_PREVIEW_MODE_ENABLE_MULTI_TILE_EFFECT = 6,
    ARK_DRAG_PREVIEW_MODE_ENABLE_TOUCH_POINT_CALCULATION_BASED_ON_FINAL_PREVIEW = 7,
} Ark_DragPreviewMode;
typedef struct Opt_DragPreviewMode {
    Ark_Tag tag;
    Ark_DragPreviewMode value;
} Opt_DragPreviewMode;
typedef enum Ark_DragResult {
    ARK_DRAG_RESULT_DRAG_SUCCESSFUL = 0,
    ARK_DRAG_RESULT_DRAG_FAILED = 1,
    ARK_DRAG_RESULT_DRAG_CANCELED = 2,
    ARK_DRAG_RESULT_DROP_ENABLED = 3,
    ARK_DRAG_RESULT_DROP_DISABLED = 4,
} Ark_DragResult;
typedef struct Opt_DragResult {
    Ark_Tag tag;
    Ark_DragResult value;
} Opt_DragResult;
typedef enum Ark_drawing_BlendMode {
    ARK_DRAWING_BLEND_MODE_CLEAR = 0,
    ARK_DRAWING_BLEND_MODE_SRC = 1,
    ARK_DRAWING_BLEND_MODE_DST = 2,
    ARK_DRAWING_BLEND_MODE_SRC_OVER = 3,
    ARK_DRAWING_BLEND_MODE_DST_OVER = 4,
    ARK_DRAWING_BLEND_MODE_SRC_IN = 5,
    ARK_DRAWING_BLEND_MODE_DST_IN = 6,
    ARK_DRAWING_BLEND_MODE_SRC_OUT = 7,
    ARK_DRAWING_BLEND_MODE_DST_OUT = 8,
    ARK_DRAWING_BLEND_MODE_SRC_ATOP = 9,
    ARK_DRAWING_BLEND_MODE_DST_ATOP = 10,
    ARK_DRAWING_BLEND_MODE_XOR = 11,
    ARK_DRAWING_BLEND_MODE_PLUS = 12,
    ARK_DRAWING_BLEND_MODE_MODULATE = 13,
    ARK_DRAWING_BLEND_MODE_SCREEN = 14,
    ARK_DRAWING_BLEND_MODE_OVERLAY = 15,
    ARK_DRAWING_BLEND_MODE_DARKEN = 16,
    ARK_DRAWING_BLEND_MODE_LIGHTEN = 17,
    ARK_DRAWING_BLEND_MODE_COLOR_DODGE = 18,
    ARK_DRAWING_BLEND_MODE_COLOR_BURN = 19,
    ARK_DRAWING_BLEND_MODE_HARD_LIGHT = 20,
    ARK_DRAWING_BLEND_MODE_SOFT_LIGHT = 21,
    ARK_DRAWING_BLEND_MODE_DIFFERENCE = 22,
    ARK_DRAWING_BLEND_MODE_EXCLUSION = 23,
    ARK_DRAWING_BLEND_MODE_MULTIPLY = 24,
    ARK_DRAWING_BLEND_MODE_HUE = 25,
    ARK_DRAWING_BLEND_MODE_SATURATION = 26,
    ARK_DRAWING_BLEND_MODE_COLOR = 27,
    ARK_DRAWING_BLEND_MODE_LUMINOSITY = 28,
} Ark_drawing_BlendMode;
typedef struct Opt_drawing_BlendMode {
    Ark_Tag tag;
    Ark_drawing_BlendMode value;
} Opt_drawing_BlendMode;
typedef enum Ark_drawing_BlurType {
    ARK_DRAWING_BLUR_TYPE_NORMAL = 0,
    ARK_DRAWING_BLUR_TYPE_SOLID = 1,
    ARK_DRAWING_BLUR_TYPE_OUTER = 2,
    ARK_DRAWING_BLUR_TYPE_INNER = 3,
} Ark_drawing_BlurType;
typedef struct Opt_drawing_BlurType {
    Ark_Tag tag;
    Ark_drawing_BlurType value;
} Opt_drawing_BlurType;
typedef enum Ark_drawing_CapStyle {
    ARK_DRAWING_CAP_STYLE_FLAT_CAP = 0,
    ARK_DRAWING_CAP_STYLE_SQUARE_CAP = 1,
    ARK_DRAWING_CAP_STYLE_ROUND_CAP = 2,
} Ark_drawing_CapStyle;
typedef struct Opt_drawing_CapStyle {
    Ark_Tag tag;
    Ark_drawing_CapStyle value;
} Opt_drawing_CapStyle;
typedef enum Ark_drawing_ClipOp {
    ARK_DRAWING_CLIP_OP_DIFFERENCE = 0,
    ARK_DRAWING_CLIP_OP_INTERSECT = 1,
} Ark_drawing_ClipOp;
typedef struct Opt_drawing_ClipOp {
    Ark_Tag tag;
    Ark_drawing_ClipOp value;
} Opt_drawing_ClipOp;
typedef enum Ark_drawing_CornerPos {
    ARK_DRAWING_CORNER_POS_TOP_LEFT_POS = 0,
    ARK_DRAWING_CORNER_POS_TOP_RIGHT_POS = 1,
    ARK_DRAWING_CORNER_POS_BOTTOM_RIGHT_POS = 2,
    ARK_DRAWING_CORNER_POS_BOTTOM_LEFT_POS = 3,
} Ark_drawing_CornerPos;
typedef struct Opt_drawing_CornerPos {
    Ark_Tag tag;
    Ark_drawing_CornerPos value;
} Opt_drawing_CornerPos;
typedef enum Ark_drawing_FilterMode {
    ARK_DRAWING_FILTER_MODE_FILTER_MODE_NEAREST = 0,
    ARK_DRAWING_FILTER_MODE_FILTER_MODE_LINEAR = 1,
} Ark_drawing_FilterMode;
typedef struct Opt_drawing_FilterMode {
    Ark_Tag tag;
    Ark_drawing_FilterMode value;
} Opt_drawing_FilterMode;
typedef enum Ark_drawing_FontEdging {
    ARK_DRAWING_FONT_EDGING_ALIAS = 0,
    ARK_DRAWING_FONT_EDGING_ANTI_ALIAS = 1,
    ARK_DRAWING_FONT_EDGING_SUBPIXEL_ANTI_ALIAS = 2,
} Ark_drawing_FontEdging;
typedef struct Opt_drawing_FontEdging {
    Ark_Tag tag;
    Ark_drawing_FontEdging value;
} Opt_drawing_FontEdging;
typedef enum Ark_drawing_FontHinting {
    ARK_DRAWING_FONT_HINTING_NONE = 0,
    ARK_DRAWING_FONT_HINTING_SLIGHT = 1,
    ARK_DRAWING_FONT_HINTING_NORMAL = 2,
    ARK_DRAWING_FONT_HINTING_FULL = 3,
} Ark_drawing_FontHinting;
typedef struct Opt_drawing_FontHinting {
    Ark_Tag tag;
    Ark_drawing_FontHinting value;
} Opt_drawing_FontHinting;
typedef enum Ark_drawing_FontMetricsFlags {
    ARK_DRAWING_FONT_METRICS_FLAGS_UNDERLINE_THICKNESS_VALID,
    ARK_DRAWING_FONT_METRICS_FLAGS_UNDERLINE_POSITION_VALID,
    ARK_DRAWING_FONT_METRICS_FLAGS_STRIKETHROUGH_THICKNESS_VALID,
    ARK_DRAWING_FONT_METRICS_FLAGS_STRIKETHROUGH_POSITION_VALID,
    ARK_DRAWING_FONT_METRICS_FLAGS_BOUNDS_INVALID,
} Ark_drawing_FontMetricsFlags;
typedef struct Opt_drawing_FontMetricsFlags {
    Ark_Tag tag;
    Ark_drawing_FontMetricsFlags value;
} Opt_drawing_FontMetricsFlags;
typedef enum Ark_drawing_JoinStyle {
    ARK_DRAWING_JOIN_STYLE_MITER_JOIN = 0,
    ARK_DRAWING_JOIN_STYLE_ROUND_JOIN = 1,
    ARK_DRAWING_JOIN_STYLE_BEVEL_JOIN = 2,
} Ark_drawing_JoinStyle;
typedef struct Opt_drawing_JoinStyle {
    Ark_Tag tag;
    Ark_drawing_JoinStyle value;
} Opt_drawing_JoinStyle;
typedef enum Ark_drawing_PathDirection {
    ARK_DRAWING_PATH_DIRECTION_CLOCKWISE = 0,
    ARK_DRAWING_PATH_DIRECTION_COUNTER_CLOCKWISE = 1,
} Ark_drawing_PathDirection;
typedef struct Opt_drawing_PathDirection {
    Ark_Tag tag;
    Ark_drawing_PathDirection value;
} Opt_drawing_PathDirection;
typedef enum Ark_drawing_PathFillType {
    ARK_DRAWING_PATH_FILL_TYPE_WINDING = 0,
    ARK_DRAWING_PATH_FILL_TYPE_EVEN_ODD = 1,
    ARK_DRAWING_PATH_FILL_TYPE_INVERSE_WINDING = 2,
    ARK_DRAWING_PATH_FILL_TYPE_INVERSE_EVEN_ODD = 3,
} Ark_drawing_PathFillType;
typedef struct Opt_drawing_PathFillType {
    Ark_Tag tag;
    Ark_drawing_PathFillType value;
} Opt_drawing_PathFillType;
typedef enum Ark_drawing_PathMeasureMatrixFlags {
    ARK_DRAWING_PATH_MEASURE_MATRIX_FLAGS_GET_POSITION_MATRIX = 0,
    ARK_DRAWING_PATH_MEASURE_MATRIX_FLAGS_GET_TANGENT_MATRIX = 1,
    ARK_DRAWING_PATH_MEASURE_MATRIX_FLAGS_GET_POSITION_AND_TANGENT_MATRIX = 2,
} Ark_drawing_PathMeasureMatrixFlags;
typedef struct Opt_drawing_PathMeasureMatrixFlags {
    Ark_Tag tag;
    Ark_drawing_PathMeasureMatrixFlags value;
} Opt_drawing_PathMeasureMatrixFlags;
typedef enum Ark_drawing_PathOp {
    ARK_DRAWING_PATH_OP_DIFFERENCE = 0,
    ARK_DRAWING_PATH_OP_INTERSECT = 1,
    ARK_DRAWING_PATH_OP_UNION = 2,
    ARK_DRAWING_PATH_OP_XOR = 3,
    ARK_DRAWING_PATH_OP_REVERSE_DIFFERENCE = 4,
} Ark_drawing_PathOp;
typedef struct Opt_drawing_PathOp {
    Ark_Tag tag;
    Ark_drawing_PathOp value;
} Opt_drawing_PathOp;
typedef enum Ark_drawing_PointMode {
    ARK_DRAWING_POINT_MODE_POINTS = 0,
    ARK_DRAWING_POINT_MODE_LINES = 1,
    ARK_DRAWING_POINT_MODE_POLYGON = 2,
} Ark_drawing_PointMode;
typedef struct Opt_drawing_PointMode {
    Ark_Tag tag;
    Ark_drawing_PointMode value;
} Opt_drawing_PointMode;
typedef enum Ark_drawing_RectType {
    ARK_DRAWING_RECT_TYPE_DEFAULT = 0,
    ARK_DRAWING_RECT_TYPE_TRANSPARENT = 1,
    ARK_DRAWING_RECT_TYPE_FIXEDCOLOR = 2,
} Ark_drawing_RectType;
typedef struct Opt_drawing_RectType {
    Ark_Tag tag;
    Ark_drawing_RectType value;
} Opt_drawing_RectType;
typedef enum Ark_drawing_RegionOp {
    ARK_DRAWING_REGION_OP_DIFFERENCE = 0,
    ARK_DRAWING_REGION_OP_INTERSECT = 1,
    ARK_DRAWING_REGION_OP_UNION = 2,
    ARK_DRAWING_REGION_OP_XOR = 3,
    ARK_DRAWING_REGION_OP_REVERSE_DIFFERENCE = 4,
    ARK_DRAWING_REGION_OP_REPLACE = 5,
} Ark_drawing_RegionOp;
typedef struct Opt_drawing_RegionOp {
    Ark_Tag tag;
    Ark_drawing_RegionOp value;
} Opt_drawing_RegionOp;
typedef enum Ark_drawing_ScaleToFit {
    ARK_DRAWING_SCALE_TO_FIT_FILL_SCALE_TO_FIT = 0,
    ARK_DRAWING_SCALE_TO_FIT_START_SCALE_TO_FIT = 1,
    ARK_DRAWING_SCALE_TO_FIT_CENTER_SCALE_TO_FIT = 2,
    ARK_DRAWING_SCALE_TO_FIT_END_SCALE_TO_FIT = 3,
} Ark_drawing_ScaleToFit;
typedef struct Opt_drawing_ScaleToFit {
    Ark_Tag tag;
    Ark_drawing_ScaleToFit value;
} Opt_drawing_ScaleToFit;
typedef enum Ark_drawing_ShadowFlag {
    ARK_DRAWING_SHADOW_FLAG_NONE = 0,
    ARK_DRAWING_SHADOW_FLAG_TRANSPARENT_OCCLUDER = 1,
    ARK_DRAWING_SHADOW_FLAG_GEOMETRIC_ONLY = 2,
    ARK_DRAWING_SHADOW_FLAG_ALL = 3,
} Ark_drawing_ShadowFlag;
typedef struct Opt_drawing_ShadowFlag {
    Ark_Tag tag;
    Ark_drawing_ShadowFlag value;
} Opt_drawing_ShadowFlag;
typedef enum Ark_drawing_SrcRectConstraint {
    ARK_DRAWING_SRC_RECT_CONSTRAINT_STRICT = 0,
    ARK_DRAWING_SRC_RECT_CONSTRAINT_FAST = 1,
} Ark_drawing_SrcRectConstraint;
typedef struct Opt_drawing_SrcRectConstraint {
    Ark_Tag tag;
    Ark_drawing_SrcRectConstraint value;
} Opt_drawing_SrcRectConstraint;
typedef enum Ark_drawing_TextEncoding {
    ARK_DRAWING_TEXT_ENCODING_TEXT_ENCODING_UTF8 = 0,
    ARK_DRAWING_TEXT_ENCODING_TEXT_ENCODING_UTF16 = 1,
    ARK_DRAWING_TEXT_ENCODING_TEXT_ENCODING_UTF32 = 2,
    ARK_DRAWING_TEXT_ENCODING_TEXT_ENCODING_GLYPH_ID = 3,
} Ark_drawing_TextEncoding;
typedef struct Opt_drawing_TextEncoding {
    Ark_Tag tag;
    Ark_drawing_TextEncoding value;
} Opt_drawing_TextEncoding;
typedef enum Ark_drawing_TileMode {
    ARK_DRAWING_TILE_MODE_CLAMP = 0,
    ARK_DRAWING_TILE_MODE_REPEAT = 1,
    ARK_DRAWING_TILE_MODE_MIRROR = 2,
    ARK_DRAWING_TILE_MODE_DECAL = 3,
} Ark_drawing_TileMode;
typedef struct Opt_drawing_TileMode {
    Ark_Tag tag;
    Ark_drawing_TileMode value;
} Opt_drawing_TileMode;
typedef enum Ark_DynamicRangeMode {
    ARK_DYNAMIC_RANGE_MODE_HIGH = 0,
    ARK_DYNAMIC_RANGE_MODE_CONSTRAINT = 1,
    ARK_DYNAMIC_RANGE_MODE_STANDARD = 2,
} Ark_DynamicRangeMode;
typedef struct Opt_DynamicRangeMode {
    Ark_Tag tag;
    Ark_DynamicRangeMode value;
} Opt_DynamicRangeMode;
typedef enum Ark_Edge {
    ARK_EDGE_TOP = 0,
    ARK_EDGE_BOTTOM = 1,
    ARK_EDGE_START = 2,
    ARK_EDGE_END = 3,
} Ark_Edge;
typedef struct Opt_Edge {
    Ark_Tag tag;
    Ark_Edge value;
} Opt_Edge;
typedef enum Ark_EdgeEffect {
    ARK_EDGE_EFFECT_SPRING = 0,
    ARK_EDGE_EFFECT_FADE = 1,
    ARK_EDGE_EFFECT_NONE = 2,
} Ark_EdgeEffect;
typedef struct Opt_EdgeEffect {
    Ark_Tag tag;
    Ark_EdgeEffect value;
} Opt_EdgeEffect;
typedef enum Ark_EffectDirection {
    ARK_EFFECT_DIRECTION_DOWN = 0,
    ARK_EFFECT_DIRECTION_UP = 1,
} Ark_EffectDirection;
typedef struct Opt_EffectDirection {
    Ark_Tag tag;
    Ark_EffectDirection value;
} Opt_EffectDirection;
typedef enum Ark_EffectEdge {
    ARK_EFFECT_EDGE_START = 1,
    ARK_EFFECT_EDGE_END = 2,
} Ark_EffectEdge;
typedef struct Opt_EffectEdge {
    Ark_Tag tag;
    Ark_EffectEdge value;
} Opt_EffectEdge;
typedef enum Ark_EffectFillStyle {
    ARK_EFFECT_FILL_STYLE_CUMULATIVE = 0,
    ARK_EFFECT_FILL_STYLE_ITERATIVE = 1,
} Ark_EffectFillStyle;
typedef struct Opt_EffectFillStyle {
    Ark_Tag tag;
    Ark_EffectFillStyle value;
} Opt_EffectFillStyle;
typedef enum Ark_EffectScope {
    ARK_EFFECT_SCOPE_LAYER = 0,
    ARK_EFFECT_SCOPE_WHOLE = 1,
} Ark_EffectScope;
typedef struct Opt_EffectScope {
    Ark_Tag tag;
    Ark_EffectScope value;
} Opt_EffectScope;
typedef enum Ark_EffectType {
    ARK_EFFECT_TYPE_DEFAULT = 0,
    ARK_EFFECT_TYPE_WINDOW_EFFECT = 1,
} Ark_EffectType;
typedef struct Opt_EffectType {
    Ark_Tag tag;
    Ark_EffectType value;
} Opt_EffectType;
typedef enum Ark_EllipsisMode {
    ARK_ELLIPSIS_MODE_START = 0,
    ARK_ELLIPSIS_MODE_CENTER = 1,
    ARK_ELLIPSIS_MODE_END = 2,
} Ark_EllipsisMode;
typedef struct Opt_EllipsisMode {
    Ark_Tag tag;
    Ark_EllipsisMode value;
} Opt_EllipsisMode;
typedef enum Ark_EmbeddedType {
    ARK_EMBEDDED_TYPE_EMBEDDED_UI_EXTENSION = 0,
} Ark_EmbeddedType;
typedef struct Opt_EmbeddedType {
    Ark_Tag tag;
    Ark_EmbeddedType value;
} Opt_EmbeddedType;
typedef enum Ark_EnterKeyType {
    ARK_ENTER_KEY_TYPE_GO = 2,
    ARK_ENTER_KEY_TYPE_SEARCH = 3,
    ARK_ENTER_KEY_TYPE_SEND = 4,
    ARK_ENTER_KEY_TYPE_NEXT = 5,
    ARK_ENTER_KEY_TYPE_DONE = 6,
    ARK_ENTER_KEY_TYPE_PREVIOUS = 7,
    ARK_ENTER_KEY_TYPE_NEW_LINE = 8,
} Ark_EnterKeyType;
typedef struct Opt_EnterKeyType {
    Ark_Tag tag;
    Ark_EnterKeyType value;
} Opt_EnterKeyType;
typedef enum Ark_FileSelectorMode {
    ARK_FILE_SELECTOR_MODE_FILE_OPEN_MODE = 0,
    ARK_FILE_SELECTOR_MODE_FILE_OPEN_MULTIPLE_MODE = 1,
    ARK_FILE_SELECTOR_MODE_FILE_OPEN_FOLDER_MODE = 2,
    ARK_FILE_SELECTOR_MODE_FILE_SAVE_MODE = 3,
} Ark_FileSelectorMode;
typedef struct Opt_FileSelectorMode {
    Ark_Tag tag;
    Ark_FileSelectorMode value;
} Opt_FileSelectorMode;
typedef enum Ark_FillMode {
    ARK_FILL_MODE_NONE = 0,
    ARK_FILL_MODE_FORWARDS = 1,
    ARK_FILL_MODE_BACKWARDS = 2,
    ARK_FILL_MODE_BOTH = 3,
} Ark_FillMode;
typedef struct Opt_FillMode {
    Ark_Tag tag;
    Ark_FillMode value;
} Opt_FillMode;
typedef enum Ark_FinishCallbackType {
    ARK_FINISH_CALLBACK_TYPE_REMOVED = 0,
    ARK_FINISH_CALLBACK_TYPE_LOGICALLY = 1,
} Ark_FinishCallbackType;
typedef struct Opt_FinishCallbackType {
    Ark_Tag tag;
    Ark_FinishCallbackType value;
} Opt_FinishCallbackType;
typedef enum Ark_FlexAlign {
    ARK_FLEX_ALIGN_START = 0,
    ARK_FLEX_ALIGN_CENTER = 1,
    ARK_FLEX_ALIGN_END = 2,
    ARK_FLEX_ALIGN_SPACE_BETWEEN = 3,
    ARK_FLEX_ALIGN_SPACE_AROUND = 4,
    ARK_FLEX_ALIGN_SPACE_EVENLY = 5,
} Ark_FlexAlign;
typedef struct Opt_FlexAlign {
    Ark_Tag tag;
    Ark_FlexAlign value;
} Opt_FlexAlign;
typedef enum Ark_FlexDirection {
    ARK_FLEX_DIRECTION_ROW = 0,
    ARK_FLEX_DIRECTION_COLUMN = 1,
    ARK_FLEX_DIRECTION_ROW_REVERSE = 2,
    ARK_FLEX_DIRECTION_COLUMN_REVERSE = 3,
} Ark_FlexDirection;
typedef struct Opt_FlexDirection {
    Ark_Tag tag;
    Ark_FlexDirection value;
} Opt_FlexDirection;
typedef enum Ark_FlexWrap {
    ARK_FLEX_WRAP_NO_WRAP = 0,
    ARK_FLEX_WRAP_WRAP = 1,
    ARK_FLEX_WRAP_WRAP_REVERSE = 2,
} Ark_FlexWrap;
typedef struct Opt_FlexWrap {
    Ark_Tag tag;
    Ark_FlexWrap value;
} Opt_FlexWrap;
typedef enum Ark_FocusDrawLevel {
    ARK_FOCUS_DRAW_LEVEL_SELF = 0,
    ARK_FOCUS_DRAW_LEVEL_TOP = 1,
} Ark_FocusDrawLevel;
typedef struct Opt_FocusDrawLevel {
    Ark_Tag tag;
    Ark_FocusDrawLevel value;
} Opt_FocusDrawLevel;
typedef enum Ark_FocusPriority {
    ARK_FOCUS_PRIORITY_AUTO = 0,
    ARK_FOCUS_PRIORITY_PRIOR = 2000,
    ARK_FOCUS_PRIORITY_PREVIOUS = 3000,
} Ark_FocusPriority;
typedef struct Opt_FocusPriority {
    Ark_Tag tag;
    Ark_FocusPriority value;
} Opt_FocusPriority;
typedef enum Ark_FoldStatus {
    ARK_FOLD_STATUS_FOLD_STATUS_UNKNOWN = 0,
    ARK_FOLD_STATUS_FOLD_STATUS_EXPANDED = 1,
    ARK_FOLD_STATUS_FOLD_STATUS_FOLDED = 2,
    ARK_FOLD_STATUS_FOLD_STATUS_HALF_FOLDED = 3,
} Ark_FoldStatus;
typedef struct Opt_FoldStatus {
    Ark_Tag tag;
    Ark_FoldStatus value;
} Opt_FoldStatus;
typedef enum Ark_FontStyle {
    ARK_FONT_STYLE_NORMAL = 0,
    ARK_FONT_STYLE_ITALIC = 1,
} Ark_FontStyle;
typedef struct Opt_FontStyle {
    Ark_Tag tag;
    Ark_FontStyle value;
} Opt_FontStyle;
typedef enum Ark_FontWeight {
    ARK_FONT_WEIGHT_LIGHTER = 0,
    ARK_FONT_WEIGHT_NORMAL = 1,
    ARK_FONT_WEIGHT_REGULAR = 2,
    ARK_FONT_WEIGHT_MEDIUM = 3,
    ARK_FONT_WEIGHT_BOLD = 4,
    ARK_FONT_WEIGHT_BOLDER = 5,
} Ark_FontWeight;
typedef struct Opt_FontWeight {
    Ark_Tag tag;
    Ark_FontWeight value;
} Opt_FontWeight;
typedef enum Ark_FormDimension {
    ARK_FORM_DIMENSION_DIMENSION_1_2 = 0,
    ARK_FORM_DIMENSION_DIMENSION_2_2 = 1,
    ARK_FORM_DIMENSION_DIMENSION_2_4 = 2,
    ARK_FORM_DIMENSION_DIMENSION_4_4 = 3,
    ARK_FORM_DIMENSION_DIMENSION_1_1 = 6,
    ARK_FORM_DIMENSION_DIMENSION_6_4 = 7,
    ARK_FORM_DIMENSION_DIMENSION_2_3 = 8,
    ARK_FORM_DIMENSION_DIMENSION_3_3 = 9,
} Ark_FormDimension;
typedef struct Opt_FormDimension {
    Ark_Tag tag;
    Ark_FormDimension value;
} Opt_FormDimension;
typedef enum Ark_FormRenderingMode {
    ARK_FORM_RENDERING_MODE_FULL_COLOR = 0,
    ARK_FORM_RENDERING_MODE_SINGLE_COLOR = 1,
} Ark_FormRenderingMode;
typedef struct Opt_FormRenderingMode {
    Ark_Tag tag;
    Ark_FormRenderingMode value;
} Opt_FormRenderingMode;
typedef enum Ark_FormShape {
    ARK_FORM_SHAPE_RECT = 1,
    ARK_FORM_SHAPE_CIRCLE = 2,
} Ark_FormShape;
typedef struct Opt_FormShape {
    Ark_Tag tag;
    Ark_FormShape value;
} Opt_FormShape;
typedef enum Ark_FunctionKey {
    ARK_FUNCTION_KEY_ESC = 0,
    ARK_FUNCTION_KEY_F1 = 1,
    ARK_FUNCTION_KEY_F2 = 2,
    ARK_FUNCTION_KEY_F3 = 3,
    ARK_FUNCTION_KEY_F4 = 4,
    ARK_FUNCTION_KEY_F5 = 5,
    ARK_FUNCTION_KEY_F6 = 6,
    ARK_FUNCTION_KEY_F7 = 7,
    ARK_FUNCTION_KEY_F8 = 8,
    ARK_FUNCTION_KEY_F9 = 9,
    ARK_FUNCTION_KEY_F10 = 10,
    ARK_FUNCTION_KEY_F11 = 11,
    ARK_FUNCTION_KEY_F12 = 12,
    ARK_FUNCTION_KEY_TAB = 13,
    ARK_FUNCTION_KEY_DPAD_UP = 14,
    ARK_FUNCTION_KEY_DPAD_DOWN = 15,
    ARK_FUNCTION_KEY_DPAD_LEFT = 16,
    ARK_FUNCTION_KEY_DPAD_RIGHT = 17,
} Ark_FunctionKey;
typedef struct Opt_FunctionKey {
    Ark_Tag tag;
    Ark_FunctionKey value;
} Opt_FunctionKey;
typedef enum Ark_GestureControl_GestureType {
    ARK_GESTURE_CONTROL_GESTURE_TYPE_TAP_GESTURE = 0,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_LONG_PRESS_GESTURE = 1,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_PAN_GESTURE = 2,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_PINCH_GESTURE = 3,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_SWIPE_GESTURE = 4,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_ROTATION_GESTURE = 5,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_DRAG = 6,
    ARK_GESTURE_CONTROL_GESTURE_TYPE_CLICK = 7,
} Ark_GestureControl_GestureType;
typedef struct Opt_GestureControl_GestureType {
    Ark_Tag tag;
    Ark_GestureControl_GestureType value;
} Opt_GestureControl_GestureType;
typedef enum Ark_GestureJudgeResult {
    ARK_GESTURE_JUDGE_RESULT_CONTINUE = 0,
    ARK_GESTURE_JUDGE_RESULT_REJECT = 1,
} Ark_GestureJudgeResult;
typedef struct Opt_GestureJudgeResult {
    Ark_Tag tag;
    Ark_GestureJudgeResult value;
} Opt_GestureJudgeResult;
typedef enum Ark_GestureMask {
    ARK_GESTURE_MASK_NORMAL = 0,
    ARK_GESTURE_MASK_IGNORE_INTERNAL = 1,
} Ark_GestureMask;
typedef struct Opt_GestureMask {
    Ark_Tag tag;
    Ark_GestureMask value;
} Opt_GestureMask;
typedef enum Ark_GestureMode {
    ARK_GESTURE_MODE_SEQUENCE = 0,
    ARK_GESTURE_MODE_PARALLEL = 1,
    ARK_GESTURE_MODE_EXCLUSIVE = 2,
} Ark_GestureMode;
typedef struct Opt_GestureMode {
    Ark_Tag tag;
    Ark_GestureMode value;
} Opt_GestureMode;
typedef enum Ark_GesturePriority {
    ARK_GESTURE_PRIORITY_NORMAL = 0,
    ARK_GESTURE_PRIORITY_PRIORITY = 1,
} Ark_GesturePriority;
typedef struct Opt_GesturePriority {
    Ark_Tag tag;
    Ark_GesturePriority value;
} Opt_GesturePriority;
typedef enum Ark_GestureRecognizerState {
    ARK_GESTURE_RECOGNIZER_STATE_READY = 0,
    ARK_GESTURE_RECOGNIZER_STATE_DETECTING = 1,
    ARK_GESTURE_RECOGNIZER_STATE_PENDING = 2,
    ARK_GESTURE_RECOGNIZER_STATE_BLOCKED = 3,
    ARK_GESTURE_RECOGNIZER_STATE_SUCCESSFUL = 4,
    ARK_GESTURE_RECOGNIZER_STATE_FAILED = 5,
} Ark_GestureRecognizerState;
typedef struct Opt_GestureRecognizerState {
    Ark_Tag tag;
    Ark_GestureRecognizerState value;
} Opt_GestureRecognizerState;
typedef enum Ark_GradientDirection {
    ARK_GRADIENT_DIRECTION_LEFT = 0,
    ARK_GRADIENT_DIRECTION_TOP = 1,
    ARK_GRADIENT_DIRECTION_RIGHT = 2,
    ARK_GRADIENT_DIRECTION_BOTTOM = 3,
    ARK_GRADIENT_DIRECTION_LEFT_TOP = 4,
    ARK_GRADIENT_DIRECTION_LEFT_BOTTOM = 5,
    ARK_GRADIENT_DIRECTION_RIGHT_TOP = 6,
    ARK_GRADIENT_DIRECTION_RIGHT_BOTTOM = 7,
    ARK_GRADIENT_DIRECTION_NONE = 8,
} Ark_GradientDirection;
typedef struct Opt_GradientDirection {
    Ark_Tag tag;
    Ark_GradientDirection value;
} Opt_GradientDirection;
typedef enum Ark_GridDirection {
    ARK_GRID_DIRECTION_ROW = 0,
    ARK_GRID_DIRECTION_COLUMN = 1,
    ARK_GRID_DIRECTION_ROW_REVERSE = 2,
    ARK_GRID_DIRECTION_COLUMN_REVERSE = 3,
} Ark_GridDirection;
typedef struct Opt_GridDirection {
    Ark_Tag tag;
    Ark_GridDirection value;
} Opt_GridDirection;
typedef enum Ark_GridItemAlignment {
    ARK_GRID_ITEM_ALIGNMENT_DEFAULT = 0,
    ARK_GRID_ITEM_ALIGNMENT_STRETCH = 1,
} Ark_GridItemAlignment;
typedef struct Opt_GridItemAlignment {
    Ark_Tag tag;
    Ark_GridItemAlignment value;
} Opt_GridItemAlignment;
typedef enum Ark_GridItemStyle {
    ARK_GRID_ITEM_STYLE_NONE = 0,
    ARK_GRID_ITEM_STYLE_PLAIN = 1,
} Ark_GridItemStyle;
typedef struct Opt_GridItemStyle {
    Ark_Tag tag;
    Ark_GridItemStyle value;
} Opt_GridItemStyle;
typedef enum Ark_GridRowDirection {
    ARK_GRID_ROW_DIRECTION_ROW = 0,
    ARK_GRID_ROW_DIRECTION_ROW_REVERSE = 1,
} Ark_GridRowDirection;
typedef struct Opt_GridRowDirection {
    Ark_Tag tag;
    Ark_GridRowDirection value;
} Opt_GridRowDirection;
typedef enum Ark_HapticFeedbackMode {
    ARK_HAPTIC_FEEDBACK_MODE_DISABLED = 0,
    ARK_HAPTIC_FEEDBACK_MODE_ENABLED = 1,
    ARK_HAPTIC_FEEDBACK_MODE_AUTO = 2,
} Ark_HapticFeedbackMode;
typedef struct Opt_HapticFeedbackMode {
    Ark_Tag tag;
    Ark_HapticFeedbackMode value;
} Opt_HapticFeedbackMode;
typedef enum Ark_HeightBreakpoint {
    ARK_HEIGHT_BREAKPOINT_HEIGHT_SM = 0,
    ARK_HEIGHT_BREAKPOINT_HEIGHT_MD = 1,
    ARK_HEIGHT_BREAKPOINT_HEIGHT_LG = 2,
} Ark_HeightBreakpoint;
typedef struct Opt_HeightBreakpoint {
    Ark_Tag tag;
    Ark_HeightBreakpoint value;
} Opt_HeightBreakpoint;
typedef enum Ark_HitTestMode {
    ARK_HIT_TEST_MODE_DEFAULT = 0,
    ARK_HIT_TEST_MODE_BLOCK = 1,
    ARK_HIT_TEST_MODE_TRANSPARENT = 2,
    ARK_HIT_TEST_MODE_NONE = 3,
} Ark_HitTestMode;
typedef struct Opt_HitTestMode {
    Ark_Tag tag;
    Ark_HitTestMode value;
} Opt_HitTestMode;
typedef enum Ark_HitTestType {
    ARK_HIT_TEST_TYPE_EDIT_TEXT = 0,
    ARK_HIT_TEST_TYPE_EMAIL = 1,
    ARK_HIT_TEST_TYPE_HTTP_ANCHOR = 2,
    ARK_HIT_TEST_TYPE_HTTP_ANCHOR_IMG = 3,
    ARK_HIT_TEST_TYPE_IMG = 4,
    ARK_HIT_TEST_TYPE_MAP = 5,
    ARK_HIT_TEST_TYPE_PHONE = 6,
    ARK_HIT_TEST_TYPE_UNKNOWN = 7,
} Ark_HitTestType;
typedef struct Opt_HitTestType {
    Ark_Tag tag;
    Ark_HitTestType value;
} Opt_HitTestType;
typedef enum Ark_HorizontalAlign {
    ARK_HORIZONTAL_ALIGN_START = 0,
    ARK_HORIZONTAL_ALIGN_CENTER = 1,
    ARK_HORIZONTAL_ALIGN_END = 2,
} Ark_HorizontalAlign;
typedef struct Opt_HorizontalAlign {
    Ark_Tag tag;
    Ark_HorizontalAlign value;
} Opt_HorizontalAlign;
typedef enum Ark_HoverEffect {
    ARK_HOVER_EFFECT_AUTO = 0,
    ARK_HOVER_EFFECT_SCALE = 1,
    ARK_HOVER_EFFECT_HIGHLIGHT = 2,
    ARK_HOVER_EFFECT_NONE = 3,
} Ark_HoverEffect;
typedef struct Opt_HoverEffect {
    Ark_Tag tag;
    Ark_HoverEffect value;
} Opt_HoverEffect;
typedef enum Ark_HoverModeAreaType {
    ARK_HOVER_MODE_AREA_TYPE_TOP_SCREEN = 0,
    ARK_HOVER_MODE_AREA_TYPE_BOTTOM_SCREEN = 1,
} Ark_HoverModeAreaType;
typedef struct Opt_HoverModeAreaType {
    Ark_Tag tag;
    Ark_HoverModeAreaType value;
} Opt_HoverModeAreaType;
typedef enum Ark_IlluminatedType {
    ARK_ILLUMINATED_TYPE_NONE = 0,
    ARK_ILLUMINATED_TYPE_BORDER = 1,
    ARK_ILLUMINATED_TYPE_CONTENT = 2,
    ARK_ILLUMINATED_TYPE_BORDER_CONTENT = 3,
    ARK_ILLUMINATED_TYPE_BLOOM_BORDER = 4,
    ARK_ILLUMINATED_TYPE_BLOOM_BORDER_CONTENT = 5,
} Ark_IlluminatedType;
typedef struct Opt_IlluminatedType {
    Ark_Tag tag;
    Ark_IlluminatedType value;
} Opt_IlluminatedType;
typedef enum Ark_image_ResolutionQuality {
    ARK_IMAGE_RESOLUTION_QUALITY_LOW = 1,
    ARK_IMAGE_RESOLUTION_QUALITY_MEDIUM = 2,
    ARK_IMAGE_RESOLUTION_QUALITY_HIGH = 3,
} Ark_image_ResolutionQuality;
typedef struct Opt_image_ResolutionQuality {
    Ark_Tag tag;
    Ark_image_ResolutionQuality value;
} Opt_image_ResolutionQuality;
typedef enum Ark_ImageAnalyzerType {
    ARK_IMAGE_ANALYZER_TYPE_SUBJECT = 0,
    ARK_IMAGE_ANALYZER_TYPE_TEXT = 1,
    ARK_IMAGE_ANALYZER_TYPE_OBJECT_LOOKUP = 2,
} Ark_ImageAnalyzerType;
typedef struct Opt_ImageAnalyzerType {
    Ark_Tag tag;
    Ark_ImageAnalyzerType value;
} Opt_ImageAnalyzerType;
typedef enum Ark_ImageContent {
    ARK_IMAGE_CONTENT_EMPTY = 0,
} Ark_ImageContent;
typedef struct Opt_ImageContent {
    Ark_Tag tag;
    Ark_ImageContent value;
} Opt_ImageContent;
typedef enum Ark_ImageFit {
    ARK_IMAGE_FIT_CONTAIN = 0,
    ARK_IMAGE_FIT_COVER = 1,
    ARK_IMAGE_FIT_AUTO = 2,
    ARK_IMAGE_FIT_FILL = 3,
    ARK_IMAGE_FIT_SCALE_DOWN = 4,
    ARK_IMAGE_FIT_NONE = 5,
    ARK_IMAGE_FIT_TOP_START = 7,
    ARK_IMAGE_FIT_TOP = 8,
    ARK_IMAGE_FIT_TOP_END = 9,
    ARK_IMAGE_FIT_START = 10,
    ARK_IMAGE_FIT_CENTER = 11,
    ARK_IMAGE_FIT_END = 12,
    ARK_IMAGE_FIT_BOTTOM_START = 13,
    ARK_IMAGE_FIT_BOTTOM = 14,
    ARK_IMAGE_FIT_BOTTOM_END = 15,
    ARK_IMAGE_FIT_MATRIX = 16,
} Ark_ImageFit;
typedef struct Opt_ImageFit {
    Ark_Tag tag;
    Ark_ImageFit value;
} Opt_ImageFit;
typedef enum Ark_ImageInterpolation {
    ARK_IMAGE_INTERPOLATION_NONE = 0,
    ARK_IMAGE_INTERPOLATION_LOW = 1,
    ARK_IMAGE_INTERPOLATION_MEDIUM = 2,
    ARK_IMAGE_INTERPOLATION_HIGH = 3,
} Ark_ImageInterpolation;
typedef struct Opt_ImageInterpolation {
    Ark_Tag tag;
    Ark_ImageInterpolation value;
} Opt_ImageInterpolation;
typedef enum Ark_ImageRenderMode {
    ARK_IMAGE_RENDER_MODE_ORIGINAL = 0,
    ARK_IMAGE_RENDER_MODE_TEMPLATE = 1,
} Ark_ImageRenderMode;
typedef struct Opt_ImageRenderMode {
    Ark_Tag tag;
    Ark_ImageRenderMode value;
} Opt_ImageRenderMode;
typedef enum Ark_ImageRepeat {
    ARK_IMAGE_REPEAT_NO_REPEAT = 0,
    ARK_IMAGE_REPEAT_X = 1,
    ARK_IMAGE_REPEAT_Y = 2,
    ARK_IMAGE_REPEAT_XY = 3,
} Ark_ImageRepeat;
typedef struct Opt_ImageRepeat {
    Ark_Tag tag;
    Ark_ImageRepeat value;
} Opt_ImageRepeat;
typedef enum Ark_ImageRotateOrientation {
    ARK_IMAGE_ROTATE_ORIENTATION_AUTO = 0,
    ARK_IMAGE_ROTATE_ORIENTATION_UP = 1,
    ARK_IMAGE_ROTATE_ORIENTATION_RIGHT = 2,
    ARK_IMAGE_ROTATE_ORIENTATION_DOWN = 3,
    ARK_IMAGE_ROTATE_ORIENTATION_LEFT = 4,
    ARK_IMAGE_ROTATE_ORIENTATION_UP_MIRRORED = 5,
    ARK_IMAGE_ROTATE_ORIENTATION_RIGHT_MIRRORED = 6,
    ARK_IMAGE_ROTATE_ORIENTATION_DOWN_MIRRORED = 7,
    ARK_IMAGE_ROTATE_ORIENTATION_LEFT_MIRRORED = 8,
} Ark_ImageRotateOrientation;
typedef struct Opt_ImageRotateOrientation {
    Ark_Tag tag;
    Ark_ImageRotateOrientation value;
} Opt_ImageRotateOrientation;
typedef enum Ark_ImageSize {
    ARK_IMAGE_SIZE_AUTO = 0,
    ARK_IMAGE_SIZE_COVER = 1,
    ARK_IMAGE_SIZE_CONTAIN = 2,
    ARK_IMAGE_SIZE_FILL = 3,
} Ark_ImageSize;
typedef struct Opt_ImageSize {
    Ark_Tag tag;
    Ark_ImageSize value;
} Opt_ImageSize;
typedef enum Ark_ImageSpanAlignment {
    ARK_IMAGE_SPAN_ALIGNMENT_BASELINE = 0,
    ARK_IMAGE_SPAN_ALIGNMENT_BOTTOM = 1,
    ARK_IMAGE_SPAN_ALIGNMENT_CENTER = 2,
    ARK_IMAGE_SPAN_ALIGNMENT_TOP = 3,
} Ark_ImageSpanAlignment;
typedef struct Opt_ImageSpanAlignment {
    Ark_Tag tag;
    Ark_ImageSpanAlignment value;
} Opt_ImageSpanAlignment;
typedef enum Ark_ImmersiveMode {
    ARK_IMMERSIVE_MODE_DEFAULT = 0,
    ARK_IMMERSIVE_MODE_EXTEND = 1,
} Ark_ImmersiveMode;
typedef struct Opt_ImmersiveMode {
    Ark_Tag tag;
    Ark_ImmersiveMode value;
} Opt_ImmersiveMode;
typedef enum Ark_IndexerAlign {
    ARK_INDEXER_ALIGN_LEFT = 0,
    ARK_INDEXER_ALIGN_RIGHT = 1,
    ARK_INDEXER_ALIGN_START = 2,
    ARK_INDEXER_ALIGN_END = 3,
} Ark_IndexerAlign;
typedef struct Opt_IndexerAlign {
    Ark_Tag tag;
    Ark_IndexerAlign value;
} Opt_IndexerAlign;
typedef enum Ark_InputType {
    ARK_INPUT_TYPE_NORMAL = 0,
    ARK_INPUT_TYPE_NUMBER = 1,
    ARK_INPUT_TYPE_PHONE_NUMBER = 2,
    ARK_INPUT_TYPE_EMAIL = 3,
    ARK_INPUT_TYPE_PASSWORD = 4,
    ARK_INPUT_TYPE_NUMBER_PASSWORD = 8,
    ARK_INPUT_TYPE_SCREEN_LOCK_PASSWORD = 9,
    ARK_INPUT_TYPE_USER_NAME = 10,
    ARK_INPUT_TYPE_NEW_PASSWORD = 11,
    ARK_INPUT_TYPE_NUMBER_DECIMAL = 12,
    ARK_INPUT_TYPE_URL = 13,
} Ark_InputType;
typedef struct Opt_InputType {
    Ark_Tag tag;
    Ark_InputType value;
} Opt_InputType;
typedef enum Ark_IntentionCode {
    ARK_INTENTION_CODE_INTENTION_UNKNOWN = -1,
    ARK_INTENTION_CODE_INTENTION_UP = 1,
    ARK_INTENTION_CODE_INTENTION_DOWN = 2,
    ARK_INTENTION_CODE_INTENTION_LEFT = 3,
    ARK_INTENTION_CODE_INTENTION_RIGHT = 4,
    ARK_INTENTION_CODE_INTENTION_SELECT = 5,
    ARK_INTENTION_CODE_INTENTION_ESCAPE = 6,
    ARK_INTENTION_CODE_INTENTION_BACK = 7,
    ARK_INTENTION_CODE_INTENTION_FORWARD = 8,
    ARK_INTENTION_CODE_INTENTION_MENU = 9,
    ARK_INTENTION_CODE_INTENTION_PAGE_UP = 11,
    ARK_INTENTION_CODE_INTENTION_PAGE_DOWN = 12,
    ARK_INTENTION_CODE_INTENTION_ZOOM_OUT = 13,
    ARK_INTENTION_CODE_INTENTION_ZOOM_IN = 14,
} Ark_IntentionCode;
typedef struct Opt_IntentionCode {
    Ark_Tag tag;
    Ark_IntentionCode value;
} Opt_IntentionCode;
typedef enum Ark_InteractionHand {
    ARK_INTERACTION_HAND_NONE = 0,
    ARK_INTERACTION_HAND_LEFT = 1,
    ARK_INTERACTION_HAND_RIGHT = 2,
} Ark_InteractionHand;
typedef struct Opt_InteractionHand {
    Ark_Tag tag;
    Ark_InteractionHand value;
} Opt_InteractionHand;
typedef enum Ark_ItemAlign {
    ARK_ITEM_ALIGN_AUTO = 0,
    ARK_ITEM_ALIGN_START = 1,
    ARK_ITEM_ALIGN_CENTER = 2,
    ARK_ITEM_ALIGN_END = 3,
    ARK_ITEM_ALIGN_BASELINE = 4,
    ARK_ITEM_ALIGN_STRETCH = 5,
} Ark_ItemAlign;
typedef struct Opt_ItemAlign {
    Ark_Tag tag;
    Ark_ItemAlign value;
} Opt_ItemAlign;
typedef enum Ark_ItemState {
    ARK_ITEM_STATE_NORMAL = 0,
    ARK_ITEM_STATE_DISABLED = 1,
    ARK_ITEM_STATE_WAITING = 2,
    ARK_ITEM_STATE_SKIP = 3,
} Ark_ItemState;
typedef struct Opt_ItemState {
    Ark_Tag tag;
    Ark_ItemState value;
} Opt_ItemState;
typedef enum Ark_KeyboardAppearance {
    ARK_KEYBOARD_APPEARANCE_NONE_IMMERSIVE = 0,
    ARK_KEYBOARD_APPEARANCE_IMMERSIVE = 1,
    ARK_KEYBOARD_APPEARANCE_LIGHT_IMMERSIVE = 2,
    ARK_KEYBOARD_APPEARANCE_DARK_IMMERSIVE = 3,
} Ark_KeyboardAppearance;
typedef struct Opt_KeyboardAppearance {
    Ark_Tag tag;
    Ark_KeyboardAppearance value;
} Opt_KeyboardAppearance;
typedef enum Ark_KeyboardAvoidMode {
    ARK_KEYBOARD_AVOID_MODE_DEFAULT = 0,
    ARK_KEYBOARD_AVOID_MODE_NONE = 1,
} Ark_KeyboardAvoidMode;
typedef struct Opt_KeyboardAvoidMode {
    Ark_Tag tag;
    Ark_KeyboardAvoidMode value;
} Opt_KeyboardAvoidMode;
typedef enum Ark_KeyProcessingMode {
    ARK_KEY_PROCESSING_MODE_FOCUS_NAVIGATION = 0,
    ARK_KEY_PROCESSING_MODE_ANCESTOR_EVENT = 1,
} Ark_KeyProcessingMode;
typedef struct Opt_KeyProcessingMode {
    Ark_Tag tag;
    Ark_KeyProcessingMode value;
} Opt_KeyProcessingMode;
typedef enum Ark_KeySource {
    ARK_KEY_SOURCE_UNKNOWN = 0,
    ARK_KEY_SOURCE_KEYBOARD = 1,
    ARK_KEY_SOURCE_JOYSTICK = 2,
} Ark_KeySource;
typedef struct Opt_KeySource {
    Ark_Tag tag;
    Ark_KeySource value;
} Opt_KeySource;
typedef enum Ark_KeyType {
    ARK_KEY_TYPE_DOWN = 0,
    ARK_KEY_TYPE_UP = 1,
} Ark_KeyType;
typedef struct Opt_KeyType {
    Ark_Tag tag;
    Ark_KeyType value;
} Opt_KeyType;
typedef enum Ark_LaunchMode {
    ARK_LAUNCH_MODE_STANDARD = 0,
    ARK_LAUNCH_MODE_MOVE_TO_TOP_SINGLETON = 1,
    ARK_LAUNCH_MODE_POP_TO_SINGLETON = 2,
    ARK_LAUNCH_MODE_NEW_INSTANCE = 3,
} Ark_LaunchMode;
typedef struct Opt_LaunchMode {
    Ark_Tag tag;
    Ark_LaunchMode value;
} Opt_LaunchMode;
typedef enum Ark_LayoutDirection {
    ARK_LAYOUT_DIRECTION_LTR = 0,
    ARK_LAYOUT_DIRECTION_RTL = 1,
    ARK_LAYOUT_DIRECTION_AUTO = 2,
} Ark_LayoutDirection;
typedef struct Opt_LayoutDirection {
    Ark_Tag tag;
    Ark_LayoutDirection value;
} Opt_LayoutDirection;
typedef enum Ark_LayoutMode {
    ARK_LAYOUT_MODE_AUTO = 0,
    ARK_LAYOUT_MODE_VERTICAL = 1,
    ARK_LAYOUT_MODE_HORIZONTAL = 2,
} Ark_LayoutMode;
typedef struct Opt_LayoutMode {
    Ark_Tag tag;
    Ark_LayoutMode value;
} Opt_LayoutMode;
typedef enum Ark_LayoutSafeAreaEdge {
    ARK_LAYOUT_SAFE_AREA_EDGE_TOP = 0,
    ARK_LAYOUT_SAFE_AREA_EDGE_BOTTOM = 1,
} Ark_LayoutSafeAreaEdge;
typedef struct Opt_LayoutSafeAreaEdge {
    Ark_Tag tag;
    Ark_LayoutSafeAreaEdge value;
} Opt_LayoutSafeAreaEdge;
typedef enum Ark_LayoutSafeAreaType {
    ARK_LAYOUT_SAFE_AREA_TYPE_SYSTEM = 0,
} Ark_LayoutSafeAreaType;
typedef struct Opt_LayoutSafeAreaType {
    Ark_Tag tag;
    Ark_LayoutSafeAreaType value;
} Opt_LayoutSafeAreaType;
typedef enum Ark_LayoutStyle {
    ARK_LAYOUT_STYLE_ALWAYS_CENTER = 0,
    ARK_LAYOUT_STYLE_ALWAYS_AVERAGE_SPLIT = 1,
    ARK_LAYOUT_STYLE_SPACE_BETWEEN_OR_CENTER = 2,
} Ark_LayoutStyle;
typedef struct Opt_LayoutStyle {
    Ark_Tag tag;
    Ark_LayoutStyle value;
} Opt_LayoutStyle;
typedef enum Ark_LengthMetricsUnit {
    ARK_LENGTH_METRICS_UNIT_DEFAULT = 0,
    ARK_LENGTH_METRICS_UNIT_PX = 1,
} Ark_LengthMetricsUnit;
typedef struct Opt_LengthMetricsUnit {
    Ark_Tag tag;
    Ark_LengthMetricsUnit value;
} Opt_LengthMetricsUnit;
typedef enum Ark_LengthUnit {
    ARK_LENGTH_UNIT_PX = 0,
    ARK_LENGTH_UNIT_VP = 1,
    ARK_LENGTH_UNIT_FP = 2,
    ARK_LENGTH_UNIT_PERCENT = 3,
    ARK_LENGTH_UNIT_LPX = 4,
} Ark_LengthUnit;
typedef struct Opt_LengthUnit {
    Ark_Tag tag;
    Ark_LengthUnit value;
} Opt_LengthUnit;
typedef enum Ark_LevelMode {
    ARK_LEVEL_MODE_OVERLAY = 0,
    ARK_LEVEL_MODE_EMBEDDED = 1,
} Ark_LevelMode;
typedef struct Opt_LevelMode {
    Ark_Tag tag;
    Ark_LevelMode value;
} Opt_LevelMode;
typedef enum Ark_LineBreakStrategy {
    ARK_LINE_BREAK_STRATEGY_GREEDY = 0,
    ARK_LINE_BREAK_STRATEGY_HIGH_QUALITY = 1,
    ARK_LINE_BREAK_STRATEGY_BALANCED = 2,
} Ark_LineBreakStrategy;
typedef struct Opt_LineBreakStrategy {
    Ark_Tag tag;
    Ark_LineBreakStrategy value;
} Opt_LineBreakStrategy;
typedef enum Ark_LineCapStyle {
    ARK_LINE_CAP_STYLE_BUTT = 0,
    ARK_LINE_CAP_STYLE_ROUND = 1,
    ARK_LINE_CAP_STYLE_SQUARE = 2,
} Ark_LineCapStyle;
typedef struct Opt_LineCapStyle {
    Ark_Tag tag;
    Ark_LineCapStyle value;
} Opt_LineCapStyle;
typedef enum Ark_LineJoinStyle {
    ARK_LINE_JOIN_STYLE_MITER = 0,
    ARK_LINE_JOIN_STYLE_ROUND = 1,
    ARK_LINE_JOIN_STYLE_BEVEL = 2,
} Ark_LineJoinStyle;
typedef struct Opt_LineJoinStyle {
    Ark_Tag tag;
    Ark_LineJoinStyle value;
} Opt_LineJoinStyle;
typedef enum Ark_ListItemAlign {
    ARK_LIST_ITEM_ALIGN_START = 0,
    ARK_LIST_ITEM_ALIGN_CENTER = 1,
    ARK_LIST_ITEM_ALIGN_END = 2,
} Ark_ListItemAlign;
typedef struct Opt_ListItemAlign {
    Ark_Tag tag;
    Ark_ListItemAlign value;
} Opt_ListItemAlign;
typedef enum Ark_ListItemGroupArea {
    ARK_LIST_ITEM_GROUP_AREA_NONE = 0,
    ARK_LIST_ITEM_GROUP_AREA_IN_LIST_ITEM_AREA = 1,
    ARK_LIST_ITEM_GROUP_AREA_IN_HEADER_AREA = 2,
    ARK_LIST_ITEM_GROUP_AREA_IN_FOOTER_AREA = 3,
} Ark_ListItemGroupArea;
typedef struct Opt_ListItemGroupArea {
    Ark_Tag tag;
    Ark_ListItemGroupArea value;
} Opt_ListItemGroupArea;
typedef enum Ark_ListItemGroupStyle {
    ARK_LIST_ITEM_GROUP_STYLE_NONE = 0,
    ARK_LIST_ITEM_GROUP_STYLE_CARD = 1,
} Ark_ListItemGroupStyle;
typedef struct Opt_ListItemGroupStyle {
    Ark_Tag tag;
    Ark_ListItemGroupStyle value;
} Opt_ListItemGroupStyle;
typedef enum Ark_ListItemStyle {
    ARK_LIST_ITEM_STYLE_NONE = 0,
    ARK_LIST_ITEM_STYLE_CARD = 1,
} Ark_ListItemStyle;
typedef struct Opt_ListItemStyle {
    Ark_Tag tag;
    Ark_ListItemStyle value;
} Opt_ListItemStyle;
typedef enum Ark_LoadingProgressStyle {
    ARK_LOADING_PROGRESS_STYLE_DEFAULT = 0,
    ARK_LOADING_PROGRESS_STYLE_CIRCULAR = 1,
    ARK_LOADING_PROGRESS_STYLE_ORBITAL = 2,
} Ark_LoadingProgressStyle;
typedef struct Opt_LoadingProgressStyle {
    Ark_Tag tag;
    Ark_LoadingProgressStyle value;
} Opt_LoadingProgressStyle;
typedef enum Ark_LocalizedBarrierDirection {
    ARK_LOCALIZED_BARRIER_DIRECTION_START = 0,
    ARK_LOCALIZED_BARRIER_DIRECTION_END = 1,
    ARK_LOCALIZED_BARRIER_DIRECTION_TOP = 2,
    ARK_LOCALIZED_BARRIER_DIRECTION_BOTTOM = 3,
} Ark_LocalizedBarrierDirection;
typedef struct Opt_LocalizedBarrierDirection {
    Ark_Tag tag;
    Ark_LocalizedBarrierDirection value;
} Opt_LocalizedBarrierDirection;
typedef enum Ark_LocationButtonOnClickResult {
    ARK_LOCATION_BUTTON_ON_CLICK_RESULT_SUCCESS = 0,
    ARK_LOCATION_BUTTON_ON_CLICK_RESULT_TEMPORARY_AUTHORIZATION_FAILED = 1,
} Ark_LocationButtonOnClickResult;
typedef struct Opt_LocationButtonOnClickResult {
    Ark_Tag tag;
    Ark_LocationButtonOnClickResult value;
} Opt_LocationButtonOnClickResult;
typedef enum Ark_LocationDescription {
    ARK_LOCATION_DESCRIPTION_CURRENT_LOCATION = 0,
    ARK_LOCATION_DESCRIPTION_ADD_LOCATION = 1,
    ARK_LOCATION_DESCRIPTION_SELECT_LOCATION = 2,
    ARK_LOCATION_DESCRIPTION_SHARE_LOCATION = 3,
    ARK_LOCATION_DESCRIPTION_SEND_LOCATION = 4,
    ARK_LOCATION_DESCRIPTION_LOCATING = 5,
    ARK_LOCATION_DESCRIPTION_LOCATION = 6,
    ARK_LOCATION_DESCRIPTION_SEND_CURRENT_LOCATION = 7,
    ARK_LOCATION_DESCRIPTION_RELOCATION = 8,
    ARK_LOCATION_DESCRIPTION_PUNCH_IN = 9,
    ARK_LOCATION_DESCRIPTION_CURRENT_POSITION = 10,
} Ark_LocationDescription;
typedef struct Opt_LocationDescription {
    Ark_Tag tag;
    Ark_LocationDescription value;
} Opt_LocationDescription;
typedef enum Ark_LocationIconStyle {
    ARK_LOCATION_ICON_STYLE_FULL_FILLED = 0,
    ARK_LOCATION_ICON_STYLE_LINES = 1,
} Ark_LocationIconStyle;
typedef struct Opt_LocationIconStyle {
    Ark_Tag tag;
    Ark_LocationIconStyle value;
} Opt_LocationIconStyle;
typedef enum Ark_MarqueeStartPolicy {
    ARK_MARQUEE_START_POLICY_DEFAULT = 0,
    ARK_MARQUEE_START_POLICY_ON_FOCUS = 1,
} Ark_MarqueeStartPolicy;
typedef struct Opt_MarqueeStartPolicy {
    Ark_Tag tag;
    Ark_MarqueeStartPolicy value;
} Opt_MarqueeStartPolicy;
typedef enum Ark_MarqueeState {
    ARK_MARQUEE_STATE_START = 0,
    ARK_MARQUEE_STATE_BOUNCE = 1,
    ARK_MARQUEE_STATE_FINISH = 2,
} Ark_MarqueeState;
typedef struct Opt_MarqueeState {
    Ark_Tag tag;
    Ark_MarqueeState value;
} Opt_MarqueeState;
typedef enum Ark_MarqueeUpdateStrategy {
    ARK_MARQUEE_UPDATE_STRATEGY_DEFAULT = 0,
    ARK_MARQUEE_UPDATE_STRATEGY_PRESERVE_POSITION = 1,
} Ark_MarqueeUpdateStrategy;
typedef struct Opt_MarqueeUpdateStrategy {
    Ark_Tag tag;
    Ark_MarqueeUpdateStrategy value;
} Opt_MarqueeUpdateStrategy;
typedef enum Ark_MenuAlignType {
    ARK_MENU_ALIGN_TYPE_START = 0,
    ARK_MENU_ALIGN_TYPE_CENTER = 1,
    ARK_MENU_ALIGN_TYPE_END = 2,
} Ark_MenuAlignType;
typedef struct Opt_MenuAlignType {
    Ark_Tag tag;
    Ark_MenuAlignType value;
} Opt_MenuAlignType;
typedef enum Ark_MenuPolicy {
    ARK_MENU_POLICY_DEFAULT = 0,
    ARK_MENU_POLICY_HIDE = 1,
    ARK_MENU_POLICY_SHOW = 2,
} Ark_MenuPolicy;
typedef struct Opt_MenuPolicy {
    Ark_Tag tag;
    Ark_MenuPolicy value;
} Opt_MenuPolicy;
typedef enum Ark_MenuPreviewMode {
    ARK_MENU_PREVIEW_MODE_NONE = 0,
    ARK_MENU_PREVIEW_MODE_IMAGE = 1,
} Ark_MenuPreviewMode;
typedef struct Opt_MenuPreviewMode {
    Ark_Tag tag;
    Ark_MenuPreviewMode value;
} Opt_MenuPreviewMode;
typedef enum Ark_MenuType {
    ARK_MENU_TYPE_SELECTION_MENU = 0,
    ARK_MENU_TYPE_PREVIEW_MENU = 1,
} Ark_MenuType;
typedef struct Opt_MenuType {
    Ark_Tag tag;
    Ark_MenuType value;
} Opt_MenuType;
typedef enum Ark_MessageLevel {
    ARK_MESSAGE_LEVEL_DEBUG = 0,
    ARK_MESSAGE_LEVEL_ERROR = 1,
    ARK_MESSAGE_LEVEL_INFO = 2,
    ARK_MESSAGE_LEVEL_LOG = 3,
    ARK_MESSAGE_LEVEL_WARN = 4,
} Ark_MessageLevel;
typedef struct Opt_MessageLevel {
    Ark_Tag tag;
    Ark_MessageLevel value;
} Opt_MessageLevel;
typedef enum Ark_MixedMode {
    ARK_MIXED_MODE_ALL = 0,
    ARK_MIXED_MODE_COMPATIBLE = 1,
    ARK_MIXED_MODE_NONE = 2,
} Ark_MixedMode;
typedef struct Opt_MixedMode {
    Ark_Tag tag;
    Ark_MixedMode value;
} Opt_MixedMode;
typedef enum Ark_ModalTransition {
    ARK_MODAL_TRANSITION_DEFAULT = 0,
    ARK_MODAL_TRANSITION_NONE = 1,
    ARK_MODAL_TRANSITION_ALPHA = 2,
} Ark_ModalTransition;
typedef struct Opt_ModalTransition {
    Ark_Tag tag;
    Ark_ModalTransition value;
} Opt_ModalTransition;
typedef enum Ark_ModifierKey {
    ARK_MODIFIER_KEY_CTRL = 0,
    ARK_MODIFIER_KEY_SHIFT = 1,
    ARK_MODIFIER_KEY_ALT = 2,
} Ark_ModifierKey;
typedef struct Opt_ModifierKey {
    Ark_Tag tag;
    Ark_ModifierKey value;
} Opt_ModifierKey;
typedef enum Ark_MouseAction {
    ARK_MOUSE_ACTION_PRESS = 0,
    ARK_MOUSE_ACTION_RELEASE = 1,
    ARK_MOUSE_ACTION_MOVE = 2,
    ARK_MOUSE_ACTION_HOVER = 3,
    ARK_MOUSE_ACTION_CANCEL = 13,
} Ark_MouseAction;
typedef struct Opt_MouseAction {
    Ark_Tag tag;
    Ark_MouseAction value;
} Opt_MouseAction;
typedef enum Ark_MouseButton {
    ARK_MOUSE_BUTTON_LEFT = 0,
    ARK_MOUSE_BUTTON_RIGHT = 1,
    ARK_MOUSE_BUTTON_MIDDLE = 2,
    ARK_MOUSE_BUTTON_BACK = 3,
    ARK_MOUSE_BUTTON_FORWARD = 4,
    ARK_MOUSE_BUTTON_NONE = 5,
} Ark_MouseButton;
typedef struct Opt_MouseButton {
    Ark_Tag tag;
    Ark_MouseButton value;
} Opt_MouseButton;
typedef enum Ark_NativeEmbedStatus {
    ARK_NATIVE_EMBED_STATUS_CREATE = 0,
    ARK_NATIVE_EMBED_STATUS_UPDATE = 1,
    ARK_NATIVE_EMBED_STATUS_DESTROY = 2,
    ARK_NATIVE_EMBED_STATUS_ENTER_BFCACHE = 3,
    ARK_NATIVE_EMBED_STATUS_LEAVE_BFCACHE = 4,
} Ark_NativeEmbedStatus;
typedef struct Opt_NativeEmbedStatus {
    Ark_Tag tag;
    Ark_NativeEmbedStatus value;
} Opt_NativeEmbedStatus;
typedef enum Ark_NavBarPosition {
    ARK_NAV_BAR_POSITION_START = 0,
    ARK_NAV_BAR_POSITION_END = 1,
} Ark_NavBarPosition;
typedef struct Opt_NavBarPosition {
    Ark_Tag tag;
    Ark_NavBarPosition value;
} Opt_NavBarPosition;
typedef enum Ark_NavDestinationActiveReason {
    ARK_NAV_DESTINATION_ACTIVE_REASON_TRANSITION = 0,
    ARK_NAV_DESTINATION_ACTIVE_REASON_CONTENT_COVER = 1,
    ARK_NAV_DESTINATION_ACTIVE_REASON_SHEET = 2,
    ARK_NAV_DESTINATION_ACTIVE_REASON_DIALOG = 3,
    ARK_NAV_DESTINATION_ACTIVE_REASON_OVERLAY = 4,
    ARK_NAV_DESTINATION_ACTIVE_REASON_APP_STATE = 5,
} Ark_NavDestinationActiveReason;
typedef struct Opt_NavDestinationActiveReason {
    Ark_Tag tag;
    Ark_NavDestinationActiveReason value;
} Opt_NavDestinationActiveReason;
typedef enum Ark_NavDestinationMode {
    ARK_NAV_DESTINATION_MODE_STANDARD = 0,
    ARK_NAV_DESTINATION_MODE_DIALOG = 1,
} Ark_NavDestinationMode;
typedef struct Opt_NavDestinationMode {
    Ark_Tag tag;
    Ark_NavDestinationMode value;
} Opt_NavDestinationMode;
typedef enum Ark_NavigationMode {
    ARK_NAVIGATION_MODE_STACK = 0,
    ARK_NAVIGATION_MODE_SPLIT = 1,
    ARK_NAVIGATION_MODE_AUTO = 2,
} Ark_NavigationMode;
typedef struct Opt_NavigationMode {
    Ark_Tag tag;
    Ark_NavigationMode value;
} Opt_NavigationMode;
typedef enum Ark_NavigationOperation {
    ARK_NAVIGATION_OPERATION_PUSH = 1,
    ARK_NAVIGATION_OPERATION_POP = 2,
    ARK_NAVIGATION_OPERATION_REPLACE = 3,
} Ark_NavigationOperation;
typedef struct Opt_NavigationOperation {
    Ark_Tag tag;
    Ark_NavigationOperation value;
} Opt_NavigationOperation;
typedef enum Ark_NavigationSystemTransitionType {
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_DEFAULT = 0,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_NONE = 1,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_TITLE = 2,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_CONTENT = 3,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_FADE = 4,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_EXPLODE = 5,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_SLIDE_RIGHT = 6,
    ARK_NAVIGATION_SYSTEM_TRANSITION_TYPE_SLIDE_BOTTOM = 7,
} Ark_NavigationSystemTransitionType;
typedef struct Opt_NavigationSystemTransitionType {
    Ark_Tag tag;
    Ark_NavigationSystemTransitionType value;
} Opt_NavigationSystemTransitionType;
typedef enum Ark_NavigationTitleMode {
    ARK_NAVIGATION_TITLE_MODE_FREE = 0,
    ARK_NAVIGATION_TITLE_MODE_FULL = 1,
    ARK_NAVIGATION_TITLE_MODE_MINI = 2,
} Ark_NavigationTitleMode;
typedef struct Opt_NavigationTitleMode {
    Ark_Tag tag;
    Ark_NavigationTitleMode value;
} Opt_NavigationTitleMode;
typedef enum Ark_NavigationType {
    ARK_NAVIGATION_TYPE_PUSH = 0,
    ARK_NAVIGATION_TYPE_BACK = 1,
    ARK_NAVIGATION_TYPE_REPLACE = 2,
} Ark_NavigationType;
typedef struct Opt_NavigationType {
    Ark_Tag tag;
    Ark_NavigationType value;
} Opt_NavigationType;
typedef enum Ark_NestedScrollMode {
    ARK_NESTED_SCROLL_MODE_SELF_ONLY = 0,
    ARK_NESTED_SCROLL_MODE_SELF_FIRST = 1,
    ARK_NESTED_SCROLL_MODE_PARENT_FIRST = 2,
    ARK_NESTED_SCROLL_MODE_PARALLEL = 3,
} Ark_NestedScrollMode;
typedef struct Opt_NestedScrollMode {
    Ark_Tag tag;
    Ark_NestedScrollMode value;
} Opt_NestedScrollMode;
typedef enum Ark_ObscuredReasons {
    ARK_OBSCURED_REASONS_PLACEHOLDER = 0,
} Ark_ObscuredReasons;
typedef struct Opt_ObscuredReasons {
    Ark_Tag tag;
    Ark_ObscuredReasons value;
} Opt_ObscuredReasons;
typedef enum Ark_OptionWidthMode {
    ARK_OPTION_WIDTH_MODE_FIT_CONTENT,
    ARK_OPTION_WIDTH_MODE_FIT_TRIGGER,
} Ark_OptionWidthMode;
typedef struct Opt_OptionWidthMode {
    Ark_Tag tag;
    Ark_OptionWidthMode value;
} Opt_OptionWidthMode;
typedef enum Ark_OutlineStyle {
    ARK_OUTLINE_STYLE_SOLID = 0,
    ARK_OUTLINE_STYLE_DASHED = 1,
    ARK_OUTLINE_STYLE_DOTTED = 2,
} Ark_OutlineStyle;
typedef struct Opt_OutlineStyle {
    Ark_Tag tag;
    Ark_OutlineStyle value;
} Opt_OutlineStyle;
typedef enum Ark_OverScrollMode {
    ARK_OVER_SCROLL_MODE_NEVER = 0,
    ARK_OVER_SCROLL_MODE_ALWAYS = 1,
} Ark_OverScrollMode;
typedef struct Opt_OverScrollMode {
    Ark_Tag tag;
    Ark_OverScrollMode value;
} Opt_OverScrollMode;
typedef enum Ark_PageFlipMode {
    ARK_PAGE_FLIP_MODE_CONTINUOUS = 0,
    ARK_PAGE_FLIP_MODE_SINGLE = 1,
} Ark_PageFlipMode;
typedef struct Opt_PageFlipMode {
    Ark_Tag tag;
    Ark_PageFlipMode value;
} Opt_PageFlipMode;
typedef enum Ark_PanDirection {
    ARK_PAN_DIRECTION_NONE = 0,
    ARK_PAN_DIRECTION_HORIZONTAL = 1,
    ARK_PAN_DIRECTION_LEFT = 2,
    ARK_PAN_DIRECTION_RIGHT = 3,
    ARK_PAN_DIRECTION_VERTICAL = 4,
    ARK_PAN_DIRECTION_UP = 5,
    ARK_PAN_DIRECTION_DOWN = 6,
    ARK_PAN_DIRECTION_ALL = 7,
} Ark_PanDirection;
typedef struct Opt_PanDirection {
    Ark_Tag tag;
    Ark_PanDirection value;
} Opt_PanDirection;
typedef enum Ark_ParticleEmitterShape {
    ARK_PARTICLE_EMITTER_SHAPE_RECTANGLE,
    ARK_PARTICLE_EMITTER_SHAPE_CIRCLE,
    ARK_PARTICLE_EMITTER_SHAPE_ELLIPSE,
    ARK_PARTICLE_EMITTER_SHAPE_ANNULUS,
} Ark_ParticleEmitterShape;
typedef struct Opt_ParticleEmitterShape {
    Ark_Tag tag;
    Ark_ParticleEmitterShape value;
} Opt_ParticleEmitterShape;
typedef enum Ark_ParticleType {
    ARK_PARTICLE_TYPE_POINT,
    ARK_PARTICLE_TYPE_IMAGE,
} Ark_ParticleType;
typedef struct Opt_ParticleType {
    Ark_Tag tag;
    Ark_ParticleType value;
} Opt_ParticleType;
typedef enum Ark_ParticleUpdater {
    ARK_PARTICLE_UPDATER_NONE,
    ARK_PARTICLE_UPDATER_RANDOM,
    ARK_PARTICLE_UPDATER_CURVE,
} Ark_ParticleUpdater;
typedef struct Opt_ParticleUpdater {
    Ark_Tag tag;
    Ark_ParticleUpdater value;
} Opt_ParticleUpdater;
typedef enum Ark_PasteButtonOnClickResult {
    ARK_PASTE_BUTTON_ON_CLICK_RESULT_SUCCESS = 0,
    ARK_PASTE_BUTTON_ON_CLICK_RESULT_TEMPORARY_AUTHORIZATION_FAILED = 1,
} Ark_PasteButtonOnClickResult;
typedef struct Opt_PasteButtonOnClickResult {
    Ark_Tag tag;
    Ark_PasteButtonOnClickResult value;
} Opt_PasteButtonOnClickResult;
typedef enum Ark_PasteDescription {
    ARK_PASTE_DESCRIPTION_PASTE = 0,
} Ark_PasteDescription;
typedef struct Opt_PasteDescription {
    Ark_Tag tag;
    Ark_PasteDescription value;
} Opt_PasteDescription;
typedef enum Ark_PasteIconStyle {
    ARK_PASTE_ICON_STYLE_LINES = 0,
} Ark_PasteIconStyle;
typedef struct Opt_PasteIconStyle {
    Ark_Tag tag;
    Ark_PasteIconStyle value;
} Opt_PasteIconStyle;
typedef enum Ark_PatternLockChallengeResult {
    ARK_PATTERN_LOCK_CHALLENGE_RESULT_CORRECT = 1,
    ARK_PATTERN_LOCK_CHALLENGE_RESULT_WRONG = 2,
} Ark_PatternLockChallengeResult;
typedef struct Opt_PatternLockChallengeResult {
    Ark_Tag tag;
    Ark_PatternLockChallengeResult value;
} Opt_PatternLockChallengeResult;
typedef enum Ark_PerfMonitorActionType {
    ARK_PERF_MONITOR_ACTION_TYPE_LAST_DOWN = 0,
    ARK_PERF_MONITOR_ACTION_TYPE_LAST_UP = 1,
    ARK_PERF_MONITOR_ACTION_TYPE_FIRST_MOVE = 2,
} Ark_PerfMonitorActionType;
typedef struct Opt_PerfMonitorActionType {
    Ark_Tag tag;
    Ark_PerfMonitorActionType value;
} Opt_PerfMonitorActionType;
typedef enum Ark_PerfMonitorSourceType {
    ARK_PERF_MONITOR_SOURCE_TYPE_PERF_TOUCH_EVENT = 0,
    ARK_PERF_MONITOR_SOURCE_TYPE_PERF_MOUSE_EVENT = 1,
    ARK_PERF_MONITOR_SOURCE_TYPE_PERF_TOUCHPAD_EVENT = 2,
    ARK_PERF_MONITOR_SOURCE_TYPE_PERF_JOYSTICK_EVENT = 3,
    ARK_PERF_MONITOR_SOURCE_TYPE_PERF_KEY_EVENT = 4,
} Ark_PerfMonitorSourceType;
typedef struct Opt_PerfMonitorSourceType {
    Ark_Tag tag;
    Ark_PerfMonitorSourceType value;
} Opt_PerfMonitorSourceType;
typedef enum Ark_PixelRoundCalcPolicy {
    ARK_PIXEL_ROUND_CALC_POLICY_NO_FORCE_ROUND = 0,
    ARK_PIXEL_ROUND_CALC_POLICY_FORCE_CEIL = 1,
    ARK_PIXEL_ROUND_CALC_POLICY_FORCE_FLOOR = 2,
} Ark_PixelRoundCalcPolicy;
typedef struct Opt_PixelRoundCalcPolicy {
    Ark_Tag tag;
    Ark_PixelRoundCalcPolicy value;
} Opt_PixelRoundCalcPolicy;
typedef enum Ark_PixelRoundMode {
    ARK_PIXEL_ROUND_MODE_PIXEL_ROUND_ON_LAYOUT_FINISH = 0,
    ARK_PIXEL_ROUND_MODE_PIXEL_ROUND_AFTER_MEASURE = 1,
} Ark_PixelRoundMode;
typedef struct Opt_PixelRoundMode {
    Ark_Tag tag;
    Ark_PixelRoundMode value;
} Opt_PixelRoundMode;
typedef enum Ark_Placement {
    ARK_PLACEMENT_LEFT = 0,
    ARK_PLACEMENT_RIGHT = 1,
    ARK_PLACEMENT_TOP = 2,
    ARK_PLACEMENT_BOTTOM = 3,
    ARK_PLACEMENT_TOP_LEFT = 4,
    ARK_PLACEMENT_TOP_RIGHT = 5,
    ARK_PLACEMENT_BOTTOM_LEFT = 6,
    ARK_PLACEMENT_BOTTOM_RIGHT = 7,
    ARK_PLACEMENT_LEFT_TOP = 8,
    ARK_PLACEMENT_LEFT_BOTTOM = 9,
    ARK_PLACEMENT_RIGHT_TOP = 10,
    ARK_PLACEMENT_RIGHT_BOTTOM = 11,
} Ark_Placement;
typedef struct Opt_Placement {
    Ark_Tag tag;
    Ark_Placement value;
} Opt_Placement;
typedef enum Ark_PlaybackSpeed {
    ARK_PLAYBACK_SPEED_SPEED_FORWARD_0_75_X = 0,
    ARK_PLAYBACK_SPEED_SPEED_FORWARD_1_00_X = 1,
    ARK_PLAYBACK_SPEED_SPEED_FORWARD_1_25_X = 2,
    ARK_PLAYBACK_SPEED_SPEED_FORWARD_1_75_X = 3,
    ARK_PLAYBACK_SPEED_SPEED_FORWARD_2_00_X = 4,
} Ark_PlaybackSpeed;
typedef struct Opt_PlaybackSpeed {
    Ark_Tag tag;
    Ark_PlaybackSpeed value;
} Opt_PlaybackSpeed;
typedef enum Ark_PlayMode {
    ARK_PLAY_MODE_NORMAL = 0,
    ARK_PLAY_MODE_REVERSE = 1,
    ARK_PLAY_MODE_ALTERNATE = 2,
    ARK_PLAY_MODE_ALTERNATE_REVERSE = 3,
} Ark_PlayMode;
typedef struct Opt_PlayMode {
    Ark_Tag tag;
    Ark_PlayMode value;
} Opt_PlayMode;
typedef enum Ark_pointer_PointerStyle {
    ARK_POINTER_POINTER_STYLE_DEFAULT = 0,
    ARK_POINTER_POINTER_STYLE_EAST = 1,
    ARK_POINTER_POINTER_STYLE_WEST = 2,
    ARK_POINTER_POINTER_STYLE_SOUTH = 3,
    ARK_POINTER_POINTER_STYLE_NORTH = 4,
    ARK_POINTER_POINTER_STYLE_WEST_EAST = 5,
    ARK_POINTER_POINTER_STYLE_NORTH_SOUTH = 6,
    ARK_POINTER_POINTER_STYLE_NORTH_EAST = 7,
    ARK_POINTER_POINTER_STYLE_NORTH_WEST = 8,
    ARK_POINTER_POINTER_STYLE_SOUTH_EAST = 9,
    ARK_POINTER_POINTER_STYLE_SOUTH_WEST = 10,
    ARK_POINTER_POINTER_STYLE_NORTH_EAST_SOUTH_WEST = 11,
    ARK_POINTER_POINTER_STYLE_NORTH_WEST_SOUTH_EAST = 12,
    ARK_POINTER_POINTER_STYLE_CROSS = 13,
    ARK_POINTER_POINTER_STYLE_CURSOR_COPY = 14,
    ARK_POINTER_POINTER_STYLE_CURSOR_FORBID = 15,
    ARK_POINTER_POINTER_STYLE_COLOR_SUCKER = 16,
    ARK_POINTER_POINTER_STYLE_HAND_GRABBING = 17,
    ARK_POINTER_POINTER_STYLE_HAND_OPEN = 18,
    ARK_POINTER_POINTER_STYLE_HAND_POINTING = 19,
    ARK_POINTER_POINTER_STYLE_HELP = 20,
    ARK_POINTER_POINTER_STYLE_MOVE = 21,
    ARK_POINTER_POINTER_STYLE_RESIZE_LEFT_RIGHT = 22,
    ARK_POINTER_POINTER_STYLE_RESIZE_UP_DOWN = 23,
    ARK_POINTER_POINTER_STYLE_SCREENSHOT_CHOOSE = 24,
    ARK_POINTER_POINTER_STYLE_SCREENSHOT_CURSOR = 25,
    ARK_POINTER_POINTER_STYLE_TEXT_CURSOR = 26,
    ARK_POINTER_POINTER_STYLE_ZOOM_IN = 27,
    ARK_POINTER_POINTER_STYLE_ZOOM_OUT = 28,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_EAST = 29,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_WEST = 30,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_SOUTH = 31,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_NORTH = 32,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_NORTH_SOUTH = 33,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_NORTH_EAST = 34,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_NORTH_WEST = 35,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_SOUTH_EAST = 36,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_SOUTH_WEST = 37,
    ARK_POINTER_POINTER_STYLE_MIDDLE_BTN_NORTH_SOUTH_WEST_EAST = 38,
    ARK_POINTER_POINTER_STYLE_HORIZONTAL_TEXT_CURSOR = 39,
    ARK_POINTER_POINTER_STYLE_CURSOR_CROSS = 40,
    ARK_POINTER_POINTER_STYLE_CURSOR_CIRCLE = 41,
    ARK_POINTER_POINTER_STYLE_LOADING = 42,
    ARK_POINTER_POINTER_STYLE_RUNNING = 43,
} Ark_pointer_PointerStyle;
typedef struct Opt_pointer_PointerStyle {
    Ark_Tag tag;
    Ark_pointer_PointerStyle value;
} Opt_pointer_PointerStyle;
typedef enum Ark_PreDragStatus {
    ARK_PRE_DRAG_STATUS_ACTION_DETECTING_STATUS = 0,
    ARK_PRE_DRAG_STATUS_READY_TO_TRIGGER_DRAG_ACTION = 1,
    ARK_PRE_DRAG_STATUS_PREVIEW_LIFT_STARTED = 2,
    ARK_PRE_DRAG_STATUS_PREVIEW_LIFT_FINISHED = 3,
    ARK_PRE_DRAG_STATUS_PREVIEW_LANDING_STARTED = 4,
    ARK_PRE_DRAG_STATUS_PREVIEW_LANDING_FINISHED = 5,
    ARK_PRE_DRAG_STATUS_ACTION_CANCELED_BEFORE_DRAG = 6,
    ARK_PRE_DRAG_STATUS_PREPARING_FOR_DRAG_DETECTION = 7,
} Ark_PreDragStatus;
typedef struct Opt_PreDragStatus {
    Ark_Tag tag;
    Ark_PreDragStatus value;
} Opt_PreDragStatus;
typedef enum Ark_ProgressStatus {
    ARK_PROGRESS_STATUS_LOADING = 0,
    ARK_PROGRESS_STATUS_PROGRESSING = 1,
} Ark_ProgressStatus;
typedef struct Opt_ProgressStatus {
    Ark_Tag tag;
    Ark_ProgressStatus value;
} Opt_ProgressStatus;
typedef enum Ark_ProgressStyle {
    ARK_PROGRESS_STYLE_LINEAR = 0,
    ARK_PROGRESS_STYLE_RING = 1,
    ARK_PROGRESS_STYLE_ECLIPSE = 2,
    ARK_PROGRESS_STYLE_SCALE_RING = 3,
    ARK_PROGRESS_STYLE_CAPSULE = 4,
} Ark_ProgressStyle;
typedef struct Opt_ProgressStyle {
    Ark_Tag tag;
    Ark_ProgressStyle value;
} Opt_ProgressStyle;
typedef enum Ark_ProgressType {
    ARK_PROGRESS_TYPE_LINEAR = 0,
    ARK_PROGRESS_TYPE_RING = 1,
    ARK_PROGRESS_TYPE_ECLIPSE = 2,
    ARK_PROGRESS_TYPE_SCALE_RING = 3,
    ARK_PROGRESS_TYPE_CAPSULE = 4,
} Ark_ProgressType;
typedef struct Opt_ProgressType {
    Ark_Tag tag;
    Ark_ProgressType value;
} Opt_ProgressType;
typedef enum Ark_ProtectedResourceType {
    ARK_PROTECTED_RESOURCE_TYPE_MIDI_SYSEX,
    ARK_PROTECTED_RESOURCE_TYPE_VIDEO_CAPTURE,
    ARK_PROTECTED_RESOURCE_TYPE_AUDIO_CAPTURE,
    ARK_PROTECTED_RESOURCE_TYPE_SENSOR,
} Ark_ProtectedResourceType;
typedef struct Opt_ProtectedResourceType {
    Ark_Tag tag;
    Ark_ProtectedResourceType value;
} Opt_ProtectedResourceType;
typedef enum Ark_RadioIndicatorType {
    ARK_RADIO_INDICATOR_TYPE_TICK = 0,
    ARK_RADIO_INDICATOR_TYPE_DOT = 1,
    ARK_RADIO_INDICATOR_TYPE_CUSTOM = 2,
} Ark_RadioIndicatorType;
typedef struct Opt_RadioIndicatorType {
    Ark_Tag tag;
    Ark_RadioIndicatorType value;
} Opt_RadioIndicatorType;
typedef enum Ark_RefreshStatus {
    ARK_REFRESH_STATUS_INACTIVE = 0,
    ARK_REFRESH_STATUS_DRAG = 1,
    ARK_REFRESH_STATUS_OVER_DRAG = 2,
    ARK_REFRESH_STATUS_REFRESH = 3,
    ARK_REFRESH_STATUS_DONE = 4,
} Ark_RefreshStatus;
typedef struct Opt_RefreshStatus {
    Ark_Tag tag;
    Ark_RefreshStatus value;
} Opt_RefreshStatus;
typedef enum Ark_RelateType {
    ARK_RELATE_TYPE_FILL = 0,
    ARK_RELATE_TYPE_FIT = 1,
} Ark_RelateType;
typedef struct Opt_RelateType {
    Ark_Tag tag;
    Ark_RelateType value;
} Opt_RelateType;
typedef enum Ark_RenderExitReason {
    ARK_RENDER_EXIT_REASON_PROCESS_ABNORMAL_TERMINATION = 0,
    ARK_RENDER_EXIT_REASON_PROCESS_WAS_KILLED = 1,
    ARK_RENDER_EXIT_REASON_PROCESS_CRASHED = 2,
    ARK_RENDER_EXIT_REASON_PROCESS_OOM = 3,
    ARK_RENDER_EXIT_REASON_PROCESS_EXIT_UNKNOWN = 4,
} Ark_RenderExitReason;
typedef struct Opt_RenderExitReason {
    Ark_Tag tag;
    Ark_RenderExitReason value;
} Opt_RenderExitReason;
typedef enum Ark_RenderFit {
    ARK_RENDER_FIT_CENTER = 0,
    ARK_RENDER_FIT_TOP = 1,
    ARK_RENDER_FIT_BOTTOM = 2,
    ARK_RENDER_FIT_LEFT = 3,
    ARK_RENDER_FIT_RIGHT = 4,
    ARK_RENDER_FIT_TOP_LEFT = 5,
    ARK_RENDER_FIT_TOP_RIGHT = 6,
    ARK_RENDER_FIT_BOTTOM_LEFT = 7,
    ARK_RENDER_FIT_BOTTOM_RIGHT = 8,
    ARK_RENDER_FIT_RESIZE_FILL = 9,
    ARK_RENDER_FIT_RESIZE_CONTAIN = 10,
    ARK_RENDER_FIT_RESIZE_CONTAIN_TOP_LEFT = 11,
    ARK_RENDER_FIT_RESIZE_CONTAIN_BOTTOM_RIGHT = 12,
    ARK_RENDER_FIT_RESIZE_COVER = 13,
    ARK_RENDER_FIT_RESIZE_COVER_TOP_LEFT = 14,
    ARK_RENDER_FIT_RESIZE_COVER_BOTTOM_RIGHT = 15,
} Ark_RenderFit;
typedef struct Opt_RenderFit {
    Ark_Tag tag;
    Ark_RenderFit value;
} Opt_RenderFit;
typedef enum Ark_RenderMode {
    ARK_RENDER_MODE_ASYNC_RENDER = 0,
    ARK_RENDER_MODE_SYNC_RENDER = 1,
} Ark_RenderMode;
typedef struct Opt_RenderMode {
    Ark_Tag tag;
    Ark_RenderMode value;
} Opt_RenderMode;
typedef enum Ark_RenderProcessNotRespondingReason {
    ARK_RENDER_PROCESS_NOT_RESPONDING_REASON_INPUT_TIMEOUT = 0,
    ARK_RENDER_PROCESS_NOT_RESPONDING_REASON_NAVIGATION_COMMIT_TIMEOUT = 1,
} Ark_RenderProcessNotRespondingReason;
typedef struct Opt_RenderProcessNotRespondingReason {
    Ark_Tag tag;
    Ark_RenderProcessNotRespondingReason value;
} Opt_RenderProcessNotRespondingReason;
typedef enum Ark_RepeatMode {
    ARK_REPEAT_MODE_REPEAT = 0,
    ARK_REPEAT_MODE_STRETCH = 1,
    ARK_REPEAT_MODE_ROUND = 2,
    ARK_REPEAT_MODE_SPACE = 3,
} Ark_RepeatMode;
typedef struct Opt_RepeatMode {
    Ark_Tag tag;
    Ark_RepeatMode value;
} Opt_RepeatMode;
typedef enum Ark_ResponseType {
    ARK_RESPONSE_TYPE_RIGHT_CLICK = 0,
    ARK_RESPONSE_TYPE_LONG_PRESS = 1,
} Ark_ResponseType;
typedef struct Opt_ResponseType {
    Ark_Tag tag;
    Ark_ResponseType value;
} Opt_ResponseType;
typedef enum Ark_RichEditorDeleteDirection {
    ARK_RICH_EDITOR_DELETE_DIRECTION_BACKWARD = 0,
    ARK_RICH_EDITOR_DELETE_DIRECTION_FORWARD = 1,
} Ark_RichEditorDeleteDirection;
typedef struct Opt_RichEditorDeleteDirection {
    Ark_Tag tag;
    Ark_RichEditorDeleteDirection value;
} Opt_RichEditorDeleteDirection;
typedef enum Ark_RichEditorResponseType {
    ARK_RICH_EDITOR_RESPONSE_TYPE_RIGHT_CLICK = 0,
    ARK_RICH_EDITOR_RESPONSE_TYPE_LONG_PRESS = 1,
    ARK_RICH_EDITOR_RESPONSE_TYPE_SELECT = 2,
    ARK_RICH_EDITOR_RESPONSE_TYPE_DEFAULT = 3,
} Ark_RichEditorResponseType;
typedef struct Opt_RichEditorResponseType {
    Ark_Tag tag;
    Ark_RichEditorResponseType value;
} Opt_RichEditorResponseType;
typedef enum Ark_RichEditorSpanType {
    ARK_RICH_EDITOR_SPAN_TYPE_TEXT = 0,
    ARK_RICH_EDITOR_SPAN_TYPE_IMAGE = 1,
    ARK_RICH_EDITOR_SPAN_TYPE_MIXED = 2,
    ARK_RICH_EDITOR_SPAN_TYPE_BUILDER = 3,
    ARK_RICH_EDITOR_SPAN_TYPE_DEFAULT = 4,
} Ark_RichEditorSpanType;
typedef struct Opt_RichEditorSpanType {
    Ark_Tag tag;
    Ark_RichEditorSpanType value;
} Opt_RichEditorSpanType;
typedef enum Ark_RouteType {
    ARK_ROUTE_TYPE_NONE = 0,
    ARK_ROUTE_TYPE_PUSH = 1,
    ARK_ROUTE_TYPE_POP = 2,
} Ark_RouteType;
typedef struct Opt_RouteType {
    Ark_Tag tag;
    Ark_RouteType value;
} Opt_RouteType;
typedef enum Ark_SafeAreaEdge {
    ARK_SAFE_AREA_EDGE_TOP = 0,
    ARK_SAFE_AREA_EDGE_BOTTOM = 1,
    ARK_SAFE_AREA_EDGE_START = 2,
    ARK_SAFE_AREA_EDGE_END = 3,
} Ark_SafeAreaEdge;
typedef struct Opt_SafeAreaEdge {
    Ark_Tag tag;
    Ark_SafeAreaEdge value;
} Opt_SafeAreaEdge;
typedef enum Ark_SafeAreaType {
    ARK_SAFE_AREA_TYPE_SYSTEM = 0,
    ARK_SAFE_AREA_TYPE_CUTOUT = 1,
    ARK_SAFE_AREA_TYPE_KEYBOARD = 2,
} Ark_SafeAreaType;
typedef struct Opt_SafeAreaType {
    Ark_Tag tag;
    Ark_SafeAreaType value;
} Opt_SafeAreaType;
typedef enum Ark_SaveButtonOnClickResult {
    ARK_SAVE_BUTTON_ON_CLICK_RESULT_SUCCESS = 0,
    ARK_SAVE_BUTTON_ON_CLICK_RESULT_TEMPORARY_AUTHORIZATION_FAILED = 1,
} Ark_SaveButtonOnClickResult;
typedef struct Opt_SaveButtonOnClickResult {
    Ark_Tag tag;
    Ark_SaveButtonOnClickResult value;
} Opt_SaveButtonOnClickResult;
typedef enum Ark_SaveDescription {
    ARK_SAVE_DESCRIPTION_DOWNLOAD = 0,
    ARK_SAVE_DESCRIPTION_DOWNLOAD_FILE = 1,
    ARK_SAVE_DESCRIPTION_SAVE = 2,
    ARK_SAVE_DESCRIPTION_SAVE_IMAGE = 3,
    ARK_SAVE_DESCRIPTION_SAVE_FILE = 4,
    ARK_SAVE_DESCRIPTION_DOWNLOAD_AND_SHARE = 5,
    ARK_SAVE_DESCRIPTION_RECEIVE = 6,
    ARK_SAVE_DESCRIPTION_CONTINUE_TO_RECEIVE = 7,
    ARK_SAVE_DESCRIPTION_SAVE_TO_GALLERY = 8,
    ARK_SAVE_DESCRIPTION_EXPORT_TO_GALLERY = 9,
    ARK_SAVE_DESCRIPTION_QUICK_SAVE_TO_GALLERY = 10,
    ARK_SAVE_DESCRIPTION_RESAVE_TO_GALLERY = 11,
} Ark_SaveDescription;
typedef struct Opt_SaveDescription {
    Ark_Tag tag;
    Ark_SaveDescription value;
} Opt_SaveDescription;
typedef enum Ark_SaveIconStyle {
    ARK_SAVE_ICON_STYLE_FULL_FILLED = 0,
    ARK_SAVE_ICON_STYLE_LINES = 1,
    ARK_SAVE_ICON_STYLE_PICTURE = 2,
} Ark_SaveIconStyle;
typedef struct Opt_SaveIconStyle {
    Ark_Tag tag;
    Ark_SaveIconStyle value;
} Opt_SaveIconStyle;
typedef enum Ark_ScrollAlign {
    ARK_SCROLL_ALIGN_START = 0,
    ARK_SCROLL_ALIGN_CENTER = 1,
    ARK_SCROLL_ALIGN_END = 2,
    ARK_SCROLL_ALIGN_AUTO = 3,
} Ark_ScrollAlign;
typedef struct Opt_ScrollAlign {
    Ark_Tag tag;
    Ark_ScrollAlign value;
} Opt_ScrollAlign;
typedef enum Ark_ScrollBarDirection {
    ARK_SCROLL_BAR_DIRECTION_VERTICAL = 0,
    ARK_SCROLL_BAR_DIRECTION_HORIZONTAL = 1,
} Ark_ScrollBarDirection;
typedef struct Opt_ScrollBarDirection {
    Ark_Tag tag;
    Ark_ScrollBarDirection value;
} Opt_ScrollBarDirection;
typedef enum Ark_ScrollDirection {
    ARK_SCROLL_DIRECTION_VERTICAL = 0,
    ARK_SCROLL_DIRECTION_HORIZONTAL = 1,
    ARK_SCROLL_DIRECTION_NONE = 2,
} Ark_ScrollDirection;
typedef struct Opt_ScrollDirection {
    Ark_Tag tag;
    Ark_ScrollDirection value;
} Opt_ScrollDirection;
typedef enum Ark_ScrollSizeMode {
    ARK_SCROLL_SIZE_MODE_FOLLOW_DETENT = 0,
    ARK_SCROLL_SIZE_MODE_CONTINUOUS = 1,
} Ark_ScrollSizeMode;
typedef struct Opt_ScrollSizeMode {
    Ark_Tag tag;
    Ark_ScrollSizeMode value;
} Opt_ScrollSizeMode;
typedef enum Ark_ScrollSnapAlign {
    ARK_SCROLL_SNAP_ALIGN_NONE = 0,
    ARK_SCROLL_SNAP_ALIGN_START = 1,
    ARK_SCROLL_SNAP_ALIGN_CENTER = 2,
    ARK_SCROLL_SNAP_ALIGN_END = 3,
} Ark_ScrollSnapAlign;
typedef struct Opt_ScrollSnapAlign {
    Ark_Tag tag;
    Ark_ScrollSnapAlign value;
} Opt_ScrollSnapAlign;
typedef enum Ark_ScrollSource {
    ARK_SCROLL_SOURCE_DRAG = 0,
    ARK_SCROLL_SOURCE_FLING = 1,
    ARK_SCROLL_SOURCE_EDGE_EFFECT = 2,
    ARK_SCROLL_SOURCE_OTHER_USER_INPUT = 3,
    ARK_SCROLL_SOURCE_SCROLL_BAR = 4,
    ARK_SCROLL_SOURCE_SCROLL_BAR_FLING = 5,
    ARK_SCROLL_SOURCE_SCROLLER = 6,
    ARK_SCROLL_SOURCE_SCROLLER_ANIMATION = 7,
} Ark_ScrollSource;
typedef struct Opt_ScrollSource {
    Ark_Tag tag;
    Ark_ScrollSource value;
} Opt_ScrollSource;
typedef enum Ark_ScrollState {
    ARK_SCROLL_STATE_IDLE = 0,
    ARK_SCROLL_STATE_SCROLL = 1,
    ARK_SCROLL_STATE_FLING = 2,
} Ark_ScrollState;
typedef struct Opt_ScrollState {
    Ark_Tag tag;
    Ark_ScrollState value;
} Opt_ScrollState;
typedef enum Ark_SearchType {
    ARK_SEARCH_TYPE_NORMAL = 0,
    ARK_SEARCH_TYPE_NUMBER = 2,
    ARK_SEARCH_TYPE_PHONE_NUMBER = 3,
    ARK_SEARCH_TYPE_EMAIL = 5,
    ARK_SEARCH_TYPE_NUMBER_DECIMAL = 12,
    ARK_SEARCH_TYPE_URL = 13,
} Ark_SearchType;
typedef struct Opt_SearchType {
    Ark_Tag tag;
    Ark_SearchType value;
} Opt_SearchType;
typedef enum Ark_SecurityComponentLayoutDirection {
    ARK_SECURITY_COMPONENT_LAYOUT_DIRECTION_HORIZONTAL = 0,
    ARK_SECURITY_COMPONENT_LAYOUT_DIRECTION_VERTICAL = 1,
} Ark_SecurityComponentLayoutDirection;
typedef struct Opt_SecurityComponentLayoutDirection {
    Ark_Tag tag;
    Ark_SecurityComponentLayoutDirection value;
} Opt_SecurityComponentLayoutDirection;
typedef enum Ark_SeekMode {
    ARK_SEEK_MODE_PREVIOUS_KEYFRAME = 0,
    ARK_SEEK_MODE_NEXT_KEYFRAME = 1,
    ARK_SEEK_MODE_CLOSEST_KEYFRAME = 2,
    ARK_SEEK_MODE_ACCURATE = 3,
} Ark_SeekMode;
typedef struct Opt_SeekMode {
    Ark_Tag tag;
    Ark_SeekMode value;
} Opt_SeekMode;
typedef enum Ark_SelectedMode {
    ARK_SELECTED_MODE_INDICATOR = 0,
    ARK_SELECTED_MODE_BOARD = 1,
} Ark_SelectedMode;
typedef struct Opt_SelectedMode {
    Ark_Tag tag;
    Ark_SelectedMode value;
} Opt_SelectedMode;
typedef enum Ark_SelectStatus {
    ARK_SELECT_STATUS_ALL = 0,
    ARK_SELECT_STATUS_PART = 1,
    ARK_SELECT_STATUS_NONE = 2,
} Ark_SelectStatus;
typedef struct Opt_SelectStatus {
    Ark_Tag tag;
    Ark_SelectStatus value;
} Opt_SelectStatus;
typedef enum Ark_ShadowStyle {
    ARK_SHADOW_STYLE_OUTER_DEFAULT_XS = 0,
    ARK_SHADOW_STYLE_OUTER_DEFAULT_SM = 1,
    ARK_SHADOW_STYLE_OUTER_DEFAULT_MD = 2,
    ARK_SHADOW_STYLE_OUTER_DEFAULT_LG = 3,
    ARK_SHADOW_STYLE_OUTER_FLOATING_SM = 4,
    ARK_SHADOW_STYLE_OUTER_FLOATING_MD = 5,
} Ark_ShadowStyle;
typedef struct Opt_ShadowStyle {
    Ark_Tag tag;
    Ark_ShadowStyle value;
} Opt_ShadowStyle;
typedef enum Ark_ShadowType {
    ARK_SHADOW_TYPE_COLOR = 0,
    ARK_SHADOW_TYPE_BLUR = 1,
} Ark_ShadowType;
typedef struct Opt_ShadowType {
    Ark_Tag tag;
    Ark_ShadowType value;
} Opt_ShadowType;
typedef enum Ark_SharedTransitionEffectType {
    ARK_SHARED_TRANSITION_EFFECT_TYPE_STATIC = 0,
    ARK_SHARED_TRANSITION_EFFECT_TYPE_EXCHANGE = 1,
} Ark_SharedTransitionEffectType;
typedef struct Opt_SharedTransitionEffectType {
    Ark_Tag tag;
    Ark_SharedTransitionEffectType value;
} Opt_SharedTransitionEffectType;
typedef enum Ark_SheetKeyboardAvoidMode {
    ARK_SHEET_KEYBOARD_AVOID_MODE_NONE = 0,
    ARK_SHEET_KEYBOARD_AVOID_MODE_TRANSLATE_AND_RESIZE = 1,
    ARK_SHEET_KEYBOARD_AVOID_MODE_RESIZE_ONLY = 2,
    ARK_SHEET_KEYBOARD_AVOID_MODE_TRANSLATE_AND_SCROLL = 3,
} Ark_SheetKeyboardAvoidMode;
typedef struct Opt_SheetKeyboardAvoidMode {
    Ark_Tag tag;
    Ark_SheetKeyboardAvoidMode value;
} Opt_SheetKeyboardAvoidMode;
typedef enum Ark_SheetMode {
    ARK_SHEET_MODE_OVERLAY = 0,
    ARK_SHEET_MODE_EMBEDDED = 1,
} Ark_SheetMode;
typedef struct Opt_SheetMode {
    Ark_Tag tag;
    Ark_SheetMode value;
} Opt_SheetMode;
typedef enum Ark_SheetSize {
    ARK_SHEET_SIZE_MEDIUM = 0,
    ARK_SHEET_SIZE_LARGE = 1,
    ARK_SHEET_SIZE_FIT_CONTENT = 2,
} Ark_SheetSize;
typedef struct Opt_SheetSize {
    Ark_Tag tag;
    Ark_SheetSize value;
} Opt_SheetSize;
typedef enum Ark_SheetType {
    ARK_SHEET_TYPE_BOTTOM = 0,
    ARK_SHEET_TYPE_CENTER = 1,
    ARK_SHEET_TYPE_POPUP = 2,
} Ark_SheetType;
typedef struct Opt_SheetType {
    Ark_Tag tag;
    Ark_SheetType value;
} Opt_SheetType;
typedef enum Ark_SideBarContainerType {
    ARK_SIDE_BAR_CONTAINER_TYPE_EMBED = 0,
    ARK_SIDE_BAR_CONTAINER_TYPE_OVERLAY = 1,
    ARK_SIDE_BAR_CONTAINER_TYPE_AUTO = 2,
} Ark_SideBarContainerType;
typedef struct Opt_SideBarContainerType {
    Ark_Tag tag;
    Ark_SideBarContainerType value;
} Opt_SideBarContainerType;
typedef enum Ark_SideBarPosition {
    ARK_SIDE_BAR_POSITION_START = 0,
    ARK_SIDE_BAR_POSITION_END = 1,
} Ark_SideBarPosition;
typedef struct Opt_SideBarPosition {
    Ark_Tag tag;
    Ark_SideBarPosition value;
} Opt_SideBarPosition;
typedef enum Ark_SlideEffect {
    ARK_SLIDE_EFFECT_LEFT = 0,
    ARK_SLIDE_EFFECT_RIGHT = 1,
    ARK_SLIDE_EFFECT_TOP = 2,
    ARK_SLIDE_EFFECT_BOTTOM = 3,
    ARK_SLIDE_EFFECT_START = 5,
    ARK_SLIDE_EFFECT_END = 6,
} Ark_SlideEffect;
typedef struct Opt_SlideEffect {
    Ark_Tag tag;
    Ark_SlideEffect value;
} Opt_SlideEffect;
typedef enum Ark_SliderBlockType {
    ARK_SLIDER_BLOCK_TYPE_DEFAULT = 0,
    ARK_SLIDER_BLOCK_TYPE_IMAGE = 1,
    ARK_SLIDER_BLOCK_TYPE_SHAPE = 2,
} Ark_SliderBlockType;
typedef struct Opt_SliderBlockType {
    Ark_Tag tag;
    Ark_SliderBlockType value;
} Opt_SliderBlockType;
typedef enum Ark_SliderChangeMode {
    ARK_SLIDER_CHANGE_MODE_BEGIN = 0,
    ARK_SLIDER_CHANGE_MODE_MOVING = 1,
    ARK_SLIDER_CHANGE_MODE_END = 2,
    ARK_SLIDER_CHANGE_MODE_CLICK = 3,
} Ark_SliderChangeMode;
typedef struct Opt_SliderChangeMode {
    Ark_Tag tag;
    Ark_SliderChangeMode value;
} Opt_SliderChangeMode;
typedef enum Ark_SliderInteraction {
    ARK_SLIDER_INTERACTION_SLIDE_AND_CLICK = 0,
    ARK_SLIDER_INTERACTION_SLIDE_ONLY = 1,
    ARK_SLIDER_INTERACTION_SLIDE_AND_CLICK_UP = 2,
} Ark_SliderInteraction;
typedef struct Opt_SliderInteraction {
    Ark_Tag tag;
    Ark_SliderInteraction value;
} Opt_SliderInteraction;
typedef enum Ark_SliderStyle {
    ARK_SLIDER_STYLE_OUT_SET = 0,
    ARK_SLIDER_STYLE_IN_SET = 1,
    ARK_SLIDER_STYLE_NONE = 2,
} Ark_SliderStyle;
typedef struct Opt_SliderStyle {
    Ark_Tag tag;
    Ark_SliderStyle value;
} Opt_SliderStyle;
typedef enum Ark_SourceTool {
    ARK_SOURCE_TOOL_UNKNOWN = 0,
    ARK_SOURCE_TOOL_FINGER = 1,
    ARK_SOURCE_TOOL_PEN = 2,
    ARK_SOURCE_TOOL_MOUSE = 3,
    ARK_SOURCE_TOOL_TOUCHPAD = 4,
    ARK_SOURCE_TOOL_JOYSTICK = 5,
} Ark_SourceTool;
typedef struct Opt_SourceTool {
    Ark_Tag tag;
    Ark_SourceTool value;
} Opt_SourceTool;
typedef enum Ark_SourceType {
    ARK_SOURCE_TYPE_UNKNOWN = 0,
    ARK_SOURCE_TYPE_MOUSE = 1,
    ARK_SOURCE_TYPE_TOUCH_SCREEN = 2,
} Ark_SourceType;
typedef struct Opt_SourceType {
    Ark_Tag tag;
    Ark_SourceType value;
} Opt_SourceType;
typedef enum Ark_SslError {
    ARK_SSL_ERROR_INVALID = 0,
    ARK_SSL_ERROR_HOST_MISMATCH = 1,
    ARK_SSL_ERROR_DATE_INVALID = 2,
    ARK_SSL_ERROR_UNTRUSTED = 3,
} Ark_SslError;
typedef struct Opt_SslError {
    Ark_Tag tag;
    Ark_SslError value;
} Opt_SslError;
typedef enum Ark_StickyStyle {
    ARK_STICKY_STYLE_NONE = 0,
    ARK_STICKY_STYLE_HEADER = 1,
    ARK_STICKY_STYLE_FOOTER = 2,
} Ark_StickyStyle;
typedef struct Opt_StickyStyle {
    Ark_Tag tag;
    Ark_StickyStyle value;
} Opt_StickyStyle;
typedef enum Ark_StyledStringKey {
    ARK_STYLED_STRING_KEY_FONT = 0,
    ARK_STYLED_STRING_KEY_DECORATION = 1,
    ARK_STYLED_STRING_KEY_BASELINE_OFFSET = 2,
    ARK_STYLED_STRING_KEY_LETTER_SPACING = 3,
    ARK_STYLED_STRING_KEY_TEXT_SHADOW = 4,
    ARK_STYLED_STRING_KEY_LINE_HEIGHT = 5,
    ARK_STYLED_STRING_KEY_BACKGROUND_COLOR = 6,
    ARK_STYLED_STRING_KEY_URL = 7,
    ARK_STYLED_STRING_KEY_GESTURE = 100,
    ARK_STYLED_STRING_KEY_PARAGRAPH_STYLE = 200,
    ARK_STYLED_STRING_KEY_IMAGE = 300,
    ARK_STYLED_STRING_KEY_CUSTOM_SPAN = 400,
    ARK_STYLED_STRING_KEY_USER_DATA = 500,
} Ark_StyledStringKey;
typedef struct Opt_StyledStringKey {
    Ark_Tag tag;
    Ark_StyledStringKey value;
} Opt_StyledStringKey;
typedef enum Ark_SubMenuExpandingMode {
    ARK_SUB_MENU_EXPANDING_MODE_SIDE_EXPAND = 0,
    ARK_SUB_MENU_EXPANDING_MODE_EMBEDDED_EXPAND = 1,
    ARK_SUB_MENU_EXPANDING_MODE_STACK_EXPAND = 2,
} Ark_SubMenuExpandingMode;
typedef struct Opt_SubMenuExpandingMode {
    Ark_Tag tag;
    Ark_SubMenuExpandingMode value;
} Opt_SubMenuExpandingMode;
typedef enum Ark_SwipeActionState {
    ARK_SWIPE_ACTION_STATE_COLLAPSED = 0,
    ARK_SWIPE_ACTION_STATE_EXPANDED = 1,
    ARK_SWIPE_ACTION_STATE_ACTIONING = 2,
} Ark_SwipeActionState;
typedef struct Opt_SwipeActionState {
    Ark_Tag tag;
    Ark_SwipeActionState value;
} Opt_SwipeActionState;
typedef enum Ark_SwipeDirection {
    ARK_SWIPE_DIRECTION_NONE = 0,
    ARK_SWIPE_DIRECTION_HORIZONTAL = 1,
    ARK_SWIPE_DIRECTION_VERTICAL = 2,
    ARK_SWIPE_DIRECTION_ALL = 3,
} Ark_SwipeDirection;
typedef struct Opt_SwipeDirection {
    Ark_Tag tag;
    Ark_SwipeDirection value;
} Opt_SwipeDirection;
typedef enum Ark_SwipeEdgeEffect {
    ARK_SWIPE_EDGE_EFFECT_SPRING = 0,
    ARK_SWIPE_EDGE_EFFECT_NONE = 1,
} Ark_SwipeEdgeEffect;
typedef struct Opt_SwipeEdgeEffect {
    Ark_Tag tag;
    Ark_SwipeEdgeEffect value;
} Opt_SwipeEdgeEffect;
typedef enum Ark_SwiperAnimationMode {
    ARK_SWIPER_ANIMATION_MODE_NO_ANIMATION = 0,
    ARK_SWIPER_ANIMATION_MODE_DEFAULT_ANIMATION = 1,
    ARK_SWIPER_ANIMATION_MODE_FAST_ANIMATION = 2,
} Ark_SwiperAnimationMode;
typedef struct Opt_SwiperAnimationMode {
    Ark_Tag tag;
    Ark_SwiperAnimationMode value;
} Opt_SwiperAnimationMode;
typedef enum Ark_SwiperDisplayMode {
    ARK_SWIPER_DISPLAY_MODE_STRETCH = 0,
} Ark_SwiperDisplayMode;
typedef struct Opt_SwiperDisplayMode {
    Ark_Tag tag;
    Ark_SwiperDisplayMode value;
} Opt_SwiperDisplayMode;
typedef enum Ark_SwiperNestedScrollMode {
    ARK_SWIPER_NESTED_SCROLL_MODE_SELF_ONLY = 0,
    ARK_SWIPER_NESTED_SCROLL_MODE_SELF_FIRST = 1,
} Ark_SwiperNestedScrollMode;
typedef struct Opt_SwiperNestedScrollMode {
    Ark_Tag tag;
    Ark_SwiperNestedScrollMode value;
} Opt_SwiperNestedScrollMode;
typedef enum Ark_SymbolEffectStrategy {
    ARK_SYMBOL_EFFECT_STRATEGY_NONE = 0,
    ARK_SYMBOL_EFFECT_STRATEGY_SCALE = 1,
    ARK_SYMBOL_EFFECT_STRATEGY_HIERARCHICAL = 2,
} Ark_SymbolEffectStrategy;
typedef struct Opt_SymbolEffectStrategy {
    Ark_Tag tag;
    Ark_SymbolEffectStrategy value;
} Opt_SymbolEffectStrategy;
typedef enum Ark_SymbolRenderingStrategy {
    ARK_SYMBOL_RENDERING_STRATEGY_SINGLE = 0,
    ARK_SYMBOL_RENDERING_STRATEGY_MULTIPLE_COLOR = 1,
    ARK_SYMBOL_RENDERING_STRATEGY_MULTIPLE_OPACITY = 2,
} Ark_SymbolRenderingStrategy;
typedef struct Opt_SymbolRenderingStrategy {
    Ark_Tag tag;
    Ark_SymbolRenderingStrategy value;
} Opt_SymbolRenderingStrategy;
typedef enum Ark_TabsCacheMode {
    ARK_TABS_CACHE_MODE_CACHE_BOTH_SIDE = 0,
    ARK_TABS_CACHE_MODE_CACHE_LATEST_SWITCHED = 1,
} Ark_TabsCacheMode;
typedef struct Opt_TabsCacheMode {
    Ark_Tag tag;
    Ark_TabsCacheMode value;
} Opt_TabsCacheMode;
typedef enum Ark_text_Affinity {
    ARK_TEXT_AFFINITY_UPSTREAM,
    ARK_TEXT_AFFINITY_DOWNSTREAM,
} Ark_text_Affinity;
typedef struct Opt_text_Affinity {
    Ark_Tag tag;
    Ark_text_Affinity value;
} Opt_text_Affinity;
typedef enum Ark_text_BreakStrategy {
    ARK_TEXT_BREAK_STRATEGY_GREEDY,
    ARK_TEXT_BREAK_STRATEGY_HIGH_QUALITY,
    ARK_TEXT_BREAK_STRATEGY_BALANCED,
} Ark_text_BreakStrategy;
typedef struct Opt_text_BreakStrategy {
    Ark_Tag tag;
    Ark_text_BreakStrategy value;
} Opt_text_BreakStrategy;
typedef enum Ark_text_EllipsisMode {
    ARK_TEXT_ELLIPSIS_MODE_START,
    ARK_TEXT_ELLIPSIS_MODE_MIDDLE,
    ARK_TEXT_ELLIPSIS_MODE_END,
} Ark_text_EllipsisMode;
typedef struct Opt_text_EllipsisMode {
    Ark_Tag tag;
    Ark_text_EllipsisMode value;
} Opt_text_EllipsisMode;
typedef enum Ark_text_FontStyle {
    ARK_TEXT_FONT_STYLE_NORMAL,
    ARK_TEXT_FONT_STYLE_ITALIC,
    ARK_TEXT_FONT_STYLE_OBLIQUE,
} Ark_text_FontStyle;
typedef struct Opt_text_FontStyle {
    Ark_Tag tag;
    Ark_text_FontStyle value;
} Opt_text_FontStyle;
typedef enum Ark_text_FontWeight {
    ARK_TEXT_FONT_WEIGHT_W100,
    ARK_TEXT_FONT_WEIGHT_W200,
    ARK_TEXT_FONT_WEIGHT_W300,
    ARK_TEXT_FONT_WEIGHT_W400,
    ARK_TEXT_FONT_WEIGHT_W500,
    ARK_TEXT_FONT_WEIGHT_W600,
    ARK_TEXT_FONT_WEIGHT_W700,
    ARK_TEXT_FONT_WEIGHT_W800,
    ARK_TEXT_FONT_WEIGHT_W900,
} Ark_text_FontWeight;
typedef struct Opt_text_FontWeight {
    Ark_Tag tag;
    Ark_text_FontWeight value;
} Opt_text_FontWeight;
typedef enum Ark_text_FontWidth {
    ARK_TEXT_FONT_WIDTH_ULTRA_CONDENSED = 1,
    ARK_TEXT_FONT_WIDTH_EXTRA_CONDENSED = 2,
    ARK_TEXT_FONT_WIDTH_CONDENSED = 3,
    ARK_TEXT_FONT_WIDTH_SEMI_CONDENSED = 4,
    ARK_TEXT_FONT_WIDTH_NORMAL = 5,
    ARK_TEXT_FONT_WIDTH_SEMI_EXPANDED = 6,
    ARK_TEXT_FONT_WIDTH_EXPANDED = 7,
    ARK_TEXT_FONT_WIDTH_EXTRA_EXPANDED = 8,
    ARK_TEXT_FONT_WIDTH_ULTRA_EXPANDED = 9,
} Ark_text_FontWidth;
typedef struct Opt_text_FontWidth {
    Ark_Tag tag;
    Ark_text_FontWidth value;
} Opt_text_FontWidth;
typedef enum Ark_text_PlaceholderAlignment {
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_OFFSET_AT_BASELINE,
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_ABOVE_BASELINE,
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_BELOW_BASELINE,
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_TOP_OF_ROW_BOX,
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_BOTTOM_OF_ROW_BOX,
    ARK_TEXT_PLACEHOLDER_ALIGNMENT_CENTER_OF_ROW_BOX,
} Ark_text_PlaceholderAlignment;
typedef struct Opt_text_PlaceholderAlignment {
    Ark_Tag tag;
    Ark_text_PlaceholderAlignment value;
} Opt_text_PlaceholderAlignment;
typedef enum Ark_text_RectHeightStyle {
    ARK_TEXT_RECT_HEIGHT_STYLE_TIGHT,
    ARK_TEXT_RECT_HEIGHT_STYLE_MAX,
    ARK_TEXT_RECT_HEIGHT_STYLE_INCLUDE_LINE_SPACE_MIDDLE,
    ARK_TEXT_RECT_HEIGHT_STYLE_INCLUDE_LINE_SPACE_TOP,
    ARK_TEXT_RECT_HEIGHT_STYLE_INCLUDE_LINE_SPACE_BOTTOM,
    ARK_TEXT_RECT_HEIGHT_STYLE_STRUT,
} Ark_text_RectHeightStyle;
typedef struct Opt_text_RectHeightStyle {
    Ark_Tag tag;
    Ark_text_RectHeightStyle value;
} Opt_text_RectHeightStyle;
typedef enum Ark_text_RectWidthStyle {
    ARK_TEXT_RECT_WIDTH_STYLE_TIGHT,
    ARK_TEXT_RECT_WIDTH_STYLE_MAX,
} Ark_text_RectWidthStyle;
typedef struct Opt_text_RectWidthStyle {
    Ark_Tag tag;
    Ark_text_RectWidthStyle value;
} Opt_text_RectWidthStyle;
typedef enum Ark_text_SystemFontType {
    ARK_TEXT_SYSTEM_FONT_TYPE_ALL,
    ARK_TEXT_SYSTEM_FONT_TYPE_GENERIC,
    ARK_TEXT_SYSTEM_FONT_TYPE_STYLISH,
    ARK_TEXT_SYSTEM_FONT_TYPE_INSTALLED,
} Ark_text_SystemFontType;
typedef struct Opt_text_SystemFontType {
    Ark_Tag tag;
    Ark_text_SystemFontType value;
} Opt_text_SystemFontType;
typedef enum Ark_text_TextAlign {
    ARK_TEXT_TEXT_ALIGN_LEFT = 0,
    ARK_TEXT_TEXT_ALIGN_RIGHT = 1,
    ARK_TEXT_TEXT_ALIGN_CENTER = 2,
    ARK_TEXT_TEXT_ALIGN_JUSTIFY = 3,
    ARK_TEXT_TEXT_ALIGN_START = 4,
    ARK_TEXT_TEXT_ALIGN_END = 5,
} Ark_text_TextAlign;
typedef struct Opt_text_TextAlign {
    Ark_Tag tag;
    Ark_text_TextAlign value;
} Opt_text_TextAlign;
typedef enum Ark_text_TextBaseline {
    ARK_TEXT_TEXT_BASELINE_ALPHABETIC,
    ARK_TEXT_TEXT_BASELINE_IDEOGRAPHIC,
} Ark_text_TextBaseline;
typedef struct Opt_text_TextBaseline {
    Ark_Tag tag;
    Ark_text_TextBaseline value;
} Opt_text_TextBaseline;
typedef enum Ark_text_TextDecorationStyle {
    ARK_TEXT_TEXT_DECORATION_STYLE_SOLID,
    ARK_TEXT_TEXT_DECORATION_STYLE_DOUBLE,
    ARK_TEXT_TEXT_DECORATION_STYLE_DOTTED,
    ARK_TEXT_TEXT_DECORATION_STYLE_DASHED,
    ARK_TEXT_TEXT_DECORATION_STYLE_WAVY,
} Ark_text_TextDecorationStyle;
typedef struct Opt_text_TextDecorationStyle {
    Ark_Tag tag;
    Ark_text_TextDecorationStyle value;
} Opt_text_TextDecorationStyle;
typedef enum Ark_text_TextDecorationType {
    ARK_TEXT_TEXT_DECORATION_TYPE_NONE,
    ARK_TEXT_TEXT_DECORATION_TYPE_UNDERLINE,
    ARK_TEXT_TEXT_DECORATION_TYPE_OVERLINE,
    ARK_TEXT_TEXT_DECORATION_TYPE_LINE_THROUGH,
} Ark_text_TextDecorationType;
typedef struct Opt_text_TextDecorationType {
    Ark_Tag tag;
    Ark_text_TextDecorationType value;
} Opt_text_TextDecorationType;
typedef enum Ark_text_TextDirection {
    ARK_TEXT_TEXT_DIRECTION_RTL,
    ARK_TEXT_TEXT_DIRECTION_LTR,
} Ark_text_TextDirection;
typedef struct Opt_text_TextDirection {
    Ark_Tag tag;
    Ark_text_TextDirection value;
} Opt_text_TextDirection;
typedef enum Ark_text_TextHeightBehavior {
    ARK_TEXT_TEXT_HEIGHT_BEHAVIOR_ALL,
    ARK_TEXT_TEXT_HEIGHT_BEHAVIOR_DISABLE_FIRST_ASCENT,
    ARK_TEXT_TEXT_HEIGHT_BEHAVIOR_DISABLE_LAST_ASCENT,
    ARK_TEXT_TEXT_HEIGHT_BEHAVIOR_DISABLE_ALL,
} Ark_text_TextHeightBehavior;
typedef struct Opt_text_TextHeightBehavior {
    Ark_Tag tag;
    Ark_text_TextHeightBehavior value;
} Opt_text_TextHeightBehavior;
typedef enum Ark_text_WordBreak {
    ARK_TEXT_WORD_BREAK_NORMAL,
    ARK_TEXT_WORD_BREAK_BREAK_ALL,
    ARK_TEXT_WORD_BREAK_BREAK_WORD,
} Ark_text_WordBreak;
typedef struct Opt_text_WordBreak {
    Ark_Tag tag;
    Ark_text_WordBreak value;
} Opt_text_WordBreak;
typedef enum Ark_TextAlign {
    ARK_TEXT_ALIGN_CENTER = 0,
    ARK_TEXT_ALIGN_START = 1,
    ARK_TEXT_ALIGN_END = 2,
    ARK_TEXT_ALIGN_JUSTIFY = 3,
} Ark_TextAlign;
typedef struct Opt_TextAlign {
    Ark_Tag tag;
    Ark_TextAlign value;
} Opt_TextAlign;
typedef enum Ark_TextAreaType {
    ARK_TEXT_AREA_TYPE_NORMAL = 0,
    ARK_TEXT_AREA_TYPE_NUMBER = 2,
    ARK_TEXT_AREA_TYPE_PHONE_NUMBER = 3,
    ARK_TEXT_AREA_TYPE_EMAIL = 5,
    ARK_TEXT_AREA_TYPE_NUMBER_DECIMAL = 12,
    ARK_TEXT_AREA_TYPE_URL = 13,
} Ark_TextAreaType;
typedef struct Opt_TextAreaType {
    Ark_Tag tag;
    Ark_TextAreaType value;
} Opt_TextAreaType;
typedef enum Ark_TextCase {
    ARK_TEXT_CASE_NORMAL = 0,
    ARK_TEXT_CASE_LOWER_CASE = 1,
    ARK_TEXT_CASE_UPPER_CASE = 2,
} Ark_TextCase;
typedef struct Opt_TextCase {
    Ark_Tag tag;
    Ark_TextCase value;
} Opt_TextCase;
typedef enum Ark_TextContentStyle {
    ARK_TEXT_CONTENT_STYLE_DEFAULT = 0,
    ARK_TEXT_CONTENT_STYLE_INLINE = 1,
} Ark_TextContentStyle;
typedef struct Opt_TextContentStyle {
    Ark_Tag tag;
    Ark_TextContentStyle value;
} Opt_TextContentStyle;
typedef enum Ark_TextDataDetectorType {
    ARK_TEXT_DATA_DETECTOR_TYPE_PHONE_NUMBER = 0,
    ARK_TEXT_DATA_DETECTOR_TYPE_URL = 1,
    ARK_TEXT_DATA_DETECTOR_TYPE_EMAIL = 2,
    ARK_TEXT_DATA_DETECTOR_TYPE_ADDRESS = 3,
    ARK_TEXT_DATA_DETECTOR_TYPE_DATE_TIME = 4,
} Ark_TextDataDetectorType;
typedef struct Opt_TextDataDetectorType {
    Ark_Tag tag;
    Ark_TextDataDetectorType value;
} Opt_TextDataDetectorType;
typedef enum Ark_TextDecorationStyle {
    ARK_TEXT_DECORATION_STYLE_SOLID = 0,
    ARK_TEXT_DECORATION_STYLE_DOUBLE = 1,
    ARK_TEXT_DECORATION_STYLE_DOTTED = 2,
    ARK_TEXT_DECORATION_STYLE_DASHED = 3,
    ARK_TEXT_DECORATION_STYLE_WAVY = 4,
} Ark_TextDecorationStyle;
typedef struct Opt_TextDecorationStyle {
    Ark_Tag tag;
    Ark_TextDecorationStyle value;
} Opt_TextDecorationStyle;
typedef enum Ark_TextDecorationType {
    ARK_TEXT_DECORATION_TYPE_NONE = 0,
    ARK_TEXT_DECORATION_TYPE_UNDERLINE = 1,
    ARK_TEXT_DECORATION_TYPE_OVERLINE = 2,
    ARK_TEXT_DECORATION_TYPE_LINE_THROUGH = 3,
} Ark_TextDecorationType;
typedef struct Opt_TextDecorationType {
    Ark_Tag tag;
    Ark_TextDecorationType value;
} Opt_TextDecorationType;
typedef enum Ark_TextDeleteDirection {
    ARK_TEXT_DELETE_DIRECTION_BACKWARD = 0,
    ARK_TEXT_DELETE_DIRECTION_FORWARD = 1,
} Ark_TextDeleteDirection;
typedef struct Opt_TextDeleteDirection {
    Ark_Tag tag;
    Ark_TextDeleteDirection value;
} Opt_TextDeleteDirection;
typedef enum Ark_TextHeightAdaptivePolicy {
    ARK_TEXT_HEIGHT_ADAPTIVE_POLICY_MAX_LINES_FIRST = 0,
    ARK_TEXT_HEIGHT_ADAPTIVE_POLICY_MIN_FONT_SIZE_FIRST = 1,
    ARK_TEXT_HEIGHT_ADAPTIVE_POLICY_LAYOUT_CONSTRAINT_FIRST = 2,
} Ark_TextHeightAdaptivePolicy;
typedef struct Opt_TextHeightAdaptivePolicy {
    Ark_Tag tag;
    Ark_TextHeightAdaptivePolicy value;
} Opt_TextHeightAdaptivePolicy;
typedef enum Ark_TextInputStyle {
    ARK_TEXT_INPUT_STYLE_DEFAULT = 0,
    ARK_TEXT_INPUT_STYLE_INLINE = 1,
} Ark_TextInputStyle;
typedef struct Opt_TextInputStyle {
    Ark_Tag tag;
    Ark_TextInputStyle value;
} Opt_TextInputStyle;
typedef enum Ark_TextMenuShowMode {
    ARK_TEXT_MENU_SHOW_MODE_DEFAULT = 0,
    ARK_TEXT_MENU_SHOW_MODE_PREFER_WINDOW = 1,
} Ark_TextMenuShowMode;
typedef struct Opt_TextMenuShowMode {
    Ark_Tag tag;
    Ark_TextMenuShowMode value;
} Opt_TextMenuShowMode;
typedef enum Ark_TextOverflow {
    ARK_TEXT_OVERFLOW_NONE = 0,
    ARK_TEXT_OVERFLOW_CLIP = 1,
    ARK_TEXT_OVERFLOW_ELLIPSIS = 2,
    ARK_TEXT_OVERFLOW_MARQUEE = 3,
} Ark_TextOverflow;
typedef struct Opt_TextOverflow {
    Ark_Tag tag;
    Ark_TextOverflow value;
} Opt_TextOverflow;
typedef enum Ark_TextResponseType {
    ARK_TEXT_RESPONSE_TYPE_RIGHT_CLICK = 0,
    ARK_TEXT_RESPONSE_TYPE_LONG_PRESS = 1,
    ARK_TEXT_RESPONSE_TYPE_SELECT = 2,
    ARK_TEXT_RESPONSE_TYPE_DEFAULT = 3,
} Ark_TextResponseType;
typedef struct Opt_TextResponseType {
    Ark_Tag tag;
    Ark_TextResponseType value;
} Opt_TextResponseType;
typedef enum Ark_TextSelectableMode {
    ARK_TEXT_SELECTABLE_MODE_SELECTABLE_UNFOCUSABLE = 0,
    ARK_TEXT_SELECTABLE_MODE_SELECTABLE_FOCUSABLE = 1,
    ARK_TEXT_SELECTABLE_MODE_UNSELECTABLE = 2,
} Ark_TextSelectableMode;
typedef struct Opt_TextSelectableMode {
    Ark_Tag tag;
    Ark_TextSelectableMode value;
} Opt_TextSelectableMode;
typedef enum Ark_TextSpanType {
    ARK_TEXT_SPAN_TYPE_TEXT = 0,
    ARK_TEXT_SPAN_TYPE_IMAGE = 1,
    ARK_TEXT_SPAN_TYPE_MIXED = 2,
    ARK_TEXT_SPAN_TYPE_DEFAULT = 3,
} Ark_TextSpanType;
typedef struct Opt_TextSpanType {
    Ark_Tag tag;
    Ark_TextSpanType value;
} Opt_TextSpanType;
typedef enum Ark_ThemeColorMode {
    ARK_THEME_COLOR_MODE_SYSTEM = 0,
    ARK_THEME_COLOR_MODE_LIGHT = 1,
    ARK_THEME_COLOR_MODE_DARK = 2,
} Ark_ThemeColorMode;
typedef struct Opt_ThemeColorMode {
    Ark_Tag tag;
    Ark_ThemeColorMode value;
} Opt_ThemeColorMode;
typedef enum Ark_ThreatType {
    ARK_THREAT_TYPE_THREAT_ILLEGAL = 0,
    ARK_THREAT_TYPE_THREAT_FRAUD = 1,
    ARK_THREAT_TYPE_THREAT_RISK = 2,
    ARK_THREAT_TYPE_THREAT_WARNING = 3,
} Ark_ThreatType;
typedef struct Opt_ThreatType {
    Ark_Tag tag;
    Ark_ThreatType value;
} Opt_ThreatType;
typedef enum Ark_TimePickerFormat {
    ARK_TIME_PICKER_FORMAT_HOUR_MINUTE = 0,
    ARK_TIME_PICKER_FORMAT_HOUR_MINUTE_SECOND = 1,
} Ark_TimePickerFormat;
typedef struct Opt_TimePickerFormat {
    Ark_Tag tag;
    Ark_TimePickerFormat value;
} Opt_TimePickerFormat;
typedef enum Ark_TitleHeight {
    ARK_TITLE_HEIGHT_MAIN_ONLY = 0,
    ARK_TITLE_HEIGHT_MAIN_WITH_SUB = 1,
} Ark_TitleHeight;
typedef struct Opt_TitleHeight {
    Ark_Tag tag;
    Ark_TitleHeight value;
} Opt_TitleHeight;
typedef enum Ark_ToggleType {
    ARK_TOGGLE_TYPE_CHECKBOX = 0,
    ARK_TOGGLE_TYPE_SWITCH = 1,
    ARK_TOGGLE_TYPE_BUTTON = 2,
} Ark_ToggleType;
typedef struct Opt_ToggleType {
    Ark_Tag tag;
    Ark_ToggleType value;
} Opt_ToggleType;
typedef enum Ark_ToolbarItemStatus {
    ARK_TOOLBAR_ITEM_STATUS_NORMAL = 0,
    ARK_TOOLBAR_ITEM_STATUS_DISABLED = 1,
    ARK_TOOLBAR_ITEM_STATUS_ACTIVE = 2,
} Ark_ToolbarItemStatus;
typedef struct Opt_ToolbarItemStatus {
    Ark_Tag tag;
    Ark_ToolbarItemStatus value;
} Opt_ToolbarItemStatus;
typedef enum Ark_TouchTestStrategy {
    ARK_TOUCH_TEST_STRATEGY_DEFAULT = 0,
    ARK_TOUCH_TEST_STRATEGY_FORWARD_COMPETITION = 1,
    ARK_TOUCH_TEST_STRATEGY_FORWARD = 2,
} Ark_TouchTestStrategy;
typedef struct Opt_TouchTestStrategy {
    Ark_Tag tag;
    Ark_TouchTestStrategy value;
} Opt_TouchTestStrategy;
typedef enum Ark_TouchType {
    ARK_TOUCH_TYPE_DOWN = 0,
    ARK_TOUCH_TYPE_UP = 1,
    ARK_TOUCH_TYPE_MOVE = 2,
    ARK_TOUCH_TYPE_CANCEL = 3,
} Ark_TouchType;
typedef struct Opt_TouchType {
    Ark_Tag tag;
    Ark_TouchType value;
} Opt_TouchType;
typedef enum Ark_TransitionEdge {
    ARK_TRANSITION_EDGE_TOP = 0,
    ARK_TRANSITION_EDGE_BOTTOM = 1,
    ARK_TRANSITION_EDGE_START = 2,
    ARK_TRANSITION_EDGE_END = 3,
} Ark_TransitionEdge;
typedef struct Opt_TransitionEdge {
    Ark_Tag tag;
    Ark_TransitionEdge value;
} Opt_TransitionEdge;
typedef enum Ark_TransitionHierarchyStrategy {
    ARK_TRANSITION_HIERARCHY_STRATEGY_NONE = 0,
    ARK_TRANSITION_HIERARCHY_STRATEGY_ADAPTIVE = 1,
} Ark_TransitionHierarchyStrategy;
typedef struct Opt_TransitionHierarchyStrategy {
    Ark_Tag tag;
    Ark_TransitionHierarchyStrategy value;
} Opt_TransitionHierarchyStrategy;
typedef enum Ark_TransitionType {
    ARK_TRANSITION_TYPE_ALL = 0,
    ARK_TRANSITION_TYPE_INSERT = 1,
    ARK_TRANSITION_TYPE_DELETE = 2,
} Ark_TransitionType;
typedef struct Opt_TransitionType {
    Ark_Tag tag;
    Ark_TransitionType value;
} Opt_TransitionType;
typedef enum Ark_uniformTypeDescriptor_UniformDataType {
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ENTITY,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OBJECT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_COMPOSITE_OBJECT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PLAIN_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_HTML,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_HYPERLINK,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_XML,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_XHTML,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_RSS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SMIL,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SOURCE_CODE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SHELL_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_CSH_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PERL_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PHP_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PYTHON_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_RUBY_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TYPE_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_JAVA_SCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_CSS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_C_HEADER,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_C_SOURCE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_C_PLUS_PLUS_HEADER,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_C_PLUS_PLUS_SOURCE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_JAVA_SOURCE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TEX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MARKDOWN,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ASC_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_RICH_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DELIMITED_VALUES_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_COMMA_SEPARATED_VALUES_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TAB_SEPARATED_VALUES_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EBOOK,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EPUB,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AZW,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AZW3,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_KFX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MOBI,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MEDIA,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_JPEG,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PNG,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_RAW_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TIFF,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_BMP,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ICO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PHOTOSHOP_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AI_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FAX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_JFX_FAX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EFX_FAX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_XBITMAP_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_GIF,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TGA_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SGI_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENEXR_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FLASHPIX_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WORD_DOC,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EXCEL,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WORD_DOT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POWERPOINT_PPS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POWERPOINT_POT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EXCEL_XLT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VISIO_VSD,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PDF,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POSTSCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ENCAPSULATED_POSTSCRIPT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VIDEO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AVI,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEG,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEG4,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VIDEO_3GPP,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VIDEO_3GPP2,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEGURL_VIDEO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WM,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WMV,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WMP,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WVX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WMX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_REALMEDIA,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MATROSKA_VIDEO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FLASH,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AAC,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AIFF,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ALAC,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FLAC,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MP3,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OGG,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PCM,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WMA,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WAVEFORM_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WINDOWS_MEDIA_WAX,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AU_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_AIFC_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEGURL_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEG_4_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MP2,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MPEG_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ULAW_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SD2_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_REALAUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MATROSKA_AUDIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FILE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DIRECTORY,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FOLDER,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SYMLINK,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_BZ2_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPG,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TAZ_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WEB_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DISK_IMAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ISO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TAR_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ZIP_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_JAVA_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_GNU_TAR_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_GNU_ZIP_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_GNU_ZIP_TAR_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENXML,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WORDPROCESSINGML_DOCUMENT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SPREADSHEETML_SHEET,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PRESENTATIONML_PRESENTATION,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DRAWINGML_VISIO,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DRAWINGML_TEMPLATE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_WORDPROCESSINGML_TEMPLATE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PRESENTATIONML_TEMPLATE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PRESENTATIONML_SLIDESHOW,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SPREADSHEETML_TEMPLATE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT_TEXT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT_SPREADSHEET,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT_PRESENTATION,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT_GRAPHICS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENDOCUMENT_FORMULA,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_STUFFIT_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_RAR_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SEVEN_ZIP_ARCHIVE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_CALENDAR,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VCS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_ICS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_CONTACT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_DATABASE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_MESSAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_EXECUTABLE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_PORTABLE_EXECUTABLE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_SUN_JAVA_CLASS,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_VCARD,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_NAVIGATION,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_LOCATION,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TRUETYPE_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_TRUETYPE_COLLECTION_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENTYPE_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POSTSCRIPT_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POSTSCRIPT_PFB_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_POSTSCRIPT_PFA_FONT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_FORM,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_APP_ITEM,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_PIXEL_MAP,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_ATOMIC_SERVICE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_PACKAGE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_HAP,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_HDOC,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_HINOTE,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_STYLED_STRING,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OPENHARMONY_WANT,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OFD,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_CAD,
    ARK_UNIFORM_TYPE_DESCRIPTOR_UNIFORM_DATA_TYPE_OCTET_STREAM,
} Ark_uniformTypeDescriptor_UniformDataType;
typedef struct Opt_uniformTypeDescriptor_UniformDataType {
    Ark_Tag tag;
    Ark_uniformTypeDescriptor_UniformDataType value;
} Opt_uniformTypeDescriptor_UniformDataType;
typedef enum Ark_VerticalAlign {
    ARK_VERTICAL_ALIGN_TOP = 0,
    ARK_VERTICAL_ALIGN_CENTER = 1,
    ARK_VERTICAL_ALIGN_BOTTOM = 2,
} Ark_VerticalAlign;
typedef struct Opt_VerticalAlign {
    Ark_Tag tag;
    Ark_VerticalAlign value;
} Opt_VerticalAlign;
typedef enum Ark_ViewportFit {
    ARK_VIEWPORT_FIT_AUTO = 0,
    ARK_VIEWPORT_FIT_CONTAINS = 1,
    ARK_VIEWPORT_FIT_COVER = 2,
} Ark_ViewportFit;
typedef struct Opt_ViewportFit {
    Ark_Tag tag;
    Ark_ViewportFit value;
} Opt_ViewportFit;
typedef enum Ark_Visibility {
    ARK_VISIBILITY_VISIBLE = 0,
    ARK_VISIBILITY_HIDDEN = 1,
    ARK_VISIBILITY_NONE = 2,
} Ark_Visibility;
typedef struct Opt_Visibility {
    Ark_Tag tag;
    Ark_Visibility value;
} Opt_Visibility;
typedef enum Ark_WaterFlowLayoutMode {
    ARK_WATER_FLOW_LAYOUT_MODE_ALWAYS_TOP_DOWN = 0,
    ARK_WATER_FLOW_LAYOUT_MODE_SLIDING_WINDOW = 1,
} Ark_WaterFlowLayoutMode;
typedef struct Opt_WaterFlowLayoutMode {
    Ark_Tag tag;
    Ark_WaterFlowLayoutMode value;
} Opt_WaterFlowLayoutMode;
typedef enum Ark_WebCaptureMode {
    ARK_WEB_CAPTURE_MODE_HOME_SCREEN = 0,
} Ark_WebCaptureMode;
typedef struct Opt_WebCaptureMode {
    Ark_Tag tag;
    Ark_WebCaptureMode value;
} Opt_WebCaptureMode;
typedef enum Ark_WebDarkMode {
    ARK_WEB_DARK_MODE_OFF = 0,
    ARK_WEB_DARK_MODE_ON = 1,
    ARK_WEB_DARK_MODE_AUTO = 2,
} Ark_WebDarkMode;
typedef struct Opt_WebDarkMode {
    Ark_Tag tag;
    Ark_WebDarkMode value;
} Opt_WebDarkMode;
typedef enum Ark_WebElementType {
    ARK_WEB_ELEMENT_TYPE_IMAGE = 1,
} Ark_WebElementType;
typedef struct Opt_WebElementType {
    Ark_Tag tag;
    Ark_WebElementType value;
} Opt_WebElementType;
typedef enum Ark_WebKeyboardAvoidMode {
    ARK_WEB_KEYBOARD_AVOID_MODE_RESIZE_VISUAL = 0,
    ARK_WEB_KEYBOARD_AVOID_MODE_RESIZE_CONTENT = 1,
    ARK_WEB_KEYBOARD_AVOID_MODE_OVERLAYS_CONTENT = 2,
} Ark_WebKeyboardAvoidMode;
typedef struct Opt_WebKeyboardAvoidMode {
    Ark_Tag tag;
    Ark_WebKeyboardAvoidMode value;
} Opt_WebKeyboardAvoidMode;
typedef enum Ark_WebLayoutMode {
    ARK_WEB_LAYOUT_MODE_NONE = 0,
    ARK_WEB_LAYOUT_MODE_FIT_CONTENT = 1,
} Ark_WebLayoutMode;
typedef struct Opt_WebLayoutMode {
    Ark_Tag tag;
    Ark_WebLayoutMode value;
} Opt_WebLayoutMode;
typedef enum Ark_WebNavigationType {
    ARK_WEB_NAVIGATION_TYPE_UNKNOWN = 0,
    ARK_WEB_NAVIGATION_TYPE_MAIN_FRAME_NEW_ENTRY = 1,
    ARK_WEB_NAVIGATION_TYPE_MAIN_FRAME_EXISTING_ENTRY = 2,
    ARK_WEB_NAVIGATION_TYPE_NAVIGATION_TYPE_NEW_SUBFRAME = 4,
    ARK_WEB_NAVIGATION_TYPE_NAVIGATION_TYPE_AUTO_SUBFRAME = 5,
} Ark_WebNavigationType;
typedef struct Opt_WebNavigationType {
    Ark_Tag tag;
    Ark_WebNavigationType value;
} Opt_WebNavigationType;
typedef enum Ark_WebResponseType {
    ARK_WEB_RESPONSE_TYPE_LONG_PRESS = 1,
} Ark_WebResponseType;
typedef struct Opt_WebResponseType {
    Ark_Tag tag;
    Ark_WebResponseType value;
} Opt_WebResponseType;
typedef enum Ark_Week {
    ARK_WEEK_MON = 0,
    ARK_WEEK_TUE = 1,
    ARK_WEEK_WED = 2,
    ARK_WEEK_THUR = 3,
    ARK_WEEK_FRI = 4,
    ARK_WEEK_SAT = 5,
    ARK_WEEK_SUN = 6,
} Ark_Week;
typedef struct Opt_Week {
    Ark_Tag tag;
    Ark_Week value;
} Opt_Week;
typedef enum Ark_WidthBreakpoint {
    ARK_WIDTH_BREAKPOINT_WIDTH_XS = 0,
    ARK_WIDTH_BREAKPOINT_WIDTH_SM = 1,
    ARK_WIDTH_BREAKPOINT_WIDTH_MD = 2,
    ARK_WIDTH_BREAKPOINT_WIDTH_LG = 3,
    ARK_WIDTH_BREAKPOINT_WIDTH_XL = 4,
} Ark_WidthBreakpoint;
typedef struct Opt_WidthBreakpoint {
    Ark_Tag tag;
    Ark_WidthBreakpoint value;
} Opt_WidthBreakpoint;
typedef enum Ark_window_WindowStatusType {
    ARK_WINDOW_WINDOW_STATUS_TYPE_UNDEFINED = 0,
    ARK_WINDOW_WINDOW_STATUS_TYPE_FULL_SCREEN = 1,
    ARK_WINDOW_WINDOW_STATUS_TYPE_MAXIMIZE = 2,
    ARK_WINDOW_WINDOW_STATUS_TYPE_MINIMIZE = 3,
    ARK_WINDOW_WINDOW_STATUS_TYPE_FLOATING = 4,
    ARK_WINDOW_WINDOW_STATUS_TYPE_SPLIT_SCREEN = 5,
} Ark_window_WindowStatusType;
typedef struct Opt_window_WindowStatusType {
    Ark_Tag tag;
    Ark_window_WindowStatusType value;
} Opt_window_WindowStatusType;
typedef enum Ark_WindowModeFollowStrategy {
    ARK_WINDOW_MODE_FOLLOW_STRATEGY_FOLLOW_HOST_WINDOW_MODE = 0,
    ARK_WINDOW_MODE_FOLLOW_STRATEGY_FOLLOW_UI_EXTENSION_ABILITY_WINDOW_MODE = 1,
} Ark_WindowModeFollowStrategy;
typedef struct Opt_WindowModeFollowStrategy {
    Ark_Tag tag;
    Ark_WindowModeFollowStrategy value;
} Opt_WindowModeFollowStrategy;
typedef enum Ark_WordBreak {
    ARK_WORD_BREAK_NORMAL = 0,
    ARK_WORD_BREAK_BREAK_ALL = 1,
    ARK_WORD_BREAK_BREAK_WORD = 2,
    ARK_WORD_BREAK_HYPHENATION = 3,
} Ark_WordBreak;
typedef struct Opt_WordBreak {
    Ark_Tag tag;
    Ark_WordBreak value;
} Opt_WordBreak;
typedef enum Ark_XComponentType {
    ARK_XCOMPONENT_TYPE_SURFACE = 0,
    ARK_XCOMPONENT_TYPE_TEXTURE = 1,
} Ark_XComponentType;
typedef struct Opt_XComponentType {
    Ark_Tag tag;
    Ark_XComponentType value;
} Opt_XComponentType;
typedef struct Opt_Int32 {
    Ark_Tag tag;
    Ark_Int32 value;
} Opt_Int32;
typedef struct AccessibilityCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event);
} AccessibilityCallback;
typedef struct Opt_AccessibilityCallback {
    Ark_Tag tag;
    AccessibilityCallback value;
} Opt_AccessibilityCallback;
typedef struct AccessibilityFocusCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isFocus);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isFocus);
} AccessibilityFocusCallback;
typedef struct Opt_AccessibilityFocusCallback {
    Ark_Tag tag;
    AccessibilityFocusCallback value;
} Opt_AccessibilityFocusCallback;
typedef struct Opt_BaseContext {
    Ark_Tag tag;
    Ark_BaseContext value;
} Opt_BaseContext;
typedef struct Opt_BaseCustomComponent {
    Ark_Tag tag;
    Ark_BaseCustomComponent value;
} Opt_BaseCustomComponent;
typedef struct Opt_BaseCustomDialog {
    Ark_Tag tag;
    Ark_BaseCustomDialog value;
} Opt_BaseCustomDialog;
typedef struct Opt_BaseShape {
    Ark_Tag tag;
    Ark_BaseShape value;
} Opt_BaseShape;
typedef struct Opt_Boolean {
    Ark_Tag tag;
    Ark_Boolean value;
} Opt_Boolean;
typedef struct Opt_Buffer {
    Ark_Tag tag;
    Ark_Buffer value;
} Opt_Buffer;
typedef struct Opt_BuilderNodeOps {
    Ark_Tag tag;
    Ark_BuilderNodeOps value;
} Opt_BuilderNodeOps;
typedef struct Opt_CalendarPickerDialog {
    Ark_Tag tag;
    Ark_CalendarPickerDialog value;
} Opt_CalendarPickerDialog;
typedef struct Opt_CanvasGradient {
    Ark_Tag tag;
    Ark_CanvasGradient value;
} Opt_CanvasGradient;
typedef struct Opt_CanvasPath {
    Ark_Tag tag;
    Ark_CanvasPath value;
} Opt_CanvasPath;
typedef struct Opt_CanvasPattern {
    Ark_Tag tag;
    Ark_CanvasPattern value;
} Opt_CanvasPattern;
typedef struct Ark_CircleOptions {
    /* kind: Interface */
    void *handle;
} Ark_CircleOptions;
typedef struct Opt_CircleOptions {
    Ark_Tag tag;
    Ark_CircleOptions value;
} Opt_CircleOptions;
typedef struct Opt_CircleShape {
    Ark_Tag tag;
    Ark_CircleShape value;
} Opt_CircleShape;
typedef struct Opt_ClientAuthenticationHandler {
    Ark_Tag tag;
    Ark_ClientAuthenticationHandler value;
} Opt_ClientAuthenticationHandler;
typedef struct Opt_ColorContent {
    Ark_Tag tag;
    Ark_ColorContent value;
} Opt_ColorContent;
typedef struct Opt_ColorFilter {
    Ark_Tag tag;
    Ark_ColorFilter value;
} Opt_ColorFilter;
typedef struct Opt_ColorMetrics {
    Ark_Tag tag;
    Ark_ColorMetrics value;
} Opt_ColorMetrics;
typedef struct Opt_CommonShape {
    Ark_Tag tag;
    Ark_CommonShape value;
} Opt_CommonShape;
typedef struct Opt_ComponentContent {
    Ark_Tag tag;
    Ark_ComponentContent value;
} Opt_ComponentContent;
typedef struct Opt_ConsoleMessage {
    Ark_Tag tag;
    Ark_ConsoleMessage value;
} Opt_ConsoleMessage;
typedef struct Opt_Context {
    Ark_Tag tag;
    Ark_Context value;
} Opt_Context;
typedef struct Opt_ControllerHandler {
    Ark_Tag tag;
    Ark_ControllerHandler value;
} Opt_ControllerHandler;
typedef struct Ark_CornerRadius {
    /* kind: Interface */
    void *handle;
} Ark_CornerRadius;
typedef struct Opt_CornerRadius {
    Ark_Tag tag;
    Ark_CornerRadius value;
} Opt_CornerRadius;
typedef struct Opt_curves_ICurve {
    Ark_Tag tag;
    Ark_curves_ICurve value;
} Opt_curves_ICurve;
typedef struct Opt_CustomComponentV2 {
    Ark_Tag tag;
    Ark_CustomComponentV2 value;
} Opt_CustomComponentV2;
typedef struct Opt_CustomDialogController {
    Ark_Tag tag;
    Ark_CustomDialogController value;
} Opt_CustomDialogController;
typedef struct Opt_CustomObject {
    Ark_Tag tag;
    Ark_CustomObject value;
} Opt_CustomObject;
typedef struct Opt_DataResubmissionHandler {
    Ark_Tag tag;
    Ark_DataResubmissionHandler value;
} Opt_DataResubmissionHandler;
typedef struct Opt_Date {
    Ark_Tag tag;
    Ark_Date value;
} Opt_Date;
typedef struct Opt_DatePickerDialog {
    Ark_Tag tag;
    Ark_DatePickerDialog value;
} Opt_DatePickerDialog;
typedef struct Opt_DrawableDescriptor {
    Ark_Tag tag;
    Ark_DrawableDescriptor value;
} Opt_DrawableDescriptor;
typedef struct Opt_DrawContext {
    Ark_Tag tag;
    Ark_DrawContext value;
} Opt_DrawContext;
typedef struct Opt_drawing_Brush {
    Ark_Tag tag;
    Ark_drawing_Brush value;
} Opt_drawing_Brush;
typedef struct Opt_drawing_Canvas {
    Ark_Tag tag;
    Ark_drawing_Canvas value;
} Opt_drawing_Canvas;
typedef struct Opt_drawing_ColorFilter {
    Ark_Tag tag;
    Ark_drawing_ColorFilter value;
} Opt_drawing_ColorFilter;
typedef struct Opt_drawing_Font {
    Ark_Tag tag;
    Ark_drawing_Font value;
} Opt_drawing_Font;
typedef struct Opt_drawing_ImageFilter {
    Ark_Tag tag;
    Ark_drawing_ImageFilter value;
} Opt_drawing_ImageFilter;
typedef struct Opt_drawing_Lattice {
    Ark_Tag tag;
    Ark_drawing_Lattice value;
} Opt_drawing_Lattice;
typedef struct Opt_drawing_MaskFilter {
    Ark_Tag tag;
    Ark_drawing_MaskFilter value;
} Opt_drawing_MaskFilter;
typedef struct Opt_drawing_Matrix {
    Ark_Tag tag;
    Ark_drawing_Matrix value;
} Opt_drawing_Matrix;
typedef struct Opt_drawing_Path {
    Ark_Tag tag;
    Ark_drawing_Path value;
} Opt_drawing_Path;
typedef struct Opt_drawing_PathEffect {
    Ark_Tag tag;
    Ark_drawing_PathEffect value;
} Opt_drawing_PathEffect;
typedef struct Opt_drawing_Pen {
    Ark_Tag tag;
    Ark_drawing_Pen value;
} Opt_drawing_Pen;
typedef struct Opt_drawing_Region {
    Ark_Tag tag;
    Ark_drawing_Region value;
} Opt_drawing_Region;
typedef struct Opt_drawing_RoundRect {
    Ark_Tag tag;
    Ark_drawing_RoundRect value;
} Opt_drawing_RoundRect;
typedef struct Opt_drawing_SamplingOptions {
    Ark_Tag tag;
    Ark_drawing_SamplingOptions value;
} Opt_drawing_SamplingOptions;
typedef struct Opt_drawing_ShaderEffect {
    Ark_Tag tag;
    Ark_drawing_ShaderEffect value;
} Opt_drawing_ShaderEffect;
typedef struct Opt_drawing_ShadowLayer {
    Ark_Tag tag;
    Ark_drawing_ShadowLayer value;
} Opt_drawing_ShadowLayer;
typedef struct Opt_drawing_TextBlob {
    Ark_Tag tag;
    Ark_drawing_TextBlob value;
} Opt_drawing_TextBlob;
typedef struct Opt_drawing_Typeface {
    Ark_Tag tag;
    Ark_drawing_Typeface value;
} Opt_drawing_Typeface;
typedef struct Ark_EllipseOptions {
    /* kind: Interface */
    void *handle;
} Ark_EllipseOptions;
typedef struct Opt_EllipseOptions {
    Ark_Tag tag;
    Ark_EllipseOptions value;
} Opt_EllipseOptions;
typedef struct Opt_EllipseShape {
    Ark_Tag tag;
    Ark_EllipseShape value;
} Opt_EllipseShape;
typedef struct Opt_EventResult {
    Ark_Tag tag;
    Ark_EventResult value;
} Opt_EventResult;
typedef struct Opt_EventTargetInfo {
    Ark_Tag tag;
    Ark_EventTargetInfo value;
} Opt_EventTargetInfo;
typedef struct Opt_ExtendableComponent {
    Ark_Tag tag;
    Ark_ExtendableComponent value;
} Opt_ExtendableComponent;
typedef struct Opt_FileSelectorParam {
    Ark_Tag tag;
    Ark_FileSelectorParam value;
} Opt_FileSelectorParam;
typedef struct Opt_FileSelectorResult {
    Ark_Tag tag;
    Ark_FileSelectorResult value;
} Opt_FileSelectorResult;
typedef struct Opt_Float32 {
    Ark_Tag tag;
    Ark_Float32 value;
} Opt_Float32;
typedef struct Opt_Float64 {
    Ark_Tag tag;
    Ark_Float64 value;
} Opt_Float64;
typedef struct Ark_FormSize {
    /* kind: Interface */
    Ark_Float64 width;
    Ark_Float64 height;
} Ark_FormSize;
typedef struct Opt_FormSize {
    Ark_Tag tag;
    Ark_FormSize value;
} Opt_FormSize;
typedef struct Opt_FrameNode {
    Ark_Tag tag;
    Ark_FrameNode value;
} Opt_FrameNode;
typedef struct Opt_FrictionMotion {
    Ark_Tag tag;
    Ark_FrictionMotion value;
} Opt_FrictionMotion;
typedef struct Opt_FullScreenExitHandler {
    Ark_Tag tag;
    Ark_FullScreenExitHandler value;
} Opt_FullScreenExitHandler;
typedef struct Ark_FullscreenInfo {
    /* kind: Interface */
    Ark_Boolean fullscreen;
} Ark_FullscreenInfo;
typedef struct Opt_FullscreenInfo {
    Ark_Tag tag;
    Ark_FullscreenInfo value;
} Opt_FullscreenInfo;
typedef struct Opt_Gesture {
    Ark_Tag tag;
    Ark_Gesture value;
} Opt_Gesture;
typedef struct Opt_GestureGroupInterface {
    Ark_Tag tag;
    Ark_GestureGroupInterface value;
} Opt_GestureGroupInterface;
typedef struct Opt_GestureModifier {
    Ark_Tag tag;
    Ark_GestureModifier value;
} Opt_GestureModifier;
typedef struct Opt_GestureRecognizer {
    Ark_Tag tag;
    Ark_GestureRecognizer value;
} Opt_GestureRecognizer;
typedef struct Opt_GestureStyle {
    Ark_Tag tag;
    Ark_GestureStyle value;
} Opt_GestureStyle;
typedef struct Ark_GestureType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Gesture value0;
        Ark_CustomObject value1;
    };
} Ark_GestureType;
typedef struct Opt_GestureType {
    Ark_Tag tag;
    Ark_GestureType value;
} Opt_GestureType;
typedef struct Opt_HttpAuthHandler {
    Ark_Tag tag;
    Ark_HttpAuthHandler value;
} Opt_HttpAuthHandler;
typedef struct Opt_image_PixelMap {
    Ark_Tag tag;
    Ark_image_PixelMap value;
} Opt_image_PixelMap;
typedef struct Opt_ImageAnalyzerController {
    Ark_Tag tag;
    Ark_ImageAnalyzerController value;
} Opt_ImageAnalyzerController;
typedef struct Opt_IndicatorComponentController {
    Ark_Tag tag;
    Ark_IndicatorComponentController value;
} Opt_IndicatorComponentController;
typedef struct Opt_Int64 {
    Ark_Tag tag;
    Ark_Int64 value;
} Opt_Int64;
typedef struct Opt_JsGeolocation {
    Ark_Tag tag;
    Ark_JsGeolocation value;
} Opt_JsGeolocation;
typedef struct Opt_JsResult {
    Ark_Tag tag;
    Ark_JsResult value;
} Opt_JsResult;
typedef struct Opt_LayoutCallback {
    Ark_Tag tag;
    Ark_LayoutCallback value;
} Opt_LayoutCallback;
typedef struct Opt_LayoutManager {
    Ark_Tag tag;
    Ark_LayoutManager value;
} Opt_LayoutManager;
typedef struct Opt_LayoutPolicy {
    Ark_Tag tag;
    Ark_LayoutPolicy value;
} Opt_LayoutPolicy;
typedef struct Opt_LevelOrder {
    Ark_Tag tag;
    Ark_LevelOrder value;
} Opt_LevelOrder;
typedef struct Opt_LifeCycle {
    Ark_Tag tag;
    Ark_LifeCycle value;
} Opt_LifeCycle;
typedef struct Opt_LinearGradient {
    Ark_Tag tag;
    Ark_LinearGradient value;
} Opt_LinearGradient;
typedef struct Opt_LinearIndicatorController {
    Ark_Tag tag;
    Ark_LinearIndicatorController value;
} Opt_LinearIndicatorController;
typedef struct Ark_LineOptions {
    /* kind: Interface */
    void *handle;
} Ark_LineOptions;
typedef struct Opt_LineOptions {
    Ark_Tag tag;
    Ark_LineOptions value;
} Opt_LineOptions;
typedef struct Opt_ListScroller {
    Ark_Tag tag;
    Ark_ListScroller value;
} Opt_ListScroller;
typedef struct Ark_LoadingProgressConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_Boolean enableLoading;
} Ark_LoadingProgressConfiguration;
typedef struct Opt_LoadingProgressConfiguration {
    Ark_Tag tag;
    Ark_LoadingProgressConfiguration value;
} Opt_LoadingProgressConfiguration;
typedef struct Opt_LongPressGestureInterface {
    Ark_Tag tag;
    Ark_LongPressGestureInterface value;
} Opt_LongPressGestureInterface;
typedef struct Opt_LongPressRecognizer {
    Ark_Tag tag;
    Ark_LongPressRecognizer value;
} Opt_LongPressRecognizer;
typedef struct Opt_matrix4_Matrix4Transit {
    Ark_Tag tag;
    Ark_matrix4_Matrix4Transit value;
} Opt_matrix4_Matrix4Transit;
typedef struct Ark_NativeMediaPlayerConfig {
    /* kind: Interface */
    Ark_Boolean enable;
    Ark_Boolean shouldOverlay;
} Ark_NativeMediaPlayerConfig;
typedef struct Opt_NativeMediaPlayerConfig {
    Ark_Tag tag;
    Ark_NativeMediaPlayerConfig value;
} Opt_NativeMediaPlayerConfig;
typedef struct Opt_NativePointer {
    Ark_Tag tag;
    Ark_NativePointer value;
} Opt_NativePointer;
typedef struct Opt_NavPathStack {
    Ark_Tag tag;
    Ark_NavPathStack value;
} Opt_NavPathStack;
typedef struct Ark_NestedScrollOptions {
    /* kind: Interface */
    Ark_NestedScrollMode scrollForward;
    Ark_NestedScrollMode scrollBackward;
} Ark_NestedScrollOptions;
typedef struct Opt_NestedScrollOptions {
    Ark_Tag tag;
    Ark_NestedScrollOptions value;
} Opt_NestedScrollOptions;
typedef struct Opt_NodeContent {
    Ark_Tag tag;
    Ark_NodeContent value;
} Opt_NodeContent;
typedef struct Ark_NodeController {
    /* kind: Interface */
    void *handle;
} Ark_NodeController;
typedef struct Opt_NodeController {
    Ark_Tag tag;
    Ark_NodeController value;
} Opt_NodeController;
typedef struct Opt_Number {
    Ark_Tag tag;
    Ark_Number value;
} Opt_Number;
typedef struct Opt_Object {
    Ark_Tag tag;
    Ark_Object value;
} Opt_Object;
typedef struct Opt_OffscreenCanvas {
    Ark_Tag tag;
    Ark_OffscreenCanvas value;
} Opt_OffscreenCanvas;
typedef struct Ark_Offset_componentutils {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
} Ark_Offset_componentutils;
typedef struct Opt_Offset_componentutils {
    Ark_Tag tag;
    Ark_Offset_componentutils value;
} Opt_Offset_componentutils;
typedef struct Ark_OffsetResult {
    /* kind: Interface */
    Ark_Number xOffset;
    Ark_Number yOffset;
} Ark_OffsetResult;
typedef struct Opt_OffsetResult {
    Ark_Tag tag;
    Ark_OffsetResult value;
} Opt_OffsetResult;
typedef struct Ark_OnAudioStateChangedEvent {
    /* kind: Interface */
    Ark_Boolean playing;
} Ark_OnAudioStateChangedEvent;
typedef struct Opt_OnAudioStateChangedEvent {
    Ark_Tag tag;
    Ark_OnAudioStateChangedEvent value;
} Opt_OnAudioStateChangedEvent;
typedef struct Ark_OnConsoleEvent {
    /* kind: Interface */
    Ark_ConsoleMessage message;
} Ark_OnConsoleEvent;
typedef struct Opt_OnConsoleEvent {
    Ark_Tag tag;
    Ark_OnConsoleEvent value;
} Opt_OnConsoleEvent;
typedef struct Ark_OnDataResubmittedEvent {
    /* kind: Interface */
    Ark_DataResubmissionHandler handler;
} Ark_OnDataResubmittedEvent;
typedef struct Opt_OnDataResubmittedEvent {
    Ark_Tag tag;
    Ark_OnDataResubmittedEvent value;
} Opt_OnDataResubmittedEvent;
typedef struct Ark_OnFaviconReceivedEvent {
    /* kind: Interface */
    Ark_image_PixelMap favicon;
} Ark_OnFaviconReceivedEvent;
typedef struct Opt_OnFaviconReceivedEvent {
    Ark_Tag tag;
    Ark_OnFaviconReceivedEvent value;
} Opt_OnFaviconReceivedEvent;
typedef struct Ark_OnFirstContentfulPaintEvent {
    /* kind: Interface */
    Ark_Int64 navigationStartTick;
    Ark_Int64 firstContentfulPaintMs;
} Ark_OnFirstContentfulPaintEvent;
typedef struct Opt_OnFirstContentfulPaintEvent {
    Ark_Tag tag;
    Ark_OnFirstContentfulPaintEvent value;
} Opt_OnFirstContentfulPaintEvent;
typedef struct Ark_OnFoldStatusChangeInfo {
    /* kind: Interface */
    Ark_FoldStatus foldStatus;
} Ark_OnFoldStatusChangeInfo;
typedef struct Opt_OnFoldStatusChangeInfo {
    Ark_Tag tag;
    Ark_OnFoldStatusChangeInfo value;
} Opt_OnFoldStatusChangeInfo;
typedef struct Ark_OnOverScrollEvent {
    /* kind: Interface */
    Ark_Float64 xOffset;
    Ark_Float64 yOffset;
} Ark_OnOverScrollEvent;
typedef struct Opt_OnOverScrollEvent {
    Ark_Tag tag;
    Ark_OnOverScrollEvent value;
} Opt_OnOverScrollEvent;
typedef struct Ark_OnProgressChangeEvent {
    /* kind: Interface */
    Ark_Int32 newProgress;
} Ark_OnProgressChangeEvent;
typedef struct Opt_OnProgressChangeEvent {
    Ark_Tag tag;
    Ark_OnProgressChangeEvent value;
} Opt_OnProgressChangeEvent;
typedef struct Ark_OnScaleChangeEvent {
    /* kind: Interface */
    Ark_Float64 oldScale;
    Ark_Float64 newScale;
} Ark_OnScaleChangeEvent;
typedef struct Opt_OnScaleChangeEvent {
    Ark_Tag tag;
    Ark_OnScaleChangeEvent value;
} Opt_OnScaleChangeEvent;
typedef struct Ark_OnScrollEvent {
    /* kind: Interface */
    Ark_Float64 xOffset;
    Ark_Float64 yOffset;
} Ark_OnScrollEvent;
typedef struct Opt_OnScrollEvent {
    Ark_Tag tag;
    Ark_OnScrollEvent value;
} Opt_OnScrollEvent;
typedef struct Ark_OnScrollFrameBeginHandlerResult {
    /* kind: Interface */
    Ark_Number offsetRemain;
} Ark_OnScrollFrameBeginHandlerResult;
typedef struct Opt_OnScrollFrameBeginHandlerResult {
    Ark_Tag tag;
    Ark_OnScrollFrameBeginHandlerResult value;
} Opt_OnScrollFrameBeginHandlerResult;
typedef struct Ark_OnSearchResultReceiveEvent {
    /* kind: Interface */
    Ark_Number activeMatchOrdinal;
    Ark_Number numberOfMatches;
    Ark_Boolean isDoneCounting;
} Ark_OnSearchResultReceiveEvent;
typedef struct Opt_OnSearchResultReceiveEvent {
    Ark_Tag tag;
    Ark_OnSearchResultReceiveEvent value;
} Opt_OnSearchResultReceiveEvent;
typedef struct Ark_OnShowFileSelectorEvent {
    /* kind: Interface */
    Ark_FileSelectorResult result;
    Ark_FileSelectorParam fileSelector;
} Ark_OnShowFileSelectorEvent;
typedef struct Opt_OnShowFileSelectorEvent {
    Ark_Tag tag;
    Ark_OnShowFileSelectorEvent value;
} Opt_OnShowFileSelectorEvent;
typedef struct Opt_PageLifeCycle {
    Ark_Tag tag;
    Ark_PageLifeCycle value;
} Opt_PageLifeCycle;
typedef struct Opt_PanGestureInterface {
    Ark_Tag tag;
    Ark_PanGestureInterface value;
} Opt_PanGestureInterface;
typedef struct Opt_PanGestureOptions {
    Ark_Tag tag;
    Ark_PanGestureOptions value;
} Opt_PanGestureOptions;
typedef struct Opt_PanRecognizer {
    Ark_Tag tag;
    Ark_PanRecognizer value;
} Opt_PanRecognizer;
typedef struct Opt_Path2D {
    Ark_Tag tag;
    Ark_Path2D value;
} Opt_Path2D;
typedef struct Ark_PathOptions {
    /* kind: Interface */
    void *handle;
} Ark_PathOptions;
typedef struct Opt_PathOptions {
    Ark_Tag tag;
    Ark_PathOptions value;
} Opt_PathOptions;
typedef struct Opt_PathShape {
    Ark_Tag tag;
    Ark_PathShape value;
} Opt_PathShape;
typedef struct Opt_PatternLockController {
    Ark_Tag tag;
    Ark_PatternLockController value;
} Opt_PatternLockController;
typedef struct Opt_PermissionRequest {
    Ark_Tag tag;
    Ark_PermissionRequest value;
} Opt_PermissionRequest;
typedef struct Opt_PinchGestureInterface {
    Ark_Tag tag;
    Ark_PinchGestureInterface value;
} Opt_PinchGestureInterface;
typedef struct Opt_PinchRecognizer {
    Ark_Tag tag;
    Ark_PinchRecognizer value;
} Opt_PinchRecognizer;
typedef struct Opt_PixelMapMock {
    Ark_Tag tag;
    Ark_PixelMapMock value;
} Opt_PixelMapMock;
typedef struct Ark_PlaybackInfo {
    /* kind: Interface */
    Ark_Number time;
} Ark_PlaybackInfo;
typedef struct Opt_PlaybackInfo {
    Ark_Tag tag;
    Ark_PlaybackInfo value;
} Opt_PlaybackInfo;
typedef struct Ark_PolygonOptions {
    /* kind: Interface */
    void *handle;
} Ark_PolygonOptions;
typedef struct Opt_PolygonOptions {
    Ark_Tag tag;
    Ark_PolygonOptions value;
} Opt_PolygonOptions;
typedef struct Ark_PolylineOptions {
    /* kind: Interface */
    void *handle;
} Ark_PolylineOptions;
typedef struct Opt_PolylineOptions {
    Ark_Tag tag;
    Ark_PolylineOptions value;
} Opt_PolylineOptions;
typedef struct Ark_PopupStateChangeParam {
    /* kind: Interface */
    Ark_Boolean isVisible;
} Ark_PopupStateChangeParam;
typedef struct Opt_PopupStateChangeParam {
    Ark_Tag tag;
    Ark_PopupStateChangeParam value;
} Opt_PopupStateChangeParam;
typedef struct Ark_PositionWithAffinity {
    /* kind: Interface */
    Ark_Number position;
} Ark_PositionWithAffinity;
typedef struct Opt_PositionWithAffinity {
    Ark_Tag tag;
    Ark_PositionWithAffinity value;
} Opt_PositionWithAffinity;
typedef struct Ark_PreparedInfo {
    /* kind: Interface */
    Ark_Number duration;
} Ark_PreparedInfo;
typedef struct Opt_PreparedInfo {
    Ark_Tag tag;
    Ark_PreparedInfo value;
} Opt_PreparedInfo;
typedef struct Ark_ProgressConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_Number value;
    Ark_Number total;
} Ark_ProgressConfiguration;
typedef struct Opt_ProgressConfiguration {
    Ark_Tag tag;
    Ark_ProgressConfiguration value;
} Opt_ProgressConfiguration;
typedef struct Opt_ProgressMask {
    Ark_Tag tag;
    Ark_ProgressMask value;
} Opt_ProgressMask;
typedef struct Opt_PromptAction {
    Ark_Tag tag;
    Ark_PromptAction value;
} Opt_PromptAction;
typedef struct Ark_RectResult {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number width;
    Ark_Number height;
} Ark_RectResult;
typedef struct Opt_RectResult {
    Ark_Tag tag;
    Ark_RectResult value;
} Opt_RectResult;
typedef struct Opt_RectShape {
    Ark_Tag tag;
    Ark_RectShape value;
} Opt_RectShape;
typedef struct Opt_RichEditorBaseController {
    Ark_Tag tag;
    Ark_RichEditorBaseController value;
} Opt_RichEditorBaseController;
typedef struct Opt_RichEditorController {
    Ark_Tag tag;
    Ark_RichEditorController value;
} Opt_RichEditorController;
typedef struct Ark_RichEditorOptions {
    /* kind: Interface */
    Ark_RichEditorController controller;
} Ark_RichEditorOptions;
typedef struct Opt_RichEditorOptions {
    Ark_Tag tag;
    Ark_RichEditorOptions value;
} Opt_RichEditorOptions;
typedef struct Opt_RichEditorStyledStringController {
    Ark_Tag tag;
    Ark_RichEditorStyledStringController value;
} Opt_RichEditorStyledStringController;
typedef struct Ark_RichEditorStyledStringOptions {
    /* kind: Interface */
    Ark_RichEditorStyledStringController controller;
} Ark_RichEditorStyledStringOptions;
typedef struct Opt_RichEditorStyledStringOptions {
    Ark_Tag tag;
    Ark_RichEditorStyledStringOptions value;
} Opt_RichEditorStyledStringOptions;
typedef struct Ark_RootSceneSession {
    /* kind: Interface */
    void *handle;
} Ark_RootSceneSession;
typedef struct Opt_RootSceneSession {
    Ark_Tag tag;
    Ark_RootSceneSession value;
} Opt_RootSceneSession;
typedef struct Ark_RotateResult {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number z;
    Ark_Number centerX;
    Ark_Number centerY;
    Ark_Number angle;
} Ark_RotateResult;
typedef struct Opt_RotateResult {
    Ark_Tag tag;
    Ark_RotateResult value;
} Opt_RotateResult;
typedef struct Opt_RotationGesture {
    Ark_Tag tag;
    Ark_RotationGesture value;
} Opt_RotationGesture;
typedef struct Opt_RotationRecognizer {
    Ark_Tag tag;
    Ark_RotationRecognizer value;
} Opt_RotationRecognizer;
typedef struct Ark_RoundedRectOptions {
    /* kind: Interface */
    void *handle;
} Ark_RoundedRectOptions;
typedef struct Opt_RoundedRectOptions {
    Ark_Tag tag;
    Ark_RoundedRectOptions value;
} Opt_RoundedRectOptions;
typedef struct Ark_RowOptionsV2 {
    /* kind: Interface */
    Ark_Int32 _stub;
} Ark_RowOptionsV2;
typedef struct Opt_RowOptionsV2 {
    Ark_Tag tag;
    Ark_RowOptionsV2 value;
} Opt_RowOptionsV2;
typedef struct Ark_RRect {
    /* kind: Interface */
    Ark_Number left;
    Ark_Number top;
    Ark_Number width;
    Ark_Number height;
    Ark_Number radius;
} Ark_RRect;
typedef struct Opt_RRect {
    Ark_Tag tag;
    Ark_RRect value;
} Opt_RRect;
typedef struct Ark_ScaleResult {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number z;
    Ark_Number centerX;
    Ark_Number centerY;
} Ark_ScaleResult;
typedef struct Opt_ScaleResult {
    Ark_Tag tag;
    Ark_ScaleResult value;
} Opt_ScaleResult;
typedef struct Opt_Scene {
    Ark_Tag tag;
    Ark_Scene value;
} Opt_Scene;
typedef struct Opt_ScreenCaptureHandler {
    Ark_Tag tag;
    Ark_ScreenCaptureHandler value;
} Opt_ScreenCaptureHandler;
typedef struct Opt_ScrollableTargetInfo {
    Ark_Tag tag;
    Ark_ScrollableTargetInfo value;
} Opt_ScrollableTargetInfo;
typedef struct Opt_Scroller {
    Ark_Tag tag;
    Ark_Scroller value;
} Opt_Scroller;
typedef struct Opt_ScrollMotion {
    Ark_Tag tag;
    Ark_ScrollMotion value;
} Opt_ScrollMotion;
typedef struct Opt_ScrollResult {
    Ark_Tag tag;
    Ark_ScrollResult value;
} Opt_ScrollResult;
typedef struct Opt_SearchController {
    Ark_Tag tag;
    Ark_SearchController value;
} Opt_SearchController;
typedef struct Opt_ShapeClip {
    Ark_Tag tag;
    Ark_ShapeClip value;
} Opt_ShapeClip;
typedef struct Opt_ShapeMask {
    Ark_Tag tag;
    Ark_ShapeMask value;
} Opt_ShapeMask;
typedef struct Ark_Size {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
} Ark_Size;
typedef struct Opt_Size {
    Ark_Tag tag;
    Ark_Size value;
} Opt_Size;
typedef struct Ark_SizeResult {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
} Ark_SizeResult;
typedef struct Opt_SizeResult {
    Ark_Tag tag;
    Ark_SizeResult value;
} Opt_SizeResult;
typedef struct Opt_SpringMotion {
    Ark_Tag tag;
    Ark_SpringMotion value;
} Opt_SpringMotion;
typedef struct Opt_SpringProp {
    Ark_Tag tag;
    Ark_SpringProp value;
} Opt_SpringProp;
typedef struct Opt_SslErrorHandler {
    Ark_Tag tag;
    Ark_SslErrorHandler value;
} Opt_SslErrorHandler;
typedef struct Opt_String {
    Ark_Tag tag;
    Ark_String value;
} Opt_String;
typedef struct Opt_StyledString {
    Ark_Tag tag;
    Ark_StyledString value;
} Opt_StyledString;
typedef struct Opt_StyledStringController {
    Ark_Tag tag;
    Ark_StyledStringController value;
} Opt_StyledStringController;
typedef struct Opt_SubmitEvent {
    Ark_Tag tag;
    Ark_SubmitEvent value;
} Opt_SubmitEvent;
typedef struct Opt_SwipeGesture {
    Ark_Tag tag;
    Ark_SwipeGesture value;
} Opt_SwipeGesture;
typedef struct Ark_SwiperAnimationEvent {
    /* kind: Interface */
    Ark_Number currentOffset;
    Ark_Number targetOffset;
    Ark_Number velocity;
} Ark_SwiperAnimationEvent;
typedef struct Opt_SwiperAnimationEvent {
    Ark_Tag tag;
    Ark_SwiperAnimationEvent value;
} Opt_SwiperAnimationEvent;
typedef struct Opt_SwiperContentTransitionProxy {
    Ark_Tag tag;
    Ark_SwiperContentTransitionProxy value;
} Opt_SwiperContentTransitionProxy;
typedef struct Ark_SwiperContentWillScrollResult {
    /* kind: Interface */
    Ark_Number currentIndex;
    Ark_Number comingIndex;
    Ark_Number offset;
} Ark_SwiperContentWillScrollResult;
typedef struct Opt_SwiperContentWillScrollResult {
    Ark_Tag tag;
    Ark_SwiperContentWillScrollResult value;
} Opt_SwiperContentWillScrollResult;
typedef struct Opt_SwiperController {
    Ark_Tag tag;
    Ark_SwiperController value;
} Opt_SwiperController;
typedef struct Opt_SwipeRecognizer {
    Ark_Tag tag;
    Ark_SwipeRecognizer value;
} Opt_SwipeRecognizer;
typedef struct Opt_SymbolEffect {
    Ark_Tag tag;
    Ark_SymbolEffect value;
} Opt_SymbolEffect;
typedef struct Ark_SymbolGlyphModifier {
    /* kind: Interface */
    void *handle;
} Ark_SymbolGlyphModifier;
typedef struct Opt_SymbolGlyphModifier {
    Ark_Tag tag;
    Ark_SymbolGlyphModifier value;
} Opt_SymbolGlyphModifier;
typedef struct Opt_TabContentTransitionProxy {
    Ark_Tag tag;
    Ark_TabContentTransitionProxy value;
} Opt_TabContentTransitionProxy;
typedef struct Ark_TabsAnimationEvent {
    /* kind: Interface */
    Ark_Number currentOffset;
    Ark_Number targetOffset;
    Ark_Number velocity;
} Ark_TabsAnimationEvent;
typedef struct Opt_TabsAnimationEvent {
    Ark_Tag tag;
    Ark_TabsAnimationEvent value;
} Opt_TabsAnimationEvent;
typedef struct Opt_TabsController {
    Ark_Tag tag;
    Ark_TabsController value;
} Opt_TabsController;
typedef struct Opt_TapGestureInterface {
    Ark_Tag tag;
    Ark_TapGestureInterface value;
} Opt_TapGestureInterface;
typedef struct Opt_TapRecognizer {
    Ark_Tag tag;
    Ark_TapRecognizer value;
} Opt_TapRecognizer;
typedef struct Opt_text_FontCollection {
    Ark_Tag tag;
    Ark_text_FontCollection value;
} Opt_text_FontCollection;
typedef struct Ark_text_FontFeature {
    /* kind: Interface */
    Ark_String name;
    Ark_Number value;
} Ark_text_FontFeature;
typedef struct Opt_text_FontFeature {
    Ark_Tag tag;
    Ark_text_FontFeature value;
} Opt_text_FontFeature;
typedef struct Ark_text_FontVariation {
    /* kind: Interface */
    Ark_String axis;
    Ark_Number value;
} Ark_text_FontVariation;
typedef struct Opt_text_FontVariation {
    Ark_Tag tag;
    Ark_text_FontVariation value;
} Opt_text_FontVariation;
typedef struct Opt_text_LineTypeset {
    Ark_Tag tag;
    Ark_text_LineTypeset value;
} Opt_text_LineTypeset;
typedef struct Opt_text_Paragraph {
    Ark_Tag tag;
    Ark_text_Paragraph value;
} Opt_text_Paragraph;
typedef struct Opt_text_ParagraphBuilder {
    Ark_Tag tag;
    Ark_text_ParagraphBuilder value;
} Opt_text_ParagraphBuilder;
typedef struct Ark_text_PositionWithAffinity {
    /* kind: Interface */
    Ark_Number position;
    Ark_text_Affinity affinity;
} Ark_text_PositionWithAffinity;
typedef struct Opt_text_PositionWithAffinity {
    Ark_Tag tag;
    Ark_text_PositionWithAffinity value;
} Opt_text_PositionWithAffinity;
typedef struct Ark_text_Range {
    /* kind: Interface */
    Ark_Number start;
    Ark_Number end;
} Ark_text_Range;
typedef struct Opt_text_Range {
    Ark_Tag tag;
    Ark_text_Range value;
} Opt_text_Range;
typedef struct Opt_text_Run {
    Ark_Tag tag;
    Ark_text_Run value;
} Opt_text_Run;
typedef struct Opt_text_TextLine {
    Ark_Tag tag;
    Ark_text_TextLine value;
} Opt_text_TextLine;
typedef struct Ark_text_TextTab {
    /* kind: Interface */
    Ark_text_TextAlign alignment;
    Ark_Number location;
} Ark_text_TextTab;
typedef struct Opt_text_TextTab {
    Ark_Tag tag;
    Ark_text_TextTab value;
} Opt_text_TextTab;
typedef struct Ark_text_TypographicBounds {
    /* kind: Interface */
    Ark_Number ascent;
    Ark_Number descent;
    Ark_Number leading;
    Ark_Number width;
} Ark_text_TypographicBounds;
typedef struct Opt_text_TypographicBounds {
    Ark_Tag tag;
    Ark_text_TypographicBounds value;
} Opt_text_TypographicBounds;
typedef struct Opt_TextAreaController {
    Ark_Tag tag;
    Ark_TextAreaController value;
} Opt_TextAreaController;
typedef struct Opt_TextBaseController {
    Ark_Tag tag;
    Ark_TextBaseController value;
} Opt_TextBaseController;
typedef struct Ark_TextClockConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_Number timeZoneOffset;
    Ark_Boolean started;
    Ark_Number timeValue;
} Ark_TextClockConfiguration;
typedef struct Opt_TextClockConfiguration {
    Ark_Tag tag;
    Ark_TextClockConfiguration value;
} Opt_TextClockConfiguration;
typedef struct Opt_TextClockController {
    Ark_Tag tag;
    Ark_TextClockController value;
} Opt_TextClockController;
typedef struct Opt_TextContentControllerBase {
    Ark_Tag tag;
    Ark_TextContentControllerBase value;
} Opt_TextContentControllerBase;
typedef struct Opt_TextController {
    Ark_Tag tag;
    Ark_TextController value;
} Opt_TextController;
typedef struct Opt_TextEditControllerEx {
    Ark_Tag tag;
    Ark_TextEditControllerEx value;
} Opt_TextEditControllerEx;
typedef struct Opt_TextInputController {
    Ark_Tag tag;
    Ark_TextInputController value;
} Opt_TextInputController;
typedef struct Opt_TextMenuController {
    Ark_Tag tag;
    Ark_TextMenuController value;
} Opt_TextMenuController;
typedef struct Opt_TextMenuItemId {
    Ark_Tag tag;
    Ark_TextMenuItemId value;
} Opt_TextMenuItemId;
typedef struct Ark_TextMetrics {
    /* kind: Interface */
    Ark_Number actualBoundingBoxAscent;
    Ark_Number actualBoundingBoxDescent;
    Ark_Number actualBoundingBoxLeft;
    Ark_Number actualBoundingBoxRight;
    Ark_Number alphabeticBaseline;
    Ark_Number emHeightAscent;
    Ark_Number emHeightDescent;
    Ark_Number fontBoundingBoxAscent;
    Ark_Number fontBoundingBoxDescent;
    Ark_Number hangingBaseline;
    Ark_Number ideographicBaseline;
    Ark_Number width;
    Ark_Number height;
} Ark_TextMetrics;
typedef struct Opt_TextMetrics {
    Ark_Tag tag;
    Ark_TextMetrics value;
} Opt_TextMetrics;
typedef struct Ark_TextModifier {
    /* kind: Interface */
    void *handle;
} Ark_TextModifier;
typedef struct Opt_TextModifier {
    Ark_Tag tag;
    Ark_TextModifier value;
} Opt_TextModifier;
typedef struct Ark_TextOptions {
    /* kind: Interface */
    Ark_TextController controller;
} Ark_TextOptions;
typedef struct Opt_TextOptions {
    Ark_Tag tag;
    Ark_TextOptions value;
} Opt_TextOptions;
typedef struct Ark_TextOverflowOptions {
    /* kind: Interface */
    Ark_TextOverflow overflow;
} Ark_TextOverflowOptions;
typedef struct Opt_TextOverflowOptions {
    Ark_Tag tag;
    Ark_TextOverflowOptions value;
} Opt_TextOverflowOptions;
typedef struct Opt_TextPickerDialog {
    Ark_Tag tag;
    Ark_TextPickerDialog value;
} Opt_TextPickerDialog;
typedef struct Ark_TextTimerConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_Number count;
    Ark_Boolean isCountDown;
    Ark_Boolean started;
    Ark_Number elapsedTime;
} Ark_TextTimerConfiguration;
typedef struct Opt_TextTimerConfiguration {
    Ark_Tag tag;
    Ark_TextTimerConfiguration value;
} Opt_TextTimerConfiguration;
typedef struct Opt_TextTimerController {
    Ark_Tag tag;
    Ark_TextTimerController value;
} Opt_TextTimerController;
typedef struct Opt_ThemeControl {
    Ark_Tag tag;
    Ark_ThemeControl value;
} Opt_ThemeControl;
typedef struct Opt_TimePickerDialog {
    Ark_Tag tag;
    Ark_TimePickerDialog value;
} Opt_TimePickerDialog;
typedef struct Ark_TimePickerResult {
    /* kind: Interface */
    Ark_Number hour;
    Ark_Number minute;
    Ark_Number second;
} Ark_TimePickerResult;
typedef struct Opt_TimePickerResult {
    Ark_Tag tag;
    Ark_TimePickerResult value;
} Opt_TimePickerResult;
typedef struct Ark_TouchTestInfo {
    /* kind: Interface */
    Ark_Number windowX;
    Ark_Number windowY;
    Ark_Number parentX;
    Ark_Number parentY;
    Ark_Number x;
    Ark_Number y;
    Ark_RectResult rect;
    Ark_String id;
} Ark_TouchTestInfo;
typedef struct Opt_TouchTestInfo {
    Ark_Tag tag;
    Ark_TouchTestInfo value;
} Opt_TouchTestInfo;
typedef struct Ark_TranslateResult {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number z;
} Ark_TranslateResult;
typedef struct Opt_TranslateResult {
    Ark_Tag tag;
    Ark_TranslateResult value;
} Opt_TranslateResult;
typedef struct Ark_Tuple_Number_Number {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
} Ark_Tuple_Number_Number;
typedef struct Opt_Tuple_Number_Number {
    Ark_Tag tag;
    Ark_Tuple_Number_Number value;
} Opt_Tuple_Number_Number;
typedef struct Ark_Tuple_Number_Number_Number_Number {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
    Ark_Number value2;
    Ark_Number value3;
} Ark_Tuple_Number_Number_Number_Number;
typedef struct Opt_Tuple_Number_Number_Number_Number {
    Ark_Tag tag;
    Ark_Tuple_Number_Number_Number_Number value;
} Opt_Tuple_Number_Number_Number_Number;
typedef struct Opt_UICommonEvent {
    Ark_Tag tag;
    Ark_UICommonEvent value;
} Opt_UICommonEvent;
typedef struct Opt_UIContext {
    Ark_Tag tag;
    Ark_UIContext value;
} Opt_UIContext;
typedef struct Ark_uiEffect_Filter {
    /* kind: Interface */
    void *handle;
} Ark_uiEffect_Filter;
typedef struct Opt_uiEffect_Filter {
    Ark_Tag tag;
    Ark_uiEffect_Filter value;
} Opt_uiEffect_Filter;
typedef struct Ark_uiEffect_Tuple_Number_Number_Number {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
    Ark_Number value2;
} Ark_uiEffect_Tuple_Number_Number_Number;
typedef struct Opt_uiEffect_Tuple_Number_Number_Number {
    Ark_Tag tag;
    Ark_uiEffect_Tuple_Number_Number_Number value;
} Opt_uiEffect_Tuple_Number_Number_Number;
typedef struct Opt_uiEffect_VisualEffect {
    Ark_Tag tag;
    Ark_uiEffect_VisualEffect value;
} Opt_uiEffect_VisualEffect;
typedef struct Opt_UIExtensionProxy {
    Ark_Tag tag;
    Ark_UIExtensionProxy value;
} Opt_UIExtensionProxy;
typedef struct Ark_UIGestureEvent {
    /* kind: Interface */
    void *handle;
} Ark_UIGestureEvent;
typedef struct Opt_UIGestureEvent {
    Ark_Tag tag;
    Ark_UIGestureEvent value;
} Opt_UIGestureEvent;
typedef struct Opt_unifiedDataChannel_UnifiedData {
    Ark_Tag tag;
    Ark_unifiedDataChannel_UnifiedData value;
} Opt_unifiedDataChannel_UnifiedData;
typedef struct Ark_Union_Boolean_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Boolean value0;
        Ark_Number value1;
    };
} Ark_Union_Boolean_Number;
typedef struct Opt_Union_Boolean_Number {
    Ark_Tag tag;
    Ark_Union_Boolean_Number value;
} Opt_Union_Boolean_Number;
typedef struct Ark_Union_CircleShape_EllipseShape_PathShape_RectShape {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_CircleShape value0;
        Ark_EllipseShape value1;
        Ark_PathShape value2;
        Ark_RectShape value3;
    };
} Ark_Union_CircleShape_EllipseShape_PathShape_RectShape;
typedef struct Opt_Union_CircleShape_EllipseShape_PathShape_RectShape {
    Ark_Tag tag;
    Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value;
} Opt_Union_CircleShape_EllipseShape_PathShape_RectShape;
typedef struct Ark_Union_Color_Number_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_Number value1;
        Ark_String value2;
    };
} Ark_Union_Color_Number_String;
typedef struct Opt_Union_Color_Number_String {
    Ark_Tag tag;
    Ark_Union_Color_Number_String value;
} Opt_Union_Color_Number_String;
typedef struct Ark_Union_ColorFilter_DrawingColorFilter {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ColorFilter value0;
        Ark_drawing_ColorFilter value1;
    };
} Ark_Union_ColorFilter_DrawingColorFilter;
typedef struct Opt_Union_ColorFilter_DrawingColorFilter {
    Ark_Tag tag;
    Ark_Union_ColorFilter_DrawingColorFilter value;
} Opt_Union_ColorFilter_DrawingColorFilter;
typedef struct Ark_Union_ContentClipMode_RectShape {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ContentClipMode value0;
        Ark_RectShape value1;
    };
} Ark_Union_ContentClipMode_RectShape;
typedef struct Opt_Union_ContentClipMode_RectShape {
    Ark_Tag tag;
    Ark_Union_ContentClipMode_RectShape value;
} Opt_Union_ContentClipMode_RectShape;
typedef struct Ark_Union_Curve_ICurve {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_curves_Curve value0;
        Ark_curves_ICurve value1;
    };
} Ark_Union_Curve_ICurve;
typedef struct Opt_Union_Curve_ICurve {
    Ark_Tag tag;
    Ark_Union_Curve_ICurve value;
} Opt_Union_Curve_ICurve;
typedef struct Ark_Union_Curve_String_ICurve {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_curves_Curve value0;
        Ark_String value1;
        Ark_curves_ICurve value2;
    };
} Ark_Union_Curve_String_ICurve;
typedef struct Opt_Union_Curve_String_ICurve {
    Ark_Tag tag;
    Ark_Union_Curve_String_ICurve value;
} Opt_Union_Curve_String_ICurve;
typedef struct Ark_Union_FontWeight_Number_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_FontWeight value0;
        Ark_Number value1;
        Ark_String value2;
    };
} Ark_Union_FontWeight_Number_String;
typedef struct Opt_Union_FontWeight_Number_String {
    Ark_Tag tag;
    Ark_Union_FontWeight_Number_String value;
} Opt_Union_FontWeight_Number_String;
typedef struct Ark_Union_I64_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Int64 value0;
        Ark_String value1;
    };
} Ark_Union_I64_String;
typedef struct Opt_Union_I64_String {
    Ark_Tag tag;
    Ark_Union_I64_String value;
} Opt_Union_I64_String;
typedef struct Ark_Union_Number_FontStyle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_FontStyle value1;
    };
} Ark_Union_Number_FontStyle;
typedef struct Opt_Union_Number_FontStyle {
    Ark_Tag tag;
    Ark_Union_Number_FontStyle value;
} Opt_Union_Number_FontStyle;
typedef struct Ark_Union_Number_FontWeight_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_FontWeight value1;
        Ark_String value2;
    };
} Ark_Union_Number_FontWeight_String;
typedef struct Opt_Union_Number_FontWeight_String {
    Ark_Tag tag;
    Ark_Union_Number_FontWeight_String value;
} Opt_Union_Number_FontWeight_String;
typedef struct Ark_Union_Number_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
    };
} Ark_Union_Number_String;
typedef struct Opt_Union_Number_String {
    Ark_Tag tag;
    Ark_Union_Number_String value;
} Opt_Union_Number_String;
typedef struct Ark_Union_Number_String_FontWeight {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
        Ark_FontWeight value2;
    };
} Ark_Union_Number_String_FontWeight;
typedef struct Opt_Union_Number_String_FontWeight {
    Ark_Tag tag;
    Ark_Union_Number_String_FontWeight value;
} Opt_Union_Number_String_FontWeight;
typedef struct Ark_Union_Number_String_PlaybackSpeed {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
        Ark_PlaybackSpeed value2;
    };
} Ark_Union_Number_String_PlaybackSpeed;
typedef struct Opt_Union_Number_String_PlaybackSpeed {
    Ark_Tag tag;
    Ark_Union_Number_String_PlaybackSpeed value;
} Opt_Union_Number_String_PlaybackSpeed;
typedef struct Ark_Union_Number_TextCase {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_TextCase value1;
    };
} Ark_Union_Number_TextCase;
typedef struct Opt_Union_Number_TextCase {
    Ark_Tag tag;
    Ark_Union_Number_TextCase value;
} Opt_Union_Number_TextCase;
typedef struct Ark_Union_Number_TextOverflow {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_TextOverflow value1;
    };
} Ark_Union_Number_TextOverflow;
typedef struct Opt_Union_Number_TextOverflow {
    Ark_Tag tag;
    Ark_Union_Number_TextOverflow value;
} Opt_Union_Number_TextOverflow;
typedef struct Ark_Union_PixelMap_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_image_PixelMap value0;
        Ark_String value1;
    };
} Ark_Union_PixelMap_String;
typedef struct Opt_Union_PixelMap_String {
    Ark_Tag tag;
    Ark_Union_PixelMap_String value;
} Opt_Union_PixelMap_String;
typedef struct Ark_Union_ResponseType_RichEditorResponseType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResponseType value0;
        Ark_RichEditorResponseType value1;
    };
} Ark_Union_ResponseType_RichEditorResponseType;
typedef struct Opt_Union_ResponseType_RichEditorResponseType {
    Ark_Tag tag;
    Ark_Union_ResponseType_RichEditorResponseType value;
} Opt_Union_ResponseType_RichEditorResponseType;
typedef struct Ark_Union_SpringMotion_FrictionMotion_ScrollMotion {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_SpringMotion value0;
        Ark_FrictionMotion value1;
        Ark_ScrollMotion value2;
    };
} Ark_Union_SpringMotion_FrictionMotion_ScrollMotion;
typedef struct Opt_Union_SpringMotion_FrictionMotion_ScrollMotion {
    Ark_Tag tag;
    Ark_Union_SpringMotion_FrictionMotion_ScrollMotion value;
} Opt_Union_SpringMotion_FrictionMotion_ScrollMotion;
typedef struct Ark_Union_String_FunctionKey {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_FunctionKey value1;
    };
} Ark_Union_String_FunctionKey;
typedef struct Opt_Union_String_FunctionKey {
    Ark_Tag tag;
    Ark_Union_String_FunctionKey value;
} Opt_Union_String_FunctionKey;
typedef struct Ark_Union_String_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
    };
} Ark_Union_String_Number;
typedef struct Opt_Union_String_Number {
    Ark_Tag tag;
    Ark_Union_String_Number value;
} Opt_Union_String_Number;
typedef struct Ark_Union_String_Number_CanvasGradient_CanvasPattern {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_CanvasGradient value2;
        Ark_CanvasPattern value3;
    };
} Ark_Union_String_Number_CanvasGradient_CanvasPattern;
typedef struct Opt_Union_String_Number_CanvasGradient_CanvasPattern {
    Ark_Tag tag;
    Ark_Union_String_Number_CanvasGradient_CanvasPattern value;
} Opt_Union_String_Number_CanvasGradient_CanvasPattern;
typedef struct Ark_Union_SwiperAnimationMode_Boolean {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_SwiperAnimationMode value0;
        Ark_Boolean value1;
    };
} Ark_Union_SwiperAnimationMode_Boolean;
typedef struct Opt_Union_SwiperAnimationMode_Boolean {
    Ark_Tag tag;
    Ark_Union_SwiperAnimationMode_Boolean value;
} Opt_Union_SwiperAnimationMode_Boolean;
typedef struct Ark_Union_TextInputStyle_TextContentStyle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_TextInputStyle value0;
        Ark_TextContentStyle value1;
    };
} Ark_Union_TextInputStyle_TextContentStyle;
typedef struct Opt_Union_TextInputStyle_TextContentStyle {
    Ark_Tag tag;
    Ark_Union_TextInputStyle_TextContentStyle value;
} Opt_Union_TextInputStyle_TextContentStyle;
typedef struct Opt_UrlStyle {
    Ark_Tag tag;
    Ark_UrlStyle value;
} Opt_UrlStyle;
typedef struct Opt_UserDataSpan {
    Ark_Tag tag;
    Ark_UserDataSpan value;
} Opt_UserDataSpan;
typedef struct Ark_Vector2 {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
} Ark_Vector2;
typedef struct Opt_Vector2 {
    Ark_Tag tag;
    Ark_Vector2 value;
} Opt_Vector2;
typedef struct Ark_Vector3 {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number z;
} Ark_Vector3;
typedef struct Opt_Vector3 {
    Ark_Tag tag;
    Ark_Vector3 value;
} Opt_Vector3;
typedef struct Opt_VideoController {
    Ark_Tag tag;
    Ark_VideoController value;
} Opt_VideoController;
typedef struct Ark_VP {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
    };
} Ark_VP;
typedef struct Opt_VP {
    Ark_Tag tag;
    Ark_VP value;
} Opt_VP;
typedef struct Opt_WaterFlowSections {
    Ark_Tag tag;
    Ark_WaterFlowSections value;
} Opt_WaterFlowSections;
typedef struct Opt_WebContextMenuParam {
    Ark_Tag tag;
    Ark_WebContextMenuParam value;
} Opt_WebContextMenuParam;
typedef struct Opt_WebContextMenuResult {
    Ark_Tag tag;
    Ark_WebContextMenuResult value;
} Opt_WebContextMenuResult;
typedef struct Opt_WebCookie {
    Ark_Tag tag;
    Ark_WebCookie value;
} Opt_WebCookie;
typedef struct Opt_WebKeyboardController {
    Ark_Tag tag;
    Ark_WebKeyboardController value;
} Opt_WebKeyboardController;
typedef struct Opt_WebResourceError {
    Ark_Tag tag;
    Ark_WebResourceError value;
} Opt_WebResourceError;
typedef struct Opt_WebResourceRequest {
    Ark_Tag tag;
    Ark_WebResourceRequest value;
} Opt_WebResourceRequest;
typedef struct Opt_WebResourceResponse {
    Ark_Tag tag;
    Ark_WebResourceResponse value;
} Opt_WebResourceResponse;
typedef struct Ark_webview_WebHeader {
    /* kind: Interface */
    Ark_String headerKey;
    Ark_String headerValue;
} Ark_webview_WebHeader;
typedef struct Opt_webview_WebHeader {
    Ark_Tag tag;
    Ark_webview_WebHeader value;
} Opt_webview_WebHeader;
typedef struct Opt_webview_WebviewController {
    Ark_Tag tag;
    Ark_webview_WebviewController value;
} Opt_webview_WebviewController;
typedef struct Ark_WindowAnimationTarget {
    /* kind: Interface */
    Ark_String bundleName;
    Ark_String abilityName;
    Ark_RRect windowBounds;
    Ark_Number missionId;
} Ark_WindowAnimationTarget;
typedef struct Opt_WindowAnimationTarget {
    Ark_Tag tag;
    Ark_WindowAnimationTarget value;
} Opt_WindowAnimationTarget;
typedef struct Ark_WorkerEventListener {
    /* kind: Interface */
    void *handle;
} Ark_WorkerEventListener;
typedef struct Opt_WorkerEventListener {
    Ark_Tag tag;
    Ark_WorkerEventListener value;
} Opt_WorkerEventListener;
typedef struct Array_Array_String {
    /* kind: ContainerType */
    Array_String* array;
    Ark_Int32 length;
} Array_Array_String;
typedef struct Opt_Array_Array_String {
    Ark_Tag tag;
    Array_Array_String value;
} Opt_Array_Array_String;
typedef struct Array_BarrierStyle {
    /* kind: ContainerType */
    Ark_BarrierStyle* array;
    Ark_Int32 length;
} Array_BarrierStyle;
typedef struct Opt_Array_BarrierStyle {
    Ark_Tag tag;
    Array_BarrierStyle value;
} Opt_Array_BarrierStyle;
typedef struct Array_Buffer {
    /* kind: ContainerType */
    Ark_Buffer* array;
    Ark_Int32 length;
} Array_Buffer;
typedef struct Opt_Array_Buffer {
    Ark_Tag tag;
    Array_Buffer value;
} Opt_Array_Buffer;
typedef struct Array_ColorStop {
    /* kind: ContainerType */
    Ark_ColorStop* array;
    Ark_Int32 length;
} Array_ColorStop;
typedef struct Opt_Array_ColorStop {
    Ark_Tag tag;
    Array_ColorStop value;
} Opt_Array_ColorStop;
typedef struct Array_common2D_Point {
    /* kind: ContainerType */
    Ark_common2D_Point* array;
    Ark_Int32 length;
} Array_common2D_Point;
typedef struct Opt_Array_common2D_Point {
    Ark_Tag tag;
    Array_common2D_Point value;
} Opt_Array_common2D_Point;
typedef struct Array_common2D_Rect {
    /* kind: ContainerType */
    Ark_common2D_Rect* array;
    Ark_Int32 length;
} Array_common2D_Rect;
typedef struct Opt_Array_common2D_Rect {
    Ark_Tag tag;
    Array_common2D_Rect value;
} Opt_Array_common2D_Rect;
typedef struct Array_CustomObject {
    /* kind: ContainerType */
    Ark_CustomObject* array;
    Ark_Int32 length;
} Array_CustomObject;
typedef struct Opt_Array_CustomObject {
    Ark_Tag tag;
    Array_CustomObject value;
} Opt_Array_CustomObject;
typedef struct Array_DateRange {
    /* kind: ContainerType */
    Ark_DateRange* array;
    Ark_Int32 length;
} Array_DateRange;
typedef struct Opt_Array_DateRange {
    Ark_Tag tag;
    Array_DateRange value;
} Opt_Array_DateRange;
typedef struct Array_Dimension {
    /* kind: ContainerType */
    Ark_Dimension* array;
    Ark_Int32 length;
} Array_Dimension;
typedef struct Opt_Array_Dimension {
    Ark_Tag tag;
    Array_Dimension value;
} Opt_Array_Dimension;
typedef struct Array_DragPreviewMode {
    /* kind: ContainerType */
    Ark_DragPreviewMode* array;
    Ark_Int32 length;
} Array_DragPreviewMode;
typedef struct Opt_Array_DragPreviewMode {
    Ark_Tag tag;
    Array_DragPreviewMode value;
} Opt_Array_DragPreviewMode;
typedef struct Array_drawing_RectType {
    /* kind: ContainerType */
    Ark_drawing_RectType* array;
    Ark_Int32 length;
} Array_drawing_RectType;
typedef struct Opt_Array_drawing_RectType {
    Ark_Tag tag;
    Array_drawing_RectType value;
} Opt_Array_drawing_RectType;
typedef struct Array_drawing_TextBlobRunBuffer {
    /* kind: ContainerType */
    Ark_drawing_TextBlobRunBuffer* array;
    Ark_Int32 length;
} Array_drawing_TextBlobRunBuffer;
typedef struct Opt_Array_drawing_TextBlobRunBuffer {
    Ark_Tag tag;
    Array_drawing_TextBlobRunBuffer value;
} Opt_Array_drawing_TextBlobRunBuffer;
typedef struct Array_FingerInfo {
    /* kind: ContainerType */
    Ark_FingerInfo* array;
    Ark_Int32 length;
} Array_FingerInfo;
typedef struct Opt_Array_FingerInfo {
    Ark_Tag tag;
    Array_FingerInfo value;
} Opt_Array_FingerInfo;
typedef struct Array_font_UIFontAdjustInfo {
    /* kind: ContainerType */
    Ark_font_UIFontAdjustInfo* array;
    Ark_Int32 length;
} Array_font_UIFontAdjustInfo;
typedef struct Opt_Array_font_UIFontAdjustInfo {
    Ark_Tag tag;
    Array_font_UIFontAdjustInfo value;
} Opt_Array_font_UIFontAdjustInfo;
typedef struct Array_font_UIFontAliasInfo {
    /* kind: ContainerType */
    Ark_font_UIFontAliasInfo* array;
    Ark_Int32 length;
} Array_font_UIFontAliasInfo;
typedef struct Opt_Array_font_UIFontAliasInfo {
    Ark_Tag tag;
    Array_font_UIFontAliasInfo value;
} Opt_Array_font_UIFontAliasInfo;
typedef struct Array_font_UIFontFallbackGroupInfo {
    /* kind: ContainerType */
    Ark_font_UIFontFallbackGroupInfo* array;
    Ark_Int32 length;
} Array_font_UIFontFallbackGroupInfo;
typedef struct Opt_Array_font_UIFontFallbackGroupInfo {
    Ark_Tag tag;
    Array_font_UIFontFallbackGroupInfo value;
} Opt_Array_font_UIFontFallbackGroupInfo;
typedef struct Array_font_UIFontFallbackInfo {
    /* kind: ContainerType */
    Ark_font_UIFontFallbackInfo* array;
    Ark_Int32 length;
} Array_font_UIFontFallbackInfo;
typedef struct Opt_Array_font_UIFontFallbackInfo {
    Ark_Tag tag;
    Array_font_UIFontFallbackInfo value;
} Opt_Array_font_UIFontFallbackInfo;
typedef struct Array_font_UIFontGenericInfo {
    /* kind: ContainerType */
    Ark_font_UIFontGenericInfo* array;
    Ark_Int32 length;
} Array_font_UIFontGenericInfo;
typedef struct Opt_Array_font_UIFontGenericInfo {
    Ark_Tag tag;
    Array_font_UIFontGenericInfo value;
} Opt_Array_font_UIFontGenericInfo;
typedef struct Array_FractionStop {
    /* kind: ContainerType */
    Ark_FractionStop* array;
    Ark_Int32 length;
} Array_FractionStop;
typedef struct Opt_Array_FractionStop {
    Ark_Tag tag;
    Array_FractionStop value;
} Opt_Array_FractionStop;
typedef struct Array_GestureRecognizer {
    /* kind: ContainerType */
    Ark_GestureRecognizer* array;
    Ark_Int32 length;
} Array_GestureRecognizer;
typedef struct Opt_Array_GestureRecognizer {
    Ark_Tag tag;
    Array_GestureRecognizer value;
} Opt_Array_GestureRecognizer;
typedef struct Array_GestureType {
    /* kind: ContainerType */
    Ark_GestureType* array;
    Ark_Int32 length;
} Array_GestureType;
typedef struct Opt_Array_GestureType {
    Ark_Tag tag;
    Array_GestureType value;
} Opt_Array_GestureType;
typedef struct Array_GuideLineStyle {
    /* kind: ContainerType */
    Ark_GuideLineStyle* array;
    Ark_Int32 length;
} Array_GuideLineStyle;
typedef struct Opt_Array_GuideLineStyle {
    Ark_Tag tag;
    Array_GuideLineStyle value;
} Opt_Array_GuideLineStyle;
typedef struct Array_Header {
    /* kind: ContainerType */
    Ark_Header* array;
    Ark_Int32 length;
} Array_Header;
typedef struct Opt_Array_Header {
    Ark_Tag tag;
    Array_Header value;
} Opt_Array_Header;
typedef struct Array_HistoricalPoint {
    /* kind: ContainerType */
    Ark_HistoricalPoint* array;
    Ark_Int32 length;
} Array_HistoricalPoint;
typedef struct Opt_Array_HistoricalPoint {
    Ark_Tag tag;
    Array_HistoricalPoint value;
} Opt_Array_HistoricalPoint;
typedef struct Array_ImageAnalyzerType {
    /* kind: ContainerType */
    Ark_ImageAnalyzerType* array;
    Ark_Int32 length;
} Array_ImageAnalyzerType;
typedef struct Opt_Array_ImageAnalyzerType {
    Ark_Tag tag;
    Array_ImageAnalyzerType value;
} Opt_Array_ImageAnalyzerType;
typedef struct Array_ImageFrameInfo {
    /* kind: ContainerType */
    Ark_ImageFrameInfo* array;
    Ark_Int32 length;
} Array_ImageFrameInfo;
typedef struct Opt_Array_ImageFrameInfo {
    Ark_Tag tag;
    Array_ImageFrameInfo value;
} Opt_Array_ImageFrameInfo;
typedef struct Array_Layoutable {
    /* kind: ContainerType */
    Ark_Layoutable* array;
    Ark_Int32 length;
} Array_Layoutable;
typedef struct Opt_Array_Layoutable {
    Ark_Tag tag;
    Array_Layoutable value;
} Opt_Array_Layoutable;
typedef struct Array_LayoutSafeAreaEdge {
    /* kind: ContainerType */
    Ark_LayoutSafeAreaEdge* array;
    Ark_Int32 length;
} Array_LayoutSafeAreaEdge;
typedef struct Opt_Array_LayoutSafeAreaEdge {
    Ark_Tag tag;
    Array_LayoutSafeAreaEdge value;
} Opt_Array_LayoutSafeAreaEdge;
typedef struct Array_LayoutSafeAreaType {
    /* kind: ContainerType */
    Ark_LayoutSafeAreaType* array;
    Ark_Int32 length;
} Array_LayoutSafeAreaType;
typedef struct Opt_Array_LayoutSafeAreaType {
    Ark_Tag tag;
    Array_LayoutSafeAreaType value;
} Opt_Array_LayoutSafeAreaType;
typedef struct Array_Length {
    /* kind: ContainerType */
    Ark_Length* array;
    Ark_Int32 length;
} Array_Length;
typedef struct Opt_Array_Length {
    Ark_Tag tag;
    Array_Length value;
} Opt_Array_Length;
typedef struct Array_LengthMetrics {
    /* kind: ContainerType */
    Ark_LengthMetrics* array;
    Ark_Int32 length;
} Array_LengthMetrics;
typedef struct Opt_Array_LengthMetrics {
    Ark_Tag tag;
    Array_LengthMetrics value;
} Opt_Array_LengthMetrics;
typedef struct Array_Measurable {
    /* kind: ContainerType */
    Ark_Measurable* array;
    Ark_Int32 length;
} Array_Measurable;
typedef struct Opt_Array_Measurable {
    Ark_Tag tag;
    Array_Measurable value;
} Opt_Array_Measurable;
typedef struct Array_MenuElement {
    /* kind: ContainerType */
    Ark_MenuElement* array;
    Ark_Int32 length;
} Array_MenuElement;
typedef struct Opt_Array_MenuElement {
    Ark_Tag tag;
    Array_MenuElement value;
} Opt_Array_MenuElement;
typedef struct Array_ModifierKey {
    /* kind: ContainerType */
    Ark_ModifierKey* array;
    Ark_Int32 length;
} Array_ModifierKey;
typedef struct Opt_Array_ModifierKey {
    Ark_Tag tag;
    Array_ModifierKey value;
} Opt_Array_ModifierKey;
typedef struct Array_MouseButton {
    /* kind: ContainerType */
    Ark_MouseButton* array;
    Ark_Int32 length;
} Array_MouseButton;
typedef struct Opt_Array_MouseButton {
    Ark_Tag tag;
    Array_MouseButton value;
} Opt_Array_MouseButton;
typedef struct Array_NavDestinationTransition {
    /* kind: ContainerType */
    Ark_NavDestinationTransition* array;
    Ark_Int32 length;
} Array_NavDestinationTransition;
typedef struct Opt_Array_NavDestinationTransition {
    Ark_Tag tag;
    Array_NavDestinationTransition value;
} Opt_Array_NavDestinationTransition;
typedef struct Array_NavigationMenuItem {
    /* kind: ContainerType */
    Ark_NavigationMenuItem* array;
    Ark_Int32 length;
} Array_NavigationMenuItem;
typedef struct Opt_Array_NavigationMenuItem {
    Ark_Tag tag;
    Array_NavigationMenuItem value;
} Opt_Array_NavigationMenuItem;
typedef struct Array_NavPathInfo {
    /* kind: ContainerType */
    Ark_NavPathInfo* array;
    Ark_Int32 length;
} Array_NavPathInfo;
typedef struct Opt_Array_NavPathInfo {
    Ark_Tag tag;
    Array_NavPathInfo value;
} Opt_Array_NavPathInfo;
typedef struct Array_NestedScrollInfo {
    /* kind: ContainerType */
    Ark_NestedScrollInfo* array;
    Ark_Int32 length;
} Array_NestedScrollInfo;
typedef struct Opt_Array_NestedScrollInfo {
    Ark_Tag tag;
    Array_NestedScrollInfo value;
} Opt_Array_NestedScrollInfo;
typedef struct Array_Number {
    /* kind: ContainerType */
    Ark_Number* array;
    Ark_Int32 length;
} Array_Number;
typedef struct Opt_Array_Number {
    Ark_Tag tag;
    Array_Number value;
} Opt_Array_Number;
typedef struct Array_Object {
    /* kind: ContainerType */
    Ark_Object* array;
    Ark_Int32 length;
} Array_Object;
typedef struct Opt_Array_Object {
    Ark_Tag tag;
    Array_Object value;
} Opt_Array_Object;
typedef struct Array_ObscuredReasons {
    /* kind: ContainerType */
    Ark_ObscuredReasons* array;
    Ark_Int32 length;
} Array_ObscuredReasons;
typedef struct Opt_Array_ObscuredReasons {
    Ark_Tag tag;
    Array_ObscuredReasons value;
} Opt_Array_ObscuredReasons;
typedef struct Array_Opt_Object {
    /* kind: ContainerType */
    Opt_Object* array;
    Ark_Int32 length;
} Array_Opt_Object;
typedef struct Opt_Array_Opt_Object {
    Ark_Tag tag;
    Array_Opt_Object value;
} Opt_Array_Opt_Object;
typedef struct Array_RadiusItem {
    /* kind: ContainerType */
    Ark_RadiusItem* array;
    Ark_Int32 length;
} Array_RadiusItem;
typedef struct Opt_Array_RadiusItem {
    Ark_Tag tag;
    Array_RadiusItem value;
} Opt_Array_RadiusItem;
typedef struct Array_Rectangle {
    /* kind: ContainerType */
    Ark_Rectangle* array;
    Ark_Int32 length;
} Array_Rectangle;
typedef struct Opt_Array_Rectangle {
    Ark_Tag tag;
    Array_Rectangle value;
} Opt_Array_Rectangle;
typedef struct Array_ResourceColor {
    /* kind: ContainerType */
    Ark_ResourceColor* array;
    Ark_Int32 length;
} Array_ResourceColor;
typedef struct Opt_Array_ResourceColor {
    Ark_Tag tag;
    Array_ResourceColor value;
} Opt_Array_ResourceColor;
typedef struct Array_ResourceStr {
    /* kind: ContainerType */
    Ark_ResourceStr* array;
    Ark_Int32 length;
} Array_ResourceStr;
typedef struct Opt_Array_ResourceStr {
    Ark_Tag tag;
    Array_ResourceStr value;
} Opt_Array_ResourceStr;
typedef struct Array_RichEditorImageSpanResult {
    /* kind: ContainerType */
    Ark_RichEditorImageSpanResult* array;
    Ark_Int32 length;
} Array_RichEditorImageSpanResult;
typedef struct Opt_Array_RichEditorImageSpanResult {
    Ark_Tag tag;
    Array_RichEditorImageSpanResult value;
} Opt_Array_RichEditorImageSpanResult;
typedef struct Array_RichEditorParagraphResult {
    /* kind: ContainerType */
    Ark_RichEditorParagraphResult* array;
    Ark_Int32 length;
} Array_RichEditorParagraphResult;
typedef struct Opt_Array_RichEditorParagraphResult {
    Ark_Tag tag;
    Array_RichEditorParagraphResult value;
} Opt_Array_RichEditorParagraphResult;
typedef struct Array_RichEditorSpan {
    /* kind: ContainerType */
    Ark_RichEditorSpan* array;
    Ark_Int32 length;
} Array_RichEditorSpan;
typedef struct Opt_Array_RichEditorSpan {
    Ark_Tag tag;
    Array_RichEditorSpan value;
} Opt_Array_RichEditorSpan;
typedef struct Array_RichEditorTextSpanResult {
    /* kind: ContainerType */
    Ark_RichEditorTextSpanResult* array;
    Ark_Int32 length;
} Array_RichEditorTextSpanResult;
typedef struct Opt_Array_RichEditorTextSpanResult {
    Ark_Tag tag;
    Array_RichEditorTextSpanResult value;
} Opt_Array_RichEditorTextSpanResult;
typedef struct Array_SafeAreaEdge {
    /* kind: ContainerType */
    Ark_SafeAreaEdge* array;
    Ark_Int32 length;
} Array_SafeAreaEdge;
typedef struct Opt_Array_SafeAreaEdge {
    Ark_Tag tag;
    Array_SafeAreaEdge value;
} Opt_Array_SafeAreaEdge;
typedef struct Array_SafeAreaType {
    /* kind: ContainerType */
    Ark_SafeAreaType* array;
    Ark_Int32 length;
} Array_SafeAreaType;
typedef struct Opt_Array_SafeAreaType {
    Ark_Tag tag;
    Array_SafeAreaType value;
} Opt_Array_SafeAreaType;
typedef struct Array_ScriptItem {
    /* kind: ContainerType */
    Ark_ScriptItem* array;
    Ark_Int32 length;
} Array_ScriptItem;
typedef struct Opt_Array_ScriptItem {
    Ark_Tag tag;
    Array_ScriptItem value;
} Opt_Array_ScriptItem;
typedef struct Array_Scroller {
    /* kind: ContainerType */
    Ark_Scroller* array;
    Ark_Int32 length;
} Array_Scroller;
typedef struct Opt_Array_Scroller {
    Ark_Tag tag;
    Array_Scroller value;
} Opt_Array_Scroller;
typedef struct Array_SectionOptions {
    /* kind: ContainerType */
    Ark_SectionOptions* array;
    Ark_Int32 length;
} Array_SectionOptions;
typedef struct Opt_Array_SectionOptions {
    Ark_Tag tag;
    Array_SectionOptions value;
} Opt_Array_SectionOptions;
typedef struct Array_SelectOption {
    /* kind: ContainerType */
    Ark_SelectOption* array;
    Ark_Int32 length;
} Array_SelectOption;
typedef struct Opt_Array_SelectOption {
    Ark_Tag tag;
    Array_SelectOption value;
} Opt_Array_SelectOption;
typedef struct Array_ShadowOptions {
    /* kind: ContainerType */
    Ark_ShadowOptions* array;
    Ark_Int32 length;
} Array_ShadowOptions;
typedef struct Opt_Array_ShadowOptions {
    Ark_Tag tag;
    Array_ShadowOptions value;
} Opt_Array_ShadowOptions;
typedef struct Array_ShapePoint {
    /* kind: ContainerType */
    Ark_ShapePoint* array;
    Ark_Int32 length;
} Array_ShapePoint;
typedef struct Opt_Array_ShapePoint {
    Ark_Tag tag;
    Array_ShapePoint value;
} Opt_Array_ShapePoint;
typedef struct Array_SourceTool {
    /* kind: ContainerType */
    Ark_SourceTool* array;
    Ark_Int32 length;
} Array_SourceTool;
typedef struct Opt_Array_SourceTool {
    Ark_Tag tag;
    Array_SourceTool value;
} Opt_Array_SourceTool;
typedef struct Array_SpanStyle {
    /* kind: ContainerType */
    Ark_SpanStyle* array;
    Ark_Int32 length;
} Array_SpanStyle;
typedef struct Opt_Array_SpanStyle {
    Ark_Tag tag;
    Array_SpanStyle value;
} Opt_Array_SpanStyle;
typedef struct Array_String {
    /* kind: ContainerType */
    Ark_String* array;
    Ark_Int32 length;
} Array_String;
typedef struct Opt_Array_String {
    Ark_Tag tag;
    Array_String value;
} Opt_Array_String;
typedef struct Array_StyleOptions {
    /* kind: ContainerType */
    Ark_StyleOptions* array;
    Ark_Int32 length;
} Array_StyleOptions;
typedef struct Opt_Array_StyleOptions {
    Ark_Tag tag;
    Array_StyleOptions value;
} Opt_Array_StyleOptions;
typedef struct Array_text_FontDescriptor {
    /* kind: ContainerType */
    Ark_text_FontDescriptor* array;
    Ark_Int32 length;
} Array_text_FontDescriptor;
typedef struct Opt_Array_text_FontDescriptor {
    Ark_Tag tag;
    Array_text_FontDescriptor value;
} Opt_Array_text_FontDescriptor;
typedef struct Array_text_FontFeature {
    /* kind: ContainerType */
    Ark_text_FontFeature* array;
    Ark_Int32 length;
} Array_text_FontFeature;
typedef struct Opt_Array_text_FontFeature {
    Ark_Tag tag;
    Array_text_FontFeature value;
} Opt_Array_text_FontFeature;
typedef struct Array_text_FontVariation {
    /* kind: ContainerType */
    Ark_text_FontVariation* array;
    Ark_Int32 length;
} Array_text_FontVariation;
typedef struct Opt_Array_text_FontVariation {
    Ark_Tag tag;
    Array_text_FontVariation value;
} Opt_Array_text_FontVariation;
typedef struct Array_text_LineMetrics {
    /* kind: ContainerType */
    Ark_text_LineMetrics* array;
    Ark_Int32 length;
} Array_text_LineMetrics;
typedef struct Opt_Array_text_LineMetrics {
    Ark_Tag tag;
    Array_text_LineMetrics value;
} Opt_Array_text_LineMetrics;
typedef struct Array_text_Run {
    /* kind: ContainerType */
    Ark_text_Run* array;
    Ark_Int32 length;
} Array_text_Run;
typedef struct Opt_Array_text_Run {
    Ark_Tag tag;
    Array_text_Run value;
} Opt_Array_text_Run;
typedef struct Array_text_TextBox {
    /* kind: ContainerType */
    Ark_text_TextBox* array;
    Ark_Int32 length;
} Array_text_TextBox;
typedef struct Opt_Array_text_TextBox {
    Ark_Tag tag;
    Array_text_TextBox value;
} Opt_Array_text_TextBox;
typedef struct Array_text_TextLine {
    /* kind: ContainerType */
    Ark_text_TextLine* array;
    Ark_Int32 length;
} Array_text_TextLine;
typedef struct Opt_Array_text_TextLine {
    Ark_Tag tag;
    Array_text_TextLine value;
} Opt_Array_text_TextLine;
typedef struct Array_text_TextShadow {
    /* kind: ContainerType */
    Ark_text_TextShadow* array;
    Ark_Int32 length;
} Array_text_TextShadow;
typedef struct Opt_Array_text_TextShadow {
    Ark_Tag tag;
    Array_text_TextShadow value;
} Opt_Array_text_TextShadow;
typedef struct Array_TextCascadePickerRangeContent {
    /* kind: ContainerType */
    Ark_TextCascadePickerRangeContent* array;
    Ark_Int32 length;
} Array_TextCascadePickerRangeContent;
typedef struct Opt_Array_TextCascadePickerRangeContent {
    Ark_Tag tag;
    Array_TextCascadePickerRangeContent value;
} Opt_Array_TextCascadePickerRangeContent;
typedef struct Array_TextDataDetectorType {
    /* kind: ContainerType */
    Ark_TextDataDetectorType* array;
    Ark_Int32 length;
} Array_TextDataDetectorType;
typedef struct Opt_Array_TextDataDetectorType {
    Ark_Tag tag;
    Array_TextDataDetectorType value;
} Opt_Array_TextDataDetectorType;
typedef struct Array_TextMenuItem {
    /* kind: ContainerType */
    Ark_TextMenuItem* array;
    Ark_Int32 length;
} Array_TextMenuItem;
typedef struct Opt_Array_TextMenuItem {
    Ark_Tag tag;
    Array_TextMenuItem value;
} Opt_Array_TextMenuItem;
typedef struct Array_TextPickerRangeContent {
    /* kind: ContainerType */
    Ark_TextPickerRangeContent* array;
    Ark_Int32 length;
} Array_TextPickerRangeContent;
typedef struct Opt_Array_TextPickerRangeContent {
    Ark_Tag tag;
    Array_TextPickerRangeContent value;
} Opt_Array_TextPickerRangeContent;
typedef struct Array_ToolbarItem {
    /* kind: ContainerType */
    Ark_ToolbarItem* array;
    Ark_Int32 length;
} Array_ToolbarItem;
typedef struct Opt_Array_ToolbarItem {
    Ark_Tag tag;
    Array_ToolbarItem value;
} Opt_Array_ToolbarItem;
typedef struct Array_TouchObject {
    /* kind: ContainerType */
    Ark_TouchObject* array;
    Ark_Int32 length;
} Array_TouchObject;
typedef struct Opt_Array_TouchObject {
    Ark_Tag tag;
    Array_TouchObject value;
} Opt_Array_TouchObject;
typedef struct Array_TouchTestInfo {
    /* kind: ContainerType */
    Ark_TouchTestInfo* array;
    Ark_Int32 length;
} Array_TouchTestInfo;
typedef struct Opt_Array_TouchTestInfo {
    Ark_Tag tag;
    Array_TouchTestInfo value;
} Opt_Array_TouchTestInfo;
typedef struct Array_Tuple_ResourceColor_Number {
    /* kind: ContainerType */
    Ark_Tuple_ResourceColor_Number* array;
    Ark_Int32 length;
} Array_Tuple_ResourceColor_Number;
typedef struct Opt_Array_Tuple_ResourceColor_Number {
    Ark_Tag tag;
    Array_Tuple_ResourceColor_Number value;
} Opt_Array_Tuple_ResourceColor_Number;
typedef struct Array_Tuple_Union_ResourceColor_LinearGradient_Number {
    /* kind: ContainerType */
    Ark_Tuple_Union_ResourceColor_LinearGradient_Number* array;
    Ark_Int32 length;
} Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Array_Tuple_Union_ResourceColor_LinearGradient_Number {
    Ark_Tag tag;
    Array_Tuple_Union_ResourceColor_LinearGradient_Number value;
} Opt_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Array_uniformTypeDescriptor_UniformDataType {
    /* kind: ContainerType */
    Ark_uniformTypeDescriptor_UniformDataType* array;
    Ark_Int32 length;
} Array_uniformTypeDescriptor_UniformDataType;
typedef struct Opt_Array_uniformTypeDescriptor_UniformDataType {
    Ark_Tag tag;
    Array_uniformTypeDescriptor_UniformDataType value;
} Opt_Array_uniformTypeDescriptor_UniformDataType;
typedef struct Array_Union_Number_String {
    /* kind: ContainerType */
    Ark_Union_Number_String* array;
    Ark_Int32 length;
} Array_Union_Number_String;
typedef struct Opt_Array_Union_Number_String {
    Ark_Tag tag;
    Array_Union_Number_String value;
} Opt_Array_Union_Number_String;
typedef struct Array_Union_ResourceColor_LinearGradient {
    /* kind: ContainerType */
    Ark_Union_ResourceColor_LinearGradient* array;
    Ark_Int32 length;
} Array_Union_ResourceColor_LinearGradient;
typedef struct Opt_Array_Union_ResourceColor_LinearGradient {
    Ark_Tag tag;
    Array_Union_ResourceColor_LinearGradient value;
} Opt_Array_Union_ResourceColor_LinearGradient;
typedef struct Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult {
    /* kind: ContainerType */
    Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult* array;
    Ark_Int32 length;
} Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Opt_Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult {
    Ark_Tag tag;
    Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult value;
} Opt_Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult {
    /* kind: ContainerType */
    Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult* array;
    Ark_Int32 length;
} Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Opt_Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult {
    Ark_Tag tag;
    Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult value;
} Opt_Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Array_webview_WebHeader {
    /* kind: ContainerType */
    Ark_webview_WebHeader* array;
    Ark_Int32 length;
} Array_webview_WebHeader;
typedef struct Opt_Array_webview_WebHeader {
    Ark_Tag tag;
    Array_webview_WebHeader value;
} Opt_Array_webview_WebHeader;
typedef struct AsyncCallback_image_PixelMap_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_image_PixelMap result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_image_PixelMap result);
} AsyncCallback_image_PixelMap_Void;
typedef struct Opt_AsyncCallback_image_PixelMap_Void {
    Ark_Tag tag;
    AsyncCallback_image_PixelMap_Void value;
} Opt_AsyncCallback_image_PixelMap_Void;
typedef struct ButtonModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ButtonConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ButtonConfiguration config, const Callback_Pointer_Void continuation);
} ButtonModifierBuilder;
typedef struct Opt_ButtonModifierBuilder {
    Ark_Tag tag;
    ButtonModifierBuilder value;
} Opt_ButtonModifierBuilder;
typedef struct ButtonTriggerClickCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number xPos, const Ark_Number yPos);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xPos, const Ark_Number yPos);
} ButtonTriggerClickCallback;
typedef struct Opt_ButtonTriggerClickCallback {
    Ark_Tag tag;
    ButtonTriggerClickCallback value;
} Opt_ButtonTriggerClickCallback;
typedef struct Callback_Area_Area_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue);
} Callback_Area_Area_Void;
typedef struct Opt_Callback_Area_Area_Void {
    Ark_Tag tag;
    Callback_Area_Area_Void value;
} Opt_Callback_Area_Area_Void;
typedef struct Callback_Array_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_Number input);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_Number input);
} Callback_Array_Number_Void;
typedef struct Opt_Callback_Array_Number_Void {
    Ark_Tag tag;
    Callback_Array_Number_Void value;
} Opt_Callback_Array_Number_Void;
typedef struct Callback_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_String value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_String value);
} Callback_Array_String_Void;
typedef struct Opt_Callback_Array_String_Void {
    Ark_Tag tag;
    Callback_Array_String_Void value;
} Opt_Callback_Array_String_Void;
typedef struct Callback_Array_TextMenuItem_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_TextMenuItem value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_TextMenuItem value);
} Callback_Array_TextMenuItem_Void;
typedef struct Opt_Callback_Array_TextMenuItem_Void {
    Ark_Tag tag;
    Callback_Array_TextMenuItem_Void value;
} Opt_Callback_Array_TextMenuItem_Void;
typedef struct Callback_Array_TouchTestInfo_TouchResult {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation);
} Callback_Array_TouchTestInfo_TouchResult;
typedef struct Opt_Callback_Array_TouchTestInfo_TouchResult {
    Ark_Tag tag;
    Callback_Array_TouchTestInfo_TouchResult value;
} Opt_Callback_Array_TouchTestInfo_TouchResult;
typedef struct Callback_AxisEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_AxisEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AxisEvent value0);
} Callback_AxisEvent_Void;
typedef struct Opt_Callback_AxisEvent_Void {
    Ark_Tag tag;
    Callback_AxisEvent_Void value;
} Opt_Callback_AxisEvent_Void;
typedef struct Callback_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_Boolean_Void continuation);
} Callback_Boolean;
typedef struct Opt_Callback_Boolean {
    Ark_Tag tag;
    Callback_Boolean value;
} Opt_Callback_Boolean;
typedef struct Callback_Boolean_HoverEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event);
} Callback_Boolean_HoverEvent_Void;
typedef struct Opt_Callback_Boolean_HoverEvent_Void {
    Ark_Tag tag;
    Callback_Boolean_HoverEvent_Void value;
} Opt_Callback_Boolean_HoverEvent_Void;
typedef struct Callback_Boolean_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0);
} Callback_Boolean_Void;
typedef struct Opt_Callback_Boolean_Void {
    Ark_Tag tag;
    Callback_Boolean_Void value;
} Opt_Callback_Boolean_Void;
typedef struct Callback_Buffer_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Buffer value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Buffer value);
} Callback_Buffer_Void;
typedef struct Opt_Callback_Buffer_Void {
    Ark_Tag tag;
    Callback_Buffer_Void value;
} Opt_Callback_Buffer_Void;
typedef struct Callback_ClickEvent_LocationButtonOnClickResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_LocationButtonOnClickResult result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_LocationButtonOnClickResult result);
} Callback_ClickEvent_LocationButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_LocationButtonOnClickResult_Void {
    Ark_Tag tag;
    Callback_ClickEvent_LocationButtonOnClickResult_Void value;
} Opt_Callback_ClickEvent_LocationButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_PasteButtonOnClickResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_PasteButtonOnClickResult result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_PasteButtonOnClickResult result);
} Callback_ClickEvent_PasteButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_PasteButtonOnClickResult_Void {
    Ark_Tag tag;
    Callback_ClickEvent_PasteButtonOnClickResult_Void value;
} Opt_Callback_ClickEvent_PasteButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_SaveButtonOnClickResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_SaveButtonOnClickResult result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_SaveButtonOnClickResult result);
} Callback_ClickEvent_SaveButtonOnClickResult_Void;
typedef struct Opt_Callback_ClickEvent_SaveButtonOnClickResult_Void {
    Ark_Tag tag;
    Callback_ClickEvent_SaveButtonOnClickResult_Void value;
} Opt_Callback_ClickEvent_SaveButtonOnClickResult_Void;
typedef struct Callback_ClickEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ClickEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event);
} Callback_ClickEvent_Void;
typedef struct Opt_Callback_ClickEvent_Void {
    Ark_Tag tag;
    Callback_ClickEvent_Void value;
} Opt_Callback_ClickEvent_Void;
typedef struct Callback_CompatibleComponentInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CompatibleComponentInfo value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CompatibleComponentInfo value);
} Callback_CompatibleComponentInfo_Void;
typedef struct Opt_Callback_CompatibleComponentInfo_Void {
    Ark_Tag tag;
    Callback_CompatibleComponentInfo_Void value;
} Opt_Callback_CompatibleComponentInfo_Void;
typedef struct Callback_ComputedBarAttribute_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ComputedBarAttribute value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ComputedBarAttribute value);
} Callback_ComputedBarAttribute_Void;
typedef struct Opt_Callback_ComputedBarAttribute_Void {
    Ark_Tag tag;
    Callback_ComputedBarAttribute_Void value;
} Opt_Callback_ComputedBarAttribute_Void;
typedef struct Callback_CopyEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CopyEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CopyEvent value0);
} Callback_CopyEvent_Void;
typedef struct Opt_Callback_CopyEvent_Void {
    Ark_Tag tag;
    Callback_CopyEvent_Void value;
} Opt_Callback_CopyEvent_Void;
typedef struct Callback_CreateItem {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation);
} Callback_CreateItem;
typedef struct Opt_Callback_CreateItem {
    Ark_Tag tag;
    Callback_CreateItem value;
} Opt_Callback_CreateItem;
typedef struct Callback_CrownEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CrownEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CrownEvent value0);
} Callback_CrownEvent_Void;
typedef struct Opt_Callback_CrownEvent_Void {
    Ark_Tag tag;
    Callback_CrownEvent_Void value;
} Opt_Callback_CrownEvent_Void;
typedef struct Callback_CustomSpanMeasureInfo_CustomSpanMetrics {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CustomSpanMeasureInfo measureInfo, const Callback_CustomSpanMetrics_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomSpanMeasureInfo measureInfo, const Callback_CustomSpanMetrics_Void continuation);
} Callback_CustomSpanMeasureInfo_CustomSpanMetrics;
typedef struct Opt_Callback_CustomSpanMeasureInfo_CustomSpanMetrics {
    Ark_Tag tag;
    Callback_CustomSpanMeasureInfo_CustomSpanMetrics value;
} Opt_Callback_CustomSpanMeasureInfo_CustomSpanMetrics;
typedef struct Callback_CustomSpanMetrics_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CustomSpanMetrics value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomSpanMetrics value);
} Callback_CustomSpanMetrics_Void;
typedef struct Opt_Callback_CustomSpanMetrics_Void {
    Ark_Tag tag;
    Callback_CustomSpanMetrics_Void value;
} Opt_Callback_CustomSpanMetrics_Void;
typedef struct Callback_CutEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CutEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CutEvent value0);
} Callback_CutEvent_Void;
typedef struct Opt_Callback_CutEvent_Void {
    Ark_Tag tag;
    Callback_CutEvent_Void value;
} Opt_Callback_CutEvent_Void;
typedef struct Callback_Date_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Date value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date value0);
} Callback_Date_Void;
typedef struct Opt_Callback_Date_Void {
    Ark_Tag tag;
    Callback_Date_Void value;
} Opt_Callback_Date_Void;
typedef struct Callback_DeleteValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation);
} Callback_DeleteValue_Boolean;
typedef struct Opt_Callback_DeleteValue_Boolean {
    Ark_Tag tag;
    Callback_DeleteValue_Boolean value;
} Opt_Callback_DeleteValue_Boolean;
typedef struct Callback_DeleteValue_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DeleteValue value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0);
} Callback_DeleteValue_Void;
typedef struct Opt_Callback_DeleteValue_Void {
    Ark_Tag tag;
    Callback_DeleteValue_Void value;
} Opt_Callback_DeleteValue_Void;
typedef struct Callback_DismissContentCoverAction_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DismissContentCoverAction value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DismissContentCoverAction value0);
} Callback_DismissContentCoverAction_Void;
typedef struct Opt_Callback_DismissContentCoverAction_Void {
    Ark_Tag tag;
    Callback_DismissContentCoverAction_Void value;
} Opt_Callback_DismissContentCoverAction_Void;
typedef struct Callback_DismissDialogAction_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DismissDialogAction value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DismissDialogAction value0);
} Callback_DismissDialogAction_Void;
typedef struct Opt_Callback_DismissDialogAction_Void {
    Ark_Tag tag;
    Callback_DismissDialogAction_Void value;
} Opt_Callback_DismissDialogAction_Void;
typedef struct Callback_DismissPopupAction_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DismissPopupAction value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DismissPopupAction value0);
} Callback_DismissPopupAction_Void;
typedef struct Opt_Callback_DismissPopupAction_Void {
    Ark_Tag tag;
    Callback_DismissPopupAction_Void value;
} Opt_Callback_DismissPopupAction_Void;
typedef struct Callback_DismissSheetAction_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DismissSheetAction value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DismissSheetAction value0);
} Callback_DismissSheetAction_Void;
typedef struct Opt_Callback_DismissSheetAction_Void {
    Ark_Tag tag;
    Callback_DismissSheetAction_Void value;
} Opt_Callback_DismissSheetAction_Void;
typedef struct Callback_DragEvent_Opt_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams);
} Callback_DragEvent_Opt_String_Void;
typedef struct Opt_Callback_DragEvent_Opt_String_Void {
    Ark_Tag tag;
    Callback_DragEvent_Opt_String_Void value;
} Opt_Callback_DragEvent_Opt_String_Void;
typedef struct Callback_DrawContext_CustomSpanDrawInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DrawContext context, const Ark_CustomSpanDrawInfo drawInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext context, const Ark_CustomSpanDrawInfo drawInfo);
} Callback_DrawContext_CustomSpanDrawInfo_Void;
typedef struct Opt_Callback_DrawContext_CustomSpanDrawInfo_Void {
    Ark_Tag tag;
    Callback_DrawContext_CustomSpanDrawInfo_Void value;
} Opt_Callback_DrawContext_CustomSpanDrawInfo_Void;
typedef struct Callback_DrawContext_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DrawContext drawContext);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext drawContext);
} Callback_DrawContext_Void;
typedef struct Opt_Callback_DrawContext_Void {
    Ark_Tag tag;
    Callback_DrawContext_Void value;
} Opt_Callback_DrawContext_Void;
typedef struct Callback_EditableTextChangeValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation);
} Callback_EditableTextChangeValue_Boolean;
typedef struct Opt_Callback_EditableTextChangeValue_Boolean {
    Ark_Tag tag;
    Callback_EditableTextChangeValue_Boolean value;
} Opt_Callback_EditableTextChangeValue_Boolean;
typedef struct Callback_EnterKeyType_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey);
} Callback_EnterKeyType_Void;
typedef struct Opt_Callback_EnterKeyType_Void {
    Ark_Tag tag;
    Callback_EnterKeyType_Void value;
} Opt_Callback_EnterKeyType_Void;
typedef struct Callback_ErrorInformation_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ErrorInformation value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ErrorInformation value0);
} Callback_ErrorInformation_Void;
typedef struct Opt_Callback_ErrorInformation_Void {
    Ark_Tag tag;
    Callback_ErrorInformation_Void value;
} Opt_Callback_ErrorInformation_Void;
typedef struct Callback_Extender_OnFinish {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} Callback_Extender_OnFinish;
typedef struct Opt_Callback_Extender_OnFinish {
    Ark_Tag tag;
    Callback_Extender_OnFinish value;
} Opt_Callback_Extender_OnFinish;
typedef struct Callback_Extender_OnProgress {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Float32 value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Float32 value);
} Callback_Extender_OnProgress;
typedef struct Opt_Callback_Extender_OnProgress {
    Ark_Tag tag;
    Callback_Extender_OnProgress value;
} Opt_Callback_Extender_OnProgress;
typedef struct Callback_FocusAxisEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_FocusAxisEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FocusAxisEvent value0);
} Callback_FocusAxisEvent_Void;
typedef struct Opt_Callback_FocusAxisEvent_Void {
    Ark_Tag tag;
    Callback_FocusAxisEvent_Void value;
} Opt_Callback_FocusAxisEvent_Void;
typedef struct Callback_FormCallbackInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0);
} Callback_FormCallbackInfo_Void;
typedef struct Opt_Callback_FormCallbackInfo_Void {
    Ark_Tag tag;
    Callback_FormCallbackInfo_Void value;
} Opt_Callback_FormCallbackInfo_Void;
typedef struct Callback_FullscreenInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_FullscreenInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullscreenInfo value0);
} Callback_FullscreenInfo_Void;
typedef struct Opt_Callback_FullscreenInfo_Void {
    Ark_Tag tag;
    Callback_FullscreenInfo_Void value;
} Opt_Callback_FullscreenInfo_Void;
typedef struct Callback_GestureEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GestureEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event);
} Callback_GestureEvent_Void;
typedef struct Opt_Callback_GestureEvent_Void {
    Ark_Tag tag;
    Callback_GestureEvent_Void value;
} Opt_Callback_GestureEvent_Void;
typedef struct Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation);
} Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult;
typedef struct Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult {
    Ark_Tag tag;
    Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult value;
} Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult;
typedef struct Callback_GestureJudgeResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_GestureJudgeResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_GestureJudgeResult value);
} Callback_GestureJudgeResult_Void;
typedef struct Opt_Callback_GestureJudgeResult_Void {
    Ark_Tag tag;
    Callback_GestureJudgeResult_Void value;
} Opt_Callback_GestureJudgeResult_Void;
typedef struct Callback_GestureRecognizer_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GestureRecognizer value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureRecognizer value);
} Callback_GestureRecognizer_Void;
typedef struct Opt_Callback_GestureRecognizer_Void {
    Ark_Tag tag;
    Callback_GestureRecognizer_Void value;
} Opt_Callback_GestureRecognizer_Void;
typedef struct Callback_HitTestMode_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_HitTestMode value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_HitTestMode value);
} Callback_HitTestMode_Void;
typedef struct Opt_Callback_HitTestMode_Void {
    Ark_Tag tag;
    Callback_HitTestMode_Void value;
} Opt_Callback_HitTestMode_Void;
typedef struct Callback_HoverEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_HoverEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEvent value0);
} Callback_HoverEvent_Void;
typedef struct Opt_Callback_HoverEvent_Void {
    Ark_Tag tag;
    Callback_HoverEvent_Void value;
} Opt_Callback_HoverEvent_Void;
typedef struct Callback_InsertValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation);
} Callback_InsertValue_Boolean;
typedef struct Opt_Callback_InsertValue_Boolean {
    Ark_Tag tag;
    Callback_InsertValue_Boolean value;
} Opt_Callback_InsertValue_Boolean;
typedef struct Callback_InsertValue_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_InsertValue value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0);
} Callback_InsertValue_Void;
typedef struct Opt_Callback_InsertValue_Void {
    Ark_Tag tag;
    Callback_InsertValue_Void value;
} Opt_Callback_InsertValue_Void;
typedef struct Callback_ItemDragInfo_Number_Number_Boolean_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess);
} Callback_ItemDragInfo_Number_Number_Boolean_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void {
    Ark_Tag tag;
    Callback_ItemDragInfo_Number_Number_Boolean_Void value;
} Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void;
typedef struct Callback_ItemDragInfo_Number_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex);
} Callback_ItemDragInfo_Number_Number_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Number_Void {
    Ark_Tag tag;
    Callback_ItemDragInfo_Number_Number_Void value;
} Opt_Callback_ItemDragInfo_Number_Number_Void;
typedef struct Callback_ItemDragInfo_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex);
} Callback_ItemDragInfo_Number_Void;
typedef struct Opt_Callback_ItemDragInfo_Number_Void {
    Ark_Tag tag;
    Callback_ItemDragInfo_Number_Void value;
} Opt_Callback_ItemDragInfo_Number_Void;
typedef struct Callback_ItemDragInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event);
} Callback_ItemDragInfo_Void;
typedef struct Opt_Callback_ItemDragInfo_Void {
    Ark_Tag tag;
    Callback_ItemDragInfo_Void value;
} Opt_Callback_ItemDragInfo_Void;
typedef struct Callback_KeyEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation);
} Callback_KeyEvent_Boolean;
typedef struct Opt_Callback_KeyEvent_Boolean {
    Ark_Tag tag;
    Callback_KeyEvent_Boolean value;
} Opt_Callback_KeyEvent_Boolean;
typedef struct Callback_KeyEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_KeyEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event);
} Callback_KeyEvent_Void;
typedef struct Opt_Callback_KeyEvent_Void {
    Ark_Tag tag;
    Callback_KeyEvent_Void value;
} Opt_Callback_KeyEvent_Void;
typedef struct Callback_Map_String_Object_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Map_String_Object value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Map_String_Object value0);
} Callback_Map_String_Object_Void;
typedef struct Opt_Callback_Map_String_Object_Void {
    Ark_Tag tag;
    Callback_Map_String_Object_Void value;
} Opt_Callback_Map_String_Object_Void;
typedef struct Callback_MarqueeState_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_MarqueeState value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_MarqueeState value0);
} Callback_MarqueeState_Void;
typedef struct Opt_Callback_MarqueeState_Void {
    Ark_Tag tag;
    Callback_MarqueeState_Void value;
} Opt_Callback_MarqueeState_Void;
typedef struct Callback_MouseEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_MouseEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MouseEvent event);
} Callback_MouseEvent_Void;
typedef struct Opt_Callback_MouseEvent_Void {
    Ark_Tag tag;
    Callback_MouseEvent_Void value;
} Opt_Callback_MouseEvent_Void;
typedef struct Callback_NativeEmbedDataInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event);
} Callback_NativeEmbedDataInfo_Void;
typedef struct Opt_Callback_NativeEmbedDataInfo_Void {
    Ark_Tag tag;
    Callback_NativeEmbedDataInfo_Void value;
} Opt_Callback_NativeEmbedDataInfo_Void;
typedef struct Callback_NativeEmbedTouchInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event);
} Callback_NativeEmbedTouchInfo_Void;
typedef struct Opt_Callback_NativeEmbedTouchInfo_Void {
    Ark_Tag tag;
    Callback_NativeEmbedTouchInfo_Void value;
} Opt_Callback_NativeEmbedTouchInfo_Void;
typedef struct Callback_NavDestinationActiveReason_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0);
} Callback_NavDestinationActiveReason_Void;
typedef struct Opt_Callback_NavDestinationActiveReason_Void {
    Ark_Tag tag;
    Callback_NavDestinationActiveReason_Void value;
} Opt_Callback_NavDestinationActiveReason_Void;
typedef struct Callback_NavDestinationContext_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NavDestinationContext value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavDestinationContext value0);
} Callback_NavDestinationContext_Void;
typedef struct Opt_Callback_NavDestinationContext_Void {
    Ark_Tag tag;
    Callback_NavDestinationContext_Void value;
} Opt_Callback_NavDestinationContext_Void;
typedef struct Callback_NavigationMode_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_NavigationMode mode);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationMode mode);
} Callback_NavigationMode_Void;
typedef struct Opt_Callback_NavigationMode_Void {
    Ark_Tag tag;
    Callback_NavigationMode_Void value;
} Opt_Callback_NavigationMode_Void;
typedef struct Callback_NavigationTitleMode_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode);
} Callback_NavigationTitleMode_Void;
typedef struct Opt_Callback_NavigationTitleMode_Void {
    Ark_Tag tag;
    Callback_NavigationTitleMode_Void value;
} Opt_Callback_NavigationTitleMode_Void;
typedef struct Callback_NavigationTransitionProxy_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NavigationTransitionProxy transitionProxy);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavigationTransitionProxy transitionProxy);
} Callback_NavigationTransitionProxy_Void;
typedef struct Opt_Callback_NavigationTransitionProxy_Void {
    Ark_Tag tag;
    Callback_NavigationTransitionProxy_Void value;
} Opt_Callback_NavigationTransitionProxy_Void;
typedef struct Callback_Number_Number_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation);
} Callback_Number_Number_Boolean;
typedef struct Opt_Callback_Number_Number_Boolean {
    Ark_Tag tag;
    Callback_Number_Number_Boolean value;
} Opt_Callback_Number_Number_Boolean;
typedef struct Callback_Number_Number_ComputedBarAttribute {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation);
} Callback_Number_Number_ComputedBarAttribute;
typedef struct Opt_Callback_Number_Number_ComputedBarAttribute {
    Ark_Tag tag;
    Callback_Number_Number_ComputedBarAttribute value;
} Opt_Callback_Number_Number_ComputedBarAttribute;
typedef struct Callback_Number_Number_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center);
} Callback_Number_Number_Number_Void;
typedef struct Opt_Callback_Number_Number_Number_Void {
    Ark_Tag tag;
    Callback_Number_Number_Number_Void value;
} Opt_Callback_Number_Number_Number_Void;
typedef struct Callback_Number_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last);
} Callback_Number_Number_Void;
typedef struct Opt_Callback_Number_Number_Void {
    Ark_Tag tag;
    Callback_Number_Number_Void value;
} Opt_Callback_Number_Number_Void;
typedef struct Callback_Number_SliderChangeMode_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode);
} Callback_Number_SliderChangeMode_Void;
typedef struct Opt_Callback_Number_SliderChangeMode_Void {
    Ark_Tag tag;
    Callback_Number_SliderChangeMode_Void value;
} Opt_Callback_Number_SliderChangeMode_Void;
typedef struct Callback_Number_Tuple_Number_Number {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Tuple_Number_Number_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Tuple_Number_Number_Void continuation);
} Callback_Number_Tuple_Number_Number;
typedef struct Opt_Callback_Number_Tuple_Number_Number {
    Ark_Tag tag;
    Callback_Number_Tuple_Number_Number value;
} Opt_Callback_Number_Tuple_Number_Number;
typedef struct Callback_Number_Tuple_Number_Number_Number_Number {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Tuple_Number_Number_Number_Number_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Tuple_Number_Number_Number_Number_Void continuation);
} Callback_Number_Tuple_Number_Number_Number_Number;
typedef struct Opt_Callback_Number_Tuple_Number_Number_Number_Number {
    Ark_Tag tag;
    Callback_Number_Tuple_Number_Number_Number_Number value;
} Opt_Callback_Number_Tuple_Number_Number_Number_Number;
typedef struct Callback_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0);
} Callback_Number_Void;
typedef struct Opt_Callback_Number_Void {
    Ark_Tag tag;
    Callback_Number_Void value;
} Opt_Callback_Number_Void;
typedef struct Callback_Object_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Object value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Object value0);
} Callback_Object_Void;
typedef struct Opt_Callback_Object_Void {
    Ark_Tag tag;
    Callback_Object_Void value;
} Opt_Callback_Object_Void;
typedef struct Callback_OnAlertEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnAlertEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAlertEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnAlertEvent_Boolean;
typedef struct Opt_Callback_OnAlertEvent_Boolean {
    Ark_Tag tag;
    Callback_OnAlertEvent_Boolean value;
} Opt_Callback_OnAlertEvent_Boolean;
typedef struct Callback_OnAudioStateChangedEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent value0);
} Callback_OnAudioStateChangedEvent_Void;
typedef struct Opt_Callback_OnAudioStateChangedEvent_Void {
    Ark_Tag tag;
    Callback_OnAudioStateChangedEvent_Void value;
} Opt_Callback_OnAudioStateChangedEvent_Void;
typedef struct Callback_OnBeforeUnloadEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnBeforeUnloadEvent_Boolean;
typedef struct Opt_Callback_OnBeforeUnloadEvent_Boolean {
    Ark_Tag tag;
    Callback_OnBeforeUnloadEvent_Boolean value;
} Opt_Callback_OnBeforeUnloadEvent_Boolean;
typedef struct Callback_OnClientAuthenticationEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent value0);
} Callback_OnClientAuthenticationEvent_Void;
typedef struct Opt_Callback_OnClientAuthenticationEvent_Void {
    Ark_Tag tag;
    Callback_OnClientAuthenticationEvent_Void value;
} Opt_Callback_OnClientAuthenticationEvent_Void;
typedef struct Callback_OnConfirmEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnConfirmEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConfirmEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnConfirmEvent_Boolean;
typedef struct Opt_Callback_OnConfirmEvent_Boolean {
    Ark_Tag tag;
    Callback_OnConfirmEvent_Boolean value;
} Opt_Callback_OnConfirmEvent_Boolean;
typedef struct Callback_OnConsoleEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnConsoleEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConsoleEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnConsoleEvent_Boolean;
typedef struct Opt_Callback_OnConsoleEvent_Boolean {
    Ark_Tag tag;
    Callback_OnConsoleEvent_Boolean value;
} Opt_Callback_OnConsoleEvent_Boolean;
typedef struct Callback_OnContextMenuShowEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnContextMenuShowEvent_Boolean;
typedef struct Opt_Callback_OnContextMenuShowEvent_Boolean {
    Ark_Tag tag;
    Callback_OnContextMenuShowEvent_Boolean value;
} Opt_Callback_OnContextMenuShowEvent_Boolean;
typedef struct Callback_OnDataResubmittedEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent value0);
} Callback_OnDataResubmittedEvent_Void;
typedef struct Opt_Callback_OnDataResubmittedEvent_Void {
    Ark_Tag tag;
    Callback_OnDataResubmittedEvent_Void value;
} Opt_Callback_OnDataResubmittedEvent_Void;
typedef struct Callback_OnDownloadStartEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent value0);
} Callback_OnDownloadStartEvent_Void;
typedef struct Opt_Callback_OnDownloadStartEvent_Void {
    Ark_Tag tag;
    Callback_OnDownloadStartEvent_Void value;
} Opt_Callback_OnDownloadStartEvent_Void;
typedef struct Callback_OnErrorReceiveEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent value0);
} Callback_OnErrorReceiveEvent_Void;
typedef struct Opt_Callback_OnErrorReceiveEvent_Void {
    Ark_Tag tag;
    Callback_OnErrorReceiveEvent_Void value;
} Opt_Callback_OnErrorReceiveEvent_Void;
typedef struct Callback_OnFaviconReceivedEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent value0);
} Callback_OnFaviconReceivedEvent_Void;
typedef struct Opt_Callback_OnFaviconReceivedEvent_Void {
    Ark_Tag tag;
    Callback_OnFaviconReceivedEvent_Void value;
} Opt_Callback_OnFaviconReceivedEvent_Void;
typedef struct Callback_OnFirstContentfulPaintEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent value0);
} Callback_OnFirstContentfulPaintEvent_Void;
typedef struct Opt_Callback_OnFirstContentfulPaintEvent_Void {
    Ark_Tag tag;
    Callback_OnFirstContentfulPaintEvent_Void value;
} Opt_Callback_OnFirstContentfulPaintEvent_Void;
typedef struct Callback_OnGeolocationShowEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent value0);
} Callback_OnGeolocationShowEvent_Void;
typedef struct Opt_Callback_OnGeolocationShowEvent_Void {
    Ark_Tag tag;
    Callback_OnGeolocationShowEvent_Void value;
} Opt_Callback_OnGeolocationShowEvent_Void;
typedef struct Callback_OnHttpAuthRequestEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnHttpAuthRequestEvent_Boolean;
typedef struct Opt_Callback_OnHttpAuthRequestEvent_Boolean {
    Ark_Tag tag;
    Callback_OnHttpAuthRequestEvent_Boolean value;
} Opt_Callback_OnHttpAuthRequestEvent_Boolean;
typedef struct Callback_OnHttpErrorReceiveEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent value0);
} Callback_OnHttpErrorReceiveEvent_Void;
typedef struct Opt_Callback_OnHttpErrorReceiveEvent_Void {
    Ark_Tag tag;
    Callback_OnHttpErrorReceiveEvent_Void value;
} Opt_Callback_OnHttpErrorReceiveEvent_Void;
typedef struct Callback_OnInterceptRequestEvent_WebResourceResponse {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent value0, const Callback_WebResourceResponse_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent value0, const Callback_WebResourceResponse_Void continuation);
} Callback_OnInterceptRequestEvent_WebResourceResponse;
typedef struct Opt_Callback_OnInterceptRequestEvent_WebResourceResponse {
    Ark_Tag tag;
    Callback_OnInterceptRequestEvent_WebResourceResponse value;
} Opt_Callback_OnInterceptRequestEvent_WebResourceResponse;
typedef struct Callback_OnLoadInterceptEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnLoadInterceptEvent_Boolean;
typedef struct Opt_Callback_OnLoadInterceptEvent_Boolean {
    Ark_Tag tag;
    Callback_OnLoadInterceptEvent_Boolean value;
} Opt_Callback_OnLoadInterceptEvent_Boolean;
typedef struct Callback_onMeasureSize_SizeResult {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Measurable children, const Ark_ConstraintSizeOptions constraint, const Callback_SizeResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Measurable children, const Ark_ConstraintSizeOptions constraint, const Callback_SizeResult_Void continuation);
} Callback_onMeasureSize_SizeResult;
typedef struct Opt_Callback_onMeasureSize_SizeResult {
    Ark_Tag tag;
    Callback_onMeasureSize_SizeResult value;
} Opt_Callback_onMeasureSize_SizeResult;
typedef struct Callback_OnOverScrollEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnOverScrollEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnOverScrollEvent value0);
} Callback_OnOverScrollEvent_Void;
typedef struct Opt_Callback_OnOverScrollEvent_Void {
    Ark_Tag tag;
    Callback_OnOverScrollEvent_Void value;
} Opt_Callback_OnOverScrollEvent_Void;
typedef struct Callback_OnPageBeginEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnPageBeginEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageBeginEvent value0);
} Callback_OnPageBeginEvent_Void;
typedef struct Opt_Callback_OnPageBeginEvent_Void {
    Ark_Tag tag;
    Callback_OnPageBeginEvent_Void value;
} Opt_Callback_OnPageBeginEvent_Void;
typedef struct Callback_OnPageEndEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnPageEndEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageEndEvent value0);
} Callback_OnPageEndEvent_Void;
typedef struct Opt_Callback_OnPageEndEvent_Void {
    Ark_Tag tag;
    Callback_OnPageEndEvent_Void value;
} Opt_Callback_OnPageEndEvent_Void;
typedef struct Callback_OnPageVisibleEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent value0);
} Callback_OnPageVisibleEvent_Void;
typedef struct Opt_Callback_OnPageVisibleEvent_Void {
    Ark_Tag tag;
    Callback_OnPageVisibleEvent_Void value;
} Opt_Callback_OnPageVisibleEvent_Void;
typedef struct Callback_OnPermissionRequestEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent value0);
} Callback_OnPermissionRequestEvent_Void;
typedef struct Opt_Callback_OnPermissionRequestEvent_Void {
    Ark_Tag tag;
    Callback_OnPermissionRequestEvent_Void value;
} Opt_Callback_OnPermissionRequestEvent_Void;
typedef struct Callback_onPlaceChildren_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Layoutable children, const Ark_ConstraintSizeOptions constraint);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Layoutable children, const Ark_ConstraintSizeOptions constraint);
} Callback_onPlaceChildren_Void;
typedef struct Opt_Callback_onPlaceChildren_Void {
    Ark_Tag tag;
    Callback_onPlaceChildren_Void value;
} Opt_Callback_onPlaceChildren_Void;
typedef struct Callback_OnProgressChangeEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent value0);
} Callback_OnProgressChangeEvent_Void;
typedef struct Opt_Callback_OnProgressChangeEvent_Void {
    Ark_Tag tag;
    Callback_OnProgressChangeEvent_Void value;
} Opt_Callback_OnProgressChangeEvent_Void;
typedef struct Callback_OnPromptEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnPromptEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPromptEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnPromptEvent_Boolean;
typedef struct Opt_Callback_OnPromptEvent_Boolean {
    Ark_Tag tag;
    Callback_OnPromptEvent_Boolean value;
} Opt_Callback_OnPromptEvent_Boolean;
typedef struct Callback_OnRefreshAccessedHistoryEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent value0);
} Callback_OnRefreshAccessedHistoryEvent_Void;
typedef struct Opt_Callback_OnRefreshAccessedHistoryEvent_Void {
    Ark_Tag tag;
    Callback_OnRefreshAccessedHistoryEvent_Void value;
} Opt_Callback_OnRefreshAccessedHistoryEvent_Void;
typedef struct Callback_OnRenderExitedEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent value0);
} Callback_OnRenderExitedEvent_Void;
typedef struct Opt_Callback_OnRenderExitedEvent_Void {
    Ark_Tag tag;
    Callback_OnRenderExitedEvent_Void value;
} Opt_Callback_OnRenderExitedEvent_Void;
typedef struct Callback_OnResourceLoadEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent value0);
} Callback_OnResourceLoadEvent_Void;
typedef struct Opt_Callback_OnResourceLoadEvent_Void {
    Ark_Tag tag;
    Callback_OnResourceLoadEvent_Void value;
} Opt_Callback_OnResourceLoadEvent_Void;
typedef struct Callback_OnScaleChangeEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent value0);
} Callback_OnScaleChangeEvent_Void;
typedef struct Opt_Callback_OnScaleChangeEvent_Void {
    Ark_Tag tag;
    Callback_OnScaleChangeEvent_Void value;
} Opt_Callback_OnScaleChangeEvent_Void;
typedef struct Callback_OnScreenCaptureRequestEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent value0);
} Callback_OnScreenCaptureRequestEvent_Void;
typedef struct Opt_Callback_OnScreenCaptureRequestEvent_Void {
    Ark_Tag tag;
    Callback_OnScreenCaptureRequestEvent_Void value;
} Opt_Callback_OnScreenCaptureRequestEvent_Void;
typedef struct Callback_OnScrollEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnScrollEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScrollEvent value0);
} Callback_OnScrollEvent_Void;
typedef struct Opt_Callback_OnScrollEvent_Void {
    Ark_Tag tag;
    Callback_OnScrollEvent_Void value;
} Opt_Callback_OnScrollEvent_Void;
typedef struct Callback_OnScrollFrameBeginHandlerResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnScrollFrameBeginHandlerResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScrollFrameBeginHandlerResult value);
} Callback_OnScrollFrameBeginHandlerResult_Void;
typedef struct Opt_Callback_OnScrollFrameBeginHandlerResult_Void {
    Ark_Tag tag;
    Callback_OnScrollFrameBeginHandlerResult_Void value;
} Opt_Callback_OnScrollFrameBeginHandlerResult_Void;
typedef struct Callback_OnSearchResultReceiveEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent value0);
} Callback_OnSearchResultReceiveEvent_Void;
typedef struct Opt_Callback_OnSearchResultReceiveEvent_Void {
    Ark_Tag tag;
    Callback_OnSearchResultReceiveEvent_Void value;
} Opt_Callback_OnSearchResultReceiveEvent_Void;
typedef struct Callback_OnShowFileSelectorEvent_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent value0, const Callback_Boolean_Void continuation);
} Callback_OnShowFileSelectorEvent_Boolean;
typedef struct Opt_Callback_OnShowFileSelectorEvent_Boolean {
    Ark_Tag tag;
    Callback_OnShowFileSelectorEvent_Boolean value;
} Opt_Callback_OnShowFileSelectorEvent_Boolean;
typedef struct Callback_OnSslErrorEventReceiveEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent value0);
} Callback_OnSslErrorEventReceiveEvent_Void;
typedef struct Opt_Callback_OnSslErrorEventReceiveEvent_Void {
    Ark_Tag tag;
    Callback_OnSslErrorEventReceiveEvent_Void value;
} Opt_Callback_OnSslErrorEventReceiveEvent_Void;
typedef struct Callback_OnTitleReceiveEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent value0);
} Callback_OnTitleReceiveEvent_Void;
typedef struct Opt_Callback_OnTitleReceiveEvent_Void {
    Ark_Tag tag;
    Callback_OnTitleReceiveEvent_Void value;
} Opt_Callback_OnTitleReceiveEvent_Void;
typedef struct Callback_OnTouchIconUrlReceivedEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent value0);
} Callback_OnTouchIconUrlReceivedEvent_Void;
typedef struct Opt_Callback_OnTouchIconUrlReceivedEvent_Void {
    Ark_Tag tag;
    Callback_OnTouchIconUrlReceivedEvent_Void value;
} Opt_Callback_OnTouchIconUrlReceivedEvent_Void;
typedef struct Callback_OnWindowNewEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnWindowNewEvent value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnWindowNewEvent value0);
} Callback_OnWindowNewEvent_Void;
typedef struct Opt_Callback_OnWindowNewEvent_Void {
    Ark_Tag tag;
    Callback_OnWindowNewEvent_Void value;
} Opt_Callback_OnWindowNewEvent_Void;
typedef struct Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Array_CustomObject value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_CustomObject value, const Opt_Array_String error);
} Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void value;
} Opt_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void;
typedef struct Callback_Opt_Array_NavDestinationTransition_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Array_NavDestinationTransition value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_NavDestinationTransition value);
} Callback_Opt_Array_NavDestinationTransition_Void;
typedef struct Opt_Callback_Opt_Array_NavDestinationTransition_Void {
    Ark_Tag tag;
    Callback_Opt_Array_NavDestinationTransition_Void value;
} Opt_Callback_Opt_Array_NavDestinationTransition_Void;
typedef struct Callback_Opt_Array_String_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Array_String value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String value, const Opt_Array_String error);
} Callback_Opt_Array_String_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_String_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_Array_String_Opt_Array_String_Void value;
} Opt_Callback_Opt_Array_String_Opt_Array_String_Void;
typedef struct Callback_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error);
} Callback_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_Array_String_Void value;
} Opt_Callback_Opt_Array_String_Void;
typedef struct Callback_Opt_Boolean_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Boolean select);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select);
} Callback_Opt_Boolean_Void;
typedef struct Opt_Callback_Opt_Boolean_Void {
    Ark_Tag tag;
    Callback_Opt_Boolean_Void value;
} Opt_Callback_Opt_Boolean_Void;
typedef struct Callback_Opt_CustomBuilder_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_CustomNodeBuilder value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_CustomNodeBuilder value);
} Callback_Opt_CustomBuilder_Void;
typedef struct Opt_Callback_Opt_CustomBuilder_Void {
    Ark_Tag tag;
    Callback_Opt_CustomBuilder_Void value;
} Opt_Callback_Opt_CustomBuilder_Void;
typedef struct Callback_Opt_FontDescriptor_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_CustomObject value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_CustomObject value, const Opt_Array_String error);
} Callback_Opt_FontDescriptor_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_FontDescriptor_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_FontDescriptor_Opt_Array_String_Void value;
} Opt_Callback_Opt_FontDescriptor_Opt_Array_String_Void;
typedef struct Callback_Opt_NavigationAnimatedTransition_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_NavigationAnimatedTransition value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_NavigationAnimatedTransition value);
} Callback_Opt_NavigationAnimatedTransition_Void;
typedef struct Opt_Callback_Opt_NavigationAnimatedTransition_Void {
    Ark_Tag tag;
    Callback_Opt_NavigationAnimatedTransition_Void value;
} Opt_Callback_Opt_NavigationAnimatedTransition_Void;
typedef struct Callback_Opt_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Number selected);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number selected);
} Callback_Opt_Number_Void;
typedef struct Opt_Callback_Opt_Number_Void {
    Ark_Tag tag;
    Callback_Opt_Number_Void value;
} Opt_Callback_Opt_Number_Void;
typedef struct Callback_Opt_Object_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Object value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object value0);
} Callback_Opt_Object_Void;
typedef struct Opt_Callback_Opt_Object_Void {
    Ark_Tag tag;
    Callback_Opt_Object_Void value;
} Opt_Callback_Opt_Object_Void;
typedef struct Callback_Opt_OffsetResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_OffsetResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_OffsetResult value);
} Callback_Opt_OffsetResult_Void;
typedef struct Opt_Callback_Opt_OffsetResult_Void {
    Ark_Tag tag;
    Callback_Opt_OffsetResult_Void value;
} Opt_Callback_Opt_OffsetResult_Void;
typedef struct Callback_Opt_Scene_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Scene value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Scene value, const Opt_Array_String error);
} Callback_Opt_Scene_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_Scene_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_Scene_Opt_Array_String_Void value;
} Opt_Callback_Opt_Scene_Opt_Array_String_Void;
typedef struct Callback_Opt_ScrollResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_ScrollResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_ScrollResult value);
} Callback_Opt_ScrollResult_Void;
typedef struct Opt_Callback_Opt_ScrollResult_Void {
    Ark_Tag tag;
    Callback_Opt_ScrollResult_Void value;
} Opt_Callback_Opt_ScrollResult_Void;
typedef struct Callback_Opt_String_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_String value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_String value, const Opt_Array_String error);
} Callback_Opt_String_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_String_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_String_Opt_Array_String_Void value;
} Opt_Callback_Opt_String_Opt_Array_String_Void;
typedef struct Callback_Opt_StyledString_Opt_Array_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error);
} Callback_Opt_StyledString_Opt_Array_String_Void;
typedef struct Opt_Callback_Opt_StyledString_Opt_Array_String_Void {
    Ark_Tag tag;
    Callback_Opt_StyledString_Opt_Array_String_Void value;
} Opt_Callback_Opt_StyledString_Opt_Array_String_Void;
typedef struct Callback_Opt_TabContentAnimatedTransition_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_TabContentAnimatedTransition value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_TabContentAnimatedTransition value);
} Callback_Opt_TabContentAnimatedTransition_Void;
typedef struct Opt_Callback_Opt_TabContentAnimatedTransition_Void {
    Ark_Tag tag;
    Callback_Opt_TabContentAnimatedTransition_Void value;
} Opt_Callback_Opt_TabContentAnimatedTransition_Void;
typedef struct Callback_Opt_Union_Number_Resource_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected);
} Callback_Opt_Union_Number_Resource_Void;
typedef struct Opt_Callback_Opt_Union_Number_Resource_Void {
    Ark_Tag tag;
    Callback_Opt_Union_Number_Resource_Void value;
} Opt_Callback_Opt_Union_Number_Resource_Void;
typedef struct Callback_Opt_Union_ResourceStr_String_Resource_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Union_ResourceStr_String_Resource value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Union_ResourceStr_String_Resource value);
} Callback_Opt_Union_ResourceStr_String_Resource_Void;
typedef struct Opt_Callback_Opt_Union_ResourceStr_String_Resource_Void {
    Ark_Tag tag;
    Callback_Opt_Union_ResourceStr_String_Resource_Void value;
} Opt_Callback_Opt_Union_ResourceStr_String_Resource_Void;
typedef struct Callback_PlaybackInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_PlaybackInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo value0);
} Callback_PlaybackInfo_Void;
typedef struct Opt_Callback_PlaybackInfo_Void {
    Ark_Tag tag;
    Callback_PlaybackInfo_Void value;
} Opt_Callback_PlaybackInfo_Void;
typedef struct Callback_Pointer_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer value);
} Callback_Pointer_Void;
typedef struct Opt_Callback_Pointer_Void {
    Ark_Tag tag;
    Callback_Pointer_Void value;
} Opt_Callback_Pointer_Void;
typedef struct Callback_PopInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_PopInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo value0);
} Callback_PopInfo_Void;
typedef struct Opt_Callback_PopInfo_Void {
    Ark_Tag tag;
    Callback_PopInfo_Void value;
} Opt_Callback_PopInfo_Void;
typedef struct Callback_PreDragStatus_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_PreDragStatus value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_PreDragStatus value0);
} Callback_PreDragStatus_Void;
typedef struct Opt_Callback_PreDragStatus_Void {
    Ark_Tag tag;
    Callback_PreDragStatus_Void value;
} Opt_Callback_PreDragStatus_Void;
typedef struct Callback_PreparedInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_PreparedInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PreparedInfo value0);
} Callback_PreparedInfo_Void;
typedef struct Opt_Callback_PreparedInfo_Void {
    Ark_Tag tag;
    Callback_PreparedInfo_Void value;
} Opt_Callback_PreparedInfo_Void;
typedef struct Callback_RangeUpdate {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end);
} Callback_RangeUpdate;
typedef struct Opt_Callback_RangeUpdate {
    Ark_Tag tag;
    Callback_RangeUpdate value;
} Opt_Callback_RangeUpdate;
typedef struct Callback_RefreshStatus_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_RefreshStatus state);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_RefreshStatus state);
} Callback_RefreshStatus_Void;
typedef struct Opt_Callback_RefreshStatus_Void {
    Ark_Tag tag;
    Callback_RefreshStatus_Void value;
} Opt_Callback_RefreshStatus_Void;
typedef struct Callback_RichEditorChangeValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorChangeValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorChangeValue value0, const Callback_Boolean_Void continuation);
} Callback_RichEditorChangeValue_Boolean;
typedef struct Opt_Callback_RichEditorChangeValue_Boolean {
    Ark_Tag tag;
    Callback_RichEditorChangeValue_Boolean value;
} Opt_Callback_RichEditorChangeValue_Boolean;
typedef struct Callback_RichEditorDeleteValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue value0, const Callback_Boolean_Void continuation);
} Callback_RichEditorDeleteValue_Boolean;
typedef struct Opt_Callback_RichEditorDeleteValue_Boolean {
    Ark_Tag tag;
    Callback_RichEditorDeleteValue_Boolean value;
} Opt_Callback_RichEditorDeleteValue_Boolean;
typedef struct Callback_RichEditorInsertValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorInsertValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorInsertValue value0, const Callback_Boolean_Void continuation);
} Callback_RichEditorInsertValue_Boolean;
typedef struct Opt_Callback_RichEditorInsertValue_Boolean {
    Ark_Tag tag;
    Callback_RichEditorInsertValue_Boolean value;
} Opt_Callback_RichEditorInsertValue_Boolean;
typedef struct Callback_RichEditorRange_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorRange value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorRange value0);
} Callback_RichEditorRange_Void;
typedef struct Opt_Callback_RichEditorRange_Void {
    Ark_Tag tag;
    Callback_RichEditorRange_Void value;
} Opt_Callback_RichEditorRange_Void;
typedef struct Callback_RichEditorSelection_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorSelection value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorSelection value0);
} Callback_RichEditorSelection_Void;
typedef struct Opt_Callback_RichEditorSelection_Void {
    Ark_Tag tag;
    Callback_RichEditorSelection_Void value;
} Opt_Callback_RichEditorSelection_Void;
typedef struct Callback_RichEditorTextSpanResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult value0);
} Callback_RichEditorTextSpanResult_Void;
typedef struct Opt_Callback_RichEditorTextSpanResult_Void {
    Ark_Tag tag;
    Callback_RichEditorTextSpanResult_Void value;
} Opt_Callback_RichEditorTextSpanResult_Void;
typedef struct Callback_RotationGesture {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_RotationGesture_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_RotationGesture_Void continuation);
} Callback_RotationGesture;
typedef struct Opt_Callback_RotationGesture {
    Ark_Tag tag;
    Callback_RotationGesture value;
} Opt_Callback_RotationGesture;
typedef struct Callback_RotationGesture_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RotationGesture value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RotationGesture value);
} Callback_RotationGesture_Void;
typedef struct Opt_Callback_RotationGesture_Void {
    Ark_Tag tag;
    Callback_RotationGesture_Void value;
} Opt_Callback_RotationGesture_Void;
typedef struct Callback_SheetDismiss_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SheetDismiss sheetDismiss);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SheetDismiss sheetDismiss);
} Callback_SheetDismiss_Void;
typedef struct Opt_Callback_SheetDismiss_Void {
    Ark_Tag tag;
    Callback_SheetDismiss_Void value;
} Opt_Callback_SheetDismiss_Void;
typedef struct Callback_SheetType_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_SheetType value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_SheetType value0);
} Callback_SheetType_Void;
typedef struct Opt_Callback_SheetType_Void {
    Ark_Tag tag;
    Callback_SheetType_Void value;
} Opt_Callback_SheetType_Void;
typedef struct Callback_SizeResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SizeResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeResult value);
} Callback_SizeResult_Void;
typedef struct Opt_Callback_SizeResult_Void {
    Ark_Tag tag;
    Callback_SizeResult_Void value;
} Opt_Callback_SizeResult_Void;
typedef struct Callback_SpringBackAction_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SpringBackAction value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SpringBackAction value0);
} Callback_SpringBackAction_Void;
typedef struct Opt_Callback_SpringBackAction_Void {
    Ark_Tag tag;
    Callback_SpringBackAction_Void value;
} Opt_Callback_SpringBackAction_Void;
typedef struct Callback_StateStylesChange {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Int32 currentState);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 currentState);
} Callback_StateStylesChange;
typedef struct Opt_Callback_StateStylesChange {
    Ark_Tag tag;
    Callback_StateStylesChange value;
} Opt_Callback_StateStylesChange;
typedef struct Callback_String_PasteEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event);
} Callback_String_PasteEvent_Void;
typedef struct Opt_Callback_String_PasteEvent_Void {
    Ark_Tag tag;
    Callback_String_PasteEvent_Void value;
} Opt_Callback_String_PasteEvent_Void;
typedef struct Callback_String_SurfaceRect_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect);
} Callback_String_SurfaceRect_Void;
typedef struct Opt_Callback_String_SurfaceRect_Void {
    Ark_Tag tag;
    Callback_String_SurfaceRect_Void value;
} Opt_Callback_String_SurfaceRect_Void;
typedef struct Callback_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String breakpoints);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints);
} Callback_String_Void;
typedef struct Opt_Callback_String_Void {
    Ark_Tag tag;
    Callback_String_Void value;
} Opt_Callback_String_Void;
typedef struct Callback_StyledStringChangeValue_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_StyledStringChangeValue value0, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_StyledStringChangeValue value0, const Callback_Boolean_Void continuation);
} Callback_StyledStringChangeValue_Boolean;
typedef struct Opt_Callback_StyledStringChangeValue_Boolean {
    Ark_Tag tag;
    Callback_StyledStringChangeValue_Boolean value;
} Opt_Callback_StyledStringChangeValue_Boolean;
typedef struct Callback_StyledStringMarshallingValue_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_UserDataSpan value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UserDataSpan value);
} Callback_StyledStringMarshallingValue_Void;
typedef struct Opt_Callback_StyledStringMarshallingValue_Void {
    Ark_Tag tag;
    Callback_StyledStringMarshallingValue_Void value;
} Opt_Callback_StyledStringMarshallingValue_Void;
typedef struct Callback_SwipeActionState_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_SwipeActionState state);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_SwipeActionState state);
} Callback_SwipeActionState_Void;
typedef struct Opt_Callback_SwipeActionState_Void {
    Ark_Tag tag;
    Callback_SwipeActionState_Void value;
} Opt_Callback_SwipeActionState_Void;
typedef struct Callback_SwipeGesture {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_SwipeGesture_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_SwipeGesture_Void continuation);
} Callback_SwipeGesture;
typedef struct Opt_Callback_SwipeGesture {
    Ark_Tag tag;
    Callback_SwipeGesture value;
} Opt_Callback_SwipeGesture;
typedef struct Callback_SwipeGesture_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SwipeGesture value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SwipeGesture value);
} Callback_SwipeGesture_Void;
typedef struct Opt_Callback_SwipeGesture_Void {
    Ark_Tag tag;
    Callback_SwipeGesture_Void value;
} Opt_Callback_SwipeGesture_Void;
typedef struct Callback_SwiperContentTransitionProxy_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SwiperContentTransitionProxy value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SwiperContentTransitionProxy value0);
} Callback_SwiperContentTransitionProxy_Void;
typedef struct Opt_Callback_SwiperContentTransitionProxy_Void {
    Ark_Tag tag;
    Callback_SwiperContentTransitionProxy_Void value;
} Opt_Callback_SwiperContentTransitionProxy_Void;
typedef struct Callback_T {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_T_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_T_Void continuation);
} Callback_T;
typedef struct Opt_Callback_T {
    Ark_Tag tag;
    Callback_T value;
} Opt_Callback_T;
typedef struct Callback_T_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CustomObject instance);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomObject instance);
} Callback_T_Void;
typedef struct Opt_Callback_T_Void {
    Ark_Tag tag;
    Callback_T_Void value;
} Opt_Callback_T_Void;
typedef struct Callback_TabContentTransitionProxy_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TabContentTransitionProxy value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TabContentTransitionProxy value0);
} Callback_TabContentTransitionProxy_Void;
typedef struct Opt_Callback_TabContentTransitionProxy_Void {
    Ark_Tag tag;
    Callback_TabContentTransitionProxy_Void value;
} Opt_Callback_TabContentTransitionProxy_Void;
typedef struct Callback_TerminationInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TerminationInfo value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TerminationInfo value0);
} Callback_TerminationInfo_Void;
typedef struct Opt_Callback_TerminationInfo_Void {
    Ark_Tag tag;
    Callback_TerminationInfo_Void value;
} Opt_Callback_TerminationInfo_Void;
typedef struct Callback_TextPickerResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TextPickerResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextPickerResult value);
} Callback_TextPickerResult_Void;
typedef struct Opt_Callback_TextPickerResult_Void {
    Ark_Tag tag;
    Callback_TextPickerResult_Void value;
} Opt_Callback_TextPickerResult_Void;
typedef struct Callback_TextRange_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TextRange value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange value0);
} Callback_TextRange_Void;
typedef struct Opt_Callback_TextRange_Void {
    Ark_Tag tag;
    Callback_TextRange_Void value;
} Opt_Callback_TextRange_Void;
typedef struct Callback_TimePickerResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TimePickerResult value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult value0);
} Callback_TimePickerResult_Void;
typedef struct Opt_Callback_TimePickerResult_Void {
    Ark_Tag tag;
    Callback_TimePickerResult_Void value;
} Opt_Callback_TimePickerResult_Void;
typedef struct Callback_TouchEvent_HitTestMode {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TouchEvent value0, const Callback_HitTestMode_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent value0, const Callback_HitTestMode_Void continuation);
} Callback_TouchEvent_HitTestMode;
typedef struct Opt_Callback_TouchEvent_HitTestMode {
    Ark_Tag tag;
    Callback_TouchEvent_HitTestMode value;
} Opt_Callback_TouchEvent_HitTestMode;
typedef struct Callback_TouchEvent_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TouchEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event);
} Callback_TouchEvent_Void;
typedef struct Opt_Callback_TouchEvent_Void {
    Ark_Tag tag;
    Callback_TouchEvent_Void value;
} Opt_Callback_TouchEvent_Void;
typedef struct Callback_TouchResult_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TouchResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchResult value);
} Callback_TouchResult_Void;
typedef struct Opt_Callback_TouchResult_Void {
    Ark_Tag tag;
    Callback_TouchResult_Void value;
} Opt_Callback_TouchResult_Void;
typedef struct Callback_Tuple_Number_Number_Number_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Tuple_Number_Number_Number_Number value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Tuple_Number_Number_Number_Number value);
} Callback_Tuple_Number_Number_Number_Number_Void;
typedef struct Opt_Callback_Tuple_Number_Number_Number_Number_Void {
    Ark_Tag tag;
    Callback_Tuple_Number_Number_Number_Number_Void value;
} Opt_Callback_Tuple_Number_Number_Number_Number_Void;
typedef struct Callback_Tuple_Number_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Tuple_Number_Number value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Tuple_Number_Number value);
} Callback_Tuple_Number_Number_Void;
typedef struct Opt_Callback_Tuple_Number_Number_Void {
    Ark_Tag tag;
    Callback_Tuple_Number_Number_Void value;
} Opt_Callback_Tuple_Number_Number_Void;
typedef struct Callback_UIExtensionProxy_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0);
} Callback_UIExtensionProxy_Void;
typedef struct Opt_Callback_UIExtensionProxy_Void {
    Ark_Tag tag;
    Callback_UIExtensionProxy_Void value;
} Opt_Callback_UIExtensionProxy_Void;
typedef struct Callback_Union_CustomBuilder_DragItemInfo_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_CustomBuilder_DragItemInfo value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_CustomBuilder_DragItemInfo value);
} Callback_Union_CustomBuilder_DragItemInfo_Void;
typedef struct Opt_Callback_Union_CustomBuilder_DragItemInfo_Void {
    Ark_Tag tag;
    Callback_Union_CustomBuilder_DragItemInfo_Void value;
} Opt_Callback_Union_CustomBuilder_DragItemInfo_Void;
typedef struct Callback_Union_Number_Array_Number_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected);
} Callback_Union_Number_Array_Number_Void;
typedef struct Opt_Callback_Union_Number_Array_Number_Void {
    Ark_Tag tag;
    Callback_Union_Number_Array_Number_Void value;
} Opt_Callback_Union_Number_Array_Number_Void;
typedef struct Callback_Union_ResourceStr_Array_ResourceStr_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Array_ResourceStr value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Array_ResourceStr value);
} Callback_Union_ResourceStr_Array_ResourceStr_Void;
typedef struct Opt_Callback_Union_ResourceStr_Array_ResourceStr_Void {
    Ark_Tag tag;
    Callback_Union_ResourceStr_Array_ResourceStr_Void value;
} Opt_Callback_Union_ResourceStr_Array_ResourceStr_Void;
typedef struct Callback_Union_ResourceStr_Resource_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text);
} Callback_Union_ResourceStr_Resource_String_Void;
typedef struct Opt_Callback_Union_ResourceStr_Resource_String_Void {
    Ark_Tag tag;
    Callback_Union_ResourceStr_Resource_String_Void value;
} Opt_Callback_Union_ResourceStr_Resource_String_Void;
typedef struct Callback_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} Callback_Void;
typedef struct Opt_Callback_Void {
    Ark_Tag tag;
    Callback_Void value;
} Opt_Callback_Void;
typedef struct Callback_WebKeyboardOptions_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_WebKeyboardOptions value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebKeyboardOptions value);
} Callback_WebKeyboardOptions_Void;
typedef struct Opt_Callback_WebKeyboardOptions_Void {
    Ark_Tag tag;
    Callback_WebKeyboardOptions_Void value;
} Opt_Callback_WebKeyboardOptions_Void;
typedef struct Callback_WebResourceResponse_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_WebResourceResponse value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebResourceResponse value);
} Callback_WebResourceResponse_Void;
typedef struct Opt_Callback_WebResourceResponse_Void {
    Ark_Tag tag;
    Callback_WebResourceResponse_Void value;
} Opt_Callback_WebResourceResponse_Void;
typedef struct CheckBoxModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_CheckBoxConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_CheckBoxConfiguration config, const Callback_Pointer_Void continuation);
} CheckBoxModifierBuilder;
typedef struct Opt_CheckBoxModifierBuilder {
    Ark_Tag tag;
    CheckBoxModifierBuilder value;
} Opt_CheckBoxModifierBuilder;
typedef struct CompatibleInitCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_CompatibleComponentInfo_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_CompatibleComponentInfo_Void continuation);
} CompatibleInitCallback;
typedef struct Opt_CompatibleInitCallback {
    Ark_Tag tag;
    CompatibleInitCallback value;
} Opt_CompatibleInitCallback;
typedef struct CompatibleUpdateCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CustomObject component);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomObject component);
} CompatibleUpdateCallback;
typedef struct Opt_CompatibleUpdateCallback {
    Ark_Tag tag;
    CompatibleUpdateCallback value;
} Opt_CompatibleUpdateCallback;
typedef struct ContentDidScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength);
} ContentDidScrollCallback;
typedef struct Opt_ContentDidScrollCallback {
    Ark_Tag tag;
    ContentDidScrollCallback value;
} Opt_ContentDidScrollCallback;
typedef struct ContentWillScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation);
} ContentWillScrollCallback;
typedef struct Opt_ContentWillScrollCallback {
    Ark_Tag tag;
    ContentWillScrollCallback value;
} Opt_ContentWillScrollCallback;
typedef struct Context_getGroupDir_Callback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String result);
} Context_getGroupDir_Callback;
typedef struct Opt_Context_getGroupDir_Callback {
    Ark_Tag tag;
    Context_getGroupDir_Callback value;
} Opt_Context_getGroupDir_Callback;
typedef struct CustomNodeBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation);
} CustomNodeBuilder;
typedef struct Opt_CustomNodeBuilder {
    Ark_Tag tag;
    CustomNodeBuilder value;
} Opt_CustomNodeBuilder;
typedef struct CustomStyles {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String instance);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String instance);
} CustomStyles;
typedef struct Opt_CustomStyles {
    Ark_Tag tag;
    CustomStyles value;
} Opt_CustomStyles;
typedef struct DataPanelModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_DataPanelConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_DataPanelConfiguration config, const Callback_Pointer_Void continuation);
} DataPanelModifierBuilder;
typedef struct Opt_DataPanelModifierBuilder {
    Ark_Tag tag;
    DataPanelModifierBuilder value;
} Opt_DataPanelModifierBuilder;
typedef struct EditableTextOnChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options);
} EditableTextOnChangeCallback;
typedef struct Opt_EditableTextOnChangeCallback {
    Ark_Tag tag;
    EditableTextOnChangeCallback value;
} Opt_EditableTextOnChangeCallback;
typedef struct ErrorCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_BusinessError error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BusinessError error);
} ErrorCallback;
typedef struct Opt_ErrorCallback {
    Ark_Tag tag;
    ErrorCallback value;
} Opt_ErrorCallback;
typedef struct GaugeModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_GaugeConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_GaugeConfiguration config, const Callback_Pointer_Void continuation);
} GaugeModifierBuilder;
typedef struct Opt_GaugeModifierBuilder {
    Ark_Tag tag;
    GaugeModifierBuilder value;
} Opt_GaugeModifierBuilder;
typedef struct GestureRecognizerJudgeBeginCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation);
} GestureRecognizerJudgeBeginCallback;
typedef struct Opt_GestureRecognizerJudgeBeginCallback {
    Ark_Tag tag;
    GestureRecognizerJudgeBeginCallback value;
} Opt_GestureRecognizerJudgeBeginCallback;
typedef struct GetItemMainSizeByIndex {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Number_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Number_Void continuation);
} GetItemMainSizeByIndex;
typedef struct Opt_GetItemMainSizeByIndex {
    Ark_Tag tag;
    GetItemMainSizeByIndex value;
} Opt_GetItemMainSizeByIndex;
typedef struct HoverCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event);
} HoverCallback;
typedef struct Opt_HoverCallback {
    Ark_Tag tag;
    HoverCallback value;
} Opt_HoverCallback;
typedef struct ImageCompleteCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ImageLoadResult result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageLoadResult result);
} ImageCompleteCallback;
typedef struct Opt_ImageCompleteCallback {
    Ark_Tag tag;
    ImageCompleteCallback value;
} Opt_ImageCompleteCallback;
typedef struct ImageErrorCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ImageError error);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageError error);
} ImageErrorCallback;
typedef struct Opt_ImageErrorCallback {
    Ark_Tag tag;
    ImageErrorCallback value;
} Opt_ImageErrorCallback;
typedef struct ImageOnCompleteCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_ImageCompleteEvent loadEvent);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_ImageCompleteEvent loadEvent);
} ImageOnCompleteCallback;
typedef struct Opt_ImageOnCompleteCallback {
    Ark_Tag tag;
    ImageOnCompleteCallback value;
} Opt_ImageOnCompleteCallback;
typedef struct InterceptionModeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_NavigationMode mode);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationMode mode);
} InterceptionModeCallback;
typedef struct Opt_InterceptionModeCallback {
    Ark_Tag tag;
    InterceptionModeCallback value;
} Opt_InterceptionModeCallback;
typedef struct InterceptionShowCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_NavDestinationContext_NavBar from, const Ark_Union_NavDestinationContext_NavBar to, Ark_NavigationOperation operation, const Ark_Boolean isAnimated);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_NavDestinationContext_NavBar from, const Ark_Union_NavDestinationContext_NavBar to, Ark_NavigationOperation operation, const Ark_Boolean isAnimated);
} InterceptionShowCallback;
typedef struct Opt_InterceptionShowCallback {
    Ark_Tag tag;
    InterceptionShowCallback value;
} Opt_InterceptionShowCallback;
typedef struct LoadingProgressModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_LoadingProgressConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_LoadingProgressConfiguration config, const Callback_Pointer_Void continuation);
} LoadingProgressModifierBuilder;
typedef struct Opt_LoadingProgressModifierBuilder {
    Ark_Tag tag;
    LoadingProgressModifierBuilder value;
} Opt_LoadingProgressModifierBuilder;
typedef struct Map_AxisModel_Number {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_AxisModel* keys;
    Ark_Number* values;
} Map_AxisModel_Number;
typedef struct Opt_Map_AxisModel_Number {
    Ark_Tag tag;
    Map_AxisModel_Number value;
} Opt_Map_AxisModel_Number;
typedef struct Map_Number_text_RunMetrics {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_Number* keys;
    Ark_text_RunMetrics* values;
} Map_Number_text_RunMetrics;
typedef struct Opt_Map_Number_text_RunMetrics {
    Ark_Tag tag;
    Map_Number_text_RunMetrics value;
} Opt_Map_Number_text_RunMetrics;
typedef struct Map_String_ComponentContent {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_String* keys;
    Ark_ComponentContent* values;
} Map_String_ComponentContent;
typedef struct Opt_Map_String_ComponentContent {
    Ark_Tag tag;
    Map_String_ComponentContent value;
} Opt_Map_String_ComponentContent;
typedef struct Map_String_Int64 {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_String* keys;
    Ark_Int64* values;
} Map_String_Int64;
typedef struct Opt_Map_String_Int64 {
    Ark_Tag tag;
    Map_String_Int64 value;
} Opt_Map_String_Int64;
typedef struct Map_String_Object {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_String* keys;
    Ark_Object* values;
} Map_String_Object;
typedef struct Opt_Map_String_Object {
    Ark_Tag tag;
    Map_String_Object value;
} Opt_Map_String_Object;
typedef struct Map_String_String {
    /* kind: ContainerType */
    Ark_Int32 size;
    Ark_String* keys;
    Ark_String* values;
} Map_String_String;
typedef struct Opt_Map_String_String {
    Ark_Tag tag;
    Map_String_String value;
} Opt_Map_String_String;
typedef struct MenuCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end);
} MenuCallback;
typedef struct Opt_MenuCallback {
    Ark_Tag tag;
    MenuCallback value;
} Opt_MenuCallback;
typedef struct MenuItemModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_MenuItemConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_MenuItemConfiguration config, const Callback_Pointer_Void continuation);
} MenuItemModifierBuilder;
typedef struct Opt_MenuItemModifierBuilder {
    Ark_Tag tag;
    MenuItemModifierBuilder value;
} Opt_MenuItemModifierBuilder;
typedef struct MenuOnAppearCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end);
} MenuOnAppearCallback;
typedef struct Opt_MenuOnAppearCallback {
    Ark_Tag tag;
    MenuOnAppearCallback value;
} Opt_MenuOnAppearCallback;
typedef struct ModifierKeyStateGetter {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation);
} ModifierKeyStateGetter;
typedef struct Opt_ModifierKeyStateGetter {
    Ark_Tag tag;
    ModifierKeyStateGetter value;
} Opt_ModifierKeyStateGetter;
typedef struct NavDestinationTransitionDelegate {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation);
} NavDestinationTransitionDelegate;
typedef struct Opt_NavDestinationTransitionDelegate {
    Ark_Tag tag;
    NavDestinationTransitionDelegate value;
} Opt_NavDestinationTransitionDelegate;
typedef struct NavExtender_OnUpdateStack {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} NavExtender_OnUpdateStack;
typedef struct Opt_NavExtender_OnUpdateStack {
    Ark_Tag tag;
    NavExtender_OnUpdateStack value;
} Opt_NavExtender_OnUpdateStack;
typedef struct OnAdsBlockedCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details);
} OnAdsBlockedCallback;
typedef struct Opt_OnAdsBlockedCallback {
    Ark_Tag tag;
    OnAdsBlockedCallback value;
} Opt_OnAdsBlockedCallback;
typedef struct OnAlphabetIndexerPopupSelectCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index);
} OnAlphabetIndexerPopupSelectCallback;
typedef struct Opt_OnAlphabetIndexerPopupSelectCallback {
    Ark_Tag tag;
    OnAlphabetIndexerPopupSelectCallback value;
} Opt_OnAlphabetIndexerPopupSelectCallback;
typedef struct OnAlphabetIndexerRequestPopupDataCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation);
} OnAlphabetIndexerRequestPopupDataCallback;
typedef struct Opt_OnAlphabetIndexerRequestPopupDataCallback {
    Ark_Tag tag;
    OnAlphabetIndexerRequestPopupDataCallback value;
} Opt_OnAlphabetIndexerRequestPopupDataCallback;
typedef struct OnAlphabetIndexerSelectCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index);
} OnAlphabetIndexerSelectCallback;
typedef struct Opt_OnAlphabetIndexerSelectCallback {
    Ark_Tag tag;
    OnAlphabetIndexerSelectCallback value;
} Opt_OnAlphabetIndexerSelectCallback;
typedef struct OnCheckboxChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value);
} OnCheckboxChangeCallback;
typedef struct Opt_OnCheckboxChangeCallback {
    Ark_Tag tag;
    OnCheckboxChangeCallback value;
} Opt_OnCheckboxChangeCallback;
typedef struct OnCheckboxGroupChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value);
} OnCheckboxGroupChangeCallback;
typedef struct Opt_OnCheckboxGroupChangeCallback {
    Ark_Tag tag;
    OnCheckboxGroupChangeCallback value;
} Opt_OnCheckboxGroupChangeCallback;
typedef struct OnContentScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY);
} OnContentScrollCallback;
typedef struct Opt_OnContentScrollCallback {
    Ark_Tag tag;
    OnContentScrollCallback value;
} Opt_OnContentScrollCallback;
typedef struct OnContextMenuHideCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} OnContextMenuHideCallback;
typedef struct Opt_OnContextMenuHideCallback {
    Ark_Tag tag;
    OnContextMenuHideCallback value;
} Opt_OnContextMenuHideCallback;
typedef struct OnCreateMenuCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Array_TextMenuItem menuItems, const Callback_Array_TextMenuItem_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_TextMenuItem menuItems, const Callback_Array_TextMenuItem_Void continuation);
} OnCreateMenuCallback;
typedef struct Opt_OnCreateMenuCallback {
    Ark_Tag tag;
    OnCreateMenuCallback value;
} Opt_OnCreateMenuCallback;
typedef struct OnDidChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter);
} OnDidChangeCallback;
typedef struct Opt_OnDidChangeCallback {
    Ark_Tag tag;
    OnDidChangeCallback value;
} Opt_OnDidChangeCallback;
typedef struct OnDragEventCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams);
} OnDragEventCallback;
typedef struct Opt_OnDragEventCallback {
    Ark_Tag tag;
    OnDragEventCallback value;
} Opt_OnDragEventCallback;
typedef struct OnFirstMeaningfulPaintCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint);
} OnFirstMeaningfulPaintCallback;
typedef struct Opt_OnFirstMeaningfulPaintCallback {
    Ark_Tag tag;
    OnFirstMeaningfulPaintCallback value;
} Opt_OnFirstMeaningfulPaintCallback;
typedef struct OnFoldStatusChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event);
} OnFoldStatusChangeCallback;
typedef struct Opt_OnFoldStatusChangeCallback {
    Ark_Tag tag;
    OnFoldStatusChangeCallback value;
} Opt_OnFoldStatusChangeCallback;
typedef struct OnFullScreenEnterCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event);
} OnFullScreenEnterCallback;
typedef struct Opt_OnFullScreenEnterCallback {
    Ark_Tag tag;
    OnFullScreenEnterCallback value;
} Opt_OnFullScreenEnterCallback;
typedef struct OnHoverCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean status, const Ark_HoverEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean status, const Ark_HoverEvent event);
} OnHoverCallback;
typedef struct Opt_OnHoverCallback {
    Ark_Tag tag;
    OnHoverCallback value;
} Opt_OnHoverCallback;
typedef struct OnHoverStatusChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_HoverEventParam param);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEventParam param);
} OnHoverStatusChangeCallback;
typedef struct Opt_OnHoverStatusChangeCallback {
    Ark_Tag tag;
    OnHoverStatusChangeCallback value;
} Opt_OnHoverStatusChangeCallback;
typedef struct OnIntelligentTrackingPreventionCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details);
} OnIntelligentTrackingPreventionCallback;
typedef struct Opt_OnIntelligentTrackingPreventionCallback {
    Ark_Tag tag;
    OnIntelligentTrackingPreventionCallback value;
} Opt_OnIntelligentTrackingPreventionCallback;
typedef struct OnItemDragStartCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation);
} OnItemDragStartCallback;
typedef struct Opt_OnItemDragStartCallback {
    Ark_Tag tag;
    OnItemDragStartCallback value;
} Opt_OnItemDragStartCallback;
typedef struct OnLargestContentfulPaintCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint);
} OnLargestContentfulPaintCallback;
typedef struct Opt_OnLargestContentfulPaintCallback {
    Ark_Tag tag;
    OnLargestContentfulPaintCallback value;
} Opt_OnLargestContentfulPaintCallback;
typedef struct OnLinearIndicatorChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress);
} OnLinearIndicatorChangeCallback;
typedef struct Opt_OnLinearIndicatorChangeCallback {
    Ark_Tag tag;
    OnLinearIndicatorChangeCallback value;
} Opt_OnLinearIndicatorChangeCallback;
typedef struct OnMenuItemClickCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TextMenuItem menuItem, const Ark_TextRange range, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextMenuItem menuItem, const Ark_TextRange range, const Callback_Boolean_Void continuation);
} OnMenuItemClickCallback;
typedef struct Opt_OnMenuItemClickCallback {
    Ark_Tag tag;
    OnMenuItemClickCallback value;
} Opt_OnMenuItemClickCallback;
typedef struct OnMoveHandler {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to);
} OnMoveHandler;
typedef struct Opt_OnMoveHandler {
    Ark_Tag tag;
    OnMoveHandler value;
} Opt_OnMoveHandler;
typedef struct OnNativeEmbedVisibilityChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo);
} OnNativeEmbedVisibilityChangeCallback;
typedef struct Opt_OnNativeEmbedVisibilityChangeCallback {
    Ark_Tag tag;
    OnNativeEmbedVisibilityChangeCallback value;
} Opt_OnNativeEmbedVisibilityChangeCallback;
typedef struct OnNativeLoadCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_Object event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object event);
} OnNativeLoadCallback;
typedef struct Opt_OnNativeLoadCallback {
    Ark_Tag tag;
    OnNativeLoadCallback value;
} Opt_OnNativeLoadCallback;
typedef struct OnNavigationEntryCommittedCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails);
} OnNavigationEntryCommittedCallback;
typedef struct Opt_OnNavigationEntryCommittedCallback {
    Ark_Tag tag;
    OnNavigationEntryCommittedCallback value;
} Opt_OnNavigationEntryCommittedCallback;
typedef struct OnOverrideUrlLoadingCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation);
} OnOverrideUrlLoadingCallback;
typedef struct Opt_OnOverrideUrlLoadingCallback {
    Ark_Tag tag;
    OnOverrideUrlLoadingCallback value;
} Opt_OnOverrideUrlLoadingCallback;
typedef struct OnPasteCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event);
} OnPasteCallback;
typedef struct Opt_OnPasteCallback {
    Ark_Tag tag;
    OnPasteCallback value;
} Opt_OnPasteCallback;
typedef struct OnRadioChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isChecked);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isChecked);
} OnRadioChangeCallback;
typedef struct Opt_OnRadioChangeCallback {
    Ark_Tag tag;
    OnRadioChangeCallback value;
} Opt_OnRadioChangeCallback;
typedef struct OnRatingChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number rating);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number rating);
} OnRatingChangeCallback;
typedef struct Opt_OnRatingChangeCallback {
    Ark_Tag tag;
    OnRatingChangeCallback value;
} Opt_OnRatingChangeCallback;
typedef struct OnRenderProcessNotRespondingCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data);
} OnRenderProcessNotRespondingCallback;
typedef struct Opt_OnRenderProcessNotRespondingCallback {
    Ark_Tag tag;
    OnRenderProcessNotRespondingCallback value;
} Opt_OnRenderProcessNotRespondingCallback;
typedef struct OnRenderProcessRespondingCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} OnRenderProcessRespondingCallback;
typedef struct Opt_OnRenderProcessRespondingCallback {
    Ark_Tag tag;
    OnRenderProcessRespondingCallback value;
} Opt_OnRenderProcessRespondingCallback;
typedef struct OnSafeBrowsingCheckResultCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_ThreatType threatType);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ThreatType threatType);
} OnSafeBrowsingCheckResultCallback;
typedef struct Opt_OnSafeBrowsingCheckResultCallback {
    Ark_Tag tag;
    OnSafeBrowsingCheckResultCallback value;
} Opt_OnSafeBrowsingCheckResultCallback;
typedef struct OnScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState);
} OnScrollCallback;
typedef struct Opt_OnScrollCallback {
    Ark_Tag tag;
    OnScrollCallback value;
} Opt_OnScrollCallback;
typedef struct OnScrollEdgeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_Edge side);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_Edge side);
} OnScrollEdgeCallback;
typedef struct Opt_OnScrollEdgeCallback {
    Ark_Tag tag;
    OnScrollEdgeCallback value;
} Opt_OnScrollEdgeCallback;
typedef struct OnScrollFrameBeginCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation);
} OnScrollFrameBeginCallback;
typedef struct Opt_OnScrollFrameBeginCallback {
    Ark_Tag tag;
    OnScrollFrameBeginCallback value;
} Opt_OnScrollFrameBeginCallback;
typedef struct OnScrollVisibleContentChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end);
} OnScrollVisibleContentChangeCallback;
typedef struct Opt_OnScrollVisibleContentChangeCallback {
    Ark_Tag tag;
    OnScrollVisibleContentChangeCallback value;
} Opt_OnScrollVisibleContentChangeCallback;
typedef struct OnSelectCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr);
} OnSelectCallback;
typedef struct Opt_OnSelectCallback {
    Ark_Tag tag;
    OnSelectCallback value;
} Opt_OnSelectCallback;
typedef struct OnSslErrorEventCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent);
} OnSslErrorEventCallback;
typedef struct Opt_OnSslErrorEventCallback {
    Ark_Tag tag;
    OnSslErrorEventCallback value;
} Opt_OnSslErrorEventCallback;
typedef struct OnSubmitCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event);
} OnSubmitCallback;
typedef struct Opt_OnSubmitCallback {
    Ark_Tag tag;
    OnSubmitCallback value;
} Opt_OnSubmitCallback;
typedef struct OnSwiperAnimationEndCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo);
} OnSwiperAnimationEndCallback;
typedef struct Opt_OnSwiperAnimationEndCallback {
    Ark_Tag tag;
    OnSwiperAnimationEndCallback value;
} Opt_OnSwiperAnimationEndCallback;
typedef struct OnSwiperAnimationStartCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo);
} OnSwiperAnimationStartCallback;
typedef struct Opt_OnSwiperAnimationStartCallback {
    Ark_Tag tag;
    OnSwiperAnimationStartCallback value;
} Opt_OnSwiperAnimationStartCallback;
typedef struct OnSwiperGestureSwipeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo);
} OnSwiperGestureSwipeCallback;
typedef struct Opt_OnSwiperGestureSwipeCallback {
    Ark_Tag tag;
    OnSwiperGestureSwipeCallback value;
} Opt_OnSwiperGestureSwipeCallback;
typedef struct OnTabsAnimationEndCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo);
} OnTabsAnimationEndCallback;
typedef struct Opt_OnTabsAnimationEndCallback {
    Ark_Tag tag;
    OnTabsAnimationEndCallback value;
} Opt_OnTabsAnimationEndCallback;
typedef struct OnTabsAnimationStartCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo);
} OnTabsAnimationStartCallback;
typedef struct Opt_OnTabsAnimationStartCallback {
    Ark_Tag tag;
    OnTabsAnimationStartCallback value;
} Opt_OnTabsAnimationStartCallback;
typedef struct OnTabsContentWillChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation);
} OnTabsContentWillChangeCallback;
typedef struct Opt_OnTabsContentWillChangeCallback {
    Ark_Tag tag;
    OnTabsContentWillChangeCallback value;
} Opt_OnTabsContentWillChangeCallback;
typedef struct OnTabsGestureSwipeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo);
} OnTabsGestureSwipeCallback;
typedef struct Opt_OnTabsGestureSwipeCallback {
    Ark_Tag tag;
    OnTabsGestureSwipeCallback value;
} Opt_OnTabsGestureSwipeCallback;
typedef struct OnTextPickerChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index);
} OnTextPickerChangeCallback;
typedef struct Opt_OnTextPickerChangeCallback {
    Ark_Tag tag;
    OnTextPickerChangeCallback value;
} Opt_OnTextPickerChangeCallback;
typedef struct OnTextSelectionChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd);
} OnTextSelectionChangeCallback;
typedef struct Opt_OnTextSelectionChangeCallback {
    Ark_Tag tag;
    OnTextSelectionChangeCallback value;
} Opt_OnTextSelectionChangeCallback;
typedef struct OnTimePickerChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_TimePickerResult result);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult result);
} OnTimePickerChangeCallback;
typedef struct Opt_OnTimePickerChangeCallback {
    Ark_Tag tag;
    OnTimePickerChangeCallback value;
} Opt_OnTimePickerChangeCallback;
typedef struct OnViewportFitChangedCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_ViewportFit viewportFit);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ViewportFit viewportFit);
} OnViewportFitChangedCallback;
typedef struct Opt_OnViewportFitChangedCallback {
    Ark_Tag tag;
    OnViewportFitChangedCallback value;
} Opt_OnViewportFitChangedCallback;
typedef struct OnWillScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation);
} OnWillScrollCallback;
typedef struct Opt_OnWillScrollCallback {
    Ark_Tag tag;
    OnWillScrollCallback value;
} Opt_OnWillScrollCallback;
typedef struct PageMapBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param);
} PageMapBuilder;
typedef struct Opt_PageMapBuilder {
    Ark_Tag tag;
    PageMapBuilder value;
} Opt_PageMapBuilder;
typedef struct PageTransitionCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_RouteType type, const Ark_Number progress);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_RouteType type, const Ark_Number progress);
} PageTransitionCallback;
typedef struct Opt_PageTransitionCallback {
    Ark_Tag tag;
    PageTransitionCallback value;
} Opt_PageTransitionCallback;
typedef struct PasteEventCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Opt_PasteEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_PasteEvent event);
} PasteEventCallback;
typedef struct Opt_PasteEventCallback {
    Ark_Tag tag;
    PasteEventCallback value;
} Opt_PasteEventCallback;
typedef struct PluginErrorCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_PluginErrorData info);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PluginErrorData info);
} PluginErrorCallback;
typedef struct Opt_PluginErrorCallback {
    Ark_Tag tag;
    PluginErrorCallback value;
} Opt_PluginErrorCallback;
typedef struct PopupStateChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_PopupStateChangeParam event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopupStateChangeParam event);
} PopupStateChangeCallback;
typedef struct Opt_PopupStateChangeCallback {
    Ark_Tag tag;
    PopupStateChangeCallback value;
} Opt_PopupStateChangeCallback;
typedef struct Profiler_Callback_String_Void {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String info);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String info);
} Profiler_Callback_String_Void;
typedef struct Opt_Profiler_Callback_String_Void {
    Ark_Tag tag;
    Profiler_Callback_String_Void value;
} Opt_Profiler_Callback_String_Void;
typedef struct ProgressModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ProgressConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ProgressConfiguration config, const Callback_Pointer_Void continuation);
} ProgressModifierBuilder;
typedef struct Opt_ProgressModifierBuilder {
    Ark_Tag tag;
    ProgressModifierBuilder value;
} Opt_ProgressModifierBuilder;
typedef struct RadioModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RadioConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RadioConfiguration config, const Callback_Pointer_Void continuation);
} RadioModifierBuilder;
typedef struct Opt_RadioModifierBuilder {
    Ark_Tag tag;
    RadioModifierBuilder value;
} Opt_RadioModifierBuilder;
typedef struct RatingModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RatingConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RatingConfiguration config, const Callback_Pointer_Void continuation);
} RatingModifierBuilder;
typedef struct Opt_RatingModifierBuilder {
    Ark_Tag tag;
    RatingModifierBuilder value;
} Opt_RatingModifierBuilder;
typedef struct RestrictedWorker_onerror_Callback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ErrorEvent ev);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ErrorEvent ev);
} RestrictedWorker_onerror_Callback;
typedef struct Opt_RestrictedWorker_onerror_Callback {
    Ark_Tag tag;
    RestrictedWorker_onerror_Callback value;
} Opt_RestrictedWorker_onerror_Callback;
typedef struct RestrictedWorker_onexit_Callback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number code);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number code);
} RestrictedWorker_onexit_Callback;
typedef struct Opt_RestrictedWorker_onexit_Callback {
    Ark_Tag tag;
    RestrictedWorker_onexit_Callback value;
} Opt_RestrictedWorker_onexit_Callback;
typedef struct RestrictedWorker_onmessage_Callback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_MessageEvents event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MessageEvents event);
} RestrictedWorker_onmessage_Callback;
typedef struct Opt_RestrictedWorker_onmessage_Callback {
    Ark_Tag tag;
    RestrictedWorker_onmessage_Callback value;
} Opt_RestrictedWorker_onmessage_Callback;
typedef struct ReuseIdCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Callback_String_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_String_Void continuation);
} ReuseIdCallback;
typedef struct Opt_ReuseIdCallback {
    Ark_Tag tag;
    ReuseIdCallback value;
} Opt_ReuseIdCallback;
typedef struct ScrollOnScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState);
} ScrollOnScrollCallback;
typedef struct Opt_ScrollOnScrollCallback {
    Ark_Tag tag;
    ScrollOnScrollCallback value;
} Opt_ScrollOnScrollCallback;
typedef struct ScrollOnWillScrollCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_OffsetResult_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_OffsetResult_Void continuation);
} ScrollOnWillScrollCallback;
typedef struct Opt_ScrollOnWillScrollCallback {
    Ark_Tag tag;
    ScrollOnWillScrollCallback value;
} Opt_ScrollOnWillScrollCallback;
typedef struct SearchSubmitCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event);
} SearchSubmitCallback;
typedef struct Opt_SearchSubmitCallback {
    Ark_Tag tag;
    SearchSubmitCallback value;
} Opt_SearchSubmitCallback;
typedef struct SearchValueCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_String value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value);
} SearchValueCallback;
typedef struct Opt_SearchValueCallback {
    Ark_Tag tag;
    SearchValueCallback value;
} Opt_SearchValueCallback;
typedef struct ShouldBuiltInRecognizerParallelWithCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation);
} ShouldBuiltInRecognizerParallelWithCallback;
typedef struct Opt_ShouldBuiltInRecognizerParallelWithCallback {
    Ark_Tag tag;
    ShouldBuiltInRecognizerParallelWithCallback value;
} Opt_ShouldBuiltInRecognizerParallelWithCallback;
typedef struct SizeChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue);
} SizeChangeCallback;
typedef struct Opt_SizeChangeCallback {
    Ark_Tag tag;
    SizeChangeCallback value;
} Opt_SizeChangeCallback;
typedef struct SliderModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_SliderConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_SliderConfiguration config, const Callback_Pointer_Void continuation);
} SliderModifierBuilder;
typedef struct Opt_SliderModifierBuilder {
    Ark_Tag tag;
    SliderModifierBuilder value;
} Opt_SliderModifierBuilder;
typedef struct SliderTriggerChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode);
} SliderTriggerChangeCallback;
typedef struct Opt_SliderTriggerChangeCallback {
    Ark_Tag tag;
    SliderTriggerChangeCallback value;
} Opt_SliderTriggerChangeCallback;
typedef struct StyledStringMarshallCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation);
} StyledStringMarshallCallback;
typedef struct Opt_StyledStringMarshallCallback {
    Ark_Tag tag;
    StyledStringMarshallCallback value;
} Opt_StyledStringMarshallCallback;
typedef struct StyledStringUnmarshallCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation);
} StyledStringUnmarshallCallback;
typedef struct Opt_StyledStringUnmarshallCallback {
    Ark_Tag tag;
    StyledStringUnmarshallCallback value;
} Opt_StyledStringUnmarshallCallback;
typedef struct SubmitCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event);
} SubmitCallback;
typedef struct Opt_SubmitCallback {
    Ark_Tag tag;
    SubmitCallback value;
} Opt_SubmitCallback;
typedef struct TabsCustomContentTransitionCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation);
} TabsCustomContentTransitionCallback;
typedef struct Opt_TabsCustomContentTransitionCallback {
    Ark_Tag tag;
    TabsCustomContentTransitionCallback value;
} Opt_TabsCustomContentTransitionCallback;
typedef struct text_Callback_Number_Number_Boolean_Boolean {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number offset, const Ark_Number index, const Ark_Boolean leadingEdge, const Callback_Boolean_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, const Ark_Number index, const Ark_Boolean leadingEdge, const Callback_Boolean_Void continuation);
} text_Callback_Number_Number_Boolean_Boolean;
typedef struct Opt_text_Callback_Number_Number_Boolean_Boolean {
    Ark_Tag tag;
    text_Callback_Number_Number_Boolean_Boolean value;
} Opt_text_Callback_Number_Number_Boolean_Boolean;
typedef struct TextAreaSubmitCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event);
} TextAreaSubmitCallback;
typedef struct Opt_TextAreaSubmitCallback {
    Ark_Tag tag;
    TextAreaSubmitCallback value;
} Opt_TextAreaSubmitCallback;
typedef struct TextClockModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextClockConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextClockConfiguration config, const Callback_Pointer_Void continuation);
} TextClockModifierBuilder;
typedef struct Opt_TextClockModifierBuilder {
    Ark_Tag tag;
    TextClockModifierBuilder value;
} Opt_TextClockModifierBuilder;
typedef struct TextFieldValueCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_ResourceStr value);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ResourceStr value);
} TextFieldValueCallback;
typedef struct Opt_TextFieldValueCallback {
    Ark_Tag tag;
    TextFieldValueCallback value;
} Opt_TextFieldValueCallback;
typedef struct TextPickerEnterSelectedAreaCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index);
} TextPickerEnterSelectedAreaCallback;
typedef struct Opt_TextPickerEnterSelectedAreaCallback {
    Ark_Tag tag;
    TextPickerEnterSelectedAreaCallback value;
} Opt_TextPickerEnterSelectedAreaCallback;
typedef struct TextPickerScrollStopCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index);
} TextPickerScrollStopCallback;
typedef struct Opt_TextPickerScrollStopCallback {
    Ark_Tag tag;
    TextPickerScrollStopCallback value;
} Opt_TextPickerScrollStopCallback;
typedef struct TextTimerModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextTimerConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextTimerConfiguration config, const Callback_Pointer_Void continuation);
} TextTimerModifierBuilder;
typedef struct Opt_TextTimerModifierBuilder {
    Ark_Tag tag;
    TextTimerModifierBuilder value;
} Opt_TextTimerModifierBuilder;
typedef struct ToggleModifierBuilder {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ToggleConfiguration config, const Callback_Pointer_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ToggleConfiguration config, const Callback_Pointer_Void continuation);
} ToggleModifierBuilder;
typedef struct Opt_ToggleModifierBuilder {
    Ark_Tag tag;
    ToggleModifierBuilder value;
} Opt_ToggleModifierBuilder;
typedef struct TransitionFinishCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean transitionIn);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean transitionIn);
} TransitionFinishCallback;
typedef struct Opt_TransitionFinishCallback {
    Ark_Tag tag;
    TransitionFinishCallback value;
} Opt_TransitionFinishCallback;
typedef struct Type_CommonMethod_onDragStart {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation);
} Type_CommonMethod_onDragStart;
typedef struct Opt_Type_CommonMethod_onDragStart {
    Ark_Tag tag;
    Type_CommonMethod_onDragStart value;
} Opt_Type_CommonMethod_onDragStart;
typedef struct Type_NavigationAttribute_customNavContentTransition {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation);
} Type_NavigationAttribute_customNavContentTransition;
typedef struct Opt_Type_NavigationAttribute_customNavContentTransition {
    Ark_Tag tag;
    Type_NavigationAttribute_customNavContentTransition value;
} Opt_Type_NavigationAttribute_customNavContentTransition;
typedef struct UpdateTransitionCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Number progress);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number progress);
} UpdateTransitionCallback;
typedef struct Opt_UpdateTransitionCallback {
    Ark_Tag tag;
    UpdateTransitionCallback value;
} Opt_UpdateTransitionCallback;
typedef struct VisibleAreaChangeCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio);
} VisibleAreaChangeCallback;
typedef struct Opt_VisibleAreaChangeCallback {
    Ark_Tag tag;
    VisibleAreaChangeCallback value;
} Opt_VisibleAreaChangeCallback;
typedef struct VoidCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId);
} VoidCallback;
typedef struct Opt_VoidCallback {
    Ark_Tag tag;
    VoidCallback value;
} Opt_VoidCallback;
typedef struct WebKeyboardCallback {
    /* kind: Callback */
    Ark_CallbackResource resource;
    void (*call)(const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation);
    void (*callSync)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation);
} WebKeyboardCallback;
typedef struct Opt_WebKeyboardCallback {
    Ark_Tag tag;
    WebKeyboardCallback value;
} Opt_WebKeyboardCallback;
typedef struct Ark_AccessibilityOptions {
    /* kind: Interface */
    Opt_Boolean accessibilityPreferred;
} Ark_AccessibilityOptions;
typedef struct Opt_AccessibilityOptions {
    Ark_Tag tag;
    Ark_AccessibilityOptions value;
} Opt_AccessibilityOptions;
typedef struct Ark_AdsBlockedDetails {
    /* kind: Interface */
    Ark_String url;
    Array_String adsBlocked;
} Ark_AdsBlockedDetails;
typedef struct Opt_AdsBlockedDetails {
    Ark_Tag tag;
    Ark_AdsBlockedDetails value;
} Opt_AdsBlockedDetails;
typedef struct Ark_AlignRuleOption {
    /* kind: Interface */
    Ark_Int32 _stub;
} Ark_AlignRuleOption;
typedef struct Opt_AlignRuleOption {
    Ark_Tag tag;
    Ark_AlignRuleOption value;
} Opt_AlignRuleOption;
typedef struct Ark_AlphabetIndexerOptions {
    /* kind: Interface */
    Array_String arrayValue;
    Ark_Number selected;
} Ark_AlphabetIndexerOptions;
typedef struct Opt_AlphabetIndexerOptions {
    Ark_Tag tag;
    Ark_AlphabetIndexerOptions value;
} Opt_AlphabetIndexerOptions;
typedef struct Ark_AnimationNumberRange {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
} Ark_AnimationNumberRange;
typedef struct Opt_AnimationNumberRange {
    Ark_Tag tag;
    Ark_AnimationNumberRange value;
} Opt_AnimationNumberRange;
typedef struct Opt_AppearSymbolEffect {
    Ark_Tag tag;
    Ark_AppearSymbolEffect value;
} Opt_AppearSymbolEffect;
typedef struct Ark_ASTCResource {
    /* kind: Interface */
    Array_String sources;
    Ark_Number column;
} Ark_ASTCResource;
typedef struct Opt_ASTCResource {
    Ark_Tag tag;
    Ark_ASTCResource value;
} Opt_ASTCResource;
typedef struct Ark_AutoPlayOptions {
    /* kind: Interface */
    Ark_Boolean stopWhenTouched;
} Ark_AutoPlayOptions;
typedef struct Opt_AutoPlayOptions {
    Ark_Tag tag;
    Ark_AutoPlayOptions value;
} Opt_AutoPlayOptions;
typedef struct Ark_BackgroundBrightnessOptions {
    /* kind: Interface */
    Ark_Number rate;
    Ark_Number lightUpDegree;
} Ark_BackgroundBrightnessOptions;
typedef struct Opt_BackgroundBrightnessOptions {
    Ark_Tag tag;
    Ark_BackgroundBrightnessOptions value;
} Opt_BackgroundBrightnessOptions;
typedef struct Ark_BackgroundImageOptions {
    /* kind: Interface */
    Opt_Boolean syncLoad;
    Opt_ImageRepeat repeat;
} Ark_BackgroundImageOptions;
typedef struct Opt_BackgroundImageOptions {
    Ark_Tag tag;
    Ark_BackgroundImageOptions value;
} Opt_BackgroundImageOptions;
typedef struct Ark_BackgroundOptions {
    /* kind: Interface */
    Opt_Alignment align;
} Ark_BackgroundOptions;
typedef struct Opt_BackgroundOptions {
    Ark_Tag tag;
    Ark_BackgroundOptions value;
} Opt_BackgroundOptions;
typedef struct Ark_BarrierStyle {
    /* kind: Interface */
    Ark_String id;
    Ark_BarrierDirection direction;
    Array_String referencedId;
} Ark_BarrierStyle;
typedef struct Opt_BarrierStyle {
    Ark_Tag tag;
    Ark_BarrierStyle value;
} Opt_BarrierStyle;
typedef struct Opt_BaselineOffsetStyle {
    Ark_Tag tag;
    Ark_BaselineOffsetStyle value;
} Opt_BaselineOffsetStyle;
typedef struct Ark_Bias {
    /* kind: Interface */
    Opt_Number horizontal;
    Opt_Number vertical;
} Ark_Bias;
typedef struct Opt_Bias {
    Ark_Tag tag;
    Ark_Bias value;
} Opt_Bias;
typedef struct Ark_BlurOptions {
    /* kind: Interface */
    Ark_Tuple_Number_Number grayscale;
} Ark_BlurOptions;
typedef struct Opt_BlurOptions {
    Ark_Tag tag;
    Ark_BlurOptions value;
} Opt_BlurOptions;
typedef struct Ark_BorderRadiuses_graphics {
    /* kind: Interface */
    Ark_Number topLeft;
    Ark_Number topRight;
    Ark_Number bottomLeft;
    Ark_Number bottomRight;
} Ark_BorderRadiuses_graphics;
typedef struct Opt_BorderRadiuses_graphics {
    Ark_Tag tag;
    Ark_BorderRadiuses_graphics value;
} Opt_BorderRadiuses_graphics;
typedef struct Opt_BounceSymbolEffect {
    Ark_Tag tag;
    Ark_BounceSymbolEffect value;
} Opt_BounceSymbolEffect;
typedef struct Ark_BreakPoints {
    /* kind: Interface */
    Opt_Array_String value;
    Opt_BreakpointsReference reference;
} Ark_BreakPoints;
typedef struct Opt_BreakPoints {
    Ark_Tag tag;
    Ark_BreakPoints value;
} Opt_BreakPoints;
typedef struct Ark_BuilderNodeOptions {
    /* kind: Interface */
    Opt_Size selfIdealSize;
    Opt_Number type;
    Opt_String surfaceId;
} Ark_BuilderNodeOptions;
typedef struct Opt_BuilderNodeOptions {
    Ark_Tag tag;
    Ark_BuilderNodeOptions value;
} Opt_BuilderNodeOptions;
typedef struct Ark_BusinessError {
    /* kind: Interface */
    Ark_String name;
    Ark_String message;
    Opt_String stack;
    Ark_Number code;
} Ark_BusinessError;
typedef struct Opt_BusinessError {
    Ark_Tag tag;
    Ark_BusinessError value;
} Opt_BusinessError;
typedef struct Ark_ButtonConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_String label;
    Ark_Boolean pressed;
    ButtonTriggerClickCallback triggerClick;
} Ark_ButtonConfiguration;
typedef struct Opt_ButtonConfiguration {
    Ark_Tag tag;
    Ark_ButtonConfiguration value;
} Opt_ButtonConfiguration;
typedef struct Ark_ButtonOptions {
    /* kind: Interface */
    Opt_ButtonType type;
    Opt_Boolean stateEffect;
    Opt_ButtonStyleMode buttonStyle;
    Opt_ControlSize controlSize;
    Opt_ButtonRole role;
} Ark_ButtonOptions;
typedef struct Opt_ButtonOptions {
    Ark_Tag tag;
    Ark_ButtonOptions value;
} Opt_ButtonOptions;
typedef struct Ark_CancelButtonSymbolOptions {
    /* kind: Interface */
    Opt_CancelButtonStyle style;
    Opt_SymbolGlyphModifier icon;
} Ark_CancelButtonSymbolOptions;
typedef struct Opt_CancelButtonSymbolOptions {
    Ark_Tag tag;
    Ark_CancelButtonSymbolOptions value;
} Opt_CancelButtonSymbolOptions;
typedef struct Ark_CaretOffset {
    /* kind: Interface */
    Ark_Number index;
    Ark_Number x;
    Ark_Number y;
} Ark_CaretOffset;
typedef struct Opt_CaretOffset {
    Ark_Tag tag;
    Ark_CaretOffset value;
} Opt_CaretOffset;
typedef struct Ark_ChainWeightOptions {
    /* kind: Interface */
    Opt_Number horizontal;
    Opt_Number vertical;
} Ark_ChainWeightOptions;
typedef struct Opt_ChainWeightOptions {
    Ark_Tag tag;
    Ark_ChainWeightOptions value;
} Opt_ChainWeightOptions;
typedef struct Ark_CheckBoxConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_String name;
    Ark_Boolean selected;
    Callback_Boolean_Void triggerChange;
} Ark_CheckBoxConfiguration;
typedef struct Opt_CheckBoxConfiguration {
    Ark_Tag tag;
    Ark_CheckBoxConfiguration value;
} Opt_CheckBoxConfiguration;
typedef struct Ark_CheckboxGroupOptions {
    /* kind: Interface */
    Opt_String group;
} Ark_CheckboxGroupOptions;
typedef struct Opt_CheckboxGroupOptions {
    Ark_Tag tag;
    Ark_CheckboxGroupOptions value;
} Opt_CheckboxGroupOptions;
typedef struct Ark_CheckboxGroupResult {
    /* kind: Interface */
    Array_String name;
    Ark_SelectStatus status;
} Ark_CheckboxGroupResult;
typedef struct Opt_CheckboxGroupResult {
    Ark_Tag tag;
    Ark_CheckboxGroupResult value;
} Opt_CheckboxGroupResult;
typedef struct Ark_CheckboxOptions {
    /* kind: Interface */
    Opt_String name;
    Opt_String group;
    Opt_CustomNodeBuilder indicatorBuilder;
} Ark_CheckboxOptions;
typedef struct Opt_CheckboxOptions {
    Ark_Tag tag;
    Ark_CheckboxOptions value;
} Opt_CheckboxOptions;
typedef struct Opt_ChildrenMainSize {
    Ark_Tag tag;
    Ark_ChildrenMainSize value;
} Opt_ChildrenMainSize;
typedef struct Ark_Circle {
    /* kind: Interface */
    Ark_Number centerX;
    Ark_Number centerY;
    Ark_Number radius;
} Ark_Circle;
typedef struct Opt_Circle {
    Ark_Tag tag;
    Ark_Circle value;
} Opt_Circle;
typedef struct Ark_ClickEffect {
    /* kind: Interface */
    Ark_ClickEffectLevel level;
    Opt_Number scale;
} Ark_ClickEffect;
typedef struct Opt_ClickEffect {
    Ark_Tag tag;
    Ark_ClickEffect value;
} Opt_ClickEffect;
typedef struct Ark_CloseSwipeActionOptions {
    /* kind: Interface */
    Opt_Callback_Void onFinish;
} Ark_CloseSwipeActionOptions;
typedef struct Opt_CloseSwipeActionOptions {
    Ark_Tag tag;
    Ark_CloseSwipeActionOptions value;
} Opt_CloseSwipeActionOptions;
typedef struct Ark_ColorFilterType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ColorFilter value0;
        Ark_drawing_ColorFilter value1;
    };
} Ark_ColorFilterType;
typedef struct Opt_ColorFilterType {
    Ark_Tag tag;
    Ark_ColorFilterType value;
} Opt_ColorFilterType;
typedef struct Ark_ColumnOptions {
    /* kind: Interface */
    Opt_Union_String_Number space;
} Ark_ColumnOptions;
typedef struct Opt_ColumnOptions {
    Ark_Tag tag;
    Ark_ColumnOptions value;
} Opt_ColumnOptions;
typedef struct Ark_ColumnOptionsV2 {
    /* kind: Interface */
    Ark_Int32 _stub;
} Ark_ColumnOptionsV2;
typedef struct Opt_ColumnOptionsV2 {
    Ark_Tag tag;
    Ark_ColumnOptionsV2 value;
} Opt_ColumnOptionsV2;
typedef struct Ark_CommandPath {
    /* kind: Interface */
    Ark_String commands;
} Ark_CommandPath;
typedef struct Opt_CommandPath {
    Ark_Tag tag;
    Ark_CommandPath value;
} Opt_CommandPath;
typedef struct Opt_common_Context {
    Ark_Tag tag;
    Ark_common_Context value;
} Opt_common_Context;
typedef struct Ark_common2D_Color {
    /* kind: Interface */
    Ark_Number alpha;
    Ark_Number red;
    Ark_Number green;
    Ark_Number blue;
} Ark_common2D_Color;
typedef struct Opt_common2D_Color {
    Ark_Tag tag;
    Ark_common2D_Color value;
} Opt_common2D_Color;
typedef struct Ark_common2D_Point {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
} Ark_common2D_Point;
typedef struct Opt_common2D_Point {
    Ark_Tag tag;
    Ark_common2D_Point value;
} Opt_common2D_Point;
typedef struct Ark_common2D_Point3d {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number z;
} Ark_common2D_Point3d;
typedef struct Opt_common2D_Point3d {
    Ark_Tag tag;
    Ark_common2D_Point3d value;
} Opt_common2D_Point3d;
typedef struct Ark_common2D_Rect {
    /* kind: Interface */
    Ark_Number left;
    Ark_Number top;
    Ark_Number right;
    Ark_Number bottom;
} Ark_common2D_Rect;
typedef struct Opt_common2D_Rect {
    Ark_Tag tag;
    Ark_common2D_Rect value;
} Opt_common2D_Rect;
typedef struct Ark_CompatibleComponentInfo {
    /* kind: Interface */
    Ark_String name;
    Ark_CustomObject component;
} Ark_CompatibleComponentInfo;
typedef struct Opt_CompatibleComponentInfo {
    Ark_Tag tag;
    Ark_CompatibleComponentInfo value;
} Opt_CompatibleComponentInfo;
typedef struct Ark_ComputedBarAttribute {
    /* kind: Interface */
    Ark_Number totalOffset;
    Ark_Number totalLength;
} Ark_ComputedBarAttribute;
typedef struct Opt_ComputedBarAttribute {
    Ark_Tag tag;
    Ark_ComputedBarAttribute value;
} Opt_ComputedBarAttribute;
typedef struct Ark_CrossLanguageOptions {
    /* kind: Interface */
    Opt_Boolean attributeSetting;
} Ark_CrossLanguageOptions;
typedef struct Opt_CrossLanguageOptions {
    Ark_Tag tag;
    Ark_CrossLanguageOptions value;
} Opt_CrossLanguageOptions;
typedef struct Ark_CrownEvent {
    /* kind: Interface */
    Ark_Int64 timestamp;
    Ark_Number angularVelocity;
    Ark_Number degree;
    Ark_CrownAction action;
    Callback_Void stopPropagation;
} Ark_CrownEvent;
typedef struct Opt_CrownEvent {
    Ark_Tag tag;
    Ark_CrownEvent value;
} Opt_CrownEvent;
typedef struct Opt_CustomSpan {
    Ark_Tag tag;
    Ark_CustomSpan value;
} Opt_CustomSpan;
typedef struct Ark_CustomSpanDrawInfo {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number lineTop;
    Ark_Number lineBottom;
    Ark_Number baseline;
} Ark_CustomSpanDrawInfo;
typedef struct Opt_CustomSpanDrawInfo {
    Ark_Tag tag;
    Ark_CustomSpanDrawInfo value;
} Opt_CustomSpanDrawInfo;
typedef struct Ark_CustomSpanMeasureInfo {
    /* kind: Interface */
    Ark_Number fontSize;
} Ark_CustomSpanMeasureInfo;
typedef struct Opt_CustomSpanMeasureInfo {
    Ark_Tag tag;
    Ark_CustomSpanMeasureInfo value;
} Opt_CustomSpanMeasureInfo;
typedef struct Ark_CustomSpanMetrics {
    /* kind: Interface */
    Ark_Number width;
    Opt_Number height;
} Ark_CustomSpanMetrics;
typedef struct Opt_CustomSpanMetrics {
    Ark_Tag tag;
    Ark_CustomSpanMetrics value;
} Opt_CustomSpanMetrics;
typedef struct Ark_DataPanelConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Array_Number values;
    Ark_Number maxValue;
} Ark_DataPanelConfiguration;
typedef struct Opt_DataPanelConfiguration {
    Ark_Tag tag;
    Ark_DataPanelConfiguration value;
} Opt_DataPanelConfiguration;
typedef struct Ark_DataPanelOptions {
    /* kind: Interface */
    Array_Number values;
    Opt_Number max;
    Opt_DataPanelType type;
} Ark_DataPanelOptions;
typedef struct Opt_DataPanelOptions {
    Ark_Tag tag;
    Ark_DataPanelOptions value;
} Opt_DataPanelOptions;
typedef struct Ark_DatePickerOptions {
    /* kind: Interface */
    Opt_Date start;
    Opt_Date end;
    Opt_Date selected;
    Opt_DatePickerMode mode;
} Ark_DatePickerOptions;
typedef struct Opt_DatePickerOptions {
    Ark_Tag tag;
    Ark_DatePickerOptions value;
} Opt_DatePickerOptions;
typedef struct Ark_DateRange {
    /* kind: Interface */
    Opt_Date start;
    Opt_Date end;
} Ark_DateRange;
typedef struct Opt_DateRange {
    Ark_Tag tag;
    Ark_DateRange value;
} Opt_DateRange;
typedef struct Ark_DeleteValue {
    /* kind: Interface */
    Ark_Number deleteOffset;
    Ark_TextDeleteDirection direction;
    Ark_String deleteValue;
} Ark_DeleteValue;
typedef struct Opt_DeleteValue {
    Ark_Tag tag;
    Ark_DeleteValue value;
} Opt_DeleteValue;
typedef struct Ark_DirectionalEdgesT {
    /* kind: Interface */
    Ark_Number start;
    Ark_Number end;
    Ark_Number top;
    Ark_Number bottom;
} Ark_DirectionalEdgesT;
typedef struct Opt_DirectionalEdgesT {
    Ark_Tag tag;
    Ark_DirectionalEdgesT value;
} Opt_DirectionalEdgesT;
typedef struct Opt_DisappearSymbolEffect {
    Ark_Tag tag;
    Ark_DisappearSymbolEffect value;
} Opt_DisappearSymbolEffect;
typedef struct Ark_DismissContentCoverAction {
    /* kind: Interface */
    VoidCallback dismiss;
    Ark_DismissReason reason;
} Ark_DismissContentCoverAction;
typedef struct Opt_DismissContentCoverAction {
    Ark_Tag tag;
    Ark_DismissContentCoverAction value;
} Opt_DismissContentCoverAction;
typedef struct Opt_DismissDialogAction {
    Ark_Tag tag;
    Ark_DismissDialogAction value;
} Opt_DismissDialogAction;
typedef struct Opt_DismissPopupAction {
    Ark_Tag tag;
    Ark_DismissPopupAction value;
} Opt_DismissPopupAction;
typedef struct Ark_DismissSheetAction {
    /* kind: Interface */
    VoidCallback dismiss;
    Ark_DismissReason reason;
} Ark_DismissSheetAction;
typedef struct Opt_DismissSheetAction {
    Ark_Tag tag;
    Ark_DismissSheetAction value;
} Opt_DismissSheetAction;
typedef struct Ark_DoubleAnimationParam {
    /* kind: Interface */
    Ark_String propertyName;
    Ark_Float32 startValue;
    Ark_Float32 endValue;
    Ark_Int32 duration;
    Ark_Int32 delay;
    Ark_Union_Curve_String_ICurve curve;
    Opt_Callback_Extender_OnProgress onProgress;
    Opt_Callback_Extender_OnFinish onFinish;
} Ark_DoubleAnimationParam;
typedef struct Opt_DoubleAnimationParam {
    Ark_Tag tag;
    Ark_DoubleAnimationParam value;
} Opt_DoubleAnimationParam;
typedef struct Opt_DragEvent {
    Ark_Tag tag;
    Ark_DragEvent value;
} Opt_DragEvent;
typedef struct Ark_DragInteractionOptions {
    /* kind: Interface */
    Opt_Boolean isMultiSelectionEnabled;
    Opt_Boolean defaultAnimationBeforeLifting;
    Opt_Boolean enableEdgeAutoScroll;
    Opt_Boolean enableHapticFeedback;
    Opt_Boolean isLiftingDisabled;
} Ark_DragInteractionOptions;
typedef struct Opt_DragInteractionOptions {
    Ark_Tag tag;
    Ark_DragInteractionOptions value;
} Opt_DragInteractionOptions;
typedef struct Ark_DragItemInfo {
    /* kind: Interface */
    Opt_image_PixelMap pixelMap;
    Opt_CustomNodeBuilder builder;
    Opt_String extraInfo;
} Ark_DragItemInfo;
typedef struct Opt_DragItemInfo {
    Ark_Tag tag;
    Ark_DragItemInfo value;
} Opt_DragItemInfo;
typedef struct Ark_drawing_FontMetrics {
    /* kind: Interface */
    Opt_drawing_FontMetricsFlags flags;
    Ark_Number top;
    Ark_Number ascent;
    Ark_Number descent;
    Ark_Number bottom;
    Ark_Number leading;
    Opt_Number avgCharWidth;
    Opt_Number maxCharWidth;
    Opt_Number xMin;
    Opt_Number xMax;
    Opt_Number xHeight;
    Opt_Number capHeight;
    Opt_Number underlineThickness;
    Opt_Number underlinePosition;
    Opt_Number strikethroughThickness;
    Opt_Number strikethroughPosition;
} Ark_drawing_FontMetrics;
typedef struct Opt_drawing_FontMetrics {
    Ark_Tag tag;
    Ark_drawing_FontMetrics value;
} Opt_drawing_FontMetrics;
typedef struct Ark_drawing_TextBlobRunBuffer {
    /* kind: Interface */
    Ark_Number glyph;
    Ark_Number positionX;
    Ark_Number positionY;
} Ark_drawing_TextBlobRunBuffer;
typedef struct Opt_drawing_TextBlobRunBuffer {
    Ark_Tag tag;
    Ark_drawing_TextBlobRunBuffer value;
} Opt_drawing_TextBlobRunBuffer;
typedef struct Opt_DrawingRenderingContext {
    Ark_Tag tag;
    Ark_DrawingRenderingContext value;
} Opt_DrawingRenderingContext;
typedef struct Opt_DrawModifier {
    Ark_Tag tag;
    Ark_DrawModifier value;
} Opt_DrawModifier;
typedef struct Ark_DropOptions {
    /* kind: Interface */
    Opt_Boolean disableDataPrefetch;
} Ark_DropOptions;
typedef struct Opt_DropOptions {
    Ark_Tag tag;
    Ark_DropOptions value;
} Opt_DropOptions;
typedef struct Ark_EdgeEffectOptions {
    /* kind: Interface */
    Ark_Boolean alwaysEnabled;
    Opt_Number effectEdge;
} Ark_EdgeEffectOptions;
typedef struct Opt_EdgeEffectOptions {
    Ark_Tag tag;
    Ark_EdgeEffectOptions value;
} Opt_EdgeEffectOptions;
typedef struct Ark_EdgeOutlineStyles {
    /* kind: Interface */
    Opt_OutlineStyle top;
    Opt_OutlineStyle right;
    Opt_OutlineStyle bottom;
    Opt_OutlineStyle left;
} Ark_EdgeOutlineStyles;
typedef struct Opt_EdgeOutlineStyles {
    Ark_Tag tag;
    Ark_EdgeOutlineStyles value;
} Opt_EdgeOutlineStyles;
typedef struct Ark_EdgeStyles {
    /* kind: Interface */
    Opt_BorderStyle top;
    Opt_BorderStyle right;
    Opt_BorderStyle bottom;
    Opt_BorderStyle left;
} Ark_EdgeStyles;
typedef struct Opt_EdgeStyles {
    Ark_Tag tag;
    Ark_EdgeStyles value;
} Opt_EdgeStyles;
typedef struct Ark_EditMenuOptions {
    /* kind: Interface */
    OnCreateMenuCallback onCreateMenu;
    OnMenuItemClickCallback onMenuItemClick;
} Ark_EditMenuOptions;
typedef struct Opt_EditMenuOptions {
    Ark_Tag tag;
    Ark_EditMenuOptions value;
} Opt_EditMenuOptions;
typedef struct Ark_EmbedOptions {
    /* kind: Interface */
    Opt_Boolean supportDefaultIntrinsicSize;
} Ark_EmbedOptions;
typedef struct Opt_EmbedOptions {
    Ark_Tag tag;
    Ark_EmbedOptions value;
} Opt_EmbedOptions;
typedef struct Ark_ErrorEvent {
    /* kind: Interface */
    Ark_String type;
    Ark_Int64 timeStamp;
    Ark_String message;
    Ark_String filename;
    Ark_Number lineno;
    Ark_Number colno;
    Ark_Object error;
} Ark_ErrorEvent;
typedef struct Opt_ErrorEvent {
    Ark_Tag tag;
    Ark_ErrorEvent value;
} Opt_ErrorEvent;
typedef struct Ark_ErrorInformation {
    /* kind: Interface */
    Ark_Int32 errcode;
    Ark_String msg;
} Ark_ErrorInformation;
typedef struct Opt_ErrorInformation {
    Ark_Tag tag;
    Ark_ErrorInformation value;
} Opt_ErrorInformation;
typedef struct Ark_Event {
    /* kind: Interface */
    Ark_String type;
    Ark_Int64 timeStamp;
} Ark_Event;
typedef struct Opt_Event {
    Ark_Tag tag;
    Ark_Event value;
} Opt_Event;
typedef struct Ark_ExpectedFrameRateRange {
    /* kind: Interface */
    Ark_Number min;
    Ark_Number max;
    Ark_Number expected;
} Ark_ExpectedFrameRateRange;
typedef struct Opt_ExpectedFrameRateRange {
    Ark_Tag tag;
    Ark_ExpectedFrameRateRange value;
} Opt_ExpectedFrameRateRange;
typedef struct Ark_FingerInfo {
    /* kind: Interface */
    Ark_Number id;
    Ark_Number globalX;
    Ark_Number globalY;
    Ark_Number localX;
    Ark_Number localY;
    Ark_Number displayX;
    Ark_Number displayY;
    Opt_InteractionHand hand;
} Ark_FingerInfo;
typedef struct Opt_FingerInfo {
    Ark_Tag tag;
    Ark_FingerInfo value;
} Opt_FingerInfo;
typedef struct Ark_FirstMeaningfulPaint {
    /* kind: Interface */
    Opt_Int64 navigationStartTime;
    Opt_Int64 firstMeaningfulPaintTime;
} Ark_FirstMeaningfulPaint;
typedef struct Opt_FirstMeaningfulPaint {
    Ark_Tag tag;
    Ark_FirstMeaningfulPaint value;
} Opt_FirstMeaningfulPaint;
typedef struct Ark_FocusMovement {
    /* kind: Interface */
    Opt_String forward;
    Opt_String backward;
    Opt_String up;
    Opt_String down;
    Opt_String left;
    Opt_String right;
} Ark_FocusMovement;
typedef struct Opt_FocusMovement {
    Ark_Tag tag;
    Ark_FocusMovement value;
} Opt_FocusMovement;
typedef struct Ark_FolderStackOptions {
    /* kind: Interface */
    Opt_Array_String upperItems;
} Ark_FolderStackOptions;
typedef struct Opt_FolderStackOptions {
    Ark_Tag tag;
    Ark_FolderStackOptions value;
} Opt_FolderStackOptions;
typedef struct Ark_font_UIFontAdjustInfo {
    /* kind: Interface */
    Ark_Number weight;
    Ark_Number to;
} Ark_font_UIFontAdjustInfo;
typedef struct Opt_font_UIFontAdjustInfo {
    Ark_Tag tag;
    Ark_font_UIFontAdjustInfo value;
} Opt_font_UIFontAdjustInfo;
typedef struct Ark_font_UIFontAliasInfo {
    /* kind: Interface */
    Ark_String name;
    Ark_Number weight;
} Ark_font_UIFontAliasInfo;
typedef struct Opt_font_UIFontAliasInfo {
    Ark_Tag tag;
    Ark_font_UIFontAliasInfo value;
} Opt_font_UIFontAliasInfo;
typedef struct Ark_font_UIFontConfig {
    /* kind: Interface */
    Array_String fontDir;
    Array_font_UIFontGenericInfo generic;
    Array_font_UIFontFallbackGroupInfo fallbackGroups;
} Ark_font_UIFontConfig;
typedef struct Opt_font_UIFontConfig {
    Ark_Tag tag;
    Ark_font_UIFontConfig value;
} Opt_font_UIFontConfig;
typedef struct Ark_font_UIFontFallbackGroupInfo {
    /* kind: Interface */
    Ark_String fontSetName;
    Array_font_UIFontFallbackInfo fallback;
} Ark_font_UIFontFallbackGroupInfo;
typedef struct Opt_font_UIFontFallbackGroupInfo {
    Ark_Tag tag;
    Ark_font_UIFontFallbackGroupInfo value;
} Opt_font_UIFontFallbackGroupInfo;
typedef struct Ark_font_UIFontFallbackInfo {
    /* kind: Interface */
    Ark_String language;
    Ark_String family;
} Ark_font_UIFontFallbackInfo;
typedef struct Opt_font_UIFontFallbackInfo {
    Ark_Tag tag;
    Ark_font_UIFontFallbackInfo value;
} Opt_font_UIFontFallbackInfo;
typedef struct Ark_font_UIFontGenericInfo {
    /* kind: Interface */
    Ark_String family;
    Array_font_UIFontAliasInfo alias;
    Array_font_UIFontAdjustInfo adjust;
} Ark_font_UIFontGenericInfo;
typedef struct Opt_font_UIFontGenericInfo {
    Ark_Tag tag;
    Ark_font_UIFontGenericInfo value;
} Opt_font_UIFontGenericInfo;
typedef struct Ark_FontInfo {
    /* kind: Interface */
    Ark_String path;
    Ark_String postScriptName;
    Ark_String fullName;
    Ark_String family;
    Ark_String subfamily;
    Ark_Number weight;
    Ark_Number width;
    Ark_Boolean italic;
    Ark_Boolean monoSpace;
    Ark_Boolean symbolic;
} Ark_FontInfo;
typedef struct Opt_FontInfo {
    Ark_Tag tag;
    Ark_FontInfo value;
} Opt_FontInfo;
typedef struct Ark_FontSettingOptions {
    /* kind: Interface */
    Opt_Boolean enableVariableFontWeight;
} Ark_FontSettingOptions;
typedef struct Opt_FontSettingOptions {
    Ark_Tag tag;
    Ark_FontSettingOptions value;
} Opt_FontSettingOptions;
typedef struct Ark_ForegroundEffectOptions {
    /* kind: Interface */
    Ark_Number radius;
} Ark_ForegroundEffectOptions;
typedef struct Opt_ForegroundEffectOptions {
    Ark_Tag tag;
    Ark_ForegroundEffectOptions value;
} Opt_ForegroundEffectOptions;
typedef struct Ark_FormCallbackInfo {
    /* kind: Interface */
    Ark_Int64 id;
    Ark_String idString;
} Ark_FormCallbackInfo;
typedef struct Opt_FormCallbackInfo {
    Ark_Tag tag;
    Ark_FormCallbackInfo value;
} Opt_FormCallbackInfo;
typedef struct Ark_FormLinkOptions {
    /* kind: Interface */
    Ark_String action;
    Opt_String moduleName;
    Opt_String bundleName;
    Opt_String abilityName;
    Opt_String uri;
    Opt_Object params;
} Ark_FormLinkOptions;
typedef struct Opt_FormLinkOptions {
    Ark_Tag tag;
    Ark_FormLinkOptions value;
} Opt_FormLinkOptions;
typedef struct Ark_FractionStop {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
} Ark_FractionStop;
typedef struct Opt_FractionStop {
    Ark_Tag tag;
    Ark_FractionStop value;
} Opt_FractionStop;
typedef struct Ark_Frame {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
    Ark_Number width;
    Ark_Number height;
} Ark_Frame;
typedef struct Opt_Frame {
    Ark_Tag tag;
    Ark_Frame value;
} Opt_Frame;
typedef struct Ark_FullScreenEnterEvent {
    /* kind: Interface */
    Ark_FullScreenExitHandler handler;
    Opt_Number videoWidth;
    Opt_Number videoHeight;
} Ark_FullScreenEnterEvent;
typedef struct Opt_FullScreenEnterEvent {
    Ark_Tag tag;
    Ark_FullScreenEnterEvent value;
} Opt_FullScreenEnterEvent;
typedef struct Ark_GaugeConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_Number value;
    Ark_Number min;
    Ark_Number max;
} Ark_GaugeConfiguration;
typedef struct Opt_GaugeConfiguration {
    Ark_Tag tag;
    Ark_GaugeConfiguration value;
} Opt_GaugeConfiguration;
typedef struct Ark_GaugeOptions {
    /* kind: Interface */
    Ark_Number value;
    Opt_Number min;
    Opt_Number max;
} Ark_GaugeOptions;
typedef struct Opt_GaugeOptions {
    Ark_Tag tag;
    Ark_GaugeOptions value;
} Opt_GaugeOptions;
typedef struct Ark_GeometryTransitionOptions {
    /* kind: Interface */
    Opt_Boolean follow;
    Opt_TransitionHierarchyStrategy hierarchyStrategy;
} Ark_GeometryTransitionOptions;
typedef struct Opt_GeometryTransitionOptions {
    Ark_Tag tag;
    Ark_GeometryTransitionOptions value;
} Opt_GeometryTransitionOptions;
typedef struct Ark_GestureInfo {
    /* kind: Interface */
    Opt_String tag;
    Ark_GestureControl_GestureType type;
    Ark_Boolean isSystemGesture;
} Ark_GestureInfo;
typedef struct Opt_GestureInfo {
    Ark_Tag tag;
    Ark_GestureInfo value;
} Opt_GestureInfo;
typedef struct Ark_GestureStyleInterface {
    /* kind: Interface */
    Opt_Callback_ClickEvent_Void onClick;
    Opt_Callback_GestureEvent_Void onLongPress;
} Ark_GestureStyleInterface;
typedef struct Opt_GestureStyleInterface {
    Ark_Tag tag;
    Ark_GestureStyleInterface value;
} Opt_GestureStyleInterface;
typedef struct Ark_GridColColumnOption {
    /* kind: Interface */
    Opt_Number xs;
    Opt_Number sm;
    Opt_Number md;
    Opt_Number lg;
    Opt_Number xl;
    Opt_Number xxl;
} Ark_GridColColumnOption;
typedef struct Opt_GridColColumnOption {
    Ark_Tag tag;
    Ark_GridColColumnOption value;
} Opt_GridColColumnOption;
typedef struct Ark_GridItemOptions {
    /* kind: Interface */
    Opt_GridItemStyle style;
} Ark_GridItemOptions;
typedef struct Opt_GridItemOptions {
    Ark_Tag tag;
    Ark_GridItemOptions value;
} Opt_GridItemOptions;
typedef struct Ark_GridLayoutOptions {
    /* kind: Interface */
    Ark_Tuple_Number_Number regularSize;
    Opt_Array_Number irregularIndexes;
    Opt_Callback_Number_Tuple_Number_Number onGetIrregularSizeByIndex;
    Opt_Callback_Number_Tuple_Number_Number_Number_Number onGetRectByIndex;
} Ark_GridLayoutOptions;
typedef struct Opt_GridLayoutOptions {
    Ark_Tag tag;
    Ark_GridLayoutOptions value;
} Opt_GridLayoutOptions;
typedef struct Ark_GridRowColumnOption {
    /* kind: Interface */
    Opt_Number xs;
    Opt_Number sm;
    Opt_Number md;
    Opt_Number lg;
    Opt_Number xl;
    Opt_Number xxl;
} Ark_GridRowColumnOption;
typedef struct Opt_GridRowColumnOption {
    Ark_Tag tag;
    Ark_GridRowColumnOption value;
} Opt_GridRowColumnOption;
typedef struct Ark_Header {
    /* kind: Interface */
    Ark_String headerKey;
    Ark_String headerValue;
} Ark_Header;
typedef struct Opt_Header {
    Ark_Tag tag;
    Ark_Header value;
} Opt_Header;
typedef struct Opt_HierarchicalSymbolEffect {
    Ark_Tag tag;
    Ark_HierarchicalSymbolEffect value;
} Opt_HierarchicalSymbolEffect;
typedef struct Ark_HoverEventParam {
    /* kind: Interface */
    Ark_FoldStatus foldStatus;
    Ark_Boolean isHoverMode;
    Ark_AppRotation appRotation;
    Ark_window_WindowStatusType windowStatusType;
} Ark_HoverEventParam;
typedef struct Opt_HoverEventParam {
    Ark_Tag tag;
    Ark_HoverEventParam value;
} Opt_HoverEventParam;
typedef struct Ark_ImageAIOptions {
    /* kind: Interface */
    Opt_Array_ImageAnalyzerType types;
    Opt_ImageAnalyzerController aiController;
} Ark_ImageAIOptions;
typedef struct Opt_ImageAIOptions {
    Ark_Tag tag;
    Ark_ImageAIOptions value;
} Opt_ImageAIOptions;
typedef struct Ark_ImageAnalyzerConfig {
    /* kind: Interface */
    Array_ImageAnalyzerType types;
} Ark_ImageAnalyzerConfig;
typedef struct Opt_ImageAnalyzerConfig {
    Ark_Tag tag;
    Ark_ImageAnalyzerConfig value;
} Opt_ImageAnalyzerConfig;
typedef struct Opt_ImageBitmap {
    Ark_Tag tag;
    Ark_ImageBitmap value;
} Opt_ImageBitmap;
typedef struct Ark_ImageCompleteEvent {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
    Ark_Number componentWidth;
    Ark_Number componentHeight;
    Ark_Number loadingStatus;
    Ark_Number contentWidth;
    Ark_Number contentHeight;
    Ark_Number contentOffsetX;
    Ark_Number contentOffsetY;
} Ark_ImageCompleteEvent;
typedef struct Opt_ImageCompleteEvent {
    Ark_Tag tag;
    Ark_ImageCompleteEvent value;
} Opt_ImageCompleteEvent;
typedef struct Opt_ImageData {
    Ark_Tag tag;
    Ark_ImageData value;
} Opt_ImageData;
typedef struct Ark_ImageLoadResult {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
    Ark_Number componentWidth;
    Ark_Number componentHeight;
    Ark_Number loadingStatus;
    Ark_Number contentWidth;
    Ark_Number contentHeight;
    Ark_Number contentOffsetX;
    Ark_Number contentOffsetY;
} Ark_ImageLoadResult;
typedef struct Opt_ImageLoadResult {
    Ark_Tag tag;
    Ark_ImageLoadResult value;
} Opt_ImageLoadResult;
typedef struct Ark_ImageSourceSize {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
} Ark_ImageSourceSize;
typedef struct Opt_ImageSourceSize {
    Ark_Tag tag;
    Ark_ImageSourceSize value;
} Opt_ImageSourceSize;
typedef struct Ark_InputCounterOptions {
    /* kind: Interface */
    Opt_Number thresholdPercentage;
    Opt_Boolean highlightBorder;
} Ark_InputCounterOptions;
typedef struct Opt_InputCounterOptions {
    Ark_Tag tag;
    Ark_InputCounterOptions value;
} Opt_InputCounterOptions;
typedef struct Ark_InsertValue {
    /* kind: Interface */
    Ark_Number insertOffset;
    Ark_String insertValue;
} Ark_InsertValue;
typedef struct Opt_InsertValue {
    Ark_Tag tag;
    Ark_InsertValue value;
} Opt_InsertValue;
typedef struct Ark_IntelligentTrackingPreventionDetails {
    /* kind: Interface */
    Ark_String host;
    Ark_String trackerHost;
} Ark_IntelligentTrackingPreventionDetails;
typedef struct Opt_IntelligentTrackingPreventionDetails {
    Ark_Tag tag;
    Ark_IntelligentTrackingPreventionDetails value;
} Opt_IntelligentTrackingPreventionDetails;
typedef struct Ark_intl_DateTimeOptions {
    /* kind: Interface */
    Opt_String locale;
    Opt_String dateStyle;
    Opt_String timeStyle;
    Opt_String hourCycle;
    Opt_String timeZone;
    Opt_String numberingSystem;
    Opt_Boolean hour12;
    Opt_String weekday;
    Opt_String era;
    Opt_String year;
    Opt_String month;
    Opt_String day;
    Opt_String hour;
    Opt_String minute;
    Opt_String second;
    Opt_String timeZoneName;
    Opt_String dayPeriod;
    Opt_String localeMatcher;
    Opt_String formatMatcher;
} Ark_intl_DateTimeOptions;
typedef struct Opt_intl_DateTimeOptions {
    Ark_Tag tag;
    Ark_intl_DateTimeOptions value;
} Opt_intl_DateTimeOptions;
typedef struct Ark_InvertOptions {
    /* kind: Interface */
    Ark_Number low;
    Ark_Number high;
    Ark_Number threshold;
    Ark_Number thresholdRange;
} Ark_InvertOptions;
typedef struct Opt_InvertOptions {
    Ark_Tag tag;
    Ark_InvertOptions value;
} Opt_InvertOptions;
typedef struct Ark_ItemDragInfo {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
} Ark_ItemDragInfo;
typedef struct Opt_ItemDragInfo {
    Ark_Tag tag;
    Ark_ItemDragInfo value;
} Opt_ItemDragInfo;
typedef struct Ark_JavaScriptProxy {
    /* kind: Interface */
    Ark_Object object_;
    Ark_String name;
    Array_String methodList;
    Ark_webview_WebviewController controller;
    Opt_Array_String asyncMethodList;
    Opt_String permission;
} Ark_JavaScriptProxy;
typedef struct Opt_JavaScriptProxy {
    Ark_Tag tag;
    Ark_JavaScriptProxy value;
} Opt_JavaScriptProxy;
typedef struct Ark_KeyboardOptions {
    /* kind: Interface */
    Opt_Boolean supportAvoidance;
} Ark_KeyboardOptions;
typedef struct Opt_KeyboardOptions {
    Ark_Tag tag;
    Ark_KeyboardOptions value;
} Opt_KeyboardOptions;
typedef struct Opt_KeyEvent {
    Ark_Tag tag;
    Ark_KeyEvent value;
} Opt_KeyEvent;
typedef struct Ark_LargestContentfulPaint {
    /* kind: Interface */
    Opt_Int64 navigationStartTime;
    Opt_Int64 largestImagePaintTime;
    Opt_Int64 largestTextPaintTime;
    Opt_Float64 imageBPP;
    Opt_Int64 largestImageLoadStartTime;
    Opt_Int64 largestImageLoadEndTime;
} Ark_LargestContentfulPaint;
typedef struct Opt_LargestContentfulPaint {
    Ark_Tag tag;
    Ark_LargestContentfulPaint value;
} Opt_LargestContentfulPaint;
typedef struct Ark_LayoutConstraint {
    /* kind: Interface */
    Ark_Size maxSize;
    Ark_Size minSize;
    Ark_Size percentReference;
} Ark_LayoutConstraint;
typedef struct Opt_LayoutConstraint {
    Ark_Tag tag;
    Ark_LayoutConstraint value;
} Opt_LayoutConstraint;
typedef struct Opt_LengthMetrics {
    Ark_Tag tag;
    Ark_LengthMetrics value;
} Opt_LengthMetrics;
typedef struct Opt_LetterSpacingStyle {
    Ark_Tag tag;
    Ark_LetterSpacingStyle value;
} Opt_LetterSpacingStyle;
typedef struct Ark_LinearGradientBlurOptions {
    /* kind: Interface */
    Array_FractionStop fractionStops;
    Ark_GradientDirection direction;
} Ark_LinearGradientBlurOptions;
typedef struct Opt_LinearGradientBlurOptions {
    Ark_Tag tag;
    Ark_LinearGradientBlurOptions value;
} Opt_LinearGradientBlurOptions;
typedef struct Ark_LinearGradientOptions {
    /* kind: Interface */
    Opt_Union_Number_String angle;
    Opt_GradientDirection direction;
    Array_Tuple_ResourceColor_Number colors;
    Opt_Boolean repeating;
} Ark_LinearGradientOptions;
typedef struct Opt_LinearGradientOptions {
    Ark_Tag tag;
    Ark_LinearGradientOptions value;
} Opt_LinearGradientOptions;
typedef struct Ark_LinearIndicatorStartOptions {
    /* kind: Interface */
    Opt_Number interval;
    Opt_Number duration;
} Ark_LinearIndicatorStartOptions;
typedef struct Opt_LinearIndicatorStartOptions {
    Ark_Tag tag;
    Ark_LinearIndicatorStartOptions value;
} Opt_LinearIndicatorStartOptions;
typedef struct Opt_LineHeightStyle {
    Ark_Tag tag;
    Ark_LineHeightStyle value;
} Opt_LineHeightStyle;
typedef struct Ark_ListItemGroupOptions {
    /* kind: Interface */
    Opt_CustomNodeBuilder header;
    Opt_ComponentContent headerComponent;
    Opt_CustomNodeBuilder footer;
    Opt_ComponentContent footerComponent;
    Opt_Union_Number_String space;
    Opt_ListItemGroupStyle style;
} Ark_ListItemGroupOptions;
typedef struct Opt_ListItemGroupOptions {
    Ark_Tag tag;
    Ark_ListItemGroupOptions value;
} Opt_ListItemGroupOptions;
typedef struct Ark_ListItemOptions {
    /* kind: Interface */
    Opt_ListItemStyle style;
} Ark_ListItemOptions;
typedef struct Opt_ListItemOptions {
    Ark_Tag tag;
    Ark_ListItemOptions value;
} Opt_ListItemOptions;
typedef struct Ark_ListOptions {
    /* kind: Interface */
    Opt_Number initialIndex;
    Opt_Union_Number_String space;
    Opt_Scroller scroller;
} Ark_ListOptions;
typedef struct Opt_ListOptions {
    Ark_Tag tag;
    Ark_ListOptions value;
} Opt_ListOptions;
typedef struct Ark_LoadCommittedDetails {
    /* kind: Interface */
    Ark_Boolean isMainFrame;
    Ark_Boolean isSameDocument;
    Ark_Boolean didReplaceEntry;
    Ark_WebNavigationType navigationType;
    Ark_String url;
} Ark_LoadCommittedDetails;
typedef struct Opt_LoadCommittedDetails {
    Ark_Tag tag;
    Ark_LoadCommittedDetails value;
} Opt_LoadCommittedDetails;
typedef struct Ark_LocalizedHorizontalAlignParam {
    /* kind: Interface */
    Ark_String anchor;
    Ark_HorizontalAlign align;
} Ark_LocalizedHorizontalAlignParam;
typedef struct Opt_LocalizedHorizontalAlignParam {
    Ark_Tag tag;
    Ark_LocalizedHorizontalAlignParam value;
} Opt_LocalizedHorizontalAlignParam;
typedef struct Ark_LocalizedVerticalAlignParam {
    /* kind: Interface */
    Ark_String anchor;
    Ark_VerticalAlign align;
} Ark_LocalizedVerticalAlignParam;
typedef struct Opt_LocalizedVerticalAlignParam {
    Ark_Tag tag;
    Ark_LocalizedVerticalAlignParam value;
} Opt_LocalizedVerticalAlignParam;
typedef struct Ark_LongPressGestureHandlerOptions {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number fingers;
    Opt_Boolean repeat;
    Opt_Number duration;
} Ark_LongPressGestureHandlerOptions;
typedef struct Opt_LongPressGestureHandlerOptions {
    Ark_Tag tag;
    Ark_LongPressGestureHandlerOptions value;
} Opt_LongPressGestureHandlerOptions;
typedef struct Ark_LongPressGestureInterface_Invoke_Literal {
    /* kind: Interface */
    Opt_Number fingers;
    Opt_Boolean repeat;
    Opt_Number duration;
} Ark_LongPressGestureInterface_Invoke_Literal;
typedef struct Opt_LongPressGestureInterface_Invoke_Literal {
    Ark_Tag tag;
    Ark_LongPressGestureInterface_Invoke_Literal value;
} Opt_LongPressGestureInterface_Invoke_Literal;
typedef struct Ark_MarqueeOptions {
    /* kind: Interface */
    Ark_Boolean start;
    Opt_Number step;
    Opt_Number loop;
    Opt_Boolean fromStart;
    Ark_String src;
} Ark_MarqueeOptions;
typedef struct Opt_MarqueeOptions {
    Ark_Tag tag;
    Ark_MarqueeOptions value;
} Opt_MarqueeOptions;
typedef struct Opt_Matrix2D {
    Ark_Tag tag;
    Ark_Matrix2D value;
} Opt_Matrix2D;
typedef struct Ark_Matrix4 {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
    Ark_Number value2;
    Ark_Number value3;
    Ark_Number value4;
    Ark_Number value5;
    Ark_Number value6;
    Ark_Number value7;
    Ark_Number value8;
    Ark_Number value9;
    Ark_Number value10;
    Ark_Number value11;
    Ark_Number value12;
    Ark_Number value13;
    Ark_Number value14;
    Ark_Number value15;
} Ark_Matrix4;
typedef struct Opt_Matrix4 {
    Ark_Tag tag;
    Ark_Matrix4 value;
} Opt_Matrix4;
typedef struct Ark_matrix4_Matrix4TransformPoint {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
} Ark_matrix4_Matrix4TransformPoint;
typedef struct Opt_matrix4_Matrix4TransformPoint {
    Ark_Tag tag;
    Ark_matrix4_Matrix4TransformPoint value;
} Opt_matrix4_Matrix4TransformPoint;
typedef struct Ark_matrix4_PolyToPolyOptions {
    /* kind: Interface */
    Array_common2D_Point src;
    Opt_Number srcIndex;
    Array_common2D_Point dst;
    Opt_Number dstIndex;
    Opt_Number pointCount;
} Ark_matrix4_PolyToPolyOptions;
typedef struct Opt_matrix4_PolyToPolyOptions {
    Ark_Tag tag;
    Ark_matrix4_PolyToPolyOptions value;
} Opt_matrix4_PolyToPolyOptions;
typedef struct Ark_Matrix4Result {
    /* kind: Interface */
    Ark_Number value0;
    Ark_Number value1;
    Ark_Number value2;
    Ark_Number value3;
    Ark_Number value4;
    Ark_Number value5;
    Ark_Number value6;
    Ark_Number value7;
    Ark_Number value8;
    Ark_Number value9;
    Ark_Number value10;
    Ark_Number value11;
    Ark_Number value12;
    Ark_Number value13;
    Ark_Number value14;
    Ark_Number value15;
} Ark_Matrix4Result;
typedef struct Opt_Matrix4Result {
    Ark_Tag tag;
    Ark_Matrix4Result value;
} Opt_Matrix4Result;
typedef struct Opt_Measurable {
    Ark_Tag tag;
    Ark_Measurable value;
} Opt_Measurable;
typedef struct Ark_MeasureResult {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
} Ark_MeasureResult;
typedef struct Opt_MeasureResult {
    Ark_Tag tag;
    Ark_MeasureResult value;
} Opt_MeasureResult;
typedef struct Ark_MessageEvents {
    /* kind: Interface */
    Ark_String type;
    Ark_Int64 timeStamp;
    Ark_Object data;
} Ark_MessageEvents;
typedef struct Opt_MessageEvents {
    Ark_Tag tag;
    Ark_MessageEvents value;
} Opt_MessageEvents;
typedef struct Ark_MotionBlurAnchor {
    /* kind: Interface */
    Ark_Number x;
    Ark_Number y;
} Ark_MotionBlurAnchor;
typedef struct Opt_MotionBlurAnchor {
    Ark_Tag tag;
    Ark_MotionBlurAnchor value;
} Opt_MotionBlurAnchor;
typedef struct Ark_MotionBlurOptions {
    /* kind: Interface */
    Ark_Number radius;
    Ark_MotionBlurAnchor anchor;
} Ark_MotionBlurOptions;
typedef struct Opt_MotionBlurOptions {
    Ark_Tag tag;
    Ark_MotionBlurOptions value;
} Opt_MotionBlurOptions;
typedef struct Ark_MotionPathOptions {
    /* kind: Interface */
    Ark_String path;
    Opt_Number from;
    Opt_Number to;
    Opt_Boolean rotatable;
} Ark_MotionPathOptions;
typedef struct Opt_MotionPathOptions {
    Ark_Tag tag;
    Ark_MotionPathOptions value;
} Opt_MotionPathOptions;
typedef struct Opt_MutableStyledString {
    Ark_Tag tag;
    Ark_MutableStyledString value;
} Opt_MutableStyledString;
typedef struct Ark_NativeEmbedVisibilityInfo {
    /* kind: Interface */
    Ark_Boolean visibility;
    Ark_String embedId;
} Ark_NativeEmbedVisibilityInfo;
typedef struct Opt_NativeEmbedVisibilityInfo {
    Ark_Tag tag;
    Ark_NativeEmbedVisibilityInfo value;
} Opt_NativeEmbedVisibilityInfo;
typedef struct Ark_NavContentInfo {
    /* kind: Interface */
    Opt_String name;
    Ark_Number index;
    Opt_NavDestinationMode mode;
    Opt_Object param;
    Opt_String navDestinationId;
} Ark_NavContentInfo;
typedef struct Opt_NavContentInfo {
    Ark_Tag tag;
    Ark_NavContentInfo value;
} Opt_NavContentInfo;
typedef struct Ark_NavDestinationTransition {
    /* kind: Interface */
    Opt_Callback_Void onTransitionEnd;
    Opt_Number duration;
    Opt_curves_Curve curve;
    Opt_Number delay;
    Callback_Void event;
} Ark_NavDestinationTransition;
typedef struct Opt_NavDestinationTransition {
    Ark_Tag tag;
    Ark_NavDestinationTransition value;
} Opt_NavDestinationTransition;
typedef struct Ark_NavigationAnimatedTransition {
    /* kind: Interface */
    Opt_Callback_Boolean_Void onTransitionEnd;
    Opt_Number timeout;
    Opt_Boolean isInteractive;
    Callback_NavigationTransitionProxy_Void transition;
} Ark_NavigationAnimatedTransition;
typedef struct Opt_NavigationAnimatedTransition {
    Ark_Tag tag;
    Ark_NavigationAnimatedTransition value;
} Opt_NavigationAnimatedTransition;
typedef struct Ark_NavigationInterception {
    /* kind: Interface */
    Opt_InterceptionShowCallback willShow;
    Opt_InterceptionShowCallback didShow;
    Opt_InterceptionModeCallback modeChange;
} Ark_NavigationInterception;
typedef struct Opt_NavigationInterception {
    Ark_Tag tag;
    Ark_NavigationInterception value;
} Opt_NavigationInterception;
typedef struct Ark_NavigationOptions {
    /* kind: Interface */
    Opt_LaunchMode launchMode;
    Opt_Boolean animated;
} Ark_NavigationOptions;
typedef struct Opt_NavigationOptions {
    Ark_Tag tag;
    Ark_NavigationOptions value;
} Opt_NavigationOptions;
typedef struct Opt_NavPathInfo {
    Ark_Tag tag;
    Ark_NavPathInfo value;
} Opt_NavPathInfo;
typedef struct Ark_NestedScrollInfo {
    /* kind: Interface */
    Ark_Scroller parent;
    Ark_Scroller child;
} Ark_NestedScrollInfo;
typedef struct Opt_NestedScrollInfo {
    Ark_Tag tag;
    Ark_NestedScrollInfo value;
} Opt_NestedScrollInfo;
typedef struct Ark_NestedScrollOptionsExt {
    /* kind: Interface */
    Opt_NestedScrollMode scrollUp;
    Opt_NestedScrollMode scrollDown;
    Opt_NestedScrollMode scrollRight;
    Opt_NestedScrollMode scrollLeft;
} Ark_NestedScrollOptionsExt;
typedef struct Opt_NestedScrollOptionsExt {
    Ark_Tag tag;
    Ark_NestedScrollOptionsExt value;
} Opt_NestedScrollOptionsExt;
typedef struct Ark_OnAlertEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_String message;
    Ark_JsResult result;
} Ark_OnAlertEvent;
typedef struct Opt_OnAlertEvent {
    Ark_Tag tag;
    Ark_OnAlertEvent value;
} Opt_OnAlertEvent;
typedef struct Ark_OnBeforeUnloadEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_String message;
    Ark_JsResult result;
} Ark_OnBeforeUnloadEvent;
typedef struct Opt_OnBeforeUnloadEvent {
    Ark_Tag tag;
    Ark_OnBeforeUnloadEvent value;
} Opt_OnBeforeUnloadEvent;
typedef struct Ark_OnClientAuthenticationEvent {
    /* kind: Interface */
    Ark_ClientAuthenticationHandler handler;
    Ark_String host;
    Ark_Number port;
    Array_String keyTypes;
    Array_String issuers;
} Ark_OnClientAuthenticationEvent;
typedef struct Opt_OnClientAuthenticationEvent {
    Ark_Tag tag;
    Ark_OnClientAuthenticationEvent value;
} Opt_OnClientAuthenticationEvent;
typedef struct Ark_OnConfirmEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_String message;
    Ark_JsResult result;
} Ark_OnConfirmEvent;
typedef struct Opt_OnConfirmEvent {
    Ark_Tag tag;
    Ark_OnConfirmEvent value;
} Opt_OnConfirmEvent;
typedef struct Ark_OnContextMenuShowEvent {
    /* kind: Interface */
    Ark_WebContextMenuParam param;
    Ark_WebContextMenuResult result;
} Ark_OnContextMenuShowEvent;
typedef struct Opt_OnContextMenuShowEvent {
    Ark_Tag tag;
    Ark_OnContextMenuShowEvent value;
} Opt_OnContextMenuShowEvent;
typedef struct Ark_OnDownloadStartEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_String userAgent;
    Ark_String contentDisposition;
    Ark_String mimetype;
    Ark_Number contentLength;
} Ark_OnDownloadStartEvent;
typedef struct Opt_OnDownloadStartEvent {
    Ark_Tag tag;
    Ark_OnDownloadStartEvent value;
} Opt_OnDownloadStartEvent;
typedef struct Ark_OnErrorReceiveEvent {
    /* kind: Interface */
    Ark_WebResourceRequest request;
    Ark_WebResourceError error;
} Ark_OnErrorReceiveEvent;
typedef struct Opt_OnErrorReceiveEvent {
    Ark_Tag tag;
    Ark_OnErrorReceiveEvent value;
} Opt_OnErrorReceiveEvent;
typedef struct Ark_OnGeolocationShowEvent {
    /* kind: Interface */
    Ark_String origin;
    Ark_JsGeolocation geolocation;
} Ark_OnGeolocationShowEvent;
typedef struct Opt_OnGeolocationShowEvent {
    Ark_Tag tag;
    Ark_OnGeolocationShowEvent value;
} Opt_OnGeolocationShowEvent;
typedef struct Ark_OnHttpAuthRequestEvent {
    /* kind: Interface */
    Ark_HttpAuthHandler handler;
    Ark_String host;
    Ark_String realm;
} Ark_OnHttpAuthRequestEvent;
typedef struct Opt_OnHttpAuthRequestEvent {
    Ark_Tag tag;
    Ark_OnHttpAuthRequestEvent value;
} Opt_OnHttpAuthRequestEvent;
typedef struct Ark_OnHttpErrorReceiveEvent {
    /* kind: Interface */
    Ark_WebResourceRequest request;
    Ark_WebResourceResponse response;
} Ark_OnHttpErrorReceiveEvent;
typedef struct Opt_OnHttpErrorReceiveEvent {
    Ark_Tag tag;
    Ark_OnHttpErrorReceiveEvent value;
} Opt_OnHttpErrorReceiveEvent;
typedef struct Ark_OnInterceptRequestEvent {
    /* kind: Interface */
    Ark_WebResourceRequest request;
} Ark_OnInterceptRequestEvent;
typedef struct Opt_OnInterceptRequestEvent {
    Ark_Tag tag;
    Ark_OnInterceptRequestEvent value;
} Opt_OnInterceptRequestEvent;
typedef struct Ark_OnLoadInterceptEvent {
    /* kind: Interface */
    Ark_WebResourceRequest data;
} Ark_OnLoadInterceptEvent;
typedef struct Opt_OnLoadInterceptEvent {
    Ark_Tag tag;
    Ark_OnLoadInterceptEvent value;
} Opt_OnLoadInterceptEvent;
typedef struct Ark_OnPageBeginEvent {
    /* kind: Interface */
    Ark_String url;
} Ark_OnPageBeginEvent;
typedef struct Opt_OnPageBeginEvent {
    Ark_Tag tag;
    Ark_OnPageBeginEvent value;
} Opt_OnPageBeginEvent;
typedef struct Ark_OnPageEndEvent {
    /* kind: Interface */
    Ark_String url;
} Ark_OnPageEndEvent;
typedef struct Opt_OnPageEndEvent {
    Ark_Tag tag;
    Ark_OnPageEndEvent value;
} Opt_OnPageEndEvent;
typedef struct Ark_OnPageVisibleEvent {
    /* kind: Interface */
    Ark_String url;
} Ark_OnPageVisibleEvent;
typedef struct Opt_OnPageVisibleEvent {
    Ark_Tag tag;
    Ark_OnPageVisibleEvent value;
} Opt_OnPageVisibleEvent;
typedef struct Ark_OnPermissionRequestEvent {
    /* kind: Interface */
    Ark_PermissionRequest request;
} Ark_OnPermissionRequestEvent;
typedef struct Opt_OnPermissionRequestEvent {
    Ark_Tag tag;
    Ark_OnPermissionRequestEvent value;
} Opt_OnPermissionRequestEvent;
typedef struct Ark_OnPromptEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_String message;
    Ark_String value;
    Ark_JsResult result;
} Ark_OnPromptEvent;
typedef struct Opt_OnPromptEvent {
    Ark_Tag tag;
    Ark_OnPromptEvent value;
} Opt_OnPromptEvent;
typedef struct Ark_OnRefreshAccessedHistoryEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_Boolean isRefreshed;
} Ark_OnRefreshAccessedHistoryEvent;
typedef struct Opt_OnRefreshAccessedHistoryEvent {
    Ark_Tag tag;
    Ark_OnRefreshAccessedHistoryEvent value;
} Opt_OnRefreshAccessedHistoryEvent;
typedef struct Ark_OnRenderExitedEvent {
    /* kind: Interface */
    Ark_RenderExitReason renderExitReason;
} Ark_OnRenderExitedEvent;
typedef struct Opt_OnRenderExitedEvent {
    Ark_Tag tag;
    Ark_OnRenderExitedEvent value;
} Opt_OnRenderExitedEvent;
typedef struct Ark_OnResourceLoadEvent {
    /* kind: Interface */
    Ark_String url;
} Ark_OnResourceLoadEvent;
typedef struct Opt_OnResourceLoadEvent {
    Ark_Tag tag;
    Ark_OnResourceLoadEvent value;
} Opt_OnResourceLoadEvent;
typedef struct Ark_OnScreenCaptureRequestEvent {
    /* kind: Interface */
    Ark_ScreenCaptureHandler handler;
} Ark_OnScreenCaptureRequestEvent;
typedef struct Opt_OnScreenCaptureRequestEvent {
    Ark_Tag tag;
    Ark_OnScreenCaptureRequestEvent value;
} Opt_OnScreenCaptureRequestEvent;
typedef struct Ark_OnSslErrorEventReceiveEvent {
    /* kind: Interface */
    Ark_SslErrorHandler handler;
    Ark_SslError error;
    Opt_Array_Buffer certChainData;
} Ark_OnSslErrorEventReceiveEvent;
typedef struct Opt_OnSslErrorEventReceiveEvent {
    Ark_Tag tag;
    Ark_OnSslErrorEventReceiveEvent value;
} Opt_OnSslErrorEventReceiveEvent;
typedef struct Ark_OnTitleReceiveEvent {
    /* kind: Interface */
    Ark_String title;
} Ark_OnTitleReceiveEvent;
typedef struct Opt_OnTitleReceiveEvent {
    Ark_Tag tag;
    Ark_OnTitleReceiveEvent value;
} Opt_OnTitleReceiveEvent;
typedef struct Ark_OnTouchIconUrlReceivedEvent {
    /* kind: Interface */
    Ark_String url;
    Ark_Boolean precomposed;
} Ark_OnTouchIconUrlReceivedEvent;
typedef struct Opt_OnTouchIconUrlReceivedEvent {
    Ark_Tag tag;
    Ark_OnTouchIconUrlReceivedEvent value;
} Opt_OnTouchIconUrlReceivedEvent;
typedef struct Ark_OnWindowNewEvent {
    /* kind: Interface */
    Ark_Boolean isAlert;
    Ark_Boolean isUserTrigger;
    Ark_String targetUrl;
    Ark_ControllerHandler handler;
} Ark_OnWindowNewEvent;
typedef struct Opt_OnWindowNewEvent {
    Ark_Tag tag;
    Ark_OnWindowNewEvent value;
} Opt_OnWindowNewEvent;
typedef struct Ark_OverlayOffset {
    /* kind: Interface */
    Opt_Number x;
    Opt_Number y;
} Ark_OverlayOffset;
typedef struct Opt_OverlayOffset {
    Ark_Tag tag;
    Ark_OverlayOffset value;
} Opt_OverlayOffset;
typedef struct Ark_PanGestureHandlerOptions {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number fingers;
    Opt_PanDirection direction;
    Opt_Number distance;
} Ark_PanGestureHandlerOptions;
typedef struct Opt_PanGestureHandlerOptions {
    Ark_Tag tag;
    Ark_PanGestureHandlerOptions value;
} Opt_PanGestureHandlerOptions;
typedef struct Ark_PanGestureInterface_Invoke_Literal {
    /* kind: Interface */
    Opt_Number fingers;
    Opt_PanDirection direction;
    Opt_Number distance;
} Ark_PanGestureInterface_Invoke_Literal;
typedef struct Opt_PanGestureInterface_Invoke_Literal {
    Ark_Tag tag;
    Ark_PanGestureInterface_Invoke_Literal value;
} Opt_PanGestureInterface_Invoke_Literal;
typedef struct Ark_PathShapeOptions {
    /* kind: Interface */
    Opt_String commands;
} Ark_PathShapeOptions;
typedef struct Opt_PathShapeOptions {
    Ark_Tag tag;
    Ark_PathShapeOptions value;
} Opt_PathShapeOptions;
typedef struct Ark_PinchGestureHandlerOptions {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number fingers;
    Opt_Number distance;
} Ark_PinchGestureHandlerOptions;
typedef struct Opt_PinchGestureHandlerOptions {
    Ark_Tag tag;
    Ark_PinchGestureHandlerOptions value;
} Opt_PinchGestureHandlerOptions;
typedef struct Ark_PinchGestureInterface_Invoke_Literal {
    /* kind: Interface */
    Opt_Number fingers;
    Opt_Number distance;
} Ark_PinchGestureInterface_Invoke_Literal;
typedef struct Opt_PinchGestureInterface_Invoke_Literal {
    Ark_Tag tag;
    Ark_PinchGestureInterface_Invoke_Literal value;
} Opt_PinchGestureInterface_Invoke_Literal;
typedef struct Ark_PixelRoundPolicy {
    /* kind: Interface */
    Opt_PixelRoundCalcPolicy start;
    Opt_PixelRoundCalcPolicy top;
    Opt_PixelRoundCalcPolicy end;
    Opt_PixelRoundCalcPolicy bottom;
} Ark_PixelRoundPolicy;
typedef struct Opt_PixelRoundPolicy {
    Ark_Tag tag;
    Ark_PixelRoundPolicy value;
} Opt_PixelRoundPolicy;
typedef struct Ark_PluginComponentTemplate {
    /* kind: Interface */
    Ark_String source;
    Ark_String bundleName;
} Ark_PluginComponentTemplate;
typedef struct Opt_PluginComponentTemplate {
    Ark_Tag tag;
    Ark_PluginComponentTemplate value;
} Opt_PluginComponentTemplate;
typedef struct Ark_PluginErrorData {
    /* kind: Interface */
    Ark_Number errcode;
    Ark_String msg;
} Ark_PluginErrorData;
typedef struct Opt_PluginErrorData {
    Ark_Tag tag;
    Ark_PluginErrorData value;
} Opt_PluginErrorData;
typedef struct Ark_PopInfo {
    /* kind: Interface */
    Ark_NavPathInfo info;
    Ark_Object result;
} Ark_PopInfo;
typedef struct Opt_PopInfo {
    Ark_Tag tag;
    Ark_PopInfo value;
} Opt_PopInfo;
typedef struct Ark_PopupButton {
    /* kind: Interface */
    Ark_String value;
    VoidCallback action;
} Ark_PopupButton;
typedef struct Opt_PopupButton {
    Ark_Tag tag;
    Ark_PopupButton value;
} Opt_PopupButton;
typedef struct Ark_PosterOptions {
    /* kind: Interface */
    Opt_Boolean showFirstFrame;
} Ark_PosterOptions;
typedef struct Opt_PosterOptions {
    Ark_Tag tag;
    Ark_PosterOptions value;
} Opt_PosterOptions;
typedef struct Ark_PostMessageOptions {
    /* kind: Interface */
    Opt_Array_Object transfer;
} Ark_PostMessageOptions;
typedef struct Opt_PostMessageOptions {
    Ark_Tag tag;
    Ark_PostMessageOptions value;
} Opt_PostMessageOptions;
typedef struct Ark_PreviewConfiguration {
    /* kind: Interface */
    Opt_Boolean onlyForLifting;
    Opt_Boolean delayCreating;
} Ark_PreviewConfiguration;
typedef struct Opt_PreviewConfiguration {
    Ark_Tag tag;
    Ark_PreviewConfiguration value;
} Opt_PreviewConfiguration;
typedef struct Ark_PreviewMenuOptions {
    /* kind: Interface */
    Opt_HapticFeedbackMode hapticFeedbackMode;
} Ark_PreviewMenuOptions;
typedef struct Opt_PreviewMenuOptions {
    Ark_Tag tag;
    Ark_PreviewMenuOptions value;
} Opt_PreviewMenuOptions;
typedef struct Ark_PreviewText {
    /* kind: Interface */
    Ark_Number offset;
    Ark_String value;
} Ark_PreviewText;
typedef struct Opt_PreviewText {
    Ark_Tag tag;
    Ark_PreviewText value;
} Opt_PreviewText;
typedef struct Ark_ProgressOptions {
    /* kind: Interface */
    Ark_Number value;
    Opt_Number total;
    Opt_ProgressType type;
} Ark_ProgressOptions;
typedef struct Opt_ProgressOptions {
    Ark_Tag tag;
    Ark_ProgressOptions value;
} Opt_ProgressOptions;
typedef struct Ark_RadioConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_String value;
    Ark_Boolean checked;
    Callback_Boolean_Void triggerChange;
} Ark_RadioConfiguration;
typedef struct Opt_RadioConfiguration {
    Ark_Tag tag;
    Ark_RadioConfiguration value;
} Opt_RadioConfiguration;
typedef struct Ark_RadioOptions {
    /* kind: Interface */
    Ark_String group;
    Ark_String value;
    Opt_RadioIndicatorType indicatorType;
    Opt_CustomNodeBuilder indicatorBuilder;
} Ark_RadioOptions;
typedef struct Opt_RadioOptions {
    Ark_Tag tag;
    Ark_RadioOptions value;
} Opt_RadioOptions;
typedef struct Ark_RatingConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_Number rating;
    Ark_Boolean indicator;
    Ark_Number stars;
    Ark_Number stepSize;
    Callback_Number_Void triggerChange;
} Ark_RatingConfiguration;
typedef struct Opt_RatingConfiguration {
    Ark_Tag tag;
    Ark_RatingConfiguration value;
} Opt_RatingConfiguration;
typedef struct Ark_RatingOptions {
    /* kind: Interface */
    Opt_Number rating;
    Opt_Boolean indicator;
} Ark_RatingOptions;
typedef struct Opt_RatingOptions {
    Ark_Tag tag;
    Ark_RatingOptions value;
} Opt_RatingOptions;
typedef struct Opt_RenderingContextSettings {
    Ark_Tag tag;
    Ark_RenderingContextSettings value;
} Opt_RenderingContextSettings;
typedef struct Ark_RenderProcessNotRespondingData {
    /* kind: Interface */
    Ark_String jsStack;
    Ark_Int32 pid;
    Ark_RenderProcessNotRespondingReason reason;
} Ark_RenderProcessNotRespondingData;
typedef struct Opt_RenderProcessNotRespondingData {
    Ark_Tag tag;
    Ark_RenderProcessNotRespondingData value;
} Opt_RenderProcessNotRespondingData;
typedef struct Opt_ReplaceSymbolEffect {
    Ark_Tag tag;
    Ark_ReplaceSymbolEffect value;
} Opt_ReplaceSymbolEffect;
typedef struct Ark_Resource {
    /* kind: Interface */
    Ark_String bundleName;
    Ark_String moduleName;
    Ark_Number id;
    Opt_Array_String params;
    Opt_Number type;
} Ark_Resource;
typedef struct Opt_Resource {
    Ark_Tag tag;
    Ark_Resource value;
} Opt_Resource;
typedef struct Ark_ResourceColor {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_Number value1;
        Ark_String value2;
        Ark_Resource value3;
    };
} Ark_ResourceColor;
typedef struct Opt_ResourceColor {
    Ark_Tag tag;
    Ark_ResourceColor value;
} Opt_ResourceColor;
typedef struct Ark_ResourceStr {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Resource value1;
    };
} Ark_ResourceStr;
typedef struct Opt_ResourceStr {
    Ark_Tag tag;
    Ark_ResourceStr value;
} Opt_ResourceStr;
typedef struct Ark_RichEditorBuilderSpanOptions {
    /* kind: Interface */
    Opt_Number offset;
    Opt_ColorMetrics dragBackgroundColor;
    Opt_Boolean isDragShadowNeeded;
} Ark_RichEditorBuilderSpanOptions;
typedef struct Opt_RichEditorBuilderSpanOptions {
    Ark_Tag tag;
    Ark_RichEditorBuilderSpanOptions value;
} Opt_RichEditorBuilderSpanOptions;
typedef struct Ark_RichEditorDeleteValue {
    /* kind: Interface */
    Ark_Number offset;
    Ark_RichEditorDeleteDirection direction;
    Ark_Number length;
    Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult richEditorDeleteSpans;
} Ark_RichEditorDeleteValue;
typedef struct Opt_RichEditorDeleteValue {
    Ark_Tag tag;
    Ark_RichEditorDeleteValue value;
} Opt_RichEditorDeleteValue;
typedef struct Ark_RichEditorGesture {
    /* kind: Interface */
    Opt_Callback_ClickEvent_Void onClick;
    Opt_Callback_GestureEvent_Void onLongPress;
    Opt_Callback_GestureEvent_Void onDoubleClick;
} Ark_RichEditorGesture;
typedef struct Opt_RichEditorGesture {
    Ark_Tag tag;
    Ark_RichEditorGesture value;
} Opt_RichEditorGesture;
typedef struct Ark_RichEditorInsertValue {
    /* kind: Interface */
    Ark_Number insertOffset;
    Ark_String insertValue;
    Opt_String previewText;
} Ark_RichEditorInsertValue;
typedef struct Opt_RichEditorInsertValue {
    Ark_Tag tag;
    Ark_RichEditorInsertValue value;
} Opt_RichEditorInsertValue;
typedef struct Ark_RichEditorRange {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
} Ark_RichEditorRange;
typedef struct Opt_RichEditorRange {
    Ark_Tag tag;
    Ark_RichEditorRange value;
} Opt_RichEditorRange;
typedef struct Ark_RichEditorSelection {
    /* kind: Interface */
    Ark_Tuple_Number_Number selection;
    Array_Union_RichEditorTextSpanResult_RichEditorImageSpanResult spans;
} Ark_RichEditorSelection;
typedef struct Opt_RichEditorSelection {
    Ark_Tag tag;
    Ark_RichEditorSelection value;
} Opt_RichEditorSelection;
typedef struct Ark_RichEditorSpanPosition {
    /* kind: Interface */
    Ark_Number spanIndex;
    Ark_Tuple_Number_Number spanRange;
} Ark_RichEditorSpanPosition;
typedef struct Opt_RichEditorSpanPosition {
    Ark_Tag tag;
    Ark_RichEditorSpanPosition value;
} Opt_RichEditorSpanPosition;
typedef struct Ark_RotateOptions {
    /* kind: Interface */
    Opt_Number x;
    Opt_Number y;
    Opt_Number z;
    Opt_Union_Number_String centerX;
    Opt_Union_Number_String centerY;
    Opt_Number centerZ;
    Opt_Number perspective;
    Ark_Union_Number_String angle;
} Ark_RotateOptions;
typedef struct Opt_RotateOptions {
    Ark_Tag tag;
    Ark_RotateOptions value;
} Opt_RotateOptions;
typedef struct Ark_RotationGestureHandlerOptions {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number fingers;
    Opt_Number angle;
} Ark_RotationGestureHandlerOptions;
typedef struct Opt_RotationGestureHandlerOptions {
    Ark_Tag tag;
    Ark_RotationGestureHandlerOptions value;
} Opt_RotationGestureHandlerOptions;
typedef struct Ark_RoundRect {
    /* kind: Interface */
    Ark_common2D_Rect rect;
    Ark_CornerRadius corners;
} Ark_RoundRect;
typedef struct Opt_RoundRect {
    Ark_Tag tag;
    Ark_RoundRect value;
} Opt_RoundRect;
typedef struct Ark_RoundRectShapeOptions {
    /* kind: Interface */
    Opt_Union_Number_String width;
    Opt_Union_Number_String height;
    Opt_Union_Number_String radiusWidth;
    Opt_Union_Number_String radiusHeight;
} Ark_RoundRectShapeOptions;
typedef struct Opt_RoundRectShapeOptions {
    Ark_Tag tag;
    Ark_RoundRectShapeOptions value;
} Opt_RoundRectShapeOptions;
typedef struct Ark_RouteMapConfig {
    /* kind: Interface */
    Ark_String name;
    Ark_String pageSourceFile;
    Ark_Object data;
} Ark_RouteMapConfig;
typedef struct Opt_RouteMapConfig {
    Ark_Tag tag;
    Ark_RouteMapConfig value;
} Opt_RouteMapConfig;
typedef struct Ark_RowOptions {
    /* kind: Interface */
    Opt_Union_String_Number space;
} Ark_RowOptions;
typedef struct Opt_RowOptions {
    Ark_Tag tag;
    Ark_RowOptions value;
} Opt_RowOptions;
typedef struct Ark_ScaleOptions {
    /* kind: Interface */
    Opt_Number x;
    Opt_Number y;
    Opt_Number z;
    Opt_Union_Number_String centerX;
    Opt_Union_Number_String centerY;
} Ark_ScaleOptions;
typedef struct Opt_ScaleOptions {
    Ark_Tag tag;
    Ark_ScaleOptions value;
} Opt_ScaleOptions;
typedef struct Opt_ScaleSymbolEffect {
    Ark_Tag tag;
    Ark_ScaleSymbolEffect value;
} Opt_ScaleSymbolEffect;
typedef struct Ark_ScreenCaptureConfig {
    /* kind: Interface */
    Ark_WebCaptureMode captureMode;
} Ark_ScreenCaptureConfig;
typedef struct Opt_ScreenCaptureConfig {
    Ark_Tag tag;
    Ark_ScreenCaptureConfig value;
} Opt_ScreenCaptureConfig;
typedef struct Ark_ScriptItem {
    /* kind: Interface */
    Ark_String script;
    Array_String scriptRules;
} Ark_ScriptItem;
typedef struct Opt_ScriptItem {
    Ark_Tag tag;
    Ark_ScriptItem value;
} Opt_ScriptItem;
typedef struct Ark_ScrollAnimationOptions {
    /* kind: Interface */
    Opt_Number duration;
    Opt_Union_Curve_ICurve curve;
    Opt_Boolean canOverScroll;
} Ark_ScrollAnimationOptions;
typedef struct Opt_ScrollAnimationOptions {
    Ark_Tag tag;
    Ark_ScrollAnimationOptions value;
} Opt_ScrollAnimationOptions;
typedef struct Ark_ScrollBarOptions {
    /* kind: Interface */
    Ark_Scroller scroller;
    Opt_ScrollBarDirection direction;
    Opt_BarState state;
} Ark_ScrollBarOptions;
typedef struct Opt_ScrollBarOptions {
    Ark_Tag tag;
    Ark_ScrollBarOptions value;
} Opt_ScrollBarOptions;
typedef struct Ark_ScrollEdgeOptions {
    /* kind: Interface */
    Opt_Number velocity;
} Ark_ScrollEdgeOptions;
typedef struct Opt_ScrollEdgeOptions {
    Ark_Tag tag;
    Ark_ScrollEdgeOptions value;
} Opt_ScrollEdgeOptions;
typedef struct Ark_ScrollPageOptions {
    /* kind: Interface */
    Ark_Boolean next;
    Opt_Boolean animation;
} Ark_ScrollPageOptions;
typedef struct Opt_ScrollPageOptions {
    Ark_Tag tag;
    Ark_ScrollPageOptions value;
} Opt_ScrollPageOptions;
typedef struct Ark_SelectionMenuOptionsExt {
    /* kind: Interface */
    Opt_Callback_Void onAppear;
    Opt_Callback_Void onDisappear;
    Opt_CustomNodeBuilder preview;
    Opt_MenuType menuType;
} Ark_SelectionMenuOptionsExt;
typedef struct Opt_SelectionMenuOptionsExt {
    Ark_Tag tag;
    Ark_SelectionMenuOptionsExt value;
} Opt_SelectionMenuOptionsExt;
typedef struct Ark_SelectionOptions {
    /* kind: Interface */
    Opt_MenuPolicy menuPolicy;
} Ark_SelectionOptions;
typedef struct Opt_SelectionOptions {
    Ark_Tag tag;
    Ark_SelectionOptions value;
} Opt_SelectionOptions;
typedef struct Ark_ShapeSize {
    /* kind: Interface */
    Opt_Union_Number_String width;
    Opt_Union_Number_String height;
} Ark_ShapeSize;
typedef struct Opt_ShapeSize {
    Ark_Tag tag;
    Ark_ShapeSize value;
} Opt_ShapeSize;
typedef struct Ark_SheetDismiss {
    /* kind: Interface */
    VoidCallback dismiss;
} Ark_SheetDismiss;
typedef struct Opt_SheetDismiss {
    Ark_Tag tag;
    Ark_SheetDismiss value;
} Opt_SheetDismiss;
typedef struct Ark_SlideRange {
    /* kind: Interface */
    Opt_Number from;
    Opt_Number to;
} Ark_SlideRange;
typedef struct Opt_SlideRange {
    Ark_Tag tag;
    Ark_SlideRange value;
} Opt_SlideRange;
typedef struct Ark_SliderConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_Number value;
    Ark_Number min;
    Ark_Number max;
    Ark_Number step;
    SliderTriggerChangeCallback triggerChange;
} Ark_SliderConfiguration;
typedef struct Opt_SliderConfiguration {
    Ark_Tag tag;
    Ark_SliderConfiguration value;
} Opt_SliderConfiguration;
typedef struct Ark_SliderOptions {
    /* kind: Interface */
    Opt_Number value;
    Opt_Number min;
    Opt_Number max;
    Opt_Number step;
    Opt_SliderStyle style;
    Opt_Axis direction;
    Opt_Boolean reverse;
} Ark_SliderOptions;
typedef struct Opt_SliderOptions {
    Ark_Tag tag;
    Ark_SliderOptions value;
} Opt_SliderOptions;
typedef struct Ark_SnapshotOptions {
    /* kind: Interface */
    Opt_Number scale;
    Opt_Boolean waitUntilRenderFinished;
} Ark_SnapshotOptions;
typedef struct Opt_SnapshotOptions {
    Ark_Tag tag;
    Ark_SnapshotOptions value;
} Opt_SnapshotOptions;
typedef struct Ark_SpringBackAction {
    /* kind: Interface */
    VoidCallback springBack;
} Ark_SpringBackAction;
typedef struct Opt_SpringBackAction {
    Ark_Tag tag;
    Ark_SpringBackAction value;
} Opt_SpringBackAction;
typedef struct Ark_SslErrorEvent {
    /* kind: Interface */
    Ark_SslErrorHandler handler;
    Ark_SslError error;
    Ark_String url;
    Ark_String originalUrl;
    Ark_String referrer;
    Ark_Boolean isFatalError;
    Ark_Boolean isMainFrame;
} Ark_SslErrorEvent;
typedef struct Opt_SslErrorEvent {
    Ark_Tag tag;
    Ark_SslErrorEvent value;
} Opt_SslErrorEvent;
typedef struct Ark_StackOptions {
    /* kind: Interface */
    Opt_Alignment alignContent;
} Ark_StackOptions;
typedef struct Opt_StackOptions {
    Ark_Tag tag;
    Ark_StackOptions value;
} Opt_StackOptions;
typedef struct Ark_StateStyles {
    /* kind: Interface */
    Opt_CustomStyles normal;
    Opt_CustomStyles pressed;
    Opt_CustomStyles disabled;
    Opt_CustomStyles focused;
    Opt_CustomStyles clicked;
    Opt_CustomStyles selected;
} Ark_StateStyles;
typedef struct Opt_StateStyles {
    Ark_Tag tag;
    Ark_StateStyles value;
} Opt_StateStyles;
typedef struct Ark_StepperOptions {
    /* kind: Interface */
    Opt_Number index;
} Ark_StepperOptions;
typedef struct Opt_StepperOptions {
    Ark_Tag tag;
    Ark_StepperOptions value;
} Opt_StepperOptions;
typedef struct Ark_StyledStringChangedListener {
    /* kind: Interface */
    Opt_Callback_StyledStringChangeValue_Boolean onWillChange;
    Opt_OnDidChangeCallback onDidChange;
} Ark_StyledStringChangedListener;
typedef struct Opt_StyledStringChangedListener {
    Ark_Tag tag;
    Ark_StyledStringChangedListener value;
} Opt_StyledStringChangedListener;
typedef struct Ark_SurfaceRect {
    /* kind: Interface */
    Opt_Number offsetX;
    Opt_Number offsetY;
    Ark_Number surfaceWidth;
    Ark_Number surfaceHeight;
} Ark_SurfaceRect;
typedef struct Opt_SurfaceRect {
    Ark_Tag tag;
    Ark_SurfaceRect value;
} Opt_SurfaceRect;
typedef struct Ark_SurfaceRotationOptions {
    /* kind: Interface */
    Opt_Boolean lock;
} Ark_SurfaceRotationOptions;
typedef struct Opt_SurfaceRotationOptions {
    Ark_Tag tag;
    Ark_SurfaceRotationOptions value;
} Opt_SurfaceRotationOptions;
typedef struct Ark_SwipeGestureHandlerOptions {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number fingers;
    Opt_SwipeDirection direction;
    Opt_Number speed;
} Ark_SwipeGestureHandlerOptions;
typedef struct Opt_SwipeGestureHandlerOptions {
    Ark_Tag tag;
    Ark_SwipeGestureHandlerOptions value;
} Opt_SwipeGestureHandlerOptions;
typedef struct Ark_SwiperAutoFill {
    /* kind: Interface */
    Ark_VP minSize;
} Ark_SwiperAutoFill;
typedef struct Opt_SwiperAutoFill {
    Ark_Tag tag;
    Ark_SwiperAutoFill value;
} Opt_SwiperAutoFill;
typedef struct Ark_SwiperContentAnimatedTransition {
    /* kind: Interface */
    Opt_Number timeout;
    Callback_SwiperContentTransitionProxy_Void transition;
} Ark_SwiperContentAnimatedTransition;
typedef struct Opt_SwiperContentAnimatedTransition {
    Ark_Tag tag;
    Ark_SwiperContentAnimatedTransition value;
} Opt_SwiperContentAnimatedTransition;
typedef struct Ark_SystemAdaptiveOptions {
    /* kind: Interface */
    Opt_Boolean disableSystemAdaptation;
} Ark_SystemAdaptiveOptions;
typedef struct Opt_SystemAdaptiveOptions {
    Ark_Tag tag;
    Ark_SystemAdaptiveOptions value;
} Opt_SystemAdaptiveOptions;
typedef struct Opt_TabBarSymbol {
    Ark_Tag tag;
    Ark_TabBarSymbol value;
} Opt_TabBarSymbol;
typedef struct Ark_TabContentAnimatedTransition {
    /* kind: Interface */
    Opt_Number timeout;
    Callback_TabContentTransitionProxy_Void transition;
} Ark_TabContentAnimatedTransition;
typedef struct Opt_TabContentAnimatedTransition {
    Ark_Tag tag;
    Ark_TabContentAnimatedTransition value;
} Opt_TabContentAnimatedTransition;
typedef struct Ark_TabsOptions {
    /* kind: Interface */
    Opt_BarPosition barPosition;
    Opt_Number index;
    Opt_TabsController controller;
} Ark_TabsOptions;
typedef struct Opt_TabsOptions {
    Ark_Tag tag;
    Ark_TabsOptions value;
} Opt_TabsOptions;
typedef struct Ark_TapGestureParameters {
    /* kind: Interface */
    Opt_Boolean isFingerCountLimited;
    Opt_Number count;
    Opt_Number fingers;
    Opt_Number distanceThreshold;
} Ark_TapGestureParameters;
typedef struct Opt_TapGestureParameters {
    Ark_Tag tag;
    Ark_TapGestureParameters value;
} Opt_TapGestureParameters;
typedef struct Ark_TargetInfo {
    /* kind: Interface */
    Ark_Union_String_Number id;
    Opt_Number componentId;
} Ark_TargetInfo;
typedef struct Opt_TargetInfo {
    Ark_Tag tag;
    Ark_TargetInfo value;
} Opt_TargetInfo;
typedef struct Ark_text_FontDescriptor {
    /* kind: Interface */
    Opt_String path;
    Opt_String postScriptName;
    Opt_String fullName;
    Opt_String fontFamily;
    Opt_String fontSubfamily;
    Opt_text_FontWeight weight;
    Opt_Number width;
    Opt_Number italic;
    Opt_Boolean monoSpace;
    Opt_Boolean symbolic;
} Ark_text_FontDescriptor;
typedef struct Opt_text_FontDescriptor {
    Ark_Tag tag;
    Ark_text_FontDescriptor value;
} Opt_text_FontDescriptor;
typedef struct Ark_text_LineMetrics {
    /* kind: Interface */
    Ark_Number startIndex;
    Ark_Number endIndex;
    Ark_Number ascent;
    Ark_Number descent;
    Ark_Number height;
    Ark_Number width;
    Ark_Number left;
    Ark_Number baseline;
    Ark_Number lineNumber;
    Ark_Number topHeight;
    Map_Number_text_RunMetrics runMetrics;
} Ark_text_LineMetrics;
typedef struct Opt_text_LineMetrics {
    Ark_Tag tag;
    Ark_text_LineMetrics value;
} Opt_text_LineMetrics;
typedef struct Ark_text_PlaceholderSpan {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
    Ark_text_PlaceholderAlignment align;
    Ark_text_TextBaseline baseline;
    Ark_Number baselineOffset;
} Ark_text_PlaceholderSpan;
typedef struct Opt_text_PlaceholderSpan {
    Ark_Tag tag;
    Ark_text_PlaceholderSpan value;
} Opt_text_PlaceholderSpan;
typedef struct Ark_text_RectStyle {
    /* kind: Interface */
    Ark_common2D_Color color;
    Ark_Number leftTopRadius;
    Ark_Number rightTopRadius;
    Ark_Number rightBottomRadius;
    Ark_Number leftBottomRadius;
} Ark_text_RectStyle;
typedef struct Opt_text_RectStyle {
    Ark_Tag tag;
    Ark_text_RectStyle value;
} Opt_text_RectStyle;
typedef struct Ark_text_StrutStyle {
    /* kind: Interface */
    Opt_Array_String fontFamilies;
    Opt_text_FontStyle fontStyle;
    Opt_text_FontWidth fontWidth;
    Opt_text_FontWeight fontWeight;
    Opt_Number fontSize;
    Opt_Number height;
    Opt_Number leading;
    Opt_Boolean forceHeight;
    Opt_Boolean enabled;
    Opt_Boolean heightOverride;
    Opt_Boolean halfLeading;
} Ark_text_StrutStyle;
typedef struct Opt_text_StrutStyle {
    Ark_Tag tag;
    Ark_text_StrutStyle value;
} Opt_text_StrutStyle;
typedef struct Ark_text_TextBox {
    /* kind: Interface */
    Ark_common2D_Rect rect;
    Ark_text_TextDirection direction;
} Ark_text_TextBox;
typedef struct Opt_text_TextBox {
    Ark_Tag tag;
    Ark_text_TextBox value;
} Opt_text_TextBox;
typedef struct Ark_TextClockOptions {
    /* kind: Interface */
    Opt_Number timeZoneOffset;
    Opt_TextClockController controller;
} Ark_TextClockOptions;
typedef struct Opt_TextClockOptions {
    Ark_Tag tag;
    Ark_TextClockOptions value;
} Opt_TextClockOptions;
typedef struct Ark_TextContentControllerOptions {
    /* kind: Interface */
    Opt_Number offset;
} Ark_TextContentControllerOptions;
typedef struct Opt_TextContentControllerOptions {
    Ark_Tag tag;
    Ark_TextContentControllerOptions value;
} Opt_TextContentControllerOptions;
typedef struct Ark_TextMarqueeOptions {
    /* kind: Interface */
    Ark_Boolean start;
    Opt_Number step;
    Opt_Number loop;
    Opt_Boolean fromStart;
    Opt_Number delay;
    Opt_Boolean fadeout;
    Opt_MarqueeStartPolicy marqueeStartPolicy;
} Ark_TextMarqueeOptions;
typedef struct Opt_TextMarqueeOptions {
    Ark_Tag tag;
    Ark_TextMarqueeOptions value;
} Opt_TextMarqueeOptions;
typedef struct Ark_TextMenuOptions {
    /* kind: Interface */
    Opt_TextMenuShowMode showMode;
} Ark_TextMenuOptions;
typedef struct Opt_TextMenuOptions {
    Ark_Tag tag;
    Ark_TextMenuOptions value;
} Opt_TextMenuOptions;
typedef struct Ark_TextRange {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
} Ark_TextRange;
typedef struct Opt_TextRange {
    Ark_Tag tag;
    Ark_TextRange value;
} Opt_TextRange;
typedef struct Opt_TextShadowStyle {
    Ark_Tag tag;
    Ark_TextShadowStyle value;
} Opt_TextShadowStyle;
typedef struct Ark_TextTimerOptions {
    /* kind: Interface */
    Opt_Boolean isCountDown;
    Opt_TextTimerController controller;
} Ark_TextTimerOptions;
typedef struct Opt_TextTimerOptions {
    Ark_Tag tag;
    Ark_TextTimerOptions value;
} Opt_TextTimerOptions;
typedef struct Ark_TimePickerOptions {
    /* kind: Interface */
    Opt_Date selected;
    Opt_TimePickerFormat format;
    Opt_Date start;
    Opt_Date end;
} Ark_TimePickerOptions;
typedef struct Opt_TimePickerOptions {
    Ark_Tag tag;
    Ark_TimePickerOptions value;
} Opt_TimePickerOptions;
typedef struct Ark_TipsMessageType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_StyledString value1;
    };
} Ark_TipsMessageType;
typedef struct Opt_TipsMessageType {
    Ark_Tag tag;
    Ark_TipsMessageType value;
} Opt_TipsMessageType;
typedef struct Ark_ToggleConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_Boolean isOn;
    Callback_Boolean_Void triggerChange;
} Ark_ToggleConfiguration;
typedef struct Opt_ToggleConfiguration {
    Ark_Tag tag;
    Ark_ToggleConfiguration value;
} Opt_ToggleConfiguration;
typedef struct Ark_ToggleOptions {
    /* kind: Interface */
    Ark_ToggleType type;
    Opt_Boolean isOn;
} Ark_ToggleOptions;
typedef struct Opt_ToggleOptions {
    Ark_Tag tag;
    Ark_ToggleOptions value;
} Opt_ToggleOptions;
typedef struct Ark_TouchObject {
    /* kind: Interface */
    Ark_TouchType type;
    Ark_Number id;
    Ark_Number displayX;
    Ark_Number displayY;
    Ark_Number windowX;
    Ark_Number windowY;
    Ark_Number x;
    Ark_Number y;
    Opt_InteractionHand hand;
    Opt_Number pressedTime;
    Opt_Number pressure;
    Opt_Number width;
    Opt_Number height;
} Ark_TouchObject;
typedef struct Opt_TouchObject {
    Ark_Tag tag;
    Ark_TouchObject value;
} Opt_TouchObject;
typedef struct Ark_TouchResult {
    /* kind: Interface */
    Ark_TouchTestStrategy strategy;
    Opt_String id;
} Ark_TouchResult;
typedef struct Opt_TouchResult {
    Ark_Tag tag;
    Ark_TouchResult value;
} Opt_TouchResult;
typedef struct Ark_TranslateOptions {
    /* kind: Interface */
    Opt_Union_Number_String x;
    Opt_Union_Number_String y;
    Opt_Union_Number_String z;
} Ark_TranslateOptions;
typedef struct Opt_TranslateOptions {
    Ark_Tag tag;
    Ark_TranslateOptions value;
} Opt_TranslateOptions;
typedef struct Ark_Tuple_ResourceColor_Number {
    /* kind: Interface */
    Ark_ResourceColor value0;
    Ark_Number value1;
} Ark_Tuple_ResourceColor_Number;
typedef struct Opt_Tuple_ResourceColor_Number {
    Ark_Tag tag;
    Ark_Tuple_ResourceColor_Number value;
} Opt_Tuple_ResourceColor_Number;
typedef struct Ark_uiEffect_BrightnessBlender {
    /* kind: Interface */
    Ark_Number cubicRate;
    Ark_Number quadraticRate;
    Ark_Number linearRate;
    Ark_Number degree;
    Ark_Number saturation;
    Ark_uiEffect_Tuple_Number_Number_Number positiveCoefficient;
    Ark_uiEffect_Tuple_Number_Number_Number negativeCoefficient;
    Ark_Number fraction;
} Ark_uiEffect_BrightnessBlender;
typedef struct Opt_uiEffect_BrightnessBlender {
    Ark_Tag tag;
    Ark_uiEffect_BrightnessBlender value;
} Opt_uiEffect_BrightnessBlender;
typedef struct Ark_uiEffect_BrightnessBlenderParam {
    /* kind: Interface */
    Ark_Number cubicRate;
    Ark_Number quadraticRate;
    Ark_Number linearRate;
    Ark_Number degree;
    Ark_Number saturation;
    Ark_uiEffect_Tuple_Number_Number_Number positiveCoefficient;
    Ark_uiEffect_Tuple_Number_Number_Number negativeCoefficient;
    Ark_Number fraction;
} Ark_uiEffect_BrightnessBlenderParam;
typedef struct Opt_uiEffect_BrightnessBlenderParam {
    Ark_Tag tag;
    Ark_uiEffect_BrightnessBlenderParam value;
} Opt_uiEffect_BrightnessBlenderParam;
typedef struct Ark_UIExtensionOptions {
    /* kind: Interface */
    Opt_Boolean isTransferringCaller;
    Opt_ComponentContent placeholder;
    Opt_Map_String_ComponentContent areaChangePlaceholder;
    Opt_DpiFollowStrategy dpiFollowStrategy;
    Opt_WindowModeFollowStrategy windowModeFollowStrategy;
} Ark_UIExtensionOptions;
typedef struct Opt_UIExtensionOptions {
    Ark_Tag tag;
    Ark_UIExtensionOptions value;
} Opt_UIExtensionOptions;
typedef struct Ark_unifiedDataChannel_Summary {
    /* kind: Interface */
    Map_String_Int64 summary;
    Ark_Int64 totalSize;
} Ark_unifiedDataChannel_Summary;
typedef struct Opt_unifiedDataChannel_Summary {
    Ark_Tag tag;
    Ark_unifiedDataChannel_Summary value;
} Opt_unifiedDataChannel_Summary;
typedef struct Ark_Union_Array_MenuElement_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Array_MenuElement value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_Array_MenuElement_CustomBuilder;
typedef struct Opt_Union_Array_MenuElement_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_Array_MenuElement_CustomBuilder value;
} Opt_Union_Array_MenuElement_CustomBuilder;
typedef struct Ark_Union_Array_NavigationMenuItem_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Array_NavigationMenuItem value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_Array_NavigationMenuItem_CustomBuilder;
typedef struct Opt_Union_Array_NavigationMenuItem_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_Array_NavigationMenuItem_CustomBuilder value;
} Opt_Union_Array_NavigationMenuItem_CustomBuilder;
typedef struct Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Array_String value0;
        Array_Array_String value1;
        Ark_Resource value2;
        Array_TextPickerRangeContent value3;
        Array_TextCascadePickerRangeContent value4;
    };
} Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent;
typedef struct Opt_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent {
    Ark_Tag tag;
    Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent value;
} Opt_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent;
typedef struct Ark_Union_Array_ToolbarItem_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Array_ToolbarItem value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_Array_ToolbarItem_CustomBuilder;
typedef struct Opt_Union_Array_ToolbarItem_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_Array_ToolbarItem_CustomBuilder value;
} Opt_Union_Array_ToolbarItem_CustomBuilder;
typedef struct Ark_Union_BlendMode_Blender {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_BlendMode value0;
        Ark_uiEffect_BrightnessBlender value1;
    };
} Ark_Union_BlendMode_Blender;
typedef struct Opt_Union_BlendMode_Blender {
    Ark_Tag tag;
    Ark_Union_BlendMode_Blender value;
} Opt_Union_BlendMode_Blender;
typedef struct Ark_Union_Boolean_Callback_DismissPopupAction_Void {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Boolean value0;
        Callback_DismissPopupAction_Void value1;
    };
} Ark_Union_Boolean_Callback_DismissPopupAction_Void;
typedef struct Opt_Union_Boolean_Callback_DismissPopupAction_Void {
    Ark_Tag tag;
    Ark_Union_Boolean_Callback_DismissPopupAction_Void value;
} Opt_Union_Boolean_Callback_DismissPopupAction_Void;
typedef struct Ark_Union_Boolean_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Boolean value0;
        Ark_Resource value1;
    };
} Ark_Union_Boolean_Resource;
typedef struct Opt_Union_Boolean_Resource {
    Ark_Tag tag;
    Ark_Union_Boolean_Resource value;
} Opt_Union_Boolean_Resource;
typedef struct Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Boolean value0;
        Ark_ResourceStr value1;
        Ark_SymbolGlyphModifier value2;
    };
} Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier;
typedef struct Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier {
    Ark_Tag tag;
    Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier value;
} Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier;
typedef struct Ark_Union_BorderStyle_EdgeStyles {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_BorderStyle value0;
        Ark_EdgeStyles value1;
    };
} Ark_Union_BorderStyle_EdgeStyles;
typedef struct Opt_Union_BorderStyle_EdgeStyles {
    Ark_Tag tag;
    Ark_Union_BorderStyle_EdgeStyles value;
} Opt_Union_BorderStyle_EdgeStyles;
typedef struct Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Callback_EnterKeyType_Void value0;
        TextAreaSubmitCallback value1;
    };
} Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback;
typedef struct Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback {
    Ark_Tag tag;
    Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback value;
} Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback;
typedef struct Ark_Union_Callback_String_Void_SearchSubmitCallback {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Callback_String_Void value0;
        SearchSubmitCallback value1;
    };
} Ark_Union_Callback_String_Void_SearchSubmitCallback;
typedef struct Opt_Union_Callback_String_Void_SearchSubmitCallback {
    Ark_Tag tag;
    Ark_Union_Callback_String_Void_SearchSubmitCallback value;
} Opt_Union_Callback_String_Void_SearchSubmitCallback;
typedef struct Ark_Union_Color_Number_String_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_Number value1;
        Ark_String value2;
        Ark_Resource value3;
    };
} Ark_Union_Color_Number_String_Resource;
typedef struct Opt_Union_Color_Number_String_Resource {
    Ark_Tag tag;
    Ark_Union_Color_Number_String_Resource value;
} Opt_Union_Color_Number_String_Resource;
typedef struct Ark_Union_Color_String_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_String value1;
        Ark_Resource value2;
    };
} Ark_Union_Color_String_Resource;
typedef struct Opt_Union_Color_String_Resource {
    Ark_Tag tag;
    Ark_Union_Color_String_Resource value;
} Opt_Union_Color_String_Resource;
typedef struct Ark_Union_Color_String_Resource_ColoringStrategy {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_String value1;
        Ark_Resource value2;
        Ark_ColoringStrategy value3;
    };
} Ark_Union_Color_String_Resource_ColoringStrategy;
typedef struct Opt_Union_Color_String_Resource_ColoringStrategy {
    Ark_Tag tag;
    Ark_Union_Color_String_Resource_ColoringStrategy value;
} Opt_Union_Color_String_Resource_ColoringStrategy;
typedef struct Ark_Union_Color_String_Resource_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Color value0;
        Ark_String value1;
        Ark_Resource value2;
        Ark_Number value3;
    };
} Ark_Union_Color_String_Resource_Number;
typedef struct Opt_Union_Color_String_Resource_Number {
    Ark_Tag tag;
    Ark_Union_Color_String_Resource_Number value;
} Opt_Union_Color_String_Resource_Number;
typedef struct Ark_Union_ColumnOptions_ColumnOptionsV2 {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ColumnOptions value0;
        Ark_ColumnOptionsV2 value1;
    };
} Ark_Union_ColumnOptions_ColumnOptionsV2;
typedef struct Opt_Union_ColumnOptions_ColumnOptionsV2 {
    Ark_Tag tag;
    Ark_Union_ColumnOptions_ColumnOptionsV2 value;
} Opt_Union_ColumnOptions_ColumnOptionsV2;
typedef struct Ark_Union_CustomBuilder_DragItemInfo {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        CustomNodeBuilder value0;
        Ark_DragItemInfo value1;
    };
} Ark_Union_CustomBuilder_DragItemInfo;
typedef struct Opt_Union_CustomBuilder_DragItemInfo {
    Ark_Tag tag;
    Ark_Union_CustomBuilder_DragItemInfo value;
} Opt_Union_CustomBuilder_DragItemInfo;
typedef struct Ark_Union_CustomBuilder_DragItemInfo_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        CustomNodeBuilder value0;
        Ark_DragItemInfo value1;
        Ark_String value2;
    };
} Ark_Union_CustomBuilder_DragItemInfo_String;
typedef struct Opt_Union_CustomBuilder_DragItemInfo_String {
    Ark_Tag tag;
    Ark_Union_CustomBuilder_DragItemInfo_String value;
} Opt_Union_CustomBuilder_DragItemInfo_String;
typedef struct Ark_Union_CustomBuilder_ExtendableComponent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        CustomNodeBuilder value0;
        Ark_ExtendableComponent value1;
    };
} Ark_Union_CustomBuilder_ExtendableComponent;
typedef struct Opt_Union_CustomBuilder_ExtendableComponent {
    Ark_Tag tag;
    Ark_Union_CustomBuilder_ExtendableComponent value;
} Opt_Union_CustomBuilder_ExtendableComponent;
typedef struct Ark_Union_DragPreviewMode_Array_DragPreviewMode {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_DragPreviewMode value0;
        Array_DragPreviewMode value1;
    };
} Ark_Union_DragPreviewMode_Array_DragPreviewMode;
typedef struct Opt_Union_DragPreviewMode_Array_DragPreviewMode {
    Ark_Tag tag;
    Ark_Union_DragPreviewMode_Array_DragPreviewMode value;
} Opt_Union_DragPreviewMode_Array_DragPreviewMode;
typedef struct Ark_Union_EdgeOutlineStyles_OutlineStyle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeOutlineStyles value0;
        Ark_OutlineStyle value1;
    };
} Ark_Union_EdgeOutlineStyles_OutlineStyle;
typedef struct Opt_Union_EdgeOutlineStyles_OutlineStyle {
    Ark_Tag tag;
    Ark_Union_EdgeOutlineStyles_OutlineStyle value;
} Opt_Union_EdgeOutlineStyles_OutlineStyle;
typedef struct Ark_Union_EdgeStyles_BorderStyle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeStyles value0;
        Ark_BorderStyle value1;
    };
} Ark_Union_EdgeStyles_BorderStyle;
typedef struct Opt_Union_EdgeStyles_BorderStyle {
    Ark_Tag tag;
    Ark_Union_EdgeStyles_BorderStyle value;
} Opt_Union_EdgeStyles_BorderStyle;
typedef struct Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_image_PixelMap value0;
        Ark_ResourceStr value1;
        Ark_DrawableDescriptor value2;
        Ark_ASTCResource value3;
    };
} Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource;
typedef struct Opt_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource {
    Ark_Tag tag;
    Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource value;
} Opt_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource;
typedef struct Ark_Union_ImageBitmap_PixelMap {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ImageBitmap value0;
        Ark_image_PixelMap value1;
    };
} Ark_Union_ImageBitmap_PixelMap;
typedef struct Opt_Union_ImageBitmap_PixelMap {
    Ark_Tag tag;
    Ark_Union_ImageBitmap_PixelMap value;
} Opt_Union_ImageBitmap_PixelMap;
typedef struct Ark_Union_LengthMetrics_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_String value1;
    };
} Ark_Union_LengthMetrics_String;
typedef struct Opt_Union_LengthMetrics_String {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_String value;
} Opt_Union_LengthMetrics_String;
typedef struct Ark_Union_MenuPreviewMode_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_MenuPreviewMode value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_MenuPreviewMode_CustomBuilder;
typedef struct Opt_Union_MenuPreviewMode_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_MenuPreviewMode_CustomBuilder value;
} Opt_Union_MenuPreviewMode_CustomBuilder;
typedef struct Ark_Union_NestedScrollOptions_NestedScrollOptionsExt {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_NestedScrollOptions value0;
        Ark_NestedScrollOptionsExt value1;
    };
} Ark_Union_NestedScrollOptions_NestedScrollOptionsExt;
typedef struct Opt_Union_NestedScrollOptions_NestedScrollOptionsExt {
    Ark_Tag tag;
    Ark_Union_NestedScrollOptions_NestedScrollOptionsExt value;
} Opt_Union_NestedScrollOptions_NestedScrollOptionsExt;
typedef struct Ark_Union_Number_Array_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Array_Number value1;
    };
} Ark_Union_Number_Array_Number;
typedef struct Opt_Union_Number_Array_Number {
    Ark_Tag tag;
    Ark_Union_Number_Array_Number value;
} Opt_Union_Number_Array_Number;
typedef struct Ark_Union_Number_FontWeight_ResourceStr {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_FontWeight value1;
        Ark_ResourceStr value2;
    };
} Ark_Union_Number_FontWeight_ResourceStr;
typedef struct Opt_Union_Number_FontWeight_ResourceStr {
    Ark_Tag tag;
    Ark_Union_Number_FontWeight_ResourceStr value;
} Opt_Union_Number_FontWeight_ResourceStr;
typedef struct Ark_Union_Number_GridColColumnOption {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_GridColColumnOption value1;
    };
} Ark_Union_Number_GridColColumnOption;
typedef struct Opt_Union_Number_GridColColumnOption {
    Ark_Tag tag;
    Ark_Union_Number_GridColColumnOption value;
} Opt_Union_Number_GridColColumnOption;
typedef struct Ark_Union_Number_GridRowColumnOption {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_GridRowColumnOption value1;
    };
} Ark_Union_Number_GridRowColumnOption;
typedef struct Opt_Union_Number_GridRowColumnOption {
    Ark_Tag tag;
    Ark_Union_Number_GridRowColumnOption value;
} Opt_Union_Number_GridRowColumnOption;
typedef struct Ark_Union_Number_InvertOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_InvertOptions value1;
    };
} Ark_Union_Number_InvertOptions;
typedef struct Opt_Union_Number_InvertOptions {
    Ark_Tag tag;
    Ark_Union_Number_InvertOptions value;
} Opt_Union_Number_InvertOptions;
typedef struct Ark_Union_Number_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_Resource value1;
    };
} Ark_Union_Number_Resource;
typedef struct Opt_Union_Number_Resource {
    Ark_Tag tag;
    Ark_Union_Number_Resource value;
} Opt_Union_Number_Resource;
typedef struct Ark_Union_Number_ResourceStr {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_ResourceStr value1;
    };
} Ark_Union_Number_ResourceStr;
typedef struct Opt_Union_Number_ResourceStr {
    Ark_Tag tag;
    Ark_Union_Number_ResourceStr value;
} Opt_Union_Number_ResourceStr;
typedef struct Ark_Union_Number_String_Array_Union_Number_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
        Array_Union_Number_String value2;
    };
} Ark_Union_Number_String_Array_Union_Number_String;
typedef struct Opt_Union_Number_String_Array_Union_Number_String {
    Ark_Tag tag;
    Ark_Union_Number_String_Array_Union_Number_String value;
} Opt_Union_Number_String_Array_Union_Number_String;
typedef struct Ark_Union_Number_String_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
        Ark_Resource value2;
    };
} Ark_Union_Number_String_Resource;
typedef struct Opt_Union_Number_String_Resource {
    Ark_Tag tag;
    Ark_Union_Number_String_Resource value;
} Opt_Union_Number_String_Resource;
typedef struct Ark_Union_Number_String_SwiperAutoFill {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_String value1;
        Ark_SwiperAutoFill value2;
    };
} Ark_Union_Number_String_SwiperAutoFill;
typedef struct Opt_Union_Number_String_SwiperAutoFill {
    Ark_Tag tag;
    Ark_Union_Number_String_SwiperAutoFill value;
} Opt_Union_Number_String_SwiperAutoFill;
typedef struct Ark_Union_OutlineStyle_EdgeOutlineStyles {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_OutlineStyle value0;
        Ark_EdgeOutlineStyles value1;
    };
} Ark_Union_OutlineStyle_EdgeOutlineStyles;
typedef struct Opt_Union_OutlineStyle_EdgeOutlineStyles {
    Ark_Tag tag;
    Ark_Union_OutlineStyle_EdgeOutlineStyles value;
} Opt_Union_OutlineStyle_EdgeOutlineStyles;
typedef struct Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_PanGestureInterface_Invoke_Literal value0;
        Ark_PanGestureOptions value1;
    };
} Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions;
typedef struct Opt_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions {
    Ark_Tag tag;
    Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions value;
} Opt_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions;
typedef struct Ark_Union_PixelMap_ResourceStr {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_image_PixelMap value0;
        Ark_ResourceStr value1;
    };
} Ark_Union_PixelMap_ResourceStr;
typedef struct Opt_Union_PixelMap_ResourceStr {
    Ark_Tag tag;
    Ark_Union_PixelMap_ResourceStr value;
} Opt_Union_PixelMap_ResourceStr;
typedef struct Ark_Union_PixelMap_ResourceStr_DrawableDescriptor {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_image_PixelMap value0;
        Ark_ResourceStr value1;
        Ark_DrawableDescriptor value2;
    };
} Ark_Union_PixelMap_ResourceStr_DrawableDescriptor;
typedef struct Opt_Union_PixelMap_ResourceStr_DrawableDescriptor {
    Ark_Tag tag;
    Ark_Union_PixelMap_ResourceStr_DrawableDescriptor value;
} Opt_Union_PixelMap_ResourceStr_DrawableDescriptor;
typedef struct Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_image_PixelMap value0;
        Ark_ResourceStr value1;
        Ark_DrawableDescriptor value2;
        Ark_ImageContent value3;
    };
} Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent;
typedef struct Opt_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent {
    Ark_Tag tag;
    Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent value;
} Opt_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent;
typedef struct Ark_Union_PX_VP_LPX_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_VP value1;
        Ark_String value2;
        Ark_Resource value3;
    };
} Ark_Union_PX_VP_LPX_Resource;
typedef struct Opt_Union_PX_VP_LPX_Resource {
    Ark_Tag tag;
    Ark_Union_PX_VP_LPX_Resource value;
} Opt_Union_PX_VP_LPX_Resource;
typedef struct Ark_Union_Resource_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Resource value0;
        Ark_String value1;
    };
} Ark_Union_Resource_String;
typedef struct Opt_Union_Resource_String {
    Ark_Tag tag;
    Ark_Union_Resource_String value;
} Opt_Union_Resource_String;
typedef struct Ark_Union_ResourceColor_ColorContent_ColorMetrics {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_ColorContent value1;
        Ark_ColorMetrics value2;
    };
} Ark_Union_ResourceColor_ColorContent_ColorMetrics;
typedef struct Opt_Union_ResourceColor_ColorContent_ColorMetrics {
    Ark_Tag tag;
    Ark_Union_ResourceColor_ColorContent_ColorMetrics value;
} Opt_Union_ResourceColor_ColorContent_ColorMetrics;
typedef struct Ark_Union_ResourceColor_ColoringStrategy {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_ColoringStrategy value1;
    };
} Ark_Union_ResourceColor_ColoringStrategy;
typedef struct Opt_Union_ResourceColor_ColoringStrategy {
    Ark_Tag tag;
    Ark_Union_ResourceColor_ColoringStrategy value;
} Opt_Union_ResourceColor_ColoringStrategy;
typedef struct Ark_Union_ResourceColor_LinearGradient {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_LinearGradient value1;
    };
} Ark_Union_ResourceColor_LinearGradient;
typedef struct Opt_Union_ResourceColor_LinearGradient {
    Ark_Tag tag;
    Ark_Union_ResourceColor_LinearGradient value;
} Opt_Union_ResourceColor_LinearGradient;
typedef struct Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_LinearGradient value1;
        Array_Tuple_Union_ResourceColor_LinearGradient_Number value2;
    };
} Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number {
    Ark_Tag tag;
    Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number value;
} Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Ark_Union_ResourceStr_Array_ResourceStr {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Array_ResourceStr value1;
    };
} Ark_Union_ResourceStr_Array_ResourceStr;
typedef struct Opt_Union_ResourceStr_Array_ResourceStr {
    Ark_Tag tag;
    Ark_Union_ResourceStr_Array_ResourceStr value;
} Opt_Union_ResourceStr_Array_ResourceStr;
typedef struct Ark_Union_ResourceStr_ComponentContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_ComponentContent value1;
    };
} Ark_Union_ResourceStr_ComponentContent;
typedef struct Opt_Union_ResourceStr_ComponentContent {
    Ark_Tag tag;
    Ark_Union_ResourceStr_ComponentContent value;
} Opt_Union_ResourceStr_ComponentContent;
typedef struct Ark_Union_ResourceStr_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_ResourceStr_CustomBuilder;
typedef struct Opt_Union_ResourceStr_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_ResourceStr_CustomBuilder value;
} Opt_Union_ResourceStr_CustomBuilder;
typedef struct Ark_Union_ResourceStr_PixelMap {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_image_PixelMap value1;
    };
} Ark_Union_ResourceStr_PixelMap;
typedef struct Opt_Union_ResourceStr_PixelMap {
    Ark_Tag tag;
    Ark_Union_ResourceStr_PixelMap value;
} Opt_Union_ResourceStr_PixelMap;
typedef struct Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_image_PixelMap value1;
        Ark_SymbolGlyphModifier value2;
    };
} Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier;
typedef struct Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier {
    Ark_Tag tag;
    Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier value;
} Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier;
typedef struct Ark_Union_ResourceStr_Resource_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_Resource value1;
        Ark_String value2;
    };
} Ark_Union_ResourceStr_Resource_String;
typedef struct Opt_Union_ResourceStr_Resource_String {
    Ark_Tag tag;
    Ark_Union_ResourceStr_Resource_String value;
} Opt_Union_ResourceStr_Resource_String;
typedef struct Ark_Union_ResourceStr_String_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_String value1;
        Ark_Resource value2;
    };
} Ark_Union_ResourceStr_String_Resource;
typedef struct Opt_Union_ResourceStr_String_Resource {
    Ark_Tag tag;
    Ark_Union_ResourceStr_String_Resource value;
} Opt_Union_ResourceStr_String_Resource;
typedef struct Ark_Union_ResourceStr_TabBarSymbol {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_TabBarSymbol value1;
    };
} Ark_Union_ResourceStr_TabBarSymbol;
typedef struct Opt_Union_ResourceStr_TabBarSymbol {
    Ark_Tag tag;
    Ark_Union_ResourceStr_TabBarSymbol value;
} Opt_Union_ResourceStr_TabBarSymbol;
typedef struct Ark_Union_ResourceStr_Union_ResourceStr_ComponentContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        Ark_Union_ResourceStr_ComponentContent value1;
    };
} Ark_Union_ResourceStr_Union_ResourceStr_ComponentContent;
typedef struct Opt_Union_ResourceStr_Union_ResourceStr_ComponentContent {
    Ark_Tag tag;
    Ark_Union_ResourceStr_Union_ResourceStr_ComponentContent value;
} Opt_Union_ResourceStr_Union_ResourceStr_ComponentContent;
typedef struct Ark_Union_RowOptions_RowOptionsV2 {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RowOptions value0;
        Ark_RowOptionsV2 value1;
    };
} Ark_Union_RowOptions_RowOptionsV2;
typedef struct Opt_Union_RowOptions_RowOptionsV2 {
    Ark_Tag tag;
    Ark_Union_RowOptions_RowOptionsV2 value;
} Opt_Union_RowOptions_RowOptionsV2;
typedef struct Ark_Union_ScrollAnimationOptions_Boolean {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ScrollAnimationOptions value0;
        Ark_Boolean value1;
    };
} Ark_Union_ScrollAnimationOptions_Boolean;
typedef struct Opt_Union_ScrollAnimationOptions_Boolean {
    Ark_Tag tag;
    Ark_Union_ScrollAnimationOptions_Boolean value;
} Opt_Union_ScrollAnimationOptions_Boolean;
typedef struct Ark_Union_String_Array_String {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Array_String value1;
    };
} Ark_Union_String_Array_String;
typedef struct Opt_Union_String_Array_String {
    Ark_Tag tag;
    Ark_Union_String_Array_String value;
} Opt_Union_String_Array_String;
typedef struct Ark_Union_String_CustomBuilder_ComponentContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        CustomNodeBuilder value1;
        Ark_ComponentContent value2;
    };
} Ark_Union_String_CustomBuilder_ComponentContent;
typedef struct Opt_Union_String_CustomBuilder_ComponentContent {
    Ark_Tag tag;
    Ark_Union_String_CustomBuilder_ComponentContent value;
} Opt_Union_String_CustomBuilder_ComponentContent;
typedef struct Ark_Union_String_Number_Buffer_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_Buffer value2;
        Ark_Resource value3;
    };
} Ark_Union_String_Number_Buffer_Resource;
typedef struct Opt_Union_String_Number_Buffer_Resource {
    Ark_Tag tag;
    Ark_Union_String_Number_Buffer_Resource value;
} Opt_Union_String_Number_Buffer_Resource;
typedef struct Ark_Union_String_Number_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_Resource value2;
    };
} Ark_Union_String_Number_Resource;
typedef struct Opt_Union_String_Number_Resource {
    Ark_Tag tag;
    Ark_Union_String_Number_Resource value;
} Opt_Union_String_Number_Resource;
typedef struct Ark_Union_String_Number_Resource_Buffer {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_Resource value2;
        Ark_Buffer value3;
    };
} Ark_Union_String_Number_Resource_Buffer;
typedef struct Opt_Union_String_Number_Resource_Buffer {
    Ark_Tag tag;
    Ark_Union_String_Number_Resource_Buffer value;
} Opt_Union_String_Number_Resource_Buffer;
typedef struct Ark_Union_String_PixelMap_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_image_PixelMap value1;
        Ark_Resource value2;
    };
} Ark_Union_String_PixelMap_Resource;
typedef struct Opt_Union_String_PixelMap_Resource {
    Ark_Tag tag;
    Ark_Union_String_PixelMap_Resource value;
} Opt_Union_String_PixelMap_Resource;
typedef struct Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_image_PixelMap value1;
        Ark_Resource value2;
        Ark_SymbolGlyphModifier value3;
    };
} Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier;
typedef struct Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier {
    Ark_Tag tag;
    Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier value;
} Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier;
typedef struct Ark_Union_String_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Resource value1;
    };
} Ark_Union_String_Resource;
typedef struct Opt_Union_String_Resource {
    Ark_Tag tag;
    Ark_Union_String_Resource value;
} Opt_Union_String_Resource;
typedef struct Ark_Union_String_Resource_ComponentContent {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Resource value1;
        Ark_ComponentContent value2;
    };
} Ark_Union_String_Resource_ComponentContent;
typedef struct Opt_Union_String_Resource_ComponentContent {
    Ark_Tag tag;
    Ark_Union_String_Resource_ComponentContent value;
} Opt_Union_String_Resource_ComponentContent;
typedef struct Ark_Union_String_Resource_LinearGradientOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Resource value1;
        Ark_LinearGradientOptions value2;
    };
} Ark_Union_String_Resource_LinearGradientOptions;
typedef struct Opt_Union_String_Resource_LinearGradientOptions {
    Ark_Tag tag;
    Ark_Union_String_Resource_LinearGradientOptions value;
} Opt_Union_String_Resource_LinearGradientOptions;
typedef struct Ark_Union_String_Resource_PixelMap {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Resource value1;
        Ark_image_PixelMap value2;
    };
} Ark_Union_String_Resource_PixelMap;
typedef struct Opt_Union_String_Resource_PixelMap {
    Ark_Tag tag;
    Ark_Union_String_Resource_PixelMap value;
} Opt_Union_String_Resource_PixelMap;
typedef struct Ark_VisibleAreaEventOptions {
    /* kind: Interface */
    Array_Number ratios;
    Opt_Number expectedUpdateInterval;
} Ark_VisibleAreaEventOptions;
typedef struct Opt_VisibleAreaEventOptions {
    Ark_Tag tag;
    Ark_VisibleAreaEventOptions value;
} Opt_VisibleAreaEventOptions;
typedef struct Ark_VisibleListContentInfo {
    /* kind: Interface */
    Ark_Number index;
    Opt_ListItemGroupArea itemGroupArea;
    Opt_Number itemIndexInGroup;
} Ark_VisibleListContentInfo;
typedef struct Opt_VisibleListContentInfo {
    Ark_Tag tag;
    Ark_VisibleListContentInfo value;
} Opt_VisibleListContentInfo;
typedef struct Ark_Want {
    /* kind: Interface */
    Opt_String bundleName;
    Opt_String abilityName;
    Opt_String deviceId;
    Opt_String uri;
    Opt_String type;
    Opt_Number flags;
    Opt_String action;
    Opt_Map_String_Object parameters;
    Opt_Array_String entities;
    Opt_String moduleName;
} Ark_Want;
typedef struct Opt_Want {
    Ark_Tag tag;
    Ark_Want value;
} Opt_Want;
typedef struct Ark_WaterFlowOptions {
    /* kind: Interface */
    Opt_CustomNodeBuilder footer;
    Opt_ComponentContent footerContent;
    Opt_Scroller scroller;
    Opt_WaterFlowSections sections;
    Opt_WaterFlowLayoutMode layoutMode;
} Ark_WaterFlowOptions;
typedef struct Opt_WaterFlowOptions {
    Ark_Tag tag;
    Ark_WaterFlowOptions value;
} Opt_WaterFlowOptions;
typedef struct Ark_WebKeyboardCallbackInfo {
    /* kind: Interface */
    Ark_WebKeyboardController controller;
    Map_String_String attributes;
} Ark_WebKeyboardCallbackInfo;
typedef struct Opt_WebKeyboardCallbackInfo {
    Ark_Tag tag;
    Ark_WebKeyboardCallbackInfo value;
} Opt_WebKeyboardCallbackInfo;
typedef struct Ark_WebKeyboardOptions {
    /* kind: Interface */
    Ark_Boolean useSystemKeyboard;
    Opt_Int32 enterKeyType;
    Opt_CustomNodeBuilder customKeyboard;
} Ark_WebKeyboardOptions;
typedef struct Opt_WebKeyboardOptions {
    Ark_Tag tag;
    Ark_WebKeyboardOptions value;
} Opt_WebKeyboardOptions;
typedef struct Ark_WebMediaOptions {
    /* kind: Interface */
    Opt_Int32 resumeInterval;
    Opt_Boolean audioExclusive;
} Ark_WebMediaOptions;
typedef struct Opt_WebMediaOptions {
    Ark_Tag tag;
    Ark_WebMediaOptions value;
} Opt_WebMediaOptions;
typedef struct Ark_WebOptions {
    /* kind: Interface */
    Ark_Union_String_Resource src;
    Ark_webview_WebviewController controller;
    Opt_RenderMode renderMode;
    Opt_Boolean incognitoMode;
    Opt_String sharedRenderProcessToken;
} Ark_WebOptions;
typedef struct Opt_WebOptions {
    Ark_Tag tag;
    Ark_WebOptions value;
} Opt_WebOptions;
typedef struct Ark_window_SystemBarStyle {
    /* kind: Interface */
    Opt_String statusBarContentColor;
} Ark_window_SystemBarStyle;
typedef struct Opt_window_SystemBarStyle {
    Ark_Tag tag;
    Ark_window_SystemBarStyle value;
} Opt_window_SystemBarStyle;
typedef struct Ark_WorkerOptions {
    /* kind: Interface */
    Opt_String type;
    Opt_String name;
    Opt_Boolean shared;
} Ark_WorkerOptions;
typedef struct Opt_WorkerOptions {
    Ark_Tag tag;
    Ark_WorkerOptions value;
} Opt_WorkerOptions;
typedef struct Opt_XComponentController {
    Ark_Tag tag;
    Ark_XComponentController value;
} Opt_XComponentController;
typedef struct Ark_AnimateParam {
    /* kind: Interface */
    Opt_Number duration;
    Opt_Number tempo;
    Opt_Union_Curve_String_ICurve curve;
    Opt_Number delay;
    Opt_Number iterations;
    Opt_PlayMode playMode;
    Opt_Callback_Void onFinish;
    Opt_FinishCallbackType finishCallbackType;
    Opt_ExpectedFrameRateRange expectedFrameRateRange;
} Ark_AnimateParam;
typedef struct Opt_AnimateParam {
    Ark_Tag tag;
    Ark_AnimateParam value;
} Opt_AnimateParam;
typedef struct Ark_BackgroundBlurStyleOptions {
    /* kind: Interface */
    Opt_ThemeColorMode colorMode;
    Opt_AdaptiveColor adaptiveColor;
    Opt_Number scale;
    Opt_BlurOptions blurOptions;
    Opt_BlurStyleActivePolicy policy;
    Opt_ResourceColor inactiveColor;
} Ark_BackgroundBlurStyleOptions;
typedef struct Opt_BackgroundBlurStyleOptions {
    Ark_Tag tag;
    Ark_BackgroundBlurStyleOptions value;
} Opt_BackgroundBlurStyleOptions;
typedef struct Ark_BackgroundEffectOptions {
    /* kind: Interface */
    Ark_Number radius;
    Opt_Number saturation;
    Opt_Number brightness;
    Opt_ResourceColor color;
    Opt_AdaptiveColor adaptiveColor;
    Opt_BlurOptions blurOptions;
    Opt_BlurStyleActivePolicy policy;
    Opt_ResourceColor inactiveColor;
} Ark_BackgroundEffectOptions;
typedef struct Opt_BackgroundEffectOptions {
    Ark_Tag tag;
    Ark_BackgroundEffectOptions value;
} Opt_BackgroundEffectOptions;
typedef struct Ark_ButtonIconOptions {
    /* kind: Interface */
    Ark_Union_String_PixelMap_Resource shown;
    Ark_Union_String_PixelMap_Resource hidden;
    Opt_Union_String_PixelMap_Resource switching;
} Ark_ButtonIconOptions;
typedef struct Opt_ButtonIconOptions {
    Ark_Tag tag;
    Ark_ButtonIconOptions value;
} Opt_ButtonIconOptions;
typedef struct Ark_CalendarOptions {
    /* kind: Interface */
    Opt_Union_Number_Resource hintRadius;
    Opt_Date selected;
    Opt_Date start;
    Opt_Date end;
    Opt_Array_DateRange disabledDateRange;
} Ark_CalendarOptions;
typedef struct Opt_CalendarOptions {
    Ark_Tag tag;
    Ark_CalendarOptions value;
} Opt_CalendarOptions;
typedef struct Opt_CanvasRenderer {
    Ark_Tag tag;
    Ark_CanvasRenderer value;
} Opt_CanvasRenderer;
typedef struct Opt_CanvasRenderingContext2D {
    Ark_Tag tag;
    Ark_CanvasRenderingContext2D value;
} Opt_CanvasRenderingContext2D;
typedef struct Ark_CircleStyleOptions {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_LengthMetrics radius;
    Opt_Boolean enableWaveEffect;
    Opt_Boolean enableForeground;
} Ark_CircleStyleOptions;
typedef struct Opt_CircleStyleOptions {
    Ark_Tag tag;
    Ark_CircleStyleOptions value;
} Opt_CircleStyleOptions;
typedef struct Ark_Colors {
    /* kind: Interface */
    Ark_ResourceColor brand;
    Ark_ResourceColor warning;
    Ark_ResourceColor alert;
    Ark_ResourceColor confirm;
    Ark_ResourceColor fontPrimary;
    Ark_ResourceColor fontSecondary;
    Ark_ResourceColor fontTertiary;
    Ark_ResourceColor fontFourth;
    Ark_ResourceColor fontEmphasize;
    Ark_ResourceColor fontOnPrimary;
    Ark_ResourceColor fontOnSecondary;
    Ark_ResourceColor fontOnTertiary;
    Ark_ResourceColor fontOnFourth;
    Ark_ResourceColor iconPrimary;
    Ark_ResourceColor iconSecondary;
    Ark_ResourceColor iconTertiary;
    Ark_ResourceColor iconFourth;
    Ark_ResourceColor iconEmphasize;
    Ark_ResourceColor iconSubEmphasize;
    Ark_ResourceColor iconOnPrimary;
    Ark_ResourceColor iconOnSecondary;
    Ark_ResourceColor iconOnTertiary;
    Ark_ResourceColor iconOnFourth;
    Ark_ResourceColor backgroundPrimary;
    Ark_ResourceColor backgroundSecondary;
    Ark_ResourceColor backgroundTertiary;
    Ark_ResourceColor backgroundFourth;
    Ark_ResourceColor backgroundEmphasize;
    Ark_ResourceColor compForegroundPrimary;
    Ark_ResourceColor compBackgroundPrimary;
    Ark_ResourceColor compBackgroundPrimaryTran;
    Ark_ResourceColor compBackgroundPrimaryContrary;
    Ark_ResourceColor compBackgroundGray;
    Ark_ResourceColor compBackgroundSecondary;
    Ark_ResourceColor compBackgroundTertiary;
    Ark_ResourceColor compBackgroundEmphasize;
    Ark_ResourceColor compBackgroundNeutral;
    Ark_ResourceColor compEmphasizeSecondary;
    Ark_ResourceColor compEmphasizeTertiary;
    Ark_ResourceColor compDivider;
    Ark_ResourceColor compCommonContrary;
    Ark_ResourceColor compBackgroundFocus;
    Ark_ResourceColor compFocusedPrimary;
    Ark_ResourceColor compFocusedSecondary;
    Ark_ResourceColor compFocusedTertiary;
    Ark_ResourceColor interactiveHover;
    Ark_ResourceColor interactivePressed;
    Ark_ResourceColor interactiveFocus;
    Ark_ResourceColor interactiveActive;
    Ark_ResourceColor interactiveSelect;
    Ark_ResourceColor interactiveClick;
} Ark_Colors;
typedef struct Opt_Colors {
    Ark_Tag tag;
    Ark_Colors value;
} Opt_Colors;
typedef struct Ark_ComponentInfo {
    /* kind: Interface */
    Ark_Size size;
    Ark_Offset_componentutils localOffset;
    Ark_Offset_componentutils windowOffset;
    Ark_Offset_componentutils screenOffset;
    Ark_TranslateResult translate;
    Ark_ScaleResult scale;
    Ark_RotateResult rotate;
    Ark_Matrix4Result transform;
} Ark_ComponentInfo;
typedef struct Opt_ComponentInfo {
    Ark_Tag tag;
    Ark_ComponentInfo value;
} Opt_ComponentInfo;
typedef struct Ark_CopyEvent {
    /* kind: Interface */
    Opt_VoidCallback preventDefault;
} Ark_CopyEvent;
typedef struct Opt_CopyEvent {
    Ark_Tag tag;
    Ark_CopyEvent value;
} Opt_CopyEvent;
typedef struct Ark_CutEvent {
    /* kind: Interface */
    Opt_VoidCallback preventDefault;
} Ark_CutEvent;
typedef struct Opt_CutEvent {
    Ark_Tag tag;
    Ark_CutEvent value;
} Opt_CutEvent;
typedef struct Ark_DataPanelShadowOptions {
    /* kind: Interface */
    Opt_Union_Number_Resource radius;
    Opt_Union_Number_Resource offsetX;
    Opt_Union_Number_Resource offsetY;
    Opt_Array_Union_ResourceColor_LinearGradient colors;
} Ark_DataPanelShadowOptions;
typedef struct Opt_DataPanelShadowOptions {
    Ark_Tag tag;
    Ark_DataPanelShadowOptions value;
} Opt_DataPanelShadowOptions;
typedef struct Opt_DecorationStyle {
    Ark_Tag tag;
    Ark_DecorationStyle value;
} Opt_DecorationStyle;
typedef struct Ark_DecorationStyleInterface {
    /* kind: Interface */
    Ark_TextDecorationType type;
    Opt_ResourceColor color;
    Opt_TextDecorationStyle style;
} Ark_DecorationStyleInterface;
typedef struct Opt_DecorationStyleInterface {
    Ark_Tag tag;
    Ark_DecorationStyleInterface value;
} Opt_DecorationStyleInterface;
typedef struct Ark_DecorationStyleResult {
    /* kind: Interface */
    Ark_TextDecorationType type;
    Ark_ResourceColor color;
    Opt_TextDecorationStyle style;
} Ark_DecorationStyleResult;
typedef struct Opt_DecorationStyleResult {
    Ark_Tag tag;
    Ark_DecorationStyleResult value;
} Opt_DecorationStyleResult;
typedef struct Ark_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_Resource value2;
    };
} Ark_Dimension;
typedef struct Opt_Dimension {
    Ark_Tag tag;
    Ark_Dimension value;
} Opt_Dimension;
typedef struct Ark_DividerStyleOptions {
    /* kind: Interface */
    Opt_LengthMetrics strokeWidth;
    Opt_ResourceColor color;
    Opt_LengthMetrics startMargin;
    Opt_LengthMetrics endMargin;
    Opt_DividerMode mode;
} Ark_DividerStyleOptions;
typedef struct Opt_DividerStyleOptions {
    Ark_Tag tag;
    Ark_DividerStyleOptions value;
} Opt_DividerStyleOptions;
typedef struct Ark_DragPreviewOptions {
    /* kind: Interface */
    Opt_Union_DragPreviewMode_Array_DragPreviewMode mode;
    Opt_Union_Boolean_Number numberBadge;
    Opt_DraggingSizeChangeEffect sizeChangeEffect;
} Ark_DragPreviewOptions;
typedef struct Opt_DragPreviewOptions {
    Ark_Tag tag;
    Ark_DragPreviewOptions value;
} Opt_DragPreviewOptions;
typedef struct Ark_EdgeColors {
    /* kind: Interface */
    Opt_ResourceColor top;
    Opt_ResourceColor right;
    Opt_ResourceColor bottom;
    Opt_ResourceColor left;
} Ark_EdgeColors;
typedef struct Opt_EdgeColors {
    Ark_Tag tag;
    Ark_EdgeColors value;
} Opt_EdgeColors;
typedef struct Ark_FadingEdgeOptions {
    /* kind: Interface */
    Opt_LengthMetrics fadingEdgeLength;
} Ark_FadingEdgeOptions;
typedef struct Opt_FadingEdgeOptions {
    Ark_Tag tag;
    Ark_FadingEdgeOptions value;
} Opt_FadingEdgeOptions;
typedef struct Ark_FlexSpaceOptions {
    /* kind: Interface */
    Opt_LengthMetrics main;
    Opt_LengthMetrics cross;
} Ark_FlexSpaceOptions;
typedef struct Opt_FlexSpaceOptions {
    Ark_Tag tag;
    Ark_FlexSpaceOptions value;
} Opt_FlexSpaceOptions;
typedef struct Ark_FocusBoxStyle {
    /* kind: Interface */
    Opt_LengthMetrics margin;
    Opt_ColorMetrics strokeColor;
    Opt_LengthMetrics strokeWidth;
} Ark_FocusBoxStyle;
typedef struct Opt_FocusBoxStyle {
    Ark_Tag tag;
    Ark_FocusBoxStyle value;
} Opt_FocusBoxStyle;
typedef struct Ark_FontOptions {
    /* kind: Interface */
    Ark_Union_String_Resource familyName;
    Ark_Union_String_Resource familySrc;
} Ark_FontOptions;
typedef struct Opt_FontOptions {
    Ark_Tag tag;
    Ark_FontOptions value;
} Opt_FontOptions;
typedef struct Ark_ForegroundBlurStyleOptions {
    /* kind: Interface */
    Opt_ThemeColorMode colorMode;
    Opt_AdaptiveColor adaptiveColor;
    Opt_Number scale;
    Opt_BlurOptions blurOptions;
} Ark_ForegroundBlurStyleOptions;
typedef struct Opt_ForegroundBlurStyleOptions {
    Ark_Tag tag;
    Ark_ForegroundBlurStyleOptions value;
} Opt_ForegroundBlurStyleOptions;
typedef struct Ark_FormInfo {
    /* kind: Interface */
    Ark_Union_I64_String id;
    Ark_String name;
    Ark_String bundle;
    Ark_String ability;
    Ark_String module;
    Opt_FormDimension dimension;
    Opt_Boolean temporary;
    Opt_Want want;
    Opt_FormRenderingMode renderingMode;
    Opt_FormShape shape;
} Ark_FormInfo;
typedef struct Opt_FormInfo {
    Ark_Tag tag;
    Ark_FormInfo value;
} Opt_FormInfo;
typedef struct Ark_GaugeShadowOptions {
    /* kind: Interface */
    Opt_Union_Number_Resource radius;
    Opt_Union_Number_Resource offsetX;
    Opt_Union_Number_Resource offsetY;
} Ark_GaugeShadowOptions;
typedef struct Opt_GaugeShadowOptions {
    Ark_Tag tag;
    Ark_GaugeShadowOptions value;
} Opt_GaugeShadowOptions;
typedef struct Ark_GridColOptions {
    /* kind: Interface */
    Opt_Union_Number_GridColColumnOption span;
    Opt_Union_Number_GridColColumnOption offset;
    Opt_Union_Number_GridColColumnOption order;
} Ark_GridColOptions;
typedef struct Opt_GridColOptions {
    Ark_Tag tag;
    Ark_GridColOptions value;
} Opt_GridColOptions;
typedef struct Ark_HistoricalPoint {
    /* kind: Interface */
    Ark_TouchObject touchObject;
    Ark_Number size;
    Ark_Number force;
    Ark_Number timestamp;
} Ark_HistoricalPoint;
typedef struct Opt_HistoricalPoint {
    Ark_Tag tag;
    Ark_HistoricalPoint value;
} Opt_HistoricalPoint;
typedef struct Ark_ImageError {
    /* kind: Interface */
    Ark_Number componentWidth;
    Ark_Number componentHeight;
    Ark_String message;
    Opt_BusinessError error;
} Ark_ImageError;
typedef struct Opt_ImageError {
    Ark_Tag tag;
    Ark_ImageError value;
} Opt_ImageError;
typedef struct Ark_ImageFrameInfo {
    /* kind: Interface */
    Ark_Union_String_Resource_PixelMap src;
    Opt_Union_Number_String width;
    Opt_Union_Number_String height;
    Opt_Union_Number_String top;
    Opt_Union_Number_String left;
    Opt_Number duration;
} Ark_ImageFrameInfo;
typedef struct Opt_ImageFrameInfo {
    Ark_Tag tag;
    Ark_ImageFrameInfo value;
} Opt_ImageFrameInfo;
typedef struct Opt_Layoutable {
    Ark_Tag tag;
    Ark_Layoutable value;
} Opt_Layoutable;
typedef struct Ark_Length {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_Number value1;
        Ark_Resource value2;
    };
} Ark_Length;
typedef struct Opt_Length {
    Ark_Tag tag;
    Ark_Length value;
} Opt_Length;
typedef struct Ark_LengthConstrain {
    /* kind: Interface */
    Ark_Length minLength;
    Ark_Length maxLength;
} Ark_LengthConstrain;
typedef struct Opt_LengthConstrain {
    Ark_Tag tag;
    Ark_LengthConstrain value;
} Opt_LengthConstrain;
typedef struct Ark_LightSource {
    /* kind: Interface */
    Ark_Dimension positionX;
    Ark_Dimension positionY;
    Ark_Dimension positionZ;
    Ark_Number intensity;
    Opt_ResourceColor color;
} Ark_LightSource;
typedef struct Opt_LightSource {
    Ark_Tag tag;
    Ark_LightSource value;
} Opt_LightSource;
typedef struct Ark_LinearIndicatorStyle {
    /* kind: Interface */
    Opt_LengthMetrics space;
    Opt_LengthMetrics strokeWidth;
    Opt_LengthMetrics strokeRadius;
    Opt_ColorMetrics trackBackgroundColor;
    Opt_ColorMetrics trackColor;
} Ark_LinearIndicatorStyle;
typedef struct Opt_LinearIndicatorStyle {
    Ark_Tag tag;
    Ark_LinearIndicatorStyle value;
} Opt_LinearIndicatorStyle;
typedef struct Ark_LocalizedAlignRuleOptions {
    /* kind: Interface */
    Opt_LocalizedHorizontalAlignParam start;
    Opt_LocalizedHorizontalAlignParam end;
    Opt_LocalizedHorizontalAlignParam middle;
    Opt_LocalizedVerticalAlignParam top;
    Opt_LocalizedVerticalAlignParam bottom;
    Opt_LocalizedVerticalAlignParam center;
    Opt_Bias bias;
} Ark_LocalizedAlignRuleOptions;
typedef struct Opt_LocalizedAlignRuleOptions {
    Ark_Tag tag;
    Ark_LocalizedAlignRuleOptions value;
} Opt_LocalizedAlignRuleOptions;
typedef struct Ark_LocalizedBorderRadiuses {
    /* kind: Interface */
    Opt_LengthMetrics topStart;
    Opt_LengthMetrics topEnd;
    Opt_LengthMetrics bottomStart;
    Opt_LengthMetrics bottomEnd;
} Ark_LocalizedBorderRadiuses;
typedef struct Opt_LocalizedBorderRadiuses {
    Ark_Tag tag;
    Ark_LocalizedBorderRadiuses value;
} Opt_LocalizedBorderRadiuses;
typedef struct Ark_LocalizedEdgeColors {
    /* kind: Interface */
    Opt_ResourceColor top;
    Opt_ResourceColor end;
    Opt_ResourceColor bottom;
    Opt_ResourceColor start;
} Ark_LocalizedEdgeColors;
typedef struct Opt_LocalizedEdgeColors {
    Ark_Tag tag;
    Ark_LocalizedEdgeColors value;
} Opt_LocalizedEdgeColors;
typedef struct Ark_LocalizedEdges {
    /* kind: Interface */
    Opt_LengthMetrics top;
    Opt_LengthMetrics start;
    Opt_LengthMetrics bottom;
    Opt_LengthMetrics end;
} Ark_LocalizedEdges;
typedef struct Opt_LocalizedEdges {
    Ark_Tag tag;
    Ark_LocalizedEdges value;
} Opt_LocalizedEdges;
typedef struct Ark_LocalizedEdgeWidths {
    /* kind: Interface */
    Opt_LengthMetrics top;
    Opt_LengthMetrics end;
    Opt_LengthMetrics bottom;
    Opt_LengthMetrics start;
} Ark_LocalizedEdgeWidths;
typedef struct Opt_LocalizedEdgeWidths {
    Ark_Tag tag;
    Ark_LocalizedEdgeWidths value;
} Opt_LocalizedEdgeWidths;
typedef struct Ark_LocalizedPadding {
    /* kind: Interface */
    Opt_LengthMetrics top;
    Opt_LengthMetrics end;
    Opt_LengthMetrics bottom;
    Opt_LengthMetrics start;
} Ark_LocalizedPadding;
typedef struct Opt_LocalizedPadding {
    Ark_Tag tag;
    Ark_LocalizedPadding value;
} Opt_LocalizedPadding;
typedef struct Ark_LocalizedPosition {
    /* kind: Interface */
    Opt_LengthMetrics start;
    Opt_LengthMetrics top;
} Ark_LocalizedPosition;
typedef struct Opt_LocalizedPosition {
    Ark_Tag tag;
    Ark_LocalizedPosition value;
} Opt_LocalizedPosition;
typedef struct Ark_MeasureOptions {
    /* kind: Interface */
    Ark_Union_String_Resource textContent;
    Opt_Union_Number_String_Resource constraintWidth;
    Opt_Union_Number_String_Resource fontSize;
    Opt_Union_Number_FontStyle fontStyle;
    Opt_Union_Number_String_FontWeight fontWeight;
    Opt_Union_String_Resource fontFamily;
    Opt_Union_Number_String letterSpacing;
    Opt_text_TextAlign textAlign;
    Opt_Union_Number_TextOverflow overflow;
    Opt_Number maxLines;
    Opt_Union_Number_String_Resource lineHeight;
    Opt_Union_Number_String baselineOffset;
    Opt_Union_Number_TextCase textCase;
    Opt_Union_Number_String textIndent;
    Opt_text_WordBreak wordBreak;
} Ark_MeasureOptions;
typedef struct Opt_MeasureOptions {
    Ark_Tag tag;
    Ark_MeasureOptions value;
} Opt_MeasureOptions;
typedef struct Ark_MenuElement {
    /* kind: Interface */
    Ark_ResourceStr value;
    Opt_ResourceStr icon;
    Opt_SymbolGlyphModifier symbolIcon;
    Opt_Boolean enabled;
    Callback_Void action;
} Ark_MenuElement;
typedef struct Opt_MenuElement {
    Ark_Tag tag;
    Ark_MenuElement value;
} Opt_MenuElement;
typedef struct Ark_MenuItemConfiguration {
    /* kind: Interface */
    Ark_Boolean enabled;
    Ark_ContentModifier contentModifier;
    Ark_ResourceStr value;
    Opt_ResourceStr icon;
    Opt_SymbolGlyphModifier symbolIcon;
    Ark_Boolean selected;
    Ark_Number index;
} Ark_MenuItemConfiguration;
typedef struct Opt_MenuItemConfiguration {
    Ark_Tag tag;
    Ark_MenuItemConfiguration value;
} Opt_MenuItemConfiguration;
typedef struct Ark_MenuItemGroupOptions {
    /* kind: Interface */
    Opt_Union_ResourceStr_CustomBuilder header;
    Opt_Union_ResourceStr_CustomBuilder footer;
} Ark_MenuItemGroupOptions;
typedef struct Opt_MenuItemGroupOptions {
    Ark_Tag tag;
    Ark_MenuItemGroupOptions value;
} Opt_MenuItemGroupOptions;
typedef struct Ark_MenuItemOptions {
    /* kind: Interface */
    Opt_ResourceStr startIcon;
    Opt_SymbolGlyphModifier symbolStartIcon;
    Opt_ResourceStr content;
    Opt_ResourceStr endIcon;
    Opt_SymbolGlyphModifier symbolEndIcon;
    Opt_ResourceStr labelInfo;
    Opt_CustomNodeBuilder builder;
} Ark_MenuItemOptions;
typedef struct Opt_MenuItemOptions {
    Ark_Tag tag;
    Ark_MenuItemOptions value;
} Opt_MenuItemOptions;
typedef struct Ark_NativeXComponentParameters {
    /* kind: Interface */
    Ark_XComponentType type;
    Opt_ImageAIOptions imageAIOptions;
} Ark_NativeXComponentParameters;
typedef struct Opt_NativeXComponentParameters {
    Ark_Tag tag;
    Ark_NativeXComponentParameters value;
} Opt_NativeXComponentParameters;
typedef struct Ark_NavDestinationCommonTitle {
    /* kind: Interface */
    Ark_Union_String_Resource main;
    Ark_Union_String_Resource sub;
} Ark_NavDestinationCommonTitle;
typedef struct Opt_NavDestinationCommonTitle {
    Ark_Tag tag;
    Ark_NavDestinationCommonTitle value;
} Opt_NavDestinationCommonTitle;
typedef struct Opt_NavDestinationContext {
    Ark_Tag tag;
    Ark_NavDestinationContext value;
} Opt_NavDestinationContext;
typedef struct Ark_NavigationCommonTitle {
    /* kind: Interface */
    Ark_Union_String_Resource main;
    Ark_Union_String_Resource sub;
} Ark_NavigationCommonTitle;
typedef struct Opt_NavigationCommonTitle {
    Ark_Tag tag;
    Ark_NavigationCommonTitle value;
} Opt_NavigationCommonTitle;
typedef struct Ark_NavigationMenuItem {
    /* kind: Interface */
    Ark_Union_String_Resource value;
    Opt_Union_String_Resource icon;
    Opt_SymbolGlyphModifier symbolIcon;
    Opt_Boolean isEnabled;
    Opt_Callback_Void action;
} Ark_NavigationMenuItem;
typedef struct Opt_NavigationMenuItem {
    Ark_Tag tag;
    Ark_NavigationMenuItem value;
} Opt_NavigationMenuItem;
typedef struct Opt_NavigationTransitionProxy {
    Ark_Tag tag;
    Ark_NavigationTransitionProxy value;
} Opt_NavigationTransitionProxy;
typedef struct Opt_OffscreenCanvasRenderingContext2D {
    Ark_Tag tag;
    Ark_OffscreenCanvasRenderingContext2D value;
} Opt_OffscreenCanvasRenderingContext2D;
typedef struct Ark_Offset {
    /* kind: Interface */
    Ark_Length dx;
    Ark_Length dy;
} Ark_Offset;
typedef struct Opt_Offset {
    Ark_Tag tag;
    Ark_Offset value;
} Opt_Offset;
typedef struct Ark_OverlayOptions {
    /* kind: Interface */
    Opt_Alignment align;
    Opt_OverlayOffset offset;
} Ark_OverlayOptions;
typedef struct Opt_OverlayOptions {
    Ark_Tag tag;
    Ark_OverlayOptions value;
} Opt_OverlayOptions;
typedef struct Ark_PasswordIcon {
    /* kind: Interface */
    Opt_Union_String_Resource onIconSrc;
    Opt_Union_String_Resource offIconSrc;
} Ark_PasswordIcon;
typedef struct Opt_PasswordIcon {
    Ark_Tag tag;
    Ark_PasswordIcon value;
} Opt_PasswordIcon;
typedef struct Ark_PasteEvent {
    /* kind: Interface */
    Opt_VoidCallback preventDefault;
} Ark_PasteEvent;
typedef struct Opt_PasteEvent {
    Ark_Tag tag;
    Ark_PasteEvent value;
} Opt_PasteEvent;
typedef struct Ark_PluginComponentOptions {
    /* kind: Interface */
    Ark_PluginComponentTemplate template_;
    Opt_Object data;
} Ark_PluginComponentOptions;
typedef struct Opt_PluginComponentOptions {
    Ark_Tag tag;
    Ark_PluginComponentOptions value;
} Opt_PluginComponentOptions;
typedef struct Ark_PopupMaskType {
    /* kind: Interface */
    Ark_ResourceColor color;
} Ark_PopupMaskType;
typedef struct Opt_PopupMaskType {
    Ark_Tag tag;
    Ark_PopupMaskType value;
} Opt_PopupMaskType;
typedef struct Ark_RadioStyle {
    /* kind: Interface */
    Opt_ResourceColor checkedBackgroundColor;
    Opt_ResourceColor uncheckedBorderColor;
    Opt_ResourceColor indicatorColor;
} Ark_RadioStyle;
typedef struct Opt_RadioStyle {
    Ark_Tag tag;
    Ark_RadioStyle value;
} Opt_RadioStyle;
typedef struct Ark_RadiusItem {
    /* kind: Interface */
    Ark_Length value0;
    Ark_Length value1;
} Ark_RadiusItem;
typedef struct Opt_RadiusItem {
    Ark_Tag tag;
    Ark_RadiusItem value;
} Opt_RadiusItem;
typedef struct Ark_RectShapeOptions {
    /* kind: Interface */
    Opt_Union_Number_String width;
    Opt_Union_Number_String height;
    Opt_Union_Number_String_Array_Union_Number_String radius;
} Ark_RectShapeOptions;
typedef struct Opt_RectShapeOptions {
    Ark_Tag tag;
    Ark_RectShapeOptions value;
} Opt_RectShapeOptions;
typedef struct Ark_RefreshOptions {
    /* kind: Interface */
    Ark_Boolean refreshing;
    Opt_ResourceStr promptText;
    Opt_CustomNodeBuilder builder;
    Opt_ComponentContent refreshingContent;
} Ark_RefreshOptions;
typedef struct Opt_RefreshOptions {
    Ark_Tag tag;
    Ark_RefreshOptions value;
} Opt_RefreshOptions;
typedef struct Opt_RestrictedWorker {
    Ark_Tag tag;
    Ark_RestrictedWorker value;
} Opt_RestrictedWorker;
typedef struct Ark_ReuseOptions {
    /* kind: Interface */
    Opt_ReuseIdCallback reuseId;
} Ark_ReuseOptions;
typedef struct Opt_ReuseOptions {
    Ark_Tag tag;
    Ark_ReuseOptions value;
} Opt_ReuseOptions;
typedef struct Ark_RichEditorChangeValue {
    /* kind: Interface */
    Ark_TextRange rangeBefore;
    Array_RichEditorTextSpanResult replacedSpans;
    Array_RichEditorImageSpanResult replacedImageSpans;
    Array_RichEditorTextSpanResult replacedSymbolSpans;
} Ark_RichEditorChangeValue;
typedef struct Opt_RichEditorChangeValue {
    Ark_Tag tag;
    Ark_RichEditorChangeValue value;
} Opt_RichEditorChangeValue;
typedef struct Ark_RichEditorSymbolSpanStyle {
    /* kind: Interface */
    Opt_Union_Number_String_Resource fontSize;
    Opt_Array_ResourceColor fontColor;
    Opt_Union_Number_FontWeight_String fontWeight;
    Opt_SymbolEffectStrategy effectStrategy;
    Opt_SymbolRenderingStrategy renderingStrategy;
} Ark_RichEditorSymbolSpanStyle;
typedef struct Opt_RichEditorSymbolSpanStyle {
    Ark_Tag tag;
    Ark_RichEditorSymbolSpanStyle value;
} Opt_RichEditorSymbolSpanStyle;
typedef struct Ark_RichEditorUpdateSymbolSpanStyleOptions {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
    Ark_RichEditorSymbolSpanStyle symbolStyle;
} Ark_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Opt_RichEditorUpdateSymbolSpanStyleOptions {
    Ark_Tag tag;
    Ark_RichEditorUpdateSymbolSpanStyleOptions value;
} Opt_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Ark_RichEditorUrlStyle {
    /* kind: Interface */
    Opt_ResourceStr url;
} Ark_RichEditorUrlStyle;
typedef struct Opt_RichEditorUrlStyle {
    Ark_Tag tag;
    Ark_RichEditorUrlStyle value;
} Opt_RichEditorUrlStyle;
typedef struct Ark_ScrollOptions {
    /* kind: Interface */
    Ark_Union_Number_String xOffset;
    Ark_Union_Number_String yOffset;
    Opt_Union_ScrollAnimationOptions_Boolean animation;
} Ark_ScrollOptions;
typedef struct Opt_ScrollOptions {
    Ark_Tag tag;
    Ark_ScrollOptions value;
} Opt_ScrollOptions;
typedef struct Ark_ScrollToIndexOptions {
    /* kind: Interface */
    Opt_LengthMetrics extraOffset;
} Ark_ScrollToIndexOptions;
typedef struct Opt_ScrollToIndexOptions {
    Ark_Tag tag;
    Ark_ScrollToIndexOptions value;
} Opt_ScrollToIndexOptions;
typedef struct Ark_SearchOptions {
    /* kind: Interface */
    Opt_String value;
    Opt_ResourceStr placeholder;
    Opt_String icon;
    Opt_SearchController controller;
} Ark_SearchOptions;
typedef struct Opt_SearchOptions {
    Ark_Tag tag;
    Ark_SearchOptions value;
} Opt_SearchOptions;
typedef struct Ark_SelectionMenuOptions {
    /* kind: Interface */
    Opt_MenuOnAppearCallback onAppear;
    Opt_VoidCallback onDisappear;
    Opt_MenuType menuType;
    Opt_MenuCallback onMenuShow;
    Opt_MenuCallback onMenuHide;
    Opt_PreviewMenuOptions previewMenuOptions;
} Ark_SelectionMenuOptions;
typedef struct Opt_SelectionMenuOptions {
    Ark_Tag tag;
    Ark_SelectionMenuOptions value;
} Opt_SelectionMenuOptions;
typedef struct Ark_SelectOption {
    /* kind: Interface */
    Ark_ResourceStr value;
    Opt_ResourceStr icon;
    Opt_SymbolGlyphModifier symbolIcon;
} Ark_SelectOption;
typedef struct Opt_SelectOption {
    Ark_Tag tag;
    Ark_SelectOption value;
} Opt_SelectOption;
typedef struct Ark_ShadowOptions {
    /* kind: Interface */
    Ark_Union_Number_Resource radius;
    Opt_ShadowType type;
    Opt_Union_Color_String_Resource_ColoringStrategy color;
    Opt_Union_Number_Resource offsetX;
    Opt_Union_Number_Resource offsetY;
    Opt_Boolean fill;
} Ark_ShadowOptions;
typedef struct Opt_ShadowOptions {
    Ark_Tag tag;
    Ark_ShadowOptions value;
} Opt_ShadowOptions;
typedef struct Ark_ShapePoint {
    /* kind: Interface */
    Ark_Length value0;
    Ark_Length value1;
} Ark_ShapePoint;
typedef struct Opt_ShapePoint {
    Ark_Tag tag;
    Ark_ShapePoint value;
} Opt_ShapePoint;
typedef struct Ark_sharedTransitionOptions {
    /* kind: Interface */
    Opt_Number duration;
    Opt_Union_Curve_String_ICurve curve;
    Opt_Number delay;
    Opt_MotionPathOptions motionPath;
    Opt_Number zIndex;
    Opt_SharedTransitionEffectType type;
} Ark_sharedTransitionOptions;
typedef struct Opt_sharedTransitionOptions {
    Ark_Tag tag;
    Ark_sharedTransitionOptions value;
} Opt_sharedTransitionOptions;
typedef struct Ark_SheetTitleOptions {
    /* kind: Interface */
    Ark_ResourceStr title;
    Opt_ResourceStr subtitle;
} Ark_SheetTitleOptions;
typedef struct Opt_SheetTitleOptions {
    Ark_Tag tag;
    Ark_SheetTitleOptions value;
} Opt_SheetTitleOptions;
typedef struct Ark_SliderBlockStyle {
    /* kind: Interface */
    Ark_SliderBlockType type;
    Opt_ResourceStr image;
} Ark_SliderBlockStyle;
typedef struct Opt_SliderBlockStyle {
    Ark_Tag tag;
    Ark_SliderBlockStyle value;
} Opt_SliderBlockStyle;
typedef struct Ark_StarStyleOptions {
    /* kind: Interface */
    Ark_ResourceStr backgroundUri;
    Ark_ResourceStr foregroundUri;
    Opt_ResourceStr secondaryUri;
} Ark_StarStyleOptions;
typedef struct Opt_StarStyleOptions {
    Ark_Tag tag;
    Ark_StarStyleOptions value;
} Opt_StarStyleOptions;
typedef struct Ark_StyledStringChangeValue {
    /* kind: Interface */
    Ark_TextRange range;
    Ark_StyledString replacementString;
    Opt_StyledString previewText;
} Ark_StyledStringChangeValue;
typedef struct Opt_StyledStringChangeValue {
    Ark_Tag tag;
    Ark_StyledStringChangeValue value;
} Opt_StyledStringChangeValue;
typedef struct Ark_SwitchStyle {
    /* kind: Interface */
    Opt_Union_Number_Resource pointRadius;
    Opt_ResourceColor unselectedColor;
    Opt_ResourceColor pointColor;
    Opt_Union_Number_Resource trackBorderRadius;
} Ark_SwitchStyle;
typedef struct Opt_SwitchStyle {
    Ark_Tag tag;
    Ark_SwitchStyle value;
} Opt_SwitchStyle;
typedef struct Ark_TabBarIconStyle {
    /* kind: Interface */
    Opt_ResourceColor selectedColor;
    Opt_ResourceColor unselectedColor;
} Ark_TabBarIconStyle;
typedef struct Opt_TabBarIconStyle {
    Ark_Tag tag;
    Ark_TabBarIconStyle value;
} Opt_TabBarIconStyle;
typedef struct Ark_TabBarOptions {
    /* kind: Interface */
    Opt_Union_String_Resource icon;
    Opt_Union_String_Resource text;
} Ark_TabBarOptions;
typedef struct Opt_TabBarOptions {
    Ark_Tag tag;
    Ark_TabBarOptions value;
} Opt_TabBarOptions;
typedef struct Ark_TerminationInfo {
    /* kind: Interface */
    Ark_Number code;
    Opt_Want want;
} Ark_TerminationInfo;
typedef struct Opt_TerminationInfo {
    Ark_Tag tag;
    Ark_TerminationInfo value;
} Opt_TerminationInfo;
typedef struct Ark_text_Decoration {
    /* kind: Interface */
    Opt_text_TextDecorationType textDecoration;
    Opt_common2D_Color color;
    Opt_text_TextDecorationStyle decorationStyle;
    Opt_Number decorationThicknessScale;
} Ark_text_Decoration;
typedef struct Opt_text_Decoration {
    Ark_Tag tag;
    Ark_text_Decoration value;
} Opt_text_Decoration;
typedef struct Ark_text_TextShadow {
    /* kind: Interface */
    Opt_common2D_Color color;
    Opt_common2D_Point point;
    Opt_Number blurRadius;
} Ark_text_TextShadow;
typedef struct Opt_text_TextShadow {
    Ark_Tag tag;
    Ark_text_TextShadow value;
} Opt_text_TextShadow;
typedef struct Ark_TextAreaOptions {
    /* kind: Interface */
    Opt_ResourceStr placeholder;
    Opt_Union_String_Resource text;
    Opt_TextAreaController controller;
} Ark_TextAreaOptions;
typedef struct Opt_TextAreaOptions {
    Ark_Tag tag;
    Ark_TextAreaOptions value;
} Opt_TextAreaOptions;
typedef struct Ark_TextCascadePickerRangeContent {
    /* kind: Interface */
    Ark_Union_String_Resource text;
    Opt_Array_TextCascadePickerRangeContent children;
} Ark_TextCascadePickerRangeContent;
typedef struct Opt_TextCascadePickerRangeContent {
    Ark_Tag tag;
    Ark_TextCascadePickerRangeContent value;
} Opt_TextCascadePickerRangeContent;
typedef struct Ark_TextChangeOptions {
    /* kind: Interface */
    Ark_TextRange rangeBefore;
    Ark_TextRange rangeAfter;
    Ark_String oldContent;
    Ark_PreviewText oldPreviewText;
} Ark_TextChangeOptions;
typedef struct Opt_TextChangeOptions {
    Ark_Tag tag;
    Ark_TextChangeOptions value;
} Opt_TextChangeOptions;
typedef struct Ark_TextDecorationOptions {
    /* kind: Interface */
    Ark_TextDecorationType type;
    Opt_ResourceColor color;
    Opt_TextDecorationStyle style;
} Ark_TextDecorationOptions;
typedef struct Opt_TextDecorationOptions {
    Ark_Tag tag;
    Ark_TextDecorationOptions value;
} Opt_TextDecorationOptions;
typedef struct Ark_TextInputOptions {
    /* kind: Interface */
    Opt_ResourceStr placeholder;
    Opt_Union_String_Resource text;
    Opt_TextInputController controller;
} Ark_TextInputOptions;
typedef struct Opt_TextInputOptions {
    Ark_Tag tag;
    Ark_TextInputOptions value;
} Opt_TextInputOptions;
typedef struct Ark_TextMenuItem {
    /* kind: Interface */
    Ark_ResourceStr content;
    Opt_ResourceStr icon;
    Ark_TextMenuItemId id;
    Opt_ResourceStr labelInfo;
} Ark_TextMenuItem;
typedef struct Opt_TextMenuItem {
    Ark_Tag tag;
    Ark_TextMenuItem value;
} Opt_TextMenuItem;
typedef struct Ark_TextPickerOptions {
    /* kind: Interface */
    Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent range;
    Opt_Union_ResourceStr_Array_ResourceStr value;
    Opt_Union_Number_Array_Number selected;
    Opt_Array_LengthMetrics columnWidths;
} Ark_TextPickerOptions;
typedef struct Opt_TextPickerOptions {
    Ark_Tag tag;
    Ark_TextPickerOptions value;
} Opt_TextPickerOptions;
typedef struct Ark_TextPickerRangeContent {
    /* kind: Interface */
    Ark_Union_String_Resource icon;
    Opt_Union_String_Resource text;
} Ark_TextPickerRangeContent;
typedef struct Opt_TextPickerRangeContent {
    Ark_Tag tag;
    Ark_TextPickerRangeContent value;
} Opt_TextPickerRangeContent;
typedef struct Ark_TextPickerResult {
    /* kind: Interface */
    Ark_Union_String_Array_String value;
    Ark_Union_Number_Array_Number index;
} Ark_TextPickerResult;
typedef struct Opt_TextPickerResult {
    Ark_Tag tag;
    Ark_TextPickerResult value;
} Opt_TextPickerResult;
typedef struct Opt_TextStyle {
    Ark_Tag tag;
    Ark_TextStyle value;
} Opt_TextStyle;
typedef struct Ark_TextStyleInterface {
    /* kind: Interface */
    Opt_ResourceColor fontColor;
    Opt_ResourceStr fontFamily;
    Opt_LengthMetrics fontSize;
    Opt_Union_Number_FontWeight_String fontWeight;
    Opt_FontStyle fontStyle;
} Ark_TextStyleInterface;
typedef struct Opt_TextStyleInterface {
    Ark_Tag tag;
    Ark_TextStyleInterface value;
} Opt_TextStyleInterface;
typedef struct Ark_ToolbarItem {
    /* kind: Interface */
    Ark_ResourceStr value;
    Opt_ResourceStr icon;
    Opt_SymbolGlyphModifier symbolIcon;
    Opt_Callback_Void action;
    Opt_ToolbarItemStatus status;
    Opt_ResourceStr activeIcon;
    Opt_SymbolGlyphModifier activeSymbolIcon;
} Ark_ToolbarItem;
typedef struct Opt_ToolbarItem {
    Ark_Tag tag;
    Ark_ToolbarItem value;
} Opt_ToolbarItem;
typedef struct Ark_Tuple_Dimension_Dimension {
    /* kind: Interface */
    Ark_Dimension value0;
    Ark_Dimension value1;
} Ark_Tuple_Dimension_Dimension;
typedef struct Opt_Tuple_Dimension_Dimension {
    Ark_Tag tag;
    Ark_Tuple_Dimension_Dimension value;
} Opt_Tuple_Dimension_Dimension;
typedef struct Ark_Tuple_Length_Length {
    /* kind: Interface */
    Ark_Length value0;
    Ark_Length value1;
} Ark_Tuple_Length_Length;
typedef struct Opt_Tuple_Length_Length {
    Ark_Tag tag;
    Ark_Tuple_Length_Length value;
} Opt_Tuple_Length_Length;
typedef struct Ark_Tuple_Union_ResourceColor_LinearGradient_Number {
    /* kind: Interface */
    Ark_Union_ResourceColor_LinearGradient value0;
    Ark_Number value1;
} Ark_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Opt_Tuple_Union_ResourceColor_LinearGradient_Number {
    Ark_Tag tag;
    Ark_Tuple_Union_ResourceColor_LinearGradient_Number value;
} Opt_Tuple_Union_ResourceColor_LinearGradient_Number;
typedef struct Ark_UnderlineColor {
    /* kind: Interface */
    Opt_ResourceColor typing;
    Opt_ResourceColor normal;
    Opt_ResourceColor error;
    Opt_ResourceColor disable;
} Ark_UnderlineColor;
typedef struct Opt_UnderlineColor {
    Ark_Tag tag;
    Ark_UnderlineColor value;
} Opt_UnderlineColor;
typedef struct Ark_Union_Boolean_PopupMaskType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Boolean value0;
        Ark_PopupMaskType value1;
    };
} Ark_Union_Boolean_PopupMaskType;
typedef struct Opt_Union_Boolean_PopupMaskType {
    Ark_Tag tag;
    Ark_Union_Boolean_PopupMaskType value;
} Opt_Union_Boolean_PopupMaskType;
typedef struct Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_CanvasRenderingContext2D value0;
        Ark_DrawingRenderingContext value1;
    };
} Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext;
typedef struct Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext {
    Ark_Tag tag;
    Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext value;
} Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext;
typedef struct Ark_Union_Dimension_Array_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Array_Dimension value1;
    };
} Ark_Union_Dimension_Array_Dimension;
typedef struct Opt_Union_Dimension_Array_Dimension {
    Ark_Tag tag;
    Ark_Union_Dimension_Array_Dimension value;
} Opt_Union_Dimension_Array_Dimension;
typedef struct Ark_Union_Dimension_OptionWidthMode {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_OptionWidthMode value1;
    };
} Ark_Union_Dimension_OptionWidthMode;
typedef struct Opt_Union_Dimension_OptionWidthMode {
    Ark_Tag tag;
    Ark_Union_Dimension_OptionWidthMode value;
} Opt_Union_Dimension_OptionWidthMode;
typedef struct Ark_Union_EdgeColors_ResourceColor_LocalizedEdgeColors {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeColors value0;
        Ark_ResourceColor value1;
        Ark_LocalizedEdgeColors value2;
    };
} Ark_Union_EdgeColors_ResourceColor_LocalizedEdgeColors;
typedef struct Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors {
    Ark_Tag tag;
    Ark_Union_EdgeColors_ResourceColor_LocalizedEdgeColors value;
} Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors;
typedef struct Ark_Union_Length_Array_RadiusItem {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Array_RadiusItem value1;
    };
} Ark_Union_Length_Array_RadiusItem;
typedef struct Opt_Union_Length_Array_RadiusItem {
    Ark_Tag tag;
    Ark_Union_Length_Array_RadiusItem value;
} Opt_Union_Length_Array_RadiusItem;
typedef struct Ark_Union_Length_LayoutPolicy {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_LayoutPolicy value1;
    };
} Ark_Union_Length_LayoutPolicy;
typedef struct Opt_Union_Length_LayoutPolicy {
    Ark_Tag tag;
    Ark_Union_Length_LayoutPolicy value;
} Opt_Union_Length_LayoutPolicy;
typedef struct Ark_Union_Length_Number {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_Number value1;
    };
} Ark_Union_Length_Number;
typedef struct Opt_Union_Length_Number {
    Ark_Tag tag;
    Ark_Union_Length_Number value;
} Opt_Union_Length_Number;
typedef struct Ark_Union_MenuItemOptions_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_MenuItemOptions value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_MenuItemOptions_CustomBuilder;
typedef struct Opt_Union_MenuItemOptions_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_MenuItemOptions_CustomBuilder value;
} Opt_Union_MenuItemOptions_CustomBuilder;
typedef struct Ark_Union_NavDestinationContext_NavBar {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_NavDestinationContext value0;
        Ark_String value1;
    };
} Ark_Union_NavDestinationContext_NavBar;
typedef struct Opt_Union_NavDestinationContext_NavBar {
    Ark_Tag tag;
    Ark_Union_NavDestinationContext_NavBar value;
} Opt_Union_NavDestinationContext_NavBar;
typedef struct Ark_Union_Number_LengthConstrain {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_LengthConstrain value1;
    };
} Ark_Union_Number_LengthConstrain;
typedef struct Opt_Union_Number_LengthConstrain {
    Ark_Tag tag;
    Ark_Union_Number_LengthConstrain value;
} Opt_Union_Number_LengthConstrain;
typedef struct Ark_Union_RectShapeOptions_RoundRectShapeOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RectShapeOptions value0;
        Ark_RoundRectShapeOptions value1;
    };
} Ark_Union_RectShapeOptions_RoundRectShapeOptions;
typedef struct Opt_Union_RectShapeOptions_RoundRectShapeOptions {
    Ark_Tag tag;
    Ark_Union_RectShapeOptions_RoundRectShapeOptions value;
} Opt_Union_RectShapeOptions_RoundRectShapeOptions;
typedef struct Ark_Union_ResourceColor_EdgeColors {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_EdgeColors value1;
    };
} Ark_Union_ResourceColor_EdgeColors;
typedef struct Opt_Union_ResourceColor_EdgeColors {
    Ark_Tag tag;
    Ark_Union_ResourceColor_EdgeColors value;
} Opt_Union_ResourceColor_EdgeColors;
typedef struct Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_EdgeColors value1;
        Ark_LocalizedEdgeColors value2;
    };
} Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors;
typedef struct Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors {
    Ark_Tag tag;
    Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value;
} Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors;
typedef struct Ark_Union_ResourceColor_UnderlineColor {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceColor value0;
        Ark_UnderlineColor value1;
    };
} Ark_Union_ResourceColor_UnderlineColor;
typedef struct Opt_Union_ResourceColor_UnderlineColor {
    Ark_Tag tag;
    Ark_Union_ResourceColor_UnderlineColor value;
} Opt_Union_ResourceColor_UnderlineColor;
typedef struct Ark_Union_ShadowOptions_Array_ShadowOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ShadowOptions value0;
        Array_ShadowOptions value1;
    };
} Ark_Union_ShadowOptions_Array_ShadowOptions;
typedef struct Opt_Union_ShadowOptions_Array_ShadowOptions {
    Ark_Tag tag;
    Ark_Union_ShadowOptions_Array_ShadowOptions value;
} Opt_Union_ShadowOptions_Array_ShadowOptions;
typedef struct Ark_Union_ShadowOptions_ShadowStyle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ShadowOptions value0;
        Ark_ShadowStyle value1;
    };
} Ark_Union_ShadowOptions_ShadowStyle;
typedef struct Opt_Union_ShadowOptions_ShadowStyle {
    Ark_Tag tag;
    Ark_Union_ShadowOptions_ShadowStyle value;
} Opt_Union_ShadowOptions_ShadowStyle;
typedef struct Ark_Union_SheetSize_Length {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_SheetSize value0;
        Ark_Length value1;
    };
} Ark_Union_SheetSize_Length;
typedef struct Opt_Union_SheetSize_Length {
    Ark_Tag tag;
    Ark_Union_SheetSize_Length value;
} Opt_Union_SheetSize_Length;
typedef struct Ark_Union_SheetTitleOptions_CustomBuilder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_SheetTitleOptions value0;
        CustomNodeBuilder value1;
    };
} Ark_Union_SheetTitleOptions_CustomBuilder;
typedef struct Opt_Union_SheetTitleOptions_CustomBuilder {
    Ark_Tag tag;
    Ark_Union_SheetTitleOptions_CustomBuilder value;
} Opt_Union_SheetTitleOptions_CustomBuilder;
typedef struct Ark_Union_TitleHeight_Length {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_TitleHeight value0;
        Ark_Length value1;
    };
} Ark_Union_TitleHeight_Length;
typedef struct Opt_Union_TitleHeight_Length {
    Ark_Tag tag;
    Ark_Union_TitleHeight_Length value;
} Opt_Union_TitleHeight_Length;
typedef struct Ark_VideoOptions {
    /* kind: Interface */
    Opt_Union_String_Resource src;
    Opt_Union_Number_String_PlaybackSpeed currentProgressRate;
    Opt_Union_String_PixelMap_Resource previewUri;
    Opt_VideoController controller;
    Opt_ImageAIOptions imageAIOptions;
    Opt_PosterOptions posterOptions;
} Ark_VideoOptions;
typedef struct Opt_VideoOptions {
    Ark_Tag tag;
    Ark_VideoOptions value;
} Opt_VideoOptions;
typedef struct Ark_XComponentOptions {
    /* kind: Interface */
    Ark_XComponentType type;
    Ark_XComponentController controller;
    Opt_ImageAIOptions imageAIOptions;
    Opt_Number screenId;
} Ark_XComponentOptions;
typedef struct Opt_XComponentOptions {
    Ark_Tag tag;
    Ark_XComponentOptions value;
} Opt_XComponentOptions;
typedef struct Ark_XComponentParameter {
    /* kind: Interface */
    Ark_String id;
    Ark_XComponentType type;
    Opt_String libraryname;
    Opt_XComponentController controller;
} Ark_XComponentParameter;
typedef struct Opt_XComponentParameter {
    Ark_Tag tag;
    Ark_XComponentParameter value;
} Opt_XComponentParameter;
typedef struct Ark_ArrowStyle {
    /* kind: Interface */
    Opt_Boolean showBackground;
    Opt_Boolean isSidebarMiddle;
    Opt_Length backgroundSize;
    Opt_ResourceColor backgroundColor;
    Opt_Length arrowSize;
    Opt_ResourceColor arrowColor;
} Ark_ArrowStyle;
typedef struct Opt_ArrowStyle {
    Ark_Tag tag;
    Ark_ArrowStyle value;
} Opt_ArrowStyle;
typedef struct Ark_BadgeStyle {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_Union_Number_ResourceStr fontSize;
    Opt_Union_Number_ResourceStr badgeSize;
    Opt_ResourceColor badgeColor;
    Opt_ResourceColor borderColor;
    Opt_Length borderWidth;
    Opt_Union_Number_FontWeight_ResourceStr fontWeight;
} Ark_BadgeStyle;
typedef struct Opt_BadgeStyle {
    Ark_Tag tag;
    Ark_BadgeStyle value;
} Opt_BadgeStyle;
typedef struct Ark_BarGridColumnOptions {
    /* kind: Interface */
    Opt_Number sm;
    Opt_Number md;
    Opt_Number lg;
    Opt_Dimension margin;
    Opt_Dimension gutter;
} Ark_BarGridColumnOptions;
typedef struct Opt_BarGridColumnOptions {
    Ark_Tag tag;
    Ark_BarGridColumnOptions value;
} Opt_BarGridColumnOptions;
typedef struct Ark_BoardStyle {
    /* kind: Interface */
    Opt_Length borderRadius;
} Ark_BoardStyle;
typedef struct Opt_BoardStyle {
    Ark_Tag tag;
    Ark_BoardStyle value;
} Opt_BoardStyle;
typedef struct Ark_BorderRadiuses {
    /* kind: Interface */
    Opt_Length topLeft;
    Opt_Length topRight;
    Opt_Length bottomLeft;
    Opt_Length bottomRight;
} Ark_BorderRadiuses;
typedef struct Opt_BorderRadiuses {
    Ark_Tag tag;
    Ark_BorderRadiuses value;
} Opt_BorderRadiuses;
typedef struct Ark_BorderRadiusType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_BorderRadiuses value1;
        Ark_LocalizedBorderRadiuses value2;
    };
} Ark_BorderRadiusType;
typedef struct Opt_BorderRadiusType {
    Ark_Tag tag;
    Ark_BorderRadiusType value;
} Opt_BorderRadiusType;
typedef struct Ark_ButtonStyle {
    /* kind: Interface */
    Opt_Number left;
    Opt_Number top;
    Opt_Number width;
    Opt_Number height;
    Opt_ButtonIconOptions icons;
} Ark_ButtonStyle;
typedef struct Opt_ButtonStyle {
    Ark_Tag tag;
    Ark_ButtonStyle value;
} Opt_ButtonStyle;
typedef struct Ark_CaretStyle {
    /* kind: Interface */
    Opt_Length width;
    Opt_ResourceColor color;
} Ark_CaretStyle;
typedef struct Opt_CaretStyle {
    Ark_Tag tag;
    Ark_CaretStyle value;
} Opt_CaretStyle;
typedef struct Ark_ChainAnimationOptions {
    /* kind: Interface */
    Ark_Length minSpace;
    Ark_Length maxSpace;
    Opt_Number conductivity;
    Opt_Number intensity;
    Opt_ChainEdgeEffect edgeEffect;
    Opt_Number stiffness;
    Opt_Number damping;
} Ark_ChainAnimationOptions;
typedef struct Opt_ChainAnimationOptions {
    Ark_Tag tag;
    Ark_ChainAnimationOptions value;
} Opt_ChainAnimationOptions;
typedef struct Ark_ColorStop {
    /* kind: Interface */
    Ark_ResourceColor color;
    Ark_Length offset;
} Ark_ColorStop;
typedef struct Opt_ColorStop {
    Ark_Tag tag;
    Ark_ColorStop value;
} Opt_ColorStop;
typedef struct Ark_ColumnSplitDividerStyle {
    /* kind: Interface */
    Opt_Dimension startMargin;
    Opt_Dimension endMargin;
} Ark_ColumnSplitDividerStyle;
typedef struct Opt_ColumnSplitDividerStyle {
    Ark_Tag tag;
    Ark_ColumnSplitDividerStyle value;
} Opt_ColumnSplitDividerStyle;
typedef struct Ark_ConstraintSizeOptions {
    /* kind: Interface */
    Opt_Length minWidth;
    Opt_Length maxWidth;
    Opt_Length minHeight;
    Opt_Length maxHeight;
} Ark_ConstraintSizeOptions;
typedef struct Opt_ConstraintSizeOptions {
    Ark_Tag tag;
    Ark_ConstraintSizeOptions value;
} Opt_ConstraintSizeOptions;
typedef struct Ark_CustomTheme {
    /* kind: Interface */
    Opt_Colors colors;
} Ark_CustomTheme;
typedef struct Opt_CustomTheme {
    Ark_Tag tag;
    Ark_CustomTheme value;
} Opt_CustomTheme;
typedef struct Ark_DividerOptions {
    /* kind: Interface */
    Opt_Dimension strokeWidth;
    Opt_ResourceColor color;
    Opt_Dimension startMargin;
    Opt_Dimension endMargin;
} Ark_DividerOptions;
typedef struct Opt_DividerOptions {
    Ark_Tag tag;
    Ark_DividerOptions value;
} Opt_DividerOptions;
typedef struct Ark_DividerStyle {
    /* kind: Interface */
    Ark_Length strokeWidth;
    Opt_ResourceColor color;
    Opt_Length startMargin;
    Opt_Length endMargin;
} Ark_DividerStyle;
typedef struct Opt_DividerStyle {
    Ark_Tag tag;
    Ark_DividerStyle value;
} Opt_DividerStyle;
typedef struct Ark_DotIndicator {
    /* kind: Interface */
    Opt_Length _left;
    Opt_Length _top;
    Opt_Length _right;
    Opt_Length _bottom;
    Opt_LengthMetrics _start;
    Opt_LengthMetrics _end;
    Opt_Length _itemWidth;
    Opt_Length _itemHeight;
    Opt_Length _selectedItemWidth;
    Opt_Length _selectedItemHeight;
    Opt_Boolean _mask;
    Opt_ResourceColor _color;
    Opt_ResourceColor _selectedColor;
    Opt_Number _maxDisplayCount;
    Opt_LengthMetrics _space;
} Ark_DotIndicator;
typedef struct Opt_DotIndicator {
    Ark_Tag tag;
    Ark_DotIndicator value;
} Opt_DotIndicator;
typedef struct Ark_EdgeOutlineWidths {
    /* kind: Interface */
    Opt_Dimension top;
    Opt_Dimension right;
    Opt_Dimension bottom;
    Opt_Dimension left;
} Ark_EdgeOutlineWidths;
typedef struct Opt_EdgeOutlineWidths {
    Ark_Tag tag;
    Ark_EdgeOutlineWidths value;
} Opt_EdgeOutlineWidths;
typedef struct Ark_Edges {
    /* kind: Interface */
    Opt_Dimension top;
    Opt_Dimension left;
    Opt_Dimension bottom;
    Opt_Dimension right;
} Ark_Edges;
typedef struct Opt_Edges {
    Ark_Tag tag;
    Ark_Edges value;
} Opt_Edges;
typedef struct Ark_EdgeWidths {
    /* kind: Interface */
    Opt_Length top;
    Opt_Length right;
    Opt_Length bottom;
    Opt_Length left;
} Ark_EdgeWidths;
typedef struct Opt_EdgeWidths {
    Ark_Tag tag;
    Ark_EdgeWidths value;
} Opt_EdgeWidths;
typedef struct Ark_EditableTextChangeValue {
    /* kind: Interface */
    Ark_String content;
    Opt_PreviewText previewText;
    Opt_TextChangeOptions options;
} Ark_EditableTextChangeValue;
typedef struct Opt_EditableTextChangeValue {
    Ark_Tag tag;
    Ark_EditableTextChangeValue value;
} Opt_EditableTextChangeValue;
typedef struct Ark_FlexOptions {
    /* kind: Interface */
    Opt_FlexDirection direction;
    Opt_FlexWrap wrap;
    Opt_FlexAlign justifyContent;
    Opt_ItemAlign alignItems;
    Opt_FlexAlign alignContent;
    Opt_FlexSpaceOptions space;
} Ark_FlexOptions;
typedef struct Opt_FlexOptions {
    Ark_Tag tag;
    Ark_FlexOptions value;
} Opt_FlexOptions;
typedef struct Ark_Font {
    /* kind: Interface */
    Opt_Length size;
    Opt_Union_FontWeight_Number_String weight;
    Opt_Union_String_Resource family;
    Opt_FontStyle style;
} Ark_Font;
typedef struct Opt_Font {
    Ark_Tag tag;
    Ark_Font value;
} Opt_Font;
typedef struct Ark_GaugeIndicatorOptions {
    /* kind: Interface */
    Opt_ResourceStr icon;
    Opt_Dimension space;
} Ark_GaugeIndicatorOptions;
typedef struct Opt_GaugeIndicatorOptions {
    Ark_Tag tag;
    Ark_GaugeIndicatorOptions value;
} Opt_GaugeIndicatorOptions;
typedef struct Ark_GridRowSizeOption {
    /* kind: Interface */
    Opt_Length xs;
    Opt_Length sm;
    Opt_Length md;
    Opt_Length lg;
    Opt_Length xl;
    Opt_Length xxl;
} Ark_GridRowSizeOption;
typedef struct Opt_GridRowSizeOption {
    Ark_Tag tag;
    Ark_GridRowSizeOption value;
} Opt_GridRowSizeOption;
typedef struct Ark_GuideLinePosition {
    /* kind: Interface */
    Opt_Dimension start;
    Opt_Dimension end;
} Ark_GuideLinePosition;
typedef struct Opt_GuideLinePosition {
    Ark_Tag tag;
    Ark_GuideLinePosition value;
} Opt_GuideLinePosition;
typedef struct Ark_GuideLineStyle {
    /* kind: Interface */
    Ark_String id;
    Ark_Axis direction;
    Ark_GuideLinePosition position;
} Ark_GuideLineStyle;
typedef struct Opt_GuideLineStyle {
    Ark_Tag tag;
    Ark_GuideLineStyle value;
} Opt_GuideLineStyle;
typedef struct Ark_IconOptions {
    /* kind: Interface */
    Opt_Length size;
    Opt_ResourceColor color;
    Opt_ResourceStr src;
} Ark_IconOptions;
typedef struct Opt_IconOptions {
    Ark_Tag tag;
    Ark_IconOptions value;
} Opt_IconOptions;
typedef struct Ark_LeadingMarginPlaceholder {
    /* kind: Interface */
    Ark_image_PixelMap pixelMap;
    Ark_Tuple_Dimension_Dimension size;
} Ark_LeadingMarginPlaceholder;
typedef struct Opt_LeadingMarginPlaceholder {
    Ark_Tag tag;
    Ark_LeadingMarginPlaceholder value;
} Opt_LeadingMarginPlaceholder;
typedef struct Ark_LinearStyleOptions {
    /* kind: Interface */
    Opt_Boolean enableScanEffect;
    Opt_Length strokeWidth;
    Opt_Union_String_Number_Resource strokeRadius;
} Ark_LinearStyleOptions;
typedef struct Opt_LinearStyleOptions {
    Ark_Tag tag;
    Ark_LinearStyleOptions value;
} Opt_LinearStyleOptions;
typedef struct Ark_ListDividerOptions {
    /* kind: Interface */
    Ark_Length strokeWidth;
    Opt_ResourceColor color;
    Opt_Length startMargin;
    Opt_Length endMargin;
} Ark_ListDividerOptions;
typedef struct Opt_ListDividerOptions {
    Ark_Tag tag;
    Ark_ListDividerOptions value;
} Opt_ListDividerOptions;
typedef struct Ark_MarkStyle {
    /* kind: Interface */
    Opt_ResourceColor strokeColor;
    Opt_Length size;
    Opt_Length strokeWidth;
} Ark_MarkStyle;
typedef struct Opt_MarkStyle {
    Ark_Tag tag;
    Ark_MarkStyle value;
} Opt_MarkStyle;
typedef struct Ark_MoreButtonOptions {
    /* kind: Interface */
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
} Ark_MoreButtonOptions;
typedef struct Opt_MoreButtonOptions {
    Ark_Tag tag;
    Ark_MoreButtonOptions value;
} Opt_MoreButtonOptions;
typedef struct Ark_NavDestinationCustomTitle {
    /* kind: Interface */
    CustomNodeBuilder builder;
    Ark_Union_TitleHeight_Length height;
} Ark_NavDestinationCustomTitle;
typedef struct Opt_NavDestinationCustomTitle {
    Ark_Tag tag;
    Ark_NavDestinationCustomTitle value;
} Opt_NavDestinationCustomTitle;
typedef struct Ark_NavigationCustomTitle {
    /* kind: Interface */
    CustomNodeBuilder builder;
    Ark_Union_TitleHeight_Length height;
} Ark_NavigationCustomTitle;
typedef struct Opt_NavigationCustomTitle {
    Ark_Tag tag;
    Ark_NavigationCustomTitle value;
} Opt_NavigationCustomTitle;
typedef struct Ark_NavigationTitleOptions {
    /* kind: Interface */
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_BarStyle barStyle;
    Opt_LengthMetrics paddingStart;
    Opt_LengthMetrics paddingEnd;
    Opt_TextModifier mainTitleModifier;
    Opt_TextModifier subTitleModifier;
    Opt_Boolean enableHoverMode;
} Ark_NavigationTitleOptions;
typedef struct Opt_NavigationTitleOptions {
    Ark_Tag tag;
    Ark_NavigationTitleOptions value;
} Opt_NavigationTitleOptions;
typedef struct Ark_OffsetOptions {
    /* kind: Interface */
    Opt_Dimension xOffset;
    Opt_Dimension yOffset;
} Ark_OffsetOptions;
typedef struct Opt_OffsetOptions {
    Ark_Tag tag;
    Ark_OffsetOptions value;
} Opt_OffsetOptions;
typedef struct Ark_OutlineRadiuses {
    /* kind: Interface */
    Opt_Dimension topLeft;
    Opt_Dimension topRight;
    Opt_Dimension bottomLeft;
    Opt_Dimension bottomRight;
} Ark_OutlineRadiuses;
typedef struct Opt_OutlineRadiuses {
    Ark_Tag tag;
    Ark_OutlineRadiuses value;
} Opt_OutlineRadiuses;
typedef struct Ark_Padding {
    /* kind: Interface */
    Opt_Length top;
    Opt_Length right;
    Opt_Length bottom;
    Opt_Length left;
} Ark_Padding;
typedef struct Opt_Padding {
    Ark_Tag tag;
    Ark_Padding value;
} Opt_Padding;
typedef struct Ark_PixelStretchEffectOptions {
    /* kind: Interface */
    Opt_Length top;
    Opt_Length bottom;
    Opt_Length left;
    Opt_Length right;
} Ark_PixelStretchEffectOptions;
typedef struct Opt_PixelStretchEffectOptions {
    Ark_Tag tag;
    Ark_PixelStretchEffectOptions value;
} Opt_PixelStretchEffectOptions;
typedef struct Ark_PointLightStyle {
    /* kind: Interface */
    Opt_LightSource lightSource;
    Opt_IlluminatedType illuminated;
    Opt_Number bloom;
} Ark_PointLightStyle;
typedef struct Opt_PointLightStyle {
    Ark_Tag tag;
    Ark_PointLightStyle value;
} Opt_PointLightStyle;
typedef struct Ark_Position {
    /* kind: Interface */
    Opt_Length x;
    Opt_Length y;
} Ark_Position;
typedef struct Opt_Position {
    Ark_Tag tag;
    Ark_Position value;
} Opt_Position;
typedef struct Ark_ProgressStyleOptions {
    /* kind: Interface */
    Opt_Boolean enableSmoothEffect;
    Opt_Length strokeWidth;
    Opt_Number scaleCount;
    Opt_Length scaleWidth;
} Ark_ProgressStyleOptions;
typedef struct Opt_ProgressStyleOptions {
    Ark_Tag tag;
    Ark_ProgressStyleOptions value;
} Opt_ProgressStyleOptions;
typedef struct Ark_RadialGradientOptions {
    /* kind: Interface */
    Ark_Tuple_Length_Length center;
    Ark_Length radius;
    Array_Tuple_ResourceColor_Number colors;
    Opt_Boolean repeating;
} Ark_RadialGradientOptions;
typedef struct Opt_RadialGradientOptions {
    Ark_Tag tag;
    Ark_RadialGradientOptions value;
} Opt_RadialGradientOptions;
typedef struct Ark_Rectangle {
    /* kind: Interface */
    Opt_Length x;
    Opt_Length y;
    Opt_Length width;
    Opt_Length height;
} Ark_Rectangle;
typedef struct Opt_Rectangle {
    Ark_Tag tag;
    Ark_Rectangle value;
} Opt_Rectangle;
typedef struct Ark_RectOptions {
    /* kind: Interface */
    Opt_Length width;
    Opt_Length height;
    Opt_Union_Length_Array_RadiusItem radius;
} Ark_RectOptions;
typedef struct Opt_RectOptions {
    Ark_Tag tag;
    Ark_RectOptions value;
} Opt_RectOptions;
typedef struct Opt_RenderNode {
    Ark_Tag tag;
    Ark_RenderNode value;
} Opt_RenderNode;
typedef struct Ark_RichEditorSymbolSpanOptions {
    /* kind: Interface */
    Opt_Number offset;
    Opt_RichEditorSymbolSpanStyle style;
} Ark_RichEditorSymbolSpanOptions;
typedef struct Opt_RichEditorSymbolSpanOptions {
    Ark_Tag tag;
    Ark_RichEditorSymbolSpanOptions value;
} Opt_RichEditorSymbolSpanOptions;
typedef struct Ark_RingStyleOptions {
    /* kind: Interface */
    Opt_Boolean enableScanEffect;
    Opt_Length strokeWidth;
    Opt_Boolean shadow;
    Opt_ProgressStatus status;
} Ark_RingStyleOptions;
typedef struct Opt_RingStyleOptions {
    Ark_Tag tag;
    Ark_RingStyleOptions value;
} Opt_RingStyleOptions;
typedef struct Ark_ScrollableBarModeOptions {
    /* kind: Interface */
    Opt_Dimension margin;
    Opt_LayoutStyle nonScrollableLayoutStyle;
} Ark_ScrollableBarModeOptions;
typedef struct Opt_ScrollableBarModeOptions {
    Ark_Tag tag;
    Ark_ScrollableBarModeOptions value;
} Opt_ScrollableBarModeOptions;
typedef struct Ark_ScrollSnapOptions {
    /* kind: Interface */
    Ark_ScrollSnapAlign snapAlign;
    Opt_Union_Dimension_Array_Dimension snapPagination;
    Opt_Boolean enableSnapToStart;
    Opt_Boolean enableSnapToEnd;
} Ark_ScrollSnapOptions;
typedef struct Opt_ScrollSnapOptions {
    Ark_Tag tag;
    Ark_ScrollSnapOptions value;
} Opt_ScrollSnapOptions;
typedef struct Ark_SearchButtonOptions {
    /* kind: Interface */
    Opt_Length fontSize;
    Opt_ResourceColor fontColor;
    Opt_Boolean autoDisable;
} Ark_SearchButtonOptions;
typedef struct Opt_SearchButtonOptions {
    Ark_Tag tag;
    Ark_SearchButtonOptions value;
} Opt_SearchButtonOptions;
typedef struct Ark_SizeOptions {
    /* kind: Interface */
    Opt_Length width;
    Opt_Length height;
} Ark_SizeOptions;
typedef struct Opt_SizeOptions {
    Ark_Tag tag;
    Ark_SizeOptions value;
} Opt_SizeOptions;
typedef struct Ark_SubTabBarIndicatorStyle {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_Length height;
    Opt_Length width;
    Opt_Length borderRadius;
    Opt_Length marginTop;
} Ark_SubTabBarIndicatorStyle;
typedef struct Opt_SubTabBarIndicatorStyle {
    Ark_Tag tag;
    Ark_SubTabBarIndicatorStyle value;
} Opt_SubTabBarIndicatorStyle;
typedef struct Ark_SweepGradientOptions {
    /* kind: Interface */
    Ark_Tuple_Length_Length center;
    Opt_Union_Number_String start;
    Opt_Union_Number_String end;
    Opt_Union_Number_String rotation;
    Array_Tuple_ResourceColor_Number colors;
    Opt_Boolean repeating;
} Ark_SweepGradientOptions;
typedef struct Opt_SweepGradientOptions {
    Ark_Tag tag;
    Ark_SweepGradientOptions value;
} Opt_SweepGradientOptions;
typedef struct Ark_SwipeActionItem {
    /* kind: Interface */
    Opt_CustomNodeBuilder builder;
    Opt_ComponentContent builderComponent;
    Opt_Length actionAreaDistance;
    Opt_Callback_Void onAction;
    Opt_Callback_Void onEnterActionArea;
    Opt_Callback_Void onExitActionArea;
    Opt_Callback_SwipeActionState_Void onStateChange;
} Ark_SwipeActionItem;
typedef struct Opt_SwipeActionItem {
    Ark_Tag tag;
    Ark_SwipeActionItem value;
} Opt_SwipeActionItem;
typedef struct Ark_text_TextStyle {
    /* kind: Interface */
    Opt_text_Decoration decoration;
    Opt_common2D_Color color;
    Opt_text_FontWeight fontWeight;
    Opt_text_FontStyle fontStyle;
    Opt_text_TextBaseline baseline;
    Opt_Array_String fontFamilies;
    Opt_Number fontSize;
    Opt_Number letterSpacing;
    Opt_Number wordSpacing;
    Opt_Number heightScale;
    Opt_Boolean halfLeading;
    Opt_Boolean heightOnly;
    Opt_String ellipsis;
    Opt_text_EllipsisMode ellipsisMode;
    Opt_String locale;
    Opt_Number baselineShift;
    Opt_Array_text_FontFeature fontFeatures;
    Opt_Array_text_TextShadow textShadows;
    Opt_text_RectStyle backgroundRect;
    Opt_Array_text_FontVariation fontVariations;
} Ark_text_TextStyle;
typedef struct Opt_text_TextStyle {
    Ark_Tag tag;
    Ark_text_TextStyle value;
} Opt_text_TextStyle;
typedef struct Ark_TextDataDetectorConfig {
    /* kind: Interface */
    Array_TextDataDetectorType types;
    Opt_Callback_String_Void onDetectResultUpdate;
    Opt_ResourceColor color;
    Opt_DecorationStyleInterface decoration;
} Ark_TextDataDetectorConfig;
typedef struct Opt_TextDataDetectorConfig {
    Ark_Tag tag;
    Ark_TextDataDetectorConfig value;
} Opt_TextDataDetectorConfig;
typedef struct Ark_TipsOptions {
    /* kind: Interface */
    Opt_Number appearingTime;
    Opt_Number disappearingTime;
    Opt_Number appearingTimeWithContinuousOperation;
    Opt_Number disappearingTimeWithContinuousOperation;
    Opt_Boolean enableArrow;
    Opt_ArrowPointPosition arrowPointPosition;
    Opt_Dimension arrowWidth;
    Opt_Dimension arrowHeight;
} Ark_TipsOptions;
typedef struct Opt_TipsOptions {
    Ark_Tag tag;
    Ark_TipsOptions value;
} Opt_TipsOptions;
typedef struct Ark_TripleLengthDetents {
    /* kind: Interface */
    Ark_Union_SheetSize_Length value0;
    Opt_Union_SheetSize_Length value1;
    Opt_Union_SheetSize_Length value2;
} Ark_TripleLengthDetents;
typedef struct Opt_TripleLengthDetents {
    Ark_Tag tag;
    Ark_TripleLengthDetents value;
} Opt_TripleLengthDetents;
typedef struct Ark_Union_Array_Rectangle_Rectangle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Array_Rectangle value0;
        Ark_Rectangle value1;
    };
} Ark_Union_Array_Rectangle_Rectangle;
typedef struct Opt_Union_Array_Rectangle_Rectangle {
    Ark_Tag tag;
    Ark_Union_Array_Rectangle_Rectangle value;
} Opt_Union_Array_Rectangle_Rectangle;
typedef struct Ark_Union_ArrowStyle_Boolean {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ArrowStyle value0;
        Ark_Boolean value1;
    };
} Ark_Union_ArrowStyle_Boolean;
typedef struct Opt_Union_ArrowStyle_Boolean {
    Ark_Tag tag;
    Ark_Union_ArrowStyle_Boolean value;
} Opt_Union_ArrowStyle_Boolean;
typedef struct Ark_Union_BadgePosition_Position {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_BadgePosition value0;
        Ark_Position value1;
    };
} Ark_Union_BadgePosition_Position;
typedef struct Opt_Union_BadgePosition_Position {
    Ark_Tag tag;
    Ark_Union_BadgePosition_Position value;
} Opt_Union_BadgePosition_Position;
typedef struct Ark_Union_BorderRadiuses_Length_LocalizedBorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_BorderRadiuses value0;
        Ark_Length value1;
        Ark_LocalizedBorderRadiuses value2;
    };
} Ark_Union_BorderRadiuses_Length_LocalizedBorderRadiuses;
typedef struct Opt_Union_BorderRadiuses_Length_LocalizedBorderRadiuses {
    Ark_Tag tag;
    Ark_Union_BorderRadiuses_Length_LocalizedBorderRadiuses value;
} Opt_Union_BorderRadiuses_Length_LocalizedBorderRadiuses;
typedef struct Ark_Union_CustomBuilder_SwipeActionItem {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        CustomNodeBuilder value0;
        Ark_SwipeActionItem value1;
    };
} Ark_Union_CustomBuilder_SwipeActionItem;
typedef struct Opt_Union_CustomBuilder_SwipeActionItem {
    Ark_Tag tag;
    Ark_Union_CustomBuilder_SwipeActionItem value;
} Opt_Union_CustomBuilder_SwipeActionItem;
typedef struct Ark_Union_Dimension_BorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_BorderRadiuses value1;
    };
} Ark_Union_Dimension_BorderRadiuses;
typedef struct Opt_Union_Dimension_BorderRadiuses {
    Ark_Tag tag;
    Ark_Union_Dimension_BorderRadiuses value;
} Opt_Union_Dimension_BorderRadiuses;
typedef struct Ark_Union_Dimension_EdgeOutlineWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_EdgeOutlineWidths value1;
    };
} Ark_Union_Dimension_EdgeOutlineWidths;
typedef struct Opt_Union_Dimension_EdgeOutlineWidths {
    Ark_Tag tag;
    Ark_Union_Dimension_EdgeOutlineWidths value;
} Opt_Union_Dimension_EdgeOutlineWidths;
typedef struct Ark_Union_Dimension_EdgeWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_EdgeWidths value1;
    };
} Ark_Union_Dimension_EdgeWidths;
typedef struct Opt_Union_Dimension_EdgeWidths {
    Ark_Tag tag;
    Ark_Union_Dimension_EdgeWidths value;
} Opt_Union_Dimension_EdgeWidths;
typedef struct Ark_Union_Dimension_EdgeWidths_LocalizedEdgeWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_EdgeWidths value1;
        Ark_LocalizedEdgeWidths value2;
    };
} Ark_Union_Dimension_EdgeWidths_LocalizedEdgeWidths;
typedef struct Opt_Union_Dimension_EdgeWidths_LocalizedEdgeWidths {
    Ark_Tag tag;
    Ark_Union_Dimension_EdgeWidths_LocalizedEdgeWidths value;
} Opt_Union_Dimension_EdgeWidths_LocalizedEdgeWidths;
typedef struct Ark_Union_Dimension_LeadingMarginPlaceholder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_LeadingMarginPlaceholder value1;
    };
} Ark_Union_Dimension_LeadingMarginPlaceholder;
typedef struct Opt_Union_Dimension_LeadingMarginPlaceholder {
    Ark_Tag tag;
    Ark_Union_Dimension_LeadingMarginPlaceholder value;
} Opt_Union_Dimension_LeadingMarginPlaceholder;
typedef struct Ark_Union_Dimension_Margin {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_Padding value1;
    };
} Ark_Union_Dimension_Margin;
typedef struct Opt_Union_Dimension_Margin {
    Ark_Tag tag;
    Ark_Union_Dimension_Margin value;
} Opt_Union_Dimension_Margin;
typedef struct Ark_Union_Dimension_OutlineRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Dimension value0;
        Ark_OutlineRadiuses value1;
    };
} Ark_Union_Dimension_OutlineRadiuses;
typedef struct Opt_Union_Dimension_OutlineRadiuses {
    Ark_Tag tag;
    Ark_Union_Dimension_OutlineRadiuses value;
} Opt_Union_Dimension_OutlineRadiuses;
typedef struct Ark_Union_EdgeOutlineWidths_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeOutlineWidths value0;
        Ark_Dimension value1;
    };
} Ark_Union_EdgeOutlineWidths_Dimension;
typedef struct Opt_Union_EdgeOutlineWidths_Dimension {
    Ark_Tag tag;
    Ark_Union_EdgeOutlineWidths_Dimension value;
} Opt_Union_EdgeOutlineWidths_Dimension;
typedef struct Ark_Union_EdgeWidths_Length_LocalizedEdgeWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeWidths value0;
        Ark_Length value1;
        Ark_LocalizedEdgeWidths value2;
    };
} Ark_Union_EdgeWidths_Length_LocalizedEdgeWidths;
typedef struct Opt_Union_EdgeWidths_Length_LocalizedEdgeWidths {
    Ark_Tag tag;
    Ark_Union_EdgeWidths_Length_LocalizedEdgeWidths value;
} Opt_Union_EdgeWidths_Length_LocalizedEdgeWidths;
typedef struct Ark_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_EdgeWidths value0;
        Ark_LengthMetrics value1;
        Ark_LocalizedEdgeWidths value2;
    };
} Ark_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths;
typedef struct Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths {
    Ark_Tag tag;
    Ark_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths value;
} Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths;
typedef struct Ark_Union_IconOptions_SymbolGlyphModifier {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_IconOptions value0;
        Ark_SymbolGlyphModifier value1;
    };
} Ark_Union_IconOptions_SymbolGlyphModifier;
typedef struct Opt_Union_IconOptions_SymbolGlyphModifier {
    Ark_Tag tag;
    Ark_Union_IconOptions_SymbolGlyphModifier value;
} Opt_Union_IconOptions_SymbolGlyphModifier;
typedef struct Ark_Union_Length_BorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_BorderRadiuses value1;
    };
} Ark_Union_Length_BorderRadiuses;
typedef struct Opt_Union_Length_BorderRadiuses {
    Ark_Tag tag;
    Ark_Union_Length_BorderRadiuses value;
} Opt_Union_Length_BorderRadiuses;
typedef struct Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_BorderRadiuses value1;
        Ark_LocalizedBorderRadiuses value2;
    };
} Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses {
    Ark_Tag tag;
    Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value;
} Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_EdgeWidths value1;
        Ark_LocalizedEdgeWidths value2;
    };
} Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths;
typedef struct Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths {
    Ark_Tag tag;
    Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths value;
} Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths;
typedef struct Ark_Union_Length_GridRowSizeOption {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_GridRowSizeOption value1;
    };
} Ark_Union_Length_GridRowSizeOption;
typedef struct Opt_Union_Length_GridRowSizeOption {
    Ark_Tag tag;
    Ark_Union_Length_GridRowSizeOption value;
} Opt_Union_Length_GridRowSizeOption;
typedef struct Ark_Union_LengthMetrics_BorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_BorderRadiuses value1;
    };
} Ark_Union_LengthMetrics_BorderRadiuses;
typedef struct Opt_Union_LengthMetrics_BorderRadiuses {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_BorderRadiuses value;
} Opt_Union_LengthMetrics_BorderRadiuses;
typedef struct Ark_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_BorderRadiuses value1;
        Ark_LocalizedBorderRadiuses value2;
    };
} Ark_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Opt_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses value;
} Opt_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses;
typedef struct Ark_Union_LengthMetrics_LeadingMarginPlaceholder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_LeadingMarginPlaceholder value1;
    };
} Ark_Union_LengthMetrics_LeadingMarginPlaceholder;
typedef struct Opt_Union_LengthMetrics_LeadingMarginPlaceholder {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_LeadingMarginPlaceholder value;
} Opt_Union_LengthMetrics_LeadingMarginPlaceholder;
typedef struct Ark_Union_LengthMetrics_Margin {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_Padding value1;
    };
} Ark_Union_LengthMetrics_Margin;
typedef struct Opt_Union_LengthMetrics_Margin {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_Margin value;
} Opt_Union_LengthMetrics_Margin;
typedef struct Ark_Union_LengthMetrics_Padding {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LengthMetrics value0;
        Ark_Padding value1;
    };
} Ark_Union_LengthMetrics_Padding;
typedef struct Opt_Union_LengthMetrics_Padding {
    Ark_Tag tag;
    Ark_Union_LengthMetrics_Padding value;
} Opt_Union_LengthMetrics_Padding;
typedef struct Ark_Union_Margin_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_Dimension value1;
    };
} Ark_Union_Margin_Dimension;
typedef struct Opt_Union_Margin_Dimension {
    Ark_Tag tag;
    Ark_Union_Margin_Dimension value;
} Opt_Union_Margin_Dimension;
typedef struct Ark_Union_Margin_Length_LocalizedMargin {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_Length value1;
        Ark_LocalizedPadding value2;
    };
} Ark_Union_Margin_Length_LocalizedMargin;
typedef struct Opt_Union_Margin_Length_LocalizedMargin {
    Ark_Tag tag;
    Ark_Union_Margin_Length_LocalizedMargin value;
} Opt_Union_Margin_Length_LocalizedMargin;
typedef struct Ark_Union_Number_LeadingMarginPlaceholder {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Number value0;
        Ark_LeadingMarginPlaceholder value1;
    };
} Ark_Union_Number_LeadingMarginPlaceholder;
typedef struct Opt_Union_Number_LeadingMarginPlaceholder {
    Ark_Tag tag;
    Ark_Union_Number_LeadingMarginPlaceholder value;
} Opt_Union_Number_LeadingMarginPlaceholder;
typedef struct Ark_Union_OutlineRadiuses_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_OutlineRadiuses value0;
        Ark_Dimension value1;
    };
} Ark_Union_OutlineRadiuses_Dimension;
typedef struct Opt_Union_OutlineRadiuses_Dimension {
    Ark_Tag tag;
    Ark_Union_OutlineRadiuses_Dimension value;
} Opt_Union_OutlineRadiuses_Dimension;
typedef struct Ark_Union_Padding_Dimension {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_Dimension value1;
    };
} Ark_Union_Padding_Dimension;
typedef struct Opt_Union_Padding_Dimension {
    Ark_Tag tag;
    Ark_Union_Padding_Dimension value;
} Opt_Union_Padding_Dimension;
typedef struct Ark_Union_Padding_Dimension_LocalizedPadding {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_Dimension value1;
        Ark_LocalizedPadding value2;
    };
} Ark_Union_Padding_Dimension_LocalizedPadding;
typedef struct Opt_Union_Padding_Dimension_LocalizedPadding {
    Ark_Tag tag;
    Ark_Union_Padding_Dimension_LocalizedPadding value;
} Opt_Union_Padding_Dimension_LocalizedPadding;
typedef struct Ark_Union_Padding_Length_LocalizedPadding {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_Length value1;
        Ark_LocalizedPadding value2;
    };
} Ark_Union_Padding_Length_LocalizedPadding;
typedef struct Opt_Union_Padding_Length_LocalizedPadding {
    Ark_Tag tag;
    Ark_Union_Padding_Length_LocalizedPadding value;
} Opt_Union_Padding_Length_LocalizedPadding;
typedef struct Ark_Union_Padding_LengthMetrics_LocalizedPadding {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Padding value0;
        Ark_LengthMetrics value1;
        Ark_LocalizedPadding value2;
    };
} Ark_Union_Padding_LengthMetrics_LocalizedPadding;
typedef struct Opt_Union_Padding_LengthMetrics_LocalizedPadding {
    Ark_Tag tag;
    Ark_Union_Padding_LengthMetrics_LocalizedPadding value;
} Opt_Union_Padding_LengthMetrics_LocalizedPadding;
typedef struct Ark_Union_Position_Alignment {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Position value0;
        Ark_Alignment value1;
    };
} Ark_Union_Position_Alignment;
typedef struct Opt_Union_Position_Alignment {
    Ark_Tag tag;
    Ark_Union_Position_Alignment value;
} Opt_Union_Position_Alignment;
typedef struct Ark_Union_Position_Edges_LocalizedEdges {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Position value0;
        Ark_Edges value1;
        Ark_LocalizedEdges value2;
    };
} Ark_Union_Position_Edges_LocalizedEdges;
typedef struct Opt_Union_Position_Edges_LocalizedEdges {
    Ark_Tag tag;
    Ark_Union_Position_Edges_LocalizedEdges value;
} Opt_Union_Position_Edges_LocalizedEdges;
typedef struct Ark_Union_Position_LocalizedPosition {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Position value0;
        Ark_LocalizedPosition value1;
    };
} Ark_Union_Position_LocalizedPosition;
typedef struct Opt_Union_Position_LocalizedPosition {
    Ark_Tag tag;
    Ark_Union_Position_LocalizedPosition value;
} Opt_Union_Position_LocalizedPosition;
typedef struct Ark_Union_RectOptions_RoundedRectOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RectOptions value0;
        Ark_RoundedRectOptions value1;
    };
} Ark_Union_RectOptions_RoundedRectOptions;
typedef struct Opt_Union_RectOptions_RoundedRectOptions {
    Ark_Tag tag;
    Ark_Union_RectOptions_RoundedRectOptions value;
} Opt_Union_RectOptions_RoundedRectOptions;
typedef struct Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ResourceStr value0;
        CustomNodeBuilder value1;
        Ark_NavigationCommonTitle value2;
        Ark_NavigationCustomTitle value3;
    };
} Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle;
typedef struct Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle {
    Ark_Tag tag;
    Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle value;
} Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle;
typedef struct Ark_Union_SizeOptions_ImageSize {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_SizeOptions value0;
        Ark_ImageSize value1;
    };
} Ark_Union_SizeOptions_ImageSize;
typedef struct Opt_Union_SizeOptions_ImageSize {
    Ark_Tag tag;
    Ark_Union_SizeOptions_ImageSize value;
} Opt_Union_SizeOptions_ImageSize;
typedef struct Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        CustomNodeBuilder value1;
        Ark_NavDestinationCommonTitle value2;
        Ark_NavDestinationCustomTitle value3;
        Ark_Resource value4;
    };
} Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource;
typedef struct Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource {
    Ark_Tag tag;
    Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource value;
} Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource;
typedef struct Ark_Union_Union_Padding_Dimension_LocalizedPadding {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Union_Padding_Dimension value0;
        Ark_LocalizedPadding value1;
    };
} Ark_Union_Union_Padding_Dimension_LocalizedPadding;
typedef struct Opt_Union_Union_Padding_Dimension_LocalizedPadding {
    Ark_Tag tag;
    Ark_Union_Union_Padding_Dimension_LocalizedPadding value;
} Opt_Union_Union_Padding_Dimension_LocalizedPadding;
typedef struct Ark_ViewportRect {
    /* kind: Interface */
    Opt_Length x;
    Opt_Length y;
    Opt_Length width;
    Opt_Length height;
} Ark_ViewportRect;
typedef struct Opt_ViewportRect {
    Ark_Tag tag;
    Ark_ViewportRect value;
} Opt_ViewportRect;
typedef struct Ark_Area {
    /* kind: Interface */
    Ark_Length width;
    Ark_Length height;
    Ark_Position position;
    Ark_Position globalPosition;
} Ark_Area;
typedef struct Opt_Area {
    Ark_Tag tag;
    Ark_Area value;
} Opt_Area;
typedef struct Ark_BadgeParamWithNumber {
    /* kind: Interface */
    Opt_Union_BadgePosition_Position position;
    Ark_BadgeStyle style;
    Ark_Number count;
    Opt_Number maxCount;
} Ark_BadgeParamWithNumber;
typedef struct Opt_BadgeParamWithNumber {
    Ark_Tag tag;
    Ark_BadgeParamWithNumber value;
} Opt_BadgeParamWithNumber;
typedef struct Ark_BadgeParamWithString {
    /* kind: Interface */
    Opt_Union_BadgePosition_Position position;
    Ark_BadgeStyle style;
    Ark_ResourceStr value;
} Ark_BadgeParamWithString;
typedef struct Opt_BadgeParamWithString {
    Ark_Tag tag;
    Ark_BadgeParamWithString value;
} Opt_BadgeParamWithString;
typedef struct Ark_BorderImageOption {
    /* kind: Interface */
    Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths slice;
    Opt_RepeatMode repeat;
    Opt_Union_String_Resource_LinearGradientOptions source;
    Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths width;
    Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths outset;
    Opt_Boolean fill;
} Ark_BorderImageOption;
typedef struct Opt_BorderImageOption {
    Ark_Tag tag;
    Ark_BorderImageOption value;
} Opt_BorderImageOption;
typedef struct Ark_BorderOptions {
    /* kind: Interface */
    Opt_Union_EdgeWidths_Length_LocalizedEdgeWidths width;
    Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors color;
    Opt_Union_BorderRadiuses_Length_LocalizedBorderRadiuses radius;
    Opt_Union_EdgeStyles_BorderStyle style;
    Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths dashGap;
    Opt_Union_EdgeWidths_LengthMetrics_LocalizedEdgeWidths dashWidth;
} Ark_BorderOptions;
typedef struct Opt_BorderOptions {
    Ark_Tag tag;
    Ark_BorderOptions value;
} Opt_BorderOptions;
typedef struct Ark_ButtonLabelStyle {
    /* kind: Interface */
    Opt_TextOverflow overflow;
    Opt_Number maxLines;
    Opt_Union_Number_ResourceStr minFontSize;
    Opt_Union_Number_ResourceStr maxFontSize;
    Opt_TextHeightAdaptivePolicy heightAdaptivePolicy;
    Opt_Font font;
} Ark_ButtonLabelStyle;
typedef struct Opt_ButtonLabelStyle {
    Ark_Tag tag;
    Ark_ButtonLabelStyle value;
} Opt_ButtonLabelStyle;
typedef struct Ark_CancelButtonOptions {
    /* kind: Interface */
    Opt_CancelButtonStyle style;
    Opt_IconOptions icon;
} Ark_CancelButtonOptions;
typedef struct Opt_CancelButtonOptions {
    Ark_Tag tag;
    Ark_CancelButtonOptions value;
} Opt_CancelButtonOptions;
typedef struct Ark_CapsuleStyleOptions {
    /* kind: Interface */
    Opt_Boolean enableScanEffect;
    Opt_ResourceColor borderColor;
    Opt_Length borderWidth;
    Opt_Font font;
    Opt_ResourceColor fontColor;
    Opt_Boolean showDefaultPercentage;
    Opt_LengthMetrics borderRadius;
} Ark_CapsuleStyleOptions;
typedef struct Opt_CapsuleStyleOptions {
    Ark_Tag tag;
    Ark_CapsuleStyleOptions value;
} Opt_CapsuleStyleOptions;
typedef struct Ark_CustomDialogControllerOptions {
    /* kind: Interface */
    Ark_Union_CustomBuilder_ExtendableComponent builder;
    Opt_Callback_Void cancel;
    Opt_Boolean autoCancel;
    Opt_DialogAlignment alignment;
    Opt_Offset offset;
    Opt_Boolean customStyle;
    Opt_Number gridCount;
    Opt_ResourceColor maskColor;
    Opt_Rectangle maskRect;
    Opt_AnimateParam openAnimation;
    Opt_AnimateParam closeAnimation;
    Opt_Boolean showInSubWindow;
    Opt_ResourceColor backgroundColor;
    Opt_Union_Dimension_BorderRadiuses cornerRadius;
    Opt_Boolean isModal;
    Opt_Callback_DismissDialogAction_Void onWillDismiss;
    Opt_Dimension width;
    Opt_Dimension height;
    Opt_Union_Dimension_EdgeWidths borderWidth;
    Opt_Union_ResourceColor_EdgeColors borderColor;
    Opt_Union_BorderStyle_EdgeStyles borderStyle;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_KeyboardAvoidMode keyboardAvoidMode;
    Opt_Boolean enableHoverMode;
    Opt_HoverModeAreaType hoverModeArea;
    Opt_Callback_Void onDidAppear;
    Opt_Callback_Void onDidDisappear;
    Opt_Callback_Void onWillAppear;
    Opt_Callback_Void onWillDisappear;
    Opt_LengthMetrics keyboardAvoidDistance;
    Opt_LevelMode levelMode;
    Opt_Number levelUniqueId;
    Opt_ImmersiveMode immersiveMode;
    Opt_LevelOrder levelOrder;
    Opt_Boolean focusable;
} Ark_CustomDialogControllerOptions;
typedef struct Opt_CustomDialogControllerOptions {
    Ark_Tag tag;
    Ark_CustomDialogControllerOptions value;
} Opt_CustomDialogControllerOptions;
typedef struct Ark_DigitIndicator {
    /* kind: Interface */
    Opt_Length _left;
    Opt_Length _top;
    Opt_Length _right;
    Opt_Length _bottom;
    Opt_LengthMetrics _start;
    Opt_LengthMetrics _end;
    Opt_ResourceColor _fontColor;
    Opt_ResourceColor _selectedFontColor;
    Opt_Font _digitFont;
    Opt_Font _selectedDigitFont;
} Ark_DigitIndicator;
typedef struct Opt_DigitIndicator {
    Ark_Tag tag;
    Ark_DigitIndicator value;
} Opt_DigitIndicator;
typedef struct Ark_EventTarget {
    /* kind: Interface */
    Ark_Area area;
    Opt_String id;
} Ark_EventTarget;
typedef struct Opt_EventTarget {
    Ark_Tag tag;
    Ark_EventTarget value;
} Opt_EventTarget;
typedef struct Opt_FocusAxisEvent {
    Ark_Tag tag;
    Ark_FocusAxisEvent value;
} Opt_FocusAxisEvent;
typedef struct Ark_GeometryInfo {
    /* kind: Interface */
    Ark_Number width;
    Ark_Number height;
    Ark_EdgeWidths borderWidth;
    Ark_Padding margin;
    Ark_Padding padding;
} Ark_GeometryInfo;
typedef struct Opt_GeometryInfo {
    Ark_Tag tag;
    Ark_GeometryInfo value;
} Opt_GeometryInfo;
typedef struct Opt_GestureEvent {
    Ark_Tag tag;
    Ark_GestureEvent value;
} Opt_GestureEvent;
typedef struct Ark_GutterOption {
    /* kind: Interface */
    Opt_Union_Length_GridRowSizeOption x;
    Opt_Union_Length_GridRowSizeOption y;
} Ark_GutterOption;
typedef struct Opt_GutterOption {
    Ark_Tag tag;
    Ark_GutterOption value;
} Opt_GutterOption;
typedef struct Opt_HoverEvent {
    Ark_Tag tag;
    Ark_HoverEvent value;
} Opt_HoverEvent;
typedef struct Ark_ImageAttachmentLayoutStyle {
    /* kind: Interface */
    Opt_Union_LengthMetrics_Margin margin;
    Opt_Union_LengthMetrics_Padding padding;
    Opt_Union_LengthMetrics_BorderRadiuses borderRadius;
} Ark_ImageAttachmentLayoutStyle;
typedef struct Opt_ImageAttachmentLayoutStyle {
    Ark_Tag tag;
    Ark_ImageAttachmentLayoutStyle value;
} Opt_ImageAttachmentLayoutStyle;
typedef struct Opt_LayoutChild {
    Ark_Tag tag;
    Ark_LayoutChild value;
} Opt_LayoutChild;
typedef struct Opt_LongPressGestureEvent {
    Ark_Tag tag;
    Ark_LongPressGestureEvent value;
} Opt_LongPressGestureEvent;
typedef struct Ark_MenuOutlineOptions {
    /* kind: Interface */
    Opt_Union_Dimension_EdgeOutlineWidths width;
    Opt_Union_ResourceColor_EdgeColors color;
} Ark_MenuOutlineOptions;
typedef struct Opt_MenuOutlineOptions {
    Ark_Tag tag;
    Ark_MenuOutlineOptions value;
} Opt_MenuOutlineOptions;
typedef struct Opt_MouseEvent {
    Ark_Tag tag;
    Ark_MouseEvent value;
} Opt_MouseEvent;
typedef struct Ark_NativeEmbedInfo {
    /* kind: Interface */
    Opt_String id;
    Opt_String type;
    Opt_String src;
    Opt_Position position;
    Opt_Int32 width;
    Opt_Int32 height;
    Opt_String url;
    Opt_String tag;
    Opt_Map_String_String params;
} Ark_NativeEmbedInfo;
typedef struct Opt_NativeEmbedInfo {
    Ark_Tag tag;
    Ark_NativeEmbedInfo value;
} Opt_NativeEmbedInfo;
typedef struct Ark_NavigationMenuOptions {
    /* kind: Interface */
    Opt_MoreButtonOptions moreButtonOptions;
} Ark_NavigationMenuOptions;
typedef struct Opt_NavigationMenuOptions {
    Ark_Tag tag;
    Ark_NavigationMenuOptions value;
} Opt_NavigationMenuOptions;
typedef struct Ark_NavigationToolbarOptions {
    /* kind: Interface */
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_MoreButtonOptions moreButtonOptions;
    Opt_BarStyle barStyle;
    Opt_Boolean hideItemValue;
} Ark_NavigationToolbarOptions;
typedef struct Opt_NavigationToolbarOptions {
    Ark_Tag tag;
    Ark_NavigationToolbarOptions value;
} Opt_NavigationToolbarOptions;
typedef struct Ark_OutlineOptions {
    /* kind: Interface */
    Opt_Union_EdgeOutlineWidths_Dimension width;
    Opt_Union_EdgeColors_ResourceColor_LocalizedEdgeColors color;
    Opt_Union_OutlineRadiuses_Dimension radius;
    Opt_Union_EdgeOutlineStyles_OutlineStyle style;
} Ark_OutlineOptions;
typedef struct Opt_OutlineOptions {
    Ark_Tag tag;
    Ark_OutlineOptions value;
} Opt_OutlineOptions;
typedef struct Opt_PanGestureEvent {
    Ark_Tag tag;
    Ark_PanGestureEvent value;
} Opt_PanGestureEvent;
typedef struct Opt_ParagraphStyle {
    Ark_Tag tag;
    Ark_ParagraphStyle value;
} Opt_ParagraphStyle;
typedef struct Ark_ParagraphStyleInterface {
    /* kind: Interface */
    Opt_TextAlign textAlign;
    Opt_LengthMetrics textIndent;
    Opt_Number maxLines;
    Opt_TextOverflow overflow;
    Opt_WordBreak wordBreak;
    Opt_Union_LengthMetrics_LeadingMarginPlaceholder leadingMargin;
    Opt_LengthMetrics paragraphSpacing;
} Ark_ParagraphStyleInterface;
typedef struct Opt_ParagraphStyleInterface {
    Ark_Tag tag;
    Ark_ParagraphStyleInterface value;
} Opt_ParagraphStyleInterface;
typedef struct Ark_PickerDialogButtonStyle {
    /* kind: Interface */
    Opt_ButtonType type;
    Opt_ButtonStyleMode style;
    Opt_ButtonRole role;
    Opt_Length fontSize;
    Opt_ResourceColor fontColor;
    Opt_Union_FontWeight_Number_String fontWeight;
    Opt_FontStyle fontStyle;
    Opt_Union_Resource_String fontFamily;
    Opt_ResourceColor backgroundColor;
    Opt_Union_Length_BorderRadiuses borderRadius;
    Opt_Boolean primary;
} Ark_PickerDialogButtonStyle;
typedef struct Opt_PickerDialogButtonStyle {
    Ark_Tag tag;
    Ark_PickerDialogButtonStyle value;
} Opt_PickerDialogButtonStyle;
typedef struct Ark_PickerTextStyle {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_Font font;
} Ark_PickerTextStyle;
typedef struct Opt_PickerTextStyle {
    Ark_Tag tag;
    Ark_PickerTextStyle value;
} Opt_PickerTextStyle;
typedef struct Opt_PinchGestureEvent {
    Ark_Tag tag;
    Ark_PinchGestureEvent value;
} Opt_PinchGestureEvent;
typedef struct Ark_PlaceholderStyle {
    /* kind: Interface */
    Opt_Font font;
    Opt_ResourceColor fontColor;
} Ark_PlaceholderStyle;
typedef struct Opt_PlaceholderStyle {
    Ark_Tag tag;
    Ark_PlaceholderStyle value;
} Opt_PlaceholderStyle;
typedef struct Ark_PopupMessageOptions {
    /* kind: Interface */
    Opt_ResourceColor textColor;
    Opt_Font font;
} Ark_PopupMessageOptions;
typedef struct Opt_PopupMessageOptions {
    Ark_Tag tag;
    Ark_PopupMessageOptions value;
} Opt_PopupMessageOptions;
typedef struct Ark_ResizableOptions {
    /* kind: Interface */
    Opt_EdgeWidths slice;
    Opt_drawing_Lattice lattice;
} Ark_ResizableOptions;
typedef struct Opt_ResizableOptions {
    Ark_Tag tag;
    Ark_ResizableOptions value;
} Opt_ResizableOptions;
typedef struct Ark_RichEditorLayoutStyle {
    /* kind: Interface */
    Opt_Union_Dimension_Margin margin;
    Opt_Union_Dimension_BorderRadiuses borderRadius;
} Ark_RichEditorLayoutStyle;
typedef struct Opt_RichEditorLayoutStyle {
    Ark_Tag tag;
    Ark_RichEditorLayoutStyle value;
} Opt_RichEditorLayoutStyle;
typedef struct Ark_RichEditorParagraphStyle {
    /* kind: Interface */
    Opt_TextAlign textAlign;
    Opt_Union_Dimension_LeadingMarginPlaceholder leadingMargin;
    Opt_WordBreak wordBreak;
    Opt_LineBreakStrategy lineBreakStrategy;
    Opt_Number paragraphSpacing;
} Ark_RichEditorParagraphStyle;
typedef struct Opt_RichEditorParagraphStyle {
    Ark_Tag tag;
    Ark_RichEditorParagraphStyle value;
} Opt_RichEditorParagraphStyle;
typedef struct Ark_RichEditorParagraphStyleOptions {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
    Ark_RichEditorParagraphStyle style;
} Ark_RichEditorParagraphStyleOptions;
typedef struct Opt_RichEditorParagraphStyleOptions {
    Ark_Tag tag;
    Ark_RichEditorParagraphStyleOptions value;
} Opt_RichEditorParagraphStyleOptions;
typedef struct Opt_RotationGestureEvent {
    Ark_Tag tag;
    Ark_RotationGestureEvent value;
} Opt_RotationGestureEvent;
typedef struct Ark_SectionOptions {
    /* kind: Interface */
    Ark_Number itemsCount;
    Opt_Number crossCount;
    Opt_GetItemMainSizeByIndex onGetItemMainSizeByIndex;
    Opt_Dimension columnsGap;
    Opt_Dimension rowsGap;
    Opt_Union_Margin_Dimension margin;
} Ark_SectionOptions;
typedef struct Opt_SectionOptions {
    Ark_Tag tag;
    Ark_SectionOptions value;
} Opt_SectionOptions;
typedef struct Ark_SheetOptions {
    /* kind: Interface */
    Opt_ResourceColor backgroundColor;
    Opt_Callback_Void onAppear;
    Opt_Callback_Void onDisappear;
    Opt_Callback_Void onWillAppear;
    Opt_Callback_Void onWillDisappear;
    Opt_Union_SheetSize_Length height;
    Opt_Boolean dragBar;
    Opt_ResourceColor maskColor;
    Opt_TripleLengthDetents detents;
    Opt_BlurStyle blurStyle;
    Opt_Union_Boolean_Resource showClose;
    Opt_SheetType preferType;
    Opt_Union_SheetTitleOptions_CustomBuilder title;
    Opt_Callback_SheetDismiss_Void shouldDismiss;
    Opt_Callback_DismissSheetAction_Void onWillDismiss;
    Opt_Callback_SpringBackAction_Void onWillSpringBackWhenDismiss;
    Opt_Boolean enableOutsideInteractive;
    Opt_Dimension width;
    Opt_Union_Dimension_EdgeWidths_LocalizedEdgeWidths borderWidth;
    Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors borderColor;
    Opt_Union_BorderStyle_EdgeStyles borderStyle;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_Callback_Number_Void onHeightDidChange;
    Opt_SheetMode mode;
    Opt_ScrollSizeMode scrollSizeMode;
    Opt_Callback_Number_Void onDetentsDidChange;
    Opt_Callback_Number_Void onWidthDidChange;
    Opt_Callback_SheetType_Void onTypeDidChange;
    Opt_UIContext uiContext;
    Opt_SheetKeyboardAvoidMode keyboardAvoidMode;
    Opt_Boolean enableHoverMode;
    Opt_HoverModeAreaType hoverModeArea;
    Opt_Position offset;
    Opt_Number effectEdge;
    Opt_Union_LengthMetrics_BorderRadiuses_LocalizedBorderRadiuses radius;
    Opt_Union_SheetSize_Length detentSelection;
    Opt_Boolean showInSubWindow;
    Opt_Placement placement;
    Opt_Boolean placementOnTarget;
} Ark_SheetOptions;
typedef struct Opt_SheetOptions {
    Ark_Tag tag;
    Ark_SheetOptions value;
} Opt_SheetOptions;
typedef struct Ark_SwipeActionOptions {
    /* kind: Interface */
    Opt_Union_CustomBuilder_SwipeActionItem start;
    Opt_Union_CustomBuilder_SwipeActionItem end;
    Opt_SwipeEdgeEffect edgeEffect;
    Opt_Callback_Number_Void onOffsetChange;
} Ark_SwipeActionOptions;
typedef struct Opt_SwipeActionOptions {
    Ark_Tag tag;
    Ark_SwipeActionOptions value;
} Opt_SwipeActionOptions;
typedef struct Opt_SwipeGestureEvent {
    Ark_Tag tag;
    Ark_SwipeGestureEvent value;
} Opt_SwipeGestureEvent;
typedef struct Ark_TabBarLabelStyle {
    /* kind: Interface */
    Opt_TextOverflow overflow;
    Opt_Number maxLines;
    Opt_Union_Number_ResourceStr minFontSize;
    Opt_Union_Number_ResourceStr maxFontSize;
    Opt_TextHeightAdaptivePolicy heightAdaptivePolicy;
    Opt_Font font;
    Opt_ResourceColor selectedColor;
    Opt_ResourceColor unselectedColor;
} Ark_TabBarLabelStyle;
typedef struct Opt_TabBarLabelStyle {
    Ark_Tag tag;
    Ark_TabBarLabelStyle value;
} Opt_TabBarLabelStyle;
typedef struct Opt_TapGestureEvent {
    Ark_Tag tag;
    Ark_TapGestureEvent value;
} Opt_TapGestureEvent;
typedef struct Ark_text_ParagraphStyle {
    /* kind: Interface */
    Opt_text_TextStyle textStyle;
    Opt_text_TextDirection textDirection;
    Opt_text_TextAlign align;
    Opt_text_WordBreak wordBreak;
    Opt_Number maxLines;
    Opt_text_BreakStrategy breakStrategy;
    Opt_text_StrutStyle strutStyle;
    Opt_text_TextHeightBehavior textHeightBehavior;
    Opt_text_TextTab tab;
} Ark_text_ParagraphStyle;
typedef struct Opt_text_ParagraphStyle {
    Ark_Tag tag;
    Ark_text_ParagraphStyle value;
} Opt_text_ParagraphStyle;
typedef struct Ark_text_RunMetrics {
    /* kind: Interface */
    Ark_text_TextStyle textStyle;
    Ark_drawing_FontMetrics fontMetrics;
} Ark_text_RunMetrics;
typedef struct Opt_text_RunMetrics {
    Ark_Tag tag;
    Ark_text_RunMetrics value;
} Opt_text_RunMetrics;
typedef struct Ark_TextBackgroundStyle {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_Union_Dimension_BorderRadiuses radius;
} Ark_TextBackgroundStyle;
typedef struct Opt_TextBackgroundStyle {
    Ark_Tag tag;
    Ark_TextBackgroundStyle value;
} Opt_TextBackgroundStyle;
typedef struct Ark_TextPickerTextStyle {
    /* kind: Interface */
    Opt_ResourceColor color;
    Opt_Font font;
    Opt_Union_Number_String_Resource minFontSize;
    Opt_Union_Number_String_Resource maxFontSize;
    Opt_TextOverflow overflow;
} Ark_TextPickerTextStyle;
typedef struct Opt_TextPickerTextStyle {
    Ark_Tag tag;
    Ark_TextPickerTextStyle value;
} Opt_TextPickerTextStyle;
typedef struct Opt_TouchEvent {
    Ark_Tag tag;
    Ark_TouchEvent value;
} Opt_TouchEvent;
typedef struct Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_CancelButtonOptions value0;
        Ark_CancelButtonSymbolOptions value1;
    };
} Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions;
typedef struct Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions {
    Ark_Tag tag;
    Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions value;
} Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions;
typedef struct Ark_Union_DotIndicator_DigitIndicator {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_DotIndicator value0;
        Ark_DigitIndicator value1;
    };
} Ark_Union_DotIndicator_DigitIndicator;
typedef struct Opt_Union_DotIndicator_DigitIndicator {
    Ark_Tag tag;
    Ark_Union_DotIndicator_DigitIndicator value;
} Opt_Union_DotIndicator_DigitIndicator;
typedef struct Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_IndicatorComponentController value0;
        Ark_DotIndicator value1;
        Ark_DigitIndicator value2;
        Ark_Boolean value3;
    };
} Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean;
typedef struct Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean {
    Ark_Tag tag;
    Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean value;
} Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean;
typedef struct Ark_Union_Length_GutterOption {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_Length value0;
        Ark_GutterOption value1;
    };
} Ark_Union_Length_GutterOption;
typedef struct Opt_Union_Length_GutterOption {
    Ark_Tag tag;
    Ark_Union_Length_GutterOption value;
} Opt_Union_Length_GutterOption;
typedef struct Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_LinearStyleOptions value0;
        Ark_RingStyleOptions value1;
        Ark_CapsuleStyleOptions value2;
        Ark_ProgressStyleOptions value3;
    };
} Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions;
typedef struct Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions {
    Ark_Tag tag;
    Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value;
} Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions;
typedef struct Opt_AccessibilityHoverEvent {
    Ark_Tag tag;
    Ark_AccessibilityHoverEvent value;
} Opt_AccessibilityHoverEvent;
typedef struct Opt_AxisEvent {
    Ark_Tag tag;
    Ark_AxisEvent value;
} Opt_AxisEvent;
typedef struct Opt_BackgroundColorStyle {
    Ark_Tag tag;
    Ark_BackgroundColorStyle value;
} Opt_BackgroundColorStyle;
typedef struct Opt_BaseEvent {
    Ark_Tag tag;
    Ark_BaseEvent value;
} Opt_BaseEvent;
typedef struct Opt_BaseGestureEvent {
    Ark_Tag tag;
    Ark_BaseGestureEvent value;
} Opt_BaseGestureEvent;
typedef struct Ark_BottomTabBarStyle {
    /* kind: Interface */
    Opt_Union_ResourceStr_TabBarSymbol _icon;
    Opt_ResourceStr _text;
    Opt_TabBarLabelStyle _labelStyle;
    Opt_Union_Padding_Dimension_LocalizedPadding _padding;
    Opt_LayoutMode _layoutMode;
    Opt_VerticalAlign _verticalAlign;
    Opt_Boolean _symmetricExtensible;
    Opt_String _id;
    Opt_TabBarIconStyle _iconStyle;
} Ark_BottomTabBarStyle;
typedef struct Opt_BottomTabBarStyle {
    Ark_Tag tag;
    Ark_BottomTabBarStyle value;
} Opt_BottomTabBarStyle;
typedef struct Ark_CalendarDialogOptions {
    /* kind: Interface */
    Opt_Union_Number_Resource hintRadius;
    Opt_Date selected;
    Opt_Date start;
    Opt_Date end;
    Opt_Array_DateRange disabledDateRange;
    Opt_Callback_Date_Void onAccept;
    Opt_VoidCallback onCancel;
    Opt_Callback_Date_Void onChange;
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_PickerDialogButtonStyle acceptButtonStyle;
    Opt_PickerDialogButtonStyle cancelButtonStyle;
    Opt_VoidCallback onDidAppear;
    Opt_VoidCallback onDidDisappear;
    Opt_VoidCallback onWillAppear;
    Opt_VoidCallback onWillDisappear;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_Boolean enableHoverMode;
    Opt_HoverModeAreaType hoverModeArea;
    Opt_Boolean markToday;
} Ark_CalendarDialogOptions;
typedef struct Opt_CalendarDialogOptions {
    Ark_Tag tag;
    Ark_CalendarDialogOptions value;
} Opt_CalendarDialogOptions;
typedef struct Opt_ClickEvent {
    Ark_Tag tag;
    Ark_ClickEvent value;
} Opt_ClickEvent;
typedef struct Ark_GridRowOptions {
    /* kind: Interface */
    Opt_Union_Length_GutterOption gutter;
    Opt_Union_Number_GridRowColumnOption columns;
    Opt_BreakPoints breakpoints;
    Opt_GridRowDirection direction;
} Ark_GridRowOptions;
typedef struct Opt_GridRowOptions {
    Ark_Tag tag;
    Ark_GridRowOptions value;
} Opt_GridRowOptions;
typedef struct Opt_ImageAttachment {
    Ark_Tag tag;
    Ark_ImageAttachment value;
} Opt_ImageAttachment;
typedef struct Ark_ImageAttachmentInterface {
    /* kind: Interface */
    Ark_image_PixelMap value;
    Opt_SizeOptions size;
    Opt_ImageSpanAlignment verticalAlign;
    Opt_ImageFit objectFit;
    Opt_ImageAttachmentLayoutStyle layoutStyle;
    Opt_ColorFilterType colorFilter;
} Ark_ImageAttachmentInterface;
typedef struct Opt_ImageAttachmentInterface {
    Ark_Tag tag;
    Ark_ImageAttachmentInterface value;
} Opt_ImageAttachmentInterface;
typedef struct Ark_NativeEmbedDataInfo {
    /* kind: Interface */
    Opt_NativeEmbedStatus status;
    Opt_String surfaceId;
    Opt_String embedId;
    Opt_NativeEmbedInfo info;
} Ark_NativeEmbedDataInfo;
typedef struct Opt_NativeEmbedDataInfo {
    Ark_Tag tag;
    Ark_NativeEmbedDataInfo value;
} Opt_NativeEmbedDataInfo;
typedef struct Ark_NativeEmbedTouchInfo {
    /* kind: Interface */
    Opt_String embedId;
    Opt_TouchEvent touchEvent;
    Opt_EventResult result;
} Ark_NativeEmbedTouchInfo;
typedef struct Opt_NativeEmbedTouchInfo {
    Ark_Tag tag;
    Ark_NativeEmbedTouchInfo value;
} Opt_NativeEmbedTouchInfo;
typedef struct Ark_ResourceImageAttachmentOptions {
    /* kind: Interface */
    Opt_ResourceStr resourceValue;
    Opt_SizeOptions size;
    Opt_ImageSpanAlignment verticalAlign;
    Opt_ImageFit objectFit;
    Opt_ImageAttachmentLayoutStyle layoutStyle;
    Opt_ColorFilterType colorFilter;
    Opt_Boolean syncLoad;
} Ark_ResourceImageAttachmentOptions;
typedef struct Opt_ResourceImageAttachmentOptions {
    Ark_Tag tag;
    Ark_ResourceImageAttachmentOptions value;
} Opt_ResourceImageAttachmentOptions;
typedef struct Ark_RichEditorImageSpanStyle {
    /* kind: Interface */
    Opt_Tuple_Dimension_Dimension size;
    Opt_ImageSpanAlignment verticalAlign;
    Opt_ImageFit objectFit;
    Opt_RichEditorLayoutStyle layoutStyle;
} Ark_RichEditorImageSpanStyle;
typedef struct Opt_RichEditorImageSpanStyle {
    Ark_Tag tag;
    Ark_RichEditorImageSpanStyle value;
} Opt_RichEditorImageSpanStyle;
typedef struct Ark_RichEditorImageSpanStyleResult {
    /* kind: Interface */
    Ark_Tuple_Number_Number size;
    Ark_ImageSpanAlignment verticalAlign;
    Ark_ImageFit objectFit;
    Opt_RichEditorLayoutStyle layoutStyle;
} Ark_RichEditorImageSpanStyleResult;
typedef struct Opt_RichEditorImageSpanStyleResult {
    Ark_Tag tag;
    Ark_RichEditorImageSpanStyleResult value;
} Opt_RichEditorImageSpanStyleResult;
typedef struct Ark_RichEditorParagraphResult {
    /* kind: Interface */
    Ark_RichEditorParagraphStyle style;
    Ark_Tuple_Number_Number range;
} Ark_RichEditorParagraphResult;
typedef struct Opt_RichEditorParagraphResult {
    Ark_Tag tag;
    Ark_RichEditorParagraphResult value;
} Opt_RichEditorParagraphResult;
typedef struct Ark_RichEditorTextStyle {
    /* kind: Interface */
    Opt_ResourceColor fontColor;
    Opt_Union_String_Number_Resource fontSize;
    Opt_FontStyle fontStyle;
    Opt_Union_Number_FontWeight_String fontWeight;
    Opt_ResourceStr fontFamily;
    Opt_DecorationStyleInterface decoration;
    Opt_Union_ShadowOptions_Array_ShadowOptions textShadow;
    Opt_Union_Number_String letterSpacing;
    Opt_Union_Number_String_Resource lineHeight;
    Opt_Boolean halfLeading;
    Opt_String fontFeature;
    Opt_TextBackgroundStyle textBackgroundStyle;
} Ark_RichEditorTextStyle;
typedef struct Opt_RichEditorTextStyle {
    Ark_Tag tag;
    Ark_RichEditorTextStyle value;
} Opt_RichEditorTextStyle;
typedef struct Ark_RichEditorTextStyleResult {
    /* kind: Interface */
    Ark_ResourceColor fontColor;
    Ark_Number fontSize;
    Ark_FontStyle fontStyle;
    Ark_Number fontWeight;
    Ark_String fontFamily;
    Ark_DecorationStyleResult decoration;
    Opt_Array_ShadowOptions textShadow;
    Opt_Number letterSpacing;
    Opt_Number lineHeight;
    Opt_Boolean halfLeading;
    Opt_String fontFeature;
    Opt_TextBackgroundStyle textBackgroundStyle;
} Ark_RichEditorTextStyleResult;
typedef struct Opt_RichEditorTextStyleResult {
    Ark_Tag tag;
    Ark_RichEditorTextStyleResult value;
} Opt_RichEditorTextStyleResult;
typedef struct Ark_RichEditorUpdateImageSpanStyleOptions {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
    Ark_RichEditorImageSpanStyle imageStyle;
} Ark_RichEditorUpdateImageSpanStyleOptions;
typedef struct Opt_RichEditorUpdateImageSpanStyleOptions {
    Ark_Tag tag;
    Ark_RichEditorUpdateImageSpanStyleOptions value;
} Opt_RichEditorUpdateImageSpanStyleOptions;
typedef struct Ark_RichEditorUpdateTextSpanStyleOptions {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number end;
    Ark_RichEditorTextStyle textStyle;
    Opt_RichEditorUrlStyle urlStyle;
} Ark_RichEditorUpdateTextSpanStyleOptions;
typedef struct Opt_RichEditorUpdateTextSpanStyleOptions {
    Ark_Tag tag;
    Ark_RichEditorUpdateTextSpanStyleOptions value;
} Opt_RichEditorUpdateTextSpanStyleOptions;
typedef struct Ark_StyledStringValue {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_TextStyle value0;
        Ark_DecorationStyle value1;
        Ark_BaselineOffsetStyle value2;
        Ark_LetterSpacingStyle value3;
        Ark_TextShadowStyle value4;
        Ark_GestureStyle value5;
        Ark_ImageAttachment value6;
        Ark_ParagraphStyle value7;
        Ark_LineHeightStyle value8;
        Ark_UrlStyle value9;
        Ark_CustomSpan value10;
        Ark_UserDataSpan value11;
        Ark_BackgroundColorStyle value12;
    };
} Ark_StyledStringValue;
typedef struct Opt_StyledStringValue {
    Ark_Tag tag;
    Ark_StyledStringValue value;
} Opt_StyledStringValue;
typedef struct Ark_StyleOptions {
    /* kind: Interface */
    Opt_Number start;
    Opt_Number length;
    Ark_StyledStringKey styledKey;
    Ark_StyledStringValue styledValue;
} Ark_StyleOptions;
typedef struct Opt_StyleOptions {
    Ark_Tag tag;
    Ark_StyleOptions value;
} Opt_StyleOptions;
typedef struct Ark_SubTabBarStyle {
    /* kind: Interface */
    Opt_Union_String_Resource_ComponentContent _content;
    Opt_SubTabBarIndicatorStyle _indicator;
    Opt_SelectedMode _selectedMode;
    Opt_BoardStyle _board;
    Opt_TabBarLabelStyle _labelStyle;
    Opt_Union_Union_Padding_Dimension_LocalizedPadding _padding;
    Opt_String _id;
} Ark_SubTabBarStyle;
typedef struct Opt_SubTabBarStyle {
    Ark_Tag tag;
    Ark_SubTabBarStyle value;
} Opt_SubTabBarStyle;
typedef struct Ark_TextPickerDialogOptions {
    /* kind: Interface */
    Ark_Union_Array_String_Array_Array_String_Resource_Array_TextPickerRangeContent_Array_TextCascadePickerRangeContent range;
    Opt_Union_ResourceStr_Array_ResourceStr value;
    Opt_Union_Number_Array_Number selected;
    Opt_Array_LengthMetrics columnWidths;
    Opt_Union_Number_String defaultPickerItemHeight;
    Opt_Boolean canLoop;
    Opt_PickerTextStyle disappearTextStyle;
    Opt_PickerTextStyle textStyle;
    Opt_PickerDialogButtonStyle acceptButtonStyle;
    Opt_PickerDialogButtonStyle cancelButtonStyle;
    Opt_PickerTextStyle selectedTextStyle;
    Opt_Boolean disableTextStyleAnimation;
    Opt_TextPickerTextStyle defaultTextStyle;
    Opt_Callback_TextPickerResult_Void onAccept;
    Opt_Callback_Void onCancel;
    Opt_Callback_TextPickerResult_Void onChange;
    Opt_Callback_TextPickerResult_Void onScrollStop;
    Opt_Callback_TextPickerResult_Void onEnterSelectedArea;
    Opt_Rectangle maskRect;
    Opt_DialogAlignment alignment;
    Opt_Offset offset;
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_Callback_Void onDidAppear;
    Opt_Callback_Void onDidDisappear;
    Opt_Callback_Void onWillAppear;
    Opt_Callback_Void onWillDisappear;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_Boolean enableHoverMode;
    Opt_HoverModeAreaType hoverModeArea;
    Opt_Boolean enableHapticFeedback;
} Ark_TextPickerDialogOptions;
typedef struct Opt_TextPickerDialogOptions {
    Ark_Tag tag;
    Ark_TextPickerDialogOptions value;
} Opt_TextPickerDialogOptions;
typedef struct Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ComponentContent value0;
        Ark_SubTabBarStyle value1;
        Ark_BottomTabBarStyle value2;
        Ark_String value3;
        Ark_Resource value4;
        CustomNodeBuilder value5;
        Ark_TabBarOptions value6;
    };
} Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions;
typedef struct Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions {
    Ark_Tag tag;
    Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions value;
} Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions;
typedef struct Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RichEditorUpdateTextSpanStyleOptions value0;
        Ark_RichEditorUpdateImageSpanStyleOptions value1;
        Ark_RichEditorUpdateSymbolSpanStyleOptions value2;
    };
} Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Opt_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions {
    Ark_Tag tag;
    Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions value;
} Opt_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions;
typedef struct Ark_Union_String_ImageAttachment_CustomSpan {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_String value0;
        Ark_ImageAttachment value1;
        Ark_CustomSpan value2;
    };
} Ark_Union_String_ImageAttachment_CustomSpan;
typedef struct Opt_Union_String_ImageAttachment_CustomSpan {
    Ark_Tag tag;
    Ark_Union_String_ImageAttachment_CustomSpan value;
} Opt_Union_String_ImageAttachment_CustomSpan;
typedef struct Ark_AttachmentType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ImageAttachmentInterface value0;
        Ark_ResourceImageAttachmentOptions value1;
    };
} Ark_AttachmentType;
typedef struct Opt_AttachmentType {
    Ark_Tag tag;
    Ark_AttachmentType value;
} Opt_AttachmentType;
typedef struct Ark_RichEditorImageSpanOptions {
    /* kind: Interface */
    Opt_Number offset;
    Opt_RichEditorImageSpanStyle imageStyle;
    Opt_RichEditorGesture gesture;
    Opt_OnHoverCallback onHover;
} Ark_RichEditorImageSpanOptions;
typedef struct Opt_RichEditorImageSpanOptions {
    Ark_Tag tag;
    Ark_RichEditorImageSpanOptions value;
} Opt_RichEditorImageSpanOptions;
typedef struct Ark_RichEditorImageSpanResult {
    /* kind: Interface */
    Ark_RichEditorSpanPosition spanPosition;
    Opt_image_PixelMap valuePixelMap;
    Opt_ResourceStr valueResourceStr;
    Ark_RichEditorImageSpanStyleResult imageStyle;
    Ark_Tuple_Number_Number offsetInSpan;
} Ark_RichEditorImageSpanResult;
typedef struct Opt_RichEditorImageSpanResult {
    Ark_Tag tag;
    Ark_RichEditorImageSpanResult value;
} Opt_RichEditorImageSpanResult;
typedef struct Ark_RichEditorTextSpanOptions {
    /* kind: Interface */
    Opt_Number offset;
    Opt_RichEditorTextStyle style;
    Opt_RichEditorParagraphStyle paragraphStyle;
    Opt_RichEditorGesture gesture;
    Opt_RichEditorUrlStyle urlStyle;
} Ark_RichEditorTextSpanOptions;
typedef struct Opt_RichEditorTextSpanOptions {
    Ark_Tag tag;
    Ark_RichEditorTextSpanOptions value;
} Opt_RichEditorTextSpanOptions;
typedef struct Ark_RichEditorTextSpanResult {
    /* kind: Interface */
    Ark_RichEditorSpanPosition spanPosition;
    Ark_String value;
    Ark_RichEditorTextStyleResult textStyle;
    Ark_Tuple_Number_Number offsetInSpan;
    Opt_RichEditorSymbolSpanStyle symbolSpanStyle;
    Opt_Resource valueResource;
    Opt_RichEditorParagraphStyle paragraphStyle;
    Opt_String previewText;
    Opt_RichEditorUrlStyle urlStyle;
} Ark_RichEditorTextSpanResult;
typedef struct Opt_RichEditorTextSpanResult {
    Ark_Tag tag;
    Ark_RichEditorTextSpanResult value;
} Opt_RichEditorTextSpanResult;
typedef struct Ark_SpanStyle {
    /* kind: Interface */
    Ark_Number start;
    Ark_Number length;
    Ark_StyledStringKey styledKey;
    Ark_StyledStringValue styledValue;
} Ark_SpanStyle;
typedef struct Opt_SpanStyle {
    Ark_Tag tag;
    Ark_SpanStyle value;
} Opt_SpanStyle;
typedef struct Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RichEditorImageSpanResult value0;
        Ark_RichEditorTextSpanResult value1;
    };
} Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Opt_Union_RichEditorImageSpanResult_RichEditorTextSpanResult {
    Ark_Tag tag;
    Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult value;
} Opt_Union_RichEditorImageSpanResult_RichEditorTextSpanResult;
typedef struct Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RichEditorTextSpanResult value0;
        Ark_RichEditorImageSpanResult value1;
    };
} Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Opt_Union_RichEditorTextSpanResult_RichEditorImageSpanResult {
    Ark_Tag tag;
    Ark_Union_RichEditorTextSpanResult_RichEditorImageSpanResult value;
} Opt_Union_RichEditorTextSpanResult_RichEditorImageSpanResult;
typedef struct Ark_RichEditorSpan {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_RichEditorImageSpanResult value0;
        Ark_RichEditorTextSpanResult value1;
    };
} Ark_RichEditorSpan;
typedef struct Opt_RichEditorSpan {
    Ark_Tag tag;
    Ark_RichEditorSpan value;
} Opt_RichEditorSpan;
typedef struct Ark_Union_ImageAttachmentInterface_Opt_AttachmentType {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_ImageAttachmentInterface value0;
        Opt_AttachmentType value1;
    };
} Ark_Union_ImageAttachmentInterface_Opt_AttachmentType;
typedef struct Opt_Union_ImageAttachmentInterface_Opt_AttachmentType {
    Ark_Tag tag;
    Ark_Union_ImageAttachmentInterface_Opt_AttachmentType value;
} Opt_Union_ImageAttachmentInterface_Opt_AttachmentType;
typedef struct Ark_AsymmetricTransitionOption {
    /* kind: Interface */
    Ark_TransitionEffect appear;
    Ark_TransitionEffect disappear;
} Ark_AsymmetricTransitionOption;
typedef struct Opt_AsymmetricTransitionOption {
    Ark_Tag tag;
    Ark_AsymmetricTransitionOption value;
} Opt_AsymmetricTransitionOption;
typedef struct Ark_ContentCoverOptions {
    /* kind: Interface */
    Opt_ResourceColor backgroundColor;
    Opt_Callback_Void onAppear;
    Opt_Callback_Void onDisappear;
    Opt_Callback_Void onWillAppear;
    Opt_Callback_Void onWillDisappear;
    Opt_ModalTransition modalTransition;
    Opt_Callback_DismissContentCoverAction_Void onWillDismiss;
    Opt_TransitionEffect transition;
} Ark_ContentCoverOptions;
typedef struct Opt_ContentCoverOptions {
    Ark_Tag tag;
    Ark_ContentCoverOptions value;
} Opt_ContentCoverOptions;
typedef struct Ark_ContextMenuAnimationOptions {
    /* kind: Interface */
    Opt_AnimationNumberRange scale;
    Opt_TransitionEffect transition;
    Opt_AnimationNumberRange hoverScale;
} Ark_ContextMenuAnimationOptions;
typedef struct Opt_ContextMenuAnimationOptions {
    Ark_Tag tag;
    Ark_ContextMenuAnimationOptions value;
} Opt_ContextMenuAnimationOptions;
typedef struct Ark_ContextMenuOptions {
    /* kind: Interface */
    Opt_Position offset;
    Opt_Placement placement;
    Opt_Boolean enableArrow;
    Opt_Length arrowOffset;
    Opt_Union_MenuPreviewMode_CustomBuilder preview;
    Opt_BorderRadiusType previewBorderRadius;
    Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses borderRadius;
    Opt_Callback_Void onAppear;
    Opt_Callback_Void onDisappear;
    Opt_Callback_Void aboutToAppear;
    Opt_Callback_Void aboutToDisappear;
    Opt_Padding layoutRegionMargin;
    Opt_ContextMenuAnimationOptions previewAnimationOptions;
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_TransitionEffect transition;
    Opt_Boolean enableHoverMode;
    Opt_Union_ResourceColor_EdgeColors outlineColor;
    Opt_Union_Dimension_EdgeOutlineWidths outlineWidth;
    Opt_HapticFeedbackMode hapticFeedbackMode;
} Ark_ContextMenuOptions;
typedef struct Opt_ContextMenuOptions {
    Ark_Tag tag;
    Ark_ContextMenuOptions value;
} Opt_ContextMenuOptions;
typedef struct Ark_CustomPopupOptions {
    /* kind: Interface */
    CustomNodeBuilder builder;
    Opt_Placement placement;
    Opt_Union_Color_String_Resource_Number popupColor;
    Opt_Boolean enableArrow;
    Opt_Boolean autoCancel;
    Opt_PopupStateChangeCallback onStateChange;
    Opt_Length arrowOffset;
    Opt_Boolean showInSubWindow;
    Opt_Union_Boolean_PopupMaskType mask;
    Opt_Length targetSpace;
    Opt_Position offset;
    Opt_Dimension width;
    Opt_ArrowPointPosition arrowPointPosition;
    Opt_Dimension arrowWidth;
    Opt_Dimension arrowHeight;
    Opt_Dimension radius;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_Boolean focusable;
    Opt_TransitionEffect transition;
    Opt_Union_Boolean_Callback_DismissPopupAction_Void onWillDismiss;
    Opt_Boolean enableHoverMode;
    Opt_Boolean followTransformOfTarget;
    Opt_KeyboardAvoidMode keyboardAvoidMode;
} Ark_CustomPopupOptions;
typedef struct Opt_CustomPopupOptions {
    Ark_Tag tag;
    Ark_CustomPopupOptions value;
} Opt_CustomPopupOptions;
typedef struct Ark_MenuOptions {
    /* kind: Interface */
    Opt_Position offset;
    Opt_Placement placement;
    Opt_Boolean enableArrow;
    Opt_Length arrowOffset;
    Opt_Union_MenuPreviewMode_CustomBuilder preview;
    Opt_BorderRadiusType previewBorderRadius;
    Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses borderRadius;
    Opt_Callback_Void onAppear;
    Opt_Callback_Void onDisappear;
    Opt_Callback_Void aboutToAppear;
    Opt_Callback_Void aboutToDisappear;
    Opt_Padding layoutRegionMargin;
    Opt_ContextMenuAnimationOptions previewAnimationOptions;
    Opt_ResourceColor backgroundColor;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_BackgroundBlurStyleOptions backgroundBlurStyleOptions;
    Opt_BackgroundEffectOptions backgroundEffect;
    Opt_TransitionEffect transition;
    Opt_Boolean enableHoverMode;
    Opt_Union_ResourceColor_EdgeColors outlineColor;
    Opt_Union_Dimension_EdgeOutlineWidths outlineWidth;
    Opt_HapticFeedbackMode hapticFeedbackMode;
    Opt_ResourceStr title;
    Opt_Boolean showInSubWindow;
} Ark_MenuOptions;
typedef struct Opt_MenuOptions {
    Ark_Tag tag;
    Ark_MenuOptions value;
} Opt_MenuOptions;
typedef struct Ark_PopupCommonOptions {
    /* kind: Interface */
    Opt_Placement placement;
    Opt_ResourceColor popupColor;
    Opt_Boolean enableArrow;
    Opt_Boolean autoCancel;
    Opt_PopupStateChangeCallback onStateChange;
    Opt_Length arrowOffset;
    Opt_Boolean showInSubWindow;
    Opt_Union_Boolean_PopupMaskType mask;
    Opt_Length targetSpace;
    Opt_Position offset;
    Opt_Dimension width;
    Opt_ArrowPointPosition arrowPointPosition;
    Opt_Dimension arrowWidth;
    Opt_Dimension arrowHeight;
    Opt_Dimension radius;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_Boolean focusable;
    Opt_TransitionEffect transition;
    Opt_Union_Boolean_Callback_DismissPopupAction_Void onWillDismiss;
    Opt_Boolean enableHoverMode;
    Opt_Boolean followTransformOfTarget;
} Ark_PopupCommonOptions;
typedef struct Opt_PopupCommonOptions {
    Ark_Tag tag;
    Ark_PopupCommonOptions value;
} Opt_PopupCommonOptions;
typedef struct Ark_PopupOptions {
    /* kind: Interface */
    Ark_String message;
    Opt_Placement placement;
    Opt_PopupButton primaryButton;
    Opt_PopupButton secondaryButton;
    Opt_PopupStateChangeCallback onStateChange;
    Opt_Length arrowOffset;
    Opt_Boolean showInSubWindow;
    Opt_Union_Boolean_PopupMaskType mask;
    Opt_PopupMessageOptions messageOptions;
    Opt_Length targetSpace;
    Opt_Boolean enableArrow;
    Opt_Position offset;
    Opt_Union_Color_String_Resource_Number popupColor;
    Opt_Boolean autoCancel;
    Opt_Dimension width;
    Opt_ArrowPointPosition arrowPointPosition;
    Opt_Dimension arrowWidth;
    Opt_Dimension arrowHeight;
    Opt_Dimension radius;
    Opt_Union_ShadowOptions_ShadowStyle shadow;
    Opt_BlurStyle backgroundBlurStyle;
    Opt_TransitionEffect transition;
    Opt_Union_Boolean_Callback_DismissPopupAction_Void onWillDismiss;
    Opt_Boolean enableHoverMode;
    Opt_Boolean followTransformOfTarget;
    Opt_KeyboardAvoidMode keyboardAvoidMode;
} Ark_PopupOptions;
typedef struct Opt_PopupOptions {
    Ark_Tag tag;
    Ark_PopupOptions value;
} Opt_PopupOptions;
typedef struct Opt_TransitionEffect {
    Ark_Tag tag;
    Ark_TransitionEffect value;
} Opt_TransitionEffect;
typedef struct Ark_Union_PopupOptions_CustomPopupOptions {
    /* kind: UnionType */
    Ark_Int32 selector;
    union {
        Ark_PopupOptions value0;
        Ark_CustomPopupOptions value1;
    };
} Ark_Union_PopupOptions_CustomPopupOptions;
typedef struct Opt_Union_PopupOptions_CustomPopupOptions {
    Ark_Tag tag;
    Ark_Union_PopupOptions_CustomPopupOptions value;
} Opt_Union_PopupOptions_CustomPopupOptions;



typedef struct GENERATED_ArkUIAlphabetIndexerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setAlphabetIndexerOptions)(Ark_NativePointer node,
                                      const Ark_AlphabetIndexerOptions* options);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_ResourceColor* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setPopupColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setPopupBackground)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setPopupSelectedColor)(Ark_NativePointer node,
                                  const Opt_ResourceColor* value);
    void (*setPopupUnselectedColor)(Ark_NativePointer node,
                                    const Opt_ResourceColor* value);
    void (*setPopupItemBackgroundColor)(Ark_NativePointer node,
                                        const Opt_ResourceColor* value);
    void (*setUsingPopup)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setSelectedFont)(Ark_NativePointer node,
                            const Opt_Font* value);
    void (*setPopupFont)(Ark_NativePointer node,
                         const Opt_Font* value);
    void (*setPopupItemFont)(Ark_NativePointer node,
                             const Opt_Font* value);
    void (*setItemSize)(Ark_NativePointer node,
                        const Opt_Union_String_Number* value);
    void (*setFont)(Ark_NativePointer node,
                    const Opt_Font* value);
    void (*setOnSelect)(Ark_NativePointer node,
                        const Opt_OnAlphabetIndexerSelectCallback* value);
    void (*setOnRequestPopupData)(Ark_NativePointer node,
                                  const Opt_OnAlphabetIndexerRequestPopupDataCallback* value);
    void (*setOnPopupSelect)(Ark_NativePointer node,
                             const Opt_OnAlphabetIndexerPopupSelectCallback* value);
    void (*setSelected)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setPopupPosition)(Ark_NativePointer node,
                             const Opt_Position* value);
    void (*setAutoCollapse)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setPopupItemBorderRadius)(Ark_NativePointer node,
                                     const Opt_Number* value);
    void (*setItemBorderRadius)(Ark_NativePointer node,
                                const Opt_Number* value);
    void (*setPopupBackgroundBlurStyle)(Ark_NativePointer node,
                                        const Opt_BlurStyle* value);
    void (*setPopupTitleBackground)(Ark_NativePointer node,
                                    const Opt_ResourceColor* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setAlignStyle)(Ark_NativePointer node,
                          const Opt_IndexerAlign* value,
                          const Opt_Length* offset);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Opt_Number_Void* callback_);
} GENERATED_ArkUIAlphabetIndexerModifier;

typedef struct GENERATED_ArkUIAnimatorModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setAnimatorOptions)(Ark_NativePointer node,
                               const Ark_String* value);
    void (*setState)(Ark_NativePointer node,
                     const Opt_AnimationStatus* value);
    void (*setDuration)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setCurve)(Ark_NativePointer node,
                     const Opt_curves_Curve* value);
    void (*setDelay)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setFillMode)(Ark_NativePointer node,
                        const Opt_FillMode* value);
    void (*setIterations)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setPlayMode)(Ark_NativePointer node,
                        const Opt_PlayMode* value);
    void (*setMotion)(Ark_NativePointer node,
                      const Opt_Union_SpringMotion_FrictionMotion_ScrollMotion* value);
    void (*setOnStart)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnPause)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnRepeat)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnCancel)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnFrame)(Ark_NativePointer node,
                       const Opt_Callback_Number_Void* value);
} GENERATED_ArkUIAnimatorModifier;

typedef struct GENERATED_ArkUIBadgeModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setBadgeOptions0)(Ark_NativePointer node,
                             const Ark_BadgeParamWithNumber* value);
    void (*setBadgeOptions1)(Ark_NativePointer node,
                             const Ark_BadgeParamWithString* value);
} GENERATED_ArkUIBadgeModifier;

typedef struct GENERATED_ArkUIBaseSpanModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextBackgroundStyle)(Ark_NativePointer node,
                                   const Opt_TextBackgroundStyle* value);
    void (*setBaselineOffset)(Ark_NativePointer node,
                              const Opt_LengthMetrics* value);
} GENERATED_ArkUIBaseSpanModifier;

typedef struct GENERATED_ArkUIBlankModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setBlankOptions)(Ark_NativePointer node,
                            const Opt_Union_Number_String* min);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_ResourceColor* value);
} GENERATED_ArkUIBlankModifier;

typedef struct GENERATED_ArkUIButtonModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setButtonOptions0)(Ark_NativePointer node);
    void (*setButtonOptions1)(Ark_NativePointer node,
                              const Ark_ButtonOptions* options);
    void (*setButtonOptions2)(Ark_NativePointer node,
                              const Ark_ResourceStr* label,
                              const Opt_ButtonOptions* options);
    void (*setType)(Ark_NativePointer node,
                    const Opt_ButtonType* value);
    void (*setStateEffect)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setButtonStyle)(Ark_NativePointer node,
                           const Opt_ButtonStyleMode* value);
    void (*setControlSize)(Ark_NativePointer node,
                           const Opt_ControlSize* value);
    void (*setRole)(Ark_NativePointer node,
                    const Opt_ButtonRole* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_Union_String_Resource* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*setLabelStyle)(Ark_NativePointer node,
                          const Opt_ButtonLabelStyle* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
} GENERATED_ArkUIButtonModifier;

typedef struct GENERATED_ArkUICalendarPickerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCalendarPickerOptions)(Ark_NativePointer node,
                                     const Opt_CalendarOptions* options);
    void (*setTextStyle)(Ark_NativePointer node,
                         const Opt_PickerTextStyle* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Date_Void* value);
    void (*setMarkToday)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setEdgeAlign)(Ark_NativePointer node,
                         const Opt_CalendarAlign* alignType,
                         const Opt_Offset* offset);
} GENERATED_ArkUICalendarPickerModifier;

typedef struct GENERATED_ArkUICanvasModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCanvasOptions0)(Ark_NativePointer node,
                              const Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext* context);
    void (*setCanvasOptions1)(Ark_NativePointer node,
                              const Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext* context,
                              const Ark_ImageAIOptions* imageAIOptions);
    void (*setOnReady)(Ark_NativePointer node,
                       const Opt_VoidCallback* value);
    void (*setEnableAnalyzer)(Ark_NativePointer node,
                              const Opt_Boolean* value);
} GENERATED_ArkUICanvasModifier;

typedef struct GENERATED_ArkUICheckboxModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCheckboxOptions)(Ark_NativePointer node,
                               const Opt_CheckboxOptions* options);
    void (*setSelect)(Ark_NativePointer node,
                      const Opt_Boolean* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setShape)(Ark_NativePointer node,
                     const Opt_CheckBoxShape* value);
    void (*setUnselectedColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setMark)(Ark_NativePointer node,
                    const Opt_MarkStyle* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnCheckboxChangeCallback* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*set_onChangeEvent_select)(Ark_NativePointer node,
                                     const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUICheckboxModifier;

typedef struct GENERATED_ArkUICheckboxGroupModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCheckboxGroupOptions)(Ark_NativePointer node,
                                    const Opt_CheckboxGroupOptions* options);
    void (*setSelectAll)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setUnselectedColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setMark)(Ark_NativePointer node,
                    const Opt_MarkStyle* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnCheckboxGroupChangeCallback* value);
    void (*setCheckboxShape)(Ark_NativePointer node,
                             const Opt_CheckBoxShape* value);
    void (*set_onChangeEvent_selectAll)(Ark_NativePointer node,
                                        const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUICheckboxGroupModifier;

typedef struct GENERATED_ArkUICircleModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCircleOptions)(Ark_NativePointer node,
                             const Opt_CircleOptions* value);
} GENERATED_ArkUICircleModifier;

typedef struct GENERATED_ArkUIColumnModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setColumnOptions)(Ark_NativePointer node,
                             const Opt_Union_ColumnOptions_ColumnOptionsV2* options);
    void (*setAlignItems)(Ark_NativePointer node,
                          const Opt_HorizontalAlign* value);
    void (*setJustifyContent)(Ark_NativePointer node,
                              const Opt_FlexAlign* value);
    void (*setPointLight)(Ark_NativePointer node,
                          const Opt_PointLightStyle* value);
    void (*setReverse)(Ark_NativePointer node,
                       const Opt_Boolean* value);
} GENERATED_ArkUIColumnModifier;

typedef struct GENERATED_ArkUIColumnSplitModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setColumnSplitOptions)(Ark_NativePointer node);
    void (*setResizeable)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_ColumnSplitDividerStyle* value);
} GENERATED_ArkUIColumnSplitModifier;

typedef struct GENERATED_ArkUICommonMethodModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setWidth)(Ark_NativePointer node,
                     const Opt_Union_Length_LayoutPolicy* value);
    void (*setHeight)(Ark_NativePointer node,
                      const Opt_Union_Length_LayoutPolicy* value);
    void (*setDrawModifier)(Ark_NativePointer node,
                            const Opt_DrawModifier* value);
    void (*setResponseRegion)(Ark_NativePointer node,
                              const Opt_Union_Array_Rectangle_Rectangle* value);
    void (*setMouseResponseRegion)(Ark_NativePointer node,
                                   const Opt_Union_Array_Rectangle_Rectangle* value);
    void (*setSize)(Ark_NativePointer node,
                    const Opt_SizeOptions* value);
    void (*setConstraintSize)(Ark_NativePointer node,
                              const Opt_ConstraintSizeOptions* value);
    void (*setHitTestBehavior)(Ark_NativePointer node,
                               const Opt_HitTestMode* value);
    void (*setOnChildTouchTest)(Ark_NativePointer node,
                                const Opt_Callback_Array_TouchTestInfo_TouchResult* value);
    void (*setLayoutWeight)(Ark_NativePointer node,
                            const Opt_Union_Number_String* value);
    void (*setChainWeight)(Ark_NativePointer node,
                           const Opt_ChainWeightOptions* value);
    void (*setPadding)(Ark_NativePointer node,
                       const Opt_Union_Padding_Length_LocalizedPadding* value);
    void (*setSafeAreaPadding)(Ark_NativePointer node,
                               const Opt_Union_Padding_LengthMetrics_LocalizedPadding* value);
    void (*setMargin)(Ark_NativePointer node,
                      const Opt_Union_Margin_Length_LocalizedMargin* value);
    void (*setBackgroundColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setPixelRound)(Ark_NativePointer node,
                          const Opt_PixelRoundPolicy* value);
    void (*setBackgroundImageSize)(Ark_NativePointer node,
                                   const Opt_Union_SizeOptions_ImageSize* value);
    void (*setBackgroundImagePosition)(Ark_NativePointer node,
                                       const Opt_Union_Position_Alignment* value);
    void (*setBackgroundEffect0)(Ark_NativePointer node,
                                 const Opt_BackgroundEffectOptions* value);
    void (*setBackgroundImageResizable)(Ark_NativePointer node,
                                        const Opt_ResizableOptions* value);
    void (*setForegroundEffect)(Ark_NativePointer node,
                                const Opt_ForegroundEffectOptions* value);
    void (*setVisualEffect)(Ark_NativePointer node,
                            const Opt_uiEffect_VisualEffect* value);
    void (*setBackgroundFilter)(Ark_NativePointer node,
                                const Opt_uiEffect_Filter* value);
    void (*setForegroundFilter)(Ark_NativePointer node,
                                const Opt_uiEffect_Filter* value);
    void (*setCompositingFilter)(Ark_NativePointer node,
                                 const Opt_uiEffect_Filter* value);
    void (*setOpacity)(Ark_NativePointer node,
                       const Opt_Union_Number_Resource* value);
    void (*setBorder)(Ark_NativePointer node,
                      const Opt_BorderOptions* value);
    void (*setBorderStyle)(Ark_NativePointer node,
                           const Opt_Union_BorderStyle_EdgeStyles* value);
    void (*setBorderWidth)(Ark_NativePointer node,
                           const Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths* value);
    void (*setBorderColor)(Ark_NativePointer node,
                           const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors* value);
    void (*setBorderRadius)(Ark_NativePointer node,
                            const Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses* value);
    void (*setBorderImage)(Ark_NativePointer node,
                           const Opt_BorderImageOption* value);
    void (*setOutline)(Ark_NativePointer node,
                       const Opt_OutlineOptions* value);
    void (*setOutlineStyle)(Ark_NativePointer node,
                            const Opt_Union_OutlineStyle_EdgeOutlineStyles* value);
    void (*setOutlineWidth)(Ark_NativePointer node,
                            const Opt_Union_Dimension_EdgeOutlineWidths* value);
    void (*setOutlineColor)(Ark_NativePointer node,
                            const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors* value);
    void (*setOutlineRadius)(Ark_NativePointer node,
                             const Opt_Union_Dimension_OutlineRadiuses* value);
    void (*setForegroundColor)(Ark_NativePointer node,
                               const Opt_Union_ResourceColor_ColoringStrategy* value);
    void (*setOnClick0)(Ark_NativePointer node,
                        const Opt_Callback_ClickEvent_Void* value);
    void (*setOnHover)(Ark_NativePointer node,
                       const Opt_Callback_Boolean_HoverEvent_Void* value);
    void (*setOnHoverMove)(Ark_NativePointer node,
                           const Opt_Callback_HoverEvent_Void* value);
    void (*setOnAccessibilityHover)(Ark_NativePointer node,
                                    const Opt_AccessibilityCallback* value);
    void (*setHoverEffect)(Ark_NativePointer node,
                           const Opt_HoverEffect* value);
    void (*setOnMouse)(Ark_NativePointer node,
                       const Opt_Callback_MouseEvent_Void* value);
    void (*setOnTouch)(Ark_NativePointer node,
                       const Opt_Callback_TouchEvent_Void* value);
    void (*setOnKeyEvent)(Ark_NativePointer node,
                          const Opt_Callback_KeyEvent_Void* value);
    void (*setOnDigitalCrown)(Ark_NativePointer node,
                              const Opt_Callback_CrownEvent_Void* value);
    void (*setOnKeyPreIme)(Ark_NativePointer node,
                           const Opt_Callback_KeyEvent_Boolean* value);
    void (*setOnKeyEventDispatch)(Ark_NativePointer node,
                                  const Opt_Callback_KeyEvent_Boolean* value);
    void (*setOnFocusAxisEvent)(Ark_NativePointer node,
                                const Opt_Callback_FocusAxisEvent_Void* value);
    void (*setOnAxisEvent)(Ark_NativePointer node,
                           const Opt_Callback_AxisEvent_Void* value);
    void (*setFocusable)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setNextFocus)(Ark_NativePointer node,
                         const Opt_FocusMovement* value);
    void (*setTabStop)(Ark_NativePointer node,
                       const Opt_Boolean* value);
    void (*setOnFocus)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnBlur)(Ark_NativePointer node,
                      const Opt_Callback_Void* value);
    void (*setTabIndex)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setDefaultFocus)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setGroupDefaultFocus)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setFocusOnTouch)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setFocusBox)(Ark_NativePointer node,
                        const Opt_FocusBoxStyle* value);
    void (*setAnimation)(Ark_NativePointer node,
                         const Opt_AnimateParam* value);
    void (*setTransition0)(Ark_NativePointer node,
                           const Opt_TransitionEffect* value);
    void (*setMotionBlur)(Ark_NativePointer node,
                          const Opt_MotionBlurOptions* value);
    void (*setBrightness)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setContrast)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setGrayscale)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setColorBlend)(Ark_NativePointer node,
                          const Opt_Union_Color_String_Resource* value);
    void (*setSaturate)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setSepia)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setInvert)(Ark_NativePointer node,
                      const Opt_Union_Number_InvertOptions* value);
    void (*setHueRotate)(Ark_NativePointer node,
                         const Opt_Union_Number_String* value);
    void (*setUseShadowBatching)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setUseEffect0)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setRenderGroup)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setFreeze)(Ark_NativePointer node,
                      const Opt_Boolean* value);
    void (*setTranslate)(Ark_NativePointer node,
                         const Opt_TranslateOptions* value);
    void (*setScale)(Ark_NativePointer node,
                     const Opt_ScaleOptions* value);
    void (*setRotate)(Ark_NativePointer node,
                      const Opt_RotateOptions* value);
    void (*setTransform)(Ark_NativePointer node,
                         const Opt_Object* value);
    void (*setOnAppear)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnDisAppear)(Ark_NativePointer node,
                           const Opt_Callback_Void* value);
    void (*setOnAttach)(Ark_NativePointer node,
                        const Opt_VoidCallback* value);
    void (*setOnDetach)(Ark_NativePointer node,
                        const Opt_VoidCallback* value);
    void (*setOnAreaChange)(Ark_NativePointer node,
                            const Opt_Callback_Area_Area_Void* value);
    void (*setVisibility)(Ark_NativePointer node,
                          const Opt_Visibility* value);
    void (*setFlexGrow)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setFlexShrink)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setFlexBasis)(Ark_NativePointer node,
                         const Opt_Union_Number_String* value);
    void (*setAlignSelf)(Ark_NativePointer node,
                         const Opt_ItemAlign* value);
    void (*setDisplayPriority)(Ark_NativePointer node,
                               const Opt_Number* value);
    void (*setZIndex)(Ark_NativePointer node,
                      const Opt_Number* value);
    void (*setDirection)(Ark_NativePointer node,
                         const Opt_Direction* value);
    void (*setAlign)(Ark_NativePointer node,
                     const Opt_Alignment* value);
    void (*setPosition)(Ark_NativePointer node,
                        const Opt_Union_Position_Edges_LocalizedEdges* value);
    void (*setMarkAnchor)(Ark_NativePointer node,
                          const Opt_Union_Position_LocalizedPosition* value);
    void (*setOffset)(Ark_NativePointer node,
                      const Opt_Union_Position_Edges_LocalizedEdges* value);
    void (*setEnabled)(Ark_NativePointer node,
                       const Opt_Boolean* value);
    void (*setAlignRules0)(Ark_NativePointer node,
                           const Opt_AlignRuleOption* value);
    void (*setAlignRules1)(Ark_NativePointer node,
                           const Opt_LocalizedAlignRuleOptions* value);
    void (*setAspectRatio)(Ark_NativePointer node,
                           const Opt_Number* value);
    void (*setClickEffect)(Ark_NativePointer node,
                           const Opt_ClickEffect* value);
    void (*setOnDragStart)(Ark_NativePointer node,
                           const Opt_Type_CommonMethod_onDragStart* value);
    void (*setOnDragEnter)(Ark_NativePointer node,
                           const Opt_Callback_DragEvent_Opt_String_Void* value);
    void (*setOnDragMove)(Ark_NativePointer node,
                          const Opt_Callback_DragEvent_Opt_String_Void* value);
    void (*setOnDragLeave)(Ark_NativePointer node,
                           const Opt_Callback_DragEvent_Opt_String_Void* value);
    void (*setOnDrop0)(Ark_NativePointer node,
                       const Opt_Callback_DragEvent_Opt_String_Void* value);
    void (*setOnDragEnd)(Ark_NativePointer node,
                         const Opt_Callback_DragEvent_Opt_String_Void* value);
    void (*setAllowDrop)(Ark_NativePointer node,
                         const Opt_Array_uniformTypeDescriptor_UniformDataType* value);
    void (*setDraggable)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setDragPreview0)(Ark_NativePointer node,
                            const Opt_Union_CustomBuilder_DragItemInfo_String* value);
    void (*setOnPreDrag)(Ark_NativePointer node,
                         const Opt_Callback_PreDragStatus_Void* value);
    void (*setLinearGradient)(Ark_NativePointer node,
                              const Opt_LinearGradientOptions* value);
    void (*setSweepGradient)(Ark_NativePointer node,
                             const Opt_SweepGradientOptions* value);
    void (*setRadialGradient)(Ark_NativePointer node,
                              const Opt_RadialGradientOptions* value);
    void (*setMotionPath)(Ark_NativePointer node,
                          const Opt_MotionPathOptions* value);
    void (*setShadow)(Ark_NativePointer node,
                      const Opt_Union_ShadowOptions_ShadowStyle* value);
    void (*setClip)(Ark_NativePointer node,
                    const Opt_Boolean* value);
    void (*setClipShape)(Ark_NativePointer node,
                         const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape* value);
    void (*setMask)(Ark_NativePointer node,
                    const Opt_ProgressMask* value);
    void (*setMaskShape)(Ark_NativePointer node,
                         const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape* value);
    void (*setKey)(Ark_NativePointer node,
                   const Opt_String* value);
    void (*setId)(Ark_NativePointer node,
                  const Opt_String* value);
    void (*setGeometryTransition0)(Ark_NativePointer node,
                                   const Opt_String* value);
    void (*setStateStyles)(Ark_NativePointer node,
                           const Opt_StateStyles* value);
    void (*setRestoreId)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setSphericalEffect)(Ark_NativePointer node,
                               const Opt_Number* value);
    void (*setLightUpEffect)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*setPixelStretchEffect)(Ark_NativePointer node,
                                  const Opt_PixelStretchEffectOptions* value);
    void (*setAccessibilityGroup0)(Ark_NativePointer node,
                                   const Opt_Boolean* value);
    void (*setAccessibilityText0)(Ark_NativePointer node,
                                  const Opt_String* value);
    void (*setAccessibilityNextFocusId)(Ark_NativePointer node,
                                        const Opt_String* value);
    void (*setAccessibilityDefaultFocus)(Ark_NativePointer node,
                                         const Opt_Boolean* value);
    void (*setAccessibilityUseSamePage)(Ark_NativePointer node,
                                        const Opt_AccessibilitySamePageMode* value);
    void (*setAccessibilityScrollTriggerable)(Ark_NativePointer node,
                                              const Opt_Boolean* value);
    void (*setAccessibilityText1)(Ark_NativePointer node,
                                  const Opt_Resource* value);
    void (*setAccessibilityRole)(Ark_NativePointer node,
                                 const Opt_AccessibilityRoleType* value);
    void (*setOnAccessibilityFocus)(Ark_NativePointer node,
                                    const Opt_AccessibilityFocusCallback* value);
    void (*setAccessibilityTextHint)(Ark_NativePointer node,
                                     const Opt_String* value);
    void (*setAccessibilityDescription0)(Ark_NativePointer node,
                                         const Opt_String* value);
    void (*setAccessibilityDescription1)(Ark_NativePointer node,
                                         const Opt_Resource* value);
    void (*setAccessibilityLevel)(Ark_NativePointer node,
                                  const Opt_String* value);
    void (*setAccessibilityVirtualNode)(Ark_NativePointer node,
                                        const Opt_CustomNodeBuilder* value);
    void (*setAccessibilityChecked)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setAccessibilitySelected)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setObscured)(Ark_NativePointer node,
                        const Opt_Array_ObscuredReasons* value);
    void (*setReuseId)(Ark_NativePointer node,
                       const Opt_String* value);
    void (*setReuse)(Ark_NativePointer node,
                     const Opt_ReuseOptions* value);
    void (*setRenderFit)(Ark_NativePointer node,
                         const Opt_RenderFit* value);
    void (*setGestureModifier)(Ark_NativePointer node,
                               const Opt_GestureModifier* value);
    void (*setBackgroundBrightness)(Ark_NativePointer node,
                                    const Opt_BackgroundBrightnessOptions* value);
    void (*setOnGestureJudgeBegin)(Ark_NativePointer node,
                                   const Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult* value);
    void (*setOnGestureRecognizerJudgeBegin0)(Ark_NativePointer node,
                                              const Opt_GestureRecognizerJudgeBeginCallback* value);
    void (*setShouldBuiltInRecognizerParallelWith)(Ark_NativePointer node,
                                                   const Opt_ShouldBuiltInRecognizerParallelWithCallback* value);
    void (*setMonopolizeEvents)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setOnTouchIntercept)(Ark_NativePointer node,
                                const Opt_Callback_TouchEvent_HitTestMode* value);
    void (*setOnSizeChange)(Ark_NativePointer node,
                            const Opt_SizeChangeCallback* value);
    void (*setAccessibilityFocusDrawLevel)(Ark_NativePointer node,
                                           const Opt_FocusDrawLevel* value);
    void (*setCustomProperty)(Ark_NativePointer node,
                              const Opt_String* name,
                              const Opt_Object* value);
    void (*setExpandSafeArea)(Ark_NativePointer node,
                              const Opt_Array_SafeAreaType* types,
                              const Opt_Array_SafeAreaEdge* edges);
    void (*setBackground)(Ark_NativePointer node,
                          const Opt_CustomNodeBuilder* builder,
                          const Opt_BackgroundOptions* options);
    void (*setBackgroundImage0)(Ark_NativePointer node,
                                const Opt_Union_ResourceStr_PixelMap* src,
                                const Opt_ImageRepeat* repeat);
    void (*setBackgroundImage1)(Ark_NativePointer node,
                                const Opt_Union_ResourceStr_PixelMap* src,
                                const Opt_BackgroundImageOptions* options);
    void (*setBackgroundBlurStyle)(Ark_NativePointer node,
                                   const Opt_BlurStyle* style,
                                   const Opt_BackgroundBlurStyleOptions* options,
                                   const Opt_SystemAdaptiveOptions* sysOptions);
    void (*setBackgroundEffect1)(Ark_NativePointer node,
                                 const Opt_BackgroundEffectOptions* options,
                                 const Opt_SystemAdaptiveOptions* sysOptions);
    void (*setForegroundBlurStyle)(Ark_NativePointer node,
                                   const Opt_BlurStyle* style,
                                   const Opt_ForegroundBlurStyleOptions* options,
                                   const Opt_SystemAdaptiveOptions* sysOptions);
    void (*setOnClick1)(Ark_NativePointer node,
                        const Opt_Callback_ClickEvent_Void* event,
                        const Opt_Number* distanceThreshold);
    void (*setFocusScopeId)(Ark_NativePointer node,
                            const Opt_String* id,
                            const Opt_Boolean* isGroup,
                            const Opt_Boolean* arrowStepOut);
    void (*setFocusScopePriority)(Ark_NativePointer node,
                                  const Opt_String* scopeId,
                                  const Opt_FocusPriority* priority);
    void (*setTransition1)(Ark_NativePointer node,
                           const Opt_TransitionEffect* effect,
                           const Opt_TransitionFinishCallback* onFinish);
    void (*setGesture)(Ark_NativePointer node,
                       const Opt_GestureType* gesture,
                       const Opt_GestureMask* mask);
    void (*setPriorityGesture)(Ark_NativePointer node,
                               const Opt_GestureType* gesture,
                               const Opt_GestureMask* mask);
    void (*setParallelGesture)(Ark_NativePointer node,
                               const Opt_GestureType* gesture,
                               const Opt_GestureMask* mask);
    void (*setBlur)(Ark_NativePointer node,
                    const Opt_Number* blurRadius,
                    const Opt_BlurOptions* options,
                    const Opt_SystemAdaptiveOptions* sysOptions);
    void (*setLinearGradientBlur)(Ark_NativePointer node,
                                  const Opt_Number* value,
                                  const Opt_LinearGradientBlurOptions* options);
    void (*setSystemBarEffect)(Ark_NativePointer node);
    void (*setUseEffect1)(Ark_NativePointer node,
                          const Opt_Boolean* useEffect,
                          const Opt_EffectType* effectType);
    void (*setBackdropBlur)(Ark_NativePointer node,
                            const Opt_Number* radius,
                            const Opt_BlurOptions* options,
                            const Opt_SystemAdaptiveOptions* sysOptions);
    void (*setSharedTransition)(Ark_NativePointer node,
                                const Opt_String* id,
                                const Opt_sharedTransitionOptions* options);
    void (*setChainMode)(Ark_NativePointer node,
                         const Opt_Axis* direction,
                         const Opt_ChainStyle* style);
    void (*setOnDrop1)(Ark_NativePointer node,
                       const Opt_OnDragEventCallback* eventCallback,
                       const Opt_DropOptions* dropOptions);
    void (*setDragPreview1)(Ark_NativePointer node,
                            const Opt_Union_CustomBuilder_DragItemInfo_String* preview,
                            const Opt_PreviewConfiguration* config);
    void (*setDragPreviewOptions)(Ark_NativePointer node,
                                  const Opt_DragPreviewOptions* value,
                                  const Opt_DragInteractionOptions* options);
    void (*setOverlay)(Ark_NativePointer node,
                       const Opt_Union_String_CustomBuilder_ComponentContent* value,
                       const Opt_OverlayOptions* options);
    void (*setBlendMode)(Ark_NativePointer node,
                         const Opt_BlendMode* value,
                         const Opt_BlendApplyType* type);
    void (*setAdvancedBlendMode)(Ark_NativePointer node,
                                 const Opt_Union_BlendMode_Blender* effect,
                                 const Opt_BlendApplyType* type);
    void (*setGeometryTransition1)(Ark_NativePointer node,
                                   const Opt_String* id,
                                   const Opt_GeometryTransitionOptions* options);
    void (*setBindTips)(Ark_NativePointer node,
                        const Opt_TipsMessageType* message,
                        const Opt_TipsOptions* options);
    void (*setBindPopup)(Ark_NativePointer node,
                         const Opt_Boolean* show,
                         const Opt_Union_PopupOptions_CustomPopupOptions* popup);
    void (*setBindMenu0)(Ark_NativePointer node,
                         const Opt_Union_Array_MenuElement_CustomBuilder* content,
                         const Opt_MenuOptions* options);
    void (*setBindMenu1)(Ark_NativePointer node,
                         const Opt_Boolean* isShow,
                         const Opt_Union_Array_MenuElement_CustomBuilder* content,
                         const Opt_MenuOptions* options);
    void (*setBindContextMenu0)(Ark_NativePointer node,
                                const Opt_CustomNodeBuilder* content,
                                const Opt_ResponseType* responseType,
                                const Opt_ContextMenuOptions* options);
    void (*setBindContextMenu1)(Ark_NativePointer node,
                                const Opt_Boolean* isShown,
                                const Opt_CustomNodeBuilder* content,
                                const Opt_ContextMenuOptions* options);
    void (*setBindContentCover0)(Ark_NativePointer node,
                                 const Opt_Boolean* isShow,
                                 const Opt_CustomNodeBuilder* builder,
                                 const Opt_ModalTransition* type);
    void (*setBindContentCover1)(Ark_NativePointer node,
                                 const Opt_Boolean* isShow,
                                 const Opt_CustomNodeBuilder* builder,
                                 const Opt_ContentCoverOptions* options);
    void (*setBindSheet)(Ark_NativePointer node,
                         const Opt_Boolean* isShow,
                         const Opt_CustomNodeBuilder* builder,
                         const Opt_SheetOptions* options);
    void (*setOnVisibleAreaChange)(Ark_NativePointer node,
                                   const Opt_Array_Number* ratios,
                                   const Opt_VisibleAreaChangeCallback* event);
    void (*setOnVisibleAreaApproximateChange)(Ark_NativePointer node,
                                              const Opt_VisibleAreaEventOptions* options,
                                              const Opt_VisibleAreaChangeCallback* event);
    void (*setKeyboardShortcut)(Ark_NativePointer node,
                                const Opt_Union_String_FunctionKey* value,
                                const Opt_Array_ModifierKey* keys,
                                const Opt_Callback_Void* action);
    void (*setAccessibilityGroup1)(Ark_NativePointer node,
                                   const Opt_Boolean* isGroup,
                                   const Opt_AccessibilityOptions* accessibilityOptions);
    void (*setOnGestureRecognizerJudgeBegin1)(Ark_NativePointer node,
                                              const Opt_GestureRecognizerJudgeBeginCallback* callback_,
                                              const Opt_Boolean* exposeInnerGesture);
} GENERATED_ArkUICommonMethodModifier;

typedef struct GENERATED_ArkUICommonShapeMethodModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setStroke)(Ark_NativePointer node,
                      const Opt_ResourceColor* value);
    void (*setFill)(Ark_NativePointer node,
                    const Opt_ResourceColor* value);
    void (*setStrokeDashOffset)(Ark_NativePointer node,
                                const Opt_Union_Number_String* value);
    void (*setStrokeLineCap)(Ark_NativePointer node,
                             const Opt_LineCapStyle* value);
    void (*setStrokeLineJoin)(Ark_NativePointer node,
                              const Opt_LineJoinStyle* value);
    void (*setStrokeMiterLimit)(Ark_NativePointer node,
                                const Opt_Union_Number_String* value);
    void (*setStrokeOpacity)(Ark_NativePointer node,
                             const Opt_Union_Number_String_Resource* value);
    void (*setFillOpacity)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setStrokeWidth)(Ark_NativePointer node,
                           const Opt_Length* value);
    void (*setAntiAlias)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setStrokeDashArray)(Ark_NativePointer node,
                               const Opt_Array_Length* value);
} GENERATED_ArkUICommonShapeMethodModifier;

typedef struct GENERATED_ArkUIComponentRootModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
} GENERATED_ArkUIComponentRootModifier;

typedef struct GENERATED_ArkUIContainerSpanModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setContainerSpanOptions)(Ark_NativePointer node);
    void (*setTextBackgroundStyle)(Ark_NativePointer node,
                                   const Opt_TextBackgroundStyle* value);
} GENERATED_ArkUIContainerSpanModifier;

typedef struct GENERATED_ArkUICounterModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setCounterOptions)(Ark_NativePointer node);
    void (*setOnInc)(Ark_NativePointer node,
                     const Opt_VoidCallback* value);
    void (*setOnDec)(Ark_NativePointer node,
                     const Opt_VoidCallback* value);
    void (*setEnableDec)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setEnableInc)(Ark_NativePointer node,
                         const Opt_Boolean* value);
} GENERATED_ArkUICounterModifier;

typedef struct GENERATED_ArkUICustomLayoutRootModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSubscribeOnMeasureSize)(Ark_NativePointer node,
                                      const Callback_onMeasureSize_SizeResult* value);
    void (*setSubscribeOnPlaceChildren)(Ark_NativePointer node,
                                        const Callback_onPlaceChildren_Void* value);
} GENERATED_ArkUICustomLayoutRootModifier;

typedef struct GENERATED_ArkUIDataPanelModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setDataPanelOptions)(Ark_NativePointer node,
                                const Ark_DataPanelOptions* options);
    void (*setCloseEffect)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setValueColors)(Ark_NativePointer node,
                           const Opt_Array_Union_ResourceColor_LinearGradient* value);
    void (*setTrackBackgroundColor)(Ark_NativePointer node,
                                    const Opt_ResourceColor* value);
    void (*setStrokeWidth)(Ark_NativePointer node,
                           const Opt_Length* value);
    void (*setTrackShadow)(Ark_NativePointer node,
                           const Opt_DataPanelShadowOptions* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
} GENERATED_ArkUIDataPanelModifier;

typedef struct GENERATED_ArkUIDatePickerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setDatePickerOptions)(Ark_NativePointer node,
                                 const Opt_DatePickerOptions* options);
    void (*setLunar)(Ark_NativePointer node,
                     const Opt_Boolean* value);
    void (*setDisappearTextStyle)(Ark_NativePointer node,
                                  const Opt_PickerTextStyle* value);
    void (*setTextStyle)(Ark_NativePointer node,
                         const Opt_PickerTextStyle* value);
    void (*setSelectedTextStyle)(Ark_NativePointer node,
                                 const Opt_PickerTextStyle* value);
    void (*setOnDateChange)(Ark_NativePointer node,
                            const Opt_Callback_Date_Void* value);
    void (*setDigitalCrownSensitivity)(Ark_NativePointer node,
                                       const Opt_CrownSensitivity* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Date_Void* callback_);
} GENERATED_ArkUIDatePickerModifier;

typedef struct GENERATED_ArkUIDividerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setDividerOptions)(Ark_NativePointer node);
    void (*setVertical)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_ResourceColor* value);
    void (*setStrokeWidth)(Ark_NativePointer node,
                           const Opt_Union_Number_String* value);
    void (*setLineCap)(Ark_NativePointer node,
                       const Opt_LineCapStyle* value);
} GENERATED_ArkUIDividerModifier;

typedef struct GENERATED_ArkUIEffectComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setEffectComponentOptions)(Ark_NativePointer node);
} GENERATED_ArkUIEffectComponentModifier;

typedef struct GENERATED_ArkUIEllipseModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setEllipseOptions)(Ark_NativePointer node,
                              const Opt_EllipseOptions* options);
} GENERATED_ArkUIEllipseModifier;

typedef struct GENERATED_ArkUIEmbeddedComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setEmbeddedComponentOptions)(Ark_NativePointer node,
                                        const Ark_Want* loader,
                                        Ark_EmbeddedType type);
    void (*setOnTerminated)(Ark_NativePointer node,
                            const Opt_Callback_TerminationInfo_Void* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_ErrorCallback* value);
} GENERATED_ArkUIEmbeddedComponentModifier;

typedef struct GENERATED_ArkUIFlexModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setFlexOptions)(Ark_NativePointer node,
                           const Opt_FlexOptions* value);
    void (*setPointLight)(Ark_NativePointer node,
                          const Opt_PointLightStyle* value);
} GENERATED_ArkUIFlexModifier;

typedef struct GENERATED_ArkUIFlowItemModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setFlowItemOptions)(Ark_NativePointer node);
} GENERATED_ArkUIFlowItemModifier;

typedef struct GENERATED_ArkUIFolderStackModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setFolderStackOptions)(Ark_NativePointer node,
                                  const Opt_FolderStackOptions* options);
    void (*setAlignContent)(Ark_NativePointer node,
                            const Opt_Alignment* value);
    void (*setOnFolderStateChange)(Ark_NativePointer node,
                                   const Opt_OnFoldStatusChangeCallback* value);
    void (*setOnHoverStatusChange)(Ark_NativePointer node,
                                   const Opt_OnHoverStatusChangeCallback* value);
    void (*setEnableAnimation)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setAutoHalfFold)(Ark_NativePointer node,
                            const Opt_Boolean* value);
} GENERATED_ArkUIFolderStackModifier;

typedef struct GENERATED_ArkUIFormComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setFormComponentOptions)(Ark_NativePointer node,
                                    const Ark_FormInfo* value);
    void (*setSize)(Ark_NativePointer node,
                    const Opt_FormSize* value);
    void (*setModuleName)(Ark_NativePointer node,
                          const Opt_String* value);
    void (*setDimension)(Ark_NativePointer node,
                         const Opt_FormDimension* value);
    void (*setAllowUpdate)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setVisibility)(Ark_NativePointer node,
                          const Opt_Visibility* value);
    void (*setOnAcquired)(Ark_NativePointer node,
                          const Opt_Callback_FormCallbackInfo_Void* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_Callback_ErrorInformation_Void* value);
    void (*setOnRouter)(Ark_NativePointer node,
                        const Opt_Callback_Object_Void* value);
    void (*setOnUninstall)(Ark_NativePointer node,
                           const Opt_Callback_FormCallbackInfo_Void* value);
    void (*setOnLoad)(Ark_NativePointer node,
                      const Opt_VoidCallback* value);
    void (*setOnUpdate)(Ark_NativePointer node,
                        const Opt_Callback_FormCallbackInfo_Void* value);
} GENERATED_ArkUIFormComponentModifier;

typedef struct GENERATED_ArkUIFormLinkModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setFormLinkOptions)(Ark_NativePointer node,
                               const Ark_FormLinkOptions* options);
} GENERATED_ArkUIFormLinkModifier;

typedef struct GENERATED_ArkUIGaugeModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setGaugeOptions)(Ark_NativePointer node,
                            const Ark_GaugeOptions* options);
    void (*setValue)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setStartAngle)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setEndAngle)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setColors)(Ark_NativePointer node,
                      const Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number* value);
    void (*setStrokeWidth)(Ark_NativePointer node,
                           const Opt_Length* value);
    void (*setDescription)(Ark_NativePointer node,
                           const Opt_CustomNodeBuilder* value);
    void (*setTrackShadow)(Ark_NativePointer node,
                           const Opt_GaugeShadowOptions* value);
    void (*setIndicator)(Ark_NativePointer node,
                         const Opt_GaugeIndicatorOptions* value);
    void (*setPrivacySensitive)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
} GENERATED_ArkUIGaugeModifier;

typedef struct GENERATED_ArkUIGridModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setGridOptions)(Ark_NativePointer node,
                           const Opt_Scroller* scroller,
                           const Opt_GridLayoutOptions* layoutOptions);
    void (*setColumnsTemplate)(Ark_NativePointer node,
                               const Opt_String* value);
    void (*setRowsTemplate)(Ark_NativePointer node,
                            const Opt_String* value);
    void (*setColumnsGap)(Ark_NativePointer node,
                          const Opt_Length* value);
    void (*setRowsGap)(Ark_NativePointer node,
                       const Opt_Length* value);
    void (*setOnScrollBarUpdate)(Ark_NativePointer node,
                                 const Opt_Callback_Number_Number_ComputedBarAttribute* value);
    void (*setOnScrollIndex)(Ark_NativePointer node,
                             const Opt_Callback_Number_Number_Void* value);
    void (*setCachedCount0)(Ark_NativePointer node,
                            const Opt_Number* value);
    void (*setEditMode)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setMultiSelectable)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setMaxCount)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setMinCount)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setCellLength)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setLayoutDirection)(Ark_NativePointer node,
                               const Opt_GridDirection* value);
    void (*setSupportAnimation)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setOnItemDragStart)(Ark_NativePointer node,
                               const Opt_OnItemDragStartCallback* value);
    void (*setOnItemDragEnter)(Ark_NativePointer node,
                               const Opt_Callback_ItemDragInfo_Void* value);
    void (*setOnItemDragMove)(Ark_NativePointer node,
                              const Opt_Callback_ItemDragInfo_Number_Number_Void* value);
    void (*setOnItemDragLeave)(Ark_NativePointer node,
                               const Opt_Callback_ItemDragInfo_Number_Void* value);
    void (*setOnItemDrop)(Ark_NativePointer node,
                          const Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void* value);
    void (*setAlignItems)(Ark_NativePointer node,
                          const Opt_GridItemAlignment* value);
    void (*setOnScrollFrameBegin)(Ark_NativePointer node,
                                  const Opt_OnScrollFrameBeginCallback* value);
    void (*setOnWillScroll)(Ark_NativePointer node,
                            const Opt_OnWillScrollCallback* value);
    void (*setOnDidScroll)(Ark_NativePointer node,
                           const Opt_OnScrollCallback* value);
    void (*setCachedCount1)(Ark_NativePointer node,
                            const Opt_Number* count,
                            const Opt_Boolean* show);
} GENERATED_ArkUIGridModifier;

typedef struct GENERATED_ArkUIGridColModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setGridColOptions)(Ark_NativePointer node,
                              const Opt_GridColOptions* option);
    void (*setSpan)(Ark_NativePointer node,
                    const Opt_Union_Number_GridColColumnOption* value);
    void (*setGridColOffset)(Ark_NativePointer node,
                             const Opt_Union_Number_GridColColumnOption* value);
    void (*setOrder)(Ark_NativePointer node,
                     const Opt_Union_Number_GridColColumnOption* value);
} GENERATED_ArkUIGridColModifier;

typedef struct GENERATED_ArkUIGridItemModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setGridItemOptions)(Ark_NativePointer node,
                               const Opt_GridItemOptions* value);
    void (*setRowStart)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setRowEnd)(Ark_NativePointer node,
                      const Opt_Number* value);
    void (*setColumnStart)(Ark_NativePointer node,
                           const Opt_Number* value);
    void (*setColumnEnd)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setSelectable)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setSelected)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setOnSelect)(Ark_NativePointer node,
                        const Opt_Callback_Boolean_Void* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUIGridItemModifier;

typedef struct GENERATED_ArkUIGridRowModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setGridRowOptions)(Ark_NativePointer node,
                              const Opt_GridRowOptions* option);
    void (*setOnBreakpointChange)(Ark_NativePointer node,
                                  const Opt_Callback_String_Void* value);
    void (*setAlignItems)(Ark_NativePointer node,
                          const Opt_ItemAlign* value);
} GENERATED_ArkUIGridRowModifier;

typedef struct GENERATED_ArkUIHyperlinkModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setHyperlinkOptions)(Ark_NativePointer node,
                                const Ark_Union_String_Resource* address,
                                const Opt_Union_String_Resource* content);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_Union_Color_Number_String_Resource* value);
} GENERATED_ArkUIHyperlinkModifier;

typedef struct GENERATED_ArkUIImageModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setImageOptions0)(Ark_NativePointer node,
                             const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent* src);
    void (*setImageOptions1)(Ark_NativePointer node,
                             const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor* src,
                             const Ark_ImageAIOptions* imageAIOptions);
    void (*setAlt)(Ark_NativePointer node,
                   const Opt_Union_String_Resource_PixelMap* value);
    void (*setMatchTextDirection)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
    void (*setFitOriginalSize)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setFillColor)(Ark_NativePointer node,
                         const Opt_Union_ResourceColor_ColorContent_ColorMetrics* value);
    void (*setObjectFit)(Ark_NativePointer node,
                         const Opt_ImageFit* value);
    void (*setImageMatrix)(Ark_NativePointer node,
                           const Opt_matrix4_Matrix4Transit* value);
    void (*setObjectRepeat)(Ark_NativePointer node,
                            const Opt_ImageRepeat* value);
    void (*setAutoResize)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setRenderMode)(Ark_NativePointer node,
                          const Opt_ImageRenderMode* value);
    void (*setDynamicRangeMode)(Ark_NativePointer node,
                                const Opt_DynamicRangeMode* value);
    void (*setInterpolation)(Ark_NativePointer node,
                             const Opt_ImageInterpolation* value);
    void (*setSourceSize)(Ark_NativePointer node,
                          const Opt_ImageSourceSize* value);
    void (*setSyncLoad)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setColorFilter)(Ark_NativePointer node,
                           const Opt_Union_ColorFilter_DrawingColorFilter* value);
    void (*setCopyOption)(Ark_NativePointer node,
                          const Opt_CopyOptions* value);
    void (*setDraggable)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setPointLight)(Ark_NativePointer node,
                          const Opt_PointLightStyle* value);
    void (*setEdgeAntialiasing)(Ark_NativePointer node,
                                const Opt_Number* value);
    void (*setOnComplete)(Ark_NativePointer node,
                          const Opt_ImageOnCompleteCallback* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_ImageErrorCallback* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setEnableAnalyzer)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setAnalyzerConfig)(Ark_NativePointer node,
                              const Opt_ImageAnalyzerConfig* value);
    void (*setResizable)(Ark_NativePointer node,
                         const Opt_ResizableOptions* value);
    void (*setPrivacySensitive)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setEnhancedImageQuality)(Ark_NativePointer node,
                                    const Opt_image_ResolutionQuality* value);
    void (*setOrientation)(Ark_NativePointer node,
                           const Opt_ImageRotateOrientation* value);
} GENERATED_ArkUIImageModifier;

typedef struct GENERATED_ArkUIImageAnimatorModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setImageAnimatorOptions)(Ark_NativePointer node);
    void (*setImages)(Ark_NativePointer node,
                      const Opt_Array_ImageFrameInfo* value);
    void (*setState)(Ark_NativePointer node,
                     const Opt_AnimationStatus* value);
    void (*setDuration)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setReverse)(Ark_NativePointer node,
                       const Opt_Boolean* value);
    void (*setFixedSize)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setFillMode)(Ark_NativePointer node,
                        const Opt_FillMode* value);
    void (*setIterations)(Ark_NativePointer node,
                          const Opt_Number* value);
    void (*setMonitorInvisibleArea)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setOnStart)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnPause)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnRepeat)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnCancel)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
} GENERATED_ArkUIImageAnimatorModifier;

typedef struct GENERATED_ArkUIImageSpanModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setImageSpanOptions)(Ark_NativePointer node,
                                const Ark_Union_ResourceStr_PixelMap* value);
    void (*setVerticalAlign)(Ark_NativePointer node,
                             const Opt_ImageSpanAlignment* value);
    void (*setColorFilter)(Ark_NativePointer node,
                           const Opt_Union_ColorFilter_DrawingColorFilter* value);
    void (*setObjectFit)(Ark_NativePointer node,
                         const Opt_ImageFit* value);
    void (*setOnComplete)(Ark_NativePointer node,
                          const Opt_ImageCompleteCallback* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_ImageErrorCallback* value);
    void (*setAlt)(Ark_NativePointer node,
                   const Opt_image_PixelMap* value);
} GENERATED_ArkUIImageSpanModifier;

typedef struct GENERATED_ArkUIIndicatorComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setIndicatorComponentOptions)(Ark_NativePointer node,
                                         const Opt_IndicatorComponentController* controller);
    void (*setInitialIndex)(Ark_NativePointer node,
                            const Opt_Number* value);
    void (*setCount)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setStyle)(Ark_NativePointer node,
                     const Opt_Union_DotIndicator_DigitIndicator* value);
    void (*setLoop)(Ark_NativePointer node,
                    const Opt_Boolean* value);
    void (*setVertical)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Number_Void* value);
} GENERATED_ArkUIIndicatorComponentModifier;

typedef struct GENERATED_ArkUILineModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setLineOptions)(Ark_NativePointer node,
                           const Opt_LineOptions* options);
    void (*setStartPoint)(Ark_NativePointer node,
                          const Opt_ShapePoint* value);
    void (*setEndPoint)(Ark_NativePointer node,
                        const Opt_ShapePoint* value);
} GENERATED_ArkUILineModifier;

typedef struct GENERATED_ArkUILinearIndicatorModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setLinearIndicatorOptions)(Ark_NativePointer node,
                                      const Opt_Number* count,
                                      const Opt_LinearIndicatorController* controller);
    void (*setIndicatorStyle)(Ark_NativePointer node,
                              const Opt_LinearIndicatorStyle* value);
    void (*setIndicatorLoop)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnLinearIndicatorChangeCallback* value);
} GENERATED_ArkUILinearIndicatorModifier;

typedef struct GENERATED_ArkUIListModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setListOptions)(Ark_NativePointer node,
                           const Opt_ListOptions* options);
    void (*setAlignListItem)(Ark_NativePointer node,
                             const Opt_ListItemAlign* value);
    void (*setListDirection)(Ark_NativePointer node,
                             const Opt_Axis* value);
    void (*setContentStartOffset)(Ark_NativePointer node,
                                  const Opt_Number* value);
    void (*setContentEndOffset)(Ark_NativePointer node,
                                const Opt_Number* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_ListDividerOptions* value);
    void (*setMultiSelectable)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setCachedCount0)(Ark_NativePointer node,
                            const Opt_Number* value);
    void (*setChainAnimation)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setChainAnimationOptions)(Ark_NativePointer node,
                                     const Opt_ChainAnimationOptions* value);
    void (*setSticky)(Ark_NativePointer node,
                      const Opt_StickyStyle* value);
    void (*setScrollSnapAlign)(Ark_NativePointer node,
                               const Opt_ScrollSnapAlign* value);
    void (*setChildrenMainSize)(Ark_NativePointer node,
                                const Opt_ChildrenMainSize* value);
    void (*setMaintainVisibleContentPosition)(Ark_NativePointer node,
                                              const Opt_Boolean* value);
    void (*setStackFromEnd)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setOnScrollIndex)(Ark_NativePointer node,
                             const Opt_Callback_Number_Number_Number_Void* value);
    void (*setOnScrollVisibleContentChange)(Ark_NativePointer node,
                                            const Opt_OnScrollVisibleContentChangeCallback* value);
    void (*setOnItemMove)(Ark_NativePointer node,
                          const Opt_Callback_Number_Number_Boolean* value);
    void (*setOnItemDragStart)(Ark_NativePointer node,
                               const Opt_OnItemDragStartCallback* value);
    void (*setOnItemDragEnter)(Ark_NativePointer node,
                               const Opt_Callback_ItemDragInfo_Void* value);
    void (*setOnItemDragMove)(Ark_NativePointer node,
                              const Opt_Callback_ItemDragInfo_Number_Number_Void* value);
    void (*setOnItemDragLeave)(Ark_NativePointer node,
                               const Opt_Callback_ItemDragInfo_Number_Void* value);
    void (*setOnItemDrop)(Ark_NativePointer node,
                          const Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void* value);
    void (*setOnScrollFrameBegin)(Ark_NativePointer node,
                                  const Opt_OnScrollFrameBeginCallback* value);
    void (*setOnWillScroll)(Ark_NativePointer node,
                            const Opt_OnWillScrollCallback* value);
    void (*setOnDidScroll)(Ark_NativePointer node,
                           const Opt_OnScrollCallback* value);
    void (*setLanes)(Ark_NativePointer node,
                     const Opt_Union_Number_LengthConstrain* value,
                     const Opt_Dimension* gutter);
    void (*setCachedCount1)(Ark_NativePointer node,
                            const Opt_Number* count,
                            const Opt_Boolean* show);
} GENERATED_ArkUIListModifier;

typedef struct GENERATED_ArkUIListItemModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setListItemOptions)(Ark_NativePointer node,
                               const Opt_ListItemOptions* value);
    void (*setSelectable)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setSelected)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setSwipeAction)(Ark_NativePointer node,
                           const Opt_SwipeActionOptions* value);
    void (*setOnSelect)(Ark_NativePointer node,
                        const Opt_Callback_Boolean_Void* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUIListItemModifier;

typedef struct GENERATED_ArkUIListItemGroupModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setListItemGroupOptions)(Ark_NativePointer node,
                                    const Opt_ListItemGroupOptions* options);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_ListDividerOptions* value);
    void (*setChildrenMainSize)(Ark_NativePointer node,
                                const Opt_ChildrenMainSize* value);
} GENERATED_ArkUIListItemGroupModifier;

typedef struct GENERATED_ArkUILoadingProgressModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setLoadingProgressOptions)(Ark_NativePointer node);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_ResourceColor* value);
    void (*setEnableLoading)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
} GENERATED_ArkUILoadingProgressModifier;

typedef struct GENERATED_ArkUIMarqueeModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setMarqueeOptions)(Ark_NativePointer node,
                              const Ark_MarqueeOptions* options);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setAllowScale)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_Union_String_Resource* value);
    void (*setMarqueeUpdateStrategy)(Ark_NativePointer node,
                                     const Opt_MarqueeUpdateStrategy* value);
    void (*setOnStart)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnBounce)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
} GENERATED_ArkUIMarqueeModifier;

typedef struct GENERATED_ArkUIMediaCachedImageModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setMediaCachedImageOptions)(Ark_NativePointer node,
                                       const Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource* src);
} GENERATED_ArkUIMediaCachedImageModifier;

typedef struct GENERATED_ArkUIMenuModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setMenuOptions)(Ark_NativePointer node);
    void (*setFont)(Ark_NativePointer node,
                    const Opt_Font* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setRadius)(Ark_NativePointer node,
                      const Opt_Union_Dimension_BorderRadiuses* value);
    void (*setMenuItemDivider)(Ark_NativePointer node,
                               const Opt_DividerStyleOptions* value);
    void (*setMenuItemGroupDivider)(Ark_NativePointer node,
                                    const Opt_DividerStyleOptions* value);
    void (*setSubMenuExpandingMode)(Ark_NativePointer node,
                                    const Opt_SubMenuExpandingMode* value);
} GENERATED_ArkUIMenuModifier;

typedef struct GENERATED_ArkUIMenuItemModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setMenuItemOptions)(Ark_NativePointer node,
                               const Opt_Union_MenuItemOptions_CustomBuilder* value);
    void (*setSelected)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setSelectIcon)(Ark_NativePointer node,
                          const Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Boolean_Void* value);
    void (*setContentFont)(Ark_NativePointer node,
                           const Opt_Font* value);
    void (*setContentFontColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setLabelFont)(Ark_NativePointer node,
                         const Opt_Font* value);
    void (*setLabelFontColor)(Ark_NativePointer node,
                              const Opt_ResourceColor* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUIMenuItemModifier;

typedef struct GENERATED_ArkUIMenuItemGroupModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setMenuItemGroupOptions)(Ark_NativePointer node,
                                    const Opt_MenuItemGroupOptions* value);
} GENERATED_ArkUIMenuItemGroupModifier;

typedef struct GENERATED_ArkUINavDestinationModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setNavDestinationOptions)(Ark_NativePointer node);
    void (*setHideTitleBar0)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setHideBackButton)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setOnShown)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnHidden)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnBackPressed)(Ark_NativePointer node,
                             const Opt_Callback_Boolean* value);
    void (*setOnResult)(Ark_NativePointer node,
                        const Opt_Callback_Opt_Object_Void* value);
    void (*setMode)(Ark_NativePointer node,
                    const Opt_NavDestinationMode* value);
    void (*setBackButtonIcon0)(Ark_NativePointer node,
                               const Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier* value);
    void (*setMenus0)(Ark_NativePointer node,
                      const Opt_Union_Array_NavigationMenuItem_CustomBuilder* value);
    void (*setOnReady)(Ark_NativePointer node,
                       const Opt_Callback_NavDestinationContext_Void* value);
    void (*setOnWillAppear)(Ark_NativePointer node,
                            const Opt_Callback_Void* value);
    void (*setOnWillDisappear)(Ark_NativePointer node,
                               const Opt_Callback_Void* value);
    void (*setOnWillShow)(Ark_NativePointer node,
                          const Opt_Callback_Void* value);
    void (*setOnWillHide)(Ark_NativePointer node,
                          const Opt_Callback_Void* value);
    void (*setSystemBarStyle)(Ark_NativePointer node,
                              const Opt_window_SystemBarStyle* value);
    void (*setRecoverable)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setSystemTransition)(Ark_NativePointer node,
                                const Opt_NavigationSystemTransitionType* value);
    void (*setBindToScrollable)(Ark_NativePointer node,
                                const Opt_Array_Scroller* value);
    void (*setBindToNestedScrollable)(Ark_NativePointer node,
                                      const Opt_Array_NestedScrollInfo* value);
    void (*setOnActive)(Ark_NativePointer node,
                        const Opt_Callback_NavDestinationActiveReason_Void* value);
    void (*setOnInactive)(Ark_NativePointer node,
                          const Opt_Callback_NavDestinationActiveReason_Void* value);
    void (*setCustomTransition)(Ark_NativePointer node,
                                const Opt_NavDestinationTransitionDelegate* value);
    void (*setOnNewParam)(Ark_NativePointer node,
                          const Opt_Callback_Opt_Object_Void* value);
    void (*setPreferredOrientation)(Ark_NativePointer node,
                                    const Opt_CustomObject* value);
    void (*setEnableNavigationIndicator)(Ark_NativePointer node,
                                         const Opt_Boolean* value);
    void (*setTitle)(Ark_NativePointer node,
                     const Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource* value,
                     const Opt_NavigationTitleOptions* options);
    void (*setHideTitleBar1)(Ark_NativePointer node,
                             const Opt_Boolean* hide,
                             const Opt_Boolean* animated);
    void (*setBackButtonIcon1)(Ark_NativePointer node,
                               const Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier* icon,
                               const Opt_ResourceStr* accessibilityText);
    void (*setMenus1)(Ark_NativePointer node,
                      const Opt_Union_Array_NavigationMenuItem_CustomBuilder* items,
                      const Opt_NavigationMenuOptions* options);
    void (*setToolbarConfiguration)(Ark_NativePointer node,
                                    const Opt_Union_Array_ToolbarItem_CustomBuilder* toolbarParam,
                                    const Opt_NavigationToolbarOptions* options);
    void (*setHideToolBar)(Ark_NativePointer node,
                           const Opt_Boolean* hide,
                           const Opt_Boolean* animated);
    void (*setIgnoreLayoutSafeArea)(Ark_NativePointer node,
                                    const Opt_Array_LayoutSafeAreaType* types,
                                    const Opt_Array_LayoutSafeAreaEdge* edges);
    void (*setEnableStatusBar)(Ark_NativePointer node,
                               const Opt_Boolean* enabled,
                               const Opt_Boolean* animated);
} GENERATED_ArkUINavDestinationModifier;

typedef struct GENERATED_ArkUINavigationModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setNavigationOptions0)(Ark_NativePointer node);
    void (*setNavigationOptions1)(Ark_NativePointer node,
                                  Ark_NavPathStack pathInfos);
    void (*setNavBarWidth)(Ark_NativePointer node,
                           const Opt_Length* value);
    void (*setNavBarPosition)(Ark_NativePointer node,
                              const Opt_NavBarPosition* value);
    void (*setNavBarWidthRange)(Ark_NativePointer node,
                                const Opt_Tuple_Dimension_Dimension* value);
    void (*setMinContentWidth)(Ark_NativePointer node,
                               const Opt_Dimension* value);
    void (*setMode)(Ark_NativePointer node,
                    const Opt_NavigationMode* value);
    void (*setBackButtonIcon0)(Ark_NativePointer node,
                               const Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier* value);
    void (*setHideNavBar)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setHideTitleBar0)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setHideBackButton)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setTitleMode)(Ark_NativePointer node,
                         const Opt_NavigationTitleMode* value);
    void (*setMenus0)(Ark_NativePointer node,
                      const Opt_Union_Array_NavigationMenuItem_CustomBuilder* value);
    void (*setHideToolBar0)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setEnableToolBarAdaptation)(Ark_NativePointer node,
                                       const Opt_Boolean* value);
    void (*setOnTitleModeChange)(Ark_NativePointer node,
                                 const Opt_Callback_NavigationTitleMode_Void* value);
    void (*setOnNavBarStateChange)(Ark_NativePointer node,
                                   const Opt_Callback_Boolean_Void* value);
    void (*setOnNavigationModeChange)(Ark_NativePointer node,
                                      const Opt_Callback_NavigationMode_Void* value);
    void (*setNavDestination)(Ark_NativePointer node,
                              const Opt_PageMapBuilder* value);
    void (*setCustomNavContentTransition)(Ark_NativePointer node,
                                          const Opt_Type_NavigationAttribute_customNavContentTransition* value);
    void (*setSystemBarStyle)(Ark_NativePointer node,
                              const Opt_window_SystemBarStyle* value);
    void (*setRecoverable)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setEnableDragBar)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setEnableModeChangeAnimation)(Ark_NativePointer node,
                                         const Opt_Boolean* value);
    void (*setBackButtonIcon1)(Ark_NativePointer node,
                               const Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier* icon,
                               const Opt_ResourceStr* accessibilityText);
    void (*setTitle)(Ark_NativePointer node,
                     const Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle* value,
                     const Opt_NavigationTitleOptions* options);
    void (*setHideTitleBar1)(Ark_NativePointer node,
                             const Opt_Boolean* hide,
                             const Opt_Boolean* animated);
    void (*setMenus1)(Ark_NativePointer node,
                      const Opt_Union_Array_NavigationMenuItem_CustomBuilder* items,
                      const Opt_NavigationMenuOptions* options);
    void (*setToolbarConfiguration)(Ark_NativePointer node,
                                    const Opt_Union_Array_ToolbarItem_CustomBuilder* value,
                                    const Opt_NavigationToolbarOptions* options);
    void (*setHideToolBar1)(Ark_NativePointer node,
                            const Opt_Boolean* hide,
                            const Opt_Boolean* animated);
    void (*setIgnoreLayoutSafeArea)(Ark_NativePointer node,
                                    const Opt_Array_LayoutSafeAreaType* types,
                                    const Opt_Array_LayoutSafeAreaEdge* edges);
} GENERATED_ArkUINavigationModifier;

typedef struct GENERATED_ArkUINodeContainerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setNodeContainerOptions)(Ark_NativePointer node,
                                    const Ark_NodeController* controller);
} GENERATED_ArkUINodeContainerModifier;

typedef struct GENERATED_ArkUIPathModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setPathOptions)(Ark_NativePointer node,
                           const Opt_PathOptions* options);
} GENERATED_ArkUIPathModifier;

typedef struct GENERATED_ArkUIPatternLockModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setPatternLockOptions)(Ark_NativePointer node,
                                  const Opt_PatternLockController* controller);
    void (*setSideLength)(Ark_NativePointer node,
                          const Opt_Length* value);
    void (*setCircleRadius)(Ark_NativePointer node,
                            const Opt_Length* value);
    void (*setBackgroundColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setRegularColor)(Ark_NativePointer node,
                            const Opt_ResourceColor* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setActiveColor)(Ark_NativePointer node,
                           const Opt_ResourceColor* value);
    void (*setPathColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setPathStrokeWidth)(Ark_NativePointer node,
                               const Opt_Union_Number_String* value);
    void (*setOnPatternComplete)(Ark_NativePointer node,
                                 const Opt_Callback_Array_Number_Void* value);
    void (*setAutoReset)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setOnDotConnect)(Ark_NativePointer node,
                            const Opt_Callback_Number_Void* value);
    void (*setActivateCircleStyle)(Ark_NativePointer node,
                                   const Opt_CircleStyleOptions* value);
    void (*setSkipUnselectedPoint)(Ark_NativePointer node,
                                   const Opt_Boolean* value);
} GENERATED_ArkUIPatternLockModifier;

typedef struct GENERATED_ArkUIPluginComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setPluginComponentOptions)(Ark_NativePointer node,
                                      const Ark_PluginComponentOptions* options);
    void (*setOnComplete)(Ark_NativePointer node,
                          const Opt_VoidCallback* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_PluginErrorCallback* value);
} GENERATED_ArkUIPluginComponentModifier;

typedef struct GENERATED_ArkUIPolygonModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setPolygonOptions)(Ark_NativePointer node,
                              const Opt_PolygonOptions* options);
    void (*setPoints)(Ark_NativePointer node,
                      const Opt_Array_ShapePoint* value);
} GENERATED_ArkUIPolygonModifier;

typedef struct GENERATED_ArkUIPolylineModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setPolylineOptions)(Ark_NativePointer node,
                               const Opt_PolylineOptions* options);
    void (*setPoints)(Ark_NativePointer node,
                      const Opt_Array_ShapePoint* value);
} GENERATED_ArkUIPolylineModifier;

typedef struct GENERATED_ArkUIProgressModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setProgressOptions)(Ark_NativePointer node,
                               const Ark_ProgressOptions* options);
    void (*setValue)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_Union_ResourceColor_LinearGradient* value);
    void (*setStyle)(Ark_NativePointer node,
                     const Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions* value);
    void (*setPrivacySensitive)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
} GENERATED_ArkUIProgressModifier;

typedef struct GENERATED_ArkUIQRCodeModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setQRCodeOptions)(Ark_NativePointer node,
                             const Ark_ResourceStr* value);
    void (*setColor)(Ark_NativePointer node,
                     const Opt_ResourceColor* value);
    void (*setBackgroundColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setContentOpacity)(Ark_NativePointer node,
                              const Opt_Union_Number_Resource* value);
} GENERATED_ArkUIQRCodeModifier;

typedef struct GENERATED_ArkUIRadioModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRadioOptions)(Ark_NativePointer node,
                            const Ark_RadioOptions* options);
    void (*setChecked)(Ark_NativePointer node,
                       const Opt_Boolean* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnRadioChangeCallback* value);
    void (*setRadioStyle)(Ark_NativePointer node,
                          const Opt_RadioStyle* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*set_onChangeEvent_checked)(Ark_NativePointer node,
                                      const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUIRadioModifier;

typedef struct GENERATED_ArkUIRatingModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRatingOptions)(Ark_NativePointer node,
                             const Opt_RatingOptions* options);
    void (*setStars)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setStepSize)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setStarStyle)(Ark_NativePointer node,
                         const Opt_StarStyleOptions* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnRatingChangeCallback* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*set_onChangeEvent_rating)(Ark_NativePointer node,
                                     const Callback_Opt_Number_Void* callback_);
} GENERATED_ArkUIRatingModifier;

typedef struct GENERATED_ArkUIRectModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRectOptions)(Ark_NativePointer node,
                           const Opt_Union_RectOptions_RoundedRectOptions* options);
    void (*setRadius)(Ark_NativePointer node,
                      const Opt_Union_Number_String_Array_Union_Number_String* value);
} GENERATED_ArkUIRectModifier;

typedef struct GENERATED_ArkUIRefreshModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRefreshOptions)(Ark_NativePointer node,
                              const Ark_RefreshOptions* value);
    void (*setOnStateChange)(Ark_NativePointer node,
                             const Opt_Callback_RefreshStatus_Void* value);
    void (*setOnRefreshing)(Ark_NativePointer node,
                            const Opt_Callback_Void* value);
    void (*setRefreshOffset)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*setPullToRefresh)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setOnOffsetChange)(Ark_NativePointer node,
                              const Opt_Callback_Number_Void* value);
    void (*setPullDownRatio)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*set_onChangeEvent_refreshing)(Ark_NativePointer node,
                                         const Callback_Boolean_Void* callback_);
} GENERATED_ArkUIRefreshModifier;

typedef struct GENERATED_ArkUIRelativeContainerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRelativeContainerOptions)(Ark_NativePointer node);
    void (*setGuideLine)(Ark_NativePointer node,
                         const Opt_Array_GuideLineStyle* value);
    void (*setBarrier)(Ark_NativePointer node,
                       const Opt_Array_BarrierStyle* value);
} GENERATED_ArkUIRelativeContainerModifier;

typedef struct GENERATED_ArkUIRemoteWindowModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRemoteWindowOptions)(Ark_NativePointer node,
                                   const Ark_WindowAnimationTarget* target);
} GENERATED_ArkUIRemoteWindowModifier;

typedef struct GENERATED_ArkUIRichEditorModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRichEditorOptions0)(Ark_NativePointer node,
                                  const Ark_RichEditorOptions* value);
    void (*setRichEditorOptions1)(Ark_NativePointer node,
                                  const Ark_RichEditorStyledStringOptions* options);
    void (*setOnReady)(Ark_NativePointer node,
                       const Opt_VoidCallback* value);
    void (*setOnSelect)(Ark_NativePointer node,
                        const Opt_Callback_RichEditorSelection_Void* value);
    void (*setOnSelectionChange)(Ark_NativePointer node,
                                 const Opt_Callback_RichEditorRange_Void* value);
    void (*setAboutToIMEInput)(Ark_NativePointer node,
                               const Opt_Callback_RichEditorInsertValue_Boolean* value);
    void (*setOnIMEInputComplete)(Ark_NativePointer node,
                                  const Opt_Callback_RichEditorTextSpanResult_Void* value);
    void (*setOnDidIMEInput)(Ark_NativePointer node,
                             const Opt_Callback_TextRange_Void* value);
    void (*setAboutToDelete)(Ark_NativePointer node,
                             const Opt_Callback_RichEditorDeleteValue_Boolean* value);
    void (*setOnDeleteComplete)(Ark_NativePointer node,
                                const Opt_VoidCallback* value);
    void (*setCopyOptions)(Ark_NativePointer node,
                           const Opt_CopyOptions* value);
    void (*setOnPaste)(Ark_NativePointer node,
                       const Opt_PasteEventCallback* value);
    void (*setEnableDataDetector)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
    void (*setEnablePreviewText)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setDataDetectorConfig)(Ark_NativePointer node,
                                  const Opt_TextDataDetectorConfig* value);
    void (*setCaretColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setOnEditingChange)(Ark_NativePointer node,
                               const Opt_Callback_Boolean_Void* value);
    void (*setEnterKeyType)(Ark_NativePointer node,
                            const Opt_EnterKeyType* value);
    void (*setOnSubmit)(Ark_NativePointer node,
                        const Opt_SubmitCallback* value);
    void (*setOnWillChange)(Ark_NativePointer node,
                            const Opt_Callback_RichEditorChangeValue_Boolean* value);
    void (*setOnDidChange)(Ark_NativePointer node,
                           const Opt_OnDidChangeCallback* value);
    void (*setOnCut)(Ark_NativePointer node,
                     const Opt_Callback_CutEvent_Void* value);
    void (*setOnCopy)(Ark_NativePointer node,
                      const Opt_Callback_CopyEvent_Void* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setEnableKeyboardOnFocus)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setBarState)(Ark_NativePointer node,
                        const Opt_BarState* value);
    void (*setMaxLength)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setMaxLines)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setKeyboardAppearance)(Ark_NativePointer node,
                                  const Opt_KeyboardAppearance* value);
    void (*setStopBackPress)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setBindSelectionMenu)(Ark_NativePointer node,
                                 const Opt_RichEditorSpanType* spanType,
                                 const Opt_CustomNodeBuilder* content,
                                 const Opt_Union_ResponseType_RichEditorResponseType* responseType,
                                 const Opt_SelectionMenuOptions* options);
    void (*setCustomKeyboard)(Ark_NativePointer node,
                              const Opt_CustomNodeBuilder* value,
                              const Opt_KeyboardOptions* options);
    void (*setPlaceholder)(Ark_NativePointer node,
                           const Opt_ResourceStr* value,
                           const Opt_PlaceholderStyle* style);
} GENERATED_ArkUIRichEditorModifier;

typedef struct GENERATED_ArkUIRichTextModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRichTextOptions)(Ark_NativePointer node,
                               const Ark_String* content);
    void (*setOnStart)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnComplete)(Ark_NativePointer node,
                          const Opt_Callback_Void* value);
} GENERATED_ArkUIRichTextModifier;

typedef struct GENERATED_ArkUIRootModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
} GENERATED_ArkUIRootModifier;

typedef struct GENERATED_ArkUIRootSceneModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRootSceneOptions)(Ark_NativePointer node,
                                const Ark_RootSceneSession* session);
} GENERATED_ArkUIRootSceneModifier;

typedef struct GENERATED_ArkUIRowModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRowOptions)(Ark_NativePointer node,
                          const Opt_Union_RowOptions_RowOptionsV2* options);
    void (*setAlignItems)(Ark_NativePointer node,
                          const Opt_VerticalAlign* value);
    void (*setJustifyContent)(Ark_NativePointer node,
                              const Opt_FlexAlign* value);
    void (*setPointLight)(Ark_NativePointer node,
                          const Opt_PointLightStyle* value);
    void (*setReverse)(Ark_NativePointer node,
                       const Opt_Boolean* value);
} GENERATED_ArkUIRowModifier;

typedef struct GENERATED_ArkUIRowSplitModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setRowSplitOptions)(Ark_NativePointer node);
    void (*setResizeable)(Ark_NativePointer node,
                          const Opt_Boolean* value);
} GENERATED_ArkUIRowSplitModifier;

typedef struct GENERATED_ArkUIScreenModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setScreenOptions)(Ark_NativePointer node,
                             const Ark_Number* screenId);
} GENERATED_ArkUIScreenModifier;

typedef struct GENERATED_ArkUIScrollModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setScrollOptions)(Ark_NativePointer node,
                             const Opt_Scroller* scroller);
    void (*setScrollable)(Ark_NativePointer node,
                          const Opt_ScrollDirection* value);
    void (*setOnWillScroll)(Ark_NativePointer node,
                            const Opt_ScrollOnWillScrollCallback* value);
    void (*setOnDidScroll)(Ark_NativePointer node,
                           const Opt_ScrollOnScrollCallback* value);
    void (*setOnScrollEdge)(Ark_NativePointer node,
                            const Opt_OnScrollEdgeCallback* value);
    void (*setOnScrollStart)(Ark_NativePointer node,
                             const Opt_VoidCallback* value);
    void (*setOnScrollStop)(Ark_NativePointer node,
                            const Opt_VoidCallback* value);
    void (*setScrollBar)(Ark_NativePointer node,
                         const Opt_BarState* value);
    void (*setScrollBarColor)(Ark_NativePointer node,
                              const Opt_Union_Color_Number_String* value);
    void (*setScrollBarWidth)(Ark_NativePointer node,
                              const Opt_Union_Number_String* value);
    void (*setOnScrollFrameBegin)(Ark_NativePointer node,
                                  const Opt_OnScrollFrameBeginCallback* value);
    void (*setNestedScroll)(Ark_NativePointer node,
                            const Opt_NestedScrollOptions* value);
    void (*setEnableScrollInteraction)(Ark_NativePointer node,
                                       const Opt_Boolean* value);
    void (*setFriction)(Ark_NativePointer node,
                        const Opt_Union_Number_Resource* value);
    void (*setScrollSnap)(Ark_NativePointer node,
                          const Opt_ScrollSnapOptions* value);
    void (*setEnablePaging)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setInitialOffset)(Ark_NativePointer node,
                             const Opt_OffsetOptions* value);
    void (*setEdgeEffect)(Ark_NativePointer node,
                          const Opt_EdgeEffect* edgeEffect,
                          const Opt_EdgeEffectOptions* options);
} GENERATED_ArkUIScrollModifier;

typedef struct GENERATED_ArkUIScrollableCommonMethodModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setScrollBar)(Ark_NativePointer node,
                         const Opt_BarState* value);
    void (*setScrollBarColor)(Ark_NativePointer node,
                              const Opt_Union_Color_Number_String* value);
    void (*setScrollBarWidth)(Ark_NativePointer node,
                              const Opt_Union_Number_String* value);
    void (*setNestedScroll)(Ark_NativePointer node,
                            const Opt_NestedScrollOptions* value);
    void (*setEnableScrollInteraction)(Ark_NativePointer node,
                                       const Opt_Boolean* value);
    void (*setFriction)(Ark_NativePointer node,
                        const Opt_Union_Number_Resource* value);
    void (*setOnReachStart)(Ark_NativePointer node,
                            const Opt_Callback_Void* value);
    void (*setOnReachEnd)(Ark_NativePointer node,
                          const Opt_Callback_Void* value);
    void (*setOnScrollStart)(Ark_NativePointer node,
                             const Opt_Callback_Void* value);
    void (*setOnScrollStop)(Ark_NativePointer node,
                            const Opt_Callback_Void* value);
    void (*setFlingSpeedLimit)(Ark_NativePointer node,
                               const Opt_Number* value);
    void (*setClipContent)(Ark_NativePointer node,
                           const Opt_Union_ContentClipMode_RectShape* value);
    void (*setDigitalCrownSensitivity)(Ark_NativePointer node,
                                       const Opt_CrownSensitivity* value);
    void (*setBackToTop)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setEdgeEffect)(Ark_NativePointer node,
                          const Opt_EdgeEffect* edgeEffect,
                          const Opt_EdgeEffectOptions* options);
    void (*setFadingEdge)(Ark_NativePointer node,
                          const Opt_Boolean* enabled,
                          const Opt_FadingEdgeOptions* options);
} GENERATED_ArkUIScrollableCommonMethodModifier;

typedef struct GENERATED_ArkUIScrollBarModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setScrollBarOptions)(Ark_NativePointer node,
                                const Ark_ScrollBarOptions* value);
    void (*setEnableNestedScroll)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
} GENERATED_ArkUIScrollBarModifier;

typedef struct GENERATED_ArkUISearchModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSearchOptions)(Ark_NativePointer node,
                             const Opt_SearchOptions* options);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setSearchIcon)(Ark_NativePointer node,
                          const Opt_Union_IconOptions_SymbolGlyphModifier* value);
    void (*setCancelButton)(Ark_NativePointer node,
                            const Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions* value);
    void (*setTextIndent)(Ark_NativePointer node,
                          const Opt_Dimension* value);
    void (*setOnEditChange)(Ark_NativePointer node,
                            const Opt_Callback_Boolean_Void* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setCaretStyle)(Ark_NativePointer node,
                          const Opt_CaretStyle* value);
    void (*setPlaceholderColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setPlaceholderFont)(Ark_NativePointer node,
                               const Opt_Font* value);
    void (*setTextFont)(Ark_NativePointer node,
                        const Opt_Font* value);
    void (*setEnterKeyType)(Ark_NativePointer node,
                            const Opt_EnterKeyType* value);
    void (*setOnSubmit)(Ark_NativePointer node,
                        const Opt_Union_Callback_String_Void_SearchSubmitCallback* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_EditableTextOnChangeCallback* value);
    void (*setOnTextSelectionChange)(Ark_NativePointer node,
                                     const Opt_OnTextSelectionChangeCallback* value);
    void (*setOnContentScroll)(Ark_NativePointer node,
                               const Opt_OnContentScrollCallback* value);
    void (*setOnCopy)(Ark_NativePointer node,
                      const Opt_Callback_String_Void* value);
    void (*setOnCut)(Ark_NativePointer node,
                     const Opt_Callback_String_Void* value);
    void (*setOnPaste)(Ark_NativePointer node,
                       const Opt_OnPasteCallback* value);
    void (*setCopyOption)(Ark_NativePointer node,
                          const Opt_CopyOptions* value);
    void (*setMaxLength)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setTextAlign)(Ark_NativePointer node,
                         const Opt_TextAlign* value);
    void (*setEnableKeyboardOnFocus)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setSelectionMenuHidden)(Ark_NativePointer node,
                                   const Opt_Boolean* value);
    void (*setMinFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMaxFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setDecoration)(Ark_NativePointer node,
                          const Opt_TextDecorationOptions* value);
    void (*setLetterSpacing)(Ark_NativePointer node,
                             const Opt_Union_Number_String_Resource* value);
    void (*setLineHeight)(Ark_NativePointer node,
                          const Opt_Union_Number_String_Resource* value);
    void (*setType)(Ark_NativePointer node,
                    const Opt_SearchType* value);
    void (*setFontFeature)(Ark_NativePointer node,
                           const Opt_String* value);
    void (*setOnWillInsert)(Ark_NativePointer node,
                            const Opt_Callback_InsertValue_Boolean* value);
    void (*setOnDidInsert)(Ark_NativePointer node,
                           const Opt_Callback_InsertValue_Void* value);
    void (*setOnWillDelete)(Ark_NativePointer node,
                            const Opt_Callback_DeleteValue_Boolean* value);
    void (*setOnDidDelete)(Ark_NativePointer node,
                           const Opt_Callback_DeleteValue_Void* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setEnablePreviewText)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setAutoCapitalizationMode)(Ark_NativePointer node,
                                      const Opt_AutoCapitalizationMode* value);
    void (*setHalfLeading)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setStopBackPress)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setOnWillChange)(Ark_NativePointer node,
                            const Opt_Callback_EditableTextChangeValue_Boolean* value);
    void (*setKeyboardAppearance)(Ark_NativePointer node,
                                  const Opt_KeyboardAppearance* value);
    void (*setSearchButton)(Ark_NativePointer node,
                            const Opt_ResourceStr* value,
                            const Opt_SearchButtonOptions* option);
    void (*setInputFilter)(Ark_NativePointer node,
                           const Opt_ResourceStr* value,
                           const Opt_Callback_String_Void* error);
    void (*setCustomKeyboard)(Ark_NativePointer node,
                              const Opt_CustomNodeBuilder* value,
                              const Opt_KeyboardOptions* options);
    void (*set_onChangeEvent_value)(Ark_NativePointer node,
                                    const Callback_String_Void* callback_);
} GENERATED_ArkUISearchModifier;

typedef struct GENERATED_ArkUISelectModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSelectOptions)(Ark_NativePointer node,
                             const Array_SelectOption* options);
    void (*setSelected)(Ark_NativePointer node,
                        const Opt_Union_Number_Resource* value);
    void (*setValue)(Ark_NativePointer node,
                     const Opt_Union_ResourceStr_String_Resource* value);
    void (*setFont)(Ark_NativePointer node,
                    const Opt_Font* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setSelectedOptionBgColor)(Ark_NativePointer node,
                                     const Opt_ResourceColor* value);
    void (*setSelectedOptionFont)(Ark_NativePointer node,
                                  const Opt_Font* value);
    void (*setSelectedOptionFontColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setOptionBgColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setOptionFont)(Ark_NativePointer node,
                          const Opt_Font* value);
    void (*setOptionFontColor)(Ark_NativePointer node,
                               const Opt_ResourceColor* value);
    void (*setOnSelect)(Ark_NativePointer node,
                        const Opt_OnSelectCallback* value);
    void (*setSpace)(Ark_NativePointer node,
                     const Opt_Length* value);
    void (*setArrowPosition)(Ark_NativePointer node,
                             const Opt_ArrowPosition* value);
    void (*setOptionWidth)(Ark_NativePointer node,
                           const Opt_Union_Dimension_OptionWidthMode* value);
    void (*setOptionHeight)(Ark_NativePointer node,
                            const Opt_Dimension* value);
    void (*setMenuBackgroundColor)(Ark_NativePointer node,
                                   const Opt_ResourceColor* value);
    void (*setMenuBackgroundBlurStyle)(Ark_NativePointer node,
                                       const Opt_BlurStyle* value);
    void (*setControlSize)(Ark_NativePointer node,
                           const Opt_ControlSize* value);
    void (*setMenuItemContentModifier)(Ark_NativePointer node,
                                       const Opt_ContentModifier* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_DividerOptions* value);
    void (*setTextModifier)(Ark_NativePointer node,
                            const Opt_TextModifier* value);
    void (*setArrowModifier)(Ark_NativePointer node,
                             const Opt_SymbolGlyphModifier* value);
    void (*setOptionTextModifier)(Ark_NativePointer node,
                                  const Opt_TextModifier* value);
    void (*setSelectedOptionTextModifier)(Ark_NativePointer node,
                                          const Opt_TextModifier* value);
    void (*setDividerStyle)(Ark_NativePointer node,
                            const Opt_DividerStyleOptions* value);
    void (*setAvoidance)(Ark_NativePointer node,
                         const Opt_AvoidanceMode* value);
    void (*setMenuOutline)(Ark_NativePointer node,
                           const Opt_MenuOutlineOptions* value);
    void (*setMenuAlign)(Ark_NativePointer node,
                         const Opt_MenuAlignType* alignType,
                         const Opt_Offset* offset);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Opt_Union_Number_Resource_Void* callback_);
    void (*set_onChangeEvent_value)(Ark_NativePointer node,
                                    const Callback_Opt_Union_ResourceStr_String_Resource_Void* callback_);
} GENERATED_ArkUISelectModifier;

typedef struct GENERATED_ArkUIShapeModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setShapeOptions)(Ark_NativePointer node,
                            const Opt_image_PixelMap* value);
    void (*setViewPort)(Ark_NativePointer node,
                        const Opt_ViewportRect* value);
    void (*setStroke)(Ark_NativePointer node,
                      const Opt_ResourceColor* value);
    void (*setFill)(Ark_NativePointer node,
                    const Opt_ResourceColor* value);
    void (*setStrokeDashOffset)(Ark_NativePointer node,
                                const Opt_Length* value);
    void (*setStrokeDashArray)(Ark_NativePointer node,
                               const Opt_Array_Length* value);
    void (*setStrokeLineCap)(Ark_NativePointer node,
                             const Opt_LineCapStyle* value);
    void (*setStrokeLineJoin)(Ark_NativePointer node,
                              const Opt_LineJoinStyle* value);
    void (*setStrokeMiterLimit)(Ark_NativePointer node,
                                const Opt_Length* value);
    void (*setStrokeOpacity)(Ark_NativePointer node,
                             const Opt_Union_Number_String_Resource* value);
    void (*setFillOpacity)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setStrokeWidth)(Ark_NativePointer node,
                           const Opt_Length* value);
    void (*setAntiAlias)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setMesh)(Ark_NativePointer node,
                    const Opt_Array_Number* value,
                    const Opt_Number* column,
                    const Opt_Number* row);
} GENERATED_ArkUIShapeModifier;

typedef struct GENERATED_ArkUISideBarContainerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSideBarContainerOptions)(Ark_NativePointer node,
                                       const Opt_SideBarContainerType* type);
    void (*setShowSideBar)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setControlButton)(Ark_NativePointer node,
                             const Opt_ButtonStyle* value);
    void (*setShowControlButton)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Boolean_Void* value);
    void (*setSideBarWidth0)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*setMinSideBarWidth0)(Ark_NativePointer node,
                                const Opt_Number* value);
    void (*setMaxSideBarWidth0)(Ark_NativePointer node,
                                const Opt_Number* value);
    void (*setSideBarWidth1)(Ark_NativePointer node,
                             const Opt_Length* value);
    void (*setMinSideBarWidth1)(Ark_NativePointer node,
                                const Opt_Length* value);
    void (*setMaxSideBarWidth1)(Ark_NativePointer node,
                                const Opt_Length* value);
    void (*setAutoHide)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setSideBarPosition)(Ark_NativePointer node,
                               const Opt_SideBarPosition* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_DividerStyle* value);
    void (*setMinContentWidth)(Ark_NativePointer node,
                               const Opt_Dimension* value);
    void (*set_onChangeEvent_showSideBar)(Ark_NativePointer node,
                                          const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUISideBarContainerModifier;

typedef struct GENERATED_ArkUISliderModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSliderOptions)(Ark_NativePointer node,
                             const Opt_SliderOptions* options);
    void (*setBlockColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setTrackColor)(Ark_NativePointer node,
                          const Opt_Union_ResourceColor_LinearGradient* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_Union_ResourceColor_LinearGradient* value);
    void (*setShowSteps)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setTrackThickness)(Ark_NativePointer node,
                              const Opt_Length* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Number_SliderChangeMode_Void* value);
    void (*setBlockBorderColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setBlockBorderWidth)(Ark_NativePointer node,
                                const Opt_Length* value);
    void (*setStepColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setTrackBorderRadius)(Ark_NativePointer node,
                                 const Opt_Length* value);
    void (*setSelectedBorderRadius)(Ark_NativePointer node,
                                    const Opt_Dimension* value);
    void (*setBlockSize)(Ark_NativePointer node,
                         const Opt_SizeOptions* value);
    void (*setBlockStyle)(Ark_NativePointer node,
                          const Opt_SliderBlockStyle* value);
    void (*setStepSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setSliderInteractionMode)(Ark_NativePointer node,
                                     const Opt_SliderInteraction* value);
    void (*setMinResponsiveDistance)(Ark_NativePointer node,
                                     const Opt_Number* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*setSlideRange)(Ark_NativePointer node,
                          const Opt_SlideRange* value);
    void (*setDigitalCrownSensitivity)(Ark_NativePointer node,
                                       const Opt_CrownSensitivity* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setShowTips)(Ark_NativePointer node,
                        const Opt_Boolean* value,
                        const Opt_ResourceStr* content);
    void (*set_onChangeEvent_value)(Ark_NativePointer node,
                                    const Callback_Opt_Number_Void* callback_);
} GENERATED_ArkUISliderModifier;

typedef struct GENERATED_ArkUISpanModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSpanOptions)(Ark_NativePointer node,
                           const Ark_Union_String_Resource* value);
    void (*setFont)(Ark_NativePointer node,
                    const Opt_Font* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Union_Number_String_Resource* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_Union_String_Resource* value);
    void (*setDecoration)(Ark_NativePointer node,
                          const Opt_DecorationStyleInterface* value);
    void (*setTextCase)(Ark_NativePointer node,
                        const Opt_TextCase* value);
    void (*setLineHeight)(Ark_NativePointer node,
                          const Opt_Length* value);
    void (*setTextShadow)(Ark_NativePointer node,
                          const Opt_Union_ShadowOptions_Array_ShadowOptions* value);
} GENERATED_ArkUISpanModifier;

typedef struct GENERATED_ArkUIStackModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setStackOptions)(Ark_NativePointer node,
                            const Opt_StackOptions* options);
    void (*setAlignContent)(Ark_NativePointer node,
                            const Opt_Alignment* value);
    void (*setPointLight)(Ark_NativePointer node,
                          const Opt_PointLightStyle* value);
} GENERATED_ArkUIStackModifier;

typedef struct GENERATED_ArkUIStepperModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setStepperOptions)(Ark_NativePointer node,
                              const Opt_StepperOptions* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_Callback_Void* value);
    void (*setOnSkip)(Ark_NativePointer node,
                      const Opt_Callback_Void* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Number_Number_Void* value);
    void (*setOnNext)(Ark_NativePointer node,
                      const Opt_Callback_Number_Number_Void* value);
    void (*setOnPrevious)(Ark_NativePointer node,
                          const Opt_Callback_Number_Number_Void* value);
    void (*set_onChangeEvent_index)(Ark_NativePointer node,
                                    const Callback_Number_Void* callback_);
} GENERATED_ArkUIStepperModifier;

typedef struct GENERATED_ArkUIStepperItemModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setStepperItemOptions)(Ark_NativePointer node);
    void (*setPrevLabel)(Ark_NativePointer node,
                         const Opt_String* value);
    void (*setNextLabel)(Ark_NativePointer node,
                         const Opt_String* value);
    void (*setStatus)(Ark_NativePointer node,
                      const Opt_ItemState* value);
} GENERATED_ArkUIStepperItemModifier;

typedef struct GENERATED_ArkUISwiperModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSwiperOptions)(Ark_NativePointer node,
                             const Opt_SwiperController* controller);
    void (*setIndex)(Ark_NativePointer node,
                     const Opt_Number* value);
    void (*setInterval)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setIndicator)(Ark_NativePointer node,
                         const Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean* value);
    void (*setLoop)(Ark_NativePointer node,
                    const Opt_Boolean* value);
    void (*setDuration)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setVertical)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setItemSpace)(Ark_NativePointer node,
                         const Opt_Union_Number_String* value);
    void (*setDisplayMode)(Ark_NativePointer node,
                           const Opt_SwiperDisplayMode* value);
    void (*setCachedCount0)(Ark_NativePointer node,
                            const Opt_Number* value);
    void (*setEffectMode)(Ark_NativePointer node,
                          const Opt_EdgeEffect* value);
    void (*setDisableSwipe)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setCurve)(Ark_NativePointer node,
                     const Opt_Union_Curve_String_ICurve* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Number_Void* value);
    void (*setOnSelected)(Ark_NativePointer node,
                          const Opt_Callback_Number_Void* value);
    void (*setOnUnselected)(Ark_NativePointer node,
                            const Opt_Callback_Number_Void* value);
    void (*setOnAnimationStart)(Ark_NativePointer node,
                                const Opt_OnSwiperAnimationStartCallback* value);
    void (*setOnAnimationEnd)(Ark_NativePointer node,
                              const Opt_OnSwiperAnimationEndCallback* value);
    void (*setOnGestureSwipe)(Ark_NativePointer node,
                              const Opt_OnSwiperGestureSwipeCallback* value);
    void (*setNestedScroll)(Ark_NativePointer node,
                            const Opt_SwiperNestedScrollMode* value);
    void (*setCustomContentTransition)(Ark_NativePointer node,
                                       const Opt_SwiperContentAnimatedTransition* value);
    void (*setOnContentDidScroll)(Ark_NativePointer node,
                                  const Opt_ContentDidScrollCallback* value);
    void (*setIndicatorInteractive)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setPageFlipMode)(Ark_NativePointer node,
                            const Opt_PageFlipMode* value);
    void (*setOnContentWillScroll)(Ark_NativePointer node,
                                   const Opt_ContentWillScrollCallback* value);
    void (*setAutoPlay)(Ark_NativePointer node,
                        const Opt_Boolean* autoPlay,
                        const Opt_AutoPlayOptions* options);
    void (*setDisplayArrow)(Ark_NativePointer node,
                            const Opt_Union_ArrowStyle_Boolean* value,
                            const Opt_Boolean* isHoverShow);
    void (*setCachedCount1)(Ark_NativePointer node,
                            const Opt_Number* count,
                            const Opt_Boolean* isShown);
    void (*setDisplayCount)(Ark_NativePointer node,
                            const Opt_Union_Number_String_SwiperAutoFill* value,
                            const Opt_Boolean* swipeByGroup);
    void (*setPrevMargin)(Ark_NativePointer node,
                          const Opt_Length* value,
                          const Opt_Boolean* ignoreBlank);
    void (*setNextMargin)(Ark_NativePointer node,
                          const Opt_Length* value,
                          const Opt_Boolean* ignoreBlank);
    void (*set_onChangeEvent_index)(Ark_NativePointer node,
                                    const Callback_Opt_Number_Void* callback_);
} GENERATED_ArkUISwiperModifier;

typedef struct GENERATED_ArkUISymbolGlyphModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSymbolGlyphOptions)(Ark_NativePointer node,
                                  const Opt_Resource* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Union_Number_String_Resource* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_Array_ResourceColor* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* value);
    void (*setEffectStrategy)(Ark_NativePointer node,
                              const Opt_SymbolEffectStrategy* value);
    void (*setRenderingStrategy)(Ark_NativePointer node,
                                 const Opt_SymbolRenderingStrategy* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setSymbolEffect)(Ark_NativePointer node,
                            const Opt_SymbolEffect* symbolEffect,
                            const Opt_Union_Boolean_Number* triggerValue);
} GENERATED_ArkUISymbolGlyphModifier;

typedef struct GENERATED_ArkUISymbolSpanModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setSymbolSpanOptions)(Ark_NativePointer node,
                                 const Ark_Resource* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Union_Number_String_Resource* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_Array_ResourceColor* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* value);
    void (*setEffectStrategy)(Ark_NativePointer node,
                              const Opt_SymbolEffectStrategy* value);
    void (*setRenderingStrategy)(Ark_NativePointer node,
                                 const Opt_SymbolRenderingStrategy* value);
} GENERATED_ArkUISymbolSpanModifier;

typedef struct GENERATED_ArkUITabContentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTabContentOptions)(Ark_NativePointer node);
    void (*setTabBar)(Ark_NativePointer node,
                      const Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions* value);
    void (*setOnWillShow)(Ark_NativePointer node,
                          const Opt_VoidCallback* value);
    void (*setOnWillHide)(Ark_NativePointer node,
                          const Opt_VoidCallback* value);
} GENERATED_ArkUITabContentModifier;

typedef struct GENERATED_ArkUITabsModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTabsOptions)(Ark_NativePointer node,
                           const Opt_TabsOptions* options);
    void (*setVertical)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setBarPosition)(Ark_NativePointer node,
                           const Opt_BarPosition* value);
    void (*setScrollable)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setBarWidth)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setBarHeight)(Ark_NativePointer node,
                         const Opt_Length* value);
    void (*setAnimationDuration)(Ark_NativePointer node,
                                 const Opt_Number* value);
    void (*setAnimationMode)(Ark_NativePointer node,
                             const Opt_AnimationMode* value);
    void (*setEdgeEffect)(Ark_NativePointer node,
                          const Opt_EdgeEffect* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Number_Void* value);
    void (*setOnSelected)(Ark_NativePointer node,
                          const Opt_Callback_Number_Void* value);
    void (*setOnTabBarClick)(Ark_NativePointer node,
                             const Opt_Callback_Number_Void* value);
    void (*setOnUnselected)(Ark_NativePointer node,
                            const Opt_Callback_Number_Void* value);
    void (*setOnAnimationStart)(Ark_NativePointer node,
                                const Opt_OnTabsAnimationStartCallback* value);
    void (*setOnAnimationEnd)(Ark_NativePointer node,
                              const Opt_OnTabsAnimationEndCallback* value);
    void (*setOnGestureSwipe)(Ark_NativePointer node,
                              const Opt_OnTabsGestureSwipeCallback* value);
    void (*setFadingEdge)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_DividerStyle* value);
    void (*setBarOverlap)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setBarBackgroundColor)(Ark_NativePointer node,
                                  const Opt_ResourceColor* value);
    void (*setBarGridAlign)(Ark_NativePointer node,
                            const Opt_BarGridColumnOptions* value);
    void (*setCustomContentTransition)(Ark_NativePointer node,
                                       const Opt_TabsCustomContentTransitionCallback* value);
    void (*setBarBackgroundBlurStyle0)(Ark_NativePointer node,
                                       const Opt_BlurStyle* value);
    void (*setPageFlipMode)(Ark_NativePointer node,
                            const Opt_PageFlipMode* value);
    void (*setBarBackgroundEffect)(Ark_NativePointer node,
                                   const Opt_BackgroundEffectOptions* value);
    void (*setOnContentWillChange)(Ark_NativePointer node,
                                   const Opt_OnTabsContentWillChangeCallback* value);
    void (*setBarMode)(Ark_NativePointer node,
                       const Opt_BarMode* value,
                       const Opt_ScrollableBarModeOptions* options);
    void (*setBarBackgroundBlurStyle1)(Ark_NativePointer node,
                                       const Opt_BlurStyle* style,
                                       const Opt_BackgroundBlurStyleOptions* options);
    void (*setCachedMaxCount)(Ark_NativePointer node,
                              const Opt_Number* count,
                              const Opt_TabsCacheMode* mode);
    void (*set_onChangeEvent_index)(Ark_NativePointer node,
                                    const Callback_Number_Void* callback_);
} GENERATED_ArkUITabsModifier;

typedef struct GENERATED_ArkUITextModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextOptions)(Ark_NativePointer node,
                           const Opt_Union_String_Resource* content,
                           const Opt_TextOptions* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Union_Number_String_Resource* value);
    void (*setMinFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMaxFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setLineSpacing)(Ark_NativePointer node,
                           const Opt_LengthMetrics* value);
    void (*setTextAlign)(Ark_NativePointer node,
                         const Opt_TextAlign* value);
    void (*setLineHeight)(Ark_NativePointer node,
                          const Opt_Union_Number_String_Resource* value);
    void (*setTextOverflow)(Ark_NativePointer node,
                            const Opt_TextOverflowOptions* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_Union_String_Resource* value);
    void (*setMaxLines)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setDecoration)(Ark_NativePointer node,
                          const Opt_DecorationStyleInterface* value);
    void (*setLetterSpacing)(Ark_NativePointer node,
                             const Opt_Union_Number_String* value);
    void (*setTextCase)(Ark_NativePointer node,
                        const Opt_TextCase* value);
    void (*setBaselineOffset)(Ark_NativePointer node,
                              const Opt_Union_Number_String* value);
    void (*setCopyOption)(Ark_NativePointer node,
                          const Opt_CopyOptions* value);
    void (*setDraggable)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setTextShadow)(Ark_NativePointer node,
                          const Opt_Union_ShadowOptions_Array_ShadowOptions* value);
    void (*setHeightAdaptivePolicy)(Ark_NativePointer node,
                                    const Opt_TextHeightAdaptivePolicy* value);
    void (*setTextIndent)(Ark_NativePointer node,
                          const Opt_Length* value);
    void (*setWordBreak)(Ark_NativePointer node,
                         const Opt_WordBreak* value);
    void (*setLineBreakStrategy)(Ark_NativePointer node,
                                 const Opt_LineBreakStrategy* value);
    void (*setOnCopy)(Ark_NativePointer node,
                      const Opt_Callback_String_Void* value);
    void (*setCaretColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setEllipsisMode)(Ark_NativePointer node,
                            const Opt_EllipsisMode* value);
    void (*setEnableDataDetector)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
    void (*setDataDetectorConfig)(Ark_NativePointer node,
                                  const Opt_TextDataDetectorConfig* value);
    void (*setOnTextSelectionChange)(Ark_NativePointer node,
                                     const Opt_Callback_Number_Number_Void* value);
    void (*setFontFeature)(Ark_NativePointer node,
                           const Opt_String* value);
    void (*setMarqueeOptions)(Ark_NativePointer node,
                              const Opt_TextMarqueeOptions* value);
    void (*setOnMarqueeStateChange)(Ark_NativePointer node,
                                    const Opt_Callback_MarqueeState_Void* value);
    void (*setPrivacySensitive)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setTextSelectable)(Ark_NativePointer node,
                              const Opt_TextSelectableMode* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setHalfLeading)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setFont)(Ark_NativePointer node,
                    const Opt_Font* fontValue,
                    const Opt_FontSettingOptions* options);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* weight,
                          const Opt_FontSettingOptions* options);
    void (*setSelection)(Ark_NativePointer node,
                         const Opt_Number* selectionStart,
                         const Opt_Number* selectionEnd);
    void (*setBindSelectionMenu)(Ark_NativePointer node,
                                 const Opt_TextSpanType* spanType,
                                 const Opt_CustomNodeBuilder* content,
                                 const Opt_TextResponseType* responseType,
                                 const Opt_SelectionMenuOptions* options);
} GENERATED_ArkUITextModifier;

typedef struct GENERATED_ArkUITextAreaModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextAreaOptions)(Ark_NativePointer node,
                               const Opt_TextAreaOptions* value);
    void (*setPlaceholderColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setPlaceholderFont)(Ark_NativePointer node,
                               const Opt_Font* value);
    void (*setEnterKeyType)(Ark_NativePointer node,
                            const Opt_EnterKeyType* value);
    void (*setTextAlign)(Ark_NativePointer node,
                         const Opt_TextAlign* value);
    void (*setCaretColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_ResourceStr* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_ResourceStr* value);
    void (*setTextOverflow)(Ark_NativePointer node,
                            const Opt_TextOverflow* value);
    void (*setTextIndent)(Ark_NativePointer node,
                          const Opt_Dimension* value);
    void (*setCaretStyle)(Ark_NativePointer node,
                          const Opt_CaretStyle* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setOnSubmit)(Ark_NativePointer node,
                        const Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_EditableTextOnChangeCallback* value);
    void (*setOnTextSelectionChange)(Ark_NativePointer node,
                                     const Opt_Callback_Number_Number_Void* value);
    void (*setOnContentScroll)(Ark_NativePointer node,
                               const Opt_Callback_Number_Number_Void* value);
    void (*setOnEditChange)(Ark_NativePointer node,
                            const Opt_Callback_Boolean_Void* value);
    void (*setOnCopy)(Ark_NativePointer node,
                      const Opt_Callback_String_Void* value);
    void (*setOnCut)(Ark_NativePointer node,
                     const Opt_Callback_String_Void* value);
    void (*setOnPaste)(Ark_NativePointer node,
                       const Opt_Callback_String_PasteEvent_Void* value);
    void (*setCopyOption)(Ark_NativePointer node,
                          const Opt_CopyOptions* value);
    void (*setEnableKeyboardOnFocus)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setMaxLength)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setStyle)(Ark_NativePointer node,
                     const Opt_TextContentStyle* value);
    void (*setBarState)(Ark_NativePointer node,
                        const Opt_BarState* value);
    void (*setSelectionMenuHidden)(Ark_NativePointer node,
                                   const Opt_Boolean* value);
    void (*setMinFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMaxFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setHeightAdaptivePolicy)(Ark_NativePointer node,
                                    const Opt_TextHeightAdaptivePolicy* value);
    void (*setMaxLines)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setWordBreak)(Ark_NativePointer node,
                         const Opt_WordBreak* value);
    void (*setLineBreakStrategy)(Ark_NativePointer node,
                                 const Opt_LineBreakStrategy* value);
    void (*setDecoration)(Ark_NativePointer node,
                          const Opt_TextDecorationOptions* value);
    void (*setLetterSpacing)(Ark_NativePointer node,
                             const Opt_Union_Number_String_Resource* value);
    void (*setLineSpacing)(Ark_NativePointer node,
                           const Opt_LengthMetrics* value);
    void (*setLineHeight)(Ark_NativePointer node,
                          const Opt_Union_Number_String_Resource* value);
    void (*setType)(Ark_NativePointer node,
                    const Opt_TextAreaType* value);
    void (*setEnableAutoFill)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setContentType)(Ark_NativePointer node,
                           const Opt_ContentType* value);
    void (*setFontFeature)(Ark_NativePointer node,
                           const Opt_String* value);
    void (*setOnWillInsert)(Ark_NativePointer node,
                            const Opt_Callback_InsertValue_Boolean* value);
    void (*setOnDidInsert)(Ark_NativePointer node,
                           const Opt_Callback_InsertValue_Void* value);
    void (*setOnWillDelete)(Ark_NativePointer node,
                            const Opt_Callback_DeleteValue_Boolean* value);
    void (*setOnDidDelete)(Ark_NativePointer node,
                           const Opt_Callback_DeleteValue_Void* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setEnablePreviewText)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setAutoCapitalizationMode)(Ark_NativePointer node,
                                      const Opt_AutoCapitalizationMode* value);
    void (*setHalfLeading)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setEllipsisMode)(Ark_NativePointer node,
                            const Opt_EllipsisMode* value);
    void (*setStopBackPress)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setOnWillChange)(Ark_NativePointer node,
                            const Opt_Callback_EditableTextChangeValue_Boolean* value);
    void (*setKeyboardAppearance)(Ark_NativePointer node,
                                  const Opt_KeyboardAppearance* value);
    void (*setInputFilter)(Ark_NativePointer node,
                           const Opt_ResourceStr* value,
                           const Opt_Callback_String_Void* error);
    void (*setShowCounter)(Ark_NativePointer node,
                           const Opt_Boolean* value,
                           const Opt_InputCounterOptions* options);
    void (*setCustomKeyboard)(Ark_NativePointer node,
                              const Opt_CustomNodeBuilder* value,
                              const Opt_KeyboardOptions* options);
    void (*set_onChangeEvent_text)(Ark_NativePointer node,
                                   const Callback_Union_ResourceStr_Resource_String_Void* callback_);
} GENERATED_ArkUITextAreaModifier;

typedef struct GENERATED_ArkUITextClockModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextClockOptions)(Ark_NativePointer node,
                                const Opt_TextClockOptions* options);
    void (*setFormat)(Ark_NativePointer node,
                      const Opt_ResourceStr* value);
    void (*setOnDateChange)(Ark_NativePointer node,
                            const Opt_Callback_Number_Void* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_String* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_ResourceStr* value);
    void (*setTextShadow)(Ark_NativePointer node,
                          const Opt_Union_ShadowOptions_Array_ShadowOptions* value);
    void (*setFontFeature)(Ark_NativePointer node,
                           const Opt_String* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*setDateTimeOptions)(Ark_NativePointer node,
                               const Opt_intl_DateTimeOptions* value);
} GENERATED_ArkUITextClockModifier;

typedef struct GENERATED_ArkUITextInputModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextInputOptions)(Ark_NativePointer node,
                                const Opt_TextInputOptions* value);
    void (*setType)(Ark_NativePointer node,
                    const Opt_InputType* value);
    void (*setContentType)(Ark_NativePointer node,
                           const Opt_ContentType* value);
    void (*setPlaceholderColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setTextOverflow)(Ark_NativePointer node,
                            const Opt_TextOverflow* value);
    void (*setTextIndent)(Ark_NativePointer node,
                          const Opt_Dimension* value);
    void (*setPlaceholderFont)(Ark_NativePointer node,
                               const Opt_Font* value);
    void (*setEnterKeyType)(Ark_NativePointer node,
                            const Opt_EnterKeyType* value);
    void (*setCaretColor)(Ark_NativePointer node,
                          const Opt_ResourceColor* value);
    void (*setOnEditChange)(Ark_NativePointer node,
                            const Opt_Callback_Boolean_Void* value);
    void (*setOnSubmit)(Ark_NativePointer node,
                        const Opt_OnSubmitCallback* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_EditableTextOnChangeCallback* value);
    void (*setOnTextSelectionChange)(Ark_NativePointer node,
                                     const Opt_OnTextSelectionChangeCallback* value);
    void (*setOnContentScroll)(Ark_NativePointer node,
                               const Opt_OnContentScrollCallback* value);
    void (*setMaxLength)(Ark_NativePointer node,
                         const Opt_Number* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_ResourceStr* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_ResourceStr* value);
    void (*setOnCopy)(Ark_NativePointer node,
                      const Opt_Callback_String_Void* value);
    void (*setOnCut)(Ark_NativePointer node,
                     const Opt_Callback_String_Void* value);
    void (*setOnPaste)(Ark_NativePointer node,
                       const Opt_OnPasteCallback* value);
    void (*setCopyOption)(Ark_NativePointer node,
                          const Opt_CopyOptions* value);
    void (*setShowPasswordIcon)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setTextAlign)(Ark_NativePointer node,
                         const Opt_TextAlign* value);
    void (*setStyle)(Ark_NativePointer node,
                     const Opt_Union_TextInputStyle_TextContentStyle* value);
    void (*setCaretStyle)(Ark_NativePointer node,
                          const Opt_CaretStyle* value);
    void (*setSelectedBackgroundColor)(Ark_NativePointer node,
                                       const Opt_ResourceColor* value);
    void (*setCaretPosition)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*setEnableKeyboardOnFocus)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setPasswordIcon)(Ark_NativePointer node,
                            const Opt_PasswordIcon* value);
    void (*setShowError)(Ark_NativePointer node,
                         const Opt_ResourceStr* value);
    void (*setShowUnit)(Ark_NativePointer node,
                        const Opt_CustomNodeBuilder* value);
    void (*setShowUnderline)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setUnderlineColor)(Ark_NativePointer node,
                              const Opt_Union_ResourceColor_UnderlineColor* value);
    void (*setSelectionMenuHidden)(Ark_NativePointer node,
                                   const Opt_Boolean* value);
    void (*setBarState)(Ark_NativePointer node,
                        const Opt_BarState* value);
    void (*setMaxLines)(Ark_NativePointer node,
                        const Opt_Number* value);
    void (*setWordBreak)(Ark_NativePointer node,
                         const Opt_WordBreak* value);
    void (*setLineBreakStrategy)(Ark_NativePointer node,
                                 const Opt_LineBreakStrategy* value);
    void (*setCancelButton)(Ark_NativePointer node,
                            const Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions* value);
    void (*setSelectAll)(Ark_NativePointer node,
                         const Opt_Boolean* value);
    void (*setMinFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMaxFontSize)(Ark_NativePointer node,
                           const Opt_Union_Number_String_Resource* value);
    void (*setMinFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setMaxFontScale)(Ark_NativePointer node,
                            const Opt_Union_Number_Resource* value);
    void (*setHeightAdaptivePolicy)(Ark_NativePointer node,
                                    const Opt_TextHeightAdaptivePolicy* value);
    void (*setEnableAutoFill)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setDecoration)(Ark_NativePointer node,
                          const Opt_TextDecorationOptions* value);
    void (*setLetterSpacing)(Ark_NativePointer node,
                             const Opt_Union_Number_String_Resource* value);
    void (*setLineHeight)(Ark_NativePointer node,
                          const Opt_Union_Number_String_Resource* value);
    void (*setPasswordRules)(Ark_NativePointer node,
                             const Opt_String* value);
    void (*setFontFeature)(Ark_NativePointer node,
                           const Opt_String* value);
    void (*setShowPassword)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setOnSecurityStateChange)(Ark_NativePointer node,
                                     const Opt_Callback_Boolean_Void* value);
    void (*setOnWillInsert)(Ark_NativePointer node,
                            const Opt_Callback_InsertValue_Boolean* value);
    void (*setOnDidInsert)(Ark_NativePointer node,
                           const Opt_Callback_InsertValue_Void* value);
    void (*setOnWillDelete)(Ark_NativePointer node,
                            const Opt_Callback_DeleteValue_Boolean* value);
    void (*setOnDidDelete)(Ark_NativePointer node,
                           const Opt_Callback_DeleteValue_Void* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setEnablePreviewText)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setAutoCapitalizationMode)(Ark_NativePointer node,
                                      const Opt_AutoCapitalizationMode* value);
    void (*setHalfLeading)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setEllipsisMode)(Ark_NativePointer node,
                            const Opt_EllipsisMode* value);
    void (*setStopBackPress)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*setOnWillChange)(Ark_NativePointer node,
                            const Opt_Callback_EditableTextChangeValue_Boolean* value);
    void (*setKeyboardAppearance)(Ark_NativePointer node,
                                  const Opt_KeyboardAppearance* value);
    void (*setInputFilter)(Ark_NativePointer node,
                           const Opt_ResourceStr* value,
                           const Opt_Callback_String_Void* error);
    void (*setCustomKeyboard)(Ark_NativePointer node,
                              const Opt_CustomNodeBuilder* value,
                              const Opt_KeyboardOptions* options);
    void (*setShowCounter)(Ark_NativePointer node,
                           const Opt_Boolean* value,
                           const Opt_InputCounterOptions* options);
    void (*set_onChangeEvent_text)(Ark_NativePointer node,
                                   const Callback_Union_ResourceStr_Resource_String_Void* callback_);
} GENERATED_ArkUITextInputModifier;

typedef struct GENERATED_ArkUITextPickerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextPickerOptions)(Ark_NativePointer node,
                                 const Opt_TextPickerOptions* options);
    void (*setDefaultPickerItemHeight)(Ark_NativePointer node,
                                       const Opt_Union_Number_String* value);
    void (*setCanLoop)(Ark_NativePointer node,
                       const Opt_Boolean* value);
    void (*setDisappearTextStyle)(Ark_NativePointer node,
                                  const Opt_PickerTextStyle* value);
    void (*setTextStyle)(Ark_NativePointer node,
                         const Opt_PickerTextStyle* value);
    void (*setSelectedTextStyle)(Ark_NativePointer node,
                                 const Opt_PickerTextStyle* value);
    void (*setDisableTextStyleAnimation)(Ark_NativePointer node,
                                         const Opt_Boolean* value);
    void (*setDefaultTextStyle)(Ark_NativePointer node,
                                const Opt_TextPickerTextStyle* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnTextPickerChangeCallback* value);
    void (*setOnScrollStop)(Ark_NativePointer node,
                            const Opt_TextPickerScrollStopCallback* value);
    void (*setOnEnterSelectedArea)(Ark_NativePointer node,
                                   const Opt_TextPickerEnterSelectedAreaCallback* value);
    void (*setSelectedIndex)(Ark_NativePointer node,
                             const Opt_Union_Number_Array_Number* value);
    void (*setDivider)(Ark_NativePointer node,
                       const Opt_DividerOptions* value);
    void (*setGradientHeight)(Ark_NativePointer node,
                              const Opt_Dimension* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setDigitalCrownSensitivity)(Ark_NativePointer node,
                                       const Opt_CrownSensitivity* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Union_Number_Array_Number_Void* callback_);
    void (*set_onChangeEvent_value)(Ark_NativePointer node,
                                    const Callback_Union_ResourceStr_Array_ResourceStr_Void* callback_);
} GENERATED_ArkUITextPickerModifier;

typedef struct GENERATED_ArkUITextTimerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTextTimerOptions)(Ark_NativePointer node,
                                const Opt_TextTimerOptions* options);
    void (*setFormat)(Ark_NativePointer node,
                      const Opt_String* value);
    void (*setFontColor)(Ark_NativePointer node,
                         const Opt_ResourceColor* value);
    void (*setFontSize)(Ark_NativePointer node,
                        const Opt_Length* value);
    void (*setFontStyle)(Ark_NativePointer node,
                         const Opt_FontStyle* value);
    void (*setFontWeight)(Ark_NativePointer node,
                          const Opt_Union_Number_FontWeight_ResourceStr* value);
    void (*setFontFamily)(Ark_NativePointer node,
                          const Opt_ResourceStr* value);
    void (*setOnTimer)(Ark_NativePointer node,
                       const Opt_Callback_Number_Number_Void* value);
    void (*setTextShadow)(Ark_NativePointer node,
                          const Opt_Union_ShadowOptions_Array_ShadowOptions* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
} GENERATED_ArkUITextTimerModifier;

typedef struct GENERATED_ArkUITimePickerModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setTimePickerOptions)(Ark_NativePointer node,
                                 const Opt_TimePickerOptions* options);
    void (*setUseMilitaryTime)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setLoop)(Ark_NativePointer node,
                    const Opt_Boolean* value);
    void (*setDisappearTextStyle)(Ark_NativePointer node,
                                  const Opt_PickerTextStyle* value);
    void (*setTextStyle)(Ark_NativePointer node,
                         const Opt_PickerTextStyle* value);
    void (*setSelectedTextStyle)(Ark_NativePointer node,
                                 const Opt_PickerTextStyle* value);
    void (*setDateTimeOptions)(Ark_NativePointer node,
                               const Opt_intl_DateTimeOptions* value);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_OnTimePickerChangeCallback* value);
    void (*setOnEnterSelectedArea)(Ark_NativePointer node,
                                   const Opt_Callback_TimePickerResult_Void* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setDigitalCrownSensitivity)(Ark_NativePointer node,
                                       const Opt_CrownSensitivity* value);
    void (*setEnableCascade)(Ark_NativePointer node,
                             const Opt_Boolean* value);
    void (*set_onChangeEvent_selected)(Ark_NativePointer node,
                                       const Callback_Date_Void* callback_);
} GENERATED_ArkUITimePickerModifier;

typedef struct GENERATED_ArkUIToggleModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setToggleOptions)(Ark_NativePointer node,
                             const Ark_ToggleOptions* options);
    void (*setOnChange)(Ark_NativePointer node,
                        const Opt_Callback_Boolean_Void* value);
    void (*setContentModifier)(Ark_NativePointer node,
                               const Opt_ContentModifier* value);
    void (*setSelectedColor)(Ark_NativePointer node,
                             const Opt_ResourceColor* value);
    void (*setSwitchPointColor)(Ark_NativePointer node,
                                const Opt_ResourceColor* value);
    void (*setSwitchStyle)(Ark_NativePointer node,
                           const Opt_SwitchStyle* value);
    void (*set_onChangeEvent_isOn)(Ark_NativePointer node,
                                   const Callback_Opt_Boolean_Void* callback_);
} GENERATED_ArkUIToggleModifier;

typedef struct GENERATED_ArkUIUIExtensionComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setUIExtensionComponentOptions)(Ark_NativePointer node,
                                           const Ark_Want* want,
                                           const Opt_UIExtensionOptions* options);
    void (*setOnRemoteReady)(Ark_NativePointer node,
                             const Opt_Callback_UIExtensionProxy_Void* value);
    void (*setOnReceive)(Ark_NativePointer node,
                         const Opt_Callback_Map_String_Object_Void* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_ErrorCallback* value);
    void (*setOnTerminated)(Ark_NativePointer node,
                            const Opt_Callback_TerminationInfo_Void* value);
    void (*setOnDrawReady)(Ark_NativePointer node,
                           const Opt_Callback_Void* value);
} GENERATED_ArkUIUIExtensionComponentModifier;

typedef struct GENERATED_ArkUIVideoModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setVideoOptions)(Ark_NativePointer node,
                            const Ark_VideoOptions* value);
    void (*setMuted)(Ark_NativePointer node,
                     const Opt_Boolean* value);
    void (*setAutoPlay)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setControls)(Ark_NativePointer node,
                        const Opt_Boolean* value);
    void (*setLoop)(Ark_NativePointer node,
                    const Opt_Boolean* value);
    void (*setObjectFit)(Ark_NativePointer node,
                         const Opt_ImageFit* value);
    void (*setOnStart)(Ark_NativePointer node,
                       const Opt_VoidCallback* value);
    void (*setOnPause)(Ark_NativePointer node,
                       const Opt_VoidCallback* value);
    void (*setOnFinish)(Ark_NativePointer node,
                        const Opt_VoidCallback* value);
    void (*setOnFullscreenChange)(Ark_NativePointer node,
                                  const Opt_Callback_FullscreenInfo_Void* value);
    void (*setOnPrepared)(Ark_NativePointer node,
                          const Opt_Callback_PreparedInfo_Void* value);
    void (*setOnSeeking)(Ark_NativePointer node,
                         const Opt_Callback_PlaybackInfo_Void* value);
    void (*setOnSeeked)(Ark_NativePointer node,
                        const Opt_Callback_PlaybackInfo_Void* value);
    void (*setOnUpdate)(Ark_NativePointer node,
                        const Opt_Callback_PlaybackInfo_Void* value);
    void (*setOnError)(Ark_NativePointer node,
                       const Opt_Callback_Void* value);
    void (*setOnStop)(Ark_NativePointer node,
                      const Opt_Callback_Void* value);
    void (*setEnableAnalyzer)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setAnalyzerConfig)(Ark_NativePointer node,
                              const Opt_ImageAnalyzerConfig* value);
    void (*setSurfaceBackgroundColor)(Ark_NativePointer node,
                                      const Opt_ColorMetrics* value);
    void (*setEnableShortcutKey)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
} GENERATED_ArkUIVideoModifier;

typedef struct GENERATED_ArkUIWaterFlowModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setWaterFlowOptions)(Ark_NativePointer node,
                                const Opt_WaterFlowOptions* options);
    void (*setColumnsTemplate)(Ark_NativePointer node,
                               const Opt_String* value);
    void (*setItemConstraintSize)(Ark_NativePointer node,
                                  const Opt_ConstraintSizeOptions* value);
    void (*setRowsTemplate)(Ark_NativePointer node,
                            const Opt_String* value);
    void (*setColumnsGap)(Ark_NativePointer node,
                          const Opt_Length* value);
    void (*setRowsGap)(Ark_NativePointer node,
                       const Opt_Length* value);
    void (*setLayoutDirection)(Ark_NativePointer node,
                               const Opt_FlexDirection* value);
    void (*setCachedCount0)(Ark_NativePointer node,
                            const Opt_Number* value);
    void (*setOnScrollFrameBegin)(Ark_NativePointer node,
                                  const Opt_OnScrollFrameBeginCallback* value);
    void (*setOnScrollIndex)(Ark_NativePointer node,
                             const Opt_Callback_Number_Number_Void* value);
    void (*setOnWillScroll)(Ark_NativePointer node,
                            const Opt_OnWillScrollCallback* value);
    void (*setOnDidScroll)(Ark_NativePointer node,
                           const Opt_OnScrollCallback* value);
    void (*setCachedCount1)(Ark_NativePointer node,
                            const Opt_Number* count,
                            const Opt_Boolean* show);
} GENERATED_ArkUIWaterFlowModifier;

typedef struct GENERATED_ArkUIWebModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setWebOptions)(Ark_NativePointer node,
                          const Ark_WebOptions* value);
    void (*setJavaScriptAccess)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setFileAccess)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setOnlineImageAccess)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setDomStorageAccess)(Ark_NativePointer node,
                                const Opt_Boolean* value);
    void (*setImageAccess)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setMixedMode)(Ark_NativePointer node,
                         const Opt_MixedMode* value);
    void (*setZoomAccess)(Ark_NativePointer node,
                          const Opt_Boolean* value);
    void (*setGeolocationAccess)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setJavaScriptProxy)(Ark_NativePointer node,
                               const Opt_JavaScriptProxy* value);
    void (*setCacheMode)(Ark_NativePointer node,
                         const Opt_CacheMode* value);
    void (*setDarkMode)(Ark_NativePointer node,
                        const Opt_WebDarkMode* value);
    void (*setForceDarkAccess)(Ark_NativePointer node,
                               const Opt_Boolean* value);
    void (*setMediaOptions)(Ark_NativePointer node,
                            const Opt_WebMediaOptions* value);
    void (*setOverviewModeAccess)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
    void (*setOverScrollMode)(Ark_NativePointer node,
                              const Opt_OverScrollMode* value);
    void (*setBlurOnKeyboardHideMode)(Ark_NativePointer node,
                                      const Opt_BlurOnKeyboardHideMode* value);
    void (*setTextZoomRatio)(Ark_NativePointer node,
                             const Opt_Int32* value);
    void (*setDatabaseAccess)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setInitialScale)(Ark_NativePointer node,
                            const Opt_Float64* value);
    void (*setMetaViewport)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setOnPageEnd)(Ark_NativePointer node,
                         const Opt_Callback_OnPageEndEvent_Void* value);
    void (*setOnPageBegin)(Ark_NativePointer node,
                           const Opt_Callback_OnPageBeginEvent_Void* value);
    void (*setOnProgressChange)(Ark_NativePointer node,
                                const Opt_Callback_OnProgressChangeEvent_Void* value);
    void (*setOnTitleReceive)(Ark_NativePointer node,
                              const Opt_Callback_OnTitleReceiveEvent_Void* value);
    void (*setOnGeolocationHide)(Ark_NativePointer node,
                                 const Opt_Callback_Void* value);
    void (*setOnGeolocationShow)(Ark_NativePointer node,
                                 const Opt_Callback_OnGeolocationShowEvent_Void* value);
    void (*setOnRequestSelected)(Ark_NativePointer node,
                                 const Opt_Callback_Void* value);
    void (*setOnAlert)(Ark_NativePointer node,
                       const Opt_Callback_OnAlertEvent_Boolean* value);
    void (*setOnBeforeUnload)(Ark_NativePointer node,
                              const Opt_Callback_OnBeforeUnloadEvent_Boolean* value);
    void (*setOnConfirm)(Ark_NativePointer node,
                         const Opt_Callback_OnConfirmEvent_Boolean* value);
    void (*setOnPrompt)(Ark_NativePointer node,
                        const Opt_Callback_OnPromptEvent_Boolean* value);
    void (*setOnConsole)(Ark_NativePointer node,
                         const Opt_Callback_OnConsoleEvent_Boolean* value);
    void (*setOnErrorReceive)(Ark_NativePointer node,
                              const Opt_Callback_OnErrorReceiveEvent_Void* value);
    void (*setOnHttpErrorReceive)(Ark_NativePointer node,
                                  const Opt_Callback_OnHttpErrorReceiveEvent_Void* value);
    void (*setOnDownloadStart)(Ark_NativePointer node,
                               const Opt_Callback_OnDownloadStartEvent_Void* value);
    void (*setOnRefreshAccessedHistory)(Ark_NativePointer node,
                                        const Opt_Callback_OnRefreshAccessedHistoryEvent_Void* value);
    void (*setOnRenderExited)(Ark_NativePointer node,
                              const Opt_Callback_OnRenderExitedEvent_Void* value);
    void (*setOnShowFileSelector)(Ark_NativePointer node,
                                  const Opt_Callback_OnShowFileSelectorEvent_Boolean* value);
    void (*setOnResourceLoad)(Ark_NativePointer node,
                              const Opt_Callback_OnResourceLoadEvent_Void* value);
    void (*setOnFullScreenExit)(Ark_NativePointer node,
                                const Opt_Callback_Void* value);
    void (*setOnFullScreenEnter)(Ark_NativePointer node,
                                 const Opt_OnFullScreenEnterCallback* value);
    void (*setOnScaleChange)(Ark_NativePointer node,
                             const Opt_Callback_OnScaleChangeEvent_Void* value);
    void (*setOnHttpAuthRequest)(Ark_NativePointer node,
                                 const Opt_Callback_OnHttpAuthRequestEvent_Boolean* value);
    void (*setOnInterceptRequest)(Ark_NativePointer node,
                                  const Opt_Callback_OnInterceptRequestEvent_WebResourceResponse* value);
    void (*setOnPermissionRequest)(Ark_NativePointer node,
                                   const Opt_Callback_OnPermissionRequestEvent_Void* value);
    void (*setOnScreenCaptureRequest)(Ark_NativePointer node,
                                      const Opt_Callback_OnScreenCaptureRequestEvent_Void* value);
    void (*setOnContextMenuShow)(Ark_NativePointer node,
                                 const Opt_Callback_OnContextMenuShowEvent_Boolean* value);
    void (*setOnContextMenuHide)(Ark_NativePointer node,
                                 const Opt_OnContextMenuHideCallback* value);
    void (*setMediaPlayGestureAccess)(Ark_NativePointer node,
                                      const Opt_Boolean* value);
    void (*setOnSearchResultReceive)(Ark_NativePointer node,
                                     const Opt_Callback_OnSearchResultReceiveEvent_Void* value);
    void (*setOnScroll)(Ark_NativePointer node,
                        const Opt_Callback_OnScrollEvent_Void* value);
    void (*setOnSslErrorEventReceive)(Ark_NativePointer node,
                                      const Opt_Callback_OnSslErrorEventReceiveEvent_Void* value);
    void (*setOnSslErrorEvent)(Ark_NativePointer node,
                               const Opt_OnSslErrorEventCallback* value);
    void (*setOnClientAuthenticationRequest)(Ark_NativePointer node,
                                             const Opt_Callback_OnClientAuthenticationEvent_Void* value);
    void (*setOnWindowNew)(Ark_NativePointer node,
                           const Opt_Callback_OnWindowNewEvent_Void* value);
    void (*setOnWindowExit)(Ark_NativePointer node,
                            const Opt_Callback_Void* value);
    void (*setMultiWindowAccess)(Ark_NativePointer node,
                                 const Opt_Boolean* value);
    void (*setOnInterceptKeyEvent)(Ark_NativePointer node,
                                   const Opt_Callback_KeyEvent_Boolean* value);
    void (*setWebStandardFont)(Ark_NativePointer node,
                               const Opt_String* value);
    void (*setWebSerifFont)(Ark_NativePointer node,
                            const Opt_String* value);
    void (*setWebSansSerifFont)(Ark_NativePointer node,
                                const Opt_String* value);
    void (*setWebFixedFont)(Ark_NativePointer node,
                            const Opt_String* value);
    void (*setWebFantasyFont)(Ark_NativePointer node,
                              const Opt_String* value);
    void (*setWebCursiveFont)(Ark_NativePointer node,
                              const Opt_String* value);
    void (*setDefaultFixedFontSize)(Ark_NativePointer node,
                                    const Opt_Int32* value);
    void (*setDefaultFontSize)(Ark_NativePointer node,
                               const Opt_Int32* value);
    void (*setMinFontSize)(Ark_NativePointer node,
                           const Opt_Int32* value);
    void (*setMinLogicalFontSize)(Ark_NativePointer node,
                                  const Opt_Int32* value);
    void (*setDefaultTextEncodingFormat)(Ark_NativePointer node,
                                         const Opt_String* value);
    void (*setForceDisplayScrollBar)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setBlockNetwork)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setHorizontalScrollBarAccess)(Ark_NativePointer node,
                                         const Opt_Boolean* value);
    void (*setVerticalScrollBarAccess)(Ark_NativePointer node,
                                       const Opt_Boolean* value);
    void (*setOnTouchIconUrlReceived)(Ark_NativePointer node,
                                      const Opt_Callback_OnTouchIconUrlReceivedEvent_Void* value);
    void (*setOnFaviconReceived)(Ark_NativePointer node,
                                 const Opt_Callback_OnFaviconReceivedEvent_Void* value);
    void (*setOnPageVisible)(Ark_NativePointer node,
                             const Opt_Callback_OnPageVisibleEvent_Void* value);
    void (*setOnDataResubmitted)(Ark_NativePointer node,
                                 const Opt_Callback_OnDataResubmittedEvent_Void* value);
    void (*setPinchSmooth)(Ark_NativePointer node,
                           const Opt_Boolean* value);
    void (*setAllowWindowOpenMethod)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setOnAudioStateChanged)(Ark_NativePointer node,
                                   const Opt_Callback_OnAudioStateChangedEvent_Void* value);
    void (*setOnFirstContentfulPaint)(Ark_NativePointer node,
                                      const Opt_Callback_OnFirstContentfulPaintEvent_Void* value);
    void (*setOnFirstMeaningfulPaint)(Ark_NativePointer node,
                                      const Opt_OnFirstMeaningfulPaintCallback* value);
    void (*setOnLargestContentfulPaint)(Ark_NativePointer node,
                                        const Opt_OnLargestContentfulPaintCallback* value);
    void (*setOnLoadIntercept)(Ark_NativePointer node,
                               const Opt_Callback_OnLoadInterceptEvent_Boolean* value);
    void (*setOnControllerAttached)(Ark_NativePointer node,
                                    const Opt_Callback_Void* value);
    void (*setOnOverScroll)(Ark_NativePointer node,
                            const Opt_Callback_OnOverScrollEvent_Void* value);
    void (*setOnSafeBrowsingCheckResult)(Ark_NativePointer node,
                                         const Opt_OnSafeBrowsingCheckResultCallback* value);
    void (*setOnNavigationEntryCommitted)(Ark_NativePointer node,
                                          const Opt_OnNavigationEntryCommittedCallback* value);
    void (*setOnIntelligentTrackingPreventionResult)(Ark_NativePointer node,
                                                     const Opt_OnIntelligentTrackingPreventionCallback* value);
    void (*setJavaScriptOnDocumentStart)(Ark_NativePointer node,
                                         const Opt_Array_ScriptItem* value);
    void (*setJavaScriptOnDocumentEnd)(Ark_NativePointer node,
                                       const Opt_Array_ScriptItem* value);
    void (*setLayoutMode)(Ark_NativePointer node,
                          const Opt_WebLayoutMode* value);
    void (*setNestedScroll)(Ark_NativePointer node,
                            const Opt_Union_NestedScrollOptions_NestedScrollOptionsExt* value);
    void (*setEnableNativeEmbedMode)(Ark_NativePointer node,
                                     const Opt_Boolean* value);
    void (*setOnNativeEmbedLifecycleChange)(Ark_NativePointer node,
                                            const Opt_Callback_NativeEmbedDataInfo_Void* value);
    void (*setOnNativeEmbedVisibilityChange)(Ark_NativePointer node,
                                             const Opt_OnNativeEmbedVisibilityChangeCallback* value);
    void (*setOnNativeEmbedGestureEvent)(Ark_NativePointer node,
                                         const Opt_Callback_NativeEmbedTouchInfo_Void* value);
    void (*setCopyOptions)(Ark_NativePointer node,
                           const Opt_CopyOptions* value);
    void (*setOnOverrideUrlLoading)(Ark_NativePointer node,
                                    const Opt_OnOverrideUrlLoadingCallback* value);
    void (*setTextAutosizing)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setEnableNativeMediaPlayer)(Ark_NativePointer node,
                                       const Opt_NativeMediaPlayerConfig* value);
    void (*setOnRenderProcessNotResponding)(Ark_NativePointer node,
                                            const Opt_OnRenderProcessNotRespondingCallback* value);
    void (*setOnRenderProcessResponding)(Ark_NativePointer node,
                                         const Opt_OnRenderProcessRespondingCallback* value);
    void (*setOnViewportFitChanged)(Ark_NativePointer node,
                                    const Opt_OnViewportFitChangedCallback* value);
    void (*setOnInterceptKeyboardAttach)(Ark_NativePointer node,
                                         const Opt_WebKeyboardCallback* value);
    void (*setOnAdsBlocked)(Ark_NativePointer node,
                            const Opt_OnAdsBlockedCallback* value);
    void (*setKeyboardAvoidMode)(Ark_NativePointer node,
                                 const Opt_WebKeyboardAvoidMode* value);
    void (*setEditMenuOptions)(Ark_NativePointer node,
                               const Opt_EditMenuOptions* value);
    void (*setEnableHapticFeedback)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setOptimizeParserBudget)(Ark_NativePointer node,
                                    const Opt_Boolean* value);
    void (*setEnableFollowSystemFontWeight)(Ark_NativePointer node,
                                            const Opt_Boolean* value);
    void (*setEnableWebAVSession)(Ark_NativePointer node,
                                  const Opt_Boolean* value);
    void (*setRunJavaScriptOnDocumentStart)(Ark_NativePointer node,
                                            const Opt_Array_ScriptItem* value);
    void (*setRunJavaScriptOnDocumentEnd)(Ark_NativePointer node,
                                          const Opt_Array_ScriptItem* value);
    void (*setRunJavaScriptOnHeadEnd)(Ark_NativePointer node,
                                      const Opt_Array_ScriptItem* value);
    void (*setNativeEmbedOptions)(Ark_NativePointer node,
                                  const Opt_EmbedOptions* value);
    void (*setRegisterNativeEmbedRule)(Ark_NativePointer node,
                                       const Opt_String* tag,
                                       const Opt_String* type);
    void (*setBindSelectionMenu)(Ark_NativePointer node,
                                 const Opt_WebElementType* elementType,
                                 const Opt_CustomNodeBuilder* content,
                                 const Opt_WebResponseType* responseType,
                                 const Opt_SelectionMenuOptionsExt* options);
} GENERATED_ArkUIWebModifier;

typedef struct GENERATED_ArkUIWindowSceneModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setWindowSceneOptions)(Ark_NativePointer node,
                                  const Ark_Number* persistentId);
    void (*setAttractionEffect)(Ark_NativePointer node,
                                const Opt_Position* destination,
                                const Opt_Number* fraction);
} GENERATED_ArkUIWindowSceneModifier;

typedef struct GENERATED_ArkUIXComponentModifier {
    Ark_NativePointer (*construct)(Ark_Int32 id,
                                   Ark_Int32 flags);
    void (*setXComponentOptions0)(Ark_NativePointer node,
                                  const Ark_XComponentParameter* value);
    void (*setXComponentOptions1)(Ark_NativePointer node,
                                  const Ark_XComponentOptions* options);
    void (*setXComponentOptions2)(Ark_NativePointer node,
                                  const Ark_NativeXComponentParameters* params);
    void (*setOnLoad)(Ark_NativePointer node,
                      const Opt_OnNativeLoadCallback* value);
    void (*setOnDestroy)(Ark_NativePointer node,
                         const Opt_VoidCallback* value);
    void (*setEnableAnalyzer)(Ark_NativePointer node,
                              const Opt_Boolean* value);
    void (*setEnableSecure)(Ark_NativePointer node,
                            const Opt_Boolean* value);
    void (*setHdrBrightness)(Ark_NativePointer node,
                             const Opt_Number* value);
    void (*setEnableTransparentLayer)(Ark_NativePointer node,
                                      const Opt_Boolean* value);
} GENERATED_ArkUIXComponentModifier;

// Accessors

typedef struct GENERATED_ArkUIAccessibilityHoverEventAccessor {
    void (*destroyPeer)(Ark_AccessibilityHoverEvent peer);
    Ark_AccessibilityHoverEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_AccessibilityHoverType (*getType)(Ark_AccessibilityHoverEvent peer);
    void (*setType)(Ark_AccessibilityHoverEvent peer,
                    Ark_AccessibilityHoverType type);
    Ark_Number (*getX)(Ark_AccessibilityHoverEvent peer);
    void (*setX)(Ark_AccessibilityHoverEvent peer,
                 const Ark_Number* x);
    Ark_Number (*getY)(Ark_AccessibilityHoverEvent peer);
    void (*setY)(Ark_AccessibilityHoverEvent peer,
                 const Ark_Number* y);
    Ark_Number (*getDisplayX)(Ark_AccessibilityHoverEvent peer);
    void (*setDisplayX)(Ark_AccessibilityHoverEvent peer,
                        const Ark_Number* displayX);
    Ark_Number (*getDisplayY)(Ark_AccessibilityHoverEvent peer);
    void (*setDisplayY)(Ark_AccessibilityHoverEvent peer,
                        const Ark_Number* displayY);
    Ark_Number (*getWindowX)(Ark_AccessibilityHoverEvent peer);
    void (*setWindowX)(Ark_AccessibilityHoverEvent peer,
                       const Ark_Number* windowX);
    Ark_Number (*getWindowY)(Ark_AccessibilityHoverEvent peer);
    void (*setWindowY)(Ark_AccessibilityHoverEvent peer,
                       const Ark_Number* windowY);
} GENERATED_ArkUIAccessibilityHoverEventAccessor;

typedef struct GENERATED_ArkUIAnimationExtenderAccessor {
    void (*SetClipRect)(Ark_NativePointer node,
                        Ark_Float32 x,
                        Ark_Float32 y,
                        Ark_Float32 width,
                        Ark_Float32 height);
    void (*OpenImplicitAnimation)(const Ark_AnimateParam* param);
    void (*CloseImplicitAnimation)();
    void (*StartDoubleAnimation)(Ark_NativePointer node,
                                 const Ark_DoubleAnimationParam* param);
    void (*AnimationTranslate)(Ark_NativePointer node,
                               const Ark_TranslateOptions* options);
} GENERATED_ArkUIAnimationExtenderAccessor;

typedef struct GENERATED_ArkUIAppearSymbolEffectAccessor {
    void (*destroyPeer)(Ark_AppearSymbolEffect peer);
    Ark_AppearSymbolEffect (*construct)(const Opt_EffectScope* scope);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectScope (*getScope)(Ark_AppearSymbolEffect peer);
    void (*setScope)(Ark_AppearSymbolEffect peer,
                     const Opt_EffectScope* scope);
} GENERATED_ArkUIAppearSymbolEffectAccessor;

typedef struct GENERATED_ArkUIAxisEventAccessor {
    void (*destroyPeer)(Ark_AxisEvent peer);
    Ark_AxisEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getHorizontalAxisValue)(Ark_AxisEvent peer);
    Ark_Number (*getVerticalAxisValue)(Ark_AxisEvent peer);
    Ark_AxisAction (*getAction)(Ark_AxisEvent peer);
    void (*setAction)(Ark_AxisEvent peer,
                      Ark_AxisAction action);
    Ark_Number (*getDisplayX)(Ark_AxisEvent peer);
    void (*setDisplayX)(Ark_AxisEvent peer,
                        const Ark_Number* displayX);
    Ark_Number (*getDisplayY)(Ark_AxisEvent peer);
    void (*setDisplayY)(Ark_AxisEvent peer,
                        const Ark_Number* displayY);
    Ark_Number (*getWindowX)(Ark_AxisEvent peer);
    void (*setWindowX)(Ark_AxisEvent peer,
                       const Ark_Number* windowX);
    Ark_Number (*getWindowY)(Ark_AxisEvent peer);
    void (*setWindowY)(Ark_AxisEvent peer,
                       const Ark_Number* windowY);
    Ark_Number (*getX)(Ark_AxisEvent peer);
    void (*setX)(Ark_AxisEvent peer,
                 const Ark_Number* x);
    Ark_Number (*getY)(Ark_AxisEvent peer);
    void (*setY)(Ark_AxisEvent peer,
                 const Ark_Number* y);
    Opt_Number (*getScrollStep)(Ark_AxisEvent peer);
    void (*setScrollStep)(Ark_AxisEvent peer,
                          const Opt_Number* scrollStep);
    Callback_Void (*getPropagation)(Ark_AxisEvent peer);
    void (*setPropagation)(Ark_AxisEvent peer,
                           const Callback_Void* propagation);
} GENERATED_ArkUIAxisEventAccessor;

typedef struct GENERATED_ArkUIBackgroundColorStyleAccessor {
    void (*destroyPeer)(Ark_BackgroundColorStyle peer);
    Ark_BackgroundColorStyle (*construct)(const Ark_TextBackgroundStyle* textBackgroundStyle);
    Ark_NativePointer (*getFinalizer)();
    Ark_TextBackgroundStyle (*getTextBackgroundStyle)(Ark_BackgroundColorStyle peer);
} GENERATED_ArkUIBackgroundColorStyleAccessor;

typedef struct GENERATED_ArkUIBaseContextAccessor {
    void (*destroyPeer)(Ark_BaseContext peer);
    Ark_BaseContext (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIBaseContextAccessor;

typedef struct GENERATED_ArkUIBaseCustomDialogAccessor {
    void (*destroyPeer)(Ark_BaseCustomDialog peer);
    Ark_BaseCustomDialog (*construct)(const Opt_Boolean* useSharedStorage,
                                      const Opt_CustomObject* storage);
    Ark_NativePointer (*getFinalizer)();
    Ark_CustomObject (*$_instantiate)(const Callback_T* factory,
                                      const Opt_CustomObject* initializers,
                                      const Opt_Callback_Void* content);
} GENERATED_ArkUIBaseCustomDialogAccessor;

typedef struct GENERATED_ArkUIBaseEventAccessor {
    void (*destroyPeer)(Ark_BaseEvent peer);
    Ark_BaseEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_EventTarget (*getTarget)(Ark_BaseEvent peer);
    void (*setTarget)(Ark_BaseEvent peer,
                      const Ark_EventTarget* target);
    Ark_Number (*getTimestamp)(Ark_BaseEvent peer);
    void (*setTimestamp)(Ark_BaseEvent peer,
                         const Ark_Number* timestamp);
    Ark_SourceType (*getSource)(Ark_BaseEvent peer);
    void (*setSource)(Ark_BaseEvent peer,
                      Ark_SourceType source);
    Opt_Number (*getAxisHorizontal)(Ark_BaseEvent peer);
    void (*setAxisHorizontal)(Ark_BaseEvent peer,
                              const Opt_Number* axisHorizontal);
    Opt_Number (*getAxisVertical)(Ark_BaseEvent peer);
    void (*setAxisVertical)(Ark_BaseEvent peer,
                            const Opt_Number* axisVertical);
    Ark_Number (*getPressure)(Ark_BaseEvent peer);
    void (*setPressure)(Ark_BaseEvent peer,
                        const Ark_Number* pressure);
    Ark_Number (*getTiltX)(Ark_BaseEvent peer);
    void (*setTiltX)(Ark_BaseEvent peer,
                     const Ark_Number* tiltX);
    Ark_Number (*getTiltY)(Ark_BaseEvent peer);
    void (*setTiltY)(Ark_BaseEvent peer,
                     const Ark_Number* tiltY);
    Opt_Number (*getRollAngle)(Ark_BaseEvent peer);
    void (*setRollAngle)(Ark_BaseEvent peer,
                         const Opt_Number* rollAngle);
    Ark_SourceTool (*getSourceTool)(Ark_BaseEvent peer);
    void (*setSourceTool)(Ark_BaseEvent peer,
                          Ark_SourceTool sourceTool);
    Opt_ModifierKeyStateGetter (*getGetModifierKeyState)(Ark_BaseEvent peer);
    void (*setGetModifierKeyState)(Ark_BaseEvent peer,
                                   const Opt_ModifierKeyStateGetter* getModifierKeyState);
    Opt_Number (*getDeviceId)(Ark_BaseEvent peer);
    void (*setDeviceId)(Ark_BaseEvent peer,
                        const Opt_Number* deviceId);
    Opt_Number (*getTargetDisplayId)(Ark_BaseEvent peer);
    void (*setTargetDisplayId)(Ark_BaseEvent peer,
                               const Opt_Number* targetDisplayId);
} GENERATED_ArkUIBaseEventAccessor;

typedef struct GENERATED_ArkUIBaseGestureEventAccessor {
    void (*destroyPeer)(Ark_BaseGestureEvent peer);
    Ark_BaseGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Array_FingerInfo (*getFingerList)(Ark_BaseGestureEvent peer);
    void (*setFingerList)(Ark_BaseGestureEvent peer,
                          const Array_FingerInfo* fingerList);
} GENERATED_ArkUIBaseGestureEventAccessor;

typedef struct GENERATED_ArkUIBaselineOffsetStyleAccessor {
    void (*destroyPeer)(Ark_BaselineOffsetStyle peer);
    Ark_BaselineOffsetStyle (*construct)(Ark_LengthMetrics value);
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getBaselineOffset)(Ark_BaselineOffsetStyle peer);
} GENERATED_ArkUIBaselineOffsetStyleAccessor;

typedef struct GENERATED_ArkUIBaseShapeAccessor {
    void (*destroyPeer)(Ark_BaseShape peer);
    Ark_BaseShape (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_BaseShape (*width)(Ark_BaseShape peer,
                           const Ark_Length* width);
    Ark_BaseShape (*height)(Ark_BaseShape peer,
                            const Ark_Length* height);
    Ark_BaseShape (*size)(Ark_BaseShape peer,
                          const Ark_SizeOptions* size);
} GENERATED_ArkUIBaseShapeAccessor;

typedef struct GENERATED_ArkUIBounceSymbolEffectAccessor {
    void (*destroyPeer)(Ark_BounceSymbolEffect peer);
    Ark_BounceSymbolEffect (*construct)(const Opt_EffectScope* scope,
                                        const Opt_EffectDirection* direction);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectScope (*getScope)(Ark_BounceSymbolEffect peer);
    void (*setScope)(Ark_BounceSymbolEffect peer,
                     const Opt_EffectScope* scope);
    Opt_EffectDirection (*getDirection)(Ark_BounceSymbolEffect peer);
    void (*setDirection)(Ark_BounceSymbolEffect peer,
                         const Opt_EffectDirection* direction);
} GENERATED_ArkUIBounceSymbolEffectAccessor;

typedef struct GENERATED_ArkUIBuilderNodeOpsAccessor {
    void (*destroyPeer)(Ark_BuilderNodeOps peer);
    Ark_BuilderNodeOps (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*create)(Ark_BuilderNodeOps peer,
                   const Callback_Void* buildFunc);
    void (*disposeNode)(Ark_BuilderNodeOps peer);
    void (*setUpdateConfigurationCallback)(Ark_BuilderNodeOps peer,
                                           const Callback_Void* configurationUpdateFunc);
    void (*setOptions)(Ark_BuilderNodeOps peer,
                       const Ark_BuilderNodeOptions* options);
    Ark_Boolean (*postTouchEvent)(Ark_BuilderNodeOps peer,
                                  Ark_TouchEvent event);
    Ark_NativePointer (*setRootFrameNodeInBuilderNode)(Ark_BuilderNodeOps peer,
                                                       Ark_NativePointer node);
} GENERATED_ArkUIBuilderNodeOpsAccessor;

typedef struct GENERATED_ArkUICalendarPickerDialogAccessor {
    void (*destroyPeer)(Ark_CalendarPickerDialog peer);
    Ark_CalendarPickerDialog (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*show)(const Opt_CalendarDialogOptions* options);
} GENERATED_ArkUICalendarPickerDialogAccessor;

typedef struct GENERATED_ArkUICanvasGradientAccessor {
    void (*destroyPeer)(Ark_CanvasGradient peer);
    Ark_CanvasGradient (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*addColorStop)(Ark_CanvasGradient peer,
                         const Ark_Number* offset,
                         const Ark_String* color);
} GENERATED_ArkUICanvasGradientAccessor;

typedef struct GENERATED_ArkUICanvasPathAccessor {
    void (*destroyPeer)(Ark_CanvasPath peer);
    Ark_CanvasPath (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*arc)(Ark_CanvasPath peer,
                const Ark_Number* x,
                const Ark_Number* y,
                const Ark_Number* radius,
                const Ark_Number* startAngle,
                const Ark_Number* endAngle,
                const Opt_Boolean* counterclockwise);
    void (*arcTo)(Ark_CanvasPath peer,
                  const Ark_Number* x1,
                  const Ark_Number* y1,
                  const Ark_Number* x2,
                  const Ark_Number* y2,
                  const Ark_Number* radius);
    void (*bezierCurveTo)(Ark_CanvasPath peer,
                          const Ark_Number* cp1x,
                          const Ark_Number* cp1y,
                          const Ark_Number* cp2x,
                          const Ark_Number* cp2y,
                          const Ark_Number* x,
                          const Ark_Number* y);
    void (*closePath)(Ark_CanvasPath peer);
    void (*ellipse)(Ark_CanvasPath peer,
                    const Ark_Number* x,
                    const Ark_Number* y,
                    const Ark_Number* radiusX,
                    const Ark_Number* radiusY,
                    const Ark_Number* rotation,
                    const Ark_Number* startAngle,
                    const Ark_Number* endAngle,
                    const Opt_Boolean* counterclockwise);
    void (*lineTo)(Ark_CanvasPath peer,
                   const Ark_Number* x,
                   const Ark_Number* y);
    void (*moveTo)(Ark_CanvasPath peer,
                   const Ark_Number* x,
                   const Ark_Number* y);
    void (*quadraticCurveTo)(Ark_CanvasPath peer,
                             const Ark_Number* cpx,
                             const Ark_Number* cpy,
                             const Ark_Number* x,
                             const Ark_Number* y);
    void (*rect)(Ark_CanvasPath peer,
                 const Ark_Number* x,
                 const Ark_Number* y,
                 const Ark_Number* w,
                 const Ark_Number* h);
} GENERATED_ArkUICanvasPathAccessor;

typedef struct GENERATED_ArkUICanvasPatternAccessor {
    void (*destroyPeer)(Ark_CanvasPattern peer);
    Ark_CanvasPattern (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setTransform)(Ark_CanvasPattern peer,
                         const Opt_Matrix2D* transform);
} GENERATED_ArkUICanvasPatternAccessor;

typedef struct GENERATED_ArkUICanvasRendererAccessor {
    void (*destroyPeer)(Ark_CanvasRenderer peer);
    Ark_CanvasRenderer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*drawImage0)(Ark_CanvasRenderer peer,
                       const Ark_Union_ImageBitmap_PixelMap* image,
                       const Ark_Number* dx,
                       const Ark_Number* dy);
    void (*drawImage1)(Ark_CanvasRenderer peer,
                       const Ark_Union_ImageBitmap_PixelMap* image,
                       const Ark_Number* dx,
                       const Ark_Number* dy,
                       const Ark_Number* dw,
                       const Ark_Number* dh);
    void (*drawImage2)(Ark_CanvasRenderer peer,
                       const Ark_Union_ImageBitmap_PixelMap* image,
                       const Ark_Number* sx,
                       const Ark_Number* sy,
                       const Ark_Number* sw,
                       const Ark_Number* sh,
                       const Ark_Number* dx,
                       const Ark_Number* dy,
                       const Ark_Number* dw,
                       const Ark_Number* dh);
    void (*beginPath)(Ark_CanvasRenderer peer);
    void (*clip0)(Ark_CanvasRenderer peer,
                  const Opt_String* fillRule);
    void (*clip1)(Ark_CanvasRenderer peer,
                  Ark_Path2D path,
                  const Opt_String* fillRule);
    void (*fill0)(Ark_CanvasRenderer peer,
                  const Opt_String* fillRule);
    void (*fill1)(Ark_CanvasRenderer peer,
                  Ark_Path2D path,
                  const Opt_String* fillRule);
    void (*stroke)(Ark_CanvasRenderer peer,
                   const Opt_Path2D* path);
    Ark_CanvasGradient (*createLinearGradient)(Ark_CanvasRenderer peer,
                                               const Ark_Number* x0,
                                               const Ark_Number* y0,
                                               const Ark_Number* x1,
                                               const Ark_Number* y1);
    Opt_CanvasPattern (*createPattern)(Ark_CanvasRenderer peer,
                                       Ark_ImageBitmap image,
                                       const Opt_String* repetition);
    Ark_CanvasGradient (*createRadialGradient)(Ark_CanvasRenderer peer,
                                               const Ark_Number* x0,
                                               const Ark_Number* y0,
                                               const Ark_Number* r0,
                                               const Ark_Number* x1,
                                               const Ark_Number* y1,
                                               const Ark_Number* r1);
    Ark_CanvasGradient (*createConicGradient)(Ark_CanvasRenderer peer,
                                              const Ark_Number* startAngle,
                                              const Ark_Number* x,
                                              const Ark_Number* y);
    Ark_ImageData (*createImageData0)(Ark_CanvasRenderer peer,
                                      const Ark_Number* sw,
                                      const Ark_Number* sh);
    Ark_ImageData (*createImageData1)(Ark_CanvasRenderer peer,
                                      Ark_ImageData imagedata);
    Ark_ImageData (*getImageData)(Ark_CanvasRenderer peer,
                                  const Ark_Number* sx,
                                  const Ark_Number* sy,
                                  const Ark_Number* sw,
                                  const Ark_Number* sh);
    Ark_image_PixelMap (*getPixelMap)(Ark_CanvasRenderer peer,
                                      const Ark_Number* sx,
                                      const Ark_Number* sy,
                                      const Ark_Number* sw,
                                      const Ark_Number* sh);
    void (*putImageData0)(Ark_CanvasRenderer peer,
                          Ark_ImageData imagedata,
                          const Ark_Union_Number_String* dx,
                          const Ark_Union_Number_String* dy);
    void (*putImageData1)(Ark_CanvasRenderer peer,
                          Ark_ImageData imagedata,
                          const Ark_Union_Number_String* dx,
                          const Ark_Union_Number_String* dy,
                          const Ark_Union_Number_String* dirtyX,
                          const Ark_Union_Number_String* dirtyY,
                          const Ark_Union_Number_String* dirtyWidth,
                          const Ark_Union_Number_String* dirtyHeight);
    Array_Number (*getLineDash)(Ark_CanvasRenderer peer);
    void (*setLineDash)(Ark_CanvasRenderer peer,
                        const Array_Number* segments);
    void (*clearRect)(Ark_CanvasRenderer peer,
                      const Ark_Number* x,
                      const Ark_Number* y,
                      const Ark_Number* w,
                      const Ark_Number* h);
    void (*fillRect)(Ark_CanvasRenderer peer,
                     const Ark_Number* x,
                     const Ark_Number* y,
                     const Ark_Number* w,
                     const Ark_Number* h);
    void (*strokeRect)(Ark_CanvasRenderer peer,
                       const Ark_Number* x,
                       const Ark_Number* y,
                       const Ark_Number* w,
                       const Ark_Number* h);
    void (*restore)(Ark_CanvasRenderer peer);
    void (*save)(Ark_CanvasRenderer peer);
    void (*fillText)(Ark_CanvasRenderer peer,
                     const Ark_String* text,
                     const Ark_Number* x,
                     const Ark_Number* y,
                     const Opt_Number* maxWidth);
    Ark_TextMetrics (*measureText)(Ark_CanvasRenderer peer,
                                   const Ark_String* text);
    void (*strokeText)(Ark_CanvasRenderer peer,
                       const Ark_String* text,
                       const Ark_Number* x,
                       const Ark_Number* y,
                       const Opt_Number* maxWidth);
    Ark_Matrix2D (*getTransform)(Ark_CanvasRenderer peer);
    void (*resetTransform)(Ark_CanvasRenderer peer);
    void (*rotate)(Ark_CanvasRenderer peer,
                   const Ark_Number* angle);
    void (*scale)(Ark_CanvasRenderer peer,
                  const Ark_Number* x,
                  const Ark_Number* y);
    void (*setTransform0)(Ark_CanvasRenderer peer,
                          const Ark_Number* a,
                          const Ark_Number* b,
                          const Ark_Number* c,
                          const Ark_Number* d,
                          const Ark_Number* e,
                          const Ark_Number* f);
    void (*setTransform1)(Ark_CanvasRenderer peer,
                          const Opt_Matrix2D* transform);
    void (*transform)(Ark_CanvasRenderer peer,
                      const Ark_Number* a,
                      const Ark_Number* b,
                      const Ark_Number* c,
                      const Ark_Number* d,
                      const Ark_Number* e,
                      const Ark_Number* f);
    void (*translate)(Ark_CanvasRenderer peer,
                      const Ark_Number* x,
                      const Ark_Number* y);
    void (*setPixelMap)(Ark_CanvasRenderer peer,
                        const Opt_image_PixelMap* value);
    void (*transferFromImageBitmap)(Ark_CanvasRenderer peer,
                                    Ark_ImageBitmap bitmap);
    void (*saveLayer)(Ark_CanvasRenderer peer);
    void (*restoreLayer)(Ark_CanvasRenderer peer);
    void (*reset)(Ark_CanvasRenderer peer);
    Ark_Union_LengthMetrics_String (*getLetterSpacing)(Ark_CanvasRenderer peer);
    void (*setLetterSpacing)(Ark_CanvasRenderer peer,
                             const Ark_Union_LengthMetrics_String* letterSpacing);
    Ark_Number (*getGlobalAlpha)(Ark_CanvasRenderer peer);
    void (*setGlobalAlpha)(Ark_CanvasRenderer peer,
                           const Ark_Number* globalAlpha);
    Ark_String (*getGlobalCompositeOperation)(Ark_CanvasRenderer peer);
    void (*setGlobalCompositeOperation)(Ark_CanvasRenderer peer,
                                        const Ark_String* globalCompositeOperation);
    Ark_Union_String_Number_CanvasGradient_CanvasPattern (*getFillStyle)(Ark_CanvasRenderer peer);
    void (*setFillStyle)(Ark_CanvasRenderer peer,
                         const Ark_Union_String_Number_CanvasGradient_CanvasPattern* fillStyle);
    Ark_Union_String_Number_CanvasGradient_CanvasPattern (*getStrokeStyle)(Ark_CanvasRenderer peer);
    void (*setStrokeStyle)(Ark_CanvasRenderer peer,
                           const Ark_Union_String_Number_CanvasGradient_CanvasPattern* strokeStyle);
    Ark_String (*getFilter)(Ark_CanvasRenderer peer);
    void (*setFilter)(Ark_CanvasRenderer peer,
                      const Ark_String* filter);
    Ark_Boolean (*getImageSmoothingEnabled)(Ark_CanvasRenderer peer);
    void (*setImageSmoothingEnabled)(Ark_CanvasRenderer peer,
                                     Ark_Boolean imageSmoothingEnabled);
    Ark_String (*getImageSmoothingQuality)(Ark_CanvasRenderer peer);
    void (*setImageSmoothingQuality)(Ark_CanvasRenderer peer,
                                     const Ark_String* imageSmoothingQuality);
    Ark_String (*getLineCap)(Ark_CanvasRenderer peer);
    void (*setLineCap)(Ark_CanvasRenderer peer,
                       const Ark_String* lineCap);
    Ark_Number (*getLineDashOffset)(Ark_CanvasRenderer peer);
    void (*setLineDashOffset)(Ark_CanvasRenderer peer,
                              const Ark_Number* lineDashOffset);
    Ark_String (*getLineJoin)(Ark_CanvasRenderer peer);
    void (*setLineJoin)(Ark_CanvasRenderer peer,
                        const Ark_String* lineJoin);
    Ark_Number (*getLineWidth)(Ark_CanvasRenderer peer);
    void (*setLineWidth)(Ark_CanvasRenderer peer,
                         const Ark_Number* lineWidth);
    Ark_Number (*getMiterLimit)(Ark_CanvasRenderer peer);
    void (*setMiterLimit)(Ark_CanvasRenderer peer,
                          const Ark_Number* miterLimit);
    Ark_Number (*getShadowBlur)(Ark_CanvasRenderer peer);
    void (*setShadowBlur)(Ark_CanvasRenderer peer,
                          const Ark_Number* shadowBlur);
    Ark_String (*getShadowColor)(Ark_CanvasRenderer peer);
    void (*setShadowColor)(Ark_CanvasRenderer peer,
                           const Ark_String* shadowColor);
    Ark_Number (*getShadowOffsetX)(Ark_CanvasRenderer peer);
    void (*setShadowOffsetX)(Ark_CanvasRenderer peer,
                             const Ark_Number* shadowOffsetX);
    Ark_Number (*getShadowOffsetY)(Ark_CanvasRenderer peer);
    void (*setShadowOffsetY)(Ark_CanvasRenderer peer,
                             const Ark_Number* shadowOffsetY);
    Ark_String (*getDirection)(Ark_CanvasRenderer peer);
    void (*setDirection)(Ark_CanvasRenderer peer,
                         const Ark_String* direction);
    Ark_String (*getFont)(Ark_CanvasRenderer peer);
    void (*setFont)(Ark_CanvasRenderer peer,
                    const Ark_String* font);
    Ark_String (*getTextAlign)(Ark_CanvasRenderer peer);
    void (*setTextAlign)(Ark_CanvasRenderer peer,
                         const Ark_String* textAlign);
    Ark_String (*getTextBaseline)(Ark_CanvasRenderer peer);
    void (*setTextBaseline)(Ark_CanvasRenderer peer,
                            const Ark_String* textBaseline);
} GENERATED_ArkUICanvasRendererAccessor;

typedef struct GENERATED_ArkUICanvasRenderingContext2DAccessor {
    void (*destroyPeer)(Ark_CanvasRenderingContext2D peer);
    Ark_CanvasRenderingContext2D (*construct)(const Opt_RenderingContextSettings* settings,
                                              const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*toDataURL)(Ark_CanvasRenderingContext2D peer,
                            const Opt_String* type,
                            const Opt_Number* quality);
    void (*startImageAnalyzer)(Ark_VMContext vmContext,
                               Ark_AsyncWorkerPtr asyncWorker,
                               Ark_CanvasRenderingContext2D peer,
                               const Ark_ImageAnalyzerConfig* config,
                               const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*stopImageAnalyzer)(Ark_CanvasRenderingContext2D peer);
    void (*onOnAttach)(Ark_VMContext vmContext,
                       Ark_CanvasRenderingContext2D peer,
                       const Callback_Void* callback_);
    void (*offOnAttach)(Ark_VMContext vmContext,
                        Ark_CanvasRenderingContext2D peer,
                        const Opt_Callback_Void* callback_);
    void (*onOnDetach)(Ark_CanvasRenderingContext2D peer,
                       const Callback_Void* callback_);
    void (*offOnDetach)(Ark_CanvasRenderingContext2D peer,
                        const Opt_Callback_Void* callback_);
    Ark_Number (*getHeight)(Ark_CanvasRenderingContext2D peer);
    void (*setHeight)(Ark_CanvasRenderingContext2D peer,
                      const Ark_Number* height);
    Ark_Number (*getWidth)(Ark_CanvasRenderingContext2D peer);
    void (*setWidth)(Ark_CanvasRenderingContext2D peer,
                     const Ark_Number* width);
    Ark_FrameNode (*getCanvas)(Ark_CanvasRenderingContext2D peer);
    void (*setCanvas)(Ark_CanvasRenderingContext2D peer,
                      Ark_FrameNode canvas);
} GENERATED_ArkUICanvasRenderingContext2DAccessor;

typedef struct GENERATED_ArkUIChildrenMainSizeAccessor {
    void (*destroyPeer)(Ark_ChildrenMainSize peer);
    Ark_ChildrenMainSize (*construct)(const Ark_Number* childDefaultSize);
    Ark_NativePointer (*getFinalizer)();
    void (*splice)(Ark_ChildrenMainSize peer,
                   const Ark_Number* start,
                   const Opt_Number* deleteCount,
                   const Opt_Array_Number* childrenSize);
    void (*update)(Ark_ChildrenMainSize peer,
                   const Ark_Number* index,
                   const Ark_Number* childSize);
    Ark_Number (*getChildDefaultSize)(Ark_ChildrenMainSize peer);
    void (*setChildDefaultSize)(Ark_ChildrenMainSize peer,
                                const Ark_Number* childDefaultSize);
} GENERATED_ArkUIChildrenMainSizeAccessor;

typedef struct GENERATED_ArkUICircleShapeAccessor {
    void (*destroyPeer)(Ark_CircleShape peer);
    Ark_CircleShape (*construct)(const Opt_ShapeSize* options);
    Ark_NativePointer (*getFinalizer)();
    Ark_CircleShape (*offset)(Ark_CircleShape peer,
                              const Ark_Position* offset);
    Ark_CircleShape (*fill)(Ark_CircleShape peer,
                            const Ark_ResourceColor* color);
    Ark_CircleShape (*position)(Ark_CircleShape peer,
                                const Ark_Position* position);
    Ark_CircleShape (*width)(Ark_CircleShape peer,
                             const Ark_Length* width);
    Ark_CircleShape (*height)(Ark_CircleShape peer,
                              const Ark_Length* height);
    Ark_CircleShape (*size)(Ark_CircleShape peer,
                            const Ark_SizeOptions* size);
} GENERATED_ArkUICircleShapeAccessor;

typedef struct GENERATED_ArkUIClickEventAccessor {
    void (*destroyPeer)(Ark_ClickEvent peer);
    Ark_ClickEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getDisplayX)(Ark_ClickEvent peer);
    void (*setDisplayX)(Ark_ClickEvent peer,
                        const Ark_Number* displayX);
    Ark_Number (*getDisplayY)(Ark_ClickEvent peer);
    void (*setDisplayY)(Ark_ClickEvent peer,
                        const Ark_Number* displayY);
    Ark_Number (*getWindowX)(Ark_ClickEvent peer);
    void (*setWindowX)(Ark_ClickEvent peer,
                       const Ark_Number* windowX);
    Ark_Number (*getWindowY)(Ark_ClickEvent peer);
    void (*setWindowY)(Ark_ClickEvent peer,
                       const Ark_Number* windowY);
    Ark_Number (*getX)(Ark_ClickEvent peer);
    void (*setX)(Ark_ClickEvent peer,
                 const Ark_Number* x);
    Ark_Number (*getY)(Ark_ClickEvent peer);
    void (*setY)(Ark_ClickEvent peer,
                 const Ark_Number* y);
    Opt_InteractionHand (*getHand)(Ark_ClickEvent peer);
    void (*setHand)(Ark_ClickEvent peer,
                    const Opt_InteractionHand* hand);
    Callback_Void (*getPreventDefault)(Ark_ClickEvent peer);
    void (*setPreventDefault)(Ark_ClickEvent peer,
                              const Callback_Void* preventDefault);
} GENERATED_ArkUIClickEventAccessor;

typedef struct GENERATED_ArkUIClientAuthenticationHandlerAccessor {
    void (*destroyPeer)(Ark_ClientAuthenticationHandler peer);
    Ark_ClientAuthenticationHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*confirm0)(Ark_ClientAuthenticationHandler peer,
                     const Ark_String* priKeyFile,
                     const Ark_String* certChainFile);
    void (*confirm1)(Ark_ClientAuthenticationHandler peer,
                     const Ark_String* authUri);
    void (*cancel)(Ark_ClientAuthenticationHandler peer);
    void (*ignore)(Ark_ClientAuthenticationHandler peer);
} GENERATED_ArkUIClientAuthenticationHandlerAccessor;

typedef struct GENERATED_ArkUIColorContentAccessor {
    void (*destroyPeer)(Ark_ColorContent peer);
    Ark_ColorContent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_ColorContent (*getORIGIN)();
} GENERATED_ArkUIColorContentAccessor;

typedef struct GENERATED_ArkUIColorFilterAccessor {
    void (*destroyPeer)(Ark_ColorFilter peer);
    Ark_ColorFilter (*construct)(const Array_Number* value);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIColorFilterAccessor;

typedef struct GENERATED_ArkUIColorMetricsAccessor {
    void (*destroyPeer)(Ark_ColorMetrics peer);
    Ark_ColorMetrics (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_ColorMetrics (*numeric)(const Ark_Number* value);
    Ark_ColorMetrics (*rgba)(const Ark_Number* red,
                             const Ark_Number* green,
                             const Ark_Number* blue,
                             const Ark_Number* alpha);
    Ark_ColorMetrics (*resourceColor)(const Ark_ResourceColor* color);
    Ark_ColorMetrics (*blendColor)(Ark_ColorMetrics peer,
                                   Ark_ColorMetrics overlayColor);
    Ark_String (*color)(Ark_ColorMetrics peer);
    Ark_Number (*red)(Ark_ColorMetrics peer);
    Ark_Number (*green)(Ark_ColorMetrics peer);
    Ark_Number (*blue)(Ark_ColorMetrics peer);
    Ark_Number (*alpha)(Ark_ColorMetrics peer);
} GENERATED_ArkUIColorMetricsAccessor;

typedef struct GENERATED_ArkUICommon_ContextAccessor {
    void (*destroyPeer)(Ark_common_Context peer);
    Ark_common_Context (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_common_Context (*createBundleContext)(Ark_VMContext vmContext,
                                              Ark_common_Context peer,
                                              const Ark_String* bundleName);
    Ark_common_Context (*createModuleContext0)(Ark_VMContext vmContext,
                                               Ark_common_Context peer,
                                               const Ark_String* moduleName);
    Ark_common_Context (*createModuleContext1)(Ark_VMContext vmContext,
                                               Ark_common_Context peer,
                                               const Ark_String* bundleName,
                                               const Ark_String* moduleName);
    void (*getGroupDir0)(Ark_VMContext vmContext,
                         Ark_common_Context peer,
                         const Ark_String* dataGroupID,
                         const Context_getGroupDir_Callback* callback_);
    void (*getGroupDir1)(Ark_VMContext vmContext,
                         Ark_AsyncWorkerPtr asyncWorker,
                         Ark_common_Context peer,
                         const Ark_String* dataGroupID,
                         const Callback_Opt_String_Opt_Array_String_Void* outputArgumentForReturningPromise);
    Ark_String (*getCacheDir)(Ark_common_Context peer);
    void (*setCacheDir)(Ark_common_Context peer,
                        const Ark_String* cacheDir);
    Ark_String (*getTempDir)(Ark_common_Context peer);
    void (*setTempDir)(Ark_common_Context peer,
                       const Ark_String* tempDir);
    Ark_String (*getFilesDir)(Ark_common_Context peer);
    void (*setFilesDir)(Ark_common_Context peer,
                        const Ark_String* filesDir);
    Ark_String (*getDatabaseDir)(Ark_common_Context peer);
    void (*setDatabaseDir)(Ark_common_Context peer,
                           const Ark_String* databaseDir);
    Ark_String (*getPreferencesDir)(Ark_common_Context peer);
    void (*setPreferencesDir)(Ark_common_Context peer,
                              const Ark_String* preferencesDir);
    Ark_String (*getBundleCodeDir)(Ark_common_Context peer);
    void (*setBundleCodeDir)(Ark_common_Context peer,
                             const Ark_String* bundleCodeDir);
    Ark_String (*getDistributedFilesDir)(Ark_common_Context peer);
    void (*setDistributedFilesDir)(Ark_common_Context peer,
                                   const Ark_String* distributedFilesDir);
    Ark_String (*getResourceDir)(Ark_common_Context peer);
    void (*setResourceDir)(Ark_common_Context peer,
                           const Ark_String* resourceDir);
    Ark_String (*getCloudFileDir)(Ark_common_Context peer);
    void (*setCloudFileDir)(Ark_common_Context peer,
                            const Ark_String* cloudFileDir);
} GENERATED_ArkUICommon_ContextAccessor;

typedef struct GENERATED_ArkUICommonShapeAccessor {
    void (*destroyPeer)(Ark_CommonShape peer);
    Ark_CommonShape (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_CommonShape (*offset)(Ark_CommonShape peer,
                              const Ark_Position* offset);
    Ark_CommonShape (*fill)(Ark_CommonShape peer,
                            const Ark_ResourceColor* color);
    Ark_CommonShape (*position)(Ark_CommonShape peer,
                                const Ark_Position* position);
} GENERATED_ArkUICommonShapeAccessor;

typedef struct GENERATED_ArkUIComponentContentAccessor {
    void (*destroyPeer)(Ark_ComponentContent peer);
    Ark_ComponentContent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*update)(Ark_ComponentContent peer,
                   const Ark_Object* args);
    void (*reuse)(Ark_ComponentContent peer,
                  const Opt_Object* param);
    void (*recycle)(Ark_ComponentContent peer);
    void (*dispose)(Ark_ComponentContent peer);
    void (*updateConfiguration)(Ark_ComponentContent peer);
} GENERATED_ArkUIComponentContentAccessor;

typedef struct GENERATED_ArkUIConsoleMessageAccessor {
    void (*destroyPeer)(Ark_ConsoleMessage peer);
    Ark_ConsoleMessage (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getMessage)(Ark_ConsoleMessage peer);
    Ark_String (*getSourceId)(Ark_ConsoleMessage peer);
    Ark_Number (*getLineNumber)(Ark_ConsoleMessage peer);
    Ark_MessageLevel (*getMessageLevel)(Ark_ConsoleMessage peer);
} GENERATED_ArkUIConsoleMessageAccessor;

typedef struct GENERATED_ArkUIContentModifierHelperAccessor {
    void (*contentModifierButton)(Ark_NativePointer node,
                                  const Ark_Object* contentModifier,
                                  const ButtonModifierBuilder* builder);
    void (*resetContentModifierButton)(Ark_NativePointer node);
    void (*contentModifierCheckbox)(Ark_NativePointer node,
                                    const Ark_Object* contentModifier,
                                    const CheckBoxModifierBuilder* builder);
    void (*resetContentModifierCheckbox)(Ark_NativePointer node);
    void (*contentModifierRadio)(Ark_NativePointer node,
                                const Ark_Object* contentModifier,
                                 const RadioModifierBuilder* builder);
    void (*resetContentModifierRadio)(Ark_NativePointer node);
    void (*contentModifierRating)(Ark_NativePointer node,
                                  const Ark_Object* contentModifier,
                                  const RatingModifierBuilder* builder);
    void (*resetContentModifierRating)(Ark_NativePointer node);
    void (*contentModifierSlider)(Ark_NativePointer node,
                                  const Ark_Object* contentModifier,
                                  const SliderModifierBuilder* builder);
    void (*resetContentModifierSlider)(Ark_NativePointer node);
    void (*contentModifierToggle)(Ark_NativePointer node,
                                  const Ark_Object* contentModifier,
                                  const ToggleModifierBuilder* builder);
    void (*resetContentModifieToggle)(Ark_NativePointer node);
} GENERATED_ArkUIContentModifierHelperAccessor;

typedef struct GENERATED_ArkUIContextAccessor {
    void (*destroyPeer)(Ark_Context peer);
    Ark_Context (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIContextAccessor;

typedef struct GENERATED_ArkUIControllerHandlerAccessor {
    void (*destroyPeer)(Ark_ControllerHandler peer);
    Ark_ControllerHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setWebController)(Ark_ControllerHandler peer,
                             Ark_webview_WebviewController controller);
} GENERATED_ArkUIControllerHandlerAccessor;

typedef struct GENERATED_ArkUICurves_ICurveAccessor {
    void (*destroyPeer)(Ark_curves_ICurve peer);
    Ark_curves_ICurve (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*interpolate)(Ark_curves_ICurve peer,
                              const Ark_Number* fraction);
} GENERATED_ArkUICurves_ICurveAccessor;

typedef struct GENERATED_ArkUICustomDialogControllerAccessor {
    void (*destroyPeer)(Ark_CustomDialogController peer);
    Ark_CustomDialogController (*construct)(const Ark_CustomDialogControllerOptions* value);
    Ark_NativePointer (*getFinalizer)();
    void (*open)(Ark_CustomDialogController peer);
    void (*close)(Ark_CustomDialogController peer);
} GENERATED_ArkUICustomDialogControllerAccessor;

typedef struct GENERATED_ArkUICustomSpanAccessor {
    void (*destroyPeer)(Ark_CustomSpan peer);
    Ark_CustomSpan (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*invalidate)(Ark_CustomSpan peer);
    Callback_CustomSpanMeasureInfo_CustomSpanMetrics (*getOnMeasure)(Ark_CustomSpan peer);
    void (*setOnMeasure)(Ark_CustomSpan peer,
                         const Callback_CustomSpanMeasureInfo_CustomSpanMetrics* onMeasure);
    Callback_DrawContext_CustomSpanDrawInfo_Void (*getOnDraw)(Ark_CustomSpan peer);
    void (*setOnDraw)(Ark_CustomSpan peer,
                      const Callback_DrawContext_CustomSpanDrawInfo_Void* onDraw);
} GENERATED_ArkUICustomSpanAccessor;

typedef struct GENERATED_ArkUIDataResubmissionHandlerAccessor {
    void (*destroyPeer)(Ark_DataResubmissionHandler peer);
    Ark_DataResubmissionHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*resend)(Ark_DataResubmissionHandler peer);
    void (*cancel)(Ark_DataResubmissionHandler peer);
} GENERATED_ArkUIDataResubmissionHandlerAccessor;

typedef struct GENERATED_ArkUIDatePickerDialogAccessor {
    void (*destroyPeer)(Ark_DatePickerDialog peer);
    Ark_DatePickerDialog (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIDatePickerDialogAccessor;

typedef struct GENERATED_ArkUIDecorationStyleAccessor {
    void (*destroyPeer)(Ark_DecorationStyle peer);
    Ark_DecorationStyle (*construct)(const Ark_DecorationStyleInterface* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_TextDecorationType (*getType)(Ark_DecorationStyle peer);
    Opt_ResourceColor (*getColor)(Ark_DecorationStyle peer);
    Opt_TextDecorationStyle (*getStyle)(Ark_DecorationStyle peer);
} GENERATED_ArkUIDecorationStyleAccessor;

typedef struct GENERATED_ArkUIDisappearSymbolEffectAccessor {
    void (*destroyPeer)(Ark_DisappearSymbolEffect peer);
    Ark_DisappearSymbolEffect (*construct)(const Opt_EffectScope* scope);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectScope (*getScope)(Ark_DisappearSymbolEffect peer);
    void (*setScope)(Ark_DisappearSymbolEffect peer,
                     const Opt_EffectScope* scope);
} GENERATED_ArkUIDisappearSymbolEffectAccessor;

typedef struct GENERATED_ArkUIDismissDialogActionAccessor {
    void (*destroyPeer)(Ark_DismissDialogAction peer);
    Ark_DismissDialogAction (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*dismiss)(Ark_DismissDialogAction peer);
    Ark_DismissReason (*getReason)(Ark_DismissDialogAction peer);
    void (*setReason)(Ark_DismissDialogAction peer,
                      Ark_DismissReason reason);
} GENERATED_ArkUIDismissDialogActionAccessor;

typedef struct GENERATED_ArkUIDismissPopupActionAccessor {
    void (*destroyPeer)(Ark_DismissPopupAction peer);
    Ark_DismissPopupAction (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*dismiss)(Ark_DismissPopupAction peer);
    Ark_DismissReason (*getReason)(Ark_DismissPopupAction peer);
    void (*setReason)(Ark_DismissPopupAction peer,
                      Ark_DismissReason reason);
} GENERATED_ArkUIDismissPopupActionAccessor;

typedef struct GENERATED_ArkUIDragEventAccessor {
    void (*destroyPeer)(Ark_DragEvent peer);
    Ark_DragEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getDisplayX)(Ark_DragEvent peer);
    Ark_Number (*getDisplayY)(Ark_DragEvent peer);
    Ark_Number (*getWindowX)(Ark_DragEvent peer);
    Ark_Number (*getWindowY)(Ark_DragEvent peer);
    void (*setData)(Ark_DragEvent peer,
                    Ark_unifiedDataChannel_UnifiedData unifiedData);
    Ark_unifiedDataChannel_UnifiedData (*getData)(Ark_DragEvent peer);
    Ark_unifiedDataChannel_Summary (*getSummary)(Ark_DragEvent peer);
    void (*setResult)(Ark_DragEvent peer,
                      Ark_DragResult dragResult);
    Ark_DragResult (*getResult)(Ark_DragEvent peer);
    Ark_Rectangle (*getPreviewRect)(Ark_DragEvent peer);
    Ark_Number (*getVelocityX)(Ark_DragEvent peer);
    Ark_Number (*getVelocityY)(Ark_DragEvent peer);
    Ark_Number (*getVelocity)(Ark_DragEvent peer);
    void (*executeDropAnimation)(Ark_DragEvent peer,
                                 const Callback_Void* customDropAnimation);
    Ark_DragBehavior (*getDragBehavior)(Ark_DragEvent peer);
    void (*setDragBehavior)(Ark_DragEvent peer,
                            Ark_DragBehavior dragBehavior);
    Ark_Boolean (*getUseCustomDropAnimation)(Ark_DragEvent peer);
    void (*setUseCustomDropAnimation)(Ark_DragEvent peer,
                                      Ark_Boolean useCustomDropAnimation);
    Opt_ModifierKeyStateGetter (*getGetModifierKeyState)(Ark_DragEvent peer);
    void (*setGetModifierKeyState)(Ark_DragEvent peer,
                                   const Opt_ModifierKeyStateGetter* getModifierKeyState);
} GENERATED_ArkUIDragEventAccessor;

typedef struct GENERATED_ArkUIDrawableDescriptorAccessor {
    void (*destroyPeer)(Ark_DrawableDescriptor peer);
    Ark_DrawableDescriptor (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_image_PixelMap (*getPixelMap)(Ark_DrawableDescriptor peer);
} GENERATED_ArkUIDrawableDescriptorAccessor;

typedef struct GENERATED_ArkUIDrawContextAccessor {
    void (*destroyPeer)(Ark_DrawContext peer);
    Ark_DrawContext (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Size (*size)(Ark_DrawContext peer);
    Ark_Size (*sizeInPixel)(Ark_DrawContext peer);
    Ark_drawing_Canvas (*canvas)(Ark_DrawContext peer);
} GENERATED_ArkUIDrawContextAccessor;

typedef struct GENERATED_ArkUIDrawing_BrushAccessor {
    void (*destroyPeer)(Ark_drawing_Brush peer);
    Ark_drawing_Brush (*construct0)();
    Ark_drawing_Brush (*construct1)(Ark_drawing_Brush brush);
    Ark_NativePointer (*getFinalizer)();
    void (*setColor0)(Ark_drawing_Brush peer,
                      const Ark_common2D_Color* color);
    void (*setColor1)(Ark_drawing_Brush peer,
                      const Ark_Number* color);
    void (*setColor2)(Ark_drawing_Brush peer,
                      const Ark_Number* alpha,
                      const Ark_Number* red,
                      const Ark_Number* green,
                      const Ark_Number* blue);
    Ark_common2D_Color (*getColor)(Ark_drawing_Brush peer);
    Ark_Number (*getHexColor)(Ark_drawing_Brush peer);
    void (*setAntiAlias)(Ark_drawing_Brush peer,
                         Ark_Boolean aa);
    Ark_Boolean (*isAntiAlias)(Ark_drawing_Brush peer);
    void (*setAlpha)(Ark_drawing_Brush peer,
                     const Ark_Number* alpha);
    Ark_Number (*getAlpha)(Ark_drawing_Brush peer);
    void (*setColorFilter)(Ark_drawing_Brush peer,
                           Ark_drawing_ColorFilter filter);
    Ark_drawing_ColorFilter (*getColorFilter)(Ark_drawing_Brush peer);
    void (*setImageFilter)(Ark_drawing_Brush peer,
                           const Opt_drawing_ImageFilter* filter);
    void (*setMaskFilter)(Ark_drawing_Brush peer,
                          Ark_drawing_MaskFilter filter);
    void (*setShadowLayer)(Ark_drawing_Brush peer,
                           Ark_drawing_ShadowLayer shadowLayer);
    void (*setShaderEffect)(Ark_drawing_Brush peer,
                            Ark_drawing_ShaderEffect shaderEffect);
    void (*setBlendMode)(Ark_drawing_Brush peer,
                         Ark_drawing_BlendMode mode);
    void (*reset)(Ark_drawing_Brush peer);
} GENERATED_ArkUIDrawing_BrushAccessor;

typedef struct GENERATED_ArkUIDrawing_CanvasAccessor {
    void (*destroyPeer)(Ark_drawing_Canvas peer);
    Ark_drawing_Canvas (*construct)(Ark_image_PixelMap pixelmap);
    Ark_NativePointer (*getFinalizer)();
    void (*drawRect0)(Ark_drawing_Canvas peer,
                      const Ark_common2D_Rect* rect);
    void (*drawRect1)(Ark_drawing_Canvas peer,
                      const Ark_Number* left,
                      const Ark_Number* top,
                      const Ark_Number* right,
                      const Ark_Number* bottom);
    void (*drawRoundRect)(Ark_drawing_Canvas peer,
                          Ark_drawing_RoundRect roundRect);
    void (*drawNestedRoundRect)(Ark_drawing_Canvas peer,
                                Ark_drawing_RoundRect outer,
                                Ark_drawing_RoundRect inner);
    void (*drawBackground)(Ark_drawing_Canvas peer,
                           Ark_drawing_Brush brush);
    void (*drawShadow0)(Ark_drawing_Canvas peer,
                        Ark_drawing_Path path,
                        const Ark_common2D_Point3d* planeParams,
                        const Ark_common2D_Point3d* devLightPos,
                        const Ark_Number* lightRadius,
                        const Ark_common2D_Color* ambientColor,
                        const Ark_common2D_Color* spotColor,
                        Ark_drawing_ShadowFlag flag);
    void (*drawShadow1)(Ark_drawing_Canvas peer,
                        Ark_drawing_Path path,
                        const Ark_common2D_Point3d* planeParams,
                        const Ark_common2D_Point3d* devLightPos,
                        const Ark_Number* lightRadius,
                        const Ark_Number* ambientColor,
                        const Ark_Number* spotColor,
                        Ark_drawing_ShadowFlag flag);
    void (*drawCircle)(Ark_drawing_Canvas peer,
                       const Ark_Number* x,
                       const Ark_Number* y,
                       const Ark_Number* radius);
    void (*drawImage)(Ark_drawing_Canvas peer,
                      Ark_image_PixelMap pixelmap,
                      const Ark_Number* left,
                      const Ark_Number* top,
                      Ark_drawing_SamplingOptions samplingOptions);
    void (*drawImageRect)(Ark_drawing_Canvas peer,
                          Ark_image_PixelMap pixelmap,
                          const Ark_common2D_Rect* dstRect,
                          Ark_drawing_SamplingOptions samplingOptions);
    void (*drawImageRectWithSrc)(Ark_drawing_Canvas peer,
                                 Ark_image_PixelMap pixelmap,
                                 const Ark_common2D_Rect* srcRect,
                                 const Ark_common2D_Rect* dstRect,
                                 Ark_drawing_SamplingOptions samplingOptions,
                                 Ark_drawing_SrcRectConstraint constraint);
    void (*drawColor0)(Ark_drawing_Canvas peer,
                       const Ark_common2D_Color* color,
                       Ark_drawing_BlendMode blendMode);
    void (*drawColor1)(Ark_drawing_Canvas peer,
                       const Ark_Number* color,
                       Ark_drawing_BlendMode blendMode);
    void (*drawColor2)(Ark_drawing_Canvas peer,
                       const Ark_Number* alpha,
                       const Ark_Number* red,
                       const Ark_Number* green,
                       const Ark_Number* blue,
                       Ark_drawing_BlendMode blendMode);
    void (*drawOval)(Ark_drawing_Canvas peer,
                     const Ark_common2D_Rect* oval);
    void (*drawArc)(Ark_drawing_Canvas peer,
                    const Ark_common2D_Rect* arc,
                    const Ark_Number* startAngle,
                    const Ark_Number* sweepAngle);
    void (*drawPoint)(Ark_drawing_Canvas peer,
                      const Ark_Number* x,
                      const Ark_Number* y);
    void (*drawPoints)(Ark_drawing_Canvas peer,
                       const Array_common2D_Point* points,
                       Ark_drawing_PointMode mode);
    void (*drawPath)(Ark_drawing_Canvas peer,
                     Ark_drawing_Path path);
    void (*drawLine)(Ark_drawing_Canvas peer,
                     const Ark_Number* x0,
                     const Ark_Number* y0,
                     const Ark_Number* x1,
                     const Ark_Number* y1);
    void (*drawSingleCharacter)(Ark_drawing_Canvas peer,
                                const Ark_String* text,
                                Ark_drawing_Font font,
                                const Ark_Number* x,
                                const Ark_Number* y);
    void (*drawTextBlob)(Ark_drawing_Canvas peer,
                         Ark_drawing_TextBlob blob,
                         const Ark_Number* x,
                         const Ark_Number* y);
    void (*drawPixelMapMesh)(Ark_drawing_Canvas peer,
                             Ark_image_PixelMap pixelmap,
                             const Ark_Number* meshWidth,
                             const Ark_Number* meshHeight,
                             const Array_Number* vertices,
                             const Ark_Number* vertOffset,
                             const Array_Number* colors,
                             const Ark_Number* colorOffset);
    void (*drawRegion)(Ark_drawing_Canvas peer,
                       Ark_drawing_Region region);
    void (*attachPen)(Ark_drawing_Canvas peer,
                      Ark_drawing_Pen pen);
    void (*attachBrush)(Ark_drawing_Canvas peer,
                        Ark_drawing_Brush brush);
    void (*detachPen)(Ark_drawing_Canvas peer);
    void (*detachBrush)(Ark_drawing_Canvas peer);
    Ark_Number (*save)(Ark_drawing_Canvas peer);
    Ark_Number (*saveLayer)(Ark_drawing_Canvas peer,
                            const Opt_common2D_Rect* rect,
                            const Opt_drawing_Brush* brush);
    void (*clear0)(Ark_drawing_Canvas peer,
                   const Ark_common2D_Color* color);
    void (*clear1)(Ark_drawing_Canvas peer,
                   const Ark_Number* color);
    void (*restore)(Ark_drawing_Canvas peer);
    void (*restoreToCount)(Ark_drawing_Canvas peer,
                           const Ark_Number* count);
    Ark_Number (*getSaveCount)(Ark_drawing_Canvas peer);
    Ark_Number (*getWidth)(Ark_drawing_Canvas peer);
    Ark_Number (*getHeight)(Ark_drawing_Canvas peer);
    Ark_common2D_Rect (*getLocalClipBounds)(Ark_drawing_Canvas peer);
    Ark_drawing_Matrix (*getTotalMatrix)(Ark_drawing_Canvas peer);
    void (*scale)(Ark_drawing_Canvas peer,
                  const Ark_Number* sx,
                  const Ark_Number* sy);
    void (*skew)(Ark_drawing_Canvas peer,
                 const Ark_Number* sx,
                 const Ark_Number* sy);
    void (*rotate)(Ark_drawing_Canvas peer,
                   const Ark_Number* degrees,
                   const Ark_Number* sx,
                   const Ark_Number* sy);
    void (*translate)(Ark_drawing_Canvas peer,
                      const Ark_Number* dx,
                      const Ark_Number* dy);
    void (*clipPath)(Ark_drawing_Canvas peer,
                     Ark_drawing_Path path,
                     Ark_drawing_ClipOp clipOp,
                     Ark_Boolean doAntiAlias);
    void (*clipRect)(Ark_drawing_Canvas peer,
                     const Ark_common2D_Rect* rect,
                     Ark_drawing_ClipOp clipOp,
                     Ark_Boolean doAntiAlias);
    void (*concatMatrix)(Ark_drawing_Canvas peer,
                         Ark_drawing_Matrix matrix);
    void (*clipRegion)(Ark_drawing_Canvas peer,
                       Ark_drawing_Region region,
                       Ark_drawing_ClipOp clipOp);
    void (*clipRoundRect)(Ark_drawing_Canvas peer,
                          Ark_drawing_RoundRect roundRect,
                          Ark_drawing_ClipOp clipOp,
                          Ark_Boolean doAntiAlias);
    Ark_Boolean (*isClipEmpty)(Ark_drawing_Canvas peer);
    void (*setMatrix)(Ark_drawing_Canvas peer,
                      Ark_drawing_Matrix matrix);
    void (*resetMatrix)(Ark_drawing_Canvas peer);
} GENERATED_ArkUIDrawing_CanvasAccessor;

typedef struct GENERATED_ArkUIDrawing_ColorFilterAccessor {
    void (*destroyPeer)(Ark_drawing_ColorFilter peer);
    Ark_drawing_ColorFilter (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_ColorFilter (*createBlendModeColorFilter0)(const Ark_common2D_Color* color,
                                                           Ark_drawing_BlendMode mode);
    Ark_drawing_ColorFilter (*createBlendModeColorFilter1)(const Ark_Number* color,
                                                           Ark_drawing_BlendMode mode);
    Ark_drawing_ColorFilter (*createComposeColorFilter)(Ark_drawing_ColorFilter outer,
                                                        Ark_drawing_ColorFilter inner);
    Ark_drawing_ColorFilter (*createLinearToSRGBGamma)();
    Ark_drawing_ColorFilter (*createSRGBGammaToLinear)();
    Ark_drawing_ColorFilter (*createLumaColorFilter)();
    Ark_drawing_ColorFilter (*createMatrixColorFilter)(const Array_Number* matrix);
} GENERATED_ArkUIDrawing_ColorFilterAccessor;

typedef struct GENERATED_ArkUIDrawing_FontAccessor {
    void (*destroyPeer)(Ark_drawing_Font peer);
    Ark_drawing_Font (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*enableSubpixel)(Ark_drawing_Font peer,
                           Ark_Boolean isSubpixel);
    void (*enableEmbolden)(Ark_drawing_Font peer,
                           Ark_Boolean isEmbolden);
    void (*enableLinearMetrics)(Ark_drawing_Font peer,
                                Ark_Boolean isLinearMetrics);
    void (*setSize)(Ark_drawing_Font peer,
                    const Ark_Number* textSize);
    Ark_Number (*getSize)(Ark_drawing_Font peer);
    void (*setTypeface)(Ark_drawing_Font peer,
                        Ark_drawing_Typeface typeface);
    Ark_drawing_Typeface (*getTypeface)(Ark_drawing_Font peer);
    Ark_drawing_FontMetrics (*getMetrics)(Ark_drawing_Font peer);
    Ark_Number (*measureSingleCharacter)(Ark_drawing_Font peer,
                                         const Ark_String* text);
    Ark_Number (*measureText)(Ark_drawing_Font peer,
                              const Ark_String* text,
                              Ark_drawing_TextEncoding encoding);
    void (*setScaleX)(Ark_drawing_Font peer,
                      const Ark_Number* scaleX);
    void (*setSkewX)(Ark_drawing_Font peer,
                     const Ark_Number* skewX);
    void (*setEdging)(Ark_drawing_Font peer,
                      Ark_drawing_FontEdging edging);
    void (*setHinting)(Ark_drawing_Font peer,
                       Ark_drawing_FontHinting hinting);
    Ark_Number (*countText)(Ark_drawing_Font peer,
                            const Ark_String* text);
    void (*setBaselineSnap)(Ark_drawing_Font peer,
                            Ark_Boolean isBaselineSnap);
    Ark_Boolean (*isBaselineSnap)(Ark_drawing_Font peer);
    void (*setEmbeddedBitmaps)(Ark_drawing_Font peer,
                               Ark_Boolean isEmbeddedBitmaps);
    Ark_Boolean (*isEmbeddedBitmaps)(Ark_drawing_Font peer);
    void (*setForceAutoHinting)(Ark_drawing_Font peer,
                                Ark_Boolean isForceAutoHinting);
    Ark_Boolean (*isForceAutoHinting)(Ark_drawing_Font peer);
    Array_Number (*getWidths)(Ark_drawing_Font peer,
                              const Array_Number* glyphs);
    Array_Number (*textToGlyphs)(Ark_drawing_Font peer,
                                 const Ark_String* text,
                                 const Ark_Number* glyphCount);
    Ark_Boolean (*isSubpixel)(Ark_drawing_Font peer);
    Ark_Boolean (*isLinearMetrics)(Ark_drawing_Font peer);
    Ark_Number (*getSkewX)(Ark_drawing_Font peer);
    Ark_Boolean (*isEmbolden)(Ark_drawing_Font peer);
    Ark_Number (*getScaleX)(Ark_drawing_Font peer);
    Ark_drawing_FontHinting (*getHinting)(Ark_drawing_Font peer);
    Ark_drawing_FontEdging (*getEdging)(Ark_drawing_Font peer);
    Ark_drawing_Path (*createPathForGlyph)(Ark_drawing_Font peer,
                                           const Ark_Number* index);
    Array_common2D_Rect (*getBounds)(Ark_drawing_Font peer,
                                     const Array_Number* glyphs);
    Ark_drawing_Path (*getTextPath)(Ark_drawing_Font peer,
                                    const Ark_String* text,
                                    const Ark_Number* byteLength,
                                    const Ark_Number* x,
                                    const Ark_Number* y);
} GENERATED_ArkUIDrawing_FontAccessor;

typedef struct GENERATED_ArkUIDrawing_ImageFilterAccessor {
    void (*destroyPeer)(Ark_drawing_ImageFilter peer);
    Ark_drawing_ImageFilter (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_ImageFilter (*createBlurImageFilter)(const Ark_Number* sigmaX,
                                                     const Ark_Number* sigmaY,
                                                     Ark_drawing_TileMode tileMode,
                                                     const Opt_drawing_ImageFilter* imageFilter);
    Ark_drawing_ImageFilter (*createFromColorFilter)(Ark_drawing_ColorFilter colorFilter,
                                                     const Opt_drawing_ImageFilter* imageFilter);
} GENERATED_ArkUIDrawing_ImageFilterAccessor;

typedef struct GENERATED_ArkUIDrawing_LatticeAccessor {
    void (*destroyPeer)(Ark_drawing_Lattice peer);
    Ark_drawing_Lattice (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_Lattice (*createImageLattice)(const Array_Number* xDivs,
                                              const Array_Number* yDivs,
                                              const Ark_Number* fXCount,
                                              const Ark_Number* fYCount,
                                              const Opt_common2D_Rect* fBounds,
                                              const Opt_Array_drawing_RectType* fRectTypes,
                                              const Opt_Array_CustomObject* fColors);
} GENERATED_ArkUIDrawing_LatticeAccessor;

typedef struct GENERATED_ArkUIDrawing_MaskFilterAccessor {
    void (*destroyPeer)(Ark_drawing_MaskFilter peer);
    Ark_drawing_MaskFilter (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_MaskFilter (*createBlurMaskFilter)(Ark_drawing_BlurType blurType,
                                                   const Ark_Number* sigma);
} GENERATED_ArkUIDrawing_MaskFilterAccessor;

typedef struct GENERATED_ArkUIDrawing_MatrixAccessor {
    void (*destroyPeer)(Ark_drawing_Matrix peer);
    Ark_drawing_Matrix (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setRotation)(Ark_drawing_Matrix peer,
                        const Ark_Number* degree,
                        const Ark_Number* px,
                        const Ark_Number* py);
    void (*setScale)(Ark_drawing_Matrix peer,
                     const Ark_Number* sx,
                     const Ark_Number* sy,
                     const Ark_Number* px,
                     const Ark_Number* py);
    void (*setTranslation)(Ark_drawing_Matrix peer,
                           const Ark_Number* dx,
                           const Ark_Number* dy);
    void (*setMatrix)(Ark_drawing_Matrix peer,
                      const Array_Number* values);
    void (*preConcat)(Ark_drawing_Matrix peer,
                      Ark_drawing_Matrix matrix);
    Ark_Boolean (*isEqual)(Ark_drawing_Matrix peer,
                           Ark_drawing_Matrix matrix);
    Ark_Boolean (*invert)(Ark_drawing_Matrix peer,
                          Ark_drawing_Matrix matrix);
    Ark_Boolean (*isIdentity)(Ark_drawing_Matrix peer);
    Ark_Number (*getValue)(Ark_drawing_Matrix peer,
                           const Ark_Number* index);
    void (*postRotate)(Ark_drawing_Matrix peer,
                       const Ark_Number* degree,
                       const Ark_Number* px,
                       const Ark_Number* py);
    void (*postScale)(Ark_drawing_Matrix peer,
                      const Ark_Number* sx,
                      const Ark_Number* sy,
                      const Ark_Number* px,
                      const Ark_Number* py);
    void (*postTranslate)(Ark_drawing_Matrix peer,
                          const Ark_Number* dx,
                          const Ark_Number* dy);
    void (*preRotate)(Ark_drawing_Matrix peer,
                      const Ark_Number* degree,
                      const Ark_Number* px,
                      const Ark_Number* py);
    void (*preScale)(Ark_drawing_Matrix peer,
                     const Ark_Number* sx,
                     const Ark_Number* sy,
                     const Ark_Number* px,
                     const Ark_Number* py);
    void (*preTranslate)(Ark_drawing_Matrix peer,
                         const Ark_Number* dx,
                         const Ark_Number* dy);
    void (*reset)(Ark_drawing_Matrix peer);
    Array_common2D_Point (*mapPoints)(Ark_drawing_Matrix peer,
                                      const Array_common2D_Point* src);
    Array_Number (*getAll)(Ark_drawing_Matrix peer);
    Ark_Boolean (*mapRect)(Ark_drawing_Matrix peer,
                           const Ark_common2D_Rect* dst,
                           const Ark_common2D_Rect* src);
    Ark_Boolean (*setRectToRect)(Ark_drawing_Matrix peer,
                                 const Ark_common2D_Rect* src,
                                 const Ark_common2D_Rect* dst,
                                 Ark_drawing_ScaleToFit scaleToFit);
    Ark_Boolean (*setPolyToPoly)(Ark_drawing_Matrix peer,
                                 const Array_common2D_Point* src,
                                 const Array_common2D_Point* dst,
                                 const Ark_Number* count);
} GENERATED_ArkUIDrawing_MatrixAccessor;

typedef struct GENERATED_ArkUIDrawing_PathAccessor {
    void (*destroyPeer)(Ark_drawing_Path peer);
    Ark_drawing_Path (*construct0)();
    Ark_drawing_Path (*construct1)(Ark_drawing_Path path);
    Ark_NativePointer (*getFinalizer)();
    void (*moveTo)(Ark_drawing_Path peer,
                   const Ark_Number* x,
                   const Ark_Number* y);
    void (*lineTo)(Ark_drawing_Path peer,
                   const Ark_Number* x,
                   const Ark_Number* y);
    void (*arcTo)(Ark_drawing_Path peer,
                  const Ark_Number* x1,
                  const Ark_Number* y1,
                  const Ark_Number* x2,
                  const Ark_Number* y2,
                  const Ark_Number* startDeg,
                  const Ark_Number* sweepDeg);
    void (*quadTo)(Ark_drawing_Path peer,
                   const Ark_Number* ctrlX,
                   const Ark_Number* ctrlY,
                   const Ark_Number* endX,
                   const Ark_Number* endY);
    void (*conicTo)(Ark_drawing_Path peer,
                    const Ark_Number* ctrlX,
                    const Ark_Number* ctrlY,
                    const Ark_Number* endX,
                    const Ark_Number* endY,
                    const Ark_Number* weight);
    void (*cubicTo)(Ark_drawing_Path peer,
                    const Ark_Number* ctrlX1,
                    const Ark_Number* ctrlY1,
                    const Ark_Number* ctrlX2,
                    const Ark_Number* ctrlY2,
                    const Ark_Number* endX,
                    const Ark_Number* endY);
    void (*rMoveTo)(Ark_drawing_Path peer,
                    const Ark_Number* dx,
                    const Ark_Number* dy);
    void (*rLineTo)(Ark_drawing_Path peer,
                    const Ark_Number* dx,
                    const Ark_Number* dy);
    void (*rQuadTo)(Ark_drawing_Path peer,
                    const Ark_Number* dx1,
                    const Ark_Number* dy1,
                    const Ark_Number* dx2,
                    const Ark_Number* dy2);
    void (*rConicTo)(Ark_drawing_Path peer,
                     const Ark_Number* ctrlX,
                     const Ark_Number* ctrlY,
                     const Ark_Number* endX,
                     const Ark_Number* endY,
                     const Ark_Number* weight);
    void (*rCubicTo)(Ark_drawing_Path peer,
                     const Ark_Number* ctrlX1,
                     const Ark_Number* ctrlY1,
                     const Ark_Number* ctrlX2,
                     const Ark_Number* ctrlY2,
                     const Ark_Number* endX,
                     const Ark_Number* endY);
    void (*addPolygon)(Ark_drawing_Path peer,
                       const Array_common2D_Point* points,
                       Ark_Boolean close);
    Ark_Boolean (*op)(Ark_drawing_Path peer,
                      Ark_drawing_Path path,
                      Ark_drawing_PathOp pathOp);
    void (*addArc)(Ark_drawing_Path peer,
                   const Ark_common2D_Rect* rect,
                   const Ark_Number* startAngle,
                   const Ark_Number* sweepAngle);
    void (*addCircle)(Ark_drawing_Path peer,
                      const Ark_Number* x,
                      const Ark_Number* y,
                      const Ark_Number* radius,
                      Ark_drawing_PathDirection pathDirection);
    void (*addOval)(Ark_drawing_Path peer,
                    const Ark_common2D_Rect* rect,
                    const Ark_Number* start,
                    Ark_drawing_PathDirection pathDirection);
    void (*addRect)(Ark_drawing_Path peer,
                    const Ark_common2D_Rect* rect,
                    Ark_drawing_PathDirection pathDirection);
    void (*addRoundRect)(Ark_drawing_Path peer,
                         Ark_drawing_RoundRect roundRect,
                         Ark_drawing_PathDirection pathDirection);
    void (*addPath)(Ark_drawing_Path peer,
                    Ark_drawing_Path path,
                    const Opt_drawing_Matrix* matrix);
    void (*transform)(Ark_drawing_Path peer,
                      Ark_drawing_Matrix matrix);
    Ark_Boolean (*contains)(Ark_drawing_Path peer,
                            const Ark_Number* x,
                            const Ark_Number* y);
    void (*setFillType)(Ark_drawing_Path peer,
                        Ark_drawing_PathFillType pathFillType);
    Ark_common2D_Rect (*getBounds)(Ark_drawing_Path peer);
    void (*close)(Ark_drawing_Path peer);
    Ark_drawing_Path (*offset)(Ark_drawing_Path peer,
                               const Ark_Number* dx,
                               const Ark_Number* dy);
    void (*reset)(Ark_drawing_Path peer);
    Ark_Number (*getLength)(Ark_drawing_Path peer,
                            Ark_Boolean forceClosed);
    Ark_Boolean (*getPositionAndTangent)(Ark_drawing_Path peer,
                                         Ark_Boolean forceClosed,
                                         const Ark_Number* distance,
                                         const Ark_common2D_Point* position,
                                         const Ark_common2D_Point* tangent);
    Ark_Boolean (*isClosed)(Ark_drawing_Path peer);
    Ark_Boolean (*getMatrix)(Ark_drawing_Path peer,
                             Ark_Boolean forceClosed,
                             const Ark_Number* distance,
                             Ark_drawing_Matrix matrix,
                             Ark_drawing_PathMeasureMatrixFlags flags);
    Ark_Boolean (*buildFromSvgString)(Ark_drawing_Path peer,
                                      const Ark_String* str);
} GENERATED_ArkUIDrawing_PathAccessor;

typedef struct GENERATED_ArkUIDrawing_PathEffectAccessor {
    void (*destroyPeer)(Ark_drawing_PathEffect peer);
    Ark_drawing_PathEffect (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_PathEffect (*createDashPathEffect)(const Array_Number* intervals,
                                                   const Ark_Number* phase);
    Ark_drawing_PathEffect (*createCornerPathEffect)(const Ark_Number* radius);
} GENERATED_ArkUIDrawing_PathEffectAccessor;

typedef struct GENERATED_ArkUIDrawing_PenAccessor {
    void (*destroyPeer)(Ark_drawing_Pen peer);
    Ark_drawing_Pen (*construct0)();
    Ark_drawing_Pen (*construct1)(Ark_drawing_Pen pen);
    Ark_NativePointer (*getFinalizer)();
    void (*setMiterLimit)(Ark_drawing_Pen peer,
                          const Ark_Number* miter);
    Ark_Number (*getMiterLimit)(Ark_drawing_Pen peer);
    void (*setShaderEffect)(Ark_drawing_Pen peer,
                            Ark_drawing_ShaderEffect shaderEffect);
    void (*setColor0)(Ark_drawing_Pen peer,
                      const Ark_common2D_Color* color);
    void (*setColor1)(Ark_drawing_Pen peer,
                      const Ark_Number* color);
    void (*setColor2)(Ark_drawing_Pen peer,
                      const Ark_Number* alpha,
                      const Ark_Number* red,
                      const Ark_Number* green,
                      const Ark_Number* blue);
    Ark_common2D_Color (*getColor)(Ark_drawing_Pen peer);
    Ark_Number (*getHexColor)(Ark_drawing_Pen peer);
    void (*setStrokeWidth)(Ark_drawing_Pen peer,
                           const Ark_Number* width);
    Ark_Number (*getWidth)(Ark_drawing_Pen peer);
    void (*setAntiAlias)(Ark_drawing_Pen peer,
                         Ark_Boolean aa);
    Ark_Boolean (*isAntiAlias)(Ark_drawing_Pen peer);
    void (*setAlpha)(Ark_drawing_Pen peer,
                     const Ark_Number* alpha);
    Ark_Number (*getAlpha)(Ark_drawing_Pen peer);
    void (*setColorFilter)(Ark_drawing_Pen peer,
                           Ark_drawing_ColorFilter filter);
    Ark_drawing_ColorFilter (*getColorFilter)(Ark_drawing_Pen peer);
    void (*setImageFilter)(Ark_drawing_Pen peer,
                           const Opt_drawing_ImageFilter* filter);
    void (*setMaskFilter)(Ark_drawing_Pen peer,
                          Ark_drawing_MaskFilter filter);
    void (*setPathEffect)(Ark_drawing_Pen peer,
                          Ark_drawing_PathEffect effect);
    void (*setShadowLayer)(Ark_drawing_Pen peer,
                           Ark_drawing_ShadowLayer shadowLayer);
    void (*setBlendMode)(Ark_drawing_Pen peer,
                         Ark_drawing_BlendMode mode);
    void (*setDither)(Ark_drawing_Pen peer,
                      Ark_Boolean dither);
    void (*setJoinStyle)(Ark_drawing_Pen peer,
                         Ark_drawing_JoinStyle style);
    Ark_drawing_JoinStyle (*getJoinStyle)(Ark_drawing_Pen peer);
    void (*setCapStyle)(Ark_drawing_Pen peer,
                        Ark_drawing_CapStyle style);
    Ark_drawing_CapStyle (*getCapStyle)(Ark_drawing_Pen peer);
    void (*reset)(Ark_drawing_Pen peer);
    Ark_Boolean (*getFillPath)(Ark_drawing_Pen peer,
                               Ark_drawing_Path src,
                               Ark_drawing_Path dst);
} GENERATED_ArkUIDrawing_PenAccessor;

typedef struct GENERATED_ArkUIDrawing_RegionAccessor {
    void (*destroyPeer)(Ark_drawing_Region peer);
    Ark_drawing_Region (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*isPointContained)(Ark_drawing_Region peer,
                                    const Ark_Number* x,
                                    const Ark_Number* y);
    Ark_Boolean (*isRegionContained)(Ark_drawing_Region peer,
                                     Ark_drawing_Region other);
    Ark_Boolean (*op)(Ark_drawing_Region peer,
                      Ark_drawing_Region region,
                      Ark_drawing_RegionOp regionOp);
    Ark_Boolean (*quickReject)(Ark_drawing_Region peer,
                               const Ark_Number* left,
                               const Ark_Number* top,
                               const Ark_Number* right,
                               const Ark_Number* bottom);
    Ark_Boolean (*setPath)(Ark_drawing_Region peer,
                           Ark_drawing_Path path,
                           Ark_drawing_Region clip);
    Ark_Boolean (*setRect)(Ark_drawing_Region peer,
                           const Ark_Number* left,
                           const Ark_Number* top,
                           const Ark_Number* right,
                           const Ark_Number* bottom);
} GENERATED_ArkUIDrawing_RegionAccessor;

typedef struct GENERATED_ArkUIDrawing_RoundRectAccessor {
    void (*destroyPeer)(Ark_drawing_RoundRect peer);
    Ark_drawing_RoundRect (*construct)(const Ark_common2D_Rect* rect,
                                       const Ark_Number* xRadii,
                                       const Ark_Number* yRadii);
    Ark_NativePointer (*getFinalizer)();
    void (*setCorner)(Ark_drawing_RoundRect peer,
                      Ark_drawing_CornerPos pos,
                      const Ark_Number* x,
                      const Ark_Number* y);
    Ark_common2D_Point (*getCorner)(Ark_drawing_RoundRect peer,
                                    Ark_drawing_CornerPos pos);
    void (*offset)(Ark_drawing_RoundRect peer,
                   const Ark_Number* dx,
                   const Ark_Number* dy);
} GENERATED_ArkUIDrawing_RoundRectAccessor;

typedef struct GENERATED_ArkUIDrawing_SamplingOptionsAccessor {
    void (*destroyPeer)(Ark_drawing_SamplingOptions peer);
    Ark_drawing_SamplingOptions (*construct0)();
    Ark_drawing_SamplingOptions (*construct1)(Ark_drawing_FilterMode filterMode);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIDrawing_SamplingOptionsAccessor;

typedef struct GENERATED_ArkUIDrawing_ShaderEffectAccessor {
    void (*destroyPeer)(Ark_drawing_ShaderEffect peer);
    Ark_drawing_ShaderEffect (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_ShaderEffect (*createColorShader)(const Ark_Number* color);
    Ark_drawing_ShaderEffect (*createLinearGradient)(const Ark_common2D_Point* startPt,
                                                     const Ark_common2D_Point* endPt,
                                                     const Array_Number* colors,
                                                     Ark_drawing_TileMode mode,
                                                     const Opt_Array_Number* pos,
                                                     const Opt_drawing_Matrix* matrix);
    Ark_drawing_ShaderEffect (*createRadialGradient)(const Ark_common2D_Point* centerPt,
                                                     const Ark_Number* radius,
                                                     const Array_Number* colors,
                                                     Ark_drawing_TileMode mode,
                                                     const Opt_Array_Number* pos,
                                                     const Opt_drawing_Matrix* matrix);
    Ark_drawing_ShaderEffect (*createSweepGradient)(const Ark_common2D_Point* centerPt,
                                                    const Array_Number* colors,
                                                    Ark_drawing_TileMode mode,
                                                    const Ark_Number* startAngle,
                                                    const Ark_Number* endAngle,
                                                    const Opt_Array_Number* pos,
                                                    const Opt_drawing_Matrix* matrix);
    Ark_drawing_ShaderEffect (*createConicalGradient)(const Ark_common2D_Point* startPt,
                                                      const Ark_Number* startRadius,
                                                      const Ark_common2D_Point* endPt,
                                                      const Ark_Number* endRadius,
                                                      const Array_Number* colors,
                                                      Ark_drawing_TileMode mode,
                                                      const Opt_Array_Number* pos,
                                                      const Opt_drawing_Matrix* matrix);
} GENERATED_ArkUIDrawing_ShaderEffectAccessor;

typedef struct GENERATED_ArkUIDrawing_ShadowLayerAccessor {
    void (*destroyPeer)(Ark_drawing_ShadowLayer peer);
    Ark_drawing_ShadowLayer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_ShadowLayer (*create0)(const Ark_Number* blurRadius,
                                       const Ark_Number* x,
                                       const Ark_Number* y,
                                       const Ark_common2D_Color* color);
    Ark_drawing_ShadowLayer (*create1)(const Ark_Number* blurRadius,
                                       const Ark_Number* x,
                                       const Ark_Number* y,
                                       const Ark_Number* color);
} GENERATED_ArkUIDrawing_ShadowLayerAccessor;

typedef struct GENERATED_ArkUIDrawing_TextBlobAccessor {
    void (*destroyPeer)(Ark_drawing_TextBlob peer);
    Ark_drawing_TextBlob (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_TextBlob (*makeFromString)(const Ark_String* text,
                                           Ark_drawing_Font font,
                                           Ark_drawing_TextEncoding encoding);
    Ark_drawing_TextBlob (*makeFromPosText)(const Ark_String* text,
                                            const Ark_Number* len,
                                            const Array_common2D_Point* points,
                                            Ark_drawing_Font font);
    Ark_drawing_TextBlob (*makeFromRunBuffer)(const Array_drawing_TextBlobRunBuffer* pos,
                                              Ark_drawing_Font font,
                                              const Ark_common2D_Rect* bounds);
    Ark_common2D_Rect (*bounds)(Ark_drawing_TextBlob peer);
    Ark_Number (*uniqueID)(Ark_drawing_TextBlob peer);
} GENERATED_ArkUIDrawing_TextBlobAccessor;

typedef struct GENERATED_ArkUIDrawing_TypefaceAccessor {
    void (*destroyPeer)(Ark_drawing_Typeface peer);
    Ark_drawing_Typeface (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getFamilyName)(Ark_drawing_Typeface peer);
    Ark_drawing_Typeface (*makeFromFile)(const Ark_String* filePath);
} GENERATED_ArkUIDrawing_TypefaceAccessor;

typedef struct GENERATED_ArkUIDrawingRenderingContextAccessor {
    void (*destroyPeer)(Ark_DrawingRenderingContext peer);
    Ark_DrawingRenderingContext (*construct)(const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    void (*invalidate)(Ark_DrawingRenderingContext peer);
    Ark_Size (*getSize)(Ark_DrawingRenderingContext peer);
    void (*setSize)(Ark_DrawingRenderingContext peer,
                    const Ark_Size* size);
} GENERATED_ArkUIDrawingRenderingContextAccessor;

typedef struct GENERATED_ArkUIDrawModifierAccessor {
    void (*destroyPeer)(Ark_DrawModifier peer);
    Ark_DrawModifier (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*invalidate)(Ark_DrawModifier peer);
    Callback_DrawContext_Void (*getDrawBehind_callback)(Ark_DrawModifier peer);
    void (*setDrawBehind_callback)(Ark_DrawModifier peer,
                                   const Callback_DrawContext_Void* drawBehind_callback);
    Callback_DrawContext_Void (*getDrawContent_callback)(Ark_DrawModifier peer);
    void (*setDrawContent_callback)(Ark_DrawModifier peer,
                                    const Callback_DrawContext_Void* drawContent_callback);
} GENERATED_ArkUIDrawModifierAccessor;

typedef struct GENERATED_ArkUIEllipseShapeAccessor {
    void (*destroyPeer)(Ark_EllipseShape peer);
    Ark_EllipseShape (*construct)(const Opt_ShapeSize* options);
    Ark_NativePointer (*getFinalizer)();
    Ark_EllipseShape (*offset)(Ark_EllipseShape peer,
                               const Ark_Position* offset);
    Ark_EllipseShape (*fill)(Ark_EllipseShape peer,
                             const Ark_ResourceColor* color);
    Ark_EllipseShape (*position)(Ark_EllipseShape peer,
                                 const Ark_Position* position);
    Ark_EllipseShape (*width)(Ark_EllipseShape peer,
                              const Ark_Length* width);
    Ark_EllipseShape (*height)(Ark_EllipseShape peer,
                               const Ark_Length* height);
    Ark_EllipseShape (*size)(Ark_EllipseShape peer,
                             const Ark_SizeOptions* size);
} GENERATED_ArkUIEllipseShapeAccessor;

typedef struct GENERATED_ArkUIEventEmulatorAccessor {
    void (*emitClickEvent)(Ark_NativePointer node,
                           Ark_ClickEvent event);
    void (*emitTextInputEvent)(Ark_NativePointer node,
                               const Ark_String* text);
} GENERATED_ArkUIEventEmulatorAccessor;

typedef struct GENERATED_ArkUIEventResultAccessor {
    void (*destroyPeer)(Ark_EventResult peer);
    Ark_EventResult (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setGestureEventResult0)(Ark_EventResult peer,
                                   Ark_Boolean result);
    void (*setGestureEventResult1)(Ark_EventResult peer,
                                   Ark_Boolean result,
                                   Ark_Boolean stopPropagation);
} GENERATED_ArkUIEventResultAccessor;

typedef struct GENERATED_ArkUIEventTargetInfoAccessor {
    void (*destroyPeer)(Ark_EventTargetInfo peer);
    Ark_EventTargetInfo (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getId)(Ark_EventTargetInfo peer);
} GENERATED_ArkUIEventTargetInfoAccessor;

typedef struct GENERATED_ArkUIExtendableComponentAccessor {
    void (*destroyPeer)(Ark_ExtendableComponent peer);
    Ark_ExtendableComponent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_UIContext (*getUIContext)(Ark_ExtendableComponent peer);
    Ark_Int32 (*getUniqueId)(Ark_ExtendableComponent peer);
} GENERATED_ArkUIExtendableComponentAccessor;

typedef struct GENERATED_ArkUIFileSelectorParamAccessor {
    void (*destroyPeer)(Ark_FileSelectorParam peer);
    Ark_FileSelectorParam (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getTitle)(Ark_FileSelectorParam peer);
    Ark_FileSelectorMode (*getMode)(Ark_FileSelectorParam peer);
    Array_String (*getAcceptType)(Ark_FileSelectorParam peer);
    Ark_Boolean (*isCapture)(Ark_FileSelectorParam peer);
    Array_String (*getMimeTypes)(Ark_FileSelectorParam peer);
} GENERATED_ArkUIFileSelectorParamAccessor;

typedef struct GENERATED_ArkUIFileSelectorResultAccessor {
    void (*destroyPeer)(Ark_FileSelectorResult peer);
    Ark_FileSelectorResult (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*handleFileList)(Ark_FileSelectorResult peer,
                           const Array_String* fileList);
} GENERATED_ArkUIFileSelectorResultAccessor;

typedef struct GENERATED_ArkUIFocusAxisEventAccessor {
    void (*destroyPeer)(Ark_FocusAxisEvent peer);
    Ark_FocusAxisEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Map_AxisModel_Number (*getAxisMap)(Ark_FocusAxisEvent peer);
    void (*setAxisMap)(Ark_FocusAxisEvent peer,
                       const Map_AxisModel_Number* axisMap);
    Callback_Void (*getStopPropagation)(Ark_FocusAxisEvent peer);
    void (*setStopPropagation)(Ark_FocusAxisEvent peer,
                               const Callback_Void* stopPropagation);
} GENERATED_ArkUIFocusAxisEventAccessor;

typedef struct GENERATED_ArkUIFocusControllerAccessor {
    void (*requestFocus)(const Ark_String* key);
} GENERATED_ArkUIFocusControllerAccessor;

typedef struct GENERATED_ArkUIFrameNodeAccessor {
    void (*destroyPeer)(Ark_FrameNode peer);
    Ark_FrameNode (*construct)(Ark_UIContext uiContext);
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*isModifiable)(Ark_FrameNode peer);
    void (*appendChild)(Ark_FrameNode peer,
                        Ark_FrameNode node);
    void (*insertChildAfter)(Ark_FrameNode peer,
                             Ark_FrameNode child,
                             Ark_FrameNode sibling);
    void (*removeChild)(Ark_FrameNode peer,
                        Ark_FrameNode node);
    void (*clearChildren)(Ark_FrameNode peer);
    Ark_FrameNode (*getChild)(Ark_FrameNode peer,
                              const Ark_Number* index,
                              const Ark_Number* expandMode);
    Ark_FrameNode (*getFirstChild)(Ark_FrameNode peer);
    Ark_FrameNode (*getNextSibling)(Ark_FrameNode peer);
    Ark_FrameNode (*getPreviousSibling)(Ark_FrameNode peer);
    Ark_FrameNode (*getParent)(Ark_FrameNode peer);
    Ark_Int32 (*getChildrenCount)(Ark_FrameNode peer);
    void (*dispose)(Ark_FrameNode peer);
    Ark_String (*getId)(Ark_FrameNode peer);
    Ark_Number (*getUniqueId)(Ark_FrameNode peer);
    Ark_String (*getNodeType)(Ark_FrameNode peer);
    Ark_Number (*getOpacity)(Ark_FrameNode peer);
    Ark_Boolean (*isVisible)(Ark_FrameNode peer);
    Ark_Boolean (*isClipToFrame)(Ark_FrameNode peer);
    Ark_Boolean (*isAttached)(Ark_FrameNode peer);
    Ark_Object (*getInspectorInfo)(Ark_FrameNode peer);
    void (*invalidate)(Ark_FrameNode peer);
    void (*disposeTree)(Ark_FrameNode peer);
    void (*setCrossLanguageOptions)(Ark_FrameNode peer,
                                    const Ark_CrossLanguageOptions* options);
    Ark_CrossLanguageOptions (*getCrossLanguageOptions)(Ark_FrameNode peer);
    void (*setMeasuredSize)(Ark_FrameNode peer,
                            const Ark_Size* size);
    void (*setLayoutPosition)(Ark_FrameNode peer,
                              const Ark_Position* position);
    void (*measure)(Ark_FrameNode peer,
                    const Ark_LayoutConstraint* constraint);
    void (*layout)(Ark_FrameNode peer,
                   const Ark_Position* position);
    void (*setNeedsLayout)(Ark_FrameNode peer);
    Ark_Position (*getPositionToWindowWithTransform)(Ark_FrameNode peer);
    Ark_FrameNode (*getFrameNodeByKey)(const Ark_String* name);
    Ark_Number (*getIdByFrameNode)(Ark_FrameNode peer,
                                   Ark_FrameNode node);
    void (*moveTo)(Ark_FrameNode peer,
                   Ark_FrameNode targetParent,
                   const Ark_Number* index);
    Ark_Number (*getFirstChildIndexWithoutExpand)(Ark_FrameNode peer);
    Ark_Number (*getLastChildIndexWithoutExpand)(Ark_FrameNode peer);
    Ark_FrameNode (*getAttachedFrameNodeById)(const Ark_String* id);
    Ark_FrameNode (*getFrameNodeById)(const Ark_Number* id);
    Ark_FrameNode (*getFrameNodeByUniqueId)(const Ark_Number* id);
    void (*reuse)(Ark_FrameNode peer);
    void (*recycle)(Ark_FrameNode peer);
    Ark_NativePointer (*getFrameNodePtr)(Ark_FrameNode node);
    Ark_FrameNode (*createTypedFrameNode)(const Ark_String* type);
} GENERATED_ArkUIFrameNodeAccessor;

typedef struct GENERATED_ArkUIFrictionMotionAccessor {
    void (*destroyPeer)(Ark_FrictionMotion peer);
    Ark_FrictionMotion (*construct)(const Ark_Number* friction,
                                    const Ark_Number* position,
                                    const Ark_Number* velocity);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIFrictionMotionAccessor;

typedef struct GENERATED_ArkUIFullScreenExitHandlerAccessor {
    void (*destroyPeer)(Ark_FullScreenExitHandler peer);
    Ark_FullScreenExitHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*exitFullScreen)(Ark_FullScreenExitHandler peer);
} GENERATED_ArkUIFullScreenExitHandlerAccessor;

typedef struct GENERATED_ArkUIGestureAccessor {
    void (*destroyPeer)(Ark_Gesture peer);
    Ark_Gesture (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*tag)(Ark_Gesture peer,
                const Ark_String* tag);
    void (*allowedTypes)(Ark_Gesture peer,
                         const Array_SourceTool* types);
} GENERATED_ArkUIGestureAccessor;

typedef struct GENERATED_ArkUIGestureEventAccessor {
    void (*destroyPeer)(Ark_GestureEvent peer);
    Ark_GestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*getRepeat)(Ark_GestureEvent peer);
    void (*setRepeat)(Ark_GestureEvent peer,
                      Ark_Boolean repeat);
    Array_FingerInfo (*getFingerList)(Ark_GestureEvent peer);
    void (*setFingerList)(Ark_GestureEvent peer,
                          const Array_FingerInfo* fingerList);
    Ark_Number (*getOffsetX)(Ark_GestureEvent peer);
    void (*setOffsetX)(Ark_GestureEvent peer,
                       const Ark_Number* offsetX);
    Ark_Number (*getOffsetY)(Ark_GestureEvent peer);
    void (*setOffsetY)(Ark_GestureEvent peer,
                       const Ark_Number* offsetY);
    Ark_Number (*getAngle)(Ark_GestureEvent peer);
    void (*setAngle)(Ark_GestureEvent peer,
                     const Ark_Number* angle);
    Ark_Number (*getSpeed)(Ark_GestureEvent peer);
    void (*setSpeed)(Ark_GestureEvent peer,
                     const Ark_Number* speed);
    Ark_Number (*getScale)(Ark_GestureEvent peer);
    void (*setScale)(Ark_GestureEvent peer,
                     const Ark_Number* scale);
    Ark_Number (*getPinchCenterX)(Ark_GestureEvent peer);
    void (*setPinchCenterX)(Ark_GestureEvent peer,
                            const Ark_Number* pinchCenterX);
    Ark_Number (*getPinchCenterY)(Ark_GestureEvent peer);
    void (*setPinchCenterY)(Ark_GestureEvent peer,
                            const Ark_Number* pinchCenterY);
    Ark_Number (*getVelocityX)(Ark_GestureEvent peer);
    void (*setVelocityX)(Ark_GestureEvent peer,
                         const Ark_Number* velocityX);
    Ark_Number (*getVelocityY)(Ark_GestureEvent peer);
    void (*setVelocityY)(Ark_GestureEvent peer,
                         const Ark_Number* velocityY);
    Ark_Number (*getVelocity)(Ark_GestureEvent peer);
    void (*setVelocity)(Ark_GestureEvent peer,
                        const Ark_Number* velocity);
} GENERATED_ArkUIGestureEventAccessor;

typedef struct GENERATED_ArkUIGestureGroupInterfaceAccessor {
    void (*destroyPeer)(Ark_GestureGroupInterface peer);
    Ark_GestureGroupInterface (*construct)(Ark_GestureMode mode,
                                           const Array_GestureType* gesture);
    Ark_NativePointer (*getFinalizer)();
    Ark_GestureGroupInterface (*onCancel)(Ark_GestureGroupInterface peer,
                                          const Callback_Void* event);
} GENERATED_ArkUIGestureGroupInterfaceAccessor;

typedef struct GENERATED_ArkUIGestureModifierAccessor {
    void (*destroyPeer)(Ark_GestureModifier peer);
    Ark_GestureModifier (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*applyGesture)(Ark_GestureModifier peer,
                         const Ark_UIGestureEvent* event);
} GENERATED_ArkUIGestureModifierAccessor;

typedef struct GENERATED_ArkUIGestureRecognizerAccessor {
    void (*destroyPeer)(Ark_GestureRecognizer peer);
    Ark_GestureRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getTag)(Ark_GestureRecognizer peer);
    Ark_GestureControl_GestureType (*getType)(Ark_GestureRecognizer peer);
    Ark_Boolean (*isBuiltIn)(Ark_GestureRecognizer peer);
    void (*setEnabled)(Ark_GestureRecognizer peer,
                       Ark_Boolean isEnabled);
    Ark_Boolean (*isEnabled)(Ark_GestureRecognizer peer);
    Ark_GestureRecognizerState (*getState)(Ark_GestureRecognizer peer);
    Ark_EventTargetInfo (*getEventTargetInfo)(Ark_GestureRecognizer peer);
    Ark_Boolean (*isValid)(Ark_GestureRecognizer peer);
    Ark_Number (*getFingerCount)(Ark_GestureRecognizer peer);
    Ark_Boolean (*isFingerCountLimit)(Ark_GestureRecognizer peer);
} GENERATED_ArkUIGestureRecognizerAccessor;

typedef struct GENERATED_ArkUIGestureStyleAccessor {
    void (*destroyPeer)(Ark_GestureStyle peer);
    Ark_GestureStyle (*construct)(const Opt_GestureStyleInterface* value);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIGestureStyleAccessor;

typedef struct GENERATED_ArkUIGlobalScope_ohos_arkui_componentSnapshotAccessor {
    void (*get)(const Ark_String* id,
                const AsyncCallback_image_PixelMap_Void* callback,
                const Opt_SnapshotOptions* options);
} GENERATED_ArkUIGlobalScope_ohos_arkui_componentSnapshotAccessor;

typedef struct GENERATED_ArkUIGlobalScope_ohos_arkui_performanceMonitorAccessor {
    void (*begin)(const Ark_String* scene,
                  Ark_PerfMonitorActionType startInputType,
                  const Opt_String* note);
    void (*end)(const Ark_String* scene);
    void (*recordInputEventTime)(Ark_PerfMonitorActionType actionType,
                                 Ark_PerfMonitorSourceType sourceType,
                                 Ark_Int64 time);
} GENERATED_ArkUIGlobalScope_ohos_arkui_performanceMonitorAccessor;

typedef struct GENERATED_ArkUIGlobalScope_ohos_fontAccessor {
    void (*registerFont)(const Ark_FontOptions* options);
    Array_String (*getSystemFontList)();
    Ark_FontInfo (*getFontByName)(const Ark_String* fontName);
} GENERATED_ArkUIGlobalScope_ohos_fontAccessor;

typedef struct GENERATED_ArkUIGlobalScope_ohos_measure_utilsAccessor {
    Ark_Number (*measureText)(const Ark_MeasureOptions* options);
    Ark_SizeOptions (*measureTextSize)(const Ark_MeasureOptions* options);
} GENERATED_ArkUIGlobalScope_ohos_measure_utilsAccessor;

typedef struct GENERATED_ArkUIHierarchicalSymbolEffectAccessor {
    void (*destroyPeer)(Ark_HierarchicalSymbolEffect peer);
    Ark_HierarchicalSymbolEffect (*construct)(const Opt_EffectFillStyle* fillStyle);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectFillStyle (*getFillStyle)(Ark_HierarchicalSymbolEffect peer);
    void (*setFillStyle)(Ark_HierarchicalSymbolEffect peer,
                         const Opt_EffectFillStyle* fillStyle);
} GENERATED_ArkUIHierarchicalSymbolEffectAccessor;

typedef struct GENERATED_ArkUIHoverEventAccessor {
    void (*destroyPeer)(Ark_HoverEvent peer);
    Ark_HoverEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Opt_Number (*getX)(Ark_HoverEvent peer);
    void (*setX)(Ark_HoverEvent peer,
                 const Opt_Number* x);
    Opt_Number (*getY)(Ark_HoverEvent peer);
    void (*setY)(Ark_HoverEvent peer,
                 const Opt_Number* y);
    Opt_Number (*getWindowX)(Ark_HoverEvent peer);
    void (*setWindowX)(Ark_HoverEvent peer,
                       const Opt_Number* windowX);
    Opt_Number (*getWindowY)(Ark_HoverEvent peer);
    void (*setWindowY)(Ark_HoverEvent peer,
                       const Opt_Number* windowY);
    Opt_Number (*getDisplayX)(Ark_HoverEvent peer);
    void (*setDisplayX)(Ark_HoverEvent peer,
                        const Opt_Number* displayX);
    Opt_Number (*getDisplayY)(Ark_HoverEvent peer);
    void (*setDisplayY)(Ark_HoverEvent peer,
                        const Opt_Number* displayY);
    Callback_Void (*getStopPropagation)(Ark_HoverEvent peer);
    void (*setStopPropagation)(Ark_HoverEvent peer,
                               const Callback_Void* stopPropagation);
} GENERATED_ArkUIHoverEventAccessor;

typedef struct GENERATED_ArkUIHttpAuthHandlerAccessor {
    void (*destroyPeer)(Ark_HttpAuthHandler peer);
    Ark_HttpAuthHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*confirm)(Ark_HttpAuthHandler peer,
                           const Ark_String* userName,
                           const Ark_String* password);
    void (*cancel)(Ark_HttpAuthHandler peer);
    Ark_Boolean (*isHttpAuthInfoSaved)(Ark_HttpAuthHandler peer);
} GENERATED_ArkUIHttpAuthHandlerAccessor;

typedef struct GENERATED_ArkUIImage_PixelMapAccessor {
    void (*destroyPeer)(Ark_image_PixelMap peer);
    Ark_image_PixelMap (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*readPixelsToBufferSync)(Ark_image_PixelMap peer,
                                   const Ark_Buffer* dst);
    void (*writeBufferToPixels)(Ark_image_PixelMap peer,
                                const Ark_Buffer* src);
    Ark_Boolean (*getIsEditable)(Ark_image_PixelMap peer);
    Ark_Boolean (*getIsStrideAlignment)(Ark_image_PixelMap peer);
} GENERATED_ArkUIImage_PixelMapAccessor;

typedef struct GENERATED_ArkUIImageAnalyzerControllerAccessor {
    void (*destroyPeer)(Ark_ImageAnalyzerController peer);
    Ark_ImageAnalyzerController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Array_ImageAnalyzerType (*getImageAnalyzerSupportTypes)(Ark_ImageAnalyzerController peer);
} GENERATED_ArkUIImageAnalyzerControllerAccessor;

typedef struct GENERATED_ArkUIImageAttachmentAccessor {
    void (*destroyPeer)(Ark_ImageAttachment peer);
    Ark_ImageAttachment (*construct)(const Ark_Union_ImageAttachmentInterface_Opt_AttachmentType* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_image_PixelMap (*getValue)(Ark_ImageAttachment peer);
    Opt_SizeOptions (*getSize)(Ark_ImageAttachment peer);
    Opt_ImageSpanAlignment (*getVerticalAlign)(Ark_ImageAttachment peer);
    Opt_ImageFit (*getObjectFit)(Ark_ImageAttachment peer);
    Opt_ImageAttachmentLayoutStyle (*getLayoutStyle)(Ark_ImageAttachment peer);
    Opt_ColorFilterType (*getColorFilter)(Ark_ImageAttachment peer);
} GENERATED_ArkUIImageAttachmentAccessor;

typedef struct GENERATED_ArkUIImageBitmapAccessor {
    void (*destroyPeer)(Ark_ImageBitmap peer);
    Ark_ImageBitmap (*construct)(const Ark_Union_PixelMap_String* src,
                                 const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    void (*close)(Ark_ImageBitmap peer);
    Ark_Number (*getHeight)(Ark_ImageBitmap peer);
    void (*setHeight)(Ark_ImageBitmap peer,
                      const Ark_Number* height);
    Ark_Number (*getWidth)(Ark_ImageBitmap peer);
    void (*setWidth)(Ark_ImageBitmap peer,
                     const Ark_Number* width);
} GENERATED_ArkUIImageBitmapAccessor;

typedef struct GENERATED_ArkUIImageDataAccessor {
    void (*destroyPeer)(Ark_ImageData peer);
    Ark_ImageData (*construct)(const Ark_Number* width,
                               const Ark_Number* height,
                               const Opt_Buffer* data,
                               const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_Buffer (*getData)(Ark_ImageData peer);
    void (*setData)(Ark_ImageData peer,
                    const Ark_Buffer* data);
    Ark_Number (*getHeight)(Ark_ImageData peer);
    void (*setHeight)(Ark_ImageData peer,
                      const Ark_Number* height);
    Ark_Number (*getWidth)(Ark_ImageData peer);
    void (*setWidth)(Ark_ImageData peer,
                     const Ark_Number* width);
} GENERATED_ArkUIImageDataAccessor;

typedef struct GENERATED_ArkUIIndicatorComponentControllerAccessor {
    void (*destroyPeer)(Ark_IndicatorComponentController peer);
    Ark_IndicatorComponentController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*showNext)(Ark_IndicatorComponentController peer);
    void (*showPrevious)(Ark_IndicatorComponentController peer);
    void (*changeIndex)(Ark_IndicatorComponentController peer,
                        const Ark_Number* index,
                        const Opt_Boolean* useAnimation);
} GENERATED_ArkUIIndicatorComponentControllerAccessor;

typedef struct GENERATED_ArkUIIUIContextAccessor {
    void (*freezeUINode0)(const Ark_String* id,
                          Ark_Boolean isFrozen);
    void (*freezeUINode1)(const Ark_Number* id,
                          Ark_Boolean isFrozen);
} GENERATED_ArkUIIUIContextAccessor;

typedef struct GENERATED_ArkUIJsGeolocationAccessor {
    void (*destroyPeer)(Ark_JsGeolocation peer);
    Ark_JsGeolocation (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*invoke)(Ark_JsGeolocation peer,
                   const Ark_String* origin,
                   Ark_Boolean allow,
                   Ark_Boolean retain);
} GENERATED_ArkUIJsGeolocationAccessor;

typedef struct GENERATED_ArkUIJsResultAccessor {
    void (*destroyPeer)(Ark_JsResult peer);
    Ark_JsResult (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*handleCancel)(Ark_JsResult peer);
    void (*handleConfirm)(Ark_JsResult peer);
    void (*handlePromptConfirm)(Ark_JsResult peer,
                                const Ark_String* result);
} GENERATED_ArkUIJsResultAccessor;

typedef struct GENERATED_ArkUIKeyEventAccessor {
    void (*destroyPeer)(Ark_KeyEvent peer);
    Ark_KeyEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_KeyType (*getType)(Ark_KeyEvent peer);
    void (*setType)(Ark_KeyEvent peer,
                    Ark_KeyType type);
    Ark_Number (*getKeyCode)(Ark_KeyEvent peer);
    void (*setKeyCode)(Ark_KeyEvent peer,
                       const Ark_Number* keyCode);
    Ark_String (*getKeyText)(Ark_KeyEvent peer);
    void (*setKeyText)(Ark_KeyEvent peer,
                       const Ark_String* keyText);
    Ark_KeySource (*getKeySource)(Ark_KeyEvent peer);
    void (*setKeySource)(Ark_KeyEvent peer,
                         Ark_KeySource keySource);
    Ark_Number (*getDeviceId)(Ark_KeyEvent peer);
    void (*setDeviceId)(Ark_KeyEvent peer,
                        const Ark_Number* deviceId);
    Ark_Number (*getMetaKey)(Ark_KeyEvent peer);
    void (*setMetaKey)(Ark_KeyEvent peer,
                       const Ark_Number* metaKey);
    Ark_Number (*getTimestamp)(Ark_KeyEvent peer);
    void (*setTimestamp)(Ark_KeyEvent peer,
                         const Ark_Number* timestamp);
    Callback_Void (*getStopPropagation)(Ark_KeyEvent peer);
    void (*setStopPropagation)(Ark_KeyEvent peer,
                               const Callback_Void* stopPropagation);
    Ark_IntentionCode (*getIntentionCode)(Ark_KeyEvent peer);
    void (*setIntentionCode)(Ark_KeyEvent peer,
                             Ark_IntentionCode intentionCode);
    Opt_ModifierKeyStateGetter (*getGetModifierKeyState)(Ark_KeyEvent peer);
    void (*setGetModifierKeyState)(Ark_KeyEvent peer,
                                   const Opt_ModifierKeyStateGetter* getModifierKeyState);
    Opt_Number (*getUnicode)(Ark_KeyEvent peer);
    void (*setUnicode)(Ark_KeyEvent peer,
                       const Opt_Number* unicode);
} GENERATED_ArkUIKeyEventAccessor;

typedef struct GENERATED_ArkUILayoutableAccessor {
    void (*destroyPeer)(Ark_Layoutable peer);
    Ark_Layoutable (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*layout)(Ark_Layoutable peer,
                   const Ark_Position* position);
    Ark_DirectionalEdgesT (*getMargin)(Ark_Layoutable peer);
    Ark_DirectionalEdgesT (*getPadding)(Ark_Layoutable peer);
    Ark_DirectionalEdgesT (*getBorderWidth)(Ark_Layoutable peer);
    Ark_MeasureResult (*getMeasureResult)(Ark_Layoutable peer);
    void (*setMeasureResult)(Ark_Layoutable peer,
                             const Ark_MeasureResult* measureResult);
    Opt_Number (*getUniqueId)(Ark_Layoutable peer);
    void (*setUniqueId)(Ark_Layoutable peer,
                        const Opt_Number* uniqueId);
} GENERATED_ArkUILayoutableAccessor;

typedef struct GENERATED_ArkUILayoutCallbackAccessor {
    void (*destroyPeer)(Ark_LayoutCallback peer);
    Ark_LayoutCallback (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*onPlaceChildren)(Ark_LayoutCallback peer,
                            const Ark_GeometryInfo* selfLayoutInfo,
                            const Array_Layoutable* children,
                            const Ark_ConstraintSizeOptions* constraint);
    Ark_SizeResult (*onMeasureSize)(Ark_LayoutCallback peer,
                                    const Ark_GeometryInfo* selfLayoutInfo,
                                    const Array_Measurable* children,
                                    const Ark_ConstraintSizeOptions* constraint);
} GENERATED_ArkUILayoutCallbackAccessor;

typedef struct GENERATED_ArkUILayoutChildAccessor {
    void (*destroyPeer)(Ark_LayoutChild peer);
    Ark_LayoutChild (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*measure)(Ark_LayoutChild peer,
                    const Ark_ConstraintSizeOptions* childConstraint);
    Ark_String (*getName)(Ark_LayoutChild peer);
    void (*setName)(Ark_LayoutChild peer,
                    const Ark_String* name);
    Ark_String (*getId)(Ark_LayoutChild peer);
    void (*setId)(Ark_LayoutChild peer,
                  const Ark_String* id);
    Ark_Position (*getPosition)(Ark_LayoutChild peer);
    void (*setPosition)(Ark_LayoutChild peer,
                        const Ark_Position* position);
} GENERATED_ArkUILayoutChildAccessor;

typedef struct GENERATED_ArkUILayoutManagerAccessor {
    void (*destroyPeer)(Ark_LayoutManager peer);
    Ark_LayoutManager (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getLineCount)(Ark_LayoutManager peer);
    Ark_PositionWithAffinity (*getGlyphPositionAtCoordinate)(Ark_LayoutManager peer,
                                                             const Ark_Number* x,
                                                             const Ark_Number* y);
} GENERATED_ArkUILayoutManagerAccessor;

typedef struct GENERATED_ArkUILayoutPolicyAccessor {
    void (*destroyPeer)(Ark_LayoutPolicy peer);
    Ark_LayoutPolicy (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_LayoutPolicy (*getMatchParent)();
} GENERATED_ArkUILayoutPolicyAccessor;

typedef struct GENERATED_ArkUILazyForEachOpsAccessor {
    void (*Sync)(Ark_NativePointer node,
                 Ark_Int32 totalCount,
                 const Callback_CreateItem* creator,
                 const Callback_RangeUpdate* updater);
} GENERATED_ArkUILazyForEachOpsAccessor;

typedef struct GENERATED_ArkUILengthMetricsAccessor {
    void (*destroyPeer)(Ark_LengthMetrics peer);
    Ark_LengthMetrics (*construct)(const Ark_Number* value,
                                   Ark_LengthUnit unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_LengthMetrics (*px)(const Ark_Number* value);
    Ark_LengthMetrics (*vp)(const Ark_Number* value);
    Ark_LengthMetrics (*fp)(const Ark_Number* value);
    Ark_LengthMetrics (*percent)(const Ark_Number* value);
    Ark_LengthMetrics (*lpx)(const Ark_Number* value);
    Ark_LengthMetrics (*resource)(const Ark_Resource* value);
    Ark_LengthUnit (*getUnit)(Ark_LengthMetrics peer);
    void (*setUnit)(Ark_LengthMetrics peer,
                    Ark_LengthUnit unit);
    Ark_Number (*getValue)(Ark_LengthMetrics peer);
    void (*setValue)(Ark_LengthMetrics peer,
                     const Ark_Number* value);
} GENERATED_ArkUILengthMetricsAccessor;

typedef struct GENERATED_ArkUILetterSpacingStyleAccessor {
    void (*destroyPeer)(Ark_LetterSpacingStyle peer);
    Ark_LetterSpacingStyle (*construct)(Ark_LengthMetrics value);
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getLetterSpacing)(Ark_LetterSpacingStyle peer);
} GENERATED_ArkUILetterSpacingStyleAccessor;

typedef struct GENERATED_ArkUILevelOrderAccessor {
    void (*destroyPeer)(Ark_LevelOrder peer);
    Ark_LevelOrder (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_LevelOrder (*clamp)(const Ark_Number* order);
    Ark_Number (*getOrder)(Ark_LevelOrder peer);
} GENERATED_ArkUILevelOrderAccessor;

typedef struct GENERATED_ArkUILifeCycleAccessor {
    void (*destroyPeer)(Ark_LifeCycle peer);
    Ark_LifeCycle (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*aboutToAppear)(Ark_LifeCycle peer);
    void (*aboutToDisappear)(Ark_LifeCycle peer);
    void (*onDidBuild)(Ark_LifeCycle peer);
    void (*build)(Ark_LifeCycle peer);
} GENERATED_ArkUILifeCycleAccessor;

typedef struct GENERATED_ArkUILinearGradientAccessor {
    void (*destroyPeer)(Ark_LinearGradient peer);
    Ark_LinearGradient (*construct)(const Array_ColorStop* colorStops);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUILinearGradientAccessor;

typedef struct GENERATED_ArkUILinearIndicatorControllerAccessor {
    void (*destroyPeer)(Ark_LinearIndicatorController peer);
    Ark_LinearIndicatorController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setProgress)(Ark_LinearIndicatorController peer,
                        const Ark_Number* index,
                        const Ark_Number* progress);
    void (*start)(Ark_LinearIndicatorController peer,
                  const Opt_LinearIndicatorStartOptions* options);
    void (*pause)(Ark_LinearIndicatorController peer);
    void (*stop)(Ark_LinearIndicatorController peer);
} GENERATED_ArkUILinearIndicatorControllerAccessor;

typedef struct GENERATED_ArkUILineHeightStyleAccessor {
    void (*destroyPeer)(Ark_LineHeightStyle peer);
    Ark_LineHeightStyle (*construct)(Ark_LengthMetrics lineHeight);
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getLineHeight)(Ark_LineHeightStyle peer);
} GENERATED_ArkUILineHeightStyleAccessor;

typedef struct GENERATED_ArkUIListScrollerAccessor {
    void (*destroyPeer)(Ark_ListScroller peer);
    Ark_ListScroller (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_RectResult (*getItemRectInGroup)(Ark_ListScroller peer,
                                         const Ark_Number* index,
                                         const Ark_Number* indexInGroup);
    void (*scrollToItemInGroup)(Ark_ListScroller peer,
                                const Ark_Number* index,
                                const Ark_Number* indexInGroup,
                                const Opt_Boolean* smooth,
                                const Opt_ScrollAlign* align);
    void (*closeAllSwipeActions)(Ark_ListScroller peer,
                                 const Opt_CloseSwipeActionOptions* options);
    Ark_VisibleListContentInfo (*getVisibleListContentInfo)(Ark_ListScroller peer,
                                                            const Ark_Number* x,
                                                            const Ark_Number* y);
} GENERATED_ArkUIListScrollerAccessor;

typedef struct GENERATED_ArkUILongPressGestureEventAccessor {
    void (*destroyPeer)(Ark_LongPressGestureEvent peer);
    Ark_LongPressGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*getRepeat)(Ark_LongPressGestureEvent peer);
    void (*setRepeat)(Ark_LongPressGestureEvent peer,
                      Ark_Boolean repeat);
} GENERATED_ArkUILongPressGestureEventAccessor;

typedef struct GENERATED_ArkUILongPressGestureInterfaceAccessor {
    void (*destroyPeer)(Ark_LongPressGestureInterface peer);
    Ark_LongPressGestureInterface (*construct)(const Ark_LongPressGestureInterface_Invoke_Literal* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_LongPressGestureInterface (*onAction)(Ark_LongPressGestureInterface peer,
                                              const Callback_GestureEvent_Void* event);
    Ark_LongPressGestureInterface (*onActionEnd)(Ark_LongPressGestureInterface peer,
                                                 const Callback_GestureEvent_Void* event);
    Ark_LongPressGestureInterface (*onActionCancel0)(Ark_LongPressGestureInterface peer,
                                                     const Callback_Void* event);
    Ark_LongPressGestureInterface (*onActionCancel1)(Ark_LongPressGestureInterface peer,
                                                     const Callback_GestureEvent_Void* event);
} GENERATED_ArkUILongPressGestureInterfaceAccessor;

typedef struct GENERATED_ArkUILongPressRecognizerAccessor {
    void (*destroyPeer)(Ark_LongPressRecognizer peer);
    Ark_LongPressRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*isRepeat)(Ark_LongPressRecognizer peer);
    Ark_Number (*getDuration)(Ark_LongPressRecognizer peer);
} GENERATED_ArkUILongPressRecognizerAccessor;

typedef struct GENERATED_ArkUIMatrix2DAccessor {
    void (*destroyPeer)(Ark_Matrix2D peer);
    Ark_Matrix2D (*construct0)();
    Ark_Matrix2D (*construct1)(Ark_LengthMetricsUnit unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_Matrix2D (*identity)(Ark_Matrix2D peer);
    Ark_Matrix2D (*invert)(Ark_Matrix2D peer);
    Ark_Matrix2D (*rotate)(Ark_Matrix2D peer,
                           const Ark_Number* degree,
                           const Opt_Number* rx,
                           const Opt_Number* ry);
    Ark_Matrix2D (*translate)(Ark_Matrix2D peer,
                              const Opt_Number* tx,
                              const Opt_Number* ty);
    Ark_Matrix2D (*scale)(Ark_Matrix2D peer,
                          const Opt_Number* sx,
                          const Opt_Number* sy);
    Opt_Number (*getScaleX)(Ark_Matrix2D peer);
    void (*setScaleX)(Ark_Matrix2D peer,
                      const Opt_Number* scaleX);
    Opt_Number (*getRotateY)(Ark_Matrix2D peer);
    void (*setRotateY)(Ark_Matrix2D peer,
                       const Opt_Number* rotateY);
    Opt_Number (*getRotateX)(Ark_Matrix2D peer);
    void (*setRotateX)(Ark_Matrix2D peer,
                       const Opt_Number* rotateX);
    Opt_Number (*getScaleY)(Ark_Matrix2D peer);
    void (*setScaleY)(Ark_Matrix2D peer,
                      const Opt_Number* scaleY);
    Opt_Number (*getTranslateX)(Ark_Matrix2D peer);
    void (*setTranslateX)(Ark_Matrix2D peer,
                          const Opt_Number* translateX);
    Opt_Number (*getTranslateY)(Ark_Matrix2D peer);
    void (*setTranslateY)(Ark_Matrix2D peer,
                          const Opt_Number* translateY);
} GENERATED_ArkUIMatrix2DAccessor;

typedef struct GENERATED_ArkUIMatrix4_Matrix4TransitAccessor {
    void (*destroyPeer)(Ark_matrix4_Matrix4Transit peer);
    Ark_matrix4_Matrix4Transit (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_matrix4_Matrix4Transit (*copy)(Ark_matrix4_Matrix4Transit peer);
    Ark_matrix4_Matrix4Transit (*invert)(Ark_matrix4_Matrix4Transit peer);
    Ark_matrix4_Matrix4Transit (*combine)(Ark_matrix4_Matrix4Transit peer,
                                          Ark_matrix4_Matrix4Transit options);
    Ark_matrix4_Matrix4Transit (*translate)(Ark_matrix4_Matrix4Transit peer,
                                            const Ark_TranslateOptions* options);
    Ark_matrix4_Matrix4Transit (*scale)(Ark_matrix4_Matrix4Transit peer,
                                        const Ark_ScaleOptions* options);
    Ark_matrix4_Matrix4Transit (*skew)(Ark_matrix4_Matrix4Transit peer,
                                       const Ark_Number* x,
                                       const Ark_Number* y);
    Ark_matrix4_Matrix4Transit (*rotate)(Ark_matrix4_Matrix4Transit peer,
                                         const Ark_RotateOptions* options);
    Ark_matrix4_Matrix4TransformPoint (*transformPoint)(Ark_matrix4_Matrix4Transit peer,
                                                        const Ark_matrix4_Matrix4TransformPoint* options);
    Ark_matrix4_Matrix4Transit (*setPolyToPoly)(Ark_matrix4_Matrix4Transit peer,
                                                const Ark_matrix4_PolyToPolyOptions* options);
} GENERATED_ArkUIMatrix4_Matrix4TransitAccessor;

typedef struct GENERATED_ArkUIMeasurableAccessor {
    void (*destroyPeer)(Ark_Measurable peer);
    Ark_Measurable (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_MeasureResult (*measure)(Ark_Measurable peer,
                                 const Ark_ConstraintSizeOptions* constraint);
    Ark_DirectionalEdgesT (*getMargin)(Ark_Measurable peer);
    Ark_DirectionalEdgesT (*getPadding)(Ark_Measurable peer);
    Ark_DirectionalEdgesT (*getBorderWidth)(Ark_Measurable peer);
    Opt_Number (*getUniqueId)(Ark_Measurable peer);
    void (*setUniqueId)(Ark_Measurable peer,
                        const Opt_Number* uniqueId);
} GENERATED_ArkUIMeasurableAccessor;

typedef struct GENERATED_ArkUIMouseEventAccessor {
    void (*destroyPeer)(Ark_MouseEvent peer);
    Ark_MouseEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_MouseButton (*getButton)(Ark_MouseEvent peer);
    void (*setButton)(Ark_MouseEvent peer,
                      Ark_MouseButton button);
    Ark_MouseAction (*getAction)(Ark_MouseEvent peer);
    void (*setAction)(Ark_MouseEvent peer,
                      Ark_MouseAction action);
    Ark_Number (*getDisplayX)(Ark_MouseEvent peer);
    void (*setDisplayX)(Ark_MouseEvent peer,
                        const Ark_Number* displayX);
    Ark_Number (*getDisplayY)(Ark_MouseEvent peer);
    void (*setDisplayY)(Ark_MouseEvent peer,
                        const Ark_Number* displayY);
    Ark_Number (*getWindowX)(Ark_MouseEvent peer);
    void (*setWindowX)(Ark_MouseEvent peer,
                       const Ark_Number* windowX);
    Ark_Number (*getWindowY)(Ark_MouseEvent peer);
    void (*setWindowY)(Ark_MouseEvent peer,
                       const Ark_Number* windowY);
    Ark_Number (*getX)(Ark_MouseEvent peer);
    void (*setX)(Ark_MouseEvent peer,
                 const Ark_Number* x);
    Ark_Number (*getY)(Ark_MouseEvent peer);
    void (*setY)(Ark_MouseEvent peer,
                 const Ark_Number* y);
    Callback_Void (*getStopPropagation)(Ark_MouseEvent peer);
    void (*setStopPropagation)(Ark_MouseEvent peer,
                               const Callback_Void* stopPropagation);
    Opt_Number (*getRawDeltaX)(Ark_MouseEvent peer);
    void (*setRawDeltaX)(Ark_MouseEvent peer,
                         const Opt_Number* rawDeltaX);
    Opt_Number (*getRawDeltaY)(Ark_MouseEvent peer);
    void (*setRawDeltaY)(Ark_MouseEvent peer,
                         const Opt_Number* rawDeltaY);
    Opt_Array_MouseButton (*getPressedButtons)(Ark_MouseEvent peer);
    void (*setPressedButtons)(Ark_MouseEvent peer,
                              const Opt_Array_MouseButton* pressedButtons);
} GENERATED_ArkUIMouseEventAccessor;

typedef struct GENERATED_ArkUIMutableStyledStringAccessor {
    void (*destroyPeer)(Ark_MutableStyledString peer);
    Ark_MutableStyledString (*construct)(const Ark_Union_String_ImageAttachment_CustomSpan* value,
                                         const Opt_Array_StyleOptions* styles);
    Ark_NativePointer (*getFinalizer)();
    void (*replaceString)(Ark_MutableStyledString peer,
                          const Ark_Number* start,
                          const Ark_Number* length,
                          const Ark_String* other);
    void (*insertString)(Ark_MutableStyledString peer,
                         const Ark_Number* start,
                         const Ark_String* other);
    void (*removeString)(Ark_MutableStyledString peer,
                         const Ark_Number* start,
                         const Ark_Number* length);
    void (*replaceStyle)(Ark_MutableStyledString peer,
                         const Ark_SpanStyle* spanStyle);
    void (*setStyle)(Ark_MutableStyledString peer,
                     const Ark_SpanStyle* spanStyle);
    void (*removeStyle)(Ark_MutableStyledString peer,
                        const Ark_Number* start,
                        const Ark_Number* length,
                        Ark_StyledStringKey styledKey);
    void (*removeStyles)(Ark_MutableStyledString peer,
                         const Ark_Number* start,
                         const Ark_Number* length);
    void (*clearStyles)(Ark_MutableStyledString peer);
    void (*replaceStyledString)(Ark_MutableStyledString peer,
                                const Ark_Number* start,
                                const Ark_Number* length,
                                Ark_StyledString other);
    void (*insertStyledString)(Ark_MutableStyledString peer,
                               const Ark_Number* start,
                               Ark_StyledString other);
    void (*appendStyledString)(Ark_MutableStyledString peer,
                               Ark_StyledString other);
} GENERATED_ArkUIMutableStyledStringAccessor;

typedef struct GENERATED_ArkUINavDestinationContextAccessor {
    void (*destroyPeer)(Ark_NavDestinationContext peer);
    Ark_NavDestinationContext (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Opt_RouteMapConfig (*getConfigInRouteMap)(Ark_NavDestinationContext peer);
    Ark_NavPathInfo (*getPathInfo)(Ark_NavDestinationContext peer);
    void (*setPathInfo)(Ark_NavDestinationContext peer,
                        Ark_NavPathInfo pathInfo);
    Ark_NavPathStack (*getPathStack)(Ark_NavDestinationContext peer);
    void (*setPathStack)(Ark_NavDestinationContext peer,
                         Ark_NavPathStack pathStack);
    Opt_String (*getNavDestinationId)(Ark_NavDestinationContext peer);
    void (*setNavDestinationId)(Ark_NavDestinationContext peer,
                                const Opt_String* navDestinationId);
} GENERATED_ArkUINavDestinationContextAccessor;

typedef struct GENERATED_ArkUINavExtenderAccessor {
    void (*setNavigationOptions)(Ark_NativePointer ptr,
                                 Ark_NavPathStack pathStack);
    void (*setUpdateStackCallback)(Ark_NavPathStack peer,
                                   const NavExtender_OnUpdateStack* callback);
    void (*syncStack)(Ark_NavPathStack peer);
    Ark_Boolean (*checkNeedCreate)(Ark_NativePointer navigation,
                                   Ark_Int32 index);
    void (*setNavDestinationNode)(Ark_NavPathStack peer,
                                  Ark_Int32 index,
                                  Ark_NativePointer node);
    void (*pushPath)(Ark_NavPathStack pathStack,
                     Ark_NavPathInfo info,
                     const Ark_NavigationOptions* options);
    void (*replacePath)(Ark_NavPathStack pathStack,
                        Ark_NavPathInfo info,
                        const Ark_NavigationOptions* options);
    Ark_String (*pop)(Ark_NavPathStack pathStack,
                      Ark_Boolean animated);
    void (*setOnPopCallback)(Ark_NavPathStack pathStack,
                             const Callback_String_Void* popCallback);
    Ark_String (*getIdByIndex)(Ark_NavPathStack pathStack,
                               Ark_Int32 index);
    Array_String (*getIdByName)(Ark_NavPathStack pathStack,
                                const Ark_String* name);
    void (*popToIndex)(Ark_NavPathStack pathStack,
                       Ark_Int32 index,
                       Ark_Boolean animated);
    Ark_Number (*popToName)(Ark_NavPathStack pathStack,
                            const Ark_String* name,
                            Ark_Boolean animated);
} GENERATED_ArkUINavExtenderAccessor;

typedef struct GENERATED_ArkUINavigationTransitionProxyAccessor {
    void (*destroyPeer)(Ark_NavigationTransitionProxy peer);
    Ark_NavigationTransitionProxy (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*finishTransition)(Ark_NavigationTransitionProxy peer);
    Ark_NavContentInfo (*getFrom)(Ark_NavigationTransitionProxy peer);
    void (*setFrom)(Ark_NavigationTransitionProxy peer,
                    const Ark_NavContentInfo* from);
    Ark_NavContentInfo (*getTo)(Ark_NavigationTransitionProxy peer);
    void (*setTo)(Ark_NavigationTransitionProxy peer,
                  const Ark_NavContentInfo* to);
    Opt_Boolean (*getIsInteractive)(Ark_NavigationTransitionProxy peer);
    void (*setIsInteractive)(Ark_NavigationTransitionProxy peer,
                             const Opt_Boolean* isInteractive);
    Opt_VoidCallback (*getCancelTransition)(Ark_NavigationTransitionProxy peer);
    void (*setCancelTransition)(Ark_NavigationTransitionProxy peer,
                                const Opt_VoidCallback* cancelTransition);
    Opt_UpdateTransitionCallback (*getUpdateTransition)(Ark_NavigationTransitionProxy peer);
    void (*setUpdateTransition)(Ark_NavigationTransitionProxy peer,
                                const Opt_UpdateTransitionCallback* updateTransition);
} GENERATED_ArkUINavigationTransitionProxyAccessor;

typedef struct GENERATED_ArkUINavPathInfoAccessor {
    void (*destroyPeer)(Ark_NavPathInfo peer);
    Ark_NavPathInfo (*construct)(const Ark_String* name,
                                 const Opt_Object* param,
                                 const Opt_Callback_PopInfo_Void* onPop,
                                 const Opt_Boolean* isEntry);
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getName)(Ark_NavPathInfo peer);
    void (*setName)(Ark_NavPathInfo peer,
                    const Ark_String* name);
    Opt_Object (*getParam)(Ark_NavPathInfo peer);
    void (*setParam)(Ark_NavPathInfo peer,
                     const Opt_Object* param);
    Opt_Callback_PopInfo_Void (*getOnPop)(Ark_NavPathInfo peer);
    void (*setOnPop)(Ark_NavPathInfo peer,
                     const Opt_Callback_PopInfo_Void* onPop);
    Opt_Boolean (*getIsEntry)(Ark_NavPathInfo peer);
    void (*setIsEntry)(Ark_NavPathInfo peer,
                       const Opt_Boolean* isEntry);
    Opt_String (*getNavDestinationId)(Ark_NavPathInfo peer);
    void (*setNavDestinationId)(Ark_NavPathInfo peer,
                                const Opt_String* navDestinationId);
} GENERATED_ArkUINavPathInfoAccessor;

typedef struct GENERATED_ArkUINavPathStackAccessor {
    void (*destroyPeer)(Ark_NavPathStack peer);
    Ark_NavPathStack (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*pushPath0)(Ark_NavPathStack peer,
                      Ark_NavPathInfo info,
                      const Opt_Boolean* animated);
    void (*pushPath1)(Ark_NavPathStack peer,
                      Ark_NavPathInfo info,
                      const Opt_NavigationOptions* options);
    void (*pushDestination0)(Ark_VMContext vmContext,
                             Ark_AsyncWorkerPtr asyncWorker,
                             Ark_NavPathStack peer,
                             Ark_NavPathInfo info,
                             const Opt_Boolean* animated,
                             const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*pushDestination1)(Ark_VMContext vmContext,
                             Ark_AsyncWorkerPtr asyncWorker,
                             Ark_NavPathStack peer,
                             Ark_NavPathInfo info,
                             const Opt_NavigationOptions* options,
                             const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*pushPathByName0)(Ark_NavPathStack peer,
                            const Ark_String* name,
                            const Opt_Object* param,
                            const Opt_Boolean* animated);
    void (*pushPathByName1)(Ark_NavPathStack peer,
                            const Ark_String* name,
                            const Ark_Object* param,
                            const Callback_PopInfo_Void* onPop,
                            const Opt_Boolean* animated);
    void (*pushDestinationByName0)(Ark_VMContext vmContext,
                                   Ark_AsyncWorkerPtr asyncWorker,
                                   Ark_NavPathStack peer,
                                   const Ark_String* name,
                                   const Ark_Object* param,
                                   const Opt_Boolean* animated,
                                   const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*pushDestinationByName1)(Ark_VMContext vmContext,
                                   Ark_AsyncWorkerPtr asyncWorker,
                                   Ark_NavPathStack peer,
                                   const Ark_String* name,
                                   const Ark_Object* param,
                                   const Callback_PopInfo_Void* onPop,
                                   const Opt_Boolean* animated,
                                   const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*replacePath0)(Ark_NavPathStack peer,
                         Ark_NavPathInfo info,
                         const Opt_Boolean* animated);
    void (*replacePath1)(Ark_NavPathStack peer,
                         Ark_NavPathInfo info,
                         const Opt_NavigationOptions* options);
    void (*replaceDestination)(Ark_VMContext vmContext,
                               Ark_AsyncWorkerPtr asyncWorker,
                               Ark_NavPathStack peer,
                               Ark_NavPathInfo info,
                               const Opt_NavigationOptions* options,
                               const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*replacePathByName)(Ark_NavPathStack peer,
                              const Ark_String* name,
                              const Ark_Object* param,
                              const Opt_Boolean* animated);
    Ark_Number (*removeByIndexes)(Ark_NavPathStack peer,
                                  const Array_Number* indexes);
    Ark_Number (*removeByName)(Ark_NavPathStack peer,
                               const Ark_String* name);
    Ark_Boolean (*removeByNavDestinationId)(Ark_NavPathStack peer,
                                            const Ark_String* navDestinationId);
    Opt_NavPathInfo (*pop0)(Ark_NavPathStack peer,
                            const Opt_Boolean* animated);
    Opt_NavPathInfo (*pop1)(Ark_NavPathStack peer,
                            const Ark_Object* result,
                            const Opt_Boolean* animated);
    Ark_Number (*popToName0)(Ark_NavPathStack peer,
                             const Ark_String* name,
                             const Opt_Boolean* animated);
    Ark_Number (*popToName1)(Ark_NavPathStack peer,
                             const Ark_String* name,
                             const Ark_Object* result,
                             const Opt_Boolean* animated);
    void (*popToIndex0)(Ark_NavPathStack peer,
                        const Ark_Number* index,
                        const Opt_Boolean* animated);
    void (*popToIndex1)(Ark_NavPathStack peer,
                        const Ark_Number* index,
                        const Ark_Object* result,
                        const Opt_Boolean* animated);
    Ark_Number (*moveToTop)(Ark_NavPathStack peer,
                            const Ark_String* name,
                            const Opt_Boolean* animated);
    void (*moveIndexToTop)(Ark_NavPathStack peer,
                           const Ark_Number* index,
                           const Opt_Boolean* animated);
    void (*clear)(Ark_NavPathStack peer,
                  const Opt_Boolean* animated);
    Array_String (*getAllPathName)(Ark_NavPathStack peer);
    Opt_Object (*getParamByIndex)(Ark_NavPathStack peer,
                                  const Ark_Number* index);
    Array_Opt_Object (*getParamByName)(Ark_NavPathStack peer,
                                       const Ark_String* name);
    Array_Number (*getIndexByName)(Ark_NavPathStack peer,
                                   const Ark_String* name);
    Opt_NavPathStack (*getParent)(Ark_NavPathStack peer);
    Ark_Number (*size)(Ark_NavPathStack peer);
    void (*disableAnimation)(Ark_NavPathStack peer,
                             Ark_Boolean value);
    void (*setInterception)(Ark_NavPathStack peer,
                            const Ark_NavigationInterception* interception);
    Array_NavPathInfo (*getPathStack)(Ark_NavPathStack peer);
    void (*setPathStack)(Ark_NavPathStack peer,
                         const Array_NavPathInfo* pathStack,
                         const Opt_Boolean* animated);
} GENERATED_ArkUINavPathStackAccessor;

typedef struct GENERATED_ArkUINodeContentAccessor {
    void (*destroyPeer)(Ark_NodeContent peer);
    Ark_NodeContent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*addFrameNode)(Ark_NodeContent peer,
                         Ark_FrameNode node);
    void (*removeFrameNode)(Ark_NodeContent peer,
                            Ark_FrameNode node);
} GENERATED_ArkUINodeContentAccessor;

typedef struct GENERATED_ArkUIOffscreenCanvasAccessor {
    void (*destroyPeer)(Ark_OffscreenCanvas peer);
    Ark_OffscreenCanvas (*construct)(const Ark_Number* width,
                                     const Ark_Number* height,
                                     const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_ImageBitmap (*transferToImageBitmap)(Ark_OffscreenCanvas peer);
    Ark_OffscreenCanvasRenderingContext2D (*getContext2d)(Ark_OffscreenCanvas peer,
                                                          const Opt_RenderingContextSettings* options);
    Ark_Number (*getHeight)(Ark_OffscreenCanvas peer);
    void (*setHeight)(Ark_OffscreenCanvas peer,
                      const Ark_Number* height);
    Ark_Number (*getWidth)(Ark_OffscreenCanvas peer);
    void (*setWidth)(Ark_OffscreenCanvas peer,
                     const Ark_Number* width);
} GENERATED_ArkUIOffscreenCanvasAccessor;

typedef struct GENERATED_ArkUIOffscreenCanvasRenderingContext2DAccessor {
    void (*destroyPeer)(Ark_OffscreenCanvasRenderingContext2D peer);
    Ark_OffscreenCanvasRenderingContext2D (*construct)(const Ark_Number* width,
                                                       const Ark_Number* height,
                                                       const Opt_RenderingContextSettings* settings,
                                                       const Opt_LengthMetricsUnit* unit);
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*toDataURL)(Ark_OffscreenCanvasRenderingContext2D peer,
                            const Opt_String* type,
                            const Opt_Number* quality);
    Ark_ImageBitmap (*transferToImageBitmap)(Ark_OffscreenCanvasRenderingContext2D peer);
} GENERATED_ArkUIOffscreenCanvasRenderingContext2DAccessor;

typedef struct GENERATED_ArkUIPageLifeCycleAccessor {
    void (*destroyPeer)(Ark_PageLifeCycle peer);
    Ark_PageLifeCycle (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*onPageShow)(Ark_PageLifeCycle peer);
    void (*onPageHide)(Ark_PageLifeCycle peer);
    Ark_Boolean (*onBackPress)(Ark_PageLifeCycle peer);
    void (*pageTransition)(Ark_PageLifeCycle peer);
    void (*onNewParam)(Ark_PageLifeCycle peer,
                       const Opt_Object* param);
} GENERATED_ArkUIPageLifeCycleAccessor;

typedef struct GENERATED_ArkUIPanGestureEventAccessor {
    void (*destroyPeer)(Ark_PanGestureEvent peer);
    Ark_PanGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getOffsetX)(Ark_PanGestureEvent peer);
    void (*setOffsetX)(Ark_PanGestureEvent peer,
                       const Ark_Number* offsetX);
    Ark_Number (*getOffsetY)(Ark_PanGestureEvent peer);
    void (*setOffsetY)(Ark_PanGestureEvent peer,
                       const Ark_Number* offsetY);
    Ark_Number (*getVelocityX)(Ark_PanGestureEvent peer);
    void (*setVelocityX)(Ark_PanGestureEvent peer,
                         const Ark_Number* velocityX);
    Ark_Number (*getVelocityY)(Ark_PanGestureEvent peer);
    void (*setVelocityY)(Ark_PanGestureEvent peer,
                         const Ark_Number* velocityY);
    Ark_Number (*getVelocity)(Ark_PanGestureEvent peer);
    void (*setVelocity)(Ark_PanGestureEvent peer,
                        const Ark_Number* velocity);
} GENERATED_ArkUIPanGestureEventAccessor;

typedef struct GENERATED_ArkUIPanGestureInterfaceAccessor {
    void (*destroyPeer)(Ark_PanGestureInterface peer);
    Ark_PanGestureInterface (*construct)(const Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_PanGestureInterface (*onActionStart)(Ark_PanGestureInterface peer,
                                             const Callback_GestureEvent_Void* event);
    Ark_PanGestureInterface (*onActionUpdate)(Ark_PanGestureInterface peer,
                                              const Callback_GestureEvent_Void* event);
    Ark_PanGestureInterface (*onActionEnd)(Ark_PanGestureInterface peer,
                                           const Callback_GestureEvent_Void* event);
    Ark_PanGestureInterface (*onActionCancel0)(Ark_PanGestureInterface peer,
                                               const Callback_Void* event);
    Ark_PanGestureInterface (*onActionCancel1)(Ark_PanGestureInterface peer,
                                               const Callback_GestureEvent_Void* event);
} GENERATED_ArkUIPanGestureInterfaceAccessor;

typedef struct GENERATED_ArkUIPanGestureOptionsAccessor {
    void (*destroyPeer)(Ark_PanGestureOptions peer);
    Ark_PanGestureOptions (*construct)(const Opt_PanGestureHandlerOptions* value);
    Ark_NativePointer (*getFinalizer)();
    void (*setDirection)(Ark_PanGestureOptions peer,
                         Ark_PanDirection value);
    void (*setDistance)(Ark_PanGestureOptions peer,
                        const Ark_Number* value);
    void (*setFingers)(Ark_PanGestureOptions peer,
                       const Ark_Number* value);
    Ark_PanDirection (*getDirection)(Ark_PanGestureOptions peer);
    Ark_Number (*getDistance)(Ark_PanGestureOptions peer);
} GENERATED_ArkUIPanGestureOptionsAccessor;

typedef struct GENERATED_ArkUIPanRecognizerAccessor {
    void (*destroyPeer)(Ark_PanRecognizer peer);
    Ark_PanRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_PanGestureOptions (*getPanGestureOptions)(Ark_PanRecognizer peer);
} GENERATED_ArkUIPanRecognizerAccessor;

typedef struct GENERATED_ArkUIParagraphStyleAccessor {
    void (*destroyPeer)(Ark_ParagraphStyle peer);
    Ark_ParagraphStyle (*construct)(const Opt_ParagraphStyleInterface* value);
    Ark_NativePointer (*getFinalizer)();
    Opt_TextAlign (*getTextAlign)(Ark_ParagraphStyle peer);
    Opt_Number (*getTextIndent)(Ark_ParagraphStyle peer);
    Opt_Number (*getMaxLines)(Ark_ParagraphStyle peer);
    Opt_TextOverflow (*getOverflow)(Ark_ParagraphStyle peer);
    Opt_WordBreak (*getWordBreak)(Ark_ParagraphStyle peer);
    Opt_Union_Number_LeadingMarginPlaceholder (*getLeadingMargin)(Ark_ParagraphStyle peer);
    Opt_Number (*getParagraphSpacing)(Ark_ParagraphStyle peer);
} GENERATED_ArkUIParagraphStyleAccessor;

typedef struct GENERATED_ArkUIPath2DAccessor {
    void (*destroyPeer)(Ark_Path2D peer);
    Ark_Path2D (*construct0)();
    Ark_Path2D (*construct1)(Ark_LengthMetricsUnit unit);
    Ark_Path2D (*construct2)(Ark_Path2D path);
    Ark_Path2D (*construct3)(Ark_Path2D path,
                             Ark_LengthMetricsUnit unit);
    Ark_Path2D (*construct4)(const Ark_String* d);
    Ark_Path2D (*construct5)(const Ark_String* description,
                             Ark_LengthMetricsUnit unit);
    Ark_NativePointer (*getFinalizer)();
    void (*addPath)(Ark_Path2D peer,
                    Ark_Path2D path,
                    const Opt_Matrix2D* transform);
} GENERATED_ArkUIPath2DAccessor;

typedef struct GENERATED_ArkUIPathShapeAccessor {
    void (*destroyPeer)(Ark_PathShape peer);
    Ark_PathShape (*construct)(const Opt_PathShapeOptions* options);
    Ark_NativePointer (*getFinalizer)();
    Ark_PathShape (*offset)(Ark_PathShape peer,
                            const Ark_Position* offset);
    Ark_PathShape (*fill)(Ark_PathShape peer,
                          const Ark_ResourceColor* color);
    Ark_PathShape (*position)(Ark_PathShape peer,
                              const Ark_Position* position);
    Ark_PathShape (*commands)(Ark_PathShape peer,
                              const Ark_String* commands);
} GENERATED_ArkUIPathShapeAccessor;

typedef struct GENERATED_ArkUIPatternLockControllerAccessor {
    void (*destroyPeer)(Ark_PatternLockController peer);
    Ark_PatternLockController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*reset)(Ark_PatternLockController peer);
    void (*setChallengeResult)(Ark_PatternLockController peer,
                               Ark_PatternLockChallengeResult result);
} GENERATED_ArkUIPatternLockControllerAccessor;

typedef struct GENERATED_ArkUIPermissionRequestAccessor {
    void (*destroyPeer)(Ark_PermissionRequest peer);
    Ark_PermissionRequest (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*deny)(Ark_PermissionRequest peer);
    Ark_String (*getOrigin)(Ark_PermissionRequest peer);
    Array_String (*getAccessibleResource)(Ark_PermissionRequest peer);
    void (*grant)(Ark_PermissionRequest peer,
                  const Array_String* resources);
} GENERATED_ArkUIPermissionRequestAccessor;

typedef struct GENERATED_ArkUIPinchGestureEventAccessor {
    void (*destroyPeer)(Ark_PinchGestureEvent peer);
    Ark_PinchGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getScale)(Ark_PinchGestureEvent peer);
    void (*setScale)(Ark_PinchGestureEvent peer,
                     const Ark_Number* scale);
    Ark_Number (*getPinchCenterX)(Ark_PinchGestureEvent peer);
    void (*setPinchCenterX)(Ark_PinchGestureEvent peer,
                            const Ark_Number* pinchCenterX);
    Ark_Number (*getPinchCenterY)(Ark_PinchGestureEvent peer);
    void (*setPinchCenterY)(Ark_PinchGestureEvent peer,
                            const Ark_Number* pinchCenterY);
} GENERATED_ArkUIPinchGestureEventAccessor;

typedef struct GENERATED_ArkUIPinchGestureInterfaceAccessor {
    void (*destroyPeer)(Ark_PinchGestureInterface peer);
    Ark_PinchGestureInterface (*construct)(const Ark_PinchGestureInterface_Invoke_Literal* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_PinchGestureInterface (*onActionStart)(Ark_PinchGestureInterface peer,
                                               const Callback_GestureEvent_Void* event);
    Ark_PinchGestureInterface (*onActionUpdate)(Ark_PinchGestureInterface peer,
                                                const Callback_GestureEvent_Void* event);
    Ark_PinchGestureInterface (*onActionEnd)(Ark_PinchGestureInterface peer,
                                             const Callback_GestureEvent_Void* event);
    Ark_PinchGestureInterface (*onActionCancel0)(Ark_PinchGestureInterface peer,
                                                 const Callback_Void* event);
    Ark_PinchGestureInterface (*onActionCancel1)(Ark_PinchGestureInterface peer,
                                                 const Callback_GestureEvent_Void* event);
} GENERATED_ArkUIPinchGestureInterfaceAccessor;

typedef struct GENERATED_ArkUIPinchRecognizerAccessor {
    void (*destroyPeer)(Ark_PinchRecognizer peer);
    Ark_PinchRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getDistance)(Ark_PinchRecognizer peer);
} GENERATED_ArkUIPinchRecognizerAccessor;

typedef struct GENERATED_ArkUIPixelMapMockAccessor {
    void (*destroyPeer)(Ark_PixelMapMock peer);
    Ark_PixelMapMock (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*release)(Ark_PixelMapMock peer);
} GENERATED_ArkUIPixelMapMockAccessor;

typedef struct GENERATED_ArkUIProgressMaskAccessor {
    void (*destroyPeer)(Ark_ProgressMask peer);
    Ark_ProgressMask (*construct)(const Ark_Number* value,
                                  const Ark_Number* total,
                                  const Ark_ResourceColor* color);
    Ark_NativePointer (*getFinalizer)();
    void (*updateProgress)(Ark_ProgressMask peer,
                           const Ark_Number* value);
    void (*updateColor)(Ark_ProgressMask peer,
                        const Ark_ResourceColor* value);
    void (*enableBreathingAnimation)(Ark_ProgressMask peer,
                                     Ark_Boolean value);
} GENERATED_ArkUIProgressMaskAccessor;

typedef struct GENERATED_ArkUIPromptActionAccessor {
    void (*destroyPeer)(Ark_PromptAction peer);
    Ark_PromptAction (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*openPopup)(Ark_VMContext vmContext,
                      Ark_AsyncWorkerPtr asyncWorker,
                      Ark_PromptAction peer,
                      Ark_ComponentContent content,
                      const Ark_TargetInfo* target,
                      const Opt_PopupCommonOptions* options,
                      const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*upatePopup)(Ark_VMContext vmContext,
                       Ark_AsyncWorkerPtr asyncWorker,
                       Ark_PromptAction peer,
                       Ark_ComponentContent content,
                       const Ark_PopupCommonOptions* options,
                       const Opt_Boolean* partialUpdate,
                       const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*closePopup)(Ark_VMContext vmContext,
                       Ark_AsyncWorkerPtr asyncWorker,
                       Ark_PromptAction peer,
                       Ark_ComponentContent content,
                       const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*openMenu)(Ark_VMContext vmContext,
                     Ark_AsyncWorkerPtr asyncWorker,
                     Ark_PromptAction peer,
                     Ark_ComponentContent content,
                     const Ark_TargetInfo* target,
                     const Opt_MenuOptions* options,
                     const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*updateMenu)(Ark_VMContext vmContext,
                       Ark_AsyncWorkerPtr asyncWorker,
                       Ark_PromptAction peer,
                       Ark_ComponentContent content,
                       const Ark_MenuOptions* options,
                       const Opt_Boolean* partialUpdate,
                       const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*closeMenu)(Ark_VMContext vmContext,
                      Ark_AsyncWorkerPtr asyncWorker,
                      Ark_PromptAction peer,
                      Ark_ComponentContent content,
                      const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
} GENERATED_ArkUIPromptActionAccessor;

typedef struct GENERATED_ArkUIRectShapeAccessor {
    void (*destroyPeer)(Ark_RectShape peer);
    Ark_RectShape (*construct)(const Opt_Union_RectShapeOptions_RoundRectShapeOptions* options);
    Ark_NativePointer (*getFinalizer)();
    Ark_RectShape (*offset)(Ark_RectShape peer,
                            const Ark_Position* offset);
    Ark_RectShape (*fill)(Ark_RectShape peer,
                          const Ark_ResourceColor* color);
    Ark_RectShape (*position)(Ark_RectShape peer,
                              const Ark_Position* position);
    Ark_RectShape (*width)(Ark_RectShape peer,
                           const Ark_Length* width);
    Ark_RectShape (*height)(Ark_RectShape peer,
                            const Ark_Length* height);
    Ark_RectShape (*size)(Ark_RectShape peer,
                          const Ark_SizeOptions* size);
    Ark_RectShape (*radiusWidth)(Ark_RectShape peer,
                                 const Ark_Union_Number_String* rWidth);
    Ark_RectShape (*radiusHeight)(Ark_RectShape peer,
                                  const Ark_Union_Number_String* rHeight);
    Ark_RectShape (*radius)(Ark_RectShape peer,
                            const Ark_Union_Number_String_Array_Union_Number_String* radius);
} GENERATED_ArkUIRectShapeAccessor;

typedef struct GENERATED_ArkUIRenderingContextSettingsAccessor {
    void (*destroyPeer)(Ark_RenderingContextSettings peer);
    Ark_RenderingContextSettings (*construct)(const Opt_Boolean* antialias);
    Ark_NativePointer (*getFinalizer)();
    Opt_Boolean (*getAntialias)(Ark_RenderingContextSettings peer);
    void (*setAntialias)(Ark_RenderingContextSettings peer,
                         const Opt_Boolean* antialias);
} GENERATED_ArkUIRenderingContextSettingsAccessor;

typedef struct GENERATED_ArkUIRenderNodeAccessor {
    void (*destroyPeer)(Ark_RenderNode peer);
    Ark_RenderNode (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*appendChild)(Ark_RenderNode peer,
                        Ark_RenderNode node);
    void (*insertChildAfter)(Ark_RenderNode peer,
                             Ark_RenderNode child,
                             const Opt_RenderNode* sibling);
    void (*removeChild)(Ark_RenderNode peer,
                        Ark_RenderNode node);
    void (*clearChildren)(Ark_RenderNode peer);
    Opt_RenderNode (*getChild)(Ark_RenderNode peer,
                               const Ark_Number* index);
    Opt_RenderNode (*getFirstChild)(Ark_RenderNode peer);
    Opt_RenderNode (*getNextSibling)(Ark_RenderNode peer);
    Opt_RenderNode (*getPreviousSibling)(Ark_RenderNode peer);
    void (*draw)(Ark_RenderNode peer,
                 Ark_DrawContext context);
    void (*invalidate)(Ark_RenderNode peer);
    void (*dispose)(Ark_RenderNode peer);
    Ark_Number (*getBackgroundColor)(Ark_RenderNode peer);
    void (*setBackgroundColor)(Ark_RenderNode peer,
                               const Ark_Number* backgroundColor);
    Ark_Boolean (*getClipToFrame)(Ark_RenderNode peer);
    void (*setClipToFrame)(Ark_RenderNode peer,
                           Ark_Boolean clipToFrame);
    Ark_Number (*getOpacity)(Ark_RenderNode peer);
    void (*setOpacity)(Ark_RenderNode peer,
                       const Ark_Number* opacity);
    Ark_Size (*getSize)(Ark_RenderNode peer);
    void (*setSize)(Ark_RenderNode peer,
                    const Ark_Size* size);
    Ark_Vector2 (*getPosition)(Ark_RenderNode peer);
    void (*setPosition)(Ark_RenderNode peer,
                        const Ark_Vector2* position);
    Ark_Frame (*getFrame)(Ark_RenderNode peer);
    void (*setFrame)(Ark_RenderNode peer,
                     const Ark_Frame* frame);
    Ark_Vector2 (*getPivot)(Ark_RenderNode peer);
    void (*setPivot)(Ark_RenderNode peer,
                     const Ark_Vector2* pivot);
    Ark_Vector2 (*getScale)(Ark_RenderNode peer);
    void (*setScale)(Ark_RenderNode peer,
                     const Ark_Vector2* scale);
    Ark_Vector2 (*getTranslation)(Ark_RenderNode peer);
    void (*setTranslation)(Ark_RenderNode peer,
                           const Ark_Vector2* translation);
    Ark_Vector3 (*getRotation)(Ark_RenderNode peer);
    void (*setRotation)(Ark_RenderNode peer,
                        const Ark_Vector3* rotation);
    Ark_Matrix4 (*getTransform)(Ark_RenderNode peer);
    void (*setTransform)(Ark_RenderNode peer,
                         const Ark_Matrix4* transform);
    Ark_Number (*getShadowColor)(Ark_RenderNode peer);
    void (*setShadowColor)(Ark_RenderNode peer,
                           const Ark_Number* shadowColor);
    Ark_Vector2 (*getShadowOffset)(Ark_RenderNode peer);
    void (*setShadowOffset)(Ark_RenderNode peer,
                            const Ark_Vector2* shadowOffset);
    Ark_String (*getLabel)(Ark_RenderNode peer);
    void (*setLabel)(Ark_RenderNode peer,
                     const Ark_String* label);
    Ark_Number (*getShadowAlpha)(Ark_RenderNode peer);
    void (*setShadowAlpha)(Ark_RenderNode peer,
                           const Ark_Number* shadowAlpha);
    Ark_Number (*getShadowElevation)(Ark_RenderNode peer);
    void (*setShadowElevation)(Ark_RenderNode peer,
                               const Ark_Number* shadowElevation);
    Ark_Number (*getShadowRadius)(Ark_RenderNode peer);
    void (*setShadowRadius)(Ark_RenderNode peer,
                            const Ark_Number* shadowRadius);
    Ark_EdgeStyles (*getBorderStyle)(Ark_RenderNode peer);
    void (*setBorderStyle)(Ark_RenderNode peer,
                           const Ark_EdgeStyles* borderStyle);
    Ark_Edges (*getBorderWidth)(Ark_RenderNode peer);
    void (*setBorderWidth)(Ark_RenderNode peer,
                           const Ark_Edges* borderWidth);
    Ark_Edges (*getBorderColor)(Ark_RenderNode peer);
    void (*setBorderColor)(Ark_RenderNode peer,
                           const Ark_Edges* borderColor);
    Ark_BorderRadiuses_graphics (*getBorderRadius)(Ark_RenderNode peer);
    void (*setBorderRadius)(Ark_RenderNode peer,
                            const Ark_BorderRadiuses_graphics* borderRadius);
    Ark_ShapeMask (*getShapeMask)(Ark_RenderNode peer);
    void (*setShapeMask)(Ark_RenderNode peer,
                         Ark_ShapeMask shapeMask);
    Ark_ShapeClip (*getShapeClip)(Ark_RenderNode peer);
    void (*setShapeClip)(Ark_RenderNode peer,
                         Ark_ShapeClip shapeClip);
    Ark_Boolean (*getMarkNodeGroup)(Ark_RenderNode peer);
    void (*setMarkNodeGroup)(Ark_RenderNode peer,
                             Ark_Boolean markNodeGroup);
    Ark_LengthMetricsUnit (*getLengthMetricsUnit)(Ark_RenderNode peer);
    void (*setLengthMetricsUnit)(Ark_RenderNode peer,
                                 Ark_LengthMetricsUnit lengthMetricsUnit);
} GENERATED_ArkUIRenderNodeAccessor;

typedef struct GENERATED_ArkUIRenderServiceNodeAccessor {
    Ark_Int32 (*getNodeId)(const Ark_String* nodeId);
} GENERATED_ArkUIRenderServiceNodeAccessor;

typedef struct GENERATED_ArkUIReplaceSymbolEffectAccessor {
    void (*destroyPeer)(Ark_ReplaceSymbolEffect peer);
    Ark_ReplaceSymbolEffect (*construct)(const Opt_EffectScope* scope);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectScope (*getScope)(Ark_ReplaceSymbolEffect peer);
    void (*setScope)(Ark_ReplaceSymbolEffect peer,
                     const Opt_EffectScope* scope);
} GENERATED_ArkUIReplaceSymbolEffectAccessor;

typedef struct GENERATED_ArkUIRestrictedWorkerAccessor {
    void (*destroyPeer)(Ark_RestrictedWorker peer);
    Ark_RestrictedWorker (*construct)(const Ark_String* scriptURL,
                                      const Opt_WorkerOptions* options);
    Ark_NativePointer (*getFinalizer)();
    void (*postMessage0)(Ark_VMContext vmContext,
                         Ark_RestrictedWorker peer,
                         const Ark_Object* message,
                         const Array_Buffer* transfer);
    void (*postMessage1)(Ark_VMContext vmContext,
                         Ark_RestrictedWorker peer,
                         const Ark_Object* message,
                         const Opt_PostMessageOptions* options);
    void (*postMessageWithSharedSendable)(Ark_VMContext vmContext,
                                          Ark_RestrictedWorker peer,
                                          const Ark_Object* message,
                                          const Opt_Array_Buffer* transfer);
    void (*on)(Ark_VMContext vmContext,
               Ark_RestrictedWorker peer,
               const Ark_String* Type,
               const Ark_WorkerEventListener* listener);
    void (*once)(Ark_VMContext vmContext,
                 Ark_RestrictedWorker peer,
                 const Ark_String* Type,
                 const Ark_WorkerEventListener* listener);
    void (*off)(Ark_VMContext vmContext,
                Ark_RestrictedWorker peer,
                const Ark_String* Type,
                const Opt_WorkerEventListener* listener);
    void (*terminate)(Ark_VMContext vmContext,
                      Ark_RestrictedWorker peer);
    void (*addEventListener)(Ark_VMContext vmContext,
                             Ark_RestrictedWorker peer,
                             const Ark_String* Type,
                             const Ark_WorkerEventListener* listener);
    Ark_Boolean (*dispatchEvent)(Ark_VMContext vmContext,
                                 Ark_RestrictedWorker peer,
                                 const Ark_Event* event);
    void (*removeEventListener)(Ark_VMContext vmContext,
                                Ark_RestrictedWorker peer,
                                const Ark_String* Type,
                                const Opt_WorkerEventListener* callback_);
    void (*removeAllListener)(Ark_VMContext vmContext,
                              Ark_RestrictedWorker peer);
    void (*registerGlobalCallObject)(Ark_VMContext vmContext,
                                     Ark_RestrictedWorker peer,
                                     const Ark_String* instanceName,
                                     const Ark_Object* globalCallObject);
    void (*unregisterGlobalCallObject)(Ark_VMContext vmContext,
                                       Ark_RestrictedWorker peer,
                                       const Opt_String* instanceName);
    Opt_RestrictedWorker_onexit_Callback (*getOnexit)(Ark_RestrictedWorker peer);
    void (*setOnexit)(Ark_RestrictedWorker peer,
                      const Opt_RestrictedWorker_onexit_Callback* onexit);
    Opt_RestrictedWorker_onerror_Callback (*getOnerror)(Ark_RestrictedWorker peer);
    void (*setOnerror)(Ark_RestrictedWorker peer,
                       const Opt_RestrictedWorker_onerror_Callback* onerror);
    Opt_RestrictedWorker_onmessage_Callback (*getOnmessage)(Ark_RestrictedWorker peer);
    void (*setOnmessage)(Ark_RestrictedWorker peer,
                         const Opt_RestrictedWorker_onmessage_Callback* onmessage);
    Opt_RestrictedWorker_onmessage_Callback (*getOnmessageerror)(Ark_RestrictedWorker peer);
    void (*setOnmessageerror)(Ark_RestrictedWorker peer,
                              const Opt_RestrictedWorker_onmessage_Callback* onmessageerror);
} GENERATED_ArkUIRestrictedWorkerAccessor;

typedef struct GENERATED_ArkUIRichEditorBaseControllerAccessor {
    void (*destroyPeer)(Ark_RichEditorBaseController peer);
    Ark_RichEditorBaseController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getCaretOffset)(Ark_RichEditorBaseController peer);
    Ark_Boolean (*setCaretOffset)(Ark_RichEditorBaseController peer,
                                  const Ark_Number* offset);
    void (*closeSelectionMenu)(Ark_RichEditorBaseController peer);
    Ark_RichEditorTextStyle (*getTypingStyle)(Ark_RichEditorBaseController peer);
    void (*setTypingStyle)(Ark_RichEditorBaseController peer,
                           const Ark_RichEditorTextStyle* value);
    void (*setSelection)(Ark_RichEditorBaseController peer,
                         const Ark_Number* selectionStart,
                         const Ark_Number* selectionEnd,
                         const Opt_SelectionOptions* options);
    Ark_Boolean (*isEditing)(Ark_RichEditorBaseController peer);
    void (*stopEditing)(Ark_RichEditorBaseController peer);
    Ark_LayoutManager (*getLayoutManager)(Ark_RichEditorBaseController peer);
    Ark_PreviewText (*getPreviewText)(Ark_RichEditorBaseController peer);
    Opt_RectResult (*getCaretRect)(Ark_RichEditorBaseController peer);
} GENERATED_ArkUIRichEditorBaseControllerAccessor;

typedef struct GENERATED_ArkUIRichEditorControllerAccessor {
    void (*destroyPeer)(Ark_RichEditorController peer);
    Ark_RichEditorController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*addTextSpan)(Ark_RichEditorController peer,
                              const Ark_ResourceStr* content,
                              const Opt_RichEditorTextSpanOptions* options);
    Ark_Number (*addImageSpan)(Ark_RichEditorController peer,
                               const Ark_Union_PixelMap_ResourceStr* value,
                               const Opt_RichEditorImageSpanOptions* options);
    Ark_Number (*addBuilderSpan)(Ark_RichEditorController peer,
                                 const CustomNodeBuilder* value,
                                 const Opt_RichEditorBuilderSpanOptions* options);
    Ark_Number (*addSymbolSpan)(Ark_RichEditorController peer,
                                const Ark_Resource* value,
                                const Opt_RichEditorSymbolSpanOptions* options);
    void (*updateSpanStyle)(Ark_RichEditorController peer,
                            const Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions* value);
    void (*updateParagraphStyle)(Ark_RichEditorController peer,
                                 const Ark_RichEditorParagraphStyleOptions* value);
    void (*deleteSpans)(Ark_RichEditorController peer,
                        const Opt_RichEditorRange* value);
    Array_Union_RichEditorImageSpanResult_RichEditorTextSpanResult (*getSpans)(Ark_RichEditorController peer,
                                                                               const Opt_RichEditorRange* value);
    Array_RichEditorParagraphResult (*getParagraphs)(Ark_RichEditorController peer,
                                                     const Opt_RichEditorRange* value);
    Ark_RichEditorSelection (*getSelection)(Ark_RichEditorController peer);
    Array_RichEditorSpan (*fromStyledString)(Ark_RichEditorController peer,
                                             Ark_StyledString value);
    Ark_StyledString (*toStyledString)(Ark_RichEditorController peer,
                                       const Ark_RichEditorRange* value);
} GENERATED_ArkUIRichEditorControllerAccessor;

typedef struct GENERATED_ArkUIRichEditorStyledStringControllerAccessor {
    void (*destroyPeer)(Ark_RichEditorStyledStringController peer);
    Ark_RichEditorStyledStringController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setStyledString)(Ark_RichEditorStyledStringController peer,
                            Ark_StyledString styledString);
    Ark_MutableStyledString (*getStyledString)(Ark_RichEditorStyledStringController peer);
    Ark_RichEditorRange (*getSelection)(Ark_RichEditorStyledStringController peer);
    void (*onContentChanged)(Ark_RichEditorStyledStringController peer,
                             const Ark_StyledStringChangedListener* listener);
} GENERATED_ArkUIRichEditorStyledStringControllerAccessor;

typedef struct GENERATED_ArkUIRotationGestureAccessor {
    void (*destroyPeer)(Ark_RotationGesture peer);
    Ark_RotationGesture (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_RotationGesture (*$_instantiate)(const Callback_RotationGesture* factory,
                                         const Opt_RotationGestureHandlerOptions* value);
    void (*onActionStart)(Ark_RotationGesture peer,
                          const Callback_GestureEvent_Void* event);
    void (*onActionUpdate)(Ark_RotationGesture peer,
                           const Callback_GestureEvent_Void* event);
    void (*onActionEnd)(Ark_RotationGesture peer,
                        const Callback_GestureEvent_Void* event);
    void (*onActionCancel)(Ark_RotationGesture peer,
                           const Callback_GestureEvent_Void* event);
} GENERATED_ArkUIRotationGestureAccessor;

typedef struct GENERATED_ArkUIRotationGestureEventAccessor {
    void (*destroyPeer)(Ark_RotationGestureEvent peer);
    Ark_RotationGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getAngle)(Ark_RotationGestureEvent peer);
    void (*setAngle)(Ark_RotationGestureEvent peer,
                     const Ark_Number* angle);
} GENERATED_ArkUIRotationGestureEventAccessor;

typedef struct GENERATED_ArkUIRotationRecognizerAccessor {
    void (*destroyPeer)(Ark_RotationRecognizer peer);
    Ark_RotationRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getAngle)(Ark_RotationRecognizer peer);
} GENERATED_ArkUIRotationRecognizerAccessor;

typedef struct GENERATED_ArkUIScaleSymbolEffectAccessor {
    void (*destroyPeer)(Ark_ScaleSymbolEffect peer);
    Ark_ScaleSymbolEffect (*construct)(const Opt_EffectScope* scope,
                                       const Opt_EffectDirection* direction);
    Ark_NativePointer (*getFinalizer)();
    Opt_EffectScope (*getScope)(Ark_ScaleSymbolEffect peer);
    void (*setScope)(Ark_ScaleSymbolEffect peer,
                     const Opt_EffectScope* scope);
    Opt_EffectDirection (*getDirection)(Ark_ScaleSymbolEffect peer);
    void (*setDirection)(Ark_ScaleSymbolEffect peer,
                         const Opt_EffectDirection* direction);
} GENERATED_ArkUIScaleSymbolEffectAccessor;

typedef struct GENERATED_ArkUISceneAccessor {
    void (*destroyPeer)(Ark_Scene peer);
    Ark_Scene (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*load)(Ark_VMContext vmContext,
                 Ark_AsyncWorkerPtr asyncWorker,
                 const Opt_ResourceStr* uri,
                 const Callback_Opt_Scene_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*destroy)(Ark_Scene peer);
} GENERATED_ArkUISceneAccessor;

typedef struct GENERATED_ArkUIScreenCaptureHandlerAccessor {
    void (*destroyPeer)(Ark_ScreenCaptureHandler peer);
    Ark_ScreenCaptureHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getOrigin)(Ark_ScreenCaptureHandler peer);
    void (*grant)(Ark_ScreenCaptureHandler peer,
                  const Ark_ScreenCaptureConfig* config);
    void (*deny)(Ark_ScreenCaptureHandler peer);
} GENERATED_ArkUIScreenCaptureHandlerAccessor;

typedef struct GENERATED_ArkUIScrollableTargetInfoAccessor {
    void (*destroyPeer)(Ark_ScrollableTargetInfo peer);
    Ark_ScrollableTargetInfo (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*isBegin)(Ark_ScrollableTargetInfo peer);
    Ark_Boolean (*isEnd)(Ark_ScrollableTargetInfo peer);
} GENERATED_ArkUIScrollableTargetInfoAccessor;

typedef struct GENERATED_ArkUIScrollerAccessor {
    void (*destroyPeer)(Ark_Scroller peer);
    Ark_Scroller (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*scrollTo)(Ark_Scroller peer,
                     const Ark_ScrollOptions* options);
    void (*scrollEdge)(Ark_Scroller peer,
                       Ark_Edge value,
                       const Opt_ScrollEdgeOptions* options);
    void (*fling)(Ark_Scroller peer,
                  const Ark_Number* velocity);
    void (*scrollPage)(Ark_Scroller peer,
                       const Ark_ScrollPageOptions* value);
    Ark_OffsetResult (*currentOffset)(Ark_Scroller peer);
    void (*scrollToIndex)(Ark_Scroller peer,
                          const Ark_Number* value,
                          const Opt_Boolean* smooth,
                          const Opt_ScrollAlign* align,
                          const Opt_ScrollToIndexOptions* options);
    void (*scrollBy)(Ark_Scroller peer,
                     const Ark_Length* dx,
                     const Ark_Length* dy);
    Ark_Boolean (*isAtEnd)(Ark_Scroller peer);
    Ark_RectResult (*getItemRect)(Ark_Scroller peer,
                                  const Ark_Number* index);
    Ark_Number (*getItemIndex)(Ark_Scroller peer,
                               const Ark_Number* x,
                               const Ark_Number* y);
} GENERATED_ArkUIScrollerAccessor;

typedef struct GENERATED_ArkUIScrollMotionAccessor {
    void (*destroyPeer)(Ark_ScrollMotion peer);
    Ark_ScrollMotion (*construct)(const Ark_Number* position,
                                  const Ark_Number* velocity,
                                  const Ark_Number* min,
                                  const Ark_Number* max,
                                  Ark_SpringProp prop);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIScrollMotionAccessor;

typedef struct GENERATED_ArkUIScrollResultAccessor {
    void (*destroyPeer)(Ark_ScrollResult peer);
    Ark_ScrollResult (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getOffsetRemain)(Ark_ScrollResult peer);
    void (*setOffsetRemain)(Ark_ScrollResult peer,
                            const Ark_Number* offsetRemain);
} GENERATED_ArkUIScrollResultAccessor;

typedef struct GENERATED_ArkUISearchControllerAccessor {
    void (*destroyPeer)(Ark_SearchController peer);
    Ark_SearchController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*caretPosition)(Ark_SearchController peer,
                          const Ark_Number* value);
    void (*stopEditing)(Ark_SearchController peer);
    void (*setTextSelection)(Ark_SearchController peer,
                             const Ark_Number* selectionStart,
                             const Ark_Number* selectionEnd,
                             const Opt_SelectionOptions* options);
} GENERATED_ArkUISearchControllerAccessor;

typedef struct GENERATED_ArkUISearchOpsAccessor {
    Ark_NativePointer (*registerSearchValueCallback)(Ark_NativePointer node,
                                                     const Ark_String* value,
                                                     const SearchValueCallback* callback);
} GENERATED_ArkUISearchOpsAccessor;

typedef struct GENERATED_ArkUIShapeClipAccessor {
    void (*destroyPeer)(Ark_ShapeClip peer);
    Ark_ShapeClip (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setRectShape)(Ark_ShapeClip peer,
                         const Ark_common2D_Rect* rect);
    void (*setRoundRectShape)(Ark_ShapeClip peer,
                              const Ark_RoundRect* roundRect);
    void (*setCircleShape)(Ark_ShapeClip peer,
                           const Ark_Circle* circle);
    void (*setOvalShape)(Ark_ShapeClip peer,
                         const Ark_common2D_Rect* oval);
    void (*setCommandPath)(Ark_ShapeClip peer,
                           const Ark_CommandPath* path);
} GENERATED_ArkUIShapeClipAccessor;

typedef struct GENERATED_ArkUIShapeMaskAccessor {
    void (*destroyPeer)(Ark_ShapeMask peer);
    Ark_ShapeMask (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setRectShape)(Ark_ShapeMask peer,
                         const Ark_common2D_Rect* rect);
    void (*setRoundRectShape)(Ark_ShapeMask peer,
                              const Ark_RoundRect* roundRect);
    void (*setCircleShape)(Ark_ShapeMask peer,
                           const Ark_Circle* circle);
    void (*setOvalShape)(Ark_ShapeMask peer,
                         const Ark_common2D_Rect* oval);
    void (*setCommandPath)(Ark_ShapeMask peer,
                           const Ark_CommandPath* path);
    Ark_Number (*getFillColor)(Ark_ShapeMask peer);
    void (*setFillColor)(Ark_ShapeMask peer,
                         const Ark_Number* fillColor);
    Ark_Number (*getStrokeColor)(Ark_ShapeMask peer);
    void (*setStrokeColor)(Ark_ShapeMask peer,
                           const Ark_Number* strokeColor);
    Ark_Number (*getStrokeWidth)(Ark_ShapeMask peer);
    void (*setStrokeWidth)(Ark_ShapeMask peer,
                           const Ark_Number* strokeWidth);
} GENERATED_ArkUIShapeMaskAccessor;

typedef struct GENERATED_ArkUISpringMotionAccessor {
    void (*destroyPeer)(Ark_SpringMotion peer);
    Ark_SpringMotion (*construct)(const Ark_Number* start,
                                  const Ark_Number* end,
                                  const Ark_Number* velocity,
                                  Ark_SpringProp prop);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUISpringMotionAccessor;

typedef struct GENERATED_ArkUISpringPropAccessor {
    void (*destroyPeer)(Ark_SpringProp peer);
    Ark_SpringProp (*construct)(const Ark_Number* mass,
                                const Ark_Number* stiffness,
                                const Ark_Number* damping);
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUISpringPropAccessor;

typedef struct GENERATED_ArkUISslErrorHandlerAccessor {
    void (*destroyPeer)(Ark_SslErrorHandler peer);
    Ark_SslErrorHandler (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*handleConfirm)(Ark_SslErrorHandler peer);
    void (*handleCancel)(Ark_SslErrorHandler peer);
} GENERATED_ArkUISslErrorHandlerAccessor;

typedef struct GENERATED_ArkUIStateStylesOpsAccessor {
    void (*onStateStyleChange)(Ark_NativePointer node,
                               const Callback_StateStylesChange* stateStyleChange);
} GENERATED_ArkUIStateStylesOpsAccessor;

typedef struct GENERATED_ArkUIStyledStringAccessor {
    void (*destroyPeer)(Ark_StyledString peer);
    Ark_StyledString (*construct)(const Ark_Union_String_ImageAttachment_CustomSpan* value,
                                  const Opt_Array_StyleOptions* styles);
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getString)(Ark_StyledString peer);
    Array_SpanStyle (*getStyles)(Ark_StyledString peer,
                                 const Ark_Number* start,
                                 const Ark_Number* length,
                                 const Opt_StyledStringKey* styledKey);
    Ark_Boolean (*equals)(Ark_StyledString peer,
                          Ark_StyledString other);
    Ark_StyledString (*subStyledString)(Ark_StyledString peer,
                                        const Ark_Number* start,
                                        const Opt_Number* length);
    void (*fromHtml)(Ark_VMContext vmContext,
                     Ark_AsyncWorkerPtr asyncWorker,
                     const Ark_String* html,
                     const Callback_Opt_StyledString_Opt_Array_String_Void* outputArgumentForReturningPromise);
    Ark_String (*toHtml)(Ark_StyledString styledString);
    Ark_Buffer (*marshalling0)(Ark_StyledString styledString,
                               const StyledStringMarshallCallback* callback_);
    void (*unmarshalling0)(Ark_VMContext vmContext,
                           Ark_AsyncWorkerPtr asyncWorker,
                           const Ark_Buffer* buffer,
                           const StyledStringUnmarshallCallback* callback_,
                           const Callback_Opt_StyledString_Opt_Array_String_Void* outputArgumentForReturningPromise);
    Ark_Buffer (*marshalling1)(Ark_StyledString styledString);
    void (*unmarshalling1)(Ark_VMContext vmContext,
                           Ark_AsyncWorkerPtr asyncWorker,
                           const Ark_Buffer* buffer,
                           const Callback_Opt_StyledString_Opt_Array_String_Void* outputArgumentForReturningPromise);
    Ark_Number (*getLength)(Ark_StyledString peer);
} GENERATED_ArkUIStyledStringAccessor;

typedef struct GENERATED_ArkUIStyledStringControllerAccessor {
    void (*destroyPeer)(Ark_StyledStringController peer);
    Ark_StyledStringController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setStyledString)(Ark_StyledStringController peer,
                            Ark_StyledString styledString);
    Ark_MutableStyledString (*getStyledString)(Ark_StyledStringController peer);
} GENERATED_ArkUIStyledStringControllerAccessor;

typedef struct GENERATED_ArkUISubmitEventAccessor {
    void (*destroyPeer)(Ark_SubmitEvent peer);
    Ark_SubmitEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*keepEditableState)(Ark_SubmitEvent peer);
    Ark_String (*getText)(Ark_SubmitEvent peer);
    void (*setText)(Ark_SubmitEvent peer,
                    const Ark_String* text);
} GENERATED_ArkUISubmitEventAccessor;

typedef struct GENERATED_ArkUISwipeGestureAccessor {
    void (*destroyPeer)(Ark_SwipeGesture peer);
    Ark_SwipeGesture (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_SwipeGesture (*$_instantiate)(const Callback_SwipeGesture* factory,
                                      const Opt_SwipeGestureHandlerOptions* value);
    void (*onAction)(Ark_SwipeGesture peer,
                     const Callback_GestureEvent_Void* event);
} GENERATED_ArkUISwipeGestureAccessor;

typedef struct GENERATED_ArkUISwipeGestureEventAccessor {
    void (*destroyPeer)(Ark_SwipeGestureEvent peer);
    Ark_SwipeGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getAngle)(Ark_SwipeGestureEvent peer);
    void (*setAngle)(Ark_SwipeGestureEvent peer,
                     const Ark_Number* angle);
    Ark_Number (*getSpeed)(Ark_SwipeGestureEvent peer);
    void (*setSpeed)(Ark_SwipeGestureEvent peer,
                     const Ark_Number* speed);
} GENERATED_ArkUISwipeGestureEventAccessor;

typedef struct GENERATED_ArkUISwiperContentTransitionProxyAccessor {
    void (*destroyPeer)(Ark_SwiperContentTransitionProxy peer);
    Ark_SwiperContentTransitionProxy (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*finishTransition)(Ark_SwiperContentTransitionProxy peer);
    Ark_Number (*getSelectedIndex)(Ark_SwiperContentTransitionProxy peer);
    void (*setSelectedIndex)(Ark_SwiperContentTransitionProxy peer,
                             const Ark_Number* selectedIndex);
    Ark_Number (*getIndex)(Ark_SwiperContentTransitionProxy peer);
    void (*setIndex)(Ark_SwiperContentTransitionProxy peer,
                     const Ark_Number* index);
    Ark_Number (*getPosition)(Ark_SwiperContentTransitionProxy peer);
    void (*setPosition)(Ark_SwiperContentTransitionProxy peer,
                        const Ark_Number* position);
    Ark_Number (*getMainAxisLength)(Ark_SwiperContentTransitionProxy peer);
    void (*setMainAxisLength)(Ark_SwiperContentTransitionProxy peer,
                              const Ark_Number* mainAxisLength);
} GENERATED_ArkUISwiperContentTransitionProxyAccessor;

typedef struct GENERATED_ArkUISwiperControllerAccessor {
    void (*destroyPeer)(Ark_SwiperController peer);
    Ark_SwiperController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*showNext)(Ark_SwiperController peer);
    void (*showPrevious)(Ark_SwiperController peer);
    void (*changeIndex)(Ark_SwiperController peer,
                        const Ark_Number* index,
                        const Opt_Union_SwiperAnimationMode_Boolean* animationMode);
    void (*finishAnimation)(Ark_SwiperController peer,
                            const Opt_VoidCallback* callback_);
    void (*preloadItems)(Ark_VMContext vmContext,
                         Ark_AsyncWorkerPtr asyncWorker,
                         Ark_SwiperController peer,
                         const Opt_Array_Number* indices,
                         const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
} GENERATED_ArkUISwiperControllerAccessor;

typedef struct GENERATED_ArkUISwipeRecognizerAccessor {
    void (*destroyPeer)(Ark_SwipeRecognizer peer);
    Ark_SwipeRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getVelocityThreshold)(Ark_SwipeRecognizer peer);
    Ark_SwipeDirection (*getDirection)(Ark_SwipeRecognizer peer);
} GENERATED_ArkUISwipeRecognizerAccessor;

typedef struct GENERATED_ArkUISymbolEffectAccessor {
    void (*destroyPeer)(Ark_SymbolEffect peer);
    Ark_SymbolEffect (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUISymbolEffectAccessor;

typedef struct GENERATED_ArkUISystemOpsAccessor {
    Ark_NativePointer (*StartFrame)();
    void (*EndFrame)(Ark_NativePointer root);
    void (*syncInstanceId)(Ark_Int32 instanceId);
    void (*restoreInstanceId)();
    Ark_Int32 (*getResourceId)(const Ark_String* bundleName,
                               const Ark_String* moduleName,
                               const Array_String* params);
    void (*resourceManagerReset)();
    void (*setFrameCallback)(const Callback_Number_Void* onFrameCallback,
                             const Callback_Number_Void* onIdleCallback,
                             const Ark_Number* delayTime);
    Array_Number (*colorMetricsResourceColor)(const Ark_Resource* color);
} GENERATED_ArkUISystemOpsAccessor;

typedef struct GENERATED_ArkUITabBarSymbolAccessor {
    void (*destroyPeer)(Ark_TabBarSymbol peer);
    Ark_TabBarSymbol (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_SymbolGlyphModifier (*getNormal)(Ark_TabBarSymbol peer);
    void (*setNormal)(Ark_TabBarSymbol peer,
                      const Ark_SymbolGlyphModifier* normal);
    Opt_SymbolGlyphModifier (*getSelected)(Ark_TabBarSymbol peer);
    void (*setSelected)(Ark_TabBarSymbol peer,
                        const Opt_SymbolGlyphModifier* selected);
} GENERATED_ArkUITabBarSymbolAccessor;

typedef struct GENERATED_ArkUITabContentTransitionProxyAccessor {
    void (*destroyPeer)(Ark_TabContentTransitionProxy peer);
    Ark_TabContentTransitionProxy (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*finishTransition)(Ark_TabContentTransitionProxy peer);
    Ark_Number (*getFrom)(Ark_TabContentTransitionProxy peer);
    void (*setFrom)(Ark_TabContentTransitionProxy peer,
                    const Ark_Number* from);
    Ark_Number (*getTo)(Ark_TabContentTransitionProxy peer);
    void (*setTo)(Ark_TabContentTransitionProxy peer,
                  const Ark_Number* to);
} GENERATED_ArkUITabContentTransitionProxyAccessor;

typedef struct GENERATED_ArkUITabsControllerAccessor {
    void (*destroyPeer)(Ark_TabsController peer);
    Ark_TabsController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*changeIndex)(Ark_TabsController peer,
                        const Ark_Number* value);
    void (*preloadItems)(Ark_VMContext vmContext,
                         Ark_AsyncWorkerPtr asyncWorker,
                         Ark_TabsController peer,
                         const Opt_Array_Number* indices,
                         const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*setTabBarTranslate)(Ark_TabsController peer,
                               const Ark_TranslateOptions* translate);
    void (*setTabBarOpacity)(Ark_TabsController peer,
                             const Ark_Number* opacity);
} GENERATED_ArkUITabsControllerAccessor;

typedef struct GENERATED_ArkUITapGestureEventAccessor {
    void (*destroyPeer)(Ark_TapGestureEvent peer);
    Ark_TapGestureEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUITapGestureEventAccessor;

typedef struct GENERATED_ArkUITapGestureInterfaceAccessor {
    void (*destroyPeer)(Ark_TapGestureInterface peer);
    Ark_TapGestureInterface (*construct)(const Ark_TapGestureParameters* value);
    Ark_NativePointer (*getFinalizer)();
    Ark_TapGestureInterface (*onAction)(Ark_TapGestureInterface peer,
                                        const Callback_GestureEvent_Void* event);
} GENERATED_ArkUITapGestureInterfaceAccessor;

typedef struct GENERATED_ArkUITapRecognizerAccessor {
    void (*destroyPeer)(Ark_TapRecognizer peer);
    Ark_TapRecognizer (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getTapCount)(Ark_TapRecognizer peer);
} GENERATED_ArkUITapRecognizerAccessor;

typedef struct GENERATED_ArkUIText_FontCollectionAccessor {
    void (*destroyPeer)(Ark_text_FontCollection peer);
    Ark_text_FontCollection (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_text_FontCollection (*getGlobalInstance)();
    void (*loadFontSync)(Ark_text_FontCollection peer,
                         const Ark_String* name,
                         const Ark_Union_String_Resource* path);
    void (*loadFont)(Ark_VMContext vmContext,
                     Ark_AsyncWorkerPtr asyncWorker,
                     Ark_text_FontCollection peer,
                     const Ark_String* name,
                     const Ark_Union_String_Resource* path,
                     const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*clearCaches)(Ark_text_FontCollection peer);
} GENERATED_ArkUIText_FontCollectionAccessor;

typedef struct GENERATED_ArkUIText_LineTypesetAccessor {
    void (*destroyPeer)(Ark_text_LineTypeset peer);
    Ark_text_LineTypeset (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getLineBreak)(Ark_text_LineTypeset peer,
                               const Ark_Number* startIndex,
                               const Ark_Number* width);
    Ark_text_TextLine (*createLine)(Ark_text_LineTypeset peer,
                                    const Ark_Number* startIndex,
                                    const Ark_Number* count);
} GENERATED_ArkUIText_LineTypesetAccessor;

typedef struct GENERATED_ArkUIText_ParagraphAccessor {
    void (*destroyPeer)(Ark_text_Paragraph peer);
    Ark_text_Paragraph (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*layoutSync)(Ark_text_Paragraph peer,
                       const Ark_Number* width);
    void (*layout)(Ark_VMContext vmContext,
                   Ark_AsyncWorkerPtr asyncWorker,
                   Ark_text_Paragraph peer,
                   const Ark_Number* width,
                   const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*paint)(Ark_text_Paragraph peer,
                  Ark_drawing_Canvas canvas,
                  const Ark_Number* x,
                  const Ark_Number* y);
    void (*paintOnPath)(Ark_text_Paragraph peer,
                        Ark_drawing_Canvas canvas,
                        Ark_drawing_Path path,
                        const Ark_Number* hOffset,
                        const Ark_Number* vOffset);
    Ark_Number (*getMaxWidth)(Ark_text_Paragraph peer);
    Ark_Number (*getHeight)(Ark_text_Paragraph peer);
    Ark_Number (*getLongestLine)(Ark_text_Paragraph peer);
    Ark_Number (*getLongestLineWithIndent)(Ark_text_Paragraph peer);
    Ark_Number (*getMinIntrinsicWidth)(Ark_text_Paragraph peer);
    Ark_Number (*getMaxIntrinsicWidth)(Ark_text_Paragraph peer);
    Ark_Number (*getAlphabeticBaseline)(Ark_text_Paragraph peer);
    Ark_Number (*getIdeographicBaseline)(Ark_text_Paragraph peer);
    Array_text_TextBox (*getRectsForRange)(Ark_text_Paragraph peer,
                                           const Ark_text_Range* range,
                                           Ark_text_RectWidthStyle widthStyle,
                                           Ark_text_RectHeightStyle heightStyle);
    Array_text_TextBox (*getRectsForPlaceholders)(Ark_text_Paragraph peer);
    Ark_text_PositionWithAffinity (*getGlyphPositionAtCoordinate)(Ark_text_Paragraph peer,
                                                                  const Ark_Number* x,
                                                                  const Ark_Number* y);
    Ark_text_Range (*getWordBoundary)(Ark_text_Paragraph peer,
                                      const Ark_Number* offset);
    Ark_Number (*getLineCount)(Ark_text_Paragraph peer);
    Ark_Number (*getLineHeight)(Ark_text_Paragraph peer,
                                const Ark_Number* line);
    Ark_Number (*getLineWidth)(Ark_text_Paragraph peer,
                               const Ark_Number* line);
    Ark_Boolean (*didExceedMaxLines)(Ark_text_Paragraph peer);
    Array_text_TextLine (*getTextLines)(Ark_text_Paragraph peer);
    Ark_text_Range (*getActualTextRange)(Ark_text_Paragraph peer,
                                         const Ark_Number* lineNumber,
                                         Ark_Boolean includeSpaces);
    Array_text_LineMetrics (*getLineMetrics0)(Ark_text_Paragraph peer);
    Opt_text_LineMetrics (*getLineMetrics1)(Ark_text_Paragraph peer,
                                            const Ark_Number* lineNumber);
} GENERATED_ArkUIText_ParagraphAccessor;

typedef struct GENERATED_ArkUIText_ParagraphBuilderAccessor {
    void (*destroyPeer)(Ark_text_ParagraphBuilder peer);
    Ark_text_ParagraphBuilder (*construct)(const Ark_text_ParagraphStyle* paragraphStyle,
                                           Ark_text_FontCollection fontCollection);
    Ark_NativePointer (*getFinalizer)();
    void (*pushStyle)(Ark_text_ParagraphBuilder peer,
                      const Ark_text_TextStyle* textStyle);
    void (*popStyle)(Ark_text_ParagraphBuilder peer);
    void (*addText)(Ark_text_ParagraphBuilder peer,
                    const Ark_String* text);
    void (*addPlaceholder)(Ark_text_ParagraphBuilder peer,
                           const Ark_text_PlaceholderSpan* placeholderSpan);
    Ark_text_Paragraph (*build)(Ark_text_ParagraphBuilder peer);
    Ark_text_LineTypeset (*buildLineTypeset)(Ark_text_ParagraphBuilder peer);
    void (*addSymbol)(Ark_text_ParagraphBuilder peer,
                      const Ark_Number* symbolId);
} GENERATED_ArkUIText_ParagraphBuilderAccessor;

typedef struct GENERATED_ArkUIText_RunAccessor {
    void (*destroyPeer)(Ark_text_Run peer);
    Ark_text_Run (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getGlyphCount)(Ark_text_Run peer);
    Array_Number (*getGlyphs0)(Ark_text_Run peer);
    Array_Number (*getGlyphs1)(Ark_text_Run peer,
                               const Ark_text_Range* range);
    Array_common2D_Point (*getPositions0)(Ark_text_Run peer);
    Array_common2D_Point (*getPositions1)(Ark_text_Run peer,
                                          const Ark_text_Range* range);
    Array_common2D_Point (*getOffsets)(Ark_text_Run peer);
    Ark_drawing_Font (*getFont)(Ark_text_Run peer);
    void (*paint)(Ark_text_Run peer,
                  Ark_drawing_Canvas canvas,
                  const Ark_Number* x,
                  const Ark_Number* y);
    Array_Number (*getStringIndices)(Ark_text_Run peer,
                                     const Ark_text_Range* range);
    Ark_text_Range (*getStringRange)(Ark_text_Run peer);
    Ark_text_TypographicBounds (*getTypographicBounds)(Ark_text_Run peer);
    Ark_common2D_Rect (*getImageBounds)(Ark_text_Run peer);
} GENERATED_ArkUIText_RunAccessor;

typedef struct GENERATED_ArkUIText_TextLineAccessor {
    void (*destroyPeer)(Ark_text_TextLine peer);
    Ark_text_TextLine (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Number (*getGlyphCount)(Ark_text_TextLine peer);
    Ark_text_Range (*getTextRange)(Ark_text_TextLine peer);
    Array_text_Run (*getGlyphRuns)(Ark_text_TextLine peer);
    void (*paint)(Ark_text_TextLine peer,
                  Ark_drawing_Canvas canvas,
                  const Ark_Number* x,
                  const Ark_Number* y);
    Ark_text_TextLine (*createTruncatedLine)(Ark_text_TextLine peer,
                                             const Ark_Number* width,
                                             Ark_text_EllipsisMode ellipsisMode,
                                             const Ark_String* ellipsis);
    Ark_text_TypographicBounds (*getTypographicBounds)(Ark_text_TextLine peer);
    Ark_common2D_Rect (*getImageBounds)(Ark_text_TextLine peer);
    Ark_Number (*getTrailingSpaceWidth)(Ark_text_TextLine peer);
    Ark_Number (*getStringIndexForPosition)(Ark_text_TextLine peer,
                                            const Ark_common2D_Point* point);
    Ark_Number (*getOffsetForStringIndex)(Ark_text_TextLine peer,
                                          const Ark_Number* index);
    void (*enumerateCaretOffsets)(Ark_text_TextLine peer,
                                  const text_Callback_Number_Number_Boolean_Boolean* callback_);
    Ark_Number (*getAlignmentOffset)(Ark_text_TextLine peer,
                                     const Ark_Number* alignmentFactor,
                                     const Ark_Number* alignmentWidth);
} GENERATED_ArkUIText_TextLineAccessor;

typedef struct GENERATED_ArkUITextAreaControllerAccessor {
    void (*destroyPeer)(Ark_TextAreaController peer);
    Ark_TextAreaController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*caretPosition)(Ark_TextAreaController peer,
                          const Ark_Number* value);
    void (*setTextSelection)(Ark_TextAreaController peer,
                             const Ark_Number* selectionStart,
                             const Ark_Number* selectionEnd,
                             const Opt_SelectionOptions* options);
    void (*stopEditing)(Ark_TextAreaController peer);
} GENERATED_ArkUITextAreaControllerAccessor;

typedef struct GENERATED_ArkUITextBaseControllerAccessor {
    void (*destroyPeer)(Ark_TextBaseController peer);
    Ark_TextBaseController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setSelection)(Ark_TextBaseController peer,
                         const Ark_Number* selectionStart,
                         const Ark_Number* selectionEnd,
                         const Opt_SelectionOptions* options);
    void (*closeSelectionMenu)(Ark_TextBaseController peer);
    Ark_LayoutManager (*getLayoutManager)(Ark_TextBaseController peer);
} GENERATED_ArkUITextBaseControllerAccessor;

typedef struct GENERATED_ArkUITextClockControllerAccessor {
    void (*destroyPeer)(Ark_TextClockController peer);
    Ark_TextClockController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*start)(Ark_TextClockController peer);
    void (*stop)(Ark_TextClockController peer);
} GENERATED_ArkUITextClockControllerAccessor;

typedef struct GENERATED_ArkUITextContentControllerBaseAccessor {
    void (*destroyPeer)(Ark_TextContentControllerBase peer);
    Ark_TextContentControllerBase (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_CaretOffset (*getCaretOffset)(Ark_TextContentControllerBase peer);
    Ark_RectResult (*getTextContentRect)(Ark_TextContentControllerBase peer);
    Ark_Number (*getTextContentLineCount)(Ark_TextContentControllerBase peer);
    Ark_Number (*addText)(Ark_TextContentControllerBase peer,
                          const Ark_String* text,
                          const Opt_TextContentControllerOptions* textOperationOptions);
    void (*deleteText)(Ark_TextContentControllerBase peer,
                       const Opt_TextRange* range);
    Ark_TextRange (*getSelection)(Ark_TextContentControllerBase peer);
    void (*clearPreviewText)(Ark_TextContentControllerBase peer);
    Ark_String (*getText)(Ark_TextContentControllerBase peer,
                          const Opt_TextRange* range);
} GENERATED_ArkUITextContentControllerBaseAccessor;

typedef struct GENERATED_ArkUITextControllerAccessor {
    void (*destroyPeer)(Ark_TextController peer);
    Ark_TextController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*closeSelectionMenu)(Ark_TextController peer);
    void (*setStyledString)(Ark_TextController peer,
                            Ark_StyledString value);
    Ark_LayoutManager (*getLayoutManager)(Ark_TextController peer);
} GENERATED_ArkUITextControllerAccessor;

typedef struct GENERATED_ArkUITextEditControllerExAccessor {
    void (*destroyPeer)(Ark_TextEditControllerEx peer);
    Ark_TextEditControllerEx (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*isEditing)(Ark_TextEditControllerEx peer);
    void (*stopEditing)(Ark_TextEditControllerEx peer);
    Ark_Boolean (*setCaretOffset)(Ark_TextEditControllerEx peer,
                                  const Ark_Number* offset);
    Ark_Number (*getCaretOffset)(Ark_TextEditControllerEx peer);
    Ark_PreviewText (*getPreviewText)(Ark_TextEditControllerEx peer);
} GENERATED_ArkUITextEditControllerExAccessor;

typedef struct GENERATED_ArkUITextFieldOpsAccessor {
    Ark_NativePointer (*registerTextFieldValueCallback)(Ark_NativePointer node,
                                                        const Ark_ResourceStr* value,
                                                        const TextFieldValueCallback* callback);
    Ark_NativePointer (*textFieldOpsSetWidth)(Ark_NativePointer node,
                                              const Opt_Union_Length_LayoutPolicy* value);
    Ark_NativePointer (*textFieldOpsSetHeight)(Ark_NativePointer node,
                                               const Opt_Union_Length_LayoutPolicy* value);
    Ark_NativePointer (*textFieldOpsSetPadding)(Ark_NativePointer node,
                                                const Opt_Union_Padding_Length_LocalizedPadding* value);
    Ark_NativePointer (*textFieldOpsSetMargin)(Ark_NativePointer node,
                                               const Opt_Union_Padding_Length_LocalizedPadding* value);
    Ark_NativePointer (*textFieldOpsSetBorder)(Ark_NativePointer node,
                                               const Opt_BorderOptions* value);
    Ark_NativePointer (*textFieldOpsSetBorderWidth)(Ark_NativePointer node,
                                                    const Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths* value);
    Ark_NativePointer (*textFieldOpsSetBorderColor)(Ark_NativePointer node,
                                                    const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors* value);
    Ark_NativePointer (*textFieldOpsSetBorderStyle)(Ark_NativePointer node,
                                                    const Opt_Union_BorderStyle_EdgeStyles* value);
    Ark_NativePointer (*textFieldOpsSetBorderRadius)(Ark_NativePointer node,
                                                     const Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses* value);
    Ark_NativePointer (*textFieldOpsSetBackgroundColor)(Ark_NativePointer node,
                                                        const Opt_ResourceColor* value);
} GENERATED_ArkUITextFieldOpsAccessor;

typedef struct GENERATED_ArkUITextInputControllerAccessor {
    void (*destroyPeer)(Ark_TextInputController peer);
    Ark_TextInputController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*caretPosition)(Ark_TextInputController peer,
                          const Ark_Number* value);
    void (*setTextSelection)(Ark_TextInputController peer,
                             const Ark_Number* selectionStart,
                             const Ark_Number* selectionEnd,
                             const Opt_SelectionOptions* options);
    void (*stopEditing)(Ark_TextInputController peer);
} GENERATED_ArkUITextInputControllerAccessor;

typedef struct GENERATED_ArkUITextMenuControllerAccessor {
    void (*destroyPeer)(Ark_TextMenuController peer);
    Ark_TextMenuController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setMenuOptions)(Ark_TextMenuController peer,
                           const Ark_TextMenuOptions* options);
} GENERATED_ArkUITextMenuControllerAccessor;

typedef struct GENERATED_ArkUITextMenuItemIdAccessor {
    void (*destroyPeer)(Ark_TextMenuItemId peer);
    Ark_TextMenuItemId (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_TextMenuItemId (*of)(const Ark_ResourceStr* id);
    Ark_Boolean (*equals)(Ark_TextMenuItemId peer,
                          Ark_TextMenuItemId id);
    Ark_TextMenuItemId (*getCUT)();
    Ark_TextMenuItemId (*getCOPY)();
    Ark_TextMenuItemId (*getPASTE)();
    Ark_TextMenuItemId (*getSELECT_ALL)();
    Ark_TextMenuItemId (*getCOLLABORATION_SERVICE)();
    Ark_TextMenuItemId (*getCAMERA_INPUT)();
    Ark_TextMenuItemId (*getAI_WRITER)();
    Ark_TextMenuItemId (*getTRANSLATE)();
    Ark_TextMenuItemId (*getSEARCH)();
    Ark_TextMenuItemId (*getSHARE)();
} GENERATED_ArkUITextMenuItemIdAccessor;

typedef struct GENERATED_ArkUITextPickerDialogAccessor {
    void (*destroyPeer)(Ark_TextPickerDialog peer);
    Ark_TextPickerDialog (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUITextPickerDialogAccessor;

typedef struct GENERATED_ArkUITextShadowStyleAccessor {
    void (*destroyPeer)(Ark_TextShadowStyle peer);
    Ark_TextShadowStyle (*construct)(const Ark_Union_ShadowOptions_Array_ShadowOptions* value);
    Ark_NativePointer (*getFinalizer)();
    Array_ShadowOptions (*getTextShadow)(Ark_TextShadowStyle peer);
} GENERATED_ArkUITextShadowStyleAccessor;

typedef struct GENERATED_ArkUITextStyleAccessor {
    void (*destroyPeer)(Ark_TextStyle peer);
    Ark_TextStyle (*construct)(const Opt_TextStyleInterface* value);
    Ark_NativePointer (*getFinalizer)();
    Opt_ResourceColor (*getFontColor)(Ark_TextStyle peer);
    Opt_String (*getFontFamily)(Ark_TextStyle peer);
    Opt_Number (*getFontSize)(Ark_TextStyle peer);
    Opt_Number (*getFontWeight)(Ark_TextStyle peer);
    Opt_FontStyle (*getFontStyle)(Ark_TextStyle peer);
} GENERATED_ArkUITextStyleAccessor;

typedef struct GENERATED_ArkUITextTimerControllerAccessor {
    void (*destroyPeer)(Ark_TextTimerController peer);
    Ark_TextTimerController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*start)(Ark_TextTimerController peer);
    void (*pause)(Ark_TextTimerController peer);
    void (*reset)(Ark_TextTimerController peer);
} GENERATED_ArkUITextTimerControllerAccessor;

typedef struct GENERATED_ArkUIThemeControlAccessor {
    void (*destroyPeer)(Ark_ThemeControl peer);
    Ark_ThemeControl (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setDefaultTheme)(const Ark_CustomTheme* theme);
} GENERATED_ArkUIThemeControlAccessor;

typedef struct GENERATED_ArkUITimePickerDialogAccessor {
    void (*destroyPeer)(Ark_TimePickerDialog peer);
    Ark_TimePickerDialog (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUITimePickerDialogAccessor;

typedef struct GENERATED_ArkUITouchEventAccessor {
    void (*destroyPeer)(Ark_TouchEvent peer);
    Ark_TouchEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Array_HistoricalPoint (*getHistoricalPoints)(Ark_TouchEvent peer);
    Ark_TouchType (*getType)(Ark_TouchEvent peer);
    void (*setType)(Ark_TouchEvent peer,
                    Ark_TouchType type);
    Array_TouchObject (*getTouches)(Ark_TouchEvent peer);
    void (*setTouches)(Ark_TouchEvent peer,
                       const Array_TouchObject* touches);
    Array_TouchObject (*getChangedTouches)(Ark_TouchEvent peer);
    void (*setChangedTouches)(Ark_TouchEvent peer,
                              const Array_TouchObject* changedTouches);
    Callback_Void (*getStopPropagation)(Ark_TouchEvent peer);
    void (*setStopPropagation)(Ark_TouchEvent peer,
                               const Callback_Void* stopPropagation);
    Callback_Void (*getPreventDefault)(Ark_TouchEvent peer);
    void (*setPreventDefault)(Ark_TouchEvent peer,
                              const Callback_Void* preventDefault);
} GENERATED_ArkUITouchEventAccessor;

typedef struct GENERATED_ArkUITransitionEffectAccessor {
    void (*destroyPeer)(Ark_TransitionEffect peer);
    Ark_TransitionEffect (*construct0)(const Ark_String* type);
    Ark_TransitionEffect (*construct1)(const Ark_Number* effect);
    Ark_TransitionEffect (*construct2)(Ark_TransitionEdge effect);
    Ark_TransitionEffect (*construct3)(const Ark_TranslateOptions* effect);
    Ark_TransitionEffect (*construct4)(const Ark_RotateOptions* effect);
    Ark_TransitionEffect (*construct5)(const Ark_ScaleOptions* effect);
    Ark_TransitionEffect (*construct6)(const Ark_AsymmetricTransitionOption* effect);
    Ark_NativePointer (*getFinalizer)();
    Ark_TransitionEffect (*translate)(const Ark_TranslateOptions* options);
    Ark_TransitionEffect (*rotate)(const Ark_RotateOptions* options);
    Ark_TransitionEffect (*scale)(const Ark_ScaleOptions* options);
    Ark_TransitionEffect (*opacity)(const Ark_Number* alpha);
    Ark_TransitionEffect (*move)(Ark_TransitionEdge edge);
    Ark_TransitionEffect (*asymmetric)(Ark_TransitionEffect appear,
                                       Ark_TransitionEffect disappear);
    Ark_TransitionEffect (*animation)(Ark_TransitionEffect peer,
                                      const Ark_AnimateParam* value);
    Ark_TransitionEffect (*combine)(Ark_TransitionEffect peer,
                                    Ark_TransitionEffect transitionEffect);
    Ark_TransitionEffect (*getIDENTITY)(Ark_TransitionEffect peer);
    void (*setIDENTITY)(Ark_TransitionEffect peer,
                        Ark_TransitionEffect IDENTITY);
    Ark_TransitionEffect (*getOPACITY)(Ark_TransitionEffect peer);
    void (*setOPACITY)(Ark_TransitionEffect peer,
                       Ark_TransitionEffect OPACITY);
    Ark_TransitionEffect (*getSLIDE)(Ark_TransitionEffect peer);
    void (*setSLIDE)(Ark_TransitionEffect peer,
                     Ark_TransitionEffect SLIDE);
    Ark_TransitionEffect (*getSLIDE_SWITCH)(Ark_TransitionEffect peer);
    void (*setSLIDE_SWITCH)(Ark_TransitionEffect peer,
                            Ark_TransitionEffect SLIDE_SWITCH);
} GENERATED_ArkUITransitionEffectAccessor;

typedef struct GENERATED_ArkUIUICommonEventAccessor {
    void (*destroyPeer)(Ark_UICommonEvent peer);
    Ark_UICommonEvent (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setOnClick)(Ark_UICommonEvent peer,
                       const Opt_Callback_ClickEvent_Void* callback_);
    void (*setOnTouch)(Ark_UICommonEvent peer,
                       const Opt_Callback_TouchEvent_Void* callback_);
    void (*setOnAppear)(Ark_UICommonEvent peer,
                        const Opt_Callback_Void* callback_);
    void (*setOnDisappear)(Ark_UICommonEvent peer,
                           const Opt_Callback_Void* callback_);
    void (*setOnKeyEvent)(Ark_UICommonEvent peer,
                          const Opt_Callback_KeyEvent_Void* callback_);
    void (*setOnFocus)(Ark_UICommonEvent peer,
                       const Opt_Callback_Void* callback_);
    void (*setOnBlur)(Ark_UICommonEvent peer,
                      const Opt_Callback_Void* callback_);
    void (*setOnHover)(Ark_UICommonEvent peer,
                       const Opt_HoverCallback* callback_);
    void (*setOnMouse)(Ark_UICommonEvent peer,
                       const Opt_Callback_MouseEvent_Void* callback_);
    void (*setOnSizeChange)(Ark_UICommonEvent peer,
                            const Opt_SizeChangeCallback* callback_);
    void (*setOnVisibleAreaApproximateChange)(Ark_UICommonEvent peer,
                                              const Ark_VisibleAreaEventOptions* options,
                                              const Opt_VisibleAreaChangeCallback* event);
} GENERATED_ArkUIUICommonEventAccessor;

typedef struct GENERATED_ArkUIUIContextAccessor {
    void (*destroyPeer)(Ark_UIContext peer);
    Ark_UIContext (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_drawing_Font (*getFont)(Ark_UIContext peer);
    Ark_String (*getFilteredInspectorTree)(Ark_VMContext vmContext,
                                           Ark_UIContext peer,
                                           const Opt_Array_String* filters);
    Ark_String (*getFilteredInspectorTreeById)(Ark_VMContext vmContext,
                                               Ark_UIContext peer,
                                               const Ark_String* id,
                                               const Ark_Number* depth,
                                               const Opt_Array_String* filters);
    void (*animateTo)(Ark_UIContext peer,
                      const Ark_AnimateParam* value,
                      const Callback_Void* event);
    void (*showTextPickerDialog)(Ark_UIContext peer,
                                 const Ark_TextPickerDialogOptions* options);
    void (*runScopedTask)(Ark_UIContext peer,
                          const Callback_Void* callback_);
    void (*animateToImmediately)(Ark_UIContext peer,
                                 const Ark_AnimateParam* param,
                                 const Callback_Void* event);
    Opt_FrameNode (*getFrameNodeById)(Ark_UIContext peer,
                                      const Ark_String* id);
    Opt_FrameNode (*getAttachedFrameNodeById)(Ark_UIContext peer,
                                              const Ark_String* id);
    Opt_FrameNode (*getFrameNodeByUniqueId)(Ark_UIContext peer,
                                            const Ark_Number* id);
    Ark_Number (*vp2px)(Ark_UIContext peer,
                        const Ark_Number* value);
    Ark_Number (*px2vp)(Ark_UIContext peer,
                        const Ark_Number* value);
    Ark_Number (*fp2px)(Ark_UIContext peer,
                        const Ark_Number* value);
    Ark_Number (*px2fp)(Ark_UIContext peer,
                        const Ark_Number* value);
    Ark_Number (*lpx2px)(Ark_UIContext peer,
                         const Ark_Number* value);
    Ark_Number (*px2lpx)(Ark_UIContext peer,
                         const Ark_Number* value);
    Opt_common_Context (*getHostContext)(Ark_UIContext peer);
    void (*setDynamicDimming)(Ark_UIContext peer,
                              const Ark_String* id,
                              const Ark_Number* value);
    Opt_String (*getWindowName)(Ark_UIContext peer);
    Ark_WidthBreakpoint (*getWindowWidthBreakpoint)(Ark_UIContext peer);
    Ark_HeightBreakpoint (*getWindowHeightBreakpoint)(Ark_UIContext peer);
    void (*openBindSheet)(Ark_VMContext vmContext,
                          Ark_AsyncWorkerPtr asyncWorker,
                          Ark_UIContext peer,
                          Ark_ComponentContent bindSheetContent,
                          const Opt_SheetOptions* sheetOptions,
                          const Opt_Number* targetId,
                          const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*updateBindSheet)(Ark_VMContext vmContext,
                            Ark_AsyncWorkerPtr asyncWorker,
                            Ark_UIContext peer,
                            Ark_ComponentContent bindSheetContent,
                            const Ark_SheetOptions* sheetOptions,
                            const Opt_Boolean* partialUpdate,
                            const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*closeBindSheet)(Ark_VMContext vmContext,
                           Ark_AsyncWorkerPtr asyncWorker,
                           Ark_UIContext peer,
                           Ark_ComponentContent bindSheetContent,
                           const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*clearResourceCache)(Ark_VMContext vmContext,
                               Ark_UIContext peer);
    Ark_Boolean (*isFollowingSystemFontScale)(Ark_UIContext peer);
    Ark_Number (*getMaxFontScale)(Ark_UIContext peer);
} GENERATED_ArkUIUIContextAccessor;

typedef struct GENERATED_ArkUIUIContextAtomicServiceBarAccessor {
    Ark_Frame (*getBarRect)();
} GENERATED_ArkUIUIContextAtomicServiceBarAccessor;

typedef struct GENERATED_ArkUIUiEffect_VisualEffectAccessor {
    void (*destroyPeer)(Ark_uiEffect_VisualEffect peer);
    Ark_uiEffect_VisualEffect (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_uiEffect_VisualEffect (*backgroundColorBlender)(Ark_uiEffect_VisualEffect peer,
                                                        const Ark_uiEffect_BrightnessBlender* blender);
} GENERATED_ArkUIUiEffect_VisualEffectAccessor;

typedef struct GENERATED_ArkUIUIExtensionProxyAccessor {
    void (*destroyPeer)(Ark_UIExtensionProxy peer);
    Ark_UIExtensionProxy (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*send)(Ark_UIExtensionProxy peer,
                 const Map_String_Object* data);
    Map_String_Object (*sendSync)(Ark_UIExtensionProxy peer,
                                  const Map_String_Object* data);
    void (*onAsyncReceiverRegister)(Ark_UIExtensionProxy peer,
                                    const Callback_UIExtensionProxy_Void* callback_);
    void (*onSyncReceiverRegister)(Ark_UIExtensionProxy peer,
                                   const Callback_UIExtensionProxy_Void* callback_);
    void (*offAsyncReceiverRegister)(Ark_UIExtensionProxy peer,
                                     const Opt_Callback_UIExtensionProxy_Void* callback_);
    void (*offSyncReceiverRegister)(Ark_UIExtensionProxy peer,
                                    const Opt_Callback_UIExtensionProxy_Void* callback_);
} GENERATED_ArkUIUIExtensionProxyAccessor;

typedef struct GENERATED_ArkUIUnifiedDataChannel_UnifiedDataAccessor {
    void (*destroyPeer)(Ark_unifiedDataChannel_UnifiedData peer);
    Ark_unifiedDataChannel_UnifiedData (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*hasType)(Ark_unifiedDataChannel_UnifiedData peer,
                           const Ark_String* UnifiedData_type);
    Array_String (*getTypes)(Ark_unifiedDataChannel_UnifiedData peer);
} GENERATED_ArkUIUnifiedDataChannel_UnifiedDataAccessor;

typedef struct GENERATED_ArkUIUrlStyleAccessor {
    void (*destroyPeer)(Ark_UrlStyle peer);
    Ark_UrlStyle (*construct)(const Ark_String* url);
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getUrl)(Ark_UrlStyle peer);
} GENERATED_ArkUIUrlStyleAccessor;

typedef struct GENERATED_ArkUIUserDataSpanAccessor {
    void (*destroyPeer)(Ark_UserDataSpan peer);
    Ark_UserDataSpan (*construct)();
    Ark_NativePointer (*getFinalizer)();
} GENERATED_ArkUIUserDataSpanAccessor;

typedef struct GENERATED_ArkUIVideoControllerAccessor {
    void (*destroyPeer)(Ark_VideoController peer);
    Ark_VideoController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*start)(Ark_VideoController peer);
    void (*pause)(Ark_VideoController peer);
    void (*stop)(Ark_VideoController peer);
    void (*setCurrentTime0)(Ark_VideoController peer,
                            const Ark_Number* value);
    void (*requestFullscreen)(Ark_VideoController peer,
                              Ark_Boolean value);
    void (*exitFullscreen)(Ark_VideoController peer);
    void (*setCurrentTime1)(Ark_VideoController peer,
                            const Ark_Number* value,
                            Ark_SeekMode seekMode);
    void (*reset)(Ark_VideoController peer);
} GENERATED_ArkUIVideoControllerAccessor;

typedef struct GENERATED_ArkUIWaterFlowSectionsAccessor {
    void (*destroyPeer)(Ark_WaterFlowSections peer);
    Ark_WaterFlowSections (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Boolean (*splice)(Ark_WaterFlowSections peer,
                          const Ark_Number* start,
                          const Opt_Number* deleteCount,
                          const Opt_Array_SectionOptions* sections);
    Ark_Boolean (*push)(Ark_WaterFlowSections peer,
                        const Ark_SectionOptions* section);
    Ark_Boolean (*update)(Ark_WaterFlowSections peer,
                          const Ark_Number* sectionIndex,
                          const Ark_SectionOptions* section);
    Array_SectionOptions (*values)(Ark_WaterFlowSections peer);
    Ark_Number (*length)(Ark_WaterFlowSections peer);
} GENERATED_ArkUIWaterFlowSectionsAccessor;

typedef struct GENERATED_ArkUIWebContextMenuParamAccessor {
    void (*destroyPeer)(Ark_WebContextMenuParam peer);
    Ark_WebContextMenuParam (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_Int32 (*x)(Ark_WebContextMenuParam peer);
    Ark_Int32 (*y)(Ark_WebContextMenuParam peer);
    Ark_String (*getLinkUrl)(Ark_WebContextMenuParam peer);
    Ark_String (*getUnfilteredLinkUrl)(Ark_WebContextMenuParam peer);
    Ark_String (*getSourceUrl)(Ark_WebContextMenuParam peer);
    Ark_Boolean (*existsImageContents)(Ark_WebContextMenuParam peer);
    Ark_ContextMenuMediaType (*getMediaType)(Ark_WebContextMenuParam peer);
    Ark_String (*getSelectionText)(Ark_WebContextMenuParam peer);
    Ark_ContextMenuSourceType (*getSourceType)(Ark_WebContextMenuParam peer);
    Ark_ContextMenuInputFieldType (*getInputFieldType)(Ark_WebContextMenuParam peer);
    Ark_Boolean (*isEditable)(Ark_WebContextMenuParam peer);
    Ark_Int32 (*getEditStateFlags)(Ark_WebContextMenuParam peer);
    Ark_Int32 (*getPreviewWidth)(Ark_WebContextMenuParam peer);
    Ark_Int32 (*getPreviewHeight)(Ark_WebContextMenuParam peer);
} GENERATED_ArkUIWebContextMenuParamAccessor;

typedef struct GENERATED_ArkUIWebContextMenuResultAccessor {
    void (*destroyPeer)(Ark_WebContextMenuResult peer);
    Ark_WebContextMenuResult (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*closeContextMenu)(Ark_WebContextMenuResult peer);
    void (*copyImage)(Ark_WebContextMenuResult peer);
    void (*copy)(Ark_WebContextMenuResult peer);
    void (*paste)(Ark_WebContextMenuResult peer);
    void (*cut)(Ark_WebContextMenuResult peer);
    void (*selectAll)(Ark_WebContextMenuResult peer);
} GENERATED_ArkUIWebContextMenuResultAccessor;

typedef struct GENERATED_ArkUIWebCookieAccessor {
    void (*destroyPeer)(Ark_WebCookie peer);
    Ark_WebCookie (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*setCookie)(Ark_WebCookie peer);
    void (*saveCookie)(Ark_WebCookie peer);
} GENERATED_ArkUIWebCookieAccessor;

typedef struct GENERATED_ArkUIWebKeyboardControllerAccessor {
    void (*destroyPeer)(Ark_WebKeyboardController peer);
    Ark_WebKeyboardController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*insertText)(Ark_WebKeyboardController peer,
                       const Ark_String* text);
    void (*deleteForward)(Ark_WebKeyboardController peer,
                          Ark_Int32 length);
    void (*deleteBackward)(Ark_WebKeyboardController peer,
                           Ark_Int32 length);
    void (*sendFunctionKey)(Ark_WebKeyboardController peer,
                            Ark_Int32 key);
    void (*close)(Ark_WebKeyboardController peer);
} GENERATED_ArkUIWebKeyboardControllerAccessor;

typedef struct GENERATED_ArkUIWebResourceErrorAccessor {
    void (*destroyPeer)(Ark_WebResourceError peer);
    Ark_WebResourceError (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getErrorInfo)(Ark_WebResourceError peer);
    Ark_Number (*getErrorCode)(Ark_WebResourceError peer);
} GENERATED_ArkUIWebResourceErrorAccessor;

typedef struct GENERATED_ArkUIWebResourceRequestAccessor {
    void (*destroyPeer)(Ark_WebResourceRequest peer);
    Ark_WebResourceRequest (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Array_Header (*getRequestHeader)(Ark_WebResourceRequest peer);
    Ark_String (*getRequestUrl)(Ark_WebResourceRequest peer);
    Ark_Boolean (*isRequestGesture)(Ark_WebResourceRequest peer);
    Ark_Boolean (*isMainFrame)(Ark_WebResourceRequest peer);
    Ark_Boolean (*isRedirect)(Ark_WebResourceRequest peer);
    Ark_String (*getRequestMethod)(Ark_WebResourceRequest peer);
} GENERATED_ArkUIWebResourceRequestAccessor;

typedef struct GENERATED_ArkUIWebResourceResponseAccessor {
    void (*destroyPeer)(Ark_WebResourceResponse peer);
    Ark_WebResourceResponse (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getResponseData)(Ark_WebResourceResponse peer);
    Opt_Union_String_Number_Buffer_Resource (*getResponseDataEx)(Ark_WebResourceResponse peer);
    Ark_String (*getResponseEncoding)(Ark_WebResourceResponse peer);
    Ark_String (*getResponseMimeType)(Ark_WebResourceResponse peer);
    Ark_String (*getReasonMessage)(Ark_WebResourceResponse peer);
    Array_Header (*getResponseHeader)(Ark_WebResourceResponse peer);
    Ark_Number (*getResponseCode)(Ark_WebResourceResponse peer);
    void (*setResponseData)(Ark_WebResourceResponse peer,
                            const Ark_Union_String_Number_Resource_Buffer* data);
    void (*setResponseEncoding)(Ark_WebResourceResponse peer,
                                const Ark_String* encoding);
    void (*setResponseMimeType)(Ark_WebResourceResponse peer,
                                const Ark_String* mimeType);
    void (*setReasonMessage)(Ark_WebResourceResponse peer,
                             const Ark_String* reason);
    void (*setResponseHeader)(Ark_WebResourceResponse peer,
                              const Array_Header* header);
    void (*setResponseCode)(Ark_WebResourceResponse peer,
                            const Ark_Number* code);
    void (*setResponseIsReady)(Ark_WebResourceResponse peer,
                               Ark_Boolean IsReady);
    Ark_Boolean (*getResponseIsReady)(Ark_WebResourceResponse peer);
} GENERATED_ArkUIWebResourceResponseAccessor;

typedef struct GENERATED_ArkUIWebview_WebviewControllerAccessor {
    void (*destroyPeer)(Ark_webview_WebviewController peer);
    Ark_webview_WebviewController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    void (*initializeWebEngine)();
    void (*loadUrl)(Ark_webview_WebviewController peer,
                    const Ark_Union_String_Resource* url,
                    const Opt_Array_webview_WebHeader* headers);
} GENERATED_ArkUIWebview_WebviewControllerAccessor;

typedef struct GENERATED_ArkUIXComponentControllerAccessor {
    void (*destroyPeer)(Ark_XComponentController peer);
    Ark_XComponentController (*construct)();
    Ark_NativePointer (*getFinalizer)();
    Ark_String (*getXComponentSurfaceId)(Ark_XComponentController peer);
    Ark_Object (*getXComponentContext)(Ark_XComponentController peer);
    void (*setXComponentSurfaceRect)(Ark_XComponentController peer,
                                     const Ark_SurfaceRect* rect);
    Ark_SurfaceRect (*getXComponentSurfaceRect)(Ark_XComponentController peer);
    void (*setXComponentSurfaceRotation)(Ark_XComponentController peer,
                                         const Ark_SurfaceRotationOptions* rotationOptions);
    Ark_SurfaceRotationOptions (*getXComponentSurfaceRotation)(Ark_XComponentController peer);
    void (*startImageAnalyzer)(Ark_VMContext vmContext,
                               Ark_AsyncWorkerPtr asyncWorker,
                               Ark_XComponentController peer,
                               const Ark_ImageAnalyzerConfig* config,
                               const Callback_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*stopImageAnalyzer)(Ark_XComponentController peer);
    Callback_String_Void (*getOnSurfaceCreated)(Ark_XComponentController peer);
    void (*setOnSurfaceCreated)(Ark_XComponentController peer,
                                const Callback_String_Void* onSurfaceCreated);
    Callback_String_SurfaceRect_Void (*getOnSurfaceChanged)(Ark_XComponentController peer);
    void (*setOnSurfaceChanged)(Ark_XComponentController peer,
                                const Callback_String_SurfaceRect_Void* onSurfaceChanged);
    Callback_String_Void (*getOnSurfaceDestroyed)(Ark_XComponentController peer);
    void (*setOnSurfaceDestroyed)(Ark_XComponentController peer,
                                  const Callback_String_Void* onSurfaceDestroyed);
} GENERATED_ArkUIXComponentControllerAccessor;

typedef struct GENERATED_ArkUIGlobalScopeAccessor {
    Ark_Resource (*$r)(const Ark_String* value,
                       const Array_Opt_Object* params);
    Ark_Resource (*$rawfile)(const Ark_String* value);
    void (*animateTo)(const Ark_AnimateParam* value,
                      const Callback_Void* event);
    void (*animateToImmediately)(const Ark_AnimateParam* value,
                                 const Callback_Void* event);
    Ark_CustomObject (*applyStyles)(const Ark_CustomObject* self,
                                    const CustomStyles* customStyles);
    void (*bindCompatibleProvideCallback)(Ark_ExtendableComponent component,
                                          const Ark_CustomObject* createCompatibleState,
                                          const Ark_CustomObject* setCallback,
                                          const Opt_CustomObject* compatibleComponent);
    Ark_BorderRadiuses (*borderRadiuses)(const Ark_Number* all);
    Ark_Edges (*borderStyles)(Ark_BorderStyle all);
    void (*compatibleComponent)(const CompatibleInitCallback* init,
                                const CompatibleUpdateCallback* update,
                                const Opt_ExtendableComponent* component);
    void (*compatibleWrappedBuilder)(const Ark_CustomObject* builder,
                                     const Ark_CustomObject* args);
    void (*cursorControl_restoreDefault)();
    void (*cursorControl_setCursor)(Ark_pointer_PointerStyle value);
    Ark_Edges (*edgeColors)(const Ark_Number* all);
    Ark_Edges (*edgeWidths)(const Ark_Number* all);
    Ark_Boolean (*focusControl_requestFocus)(const Ark_String* value);
    Ark_font_UIFontConfig (*font_getUIFontConfig)();
    Ark_CustomObject (*getCompatibleState)(const Ark_CustomObject* state,
                                           const Ark_CustomObject* createCompatibleState);
    Ark_ComponentInfo (*getRectangleById)(const Ark_String* id);
    void (*postCardAction)(const Ark_Object* component,
                           const Ark_Object* action);
    void (*Profiler_registerVsyncCallback)(const Profiler_Callback_String_Void* callback_);
    void (*Profiler_unregisterVsyncCallback)();
    Ark_Number (*px2vp)(const Ark_Number* value);
    void (*setAppBgColor)(const Ark_String* value);
    void (*text_getFontDescriptorByFullName)(Ark_VMContext vmContext,
                                             Ark_AsyncWorkerPtr asyncWorker,
                                             const Ark_String* fullName,
                                             Ark_text_SystemFontType fontType,
                                             const Callback_Opt_FontDescriptor_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*text_getSystemFontFullNamesByType)(Ark_VMContext vmContext,
                                              Ark_AsyncWorkerPtr asyncWorker,
                                              Ark_text_SystemFontType fontType,
                                              const Callback_Opt_Array_String_Opt_Array_String_Void* outputArgumentForReturningPromise);
    void (*text_matchFontDescriptors)(Ark_VMContext vmContext,
                                      Ark_AsyncWorkerPtr asyncWorker,
                                      const Ark_text_FontDescriptor* desc,
                                      const Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void* outputArgumentForReturningPromise);
    Ark_uiEffect_BrightnessBlender (*uiEffect_createBrightnessBlender)(const Ark_uiEffect_BrightnessBlenderParam* param);
    Ark_uiEffect_VisualEffect (*uiEffect_createEffect)();
    Ark_Number (*vp2px)(const Ark_Number* value);
} GENERATED_ArkUIGlobalScopeAccessor;


/**
 * An API to control an implementation. When making changes modifying binary
 * layout, i.e. adding new events - increase ARKUI_API_VERSION above for binary
 * layout checks.
 */
typedef struct GENERATED_ArkUINodeModifiers {
    const GENERATED_ArkUIAlphabetIndexerModifier* (*getAlphabetIndexerModifier)();
    const GENERATED_ArkUIAnimatorModifier* (*getAnimatorModifier)();
    const GENERATED_ArkUIBadgeModifier* (*getBadgeModifier)();
    const GENERATED_ArkUIBaseSpanModifier* (*getBaseSpanModifier)();
    const GENERATED_ArkUIBlankModifier* (*getBlankModifier)();
    const GENERATED_ArkUIButtonModifier* (*getButtonModifier)();
    const GENERATED_ArkUICalendarPickerModifier* (*getCalendarPickerModifier)();
    const GENERATED_ArkUICanvasModifier* (*getCanvasModifier)();
    const GENERATED_ArkUICheckboxModifier* (*getCheckboxModifier)();
    const GENERATED_ArkUICheckboxGroupModifier* (*getCheckboxGroupModifier)();
    const GENERATED_ArkUICircleModifier* (*getCircleModifier)();
    const GENERATED_ArkUIColumnModifier* (*getColumnModifier)();
    const GENERATED_ArkUIColumnSplitModifier* (*getColumnSplitModifier)();
    const GENERATED_ArkUICommonMethodModifier* (*getCommonMethodModifier)();
    const GENERATED_ArkUICommonShapeMethodModifier* (*getCommonShapeMethodModifier)();
    const GENERATED_ArkUIComponentRootModifier* (*getComponentRootModifier)();
    const GENERATED_ArkUIContainerSpanModifier* (*getContainerSpanModifier)();
    const GENERATED_ArkUICounterModifier* (*getCounterModifier)();
    const GENERATED_ArkUICustomLayoutRootModifier* (*getCustomLayoutRootModifier)();
    const GENERATED_ArkUIDataPanelModifier* (*getDataPanelModifier)();
    const GENERATED_ArkUIDatePickerModifier* (*getDatePickerModifier)();
    const GENERATED_ArkUIDividerModifier* (*getDividerModifier)();
    const GENERATED_ArkUIEffectComponentModifier* (*getEffectComponentModifier)();
    const GENERATED_ArkUIEllipseModifier* (*getEllipseModifier)();
    const GENERATED_ArkUIEmbeddedComponentModifier* (*getEmbeddedComponentModifier)();
    const GENERATED_ArkUIFlexModifier* (*getFlexModifier)();
    const GENERATED_ArkUIFlowItemModifier* (*getFlowItemModifier)();
    const GENERATED_ArkUIFolderStackModifier* (*getFolderStackModifier)();
    const GENERATED_ArkUIFormComponentModifier* (*getFormComponentModifier)();
    const GENERATED_ArkUIFormLinkModifier* (*getFormLinkModifier)();
    const GENERATED_ArkUIGaugeModifier* (*getGaugeModifier)();
    const GENERATED_ArkUIGridModifier* (*getGridModifier)();
    const GENERATED_ArkUIGridColModifier* (*getGridColModifier)();
    const GENERATED_ArkUIGridItemModifier* (*getGridItemModifier)();
    const GENERATED_ArkUIGridRowModifier* (*getGridRowModifier)();
    const GENERATED_ArkUIHyperlinkModifier* (*getHyperlinkModifier)();
    const GENERATED_ArkUIImageModifier* (*getImageModifier)();
    const GENERATED_ArkUIImageAnimatorModifier* (*getImageAnimatorModifier)();
    const GENERATED_ArkUIImageSpanModifier* (*getImageSpanModifier)();
    const GENERATED_ArkUIIndicatorComponentModifier* (*getIndicatorComponentModifier)();
    const GENERATED_ArkUILineModifier* (*getLineModifier)();
    const GENERATED_ArkUILinearIndicatorModifier* (*getLinearIndicatorModifier)();
    const GENERATED_ArkUIListModifier* (*getListModifier)();
    const GENERATED_ArkUIListItemModifier* (*getListItemModifier)();
    const GENERATED_ArkUIListItemGroupModifier* (*getListItemGroupModifier)();
    const GENERATED_ArkUILoadingProgressModifier* (*getLoadingProgressModifier)();
    const GENERATED_ArkUIMarqueeModifier* (*getMarqueeModifier)();
    const GENERATED_ArkUIMediaCachedImageModifier* (*getMediaCachedImageModifier)();
    const GENERATED_ArkUIMenuModifier* (*getMenuModifier)();
    const GENERATED_ArkUIMenuItemModifier* (*getMenuItemModifier)();
    const GENERATED_ArkUIMenuItemGroupModifier* (*getMenuItemGroupModifier)();
    const GENERATED_ArkUINavDestinationModifier* (*getNavDestinationModifier)();
    const GENERATED_ArkUINavigationModifier* (*getNavigationModifier)();
    const GENERATED_ArkUINodeContainerModifier* (*getNodeContainerModifier)();
    const GENERATED_ArkUIPathModifier* (*getPathModifier)();
    const GENERATED_ArkUIPatternLockModifier* (*getPatternLockModifier)();
    const GENERATED_ArkUIPluginComponentModifier* (*getPluginComponentModifier)();
    const GENERATED_ArkUIPolygonModifier* (*getPolygonModifier)();
    const GENERATED_ArkUIPolylineModifier* (*getPolylineModifier)();
    const GENERATED_ArkUIProgressModifier* (*getProgressModifier)();
    const GENERATED_ArkUIQRCodeModifier* (*getQRCodeModifier)();
    const GENERATED_ArkUIRadioModifier* (*getRadioModifier)();
    const GENERATED_ArkUIRatingModifier* (*getRatingModifier)();
    const GENERATED_ArkUIRectModifier* (*getRectModifier)();
    const GENERATED_ArkUIRefreshModifier* (*getRefreshModifier)();
    const GENERATED_ArkUIRelativeContainerModifier* (*getRelativeContainerModifier)();
    const GENERATED_ArkUIRemoteWindowModifier* (*getRemoteWindowModifier)();
    const GENERATED_ArkUIRichEditorModifier* (*getRichEditorModifier)();
    const GENERATED_ArkUIRichTextModifier* (*getRichTextModifier)();
    const GENERATED_ArkUIRootModifier* (*getRootModifier)();
    const GENERATED_ArkUIRootSceneModifier* (*getRootSceneModifier)();
    const GENERATED_ArkUIRowModifier* (*getRowModifier)();
    const GENERATED_ArkUIRowSplitModifier* (*getRowSplitModifier)();
    const GENERATED_ArkUIScreenModifier* (*getScreenModifier)();
    const GENERATED_ArkUIScrollModifier* (*getScrollModifier)();
    const GENERATED_ArkUIScrollableCommonMethodModifier* (*getScrollableCommonMethodModifier)();
    const GENERATED_ArkUIScrollBarModifier* (*getScrollBarModifier)();
    const GENERATED_ArkUISearchModifier* (*getSearchModifier)();
    const GENERATED_ArkUISelectModifier* (*getSelectModifier)();
    const GENERATED_ArkUIShapeModifier* (*getShapeModifier)();
    const GENERATED_ArkUISideBarContainerModifier* (*getSideBarContainerModifier)();
    const GENERATED_ArkUISliderModifier* (*getSliderModifier)();
    const GENERATED_ArkUISpanModifier* (*getSpanModifier)();
    const GENERATED_ArkUIStackModifier* (*getStackModifier)();
    const GENERATED_ArkUIStepperModifier* (*getStepperModifier)();
    const GENERATED_ArkUIStepperItemModifier* (*getStepperItemModifier)();
    const GENERATED_ArkUISwiperModifier* (*getSwiperModifier)();
    const GENERATED_ArkUISymbolGlyphModifier* (*getSymbolGlyphModifier)();
    const GENERATED_ArkUISymbolSpanModifier* (*getSymbolSpanModifier)();
    const GENERATED_ArkUITabContentModifier* (*getTabContentModifier)();
    const GENERATED_ArkUITabsModifier* (*getTabsModifier)();
    const GENERATED_ArkUITextModifier* (*getTextModifier)();
    const GENERATED_ArkUITextAreaModifier* (*getTextAreaModifier)();
    const GENERATED_ArkUITextClockModifier* (*getTextClockModifier)();
    const GENERATED_ArkUITextInputModifier* (*getTextInputModifier)();
    const GENERATED_ArkUITextPickerModifier* (*getTextPickerModifier)();
    const GENERATED_ArkUITextTimerModifier* (*getTextTimerModifier)();
    const GENERATED_ArkUITimePickerModifier* (*getTimePickerModifier)();
    const GENERATED_ArkUIToggleModifier* (*getToggleModifier)();
    const GENERATED_ArkUIUIExtensionComponentModifier* (*getUIExtensionComponentModifier)();
    const GENERATED_ArkUIVideoModifier* (*getVideoModifier)();
    const GENERATED_ArkUIWaterFlowModifier* (*getWaterFlowModifier)();
    const GENERATED_ArkUIWebModifier* (*getWebModifier)();
    const GENERATED_ArkUIWindowSceneModifier* (*getWindowSceneModifier)();
    const GENERATED_ArkUIXComponentModifier* (*getXComponentModifier)();
} GENERATED_ArkUINodeModifiers;

typedef struct GENERATED_ArkUIAccessors {
    const GENERATED_ArkUIAccessibilityHoverEventAccessor* (*getAccessibilityHoverEventAccessor)();
    const GENERATED_ArkUIAnimationExtenderAccessor* (*getAnimationExtenderAccessor)();
    const GENERATED_ArkUIAppearSymbolEffectAccessor* (*getAppearSymbolEffectAccessor)();
    const GENERATED_ArkUIAxisEventAccessor* (*getAxisEventAccessor)();
    const GENERATED_ArkUIBackgroundColorStyleAccessor* (*getBackgroundColorStyleAccessor)();
    const GENERATED_ArkUIBaseContextAccessor* (*getBaseContextAccessor)();
    const GENERATED_ArkUIBaseCustomDialogAccessor* (*getBaseCustomDialogAccessor)();
    const GENERATED_ArkUIBaseEventAccessor* (*getBaseEventAccessor)();
    const GENERATED_ArkUIBaseGestureEventAccessor* (*getBaseGestureEventAccessor)();
    const GENERATED_ArkUIBaselineOffsetStyleAccessor* (*getBaselineOffsetStyleAccessor)();
    const GENERATED_ArkUIBaseShapeAccessor* (*getBaseShapeAccessor)();
    const GENERATED_ArkUIBounceSymbolEffectAccessor* (*getBounceSymbolEffectAccessor)();
    const GENERATED_ArkUIBuilderNodeOpsAccessor* (*getBuilderNodeOpsAccessor)();
    const GENERATED_ArkUICalendarPickerDialogAccessor* (*getCalendarPickerDialogAccessor)();
    const GENERATED_ArkUICanvasGradientAccessor* (*getCanvasGradientAccessor)();
    const GENERATED_ArkUICanvasPathAccessor* (*getCanvasPathAccessor)();
    const GENERATED_ArkUICanvasPatternAccessor* (*getCanvasPatternAccessor)();
    const GENERATED_ArkUICanvasRendererAccessor* (*getCanvasRendererAccessor)();
    const GENERATED_ArkUICanvasRenderingContext2DAccessor* (*getCanvasRenderingContext2DAccessor)();
    const GENERATED_ArkUIChildrenMainSizeAccessor* (*getChildrenMainSizeAccessor)();
    const GENERATED_ArkUICircleShapeAccessor* (*getCircleShapeAccessor)();
    const GENERATED_ArkUIClickEventAccessor* (*getClickEventAccessor)();
    const GENERATED_ArkUIClientAuthenticationHandlerAccessor* (*getClientAuthenticationHandlerAccessor)();
    const GENERATED_ArkUIColorContentAccessor* (*getColorContentAccessor)();
    const GENERATED_ArkUIColorFilterAccessor* (*getColorFilterAccessor)();
    const GENERATED_ArkUIColorMetricsAccessor* (*getColorMetricsAccessor)();
    const GENERATED_ArkUICommon_ContextAccessor* (*getCommon_ContextAccessor)();
    const GENERATED_ArkUICommonShapeAccessor* (*getCommonShapeAccessor)();
    const GENERATED_ArkUIComponentContentAccessor* (*getComponentContentAccessor)();
    const GENERATED_ArkUIConsoleMessageAccessor* (*getConsoleMessageAccessor)();
    const GENERATED_ArkUIContentModifierHelperAccessor* (*getContentModifierHelperAccessor)();
    const GENERATED_ArkUIContextAccessor* (*getContextAccessor)();
    const GENERATED_ArkUIControllerHandlerAccessor* (*getControllerHandlerAccessor)();
    const GENERATED_ArkUICurves_ICurveAccessor* (*getCurves_ICurveAccessor)();
    const GENERATED_ArkUICustomDialogControllerAccessor* (*getCustomDialogControllerAccessor)();
    const GENERATED_ArkUICustomSpanAccessor* (*getCustomSpanAccessor)();
    const GENERATED_ArkUIDataResubmissionHandlerAccessor* (*getDataResubmissionHandlerAccessor)();
    const GENERATED_ArkUIDatePickerDialogAccessor* (*getDatePickerDialogAccessor)();
    const GENERATED_ArkUIDecorationStyleAccessor* (*getDecorationStyleAccessor)();
    const GENERATED_ArkUIDisappearSymbolEffectAccessor* (*getDisappearSymbolEffectAccessor)();
    const GENERATED_ArkUIDismissDialogActionAccessor* (*getDismissDialogActionAccessor)();
    const GENERATED_ArkUIDismissPopupActionAccessor* (*getDismissPopupActionAccessor)();
    const GENERATED_ArkUIDragEventAccessor* (*getDragEventAccessor)();
    const GENERATED_ArkUIDrawableDescriptorAccessor* (*getDrawableDescriptorAccessor)();
    const GENERATED_ArkUIDrawContextAccessor* (*getDrawContextAccessor)();
    const GENERATED_ArkUIDrawing_BrushAccessor* (*getDrawing_BrushAccessor)();
    const GENERATED_ArkUIDrawing_CanvasAccessor* (*getDrawing_CanvasAccessor)();
    const GENERATED_ArkUIDrawing_ColorFilterAccessor* (*getDrawing_ColorFilterAccessor)();
    const GENERATED_ArkUIDrawing_FontAccessor* (*getDrawing_FontAccessor)();
    const GENERATED_ArkUIDrawing_ImageFilterAccessor* (*getDrawing_ImageFilterAccessor)();
    const GENERATED_ArkUIDrawing_LatticeAccessor* (*getDrawing_LatticeAccessor)();
    const GENERATED_ArkUIDrawing_MaskFilterAccessor* (*getDrawing_MaskFilterAccessor)();
    const GENERATED_ArkUIDrawing_MatrixAccessor* (*getDrawing_MatrixAccessor)();
    const GENERATED_ArkUIDrawing_PathAccessor* (*getDrawing_PathAccessor)();
    const GENERATED_ArkUIDrawing_PathEffectAccessor* (*getDrawing_PathEffectAccessor)();
    const GENERATED_ArkUIDrawing_PenAccessor* (*getDrawing_PenAccessor)();
    const GENERATED_ArkUIDrawing_RegionAccessor* (*getDrawing_RegionAccessor)();
    const GENERATED_ArkUIDrawing_RoundRectAccessor* (*getDrawing_RoundRectAccessor)();
    const GENERATED_ArkUIDrawing_SamplingOptionsAccessor* (*getDrawing_SamplingOptionsAccessor)();
    const GENERATED_ArkUIDrawing_ShaderEffectAccessor* (*getDrawing_ShaderEffectAccessor)();
    const GENERATED_ArkUIDrawing_ShadowLayerAccessor* (*getDrawing_ShadowLayerAccessor)();
    const GENERATED_ArkUIDrawing_TextBlobAccessor* (*getDrawing_TextBlobAccessor)();
    const GENERATED_ArkUIDrawing_TypefaceAccessor* (*getDrawing_TypefaceAccessor)();
    const GENERATED_ArkUIDrawingRenderingContextAccessor* (*getDrawingRenderingContextAccessor)();
    const GENERATED_ArkUIDrawModifierAccessor* (*getDrawModifierAccessor)();
    const GENERATED_ArkUIEllipseShapeAccessor* (*getEllipseShapeAccessor)();
    const GENERATED_ArkUIEventEmulatorAccessor* (*getEventEmulatorAccessor)();
    const GENERATED_ArkUIEventResultAccessor* (*getEventResultAccessor)();
    const GENERATED_ArkUIEventTargetInfoAccessor* (*getEventTargetInfoAccessor)();
    const GENERATED_ArkUIExtendableComponentAccessor* (*getExtendableComponentAccessor)();
    const GENERATED_ArkUIFileSelectorParamAccessor* (*getFileSelectorParamAccessor)();
    const GENERATED_ArkUIFileSelectorResultAccessor* (*getFileSelectorResultAccessor)();
    const GENERATED_ArkUIFocusAxisEventAccessor* (*getFocusAxisEventAccessor)();
    const GENERATED_ArkUIFocusControllerAccessor* (*getFocusControllerAccessor)();
    const GENERATED_ArkUIFrameNodeAccessor* (*getFrameNodeAccessor)();
    const GENERATED_ArkUIFrictionMotionAccessor* (*getFrictionMotionAccessor)();
    const GENERATED_ArkUIFullScreenExitHandlerAccessor* (*getFullScreenExitHandlerAccessor)();
    const GENERATED_ArkUIGestureAccessor* (*getGestureAccessor)();
    const GENERATED_ArkUIGestureEventAccessor* (*getGestureEventAccessor)();
    const GENERATED_ArkUIGestureGroupInterfaceAccessor* (*getGestureGroupInterfaceAccessor)();
    const GENERATED_ArkUIGestureModifierAccessor* (*getGestureModifierAccessor)();
    const GENERATED_ArkUIGestureRecognizerAccessor* (*getGestureRecognizerAccessor)();
    const GENERATED_ArkUIGestureStyleAccessor* (*getGestureStyleAccessor)();
    const GENERATED_ArkUIGlobalScope_ohos_arkui_componentSnapshotAccessor* (*getGlobalScope_ohos_arkui_componentSnapshotAccessor)();
    const GENERATED_ArkUIGlobalScope_ohos_arkui_performanceMonitorAccessor* (*getGlobalScope_ohos_arkui_performanceMonitorAccessor)();
    const GENERATED_ArkUIGlobalScope_ohos_fontAccessor* (*getGlobalScope_ohos_fontAccessor)();
    const GENERATED_ArkUIGlobalScope_ohos_measure_utilsAccessor* (*getGlobalScope_ohos_measure_utilsAccessor)();
    const GENERATED_ArkUIHierarchicalSymbolEffectAccessor* (*getHierarchicalSymbolEffectAccessor)();
    const GENERATED_ArkUIHoverEventAccessor* (*getHoverEventAccessor)();
    const GENERATED_ArkUIHttpAuthHandlerAccessor* (*getHttpAuthHandlerAccessor)();
    const GENERATED_ArkUIImage_PixelMapAccessor* (*getImage_PixelMapAccessor)();
    const GENERATED_ArkUIImageAnalyzerControllerAccessor* (*getImageAnalyzerControllerAccessor)();
    const GENERATED_ArkUIImageAttachmentAccessor* (*getImageAttachmentAccessor)();
    const GENERATED_ArkUIImageBitmapAccessor* (*getImageBitmapAccessor)();
    const GENERATED_ArkUIImageDataAccessor* (*getImageDataAccessor)();
    const GENERATED_ArkUIIndicatorComponentControllerAccessor* (*getIndicatorComponentControllerAccessor)();
    const GENERATED_ArkUIIUIContextAccessor* (*getIUIContextAccessor)();
    const GENERATED_ArkUIJsGeolocationAccessor* (*getJsGeolocationAccessor)();
    const GENERATED_ArkUIJsResultAccessor* (*getJsResultAccessor)();
    const GENERATED_ArkUIKeyEventAccessor* (*getKeyEventAccessor)();
    const GENERATED_ArkUILayoutableAccessor* (*getLayoutableAccessor)();
    const GENERATED_ArkUILayoutCallbackAccessor* (*getLayoutCallbackAccessor)();
    const GENERATED_ArkUILayoutChildAccessor* (*getLayoutChildAccessor)();
    const GENERATED_ArkUILayoutManagerAccessor* (*getLayoutManagerAccessor)();
    const GENERATED_ArkUILayoutPolicyAccessor* (*getLayoutPolicyAccessor)();
    const GENERATED_ArkUILazyForEachOpsAccessor* (*getLazyForEachOpsAccessor)();
    const GENERATED_ArkUILengthMetricsAccessor* (*getLengthMetricsAccessor)();
    const GENERATED_ArkUILetterSpacingStyleAccessor* (*getLetterSpacingStyleAccessor)();
    const GENERATED_ArkUILevelOrderAccessor* (*getLevelOrderAccessor)();
    const GENERATED_ArkUILifeCycleAccessor* (*getLifeCycleAccessor)();
    const GENERATED_ArkUILinearGradientAccessor* (*getLinearGradientAccessor)();
    const GENERATED_ArkUILinearIndicatorControllerAccessor* (*getLinearIndicatorControllerAccessor)();
    const GENERATED_ArkUILineHeightStyleAccessor* (*getLineHeightStyleAccessor)();
    const GENERATED_ArkUIListScrollerAccessor* (*getListScrollerAccessor)();
    const GENERATED_ArkUILongPressGestureEventAccessor* (*getLongPressGestureEventAccessor)();
    const GENERATED_ArkUILongPressGestureInterfaceAccessor* (*getLongPressGestureInterfaceAccessor)();
    const GENERATED_ArkUILongPressRecognizerAccessor* (*getLongPressRecognizerAccessor)();
    const GENERATED_ArkUIMatrix2DAccessor* (*getMatrix2DAccessor)();
    const GENERATED_ArkUIMatrix4_Matrix4TransitAccessor* (*getMatrix4_Matrix4TransitAccessor)();
    const GENERATED_ArkUIMeasurableAccessor* (*getMeasurableAccessor)();
    const GENERATED_ArkUIMouseEventAccessor* (*getMouseEventAccessor)();
    const GENERATED_ArkUIMutableStyledStringAccessor* (*getMutableStyledStringAccessor)();
    const GENERATED_ArkUINavDestinationContextAccessor* (*getNavDestinationContextAccessor)();
    const GENERATED_ArkUINavExtenderAccessor* (*getNavExtenderAccessor)();
    const GENERATED_ArkUINavigationTransitionProxyAccessor* (*getNavigationTransitionProxyAccessor)();
    const GENERATED_ArkUINavPathInfoAccessor* (*getNavPathInfoAccessor)();
    const GENERATED_ArkUINavPathStackAccessor* (*getNavPathStackAccessor)();
    const GENERATED_ArkUINodeContentAccessor* (*getNodeContentAccessor)();
    const GENERATED_ArkUIOffscreenCanvasAccessor* (*getOffscreenCanvasAccessor)();
    const GENERATED_ArkUIOffscreenCanvasRenderingContext2DAccessor* (*getOffscreenCanvasRenderingContext2DAccessor)();
    const GENERATED_ArkUIPageLifeCycleAccessor* (*getPageLifeCycleAccessor)();
    const GENERATED_ArkUIPanGestureEventAccessor* (*getPanGestureEventAccessor)();
    const GENERATED_ArkUIPanGestureInterfaceAccessor* (*getPanGestureInterfaceAccessor)();
    const GENERATED_ArkUIPanGestureOptionsAccessor* (*getPanGestureOptionsAccessor)();
    const GENERATED_ArkUIPanRecognizerAccessor* (*getPanRecognizerAccessor)();
    const GENERATED_ArkUIParagraphStyleAccessor* (*getParagraphStyleAccessor)();
    const GENERATED_ArkUIPath2DAccessor* (*getPath2DAccessor)();
    const GENERATED_ArkUIPathShapeAccessor* (*getPathShapeAccessor)();
    const GENERATED_ArkUIPatternLockControllerAccessor* (*getPatternLockControllerAccessor)();
    const GENERATED_ArkUIPermissionRequestAccessor* (*getPermissionRequestAccessor)();
    const GENERATED_ArkUIPinchGestureEventAccessor* (*getPinchGestureEventAccessor)();
    const GENERATED_ArkUIPinchGestureInterfaceAccessor* (*getPinchGestureInterfaceAccessor)();
    const GENERATED_ArkUIPinchRecognizerAccessor* (*getPinchRecognizerAccessor)();
    const GENERATED_ArkUIPixelMapMockAccessor* (*getPixelMapMockAccessor)();
    const GENERATED_ArkUIProgressMaskAccessor* (*getProgressMaskAccessor)();
    const GENERATED_ArkUIPromptActionAccessor* (*getPromptActionAccessor)();
    const GENERATED_ArkUIRectShapeAccessor* (*getRectShapeAccessor)();
    const GENERATED_ArkUIRenderingContextSettingsAccessor* (*getRenderingContextSettingsAccessor)();
    const GENERATED_ArkUIRenderNodeAccessor* (*getRenderNodeAccessor)();
    const GENERATED_ArkUIRenderServiceNodeAccessor* (*getRenderServiceNodeAccessor)();
    const GENERATED_ArkUIReplaceSymbolEffectAccessor* (*getReplaceSymbolEffectAccessor)();
    const GENERATED_ArkUIRestrictedWorkerAccessor* (*getRestrictedWorkerAccessor)();
    const GENERATED_ArkUIRichEditorBaseControllerAccessor* (*getRichEditorBaseControllerAccessor)();
    const GENERATED_ArkUIRichEditorControllerAccessor* (*getRichEditorControllerAccessor)();
    const GENERATED_ArkUIRichEditorStyledStringControllerAccessor* (*getRichEditorStyledStringControllerAccessor)();
    const GENERATED_ArkUIRotationGestureAccessor* (*getRotationGestureAccessor)();
    const GENERATED_ArkUIRotationGestureEventAccessor* (*getRotationGestureEventAccessor)();
    const GENERATED_ArkUIRotationRecognizerAccessor* (*getRotationRecognizerAccessor)();
    const GENERATED_ArkUIScaleSymbolEffectAccessor* (*getScaleSymbolEffectAccessor)();
    const GENERATED_ArkUISceneAccessor* (*getSceneAccessor)();
    const GENERATED_ArkUIScreenCaptureHandlerAccessor* (*getScreenCaptureHandlerAccessor)();
    const GENERATED_ArkUIScrollableTargetInfoAccessor* (*getScrollableTargetInfoAccessor)();
    const GENERATED_ArkUIScrollerAccessor* (*getScrollerAccessor)();
    const GENERATED_ArkUIScrollMotionAccessor* (*getScrollMotionAccessor)();
    const GENERATED_ArkUIScrollResultAccessor* (*getScrollResultAccessor)();
    const GENERATED_ArkUISearchControllerAccessor* (*getSearchControllerAccessor)();
    const GENERATED_ArkUISearchOpsAccessor* (*getSearchOpsAccessor)();
    const GENERATED_ArkUIShapeClipAccessor* (*getShapeClipAccessor)();
    const GENERATED_ArkUIShapeMaskAccessor* (*getShapeMaskAccessor)();
    const GENERATED_ArkUISpringMotionAccessor* (*getSpringMotionAccessor)();
    const GENERATED_ArkUISpringPropAccessor* (*getSpringPropAccessor)();
    const GENERATED_ArkUISslErrorHandlerAccessor* (*getSslErrorHandlerAccessor)();
    const GENERATED_ArkUIStateStylesOpsAccessor* (*getStateStylesOpsAccessor)();
    const GENERATED_ArkUIStyledStringAccessor* (*getStyledStringAccessor)();
    const GENERATED_ArkUIStyledStringControllerAccessor* (*getStyledStringControllerAccessor)();
    const GENERATED_ArkUISubmitEventAccessor* (*getSubmitEventAccessor)();
    const GENERATED_ArkUISwipeGestureAccessor* (*getSwipeGestureAccessor)();
    const GENERATED_ArkUISwipeGestureEventAccessor* (*getSwipeGestureEventAccessor)();
    const GENERATED_ArkUISwiperContentTransitionProxyAccessor* (*getSwiperContentTransitionProxyAccessor)();
    const GENERATED_ArkUISwiperControllerAccessor* (*getSwiperControllerAccessor)();
    const GENERATED_ArkUISwipeRecognizerAccessor* (*getSwipeRecognizerAccessor)();
    const GENERATED_ArkUISymbolEffectAccessor* (*getSymbolEffectAccessor)();
    const GENERATED_ArkUISystemOpsAccessor* (*getSystemOpsAccessor)();
    const GENERATED_ArkUITabBarSymbolAccessor* (*getTabBarSymbolAccessor)();
    const GENERATED_ArkUITabContentTransitionProxyAccessor* (*getTabContentTransitionProxyAccessor)();
    const GENERATED_ArkUITabsControllerAccessor* (*getTabsControllerAccessor)();
    const GENERATED_ArkUITapGestureEventAccessor* (*getTapGestureEventAccessor)();
    const GENERATED_ArkUITapGestureInterfaceAccessor* (*getTapGestureInterfaceAccessor)();
    const GENERATED_ArkUITapRecognizerAccessor* (*getTapRecognizerAccessor)();
    const GENERATED_ArkUIText_FontCollectionAccessor* (*getText_FontCollectionAccessor)();
    const GENERATED_ArkUIText_LineTypesetAccessor* (*getText_LineTypesetAccessor)();
    const GENERATED_ArkUIText_ParagraphAccessor* (*getText_ParagraphAccessor)();
    const GENERATED_ArkUIText_ParagraphBuilderAccessor* (*getText_ParagraphBuilderAccessor)();
    const GENERATED_ArkUIText_RunAccessor* (*getText_RunAccessor)();
    const GENERATED_ArkUIText_TextLineAccessor* (*getText_TextLineAccessor)();
    const GENERATED_ArkUITextAreaControllerAccessor* (*getTextAreaControllerAccessor)();
    const GENERATED_ArkUITextBaseControllerAccessor* (*getTextBaseControllerAccessor)();
    const GENERATED_ArkUITextClockControllerAccessor* (*getTextClockControllerAccessor)();
    const GENERATED_ArkUITextContentControllerBaseAccessor* (*getTextContentControllerBaseAccessor)();
    const GENERATED_ArkUITextControllerAccessor* (*getTextControllerAccessor)();
    const GENERATED_ArkUITextEditControllerExAccessor* (*getTextEditControllerExAccessor)();
    const GENERATED_ArkUITextFieldOpsAccessor* (*getTextFieldOpsAccessor)();
    const GENERATED_ArkUITextInputControllerAccessor* (*getTextInputControllerAccessor)();
    const GENERATED_ArkUITextMenuControllerAccessor* (*getTextMenuControllerAccessor)();
    const GENERATED_ArkUITextMenuItemIdAccessor* (*getTextMenuItemIdAccessor)();
    const GENERATED_ArkUITextPickerDialogAccessor* (*getTextPickerDialogAccessor)();
    const GENERATED_ArkUITextShadowStyleAccessor* (*getTextShadowStyleAccessor)();
    const GENERATED_ArkUITextStyleAccessor* (*getTextStyleAccessor)();
    const GENERATED_ArkUITextTimerControllerAccessor* (*getTextTimerControllerAccessor)();
    const GENERATED_ArkUIThemeControlAccessor* (*getThemeControlAccessor)();
    const GENERATED_ArkUITimePickerDialogAccessor* (*getTimePickerDialogAccessor)();
    const GENERATED_ArkUITouchEventAccessor* (*getTouchEventAccessor)();
    const GENERATED_ArkUITransitionEffectAccessor* (*getTransitionEffectAccessor)();
    const GENERATED_ArkUIUICommonEventAccessor* (*getUICommonEventAccessor)();
    const GENERATED_ArkUIUIContextAccessor* (*getUIContextAccessor)();
    const GENERATED_ArkUIUIContextAtomicServiceBarAccessor* (*getUIContextAtomicServiceBarAccessor)();
    const GENERATED_ArkUIUiEffect_VisualEffectAccessor* (*getUiEffect_VisualEffectAccessor)();
    const GENERATED_ArkUIUIExtensionProxyAccessor* (*getUIExtensionProxyAccessor)();
    const GENERATED_ArkUIUnifiedDataChannel_UnifiedDataAccessor* (*getUnifiedDataChannel_UnifiedDataAccessor)();
    const GENERATED_ArkUIUrlStyleAccessor* (*getUrlStyleAccessor)();
    const GENERATED_ArkUIUserDataSpanAccessor* (*getUserDataSpanAccessor)();
    const GENERATED_ArkUIVideoControllerAccessor* (*getVideoControllerAccessor)();
    const GENERATED_ArkUIWaterFlowSectionsAccessor* (*getWaterFlowSectionsAccessor)();
    const GENERATED_ArkUIWebContextMenuParamAccessor* (*getWebContextMenuParamAccessor)();
    const GENERATED_ArkUIWebContextMenuResultAccessor* (*getWebContextMenuResultAccessor)();
    const GENERATED_ArkUIWebCookieAccessor* (*getWebCookieAccessor)();
    const GENERATED_ArkUIWebKeyboardControllerAccessor* (*getWebKeyboardControllerAccessor)();
    const GENERATED_ArkUIWebResourceErrorAccessor* (*getWebResourceErrorAccessor)();
    const GENERATED_ArkUIWebResourceRequestAccessor* (*getWebResourceRequestAccessor)();
    const GENERATED_ArkUIWebResourceResponseAccessor* (*getWebResourceResponseAccessor)();
    const GENERATED_ArkUIWebview_WebviewControllerAccessor* (*getWebview_WebviewControllerAccessor)();
    const GENERATED_ArkUIXComponentControllerAccessor* (*getXComponentControllerAccessor)();
    const GENERATED_ArkUIGlobalScopeAccessor* (*getGlobalScopeAccessor)();
} GENERATED_ArkUIAccessors;

typedef struct GENERATED_ArkUIGraphicsAPI {
    Ark_Int32 version;
} GENERATED_ArkUIGraphicsAPI;

typedef enum GENERATED_Ark_NodeType {
    GENERATED_ARKUI_CUSTOM_NODE,
    GENERATED_ARKUI_ALPHABET_INDEXER,
    GENERATED_ARKUI_ANIMATOR,
    GENERATED_ARKUI_BADGE,
    GENERATED_ARKUI_BASE_SPAN,
    GENERATED_ARKUI_BLANK,
    GENERATED_ARKUI_BUTTON,
    GENERATED_ARKUI_CALENDAR_PICKER,
    GENERATED_ARKUI_CANVAS,
    GENERATED_ARKUI_CHECKBOX,
    GENERATED_ARKUI_CHECKBOX_GROUP,
    GENERATED_ARKUI_CIRCLE,
    GENERATED_ARKUI_COLUMN,
    GENERATED_ARKUI_COLUMN_SPLIT,
    GENERATED_ARKUI_COMMON_METHOD,
    GENERATED_ARKUI_COMMON_SHAPE_METHOD,
    GENERATED_ARKUI_COMPONENT_ROOT,
    GENERATED_ARKUI_CONTAINER_SPAN,
    GENERATED_ARKUI_COUNTER,
    GENERATED_ARKUI_CUSTOM_LAYOUT_ROOT,
    GENERATED_ARKUI_DATA_PANEL,
    GENERATED_ARKUI_DATE_PICKER,
    GENERATED_ARKUI_DIVIDER,
    GENERATED_ARKUI_EFFECT_COMPONENT,
    GENERATED_ARKUI_ELLIPSE,
    GENERATED_ARKUI_EMBEDDED_COMPONENT,
    GENERATED_ARKUI_FLEX,
    GENERATED_ARKUI_FLOW_ITEM,
    GENERATED_ARKUI_FOLDER_STACK,
    GENERATED_ARKUI_FORM_COMPONENT,
    GENERATED_ARKUI_FORM_LINK,
    GENERATED_ARKUI_GAUGE,
    GENERATED_ARKUI_GRID,
    GENERATED_ARKUI_GRID_COL,
    GENERATED_ARKUI_GRID_ITEM,
    GENERATED_ARKUI_GRID_ROW,
    GENERATED_ARKUI_HYPERLINK,
    GENERATED_ARKUI_IMAGE,
    GENERATED_ARKUI_IMAGE_ANIMATOR,
    GENERATED_ARKUI_IMAGE_SPAN,
    GENERATED_ARKUI_INDICATOR_COMPONENT,
    GENERATED_ARKUI_LINE,
    GENERATED_ARKUI_LINEAR_INDICATOR,
    GENERATED_ARKUI_LIST,
    GENERATED_ARKUI_LIST_ITEM,
    GENERATED_ARKUI_LIST_ITEM_GROUP,
    GENERATED_ARKUI_LOADING_PROGRESS,
    GENERATED_ARKUI_MARQUEE,
    GENERATED_ARKUI_MEDIA_CACHED_IMAGE,
    GENERATED_ARKUI_MENU,
    GENERATED_ARKUI_MENU_ITEM,
    GENERATED_ARKUI_MENU_ITEM_GROUP,
    GENERATED_ARKUI_NAV_DESTINATION,
    GENERATED_ARKUI_NAVIGATION,
    GENERATED_ARKUI_NODE_CONTAINER,
    GENERATED_ARKUI_PATH,
    GENERATED_ARKUI_PATTERN_LOCK,
    GENERATED_ARKUI_PLUGIN_COMPONENT,
    GENERATED_ARKUI_POLYGON,
    GENERATED_ARKUI_POLYLINE,
    GENERATED_ARKUI_PROGRESS,
    GENERATED_ARKUI_QRCODE,
    GENERATED_ARKUI_RADIO,
    GENERATED_ARKUI_RATING,
    GENERATED_ARKUI_RECT,
    GENERATED_ARKUI_REFRESH,
    GENERATED_ARKUI_RELATIVE_CONTAINER,
    GENERATED_ARKUI_REMOTE_WINDOW,
    GENERATED_ARKUI_RICH_EDITOR,
    GENERATED_ARKUI_RICH_TEXT,
    GENERATED_ARKUI_ROOT,
    GENERATED_ARKUI_ROOT_SCENE,
    GENERATED_ARKUI_ROW,
    GENERATED_ARKUI_ROW_SPLIT,
    GENERATED_ARKUI_SCREEN,
    GENERATED_ARKUI_SCROLL,
    GENERATED_ARKUI_SCROLL_BAR,
    GENERATED_ARKUI_SCROLLABLE_COMMON_METHOD,
    GENERATED_ARKUI_SEARCH,
    GENERATED_ARKUI_SELECT,
    GENERATED_ARKUI_SHAPE,
    GENERATED_ARKUI_SIDE_BAR_CONTAINER,
    GENERATED_ARKUI_SLIDER,
    GENERATED_ARKUI_SPAN,
    GENERATED_ARKUI_STACK,
    GENERATED_ARKUI_STEPPER,
    GENERATED_ARKUI_STEPPER_ITEM,
    GENERATED_ARKUI_SWIPER,
    GENERATED_ARKUI_SYMBOL_GLYPH,
    GENERATED_ARKUI_SYMBOL_SPAN,
    GENERATED_ARKUI_TAB_CONTENT,
    GENERATED_ARKUI_TABS,
    GENERATED_ARKUI_TEXT,
    GENERATED_ARKUI_TEXT_AREA,
    GENERATED_ARKUI_TEXT_CLOCK,
    GENERATED_ARKUI_TEXT_INPUT,
    GENERATED_ARKUI_TEXT_PICKER,
    GENERATED_ARKUI_TEXT_TIMER,
    GENERATED_ARKUI_TIME_PICKER,
    GENERATED_ARKUI_TOGGLE,
    GENERATED_ARKUI_UIEXTENSION_COMPONENT,
    GENERATED_ARKUI_VIDEO,
    GENERATED_ARKUI_WATER_FLOW,
    GENERATED_ARKUI_WEB,
    GENERATED_ARKUI_WINDOW_SCENE,
    GENERATED_ARKUI_XCOMPONENT
} GENERATED_Ark_NodeType;

typedef enum {
    GENERATED_ARKUI_DIRTY_FLAG_MEASURE = 0b1,
    GENERATED_ARKUI_DIRTY_FLAG_LAYOUT = 0b10,
    // mark the node need to do attribute diff to drive update.
    GENERATED_ARKUI_DIRTY_FLAG_ATTRIBUTE_DIFF = 0b100,
    GENERATED_ARKUI_DIRTY_FLAG_MEASURE_SELF = 0b1000,
    GENERATED_ARKUI_DIRTY_FLAG_MEASURE_SELF_AND_PARENT = 0b10000,
    GENERATED_ARKUI_DIRTY_FLAG_MEASURE_BY_CHILD_REQUEST = 0b100000,
    GENERATED_ARKUI_DIRTY_FLAG_RENDER = 0b1000000,
    GENERATED_ARKUI_DIRTY_FLAG_MEASURE_SELF_AND_CHILD = 0b1000000000,
} GENERATED_ArkUIDirtyFlag;

union GENERATED_Ark_EventCallbackArg {
    Ark_Int32 i32;
    Ark_Int32 u32;
    Ark_Int32 f32;
};

typedef union GENERATED_Ark_EventCallbackArg GENERATED_Ark_EventCallbackArg;

typedef struct GENERATED_Ark_APICallbackMethod {
    Ark_Int32 (*CallInt) (Ark_VMContext vmContext, Ark_Int32 methodId, Ark_Int32 numArgs, GENERATED_Ark_EventCallbackArg* args);
} GENERATED_Ark_APICallbackMethod;

typedef struct GENERATED_ArkUIBasicNodeAPI {
    Ark_Int32 version;

    /// Tree operations.
    Ark_NodeHandle (*createNode)(GENERATED_Ark_NodeType type,
                                 Ark_Int32 id, Ark_Int32 flags);

    Ark_NodeHandle (*getNodeByViewStack)();
    void (*disposeNode)(Ark_NodeHandle node);

    void (*dumpTreeNode)(Ark_NodeHandle node);

    Ark_Int32 (*addChild)(Ark_NodeHandle parent,
                          Ark_NodeHandle child);
    void (*removeChild)(Ark_NodeHandle parent,
                        Ark_NodeHandle child);
    Ark_Int32 (*insertChildAfter)(Ark_NodeHandle parent,
                                  Ark_NodeHandle child, Ark_NodeHandle sibling);
    Ark_Int32 (*insertChildBefore)(Ark_NodeHandle parent,
                                   Ark_NodeHandle child,
                                   Ark_NodeHandle sibling);
    Ark_Int32 (*insertChildAt)(Ark_NodeHandle parent,
                               Ark_NodeHandle child,
                               Ark_Int32 position);

    // Commit attributes updates for node.
    void (*applyModifierFinish)(Ark_NodeHandle nodePtr);
    // the flag can combine different flag like Ark_DIRTY_FLAG_MEASURE | Ark_DIRTY_FLAG_RENDER
    void (*markDirty)(Ark_NodeHandle nodePtr,
                      Ark_UInt32 dirtyFlag);
    Ark_Boolean (*isBuilderNode)(Ark_NodeHandle node);

    Ark_Float32 (*convertLengthMetricsUnit)(Ark_Float32 value,
                                            Ark_Int32 originUnit,
                                            Ark_Int32 targetUnit);
} GENERATED_ArkUIBasicNodeAPI;

typedef void (*Ark_VsyncCallback)(Ark_PipelineContext);

typedef struct GENERATED_ArkUIExtendedNodeAPI {
    Ark_Int32 version;

    Ark_Float32 (*getDensity) (Ark_Int32 deviceId);
    Ark_Float32 (*getFontScale) (Ark_Int32 deviceId);
    Ark_Float32 (*getDesignWidthScale) (Ark_Int32 deviceId);

    // Improve: remove!
    void (*setCallbackMethod)(GENERATED_Ark_APICallbackMethod* method);

    // the custom node is not set in create.
    void (*setCustomMethodFlag)(Ark_NodeHandle node,
                                Ark_Int32 flag);
    Ark_Int32 (*getCustomMethodFlag)(Ark_NodeHandle node);

    // setCustomCallback is without the context
    void (*setCustomCallback) (Ark_VMContext  vmContext,
                               Ark_NodeHandle node,
                               Ark_Int32 callbackId);
    void (*setCustomNodeDestroyCallback)(void (*destroy)(Ark_NodeHandle nodeId));
    // make void instead return type Ark_Int32
    Ark_Int32 (*measureLayoutAndDraw) (Ark_VMContext  vmContext,
                                       Ark_NodeHandle node);
    Ark_Int32 (*measureNode) (Ark_VMContext  vmContext,
                              Ark_NodeHandle node,
                              Ark_Float32* data);
    Ark_Int32 (*layoutNode) (Ark_VMContext  vmContext,
                             Ark_NodeHandle node,
                             Ark_Float32 (*data)[2]);
    Ark_Int32 (*drawNode) (Ark_VMContext  vmContext,
                           Ark_NodeHandle node,
                           Ark_Float32* data);
    void (*setAttachNodePtr) (Ark_NodeHandle node,
                              void* value);
    void* (*getAttachNodePtr) (Ark_NodeHandle node);

    // may be better to use int in px unit
    void (*setMeasureWidth)(Ark_NodeHandle node,
                            Ark_Int32 value);
    Ark_Int32 (*getMeasureWidth)(Ark_NodeHandle node);
    void (*setMeasureHeight)(Ark_NodeHandle node,
                             Ark_Int32 value);
    Ark_Int32 (*getMeasureHeight)(Ark_NodeHandle node);
    void (*setX)(Ark_NodeHandle node, Ark_Int32 value);
    Ark_Int32 (*getX)(Ark_NodeHandle node);
    void (*setY)(Ark_NodeHandle node,
                 Ark_Int32 value);
    Ark_Int32 (*getY)(Ark_NodeHandle node);

    void (*getLayoutConstraint)(Ark_NodeHandle node,
                                Ark_Int32* value);
    void (*setAlignment)(Ark_NodeHandle node,
                         Ark_Int32 value);
    Ark_Int32 (*getAlignment)(Ark_NodeHandle node);

    Ark_Int32 (*indexerChecker) (Ark_VMContext  vmContext,
                                 Ark_NodeHandle node);
    void (*setRangeUpdater)(Ark_NodeHandle node,
                            Ark_Int32 updatedId);
    void (*setLazyItemIndexer) (Ark_VMContext  vmContext,
                                Ark_NodeHandle node,
                                Ark_Int32 indexerId);

    /// Vsync support
    Ark_PipelineContext (*getPipelineContext)(Ark_NodeHandle node);
    void (*setVsyncCallback)(Ark_PipelineContext pipelineContext,
                             Ark_VsyncCallback callback);
    void (*setChildTotalCount)(Ark_NodeHandle node,
                               Ark_Int32 totalCount);

    /// Error reporting.
    void (*showCrash)(Ark_CharPtr message);
} GENERATED_ArkUIExtendedNodeAPI;

/**
 * An API to control an implementation. When making changes modifying binary
 * layout, i.e. adding new events - increase ARKUI_NODE_API_VERSION above for binary
 * layout checks.
 */
typedef struct GENERATED_ArkUIFullNodeAPI {
    Ark_Int32 version;
    const GENERATED_ArkUINodeModifiers* (*getNodeModifiers)();
    const GENERATED_ArkUIAccessors* (*getAccessors)();
    const GENERATED_ArkUIGraphicsAPI* (*getGraphicsAPI)();
} GENERATED_ArkUIFullNodeAPI;

#ifndef GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_GENERIC_SERVICE_API_H
#define GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_GENERIC_SERVICE_API_H
#include <stdint.h>
#define GENERIC_SERVICE_API_VERSION 1
enum GENERIC_SERVICE_APIKind {
    GENERIC_SERVICE_API_KIND = 14,
};

typedef struct ServiceLogger {
    void (*startGroupedLog)(int kind);
    void (*stopGroupedLog)(int kind);
    void (*appendGroupedLog)(int kind, const char* str);
    const char* (*getGroupedLog)(int kind);
    int (*needGroupedLog)(int kind);
} ServiceLogger;

typedef struct GenericServiceAPI {
    int32_t version;
    void (*setLogger)(const ServiceLogger* logger);
} GenericServiceAPI;
#endif
#ifndef GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_ANY_API_H
#define GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_ANY_API_H
#include <stdint.h>
// Improve: remove after migration to OH_AnyAPI to be consistant between arkoala and ohos apis
struct Ark_AnyAPI {
    int32_t version;
};
struct OH_AnyAPI {
    int32_t version;
};
#endif

#ifdef __cplusplus
};
#endif

/* clang-format on */

#endif  // GENERATED_FOUNDATION_ACE_FRAMEWORKS_CORE_INTERFACES_ARKOALA_API_H

