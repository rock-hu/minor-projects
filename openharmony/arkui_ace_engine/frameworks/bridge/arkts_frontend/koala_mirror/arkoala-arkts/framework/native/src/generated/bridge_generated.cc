/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <vector>
#include <string>

#define KOALA_INTEROP_MODULE ArkUIGeneratedNativeModule
#include "common-interop.h"
#include "arkoala_api_generated.h"
#include "Serializers.h"
#include "callbacks.h"

const OH_AnyAPI* GetAnyImpl(int kind, int version, std::string* result = nullptr);

static const GENERATED_ArkUIFullNodeAPI* GetFullImpl() {
    return reinterpret_cast<const GENERATED_ArkUIFullNodeAPI*>(
        GetAnyImpl(static_cast<int>(GENERATED_Ark_APIVariantKind::GENERATED_FULL),
        GENERATED_ARKUI_FULL_API_VERSION, nullptr));
}

static const GENERATED_ArkUINodeModifiers* GetNodeModifiers() {
    return GetFullImpl()->getNodeModifiers();
}

static const GENERATED_ArkUIAccessors* GetAccessors() {
    return GetFullImpl()->getAccessors();
}

Ark_NativePointer impl_AlphabetIndexer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getAlphabetIndexerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(AlphabetIndexer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_AlphabetIndexerInterface_setAlphabetIndexerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AlphabetIndexerOptions options_value = AlphabetIndexerOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAlphabetIndexerOptions(self, static_cast<Ark_AlphabetIndexerOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerInterface_setAlphabetIndexerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupBackground(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupBackground(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupBackground, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupUnselectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupUnselectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupUnselectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupItemBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupItemBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setUsingPopup(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setUsingPopup(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setUsingPopup, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setSelectedFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setSelectedFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupItemFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupItemFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setItemSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Number>(value_value_buf_);
        }
        Opt_Union_String_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setItemSize(self, static_cast<Opt_Union_String_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setItemSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setOnSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerSelectCallback))))};
        }
        Opt_OnAlphabetIndexerSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnSelect(self, static_cast<Opt_OnAlphabetIndexerSelectCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setOnSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setOnRequestPopupData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerRequestPopupDataCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerRequestPopupDataCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerRequestPopupDataCallback))))};
        }
        Opt_OnAlphabetIndexerRequestPopupDataCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnRequestPopupData(self, static_cast<Opt_OnAlphabetIndexerRequestPopupDataCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setOnRequestPopupData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setOnPopupSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerPopupSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerPopupSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerPopupSelectCallback))))};
        }
        Opt_OnAlphabetIndexerPopupSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnPopupSelect(self, static_cast<Opt_OnAlphabetIndexerPopupSelectCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setOnPopupSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelected(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Position_serializer::read(thisDeserializer);
        }
        Opt_Position value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupPosition(self, static_cast<Opt_Position*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setAutoCollapse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAutoCollapse(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setAutoCollapse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupItemBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemBorderRadius(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupItemBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setItemBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setItemBorderRadius(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setItemBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupBackgroundBlurStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupBackgroundBlurStyle(self, static_cast<Opt_BlurStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupBackgroundBlurStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setPopupTitleBackground(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupTitleBackground(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setPopupTitleBackground, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_setAlignStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_IndexerAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_IndexerAlign>(thisDeserializer.readInt32());
        }
        Opt_IndexerAlign value_value = value_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((offset_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 offset_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length offset_value_buf_ = {};
            offset_value_buf_.selector = offset_value_buf__selector;
            if (offset_value_buf__selector == 0) {
                offset_value_buf_.selector = 0;
                offset_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (offset_value_buf__selector == 1) {
                offset_value_buf_.selector = 1;
                offset_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (offset_value_buf__selector == 2) {
                offset_value_buf_.selector = 2;
                offset_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for offset_value_buf_ has to be chosen through deserialisation.");
            }
            offset_value_buf.value = static_cast<Ark_Length>(offset_value_buf_);
        }
        Opt_Length offset_value = offset_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAlignStyle(self, static_cast<Opt_IndexerAlign*>(&value_value), static_cast<Opt_Length*>(&offset_value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_setAlignStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getAlphabetIndexerModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Opt_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Animator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getAnimatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Animator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_AnimatorInterface_setAnimatorOptions(Ark_NativePointer thisPtr, const KStringPtr& value) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getAnimatorModifier()->setAnimatorOptions(self, (const Ark_String*) (&value));
}
KOALA_INTEROP_V2(AnimatorInterface_setAnimatorOptions, Ark_NativePointer, KStringPtr)
void impl_AnimatorAttribute_setState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationStatus value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AnimationStatus>(thisDeserializer.readInt32());
        }
        Opt_AnimationStatus value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setState(self, static_cast<Opt_AnimationStatus*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setDuration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setDuration(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setDuration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setCurve(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_curves_Curve value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_curves_Curve>(thisDeserializer.readInt32());
        }
        Opt_curves_Curve value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setCurve(self, static_cast<Opt_curves_Curve*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setCurve, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setDelay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setDelay(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setDelay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setFillMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FillMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FillMode>(thisDeserializer.readInt32());
        }
        Opt_FillMode value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setFillMode(self, static_cast<Opt_FillMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setFillMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setIterations(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setIterations(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setIterations, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setPlayMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PlayMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_PlayMode>(thisDeserializer.readInt32());
        }
        Opt_PlayMode value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setPlayMode(self, static_cast<Opt_PlayMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setPlayMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setMotion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SpringMotion_FrictionMotion_ScrollMotion value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SpringMotion_FrictionMotion_ScrollMotion value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_SpringMotion>(SpringMotion_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FrictionMotion>(FrictionMotion_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_ScrollMotion>(ScrollMotion_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_SpringMotion_FrictionMotion_ScrollMotion>(value_value_buf_);
        }
        Opt_Union_SpringMotion_FrictionMotion_ScrollMotion value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setMotion(self, static_cast<Opt_Union_SpringMotion_FrictionMotion_ScrollMotion*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setMotion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnPause(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnRepeat(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnCancel(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnFinish(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_setOnFrame(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnFrame(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_setOnFrame, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Badge_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBadgeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Badge_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BadgeInterface_setBadgeOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_BadgeParamWithNumber value_value = BadgeParamWithNumber_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getBadgeModifier()->setBadgeOptions0(self, static_cast<Ark_BadgeParamWithNumber*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(BadgeInterface_setBadgeOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BadgeInterface_setBadgeOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_BadgeParamWithString value_value = BadgeParamWithString_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getBadgeModifier()->setBadgeOptions1(self, static_cast<Ark_BadgeParamWithString*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(BadgeInterface_setBadgeOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Blank_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBlankModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Blank_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BlankInterface_setBlankOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto min_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String min_value_buf = {};
        min_value_buf.tag = min_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((min_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 min_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String min_value_buf_ = {};
            min_value_buf_.selector = min_value_buf__selector;
            if (min_value_buf__selector == 0) {
                min_value_buf_.selector = 0;
                min_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (min_value_buf__selector == 1) {
                min_value_buf_.selector = 1;
                min_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for min_value_buf_ has to be chosen through deserialisation.");
            }
            min_value_buf.value = static_cast<Ark_Union_Number_String>(min_value_buf_);
        }
        Opt_Union_Number_String min_value = min_value_buf;;
        GetNodeModifiers()->getBlankModifier()->setBlankOptions(self, static_cast<Opt_Union_Number_String*>(&min_value));
}
KOALA_INTEROP_DIRECT_V3(BlankInterface_setBlankOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BlankAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getBlankModifier()->setColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(BlankAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Button_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getButtonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Button_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ButtonInterface_setButtonOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getButtonModifier()->setButtonOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(ButtonInterface_setButtonOptions0, Ark_NativePointer)
void impl_ButtonInterface_setButtonOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ButtonOptions options_value = ButtonOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getButtonModifier()->setButtonOptions1(self, static_cast<Ark_ButtonOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonInterface_setButtonOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonInterface_setButtonOptions2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 label_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr label_value_buf = {};
        label_value_buf.selector = label_value_buf_selector;
        if (label_value_buf_selector == 0) {
            label_value_buf.selector = 0;
            label_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (label_value_buf_selector == 1) {
            label_value_buf.selector = 1;
            label_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for label_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr label_value = static_cast<Ark_ResourceStr>(label_value_buf);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ButtonOptions_serializer::read(thisDeserializer);
        }
        Opt_ButtonOptions options_value = options_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setButtonOptions2(self, static_cast<Ark_ResourceStr*>(&label_value), static_cast<Opt_ButtonOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonInterface_setButtonOptions2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ButtonType>(thisDeserializer.readInt32());
        }
        Opt_ButtonType value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setType(self, static_cast<Opt_ButtonType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setStateEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setStateEffect(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setStateEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setButtonStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonStyleMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ButtonStyleMode>(thisDeserializer.readInt32());
        }
        Opt_ButtonStyleMode value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setButtonStyle(self, static_cast<Opt_ButtonStyleMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setButtonStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setControlSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ControlSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ControlSize>(thisDeserializer.readInt32());
        }
        Opt_ControlSize value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setControlSize(self, static_cast<Opt_ControlSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setControlSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setRole(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonRole value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ButtonRole>(thisDeserializer.readInt32());
        }
        Opt_ButtonRole value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setRole(self, static_cast<Opt_ButtonRole*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setRole, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontFamily(self, static_cast<Opt_Union_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setLabelStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonLabelStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ButtonLabelStyle_serializer::read(thisDeserializer);
        }
        Opt_ButtonLabelStyle value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setLabelStyle(self, static_cast<Opt_ButtonLabelStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setLabelStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CalendarPicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCalendarPickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CalendarPicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CalendarPickerInterface_setCalendarPickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = CalendarOptions_serializer::read(thisDeserializer);
        }
        Opt_CalendarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setCalendarPickerOptions(self, static_cast<Opt_CalendarOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerInterface_setCalendarPickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_setTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_setTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setOnChange(self, static_cast<Opt_Callback_Date_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_setMarkToday(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setMarkToday(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_setMarkToday, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_setEdgeAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarAlign alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((alignType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            alignType_value_buf.value = static_cast<Ark_CalendarAlign>(thisDeserializer.readInt32());
        }
        Opt_CalendarAlign alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((offset_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            offset_value_buf.value = Offset_serializer::read(thisDeserializer);
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setEdgeAlign(self, static_cast<Opt_CalendarAlign*>(&alignType_value), static_cast<Opt_Offset*>(&offset_value));
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_setEdgeAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Canvas_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCanvasModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Canvas_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CanvasInterface_setCanvasOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto context_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf = {};
        context_value_buf.tag = context_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((context_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 context_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf_ = {};
            context_value_buf_.selector = context_value_buf__selector;
            if (context_value_buf__selector == 0) {
                context_value_buf_.selector = 0;
                context_value_buf_.value0 = static_cast<Ark_CanvasRenderingContext2D>(CanvasRenderingContext2D_serializer::read(thisDeserializer));
            }
            else if (context_value_buf__selector == 1) {
                context_value_buf_.selector = 1;
                context_value_buf_.value1 = static_cast<Ark_DrawingRenderingContext>(DrawingRenderingContext_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for context_value_buf_ has to be chosen through deserialisation.");
            }
            context_value_buf.value = static_cast<Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext>(context_value_buf_);
        }
        Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value = context_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setCanvasOptions0(self, static_cast<Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext*>(&context_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasInterface_setCanvasOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasInterface_setCanvasOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 context_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf = {};
        context_value_buf.selector = context_value_buf_selector;
        if (context_value_buf_selector == 0) {
            context_value_buf.selector = 0;
            context_value_buf.value0 = static_cast<Ark_CanvasRenderingContext2D>(CanvasRenderingContext2D_serializer::read(thisDeserializer));
        }
        else if (context_value_buf_selector == 1) {
            context_value_buf.selector = 1;
            context_value_buf.value1 = static_cast<Ark_DrawingRenderingContext>(DrawingRenderingContext_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for context_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value = static_cast<Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext>(context_value_buf);;
        Ark_ImageAIOptions imageAIOptions_value = ImageAIOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getCanvasModifier()->setCanvasOptions1(self, static_cast<Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext*>(&context_value), static_cast<Ark_ImageAIOptions*>(&imageAIOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasInterface_setCanvasOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasAttribute_setOnReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setOnReady(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasAttribute_setOnReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasAttribute_setEnableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setEnableAnalyzer(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasAttribute_setEnableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Checkbox_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCheckboxModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Checkbox_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CheckboxInterface_setCheckboxOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckboxOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = CheckboxOptions_serializer::read(thisDeserializer);
        }
        Opt_CheckboxOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setCheckboxOptions(self, static_cast<Opt_CheckboxOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxInterface_setCheckboxOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelect(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setShape(self, static_cast<Opt_CheckBoxShape*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setUnselectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setUnselectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setUnselectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setMark(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MarkStyle_serializer::read(thisDeserializer);
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setMark(self, static_cast<Opt_MarkStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setMark, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxChangeCallback))))};
        }
        Opt_OnCheckboxChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setOnChange(self, static_cast<Opt_OnCheckboxChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_set_onChangeEvent_select(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getCheckboxModifier()->set_onChangeEvent_select(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_set_onChangeEvent_select, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CheckboxGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCheckboxGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CheckboxGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CheckboxGroupInterface_setCheckboxGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckboxGroupOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = CheckboxGroupOptions_serializer::read(thisDeserializer);
        }
        Opt_CheckboxGroupOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setCheckboxGroupOptions(self, static_cast<Opt_CheckboxGroupOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupInterface_setCheckboxGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setSelectAll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectAll(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setSelectAll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setUnselectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setUnselectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setUnselectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setMark(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MarkStyle_serializer::read(thisDeserializer);
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setMark(self, static_cast<Opt_MarkStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setMark, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxGroupChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxGroupChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxGroupChangeCallback))))};
        }
        Opt_OnCheckboxGroupChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setOnChange(self, static_cast<Opt_OnCheckboxGroupChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_setCheckboxShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setCheckboxShape(self, static_cast<Opt_CheckBoxShape*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_setCheckboxShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_set_onChangeEvent_selectAll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean selectAll)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean selectAll)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getCheckboxGroupModifier()->set_onChangeEvent_selectAll(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_set_onChangeEvent_selectAll, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Circle_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCircleModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Circle_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CircleInterface_setCircleOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CircleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = CircleOptions_serializer::read(thisDeserializer);
        }
        Opt_CircleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCircleModifier()->setCircleOptions(self, static_cast<Opt_CircleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CircleInterface_setCircleOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Column_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getColumnModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Column_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ColumnInterface_setColumnOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColumnOptions_ColumnOptionsV2 options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColumnOptions_ColumnOptionsV2 options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = ColumnOptions_serializer::read(thisDeserializer);
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = ColumnOptionsV2_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_ColumnOptions_ColumnOptionsV2>(options_value_buf_);
        }
        Opt_Union_ColumnOptions_ColumnOptionsV2 options_value = options_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setColumnOptions(self, static_cast<Opt_Union_ColumnOptions_ColumnOptionsV2*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnInterface_setColumnOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_setAlignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HorizontalAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_HorizontalAlign>(thisDeserializer.readInt32());
        }
        Opt_HorizontalAlign value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setAlignItems(self, static_cast<Opt_HorizontalAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_setAlignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_setJustifyContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FlexAlign>(thisDeserializer.readInt32());
        }
        Opt_FlexAlign value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setJustifyContent(self, static_cast<Opt_FlexAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_setJustifyContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_setPointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PointLightStyle_serializer::read(thisDeserializer);
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setPointLight(self, static_cast<Opt_PointLightStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_setPointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_setReverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setReverse(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_setReverse, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColumnSplit_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getColumnSplitModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ColumnSplit_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ColumnSplitInterface_setColumnSplitOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getColumnSplitModifier()->setColumnSplitOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ColumnSplitInterface_setColumnSplitOptions, Ark_NativePointer)
void impl_ColumnSplitAttribute_setResizeable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getColumnSplitModifier()->setResizeable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnSplitAttribute_setResizeable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnSplitAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ColumnSplitDividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ColumnSplitDividerStyle_serializer::read(thisDeserializer);
        }
        Opt_ColumnSplitDividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getColumnSplitModifier()->setDivider(self, static_cast<Opt_ColumnSplitDividerStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ColumnSplitAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCommonMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CommonMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CommonMethod_setWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LayoutPolicy>(LayoutPolicy_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setWidth(self, static_cast<Opt_Union_Length_LayoutPolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LayoutPolicy>(LayoutPolicy_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHeight(self, static_cast<Opt_Union_Length_LayoutPolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDrawModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DrawModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_DrawModifier>(DrawModifier_serializer::read(thisDeserializer));
        }
        Opt_DrawModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDrawModifier(self, static_cast<Opt_DrawModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDrawModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setResponseRegion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_Rectangle_Rectangle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_Rectangle_Rectangle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Rectangle value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = Rectangle_serializer::read(thisDeserializer);
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Rectangle_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_Rectangle_Rectangle>(value_value_buf_);
        }
        Opt_Union_Array_Rectangle_Rectangle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setResponseRegion(self, static_cast<Opt_Union_Array_Rectangle_Rectangle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setResponseRegion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMouseResponseRegion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_Rectangle_Rectangle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_Rectangle_Rectangle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Rectangle value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = Rectangle_serializer::read(thisDeserializer);
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Rectangle_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_Rectangle_Rectangle>(value_value_buf_);
        }
        Opt_Union_Array_Rectangle_Rectangle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMouseResponseRegion(self, static_cast<Opt_Union_Array_Rectangle_Rectangle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMouseResponseRegion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SizeOptions_serializer::read(thisDeserializer);
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSize(self, static_cast<Opt_SizeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setConstraintSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ConstraintSizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ConstraintSizeOptions_serializer::read(thisDeserializer);
        }
        Opt_ConstraintSizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setConstraintSize(self, static_cast<Opt_ConstraintSizeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setConstraintSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setHitTestBehavior(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HitTestMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_HitTestMode>(thisDeserializer.readInt32());
        }
        Opt_HitTestMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHitTestBehavior(self, static_cast<Opt_HitTestMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setHitTestBehavior, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnChildTouchTest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Array_TouchTestInfo_TouchResult value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Array_TouchTestInfo_TouchResult)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Array_TouchTestInfo_TouchResult))))};
        }
        Opt_Callback_Array_TouchTestInfo_TouchResult value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnChildTouchTest(self, static_cast<Opt_Callback_Array_TouchTestInfo_TouchResult*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnChildTouchTest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setLayoutWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLayoutWeight(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setLayoutWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setChainWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainWeightOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ChainWeightOptions_serializer::read(thisDeserializer);
        }
        Opt_ChainWeightOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setChainWeight(self, static_cast<Opt_ChainWeightOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setChainWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setPadding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Padding_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedPadding_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPadding(self, static_cast<Opt_Union_Padding_Length_LocalizedPadding*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setPadding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSafeAreaPadding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_LengthMetrics_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_LengthMetrics_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Padding_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LengthMetrics>(LengthMetrics_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedPadding_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_LengthMetrics_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_LengthMetrics_LocalizedPadding value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSafeAreaPadding(self, static_cast<Opt_Union_Padding_LengthMetrics_LocalizedPadding*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSafeAreaPadding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMargin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Margin_Length_LocalizedMargin value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Margin_Length_LocalizedMargin value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Padding_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedPadding_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Margin_Length_LocalizedMargin>(value_value_buf_);
        }
        Opt_Union_Margin_Length_LocalizedMargin value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMargin(self, static_cast<Opt_Union_Margin_Length_LocalizedMargin*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMargin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setPixelRound(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelRoundPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PixelRoundPolicy_serializer::read(thisDeserializer);
        }
        Opt_PixelRoundPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPixelRound(self, static_cast<Opt_PixelRoundPolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setPixelRound, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundImageSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SizeOptions_ImageSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SizeOptions_ImageSize value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = SizeOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ImageSize>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_SizeOptions_ImageSize>(value_value_buf_);
        }
        Opt_Union_SizeOptions_ImageSize value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImageSize(self, static_cast<Opt_Union_SizeOptions_ImageSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundImageSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundImagePosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Alignment value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Position_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Alignment>(value_value_buf_);
        }
        Opt_Union_Position_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImagePosition(self, static_cast<Opt_Union_Position_Alignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundImagePosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BackgroundEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundEffect0(self, static_cast<Opt_BackgroundEffectOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundImageResizable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResizableOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ResizableOptions_serializer::read(thisDeserializer);
        }
        Opt_ResizableOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImageResizable(self, static_cast<Opt_ResizableOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundImageResizable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setForegroundEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ForegroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ForegroundEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_ForegroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundEffect(self, static_cast<Opt_ForegroundEffectOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setForegroundEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setVisualEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_uiEffect_VisualEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_uiEffect_VisualEffect>(uiEffect_VisualEffect_serializer::read(thisDeserializer));
        }
        Opt_uiEffect_VisualEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setVisualEffect(self, static_cast<Opt_uiEffect_VisualEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setVisualEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_uiEffect_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = uiEffect_Filter_serializer::read(thisDeserializer);
        }
        Opt_uiEffect_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundFilter(self, static_cast<Opt_uiEffect_Filter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setForegroundFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_uiEffect_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = uiEffect_Filter_serializer::read(thisDeserializer);
        }
        Opt_uiEffect_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundFilter(self, static_cast<Opt_uiEffect_Filter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setForegroundFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setCompositingFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_uiEffect_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = uiEffect_Filter_serializer::read(thisDeserializer);
        }
        Opt_uiEffect_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setCompositingFilter(self, static_cast<Opt_uiEffect_Filter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setCompositingFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOpacity(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorder(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BorderOptions_serializer::read(thisDeserializer);
        }
        Opt_BorderOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorder(self, static_cast<Opt_BorderOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorder, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorderStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BorderStyle_EdgeStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BorderStyle_EdgeStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_BorderStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeStyles_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_BorderStyle_EdgeStyles>(value_value_buf_);
        }
        Opt_Union_BorderStyle_EdgeStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderStyle(self, static_cast<Opt_Union_BorderStyle_EdgeStyles*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorderStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeWidths_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdgeWidths_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths>(value_value_buf_);
        }
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderWidth(self, static_cast<Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeColors_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdgeColors_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderColor(self, static_cast<Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = BorderRadiuses_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedBorderRadiuses_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderRadius(self, static_cast<Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBorderImage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderImageOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BorderImageOption_serializer::read(thisDeserializer);
        }
        Opt_BorderImageOption value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderImage(self, static_cast<Opt_BorderImageOption*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBorderImage, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOutline(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OutlineOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = OutlineOptions_serializer::read(thisDeserializer);
        }
        Opt_OutlineOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutline(self, static_cast<Opt_OutlineOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOutline, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOutlineStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_OutlineStyle_EdgeOutlineStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_OutlineStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeOutlineStyles_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_OutlineStyle_EdgeOutlineStyles>(value_value_buf_);
        }
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineStyle(self, static_cast<Opt_Union_OutlineStyle_EdgeOutlineStyles*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOutlineStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOutlineWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_EdgeOutlineWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_EdgeOutlineWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Dimension value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Dimension>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeOutlineWidths_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_EdgeOutlineWidths>(value_value_buf_);
        }
        Opt_Union_Dimension_EdgeOutlineWidths value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineWidth(self, static_cast<Opt_Union_Dimension_EdgeOutlineWidths*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOutlineWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOutlineColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeColors_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdgeColors_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineColor(self, static_cast<Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOutlineColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOutlineRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OutlineRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OutlineRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Dimension value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Dimension>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = OutlineRadiuses_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OutlineRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_OutlineRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineRadius(self, static_cast<Opt_Union_Dimension_OutlineRadiuses*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOutlineRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setForegroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_ColoringStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_ColoringStrategy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ColoringStrategy>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_ColoringStrategy>(value_value_buf_);
        }
        Opt_Union_ResourceColor_ColoringStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundColor(self, static_cast<Opt_Union_ResourceColor_ColoringStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setForegroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnClick0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnClick0(self, static_cast<Opt_Callback_ClickEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnClick0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_HoverEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_HoverEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_HoverEvent_Void))))};
        }
        Opt_Callback_Boolean_HoverEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnHover(self, static_cast<Opt_Callback_Boolean_HoverEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnHoverMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_HoverEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_HoverEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_HoverEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_HoverEvent_Void))))};
        }
        Opt_Callback_HoverEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnHoverMove(self, static_cast<Opt_Callback_HoverEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnHoverMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAccessibilityHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AccessibilityCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AccessibilityCallback))))};
        }
        Opt_AccessibilityCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAccessibilityHover(self, static_cast<Opt_AccessibilityCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAccessibilityHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setHoverEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HoverEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_HoverEffect>(thisDeserializer.readInt32());
        }
        Opt_HoverEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHoverEffect(self, static_cast<Opt_HoverEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setHoverEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnMouse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MouseEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MouseEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MouseEvent_Void))))};
        }
        Opt_Callback_MouseEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnMouse(self, static_cast<Opt_Callback_MouseEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnMouse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_Void))))};
        }
        Opt_Callback_TouchEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnTouch(self, static_cast<Opt_Callback_TouchEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnKeyEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Void))))};
        }
        Opt_Callback_KeyEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyEvent(self, static_cast<Opt_Callback_KeyEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnKeyEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDigitalCrown(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CrownEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CrownEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CrownEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CrownEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CrownEvent_Void))))};
        }
        Opt_Callback_CrownEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDigitalCrown(self, static_cast<Opt_Callback_CrownEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDigitalCrown, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnKeyPreIme(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyPreIme(self, static_cast<Opt_Callback_KeyEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnKeyPreIme, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnKeyEventDispatch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyEventDispatch(self, static_cast<Opt_Callback_KeyEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnKeyEventDispatch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnFocusAxisEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FocusAxisEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FocusAxisEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FocusAxisEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FocusAxisEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FocusAxisEvent_Void))))};
        }
        Opt_Callback_FocusAxisEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnFocusAxisEvent(self, static_cast<Opt_Callback_FocusAxisEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnFocusAxisEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAxisEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_AxisEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_AxisEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_AxisEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AxisEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_AxisEvent_Void))))};
        }
        Opt_Callback_AxisEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAxisEvent(self, static_cast<Opt_Callback_AxisEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAxisEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFocusable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFocusable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setNextFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusMovement value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = FocusMovement_serializer::read(thisDeserializer);
        }
        Opt_FocusMovement value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setNextFocus(self, static_cast<Opt_FocusMovement*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setNextFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTabStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTabStop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTabStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnFocus(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnBlur(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTabIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTabIndex(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTabIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDefaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDefaultFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDefaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGroupDefaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGroupDefaultFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGroupDefaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFocusOnTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusOnTouch(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFocusOnTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFocusBox(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusBoxStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = FocusBoxStyle_serializer::read(thisDeserializer);
        }
        Opt_FocusBoxStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusBox(self, static_cast<Opt_FocusBoxStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFocusBox, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimateParam value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = AnimateParam_serializer::read(thisDeserializer);
        }
        Opt_AnimateParam value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAnimation(self, static_cast<Opt_AnimateParam*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTransition0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransitionEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TransitionEffect>(TransitionEffect_serializer::read(thisDeserializer));
        }
        Opt_TransitionEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransition0(self, static_cast<Opt_TransitionEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTransition0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMotionBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MotionBlurOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MotionBlurOptions_serializer::read(thisDeserializer);
        }
        Opt_MotionBlurOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMotionBlur(self, static_cast<Opt_MotionBlurOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMotionBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBrightness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBrightness(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBrightness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setContrast(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setContrast(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setContrast, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGrayscale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGrayscale(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGrayscale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setColorBlend(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_String_Resource>(value_value_buf_);
        }
        Opt_Union_Color_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setColorBlend(self, static_cast<Opt_Union_Color_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setColorBlend, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSaturate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSaturate(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSaturate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSepia(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSepia(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSepia, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setInvert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_InvertOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_InvertOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = InvertOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_InvertOptions>(value_value_buf_);
        }
        Opt_Union_Number_InvertOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setInvert(self, static_cast<Opt_Union_Number_InvertOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setInvert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setHueRotate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHueRotate(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setHueRotate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setUseShadowBatching(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseShadowBatching(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setUseShadowBatching, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setUseEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseEffect0(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setUseEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setRenderGroup(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderGroup(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setRenderGroup, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFreeze(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFreeze(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFreeze, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTranslate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TranslateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TranslateOptions_serializer::read(thisDeserializer);
        }
        Opt_TranslateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTranslate(self, static_cast<Opt_TranslateOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTranslate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScaleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ScaleOptions_serializer::read(thisDeserializer);
        }
        Opt_ScaleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setScale(self, static_cast<Opt_ScaleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setRotate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RotateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RotateOptions_serializer::read(thisDeserializer);
        }
        Opt_RotateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRotate(self, static_cast<Opt_RotateOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setRotate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTransform(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransform(self, static_cast<Opt_Object*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTransform, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAppear(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDisAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDisAppear(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDisAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAttach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAttach(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDetach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDetach(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAreaChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Area_Area_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Area_Area_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Area_Area_Void))))};
        }
        Opt_Callback_Area_Area_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAreaChange(self, static_cast<Opt_Callback_Area_Area_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAreaChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setVisibility(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Visibility value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Visibility>(thisDeserializer.readInt32());
        }
        Opt_Visibility value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setVisibility(self, static_cast<Opt_Visibility*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setVisibility, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFlexGrow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexGrow(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFlexGrow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFlexShrink(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexShrink(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFlexShrink, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFlexBasis(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexBasis(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFlexBasis, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAlignSelf(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignSelf(self, static_cast<Opt_ItemAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAlignSelf, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDisplayPriority(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDisplayPriority(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDisplayPriority, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setZIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setZIndex(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setZIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Direction value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Direction>(thisDeserializer.readInt32());
        }
        Opt_Direction value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDirection(self, static_cast<Opt_Direction*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlign(self, static_cast<Opt_Alignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Edges_LocalizedEdges value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Edges_LocalizedEdges value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Position_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Edges_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdges_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Edges_LocalizedEdges>(value_value_buf_);
        }
        Opt_Union_Position_Edges_LocalizedEdges value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPosition(self, static_cast<Opt_Union_Position_Edges_LocalizedEdges*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMarkAnchor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_LocalizedPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_LocalizedPosition value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Position_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = LocalizedPosition_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_LocalizedPosition>(value_value_buf_);
        }
        Opt_Union_Position_LocalizedPosition value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMarkAnchor(self, static_cast<Opt_Union_Position_LocalizedPosition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMarkAnchor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Edges_LocalizedEdges value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Edges_LocalizedEdges value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Position_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Edges_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdges_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Edges_LocalizedEdges>(value_value_buf_);
        }
        Opt_Union_Position_Edges_LocalizedEdges value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOffset(self, static_cast<Opt_Union_Position_Edges_LocalizedEdges*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setEnabled(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setEnabled(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setEnabled, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAlignRules0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AlignRuleOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = AlignRuleOption_serializer::read(thisDeserializer);
        }
        Opt_AlignRuleOption value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignRules0(self, static_cast<Opt_AlignRuleOption*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAlignRules0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAlignRules1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LocalizedAlignRuleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = LocalizedAlignRuleOptions_serializer::read(thisDeserializer);
        }
        Opt_LocalizedAlignRuleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignRules1(self, static_cast<Opt_LocalizedAlignRuleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAlignRules1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAspectRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAspectRatio(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAspectRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setClickEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ClickEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ClickEffect_serializer::read(thisDeserializer);
        }
        Opt_ClickEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClickEffect(self, static_cast<Opt_ClickEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setClickEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_CommonMethod_onDragStart value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_CommonMethod_onDragStart)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_CommonMethod_onDragStart))))};
        }
        Opt_Type_CommonMethod_onDragStart value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragStart(self, static_cast<Opt_Type_CommonMethod_onDragStart*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_Opt_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_Opt_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_Opt_String_Void))))};
        }
        Opt_Callback_DragEvent_Opt_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragEnter(self, static_cast<Opt_Callback_DragEvent_Opt_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_Opt_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_Opt_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_Opt_String_Void))))};
        }
        Opt_Callback_DragEvent_Opt_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragMove(self, static_cast<Opt_Callback_DragEvent_Opt_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_Opt_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_Opt_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_Opt_String_Void))))};
        }
        Opt_Callback_DragEvent_Opt_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragLeave(self, static_cast<Opt_Callback_DragEvent_Opt_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDrop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_Opt_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_Opt_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_Opt_String_Void))))};
        }
        Opt_Callback_DragEvent_Opt_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDrop0(self, static_cast<Opt_Callback_DragEvent_Opt_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDrop0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDragEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_Opt_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_Opt_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_Opt_String_Void))))};
        }
        Opt_Callback_DragEvent_Opt_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragEnd(self, static_cast<Opt_Callback_DragEvent_Opt_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDragEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAllowDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_uniformTypeDescriptor_UniformDataType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_uniformTypeDescriptor_UniformDataType value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_uniformTypeDescriptor_UniformDataType>(thisDeserializer.readInt32());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_uniformTypeDescriptor_UniformDataType value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAllowDrop(self, static_cast<Opt_Array_uniformTypeDescriptor_UniformDataType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAllowDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDraggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDraggable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDraggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDragPreview0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CustomBuilder_DragItemInfo_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CustomBuilder_DragItemInfo_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = DragItemInfo_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CustomBuilder_DragItemInfo_String>(value_value_buf_);
        }
        Opt_Union_CustomBuilder_DragItemInfo_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreview0(self, static_cast<Opt_Union_CustomBuilder_DragItemInfo_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDragPreview0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnPreDrag(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PreDragStatus_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_PreDragStatus value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PreDragStatus_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_PreDragStatus value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PreDragStatus_Void))))};
        }
        Opt_Callback_PreDragStatus_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnPreDrag(self, static_cast<Opt_Callback_PreDragStatus_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnPreDrag, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setLinearGradient(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = LinearGradientOptions_serializer::read(thisDeserializer);
        }
        Opt_LinearGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradient(self, static_cast<Opt_LinearGradientOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setLinearGradient, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSweepGradient(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SweepGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SweepGradientOptions_serializer::read(thisDeserializer);
        }
        Opt_SweepGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSweepGradient(self, static_cast<Opt_SweepGradientOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSweepGradient, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setRadialGradient(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RadialGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RadialGradientOptions_serializer::read(thisDeserializer);
        }
        Opt_RadialGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRadialGradient(self, static_cast<Opt_RadialGradientOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setRadialGradient, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMotionPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MotionPathOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MotionPathOptions_serializer::read(thisDeserializer);
        }
        Opt_MotionPathOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMotionPath(self, static_cast<Opt_MotionPathOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMotionPath, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_ShadowStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_ShadowStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ShadowOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ShadowStyle>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_ShadowStyle>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_ShadowStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setShadow(self, static_cast<Opt_Union_ShadowOptions_ShadowStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClip(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setClip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setClipShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(CircleShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(EllipseShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(PathShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(RectShape_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClipShape(self, static_cast<Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setClipShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ProgressMask value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ProgressMask>(ProgressMask_serializer::read(thisDeserializer));
        }
        Opt_ProgressMask value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMask(self, static_cast<Opt_ProgressMask*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMask, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMaskShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(CircleShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(EllipseShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(PathShape_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(RectShape_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMaskShape(self, static_cast<Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMaskShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setKey(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setKey(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setKey, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setId(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGeometryTransition0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGeometryTransition0(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGeometryTransition0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setStateStyles(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StateStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = StateStyles_serializer::read(thisDeserializer);
        }
        Opt_StateStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setStateStyles(self, static_cast<Opt_StateStyles*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setStateStyles, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setRestoreId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRestoreId(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setRestoreId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSphericalEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSphericalEffect(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSphericalEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setLightUpEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLightUpEffect(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setLightUpEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setPixelStretchEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelStretchEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PixelStretchEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_PixelStretchEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPixelStretchEffect(self, static_cast<Opt_PixelStretchEffectOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setPixelStretchEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityGroup0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityGroup0(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityGroup0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityText0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityText0(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityText0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityNextFocusId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityNextFocusId(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityNextFocusId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityDefaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDefaultFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityDefaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityUseSamePage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilitySamePageMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AccessibilitySamePageMode>(thisDeserializer.readInt32());
        }
        Opt_AccessibilitySamePageMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityUseSamePage(self, static_cast<Opt_AccessibilitySamePageMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityUseSamePage, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityScrollTriggerable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityScrollTriggerable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityScrollTriggerable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityText1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Resource_serializer::read(thisDeserializer);
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityText1(self, static_cast<Opt_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityText1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityRole(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityRoleType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AccessibilityRoleType>(thisDeserializer.readInt32());
        }
        Opt_AccessibilityRoleType value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityRole(self, static_cast<Opt_AccessibilityRoleType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityRole, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnAccessibilityFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityFocusCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isFocus)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AccessibilityFocusCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isFocus)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AccessibilityFocusCallback))))};
        }
        Opt_AccessibilityFocusCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAccessibilityFocus(self, static_cast<Opt_AccessibilityFocusCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnAccessibilityFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityTextHint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityTextHint(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityTextHint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityDescription0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDescription0(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityDescription0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityDescription1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Resource_serializer::read(thisDeserializer);
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDescription1(self, static_cast<Opt_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityDescription1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityLevel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityLevel(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityLevel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityVirtualNode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityVirtualNode(self, static_cast<Opt_CustomNodeBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityVirtualNode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityChecked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityChecked(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityChecked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilitySelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilitySelected(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilitySelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setObscured(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ObscuredReasons value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ObscuredReasons value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ObscuredReasons>(thisDeserializer.readInt32());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ObscuredReasons value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setObscured(self, static_cast<Opt_Array_ObscuredReasons*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setObscured, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setReuseId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setReuseId(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setReuseId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setReuse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ReuseOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ReuseOptions_serializer::read(thisDeserializer);
        }
        Opt_ReuseOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setReuse(self, static_cast<Opt_ReuseOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setReuse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setRenderFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_RenderFit>(thisDeserializer.readInt32());
        }
        Opt_RenderFit value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderFit(self, static_cast<Opt_RenderFit*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setRenderFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGestureModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_GestureModifier>(GestureModifier_serializer::read(thisDeserializer));
        }
        Opt_GestureModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGestureModifier(self, static_cast<Opt_GestureModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGestureModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundBrightness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBrightnessOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BackgroundBrightnessOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundBrightnessOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBrightness(self, static_cast<Opt_BackgroundBrightnessOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundBrightness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnGestureJudgeBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult))))};
        }
        Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureJudgeBegin(self, static_cast<Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnGestureJudgeBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnGestureRecognizerJudgeBegin0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureRecognizerJudgeBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GestureRecognizerJudgeBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GestureRecognizerJudgeBeginCallback))))};
        }
        Opt_GestureRecognizerJudgeBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureRecognizerJudgeBegin0(self, static_cast<Opt_GestureRecognizerJudgeBeginCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnGestureRecognizerJudgeBegin0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setShouldBuiltInRecognizerParallelWith(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShouldBuiltInRecognizerParallelWithCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ShouldBuiltInRecognizerParallelWithCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ShouldBuiltInRecognizerParallelWithCallback))))};
        }
        Opt_ShouldBuiltInRecognizerParallelWithCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setShouldBuiltInRecognizerParallelWith(self, static_cast<Opt_ShouldBuiltInRecognizerParallelWithCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setShouldBuiltInRecognizerParallelWith, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setMonopolizeEvents(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMonopolizeEvents(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setMonopolizeEvents, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnTouchIntercept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_HitTestMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent value0, const Callback_HitTestMode_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_HitTestMode)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent value0, const Callback_HitTestMode_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_HitTestMode))))};
        }
        Opt_Callback_TouchEvent_HitTestMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnTouchIntercept(self, static_cast<Opt_Callback_TouchEvent_HitTestMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnTouchIntercept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnSizeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SizeChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SizeChangeCallback))))};
        }
        Opt_SizeChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnSizeChange(self, static_cast<Opt_SizeChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnSizeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityFocusDrawLevel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusDrawLevel value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FocusDrawLevel>(thisDeserializer.readInt32());
        }
        Opt_FocusDrawLevel value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityFocusDrawLevel(self, static_cast<Opt_FocusDrawLevel*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityFocusDrawLevel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setCustomProperty(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto name_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String name_value_buf = {};
        name_value_buf.tag = name_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((name_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            name_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String name_value = name_value_buf;;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setCustomProperty(self, static_cast<Opt_String*>(&name_value), static_cast<Opt_Object*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setCustomProperty, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setExpandSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((types_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_SafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_SafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_SafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((edges_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_SafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_SafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_SafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setExpandSafeArea(self, static_cast<Opt_Array_SafeAreaType*>(&types_value), static_cast<Opt_Array_SafeAreaEdge*>(&edges_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setExpandSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackground(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((builder_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BackgroundOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackground(self, static_cast<Opt_CustomNodeBuilder*>(&builder_value), static_cast<Opt_BackgroundOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackground, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundImage0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto src_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap src_value_buf = {};
        src_value_buf.tag = src_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((src_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 src_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap src_value_buf_ = {};
            src_value_buf_.selector = src_value_buf__selector;
            if (src_value_buf__selector == 0) {
                src_value_buf_.selector = 0;
                const Ark_Int8 src_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr src_value_buf__u = {};
                src_value_buf__u.selector = src_value_buf__u_selector;
                if (src_value_buf__u_selector == 0) {
                    src_value_buf__u.selector = 0;
                    src_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (src_value_buf__u_selector == 1) {
                    src_value_buf__u.selector = 1;
                    src_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for src_value_buf__u has to be chosen through deserialisation.");
                }
                src_value_buf_.value0 = static_cast<Ark_ResourceStr>(src_value_buf__u);
            }
            else if (src_value_buf__selector == 1) {
                src_value_buf_.selector = 1;
                src_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_ has to be chosen through deserialisation.");
            }
            src_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap>(src_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap src_value = src_value_buf;;
        const auto repeat_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRepeat repeat_value_buf = {};
        repeat_value_buf.tag = repeat_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((repeat_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            repeat_value_buf.value = static_cast<Ark_ImageRepeat>(thisDeserializer.readInt32());
        }
        Opt_ImageRepeat repeat_value = repeat_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImage0(self, static_cast<Opt_Union_ResourceStr_PixelMap*>(&src_value), static_cast<Opt_ImageRepeat*>(&repeat_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundImage0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundImage1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto src_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap src_value_buf = {};
        src_value_buf.tag = src_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((src_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 src_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap src_value_buf_ = {};
            src_value_buf_.selector = src_value_buf__selector;
            if (src_value_buf__selector == 0) {
                src_value_buf_.selector = 0;
                const Ark_Int8 src_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr src_value_buf__u = {};
                src_value_buf__u.selector = src_value_buf__u_selector;
                if (src_value_buf__u_selector == 0) {
                    src_value_buf__u.selector = 0;
                    src_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (src_value_buf__u_selector == 1) {
                    src_value_buf__u.selector = 1;
                    src_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for src_value_buf__u has to be chosen through deserialisation.");
                }
                src_value_buf_.value0 = static_cast<Ark_ResourceStr>(src_value_buf__u);
            }
            else if (src_value_buf__selector == 1) {
                src_value_buf_.selector = 1;
                src_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_ has to be chosen through deserialisation.");
            }
            src_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap>(src_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap src_value = src_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundImageOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BackgroundImageOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundImageOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImage1(self, static_cast<Opt_Union_ResourceStr_PixelMap*>(&src_value), static_cast<Opt_BackgroundImageOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundImage1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundBlurStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((style_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BackgroundBlurStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sysOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sysOptions_value_buf.value = SystemAdaptiveOptions_serializer::read(thisDeserializer);
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBlurStyle(self, static_cast<Opt_BlurStyle*>(&style_value), static_cast<Opt_BackgroundBlurStyleOptions*>(&options_value), static_cast<Opt_SystemAdaptiveOptions*>(&sysOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundBlurStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackgroundEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BackgroundEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundEffectOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sysOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sysOptions_value_buf.value = SystemAdaptiveOptions_serializer::read(thisDeserializer);
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundEffect1(self, static_cast<Opt_BackgroundEffectOptions*>(&options_value), static_cast<Opt_SystemAdaptiveOptions*>(&sysOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackgroundEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setForegroundBlurStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((style_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ForegroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ForegroundBlurStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_ForegroundBlurStyleOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sysOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sysOptions_value_buf.value = SystemAdaptiveOptions_serializer::read(thisDeserializer);
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundBlurStyle(self, static_cast<Opt_BlurStyle*>(&style_value), static_cast<Opt_ForegroundBlurStyleOptions*>(&options_value), static_cast<Opt_SystemAdaptiveOptions*>(&sysOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setForegroundBlurStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnClick1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((event_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void event_value = event_value_buf;;
        const auto distanceThreshold_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number distanceThreshold_value_buf = {};
        distanceThreshold_value_buf.tag = distanceThreshold_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((distanceThreshold_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            distanceThreshold_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number distanceThreshold_value = distanceThreshold_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnClick1(self, static_cast<Opt_Callback_ClickEvent_Void*>(&event_value), static_cast<Opt_Number*>(&distanceThreshold_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnClick1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFocusScopeId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((id_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto isGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isGroup_value_buf = {};
        isGroup_value_buf.tag = isGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isGroup_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isGroup_value = isGroup_value_buf;;
        const auto arrowStepOut_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean arrowStepOut_value_buf = {};
        arrowStepOut_value_buf.tag = arrowStepOut_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((arrowStepOut_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            arrowStepOut_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean arrowStepOut_value = arrowStepOut_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusScopeId(self, static_cast<Opt_String*>(&id_value), static_cast<Opt_Boolean*>(&isGroup_value), static_cast<Opt_Boolean*>(&arrowStepOut_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFocusScopeId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setFocusScopePriority(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scopeId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String scopeId_value_buf = {};
        scopeId_value_buf.tag = scopeId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scopeId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scopeId_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String scopeId_value = scopeId_value_buf;;
        const auto priority_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusPriority priority_value_buf = {};
        priority_value_buf.tag = priority_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((priority_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            priority_value_buf.value = static_cast<Ark_FocusPriority>(thisDeserializer.readInt32());
        }
        Opt_FocusPriority priority_value = priority_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusScopePriority(self, static_cast<Opt_String*>(&scopeId_value), static_cast<Opt_FocusPriority*>(&priority_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setFocusScopePriority, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setTransition1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto effect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransitionEffect effect_value_buf = {};
        effect_value_buf.tag = effect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((effect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            effect_value_buf.value = static_cast<Ark_TransitionEffect>(TransitionEffect_serializer::read(thisDeserializer));
        }
        Opt_TransitionEffect effect_value = effect_value_buf;;
        const auto onFinish_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransitionFinishCallback onFinish_value_buf = {};
        onFinish_value_buf.tag = onFinish_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onFinish_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onFinish_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean transitionIn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TransitionFinishCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean transitionIn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TransitionFinishCallback))))};
        }
        Opt_TransitionFinishCallback onFinish_value = onFinish_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransition1(self, static_cast<Opt_TransitionEffect*>(&effect_value), static_cast<Opt_TransitionFinishCallback*>(&onFinish_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setTransition1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((gesture_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_Gesture>(Gesture_serializer::read(thisDeserializer));
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((mask_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGesture(self, static_cast<Opt_GestureType*>(&gesture_value), static_cast<Opt_GestureMask*>(&mask_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setPriorityGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((gesture_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_Gesture>(Gesture_serializer::read(thisDeserializer));
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((mask_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPriorityGesture(self, static_cast<Opt_GestureType*>(&gesture_value), static_cast<Opt_GestureMask*>(&mask_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setPriorityGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setParallelGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((gesture_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_Gesture>(Gesture_serializer::read(thisDeserializer));
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((mask_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setParallelGesture(self, static_cast<Opt_GestureType*>(&gesture_value), static_cast<Opt_GestureMask*>(&mask_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setParallelGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto blurRadius_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number blurRadius_value_buf = {};
        blurRadius_value_buf.tag = blurRadius_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((blurRadius_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            blurRadius_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number blurRadius_value = blurRadius_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BlurOptions_serializer::read(thisDeserializer);
        }
        Opt_BlurOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sysOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sysOptions_value_buf.value = SystemAdaptiveOptions_serializer::read(thisDeserializer);
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlur(self, static_cast<Opt_Number*>(&blurRadius_value), static_cast<Opt_BlurOptions*>(&options_value), static_cast<Opt_SystemAdaptiveOptions*>(&sysOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setLinearGradientBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientBlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = LinearGradientBlurOptions_serializer::read(thisDeserializer);
        }
        Opt_LinearGradientBlurOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradientBlur(self, static_cast<Opt_Number*>(&value_value), static_cast<Opt_LinearGradientBlurOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setLinearGradientBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSystemBarEffect(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getCommonMethodModifier()->setSystemBarEffect(self);
}
KOALA_INTEROP_DIRECT_V1(CommonMethod_setSystemBarEffect, Ark_NativePointer)
void impl_CommonMethod_setUseEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto useEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useEffect_value_buf = {};
        useEffect_value_buf.tag = useEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((useEffect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            useEffect_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useEffect_value = useEffect_value_buf;;
        const auto effectType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectType effectType_value_buf = {};
        effectType_value_buf.tag = effectType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((effectType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            effectType_value_buf.value = static_cast<Ark_EffectType>(thisDeserializer.readInt32());
        }
        Opt_EffectType effectType_value = effectType_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseEffect1(self, static_cast<Opt_Boolean*>(&useEffect_value), static_cast<Opt_EffectType*>(&effectType_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setUseEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBackdropBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto radius_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number radius_value_buf = {};
        radius_value_buf.tag = radius_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((radius_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            radius_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number radius_value = radius_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BlurOptions_serializer::read(thisDeserializer);
        }
        Opt_BlurOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sysOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sysOptions_value_buf.value = SystemAdaptiveOptions_serializer::read(thisDeserializer);
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackdropBlur(self, static_cast<Opt_Number*>(&radius_value), static_cast<Opt_BlurOptions*>(&options_value), static_cast<Opt_SystemAdaptiveOptions*>(&sysOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBackdropBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setSharedTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((id_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_sharedTransitionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = sharedTransitionOptions_serializer::read(thisDeserializer);
        }
        Opt_sharedTransitionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSharedTransition(self, static_cast<Opt_String*>(&id_value), static_cast<Opt_sharedTransitionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setSharedTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setChainMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((direction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            direction_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis direction_value = direction_value_buf;;
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((style_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            style_value_buf.value = static_cast<Ark_ChainStyle>(thisDeserializer.readInt32());
        }
        Opt_ChainStyle style_value = style_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setChainMode(self, static_cast<Opt_Axis*>(&direction_value), static_cast<Opt_ChainStyle*>(&style_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setChainMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnDrop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto eventCallback_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnDragEventCallback eventCallback_value_buf = {};
        eventCallback_value_buf.tag = eventCallback_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((eventCallback_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            eventCallback_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnDragEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnDragEventCallback))))};
        }
        Opt_OnDragEventCallback eventCallback_value = eventCallback_value_buf;;
        const auto dropOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DropOptions dropOptions_value_buf = {};
        dropOptions_value_buf.tag = dropOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((dropOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            dropOptions_value_buf.value = DropOptions_serializer::read(thisDeserializer);
        }
        Opt_DropOptions dropOptions_value = dropOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDrop1(self, static_cast<Opt_OnDragEventCallback*>(&eventCallback_value), static_cast<Opt_DropOptions*>(&dropOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnDrop1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDragPreview1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto preview_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CustomBuilder_DragItemInfo_String preview_value_buf = {};
        preview_value_buf.tag = preview_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((preview_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 preview_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CustomBuilder_DragItemInfo_String preview_value_buf_ = {};
            preview_value_buf_.selector = preview_value_buf__selector;
            if (preview_value_buf__selector == 0) {
                preview_value_buf_.selector = 0;
                preview_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (preview_value_buf__selector == 1) {
                preview_value_buf_.selector = 1;
                preview_value_buf_.value1 = DragItemInfo_serializer::read(thisDeserializer);
            }
            else if (preview_value_buf__selector == 2) {
                preview_value_buf_.selector = 2;
                preview_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for preview_value_buf_ has to be chosen through deserialisation.");
            }
            preview_value_buf.value = static_cast<Ark_Union_CustomBuilder_DragItemInfo_String>(preview_value_buf_);
        }
        Opt_Union_CustomBuilder_DragItemInfo_String preview_value = preview_value_buf;;
        const auto config_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PreviewConfiguration config_value_buf = {};
        config_value_buf.tag = config_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((config_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            config_value_buf.value = PreviewConfiguration_serializer::read(thisDeserializer);
        }
        Opt_PreviewConfiguration config_value = config_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreview1(self, static_cast<Opt_Union_CustomBuilder_DragItemInfo_String*>(&preview_value), static_cast<Opt_PreviewConfiguration*>(&config_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDragPreview1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setDragPreviewOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DragPreviewOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DragPreviewOptions_serializer::read(thisDeserializer);
        }
        Opt_DragPreviewOptions value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DragInteractionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = DragInteractionOptions_serializer::read(thisDeserializer);
        }
        Opt_DragInteractionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreviewOptions(self, static_cast<Opt_DragPreviewOptions*>(&value_value), static_cast<Opt_DragInteractionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setDragPreviewOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOverlay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_CustomBuilder_ComponentContent value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_CustomBuilder_ComponentContent value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_ComponentContent>(ComponentContent_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_CustomBuilder_ComponentContent>(value_value_buf_);
        }
        Opt_Union_String_CustomBuilder_ComponentContent value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OverlayOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = OverlayOptions_serializer::read(thisDeserializer);
        }
        Opt_OverlayOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOverlay(self, static_cast<Opt_Union_String_CustomBuilder_ComponentContent*>(&value_value), static_cast<Opt_OverlayOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOverlay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBlendMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BlendMode>(thisDeserializer.readInt32());
        }
        Opt_BlendMode value_value = value_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendApplyType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_BlendApplyType>(thisDeserializer.readInt32());
        }
        Opt_BlendApplyType type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlendMode(self, static_cast<Opt_BlendMode*>(&value_value), static_cast<Opt_BlendApplyType*>(&type_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBlendMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAdvancedBlendMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto effect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BlendMode_Blender effect_value_buf = {};
        effect_value_buf.tag = effect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((effect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 effect_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BlendMode_Blender effect_value_buf_ = {};
            effect_value_buf_.selector = effect_value_buf__selector;
            if (effect_value_buf__selector == 0) {
                effect_value_buf_.selector = 0;
                effect_value_buf_.value0 = static_cast<Ark_BlendMode>(thisDeserializer.readInt32());
            }
            else if (effect_value_buf__selector == 1) {
                effect_value_buf_.selector = 1;
                effect_value_buf_.value1 = uiEffect_BrightnessBlender_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for effect_value_buf_ has to be chosen through deserialisation.");
            }
            effect_value_buf.value = static_cast<Ark_Union_BlendMode_Blender>(effect_value_buf_);
        }
        Opt_Union_BlendMode_Blender effect_value = effect_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendApplyType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_BlendApplyType>(thisDeserializer.readInt32());
        }
        Opt_BlendApplyType type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAdvancedBlendMode(self, static_cast<Opt_Union_BlendMode_Blender*>(&effect_value), static_cast<Opt_BlendApplyType*>(&type_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAdvancedBlendMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setGeometryTransition1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((id_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GeometryTransitionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = GeometryTransitionOptions_serializer::read(thisDeserializer);
        }
        Opt_GeometryTransitionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGeometryTransition1(self, static_cast<Opt_String*>(&id_value), static_cast<Opt_GeometryTransitionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setGeometryTransition1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindTips(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto message_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TipsMessageType message_value_buf = {};
        message_value_buf.tag = message_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((message_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 message_value_buf__selector = thisDeserializer.readInt8();
            Ark_TipsMessageType message_value_buf_ = {};
            message_value_buf_.selector = message_value_buf__selector;
            if (message_value_buf__selector == 0) {
                message_value_buf_.selector = 0;
                const Ark_Int8 message_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr message_value_buf__u = {};
                message_value_buf__u.selector = message_value_buf__u_selector;
                if (message_value_buf__u_selector == 0) {
                    message_value_buf__u.selector = 0;
                    message_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (message_value_buf__u_selector == 1) {
                    message_value_buf__u.selector = 1;
                    message_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for message_value_buf__u has to be chosen through deserialisation.");
                }
                message_value_buf_.value0 = static_cast<Ark_ResourceStr>(message_value_buf__u);
            }
            else if (message_value_buf__selector == 1) {
                message_value_buf_.selector = 1;
                message_value_buf_.value1 = static_cast<Ark_StyledString>(StyledString_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for message_value_buf_ has to be chosen through deserialisation.");
            }
            message_value_buf.value = static_cast<Ark_TipsMessageType>(message_value_buf_);
        }
        Opt_TipsMessageType message_value = message_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TipsOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TipsOptions_serializer::read(thisDeserializer);
        }
        Opt_TipsOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindTips(self, static_cast<Opt_TipsMessageType*>(&message_value), static_cast<Opt_TipsOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindTips, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindPopup(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((show_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        const auto popup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_PopupOptions_CustomPopupOptions popup_value_buf = {};
        popup_value_buf.tag = popup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((popup_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 popup_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_PopupOptions_CustomPopupOptions popup_value_buf_ = {};
            popup_value_buf_.selector = popup_value_buf__selector;
            if (popup_value_buf__selector == 0) {
                popup_value_buf_.selector = 0;
                popup_value_buf_.value0 = PopupOptions_serializer::read(thisDeserializer);
            }
            else if (popup_value_buf__selector == 1) {
                popup_value_buf_.selector = 1;
                popup_value_buf_.value1 = CustomPopupOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for popup_value_buf_ has to be chosen through deserialisation.");
            }
            popup_value_buf.value = static_cast<Ark_Union_PopupOptions_CustomPopupOptions>(popup_value_buf_);
        }
        Opt_Union_PopupOptions_CustomPopupOptions popup_value = popup_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindPopup(self, static_cast<Opt_Boolean*>(&show_value), static_cast<Opt_Union_PopupOptions_CustomPopupOptions*>(&popup_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindPopup, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindMenu0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_MenuElement_CustomBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_MenuElement_CustomBuilder content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                const Ark_Int32 content_value_buf__u_length = thisDeserializer.readInt32();
                Array_MenuElement content_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(content_value_buf__u)>::type,
        std::decay<decltype(*content_value_buf__u.array)>::type>(&content_value_buf__u, content_value_buf__u_length);
                for (int content_value_buf__u_i = 0; content_value_buf__u_i < content_value_buf__u_length; content_value_buf__u_i++) {
                    content_value_buf__u.array[content_value_buf__u_i] = MenuElement_serializer::read(thisDeserializer);
                }
                content_value_buf_.value0 = content_value_buf__u;
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_Array_MenuElement_CustomBuilder>(content_value_buf_);
        }
        Opt_Union_Array_MenuElement_CustomBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = MenuOptions_serializer::read(thisDeserializer);
        }
        Opt_MenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindMenu0(self, static_cast<Opt_Union_Array_MenuElement_CustomBuilder*>(&content_value), static_cast<Opt_MenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindMenu0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindMenu1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShow_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_MenuElement_CustomBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_MenuElement_CustomBuilder content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                const Ark_Int32 content_value_buf__u_length = thisDeserializer.readInt32();
                Array_MenuElement content_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(content_value_buf__u)>::type,
        std::decay<decltype(*content_value_buf__u.array)>::type>(&content_value_buf__u, content_value_buf__u_length);
                for (int content_value_buf__u_i = 0; content_value_buf__u_i < content_value_buf__u_length; content_value_buf__u_i++) {
                    content_value_buf__u.array[content_value_buf__u_i] = MenuElement_serializer::read(thisDeserializer);
                }
                content_value_buf_.value0 = content_value_buf__u;
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_Array_MenuElement_CustomBuilder>(content_value_buf_);
        }
        Opt_Union_Array_MenuElement_CustomBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = MenuOptions_serializer::read(thisDeserializer);
        }
        Opt_MenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindMenu1(self, static_cast<Opt_Boolean*>(&isShow_value), static_cast<Opt_Union_Array_MenuElement_CustomBuilder*>(&content_value), static_cast<Opt_MenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindMenu1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindContextMenu0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((responseType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            responseType_value_buf.value = static_cast<Ark_ResponseType>(thisDeserializer.readInt32());
        }
        Opt_ResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContextMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ContextMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_ContextMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContextMenu0(self, static_cast<Opt_CustomNodeBuilder*>(&content_value), static_cast<Opt_ResponseType*>(&responseType_value), static_cast<Opt_ContextMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindContextMenu0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindContextMenu1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isShown_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShown_value_buf = {};
        isShown_value_buf.tag = isShown_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShown_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShown_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShown_value = isShown_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContextMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ContextMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_ContextMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContextMenu1(self, static_cast<Opt_Boolean*>(&isShown_value), static_cast<Opt_CustomNodeBuilder*>(&content_value), static_cast<Opt_ContextMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindContextMenu1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindContentCover0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShow_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((builder_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ModalTransition type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_ModalTransition>(thisDeserializer.readInt32());
        }
        Opt_ModalTransition type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContentCover0(self, static_cast<Opt_Boolean*>(&isShow_value), static_cast<Opt_CustomNodeBuilder*>(&builder_value), static_cast<Opt_ModalTransition*>(&type_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindContentCover0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindContentCover1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShow_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((builder_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentCoverOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ContentCoverOptions_serializer::read(thisDeserializer);
        }
        Opt_ContentCoverOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContentCover1(self, static_cast<Opt_Boolean*>(&isShow_value), static_cast<Opt_CustomNodeBuilder*>(&builder_value), static_cast<Opt_ContentCoverOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindContentCover1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setBindSheet(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShow_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((builder_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SheetOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SheetOptions_serializer::read(thisDeserializer);
        }
        Opt_SheetOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindSheet(self, static_cast<Opt_Boolean*>(&isShow_value), static_cast<Opt_CustomNodeBuilder*>(&builder_value), static_cast<Opt_SheetOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setBindSheet, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnVisibleAreaChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto ratios_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number ratios_value_buf = {};
        ratios_value_buf.tag = ratios_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((ratios_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 ratios_value_buf__length = thisDeserializer.readInt32();
            Array_Number ratios_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(ratios_value_buf_)>::type,
        std::decay<decltype(*ratios_value_buf_.array)>::type>(&ratios_value_buf_, ratios_value_buf__length);
            for (int ratios_value_buf__i = 0; ratios_value_buf__i < ratios_value_buf__length; ratios_value_buf__i++) {
                ratios_value_buf_.array[ratios_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            ratios_value_buf.value = ratios_value_buf_;
        }
        Opt_Array_Number ratios_value = ratios_value_buf;;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((event_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnVisibleAreaChange(self, static_cast<Opt_Array_Number*>(&ratios_value), static_cast<Opt_VisibleAreaChangeCallback*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnVisibleAreaChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnVisibleAreaApproximateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaEventOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = VisibleAreaEventOptions_serializer::read(thisDeserializer);
        }
        Opt_VisibleAreaEventOptions options_value = options_value_buf;;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((event_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnVisibleAreaApproximateChange(self, static_cast<Opt_VisibleAreaEventOptions*>(&options_value), static_cast<Opt_VisibleAreaChangeCallback*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnVisibleAreaApproximateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setKeyboardShortcut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_FunctionKey value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_FunctionKey value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FunctionKey>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_FunctionKey>(value_value_buf_);
        }
        Opt_Union_String_FunctionKey value_value = value_value_buf;;
        const auto keys_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ModifierKey keys_value_buf = {};
        keys_value_buf.tag = keys_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((keys_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 keys_value_buf__length = thisDeserializer.readInt32();
            Array_ModifierKey keys_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(keys_value_buf_)>::type,
        std::decay<decltype(*keys_value_buf_.array)>::type>(&keys_value_buf_, keys_value_buf__length);
            for (int keys_value_buf__i = 0; keys_value_buf__i < keys_value_buf__length; keys_value_buf__i++) {
                keys_value_buf_.array[keys_value_buf__i] = static_cast<Ark_ModifierKey>(thisDeserializer.readInt32());
            }
            keys_value_buf.value = keys_value_buf_;
        }
        Opt_Array_ModifierKey keys_value = keys_value_buf;;
        const auto action_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void action_value_buf = {};
        action_value_buf.tag = action_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((action_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            action_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void action_value = action_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setKeyboardShortcut(self, static_cast<Opt_Union_String_FunctionKey*>(&value_value), static_cast<Opt_Array_ModifierKey*>(&keys_value), static_cast<Opt_Callback_Void*>(&action_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setKeyboardShortcut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setAccessibilityGroup1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isGroup_value_buf = {};
        isGroup_value_buf.tag = isGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isGroup_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isGroup_value = isGroup_value_buf;;
        const auto accessibilityOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityOptions accessibilityOptions_value_buf = {};
        accessibilityOptions_value_buf.tag = accessibilityOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((accessibilityOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            accessibilityOptions_value_buf.value = AccessibilityOptions_serializer::read(thisDeserializer);
        }
        Opt_AccessibilityOptions accessibilityOptions_value = accessibilityOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityGroup1(self, static_cast<Opt_Boolean*>(&isGroup_value), static_cast<Opt_AccessibilityOptions*>(&accessibilityOptions_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setAccessibilityGroup1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_setOnGestureRecognizerJudgeBegin1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureRecognizerJudgeBeginCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GestureRecognizerJudgeBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GestureRecognizerJudgeBeginCallback))))};
        }
        Opt_GestureRecognizerJudgeBeginCallback callback__value = callback__value_buf;;
        const auto exposeInnerGesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean exposeInnerGesture_value_buf = {};
        exposeInnerGesture_value_buf.tag = exposeInnerGesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((exposeInnerGesture_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            exposeInnerGesture_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean exposeInnerGesture_value = exposeInnerGesture_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureRecognizerJudgeBegin1(self, static_cast<Opt_GestureRecognizerJudgeBeginCallback*>(&callback__value), static_cast<Opt_Boolean*>(&exposeInnerGesture_value));
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_setOnGestureRecognizerJudgeBegin1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShapeMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCommonShapeMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CommonShapeMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CommonShapeMethod_setStroke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStroke(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStroke, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setFill(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeDashOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeDashOffset(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeDashOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeLineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeLineCap(self, static_cast<Opt_LineCapStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeLineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeLineJoin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineJoinStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineJoinStyle>(thisDeserializer.readInt32());
        }
        Opt_LineJoinStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeLineJoin(self, static_cast<Opt_LineJoinStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeLineJoin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeMiterLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeMiterLimit(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeMiterLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeOpacity(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setFillOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setFillOpacity(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setFillOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setAntiAlias(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setAntiAlias(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setAntiAlias, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_setStrokeDashArray(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Length value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Length>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeDashArray(self, static_cast<Opt_Array_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_setStrokeDashArray, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScrollableCommonMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollableCommonMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ScrollableCommonMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollableCommonMethod_setScrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBar(self, static_cast<Opt_BarState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setScrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setScrollBarColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String>(value_value_buf_);
        }
        Opt_Union_Color_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBarColor(self, static_cast<Opt_Union_Color_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setScrollBarColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setScrollBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBarWidth(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setScrollBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = NestedScrollOptions_serializer::read(thisDeserializer);
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setNestedScroll(self, static_cast<Opt_NestedScrollOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setEnableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setEnableScrollInteraction(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setEnableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setFriction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFriction(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setFriction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setOnReachStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnReachStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setOnReachStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setOnReachEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnReachEnd(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setOnReachEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setOnScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnScrollStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setOnScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setOnScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnScrollStop(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setOnScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setFlingSpeedLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFlingSpeedLimit(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setFlingSpeedLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setClipContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ContentClipMode_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ContentClipMode_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ContentClipMode>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_RectShape>(RectShape_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ContentClipMode_RectShape>(value_value_buf_);
        }
        Opt_Union_ContentClipMode_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setClipContent(self, static_cast<Opt_Union_ContentClipMode_RectShape*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setClipContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setDigitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setDigitalCrownSensitivity(self, static_cast<Opt_CrownSensitivity*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setDigitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setBackToTop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setBackToTop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setBackToTop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setEdgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto edgeEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect edgeEffect_value_buf = {};
        edgeEffect_value_buf.tag = edgeEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((edgeEffect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            edgeEffect_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect edgeEffect_value = edgeEffect_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = EdgeEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setEdgeEffect(self, static_cast<Opt_EdgeEffect*>(&edgeEffect_value), static_cast<Opt_EdgeEffectOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setEdgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_setFadingEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto enabled_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean enabled_value_buf = {};
        enabled_value_buf.tag = enabled_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((enabled_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            enabled_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean enabled_value = enabled_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FadingEdgeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = FadingEdgeOptions_serializer::read(thisDeserializer);
        }
        Opt_FadingEdgeOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFadingEdge(self, static_cast<Opt_Boolean*>(&enabled_value), static_cast<Opt_FadingEdgeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_setFadingEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ContainerSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getContainerSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ContainerSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ContainerSpanInterface_setContainerSpanOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getContainerSpanModifier()->setContainerSpanOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ContainerSpanInterface_setContainerSpanOptions, Ark_NativePointer)
void impl_ContainerSpanAttribute_setTextBackgroundStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextBackgroundStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextBackgroundStyle_serializer::read(thisDeserializer);
        }
        Opt_TextBackgroundStyle value_value = value_value_buf;;
        GetNodeModifiers()->getContainerSpanModifier()->setTextBackgroundStyle(self, static_cast<Opt_TextBackgroundStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ContainerSpanAttribute_setTextBackgroundStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Counter_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCounterModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Counter_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CounterInterface_setCounterOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getCounterModifier()->setCounterOptions(self);
}
KOALA_INTEROP_DIRECT_V1(CounterInterface_setCounterOptions, Ark_NativePointer)
void impl_CounterAttribute_setOnInc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setOnInc(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_setOnInc, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_setOnDec(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setOnDec(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_setOnDec, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_setEnableDec(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setEnableDec(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_setEnableDec, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_setEnableInc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setEnableInc(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_setEnableInc, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DataPanel_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDataPanelModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(DataPanel_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DataPanelInterface_setDataPanelOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_DataPanelOptions options_value = DataPanelOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getDataPanelModifier()->setDataPanelOptions(self, static_cast<Ark_DataPanelOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelInterface_setDataPanelOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setCloseEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setCloseEffect(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setCloseEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setValueColors(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_Union_ResourceColor_LinearGradient value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    const Ark_Int8 value_value_buf__buf_u_selector = thisDeserializer.readInt8();
                    Ark_ResourceColor value_value_buf__buf_u = {};
                    value_value_buf__buf_u.selector = value_value_buf__buf_u_selector;
                    if (value_value_buf__buf_u_selector == 0) {
                        value_value_buf__buf_u.selector = 0;
                        value_value_buf__buf_u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                    }
                    else if (value_value_buf__buf_u_selector == 1) {
                        value_value_buf__buf_u.selector = 1;
                        value_value_buf__buf_u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    }
                    else if (value_value_buf__buf_u_selector == 2) {
                        value_value_buf__buf_u.selector = 2;
                        value_value_buf__buf_u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                    }
                    else if (value_value_buf__buf_u_selector == 3) {
                        value_value_buf__buf_u.selector = 3;
                        value_value_buf__buf_u.value3 = Resource_serializer::read(thisDeserializer);
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__buf_u has to be chosen through deserialisation.");
                    }
                    value_value_buf__buf.value0 = static_cast<Ark_ResourceColor>(value_value_buf__buf_u);
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setValueColors(self, static_cast<Opt_Array_Union_ResourceColor_LinearGradient*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setValueColors, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setTrackBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setTrackBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setTrackBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setStrokeWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setTrackShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DataPanelShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DataPanelShadowOptions_serializer::read(thisDeserializer);
        }
        Opt_DataPanelShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setTrackShadow(self, static_cast<Opt_DataPanelShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setTrackShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DatePicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDatePickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(DatePicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DatePickerInterface_setDatePickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DatePickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = DatePickerOptions_serializer::read(thisDeserializer);
        }
        Opt_DatePickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDatePickerOptions(self, static_cast<Opt_DatePickerOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerInterface_setDatePickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setLunar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setLunar(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setLunar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setDisappearTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDisappearTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setDisappearTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setSelectedTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setSelectedTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setSelectedTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setOnDateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setOnDateChange(self, static_cast<Opt_Callback_Date_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setOnDateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setDigitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDigitalCrownSensitivity(self, static_cast<Opt_CrownSensitivity*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setDigitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Date_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};;
        GetNodeModifiers()->getDatePickerModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Date_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Divider_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDividerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Divider_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DividerInterface_setDividerOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getDividerModifier()->setDividerOptions(self);
}
KOALA_INTEROP_DIRECT_V1(DividerInterface_setDividerOptions, Ark_NativePointer)
void impl_DividerAttribute_setVertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setVertical(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_setVertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_setStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setStrokeWidth(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_setStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_setLineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setLineCap(self, static_cast<Opt_LineCapStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_setLineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EffectComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEffectComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(EffectComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EffectComponentInterface_setEffectComponentOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getEffectComponentModifier()->setEffectComponentOptions(self);
}
KOALA_INTEROP_DIRECT_V1(EffectComponentInterface_setEffectComponentOptions, Ark_NativePointer)
Ark_NativePointer impl_Ellipse_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEllipseModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Ellipse_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EllipseInterface_setEllipseOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipseOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = EllipseOptions_serializer::read(thisDeserializer);
        }
        Opt_EllipseOptions options_value = options_value_buf;;
        GetNodeModifiers()->getEllipseModifier()->setEllipseOptions(self, static_cast<Opt_EllipseOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(EllipseInterface_setEllipseOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EmbeddedComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEmbeddedComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(EmbeddedComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EmbeddedComponentInterface_setEmbeddedComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 type) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Want loader_value = Want_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setEmbeddedComponentOptions(self, static_cast<Ark_Want*>(&loader_value), static_cast<Ark_EmbeddedType>(type));
}
KOALA_INTEROP_DIRECT_V4(EmbeddedComponentInterface_setEmbeddedComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
void impl_EmbeddedComponentAttribute_setOnTerminated(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TerminationInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TerminationInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TerminationInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TerminationInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TerminationInfo_Void))))};
        }
        Opt_Callback_TerminationInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setOnTerminated(self, static_cast<Opt_Callback_TerminationInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(EmbeddedComponentAttribute_setOnTerminated, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_EmbeddedComponentAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ErrorCallback))))};
        }
        Opt_ErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setOnError(self, static_cast<Opt_ErrorCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(EmbeddedComponentAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Flex_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFlexModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Flex_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FlexInterface_setFlexOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = FlexOptions_serializer::read(thisDeserializer);
        }
        Opt_FlexOptions value_value = value_value_buf;;
        GetNodeModifiers()->getFlexModifier()->setFlexOptions(self, static_cast<Opt_FlexOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FlexInterface_setFlexOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FlexAttribute_setPointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PointLightStyle_serializer::read(thisDeserializer);
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getFlexModifier()->setPointLight(self, static_cast<Opt_PointLightStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FlexAttribute_setPointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FlowItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFlowItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FlowItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FlowItemInterface_setFlowItemOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getFlowItemModifier()->setFlowItemOptions(self);
}
KOALA_INTEROP_DIRECT_V1(FlowItemInterface_setFlowItemOptions, Ark_NativePointer)
Ark_NativePointer impl_FolderStack_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFolderStackModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FolderStack_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FolderStackInterface_setFolderStackOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FolderStackOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = FolderStackOptions_serializer::read(thisDeserializer);
        }
        Opt_FolderStackOptions options_value = options_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setFolderStackOptions(self, static_cast<Opt_FolderStackOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackInterface_setFolderStackOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_setAlignContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setAlignContent(self, static_cast<Opt_Alignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_setAlignContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_setOnFolderStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFoldStatusChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFoldStatusChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFoldStatusChangeCallback))))};
        }
        Opt_OnFoldStatusChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setOnFolderStateChange(self, static_cast<Opt_OnFoldStatusChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_setOnFolderStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_setOnHoverStatusChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnHoverStatusChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_HoverEventParam param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnHoverStatusChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEventParam param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnHoverStatusChangeCallback))))};
        }
        Opt_OnHoverStatusChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setOnHoverStatusChange(self, static_cast<Opt_OnHoverStatusChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_setOnHoverStatusChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_setEnableAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setEnableAnimation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_setEnableAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_setAutoHalfFold(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setAutoHalfFold(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_setAutoHalfFold, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FormComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFormComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FormComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FormComponentInterface_setFormComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_FormInfo value_value = FormInfo_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getFormComponentModifier()->setFormComponentOptions(self, static_cast<Ark_FormInfo*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentInterface_setFormComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FormSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = FormSize_serializer::read(thisDeserializer);
        }
        Opt_FormSize value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setSize(self, static_cast<Opt_FormSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setModuleName(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setModuleName(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setModuleName, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setDimension(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FormDimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FormDimension>(thisDeserializer.readInt32());
        }
        Opt_FormDimension value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setDimension(self, static_cast<Opt_FormDimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setDimension, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setAllowUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setAllowUpdate(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setAllowUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setVisibility(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Visibility value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Visibility>(thisDeserializer.readInt32());
        }
        Opt_Visibility value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setVisibility(self, static_cast<Opt_Visibility*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setVisibility, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnAcquired(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FormCallbackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FormCallbackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FormCallbackInfo_Void))))};
        }
        Opt_Callback_FormCallbackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnAcquired(self, static_cast<Opt_Callback_FormCallbackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnAcquired, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ErrorInformation_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ErrorInformation value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ErrorInformation_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ErrorInformation value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ErrorInformation_Void))))};
        }
        Opt_Callback_ErrorInformation_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnError(self, static_cast<Opt_Callback_ErrorInformation_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnRouter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Object_Void))))};
        }
        Opt_Callback_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnRouter(self, static_cast<Opt_Callback_Object_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnRouter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnUninstall(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FormCallbackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FormCallbackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FormCallbackInfo_Void))))};
        }
        Opt_Callback_FormCallbackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnUninstall(self, static_cast<Opt_Callback_FormCallbackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnUninstall, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnLoad(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_setOnUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FormCallbackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FormCallbackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FormCallbackInfo_Void))))};
        }
        Opt_Callback_FormCallbackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnUpdate(self, static_cast<Opt_Callback_FormCallbackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_setOnUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FormLink_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFormLinkModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FormLink_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FormLinkInterface_setFormLinkOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_FormLinkOptions options_value = FormLinkOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getFormLinkModifier()->setFormLinkOptions(self, static_cast<Ark_FormLinkOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(FormLinkInterface_setFormLinkOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Gauge_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGaugeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Gauge_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GaugeInterface_setGaugeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_GaugeOptions options_value = GaugeOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getGaugeModifier()->setGaugeOptions(self, static_cast<Ark_GaugeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeInterface_setGaugeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setValue(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setValue(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setValue, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setStartAngle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setStartAngle(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setStartAngle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setEndAngle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setEndAngle(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setEndAngle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setColors(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    Ark_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf__u_buf = {};
                    const Ark_Int8 value_value_buf__u_buf_value0_buf_selector = thisDeserializer.readInt8();
                    Ark_Union_ResourceColor_LinearGradient value_value_buf__u_buf_value0_buf = {};
                    value_value_buf__u_buf_value0_buf.selector = value_value_buf__u_buf_value0_buf_selector;
                    if (value_value_buf__u_buf_value0_buf_selector == 0) {
                        value_value_buf__u_buf_value0_buf.selector = 0;
                        const Ark_Int8 value_value_buf__u_buf_value0_buf_u_selector = thisDeserializer.readInt8();
                        Ark_ResourceColor value_value_buf__u_buf_value0_buf_u = {};
                        value_value_buf__u_buf_value0_buf_u.selector = value_value_buf__u_buf_value0_buf_u_selector;
                        if (value_value_buf__u_buf_value0_buf_u_selector == 0) {
                            value_value_buf__u_buf_value0_buf_u.selector = 0;
                            value_value_buf__u_buf_value0_buf_u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 1) {
                            value_value_buf__u_buf_value0_buf_u.selector = 1;
                            value_value_buf__u_buf_value0_buf_u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 2) {
                            value_value_buf__u_buf_value0_buf_u.selector = 2;
                            value_value_buf__u_buf_value0_buf_u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 3) {
                            value_value_buf__u_buf_value0_buf_u.selector = 3;
                            value_value_buf__u_buf_value0_buf_u.value3 = Resource_serializer::read(thisDeserializer);
                        }
                        else {
                            INTEROP_FATAL("One of the branches for value_value_buf__u_buf_value0_buf_u has to be chosen through deserialisation.");
                        }
                        value_value_buf__u_buf_value0_buf.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u_buf_value0_buf_u);
                    }
                    else if (value_value_buf__u_buf_value0_buf_selector == 1) {
                        value_value_buf__u_buf_value0_buf.selector = 1;
                        value_value_buf__u_buf_value0_buf.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__u_buf_value0_buf has to be chosen through deserialisation.");
                    }
                    value_value_buf__u_buf.value0 = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf__u_buf_value0_buf);
                    value_value_buf__u_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__u.array[value_value_buf__u_i] = value_value_buf__u_buf;
                }
                value_value_buf_.value2 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setColors(self, static_cast<Opt_Union_ResourceColor_LinearGradient_Array_Tuple_Union_ResourceColor_LinearGradient_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setColors, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setStrokeWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setDescription(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setDescription(self, static_cast<Opt_CustomNodeBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setDescription, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setTrackShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GaugeShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = GaugeShadowOptions_serializer::read(thisDeserializer);
        }
        Opt_GaugeShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setTrackShadow(self, static_cast<Opt_GaugeShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setTrackShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setIndicator(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GaugeIndicatorOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = GaugeIndicatorOptions_serializer::read(thisDeserializer);
        }
        Opt_GaugeIndicatorOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setIndicator(self, static_cast<Opt_GaugeIndicatorOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setIndicator, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setPrivacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setPrivacySensitive(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setPrivacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Grid_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Grid_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridInterface_setGridOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scroller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Scroller scroller_value_buf = {};
        scroller_value_buf.tag = scroller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scroller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scroller_value_buf.value = static_cast<Ark_Scroller>(Scroller_serializer::read(thisDeserializer));
        }
        Opt_Scroller scroller_value = scroller_value_buf;;
        const auto layoutOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridLayoutOptions layoutOptions_value_buf = {};
        layoutOptions_value_buf.tag = layoutOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((layoutOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            layoutOptions_value_buf.value = GridLayoutOptions_serializer::read(thisDeserializer);
        }
        Opt_GridLayoutOptions layoutOptions_value = layoutOptions_value_buf;;
        GetNodeModifiers()->getGridModifier()->setGridOptions(self, static_cast<Opt_Scroller*>(&scroller_value), static_cast<Opt_GridLayoutOptions*>(&layoutOptions_value));
}
KOALA_INTEROP_DIRECT_V3(GridInterface_setGridOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setColumnsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setColumnsTemplate(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setColumnsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setRowsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setRowsTemplate(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setRowsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setColumnsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setColumnsGap(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setColumnsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setRowsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setRowsGap(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setRowsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnScrollBarUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_ComputedBarAttribute value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_ComputedBarAttribute)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_ComputedBarAttribute))))};
        }
        Opt_Callback_Number_Number_ComputedBarAttribute value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollBarUpdate(self, static_cast<Opt_Callback_Number_Number_ComputedBarAttribute*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnScrollBarUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollIndex(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setCachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCachedCount0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setCachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setEditMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setEditMode(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setEditMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setMultiSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMultiSelectable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setMultiSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setMaxCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMaxCount(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setMaxCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setMinCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMinCount(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setMinCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setCellLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCellLength(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setCellLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setLayoutDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_GridDirection>(thisDeserializer.readInt32());
        }
        Opt_GridDirection value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setLayoutDirection(self, static_cast<Opt_GridDirection*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setLayoutDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setSupportAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setSupportAnimation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setSupportAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnItemDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnItemDragStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnItemDragStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnItemDragStartCallback))))};
        }
        Opt_OnItemDragStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragStart(self, static_cast<Opt_OnItemDragStartCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnItemDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnItemDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Void))))};
        }
        Opt_Callback_ItemDragInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragEnter(self, static_cast<Opt_Callback_ItemDragInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnItemDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnItemDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragMove(self, static_cast<Opt_Callback_ItemDragInfo_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnItemDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnItemDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragLeave(self, static_cast<Opt_Callback_ItemDragInfo_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnItemDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnItemDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDrop(self, static_cast<Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnItemDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setAlignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridItemAlignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_GridItemAlignment>(thisDeserializer.readInt32());
        }
        Opt_GridItemAlignment value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setAlignItems(self, static_cast<Opt_GridItemAlignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setAlignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollFrameBegin(self, static_cast<Opt_OnScrollFrameBeginCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnWillScroll(self, static_cast<Opt_OnWillScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setOnDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnDidScroll(self, static_cast<Opt_OnScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setOnDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_setCachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((show_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCachedCount1(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_Boolean*>(&show_value));
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_setCachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridCol_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridColModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridCol_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridColInterface_setGridColOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridColOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((option_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            option_value_buf.value = GridColOptions_serializer::read(thisDeserializer);
        }
        Opt_GridColOptions option_value = option_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setGridColOptions(self, static_cast<Opt_GridColOptions*>(&option_value));
}
KOALA_INTEROP_DIRECT_V3(GridColInterface_setGridColOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_setSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = GridColColumnOption_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setSpan(self, static_cast<Opt_Union_Number_GridColColumnOption*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_setSpan, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_setGridColOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = GridColColumnOption_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setGridColOffset(self, static_cast<Opt_Union_Number_GridColColumnOption*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_setGridColOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_setOrder(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = GridColColumnOption_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setOrder(self, static_cast<Opt_Union_Number_GridColColumnOption*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_setOrder, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridItemInterface_setGridItemOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridItemOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = GridItemOptions_serializer::read(thisDeserializer);
        }
        Opt_GridItemOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setGridItemOptions(self, static_cast<Opt_GridItemOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemInterface_setGridItemOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setRowStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setRowStart(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setRowStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setRowEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setRowEnd(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setRowEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setColumnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setColumnStart(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setColumnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setColumnEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setColumnEnd(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setColumnEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setSelectable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setSelected(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_setOnSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isSelected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isSelected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setOnSelect(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_setOnSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getGridItemModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridRow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridRowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridRow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridRowInterface_setGridRowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridRowOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((option_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            option_value_buf.value = GridRowOptions_serializer::read(thisDeserializer);
        }
        Opt_GridRowOptions option_value = option_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setGridRowOptions(self, static_cast<Opt_GridRowOptions*>(&option_value));
}
KOALA_INTEROP_DIRECT_V3(GridRowInterface_setGridRowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridRowAttribute_setOnBreakpointChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setOnBreakpointChange(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridRowAttribute_setOnBreakpointChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridRowAttribute_setAlignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setAlignItems(self, static_cast<Opt_ItemAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(GridRowAttribute_setAlignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Hyperlink_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getHyperlinkModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Hyperlink_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_HyperlinkInterface_setHyperlinkOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 address_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource address_value_buf = {};
        address_value_buf.selector = address_value_buf_selector;
        if (address_value_buf_selector == 0) {
            address_value_buf.selector = 0;
            address_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (address_value_buf_selector == 1) {
            address_value_buf.selector = 1;
            address_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for address_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource address_value = static_cast<Ark_Union_String_Resource>(address_value_buf);;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_String_Resource>(content_value_buf_);
        }
        Opt_Union_String_Resource content_value = content_value_buf;;
        GetNodeModifiers()->getHyperlinkModifier()->setHyperlinkOptions(self, static_cast<Ark_Union_String_Resource*>(&address_value), static_cast<Opt_Union_String_Resource*>(&content_value));
}
KOALA_INTEROP_DIRECT_V3(HyperlinkInterface_setHyperlinkOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_HyperlinkAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Color_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getHyperlinkModifier()->setColor(self, static_cast<Opt_Union_Color_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(HyperlinkAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Image_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Image_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageInterface_setImageOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(DrawableDescriptor_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 3) {
            src_value_buf.selector = 3;
            src_value_buf.value3 = static_cast<Ark_ImageContent>(thisDeserializer.readInt32());
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent>(src_value_buf);;
        GetNodeModifiers()->getImageModifier()->setImageOptions0(self, static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent*>(&src_value));
}
KOALA_INTEROP_DIRECT_V3(ImageInterface_setImageOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageInterface_setImageOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(DrawableDescriptor_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor>(src_value_buf);;
        Ark_ImageAIOptions imageAIOptions_value = ImageAIOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getImageModifier()->setImageOptions1(self, static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor*>(&src_value), static_cast<Ark_ImageAIOptions*>(&imageAIOptions_value));
}
KOALA_INTEROP_DIRECT_V3(ImageInterface_setImageOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setAlt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource_PixelMap value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource_PixelMap>(value_value_buf_);
        }
        Opt_Union_String_Resource_PixelMap value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAlt(self, static_cast<Opt_Union_String_Resource_PixelMap*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setAlt, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setMatchTextDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setMatchTextDirection(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setMatchTextDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setFitOriginalSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setFitOriginalSize(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setFitOriginalSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setFillColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_ColorContent_ColorMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_ColorContent_ColorMetrics value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ColorContent>(ColorContent_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_ColorMetrics>(ColorMetrics_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_ColorContent_ColorMetrics>(value_value_buf_);
        }
        Opt_Union_ResourceColor_ColorContent_ColorMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setFillColor(self, static_cast<Opt_Union_ResourceColor_ColorContent_ColorMetrics*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setFillColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setObjectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setObjectFit(self, static_cast<Opt_ImageFit*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setObjectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setImageMatrix(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_matrix4_Matrix4Transit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_matrix4_Matrix4Transit>(matrix4_Matrix4Transit_serializer::read(thisDeserializer));
        }
        Opt_matrix4_Matrix4Transit value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setImageMatrix(self, static_cast<Opt_matrix4_Matrix4Transit*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setImageMatrix, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setObjectRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRepeat value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageRepeat>(thisDeserializer.readInt32());
        }
        Opt_ImageRepeat value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setObjectRepeat(self, static_cast<Opt_ImageRepeat*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setObjectRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setAutoResize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAutoResize(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setAutoResize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setRenderMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRenderMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageRenderMode>(thisDeserializer.readInt32());
        }
        Opt_ImageRenderMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setRenderMode(self, static_cast<Opt_ImageRenderMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setRenderMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setDynamicRangeMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DynamicRangeMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_DynamicRangeMode>(thisDeserializer.readInt32());
        }
        Opt_DynamicRangeMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setDynamicRangeMode(self, static_cast<Opt_DynamicRangeMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setDynamicRangeMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setInterpolation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageInterpolation value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageInterpolation>(thisDeserializer.readInt32());
        }
        Opt_ImageInterpolation value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setInterpolation(self, static_cast<Opt_ImageInterpolation*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setInterpolation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setSourceSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageSourceSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ImageSourceSize_serializer::read(thisDeserializer);
        }
        Opt_ImageSourceSize value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setSourceSize(self, static_cast<Opt_ImageSourceSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setSourceSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setSyncLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setSyncLoad(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setSyncLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setColorFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColorFilter_DrawingColorFilter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColorFilter_DrawingColorFilter value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ColorFilter>(ColorFilter_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_drawing_ColorFilter>(drawing_ColorFilter_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ColorFilter_DrawingColorFilter>(value_value_buf_);
        }
        Opt_Union_ColorFilter_DrawingColorFilter value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setColorFilter(self, static_cast<Opt_Union_ColorFilter_DrawingColorFilter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setColorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setCopyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setCopyOption(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setCopyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setDraggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setDraggable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setDraggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setPointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PointLightStyle_serializer::read(thisDeserializer);
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setPointLight(self, static_cast<Opt_PointLightStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setPointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setEdgeAntialiasing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEdgeAntialiasing(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setEdgeAntialiasing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setOnComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageOnCompleteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_ImageCompleteEvent loadEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageOnCompleteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_ImageCompleteEvent loadEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageOnCompleteCallback))))};
        }
        Opt_ImageOnCompleteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnComplete(self, static_cast<Opt_ImageOnCompleteCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setOnComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageErrorCallback))))};
        }
        Opt_ImageErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnError(self, static_cast<Opt_ImageErrorCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnFinish(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setEnableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEnableAnalyzer(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setEnableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setAnalyzerConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageAnalyzerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ImageAnalyzerConfig_serializer::read(thisDeserializer);
        }
        Opt_ImageAnalyzerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAnalyzerConfig(self, static_cast<Opt_ImageAnalyzerConfig*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setAnalyzerConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setResizable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResizableOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ResizableOptions_serializer::read(thisDeserializer);
        }
        Opt_ResizableOptions value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setResizable(self, static_cast<Opt_ResizableOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setResizable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setPrivacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setPrivacySensitive(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setPrivacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setEnhancedImageQuality(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_image_ResolutionQuality value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_image_ResolutionQuality>(thisDeserializer.readInt32());
        }
        Opt_image_ResolutionQuality value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEnhancedImageQuality(self, static_cast<Opt_image_ResolutionQuality*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setEnhancedImageQuality, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_setOrientation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRotateOrientation value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageRotateOrientation>(thisDeserializer.readInt32());
        }
        Opt_ImageRotateOrientation value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOrientation(self, static_cast<Opt_ImageRotateOrientation*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_setOrientation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageAnimator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageAnimatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ImageAnimator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageAnimatorInterface_setImageAnimatorOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getImageAnimatorModifier()->setImageAnimatorOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ImageAnimatorInterface_setImageAnimatorOptions, Ark_NativePointer)
void impl_ImageAnimatorAttribute_setImages(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ImageFrameInfo value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ImageFrameInfo value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ImageFrameInfo_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ImageFrameInfo value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setImages(self, static_cast<Opt_Array_ImageFrameInfo*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setImages, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationStatus value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AnimationStatus>(thisDeserializer.readInt32());
        }
        Opt_AnimationStatus value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setState(self, static_cast<Opt_AnimationStatus*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setDuration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setDuration(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setDuration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setReverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setReverse(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setReverse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setFixedSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setFixedSize(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setFixedSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setFillMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FillMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FillMode>(thisDeserializer.readInt32());
        }
        Opt_FillMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setFillMode(self, static_cast<Opt_FillMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setFillMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setIterations(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setIterations(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setIterations, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setMonitorInvisibleArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setMonitorInvisibleArea(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setMonitorInvisibleArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setOnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setOnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setOnPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnPause(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setOnPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setOnRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnRepeat(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setOnRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setOnCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnCancel(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setOnCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnFinish(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ImageSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageSpanInterface_setImageSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ResourceStr_PixelMap value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            const Ark_Int8 value_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_u = {};
            value_value_buf_u.selector = value_value_buf_u_selector;
            if (value_value_buf_u_selector == 0) {
                value_value_buf_u.selector = 0;
                value_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf_u_selector == 1) {
                value_value_buf_u.selector = 1;
                value_value_buf_u.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_u has to be chosen through deserialisation.");
            }
            value_value_buf.value0 = static_cast<Ark_ResourceStr>(value_value_buf_u);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ResourceStr_PixelMap value_value = static_cast<Ark_Union_ResourceStr_PixelMap>(value_value_buf);;
        GetNodeModifiers()->getImageSpanModifier()->setImageSpanOptions(self, static_cast<Ark_Union_ResourceStr_PixelMap*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanInterface_setImageSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setVerticalAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageSpanAlignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageSpanAlignment>(thisDeserializer.readInt32());
        }
        Opt_ImageSpanAlignment value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setVerticalAlign(self, static_cast<Opt_ImageSpanAlignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setVerticalAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setColorFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColorFilter_DrawingColorFilter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColorFilter_DrawingColorFilter value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ColorFilter>(ColorFilter_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_drawing_ColorFilter>(drawing_ColorFilter_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ColorFilter_DrawingColorFilter>(value_value_buf_);
        }
        Opt_Union_ColorFilter_DrawingColorFilter value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setColorFilter(self, static_cast<Opt_Union_ColorFilter_DrawingColorFilter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setColorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setObjectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setObjectFit(self, static_cast<Opt_ImageFit*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setObjectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setOnComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageCompleteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageLoadResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageCompleteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageLoadResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageCompleteCallback))))};
        }
        Opt_ImageCompleteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setOnComplete(self, static_cast<Opt_ImageCompleteCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setOnComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageErrorCallback))))};
        }
        Opt_ImageErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setOnError(self, static_cast<Opt_ImageErrorCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_setAlt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_image_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        Opt_image_PixelMap value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setAlt(self, static_cast<Opt_image_PixelMap*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_setAlt, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_IndicatorComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getIndicatorComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(IndicatorComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_IndicatorComponentInterface_setIndicatorComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_IndicatorComponentController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((controller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            controller_value_buf.value = static_cast<Ark_IndicatorComponentController>(IndicatorComponentController_serializer::read(thisDeserializer));
        }
        Opt_IndicatorComponentController controller_value = controller_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setIndicatorComponentOptions(self, static_cast<Opt_IndicatorComponentController*>(&controller_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentInterface_setIndicatorComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setInitialIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setInitialIndex(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setInitialIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setCount(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_DotIndicator_DigitIndicator value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_DotIndicator_DigitIndicator value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = DotIndicator_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = DigitIndicator_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_DotIndicator_DigitIndicator>(value_value_buf_);
        }
        Opt_Union_DotIndicator_DigitIndicator value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setStyle(self, static_cast<Opt_Union_DotIndicator_DigitIndicator*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setVertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setVertical(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setVertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setOnChange(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Line_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLineModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Line_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LineInterface_setLineOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = LineOptions_serializer::read(thisDeserializer);
        }
        Opt_LineOptions options_value = options_value_buf;;
        GetNodeModifiers()->getLineModifier()->setLineOptions(self, static_cast<Opt_LineOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(LineInterface_setLineOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LineAttribute_setStartPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapePoint value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            Ark_ShapePoint value_value_buf_ = {};
            const Ark_Int8 value_value_buf__value0_buf_selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf__value0_buf = {};
            value_value_buf__value0_buf.selector = value_value_buf__value0_buf_selector;
            if (value_value_buf__value0_buf_selector == 0) {
                value_value_buf__value0_buf.selector = 0;
                value_value_buf__value0_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value0_buf_selector == 1) {
                value_value_buf__value0_buf.selector = 1;
                value_value_buf__value0_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value0_buf_selector == 2) {
                value_value_buf__value0_buf.selector = 2;
                value_value_buf__value0_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value0_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__value0_buf);
            const Ark_Int8 value_value_buf__value1_buf_selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf__value1_buf = {};
            value_value_buf__value1_buf.selector = value_value_buf__value1_buf_selector;
            if (value_value_buf__value1_buf_selector == 0) {
                value_value_buf__value1_buf.selector = 0;
                value_value_buf__value1_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value1_buf_selector == 1) {
                value_value_buf__value1_buf.selector = 1;
                value_value_buf__value1_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value1_buf_selector == 2) {
                value_value_buf__value1_buf.selector = 2;
                value_value_buf__value1_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value1_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__value1_buf);
            value_value_buf.value = value_value_buf_;
        }
        Opt_ShapePoint value_value = value_value_buf;;
        GetNodeModifiers()->getLineModifier()->setStartPoint(self, static_cast<Opt_ShapePoint*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LineAttribute_setStartPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LineAttribute_setEndPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapePoint value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            Ark_ShapePoint value_value_buf_ = {};
            const Ark_Int8 value_value_buf__value0_buf_selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf__value0_buf = {};
            value_value_buf__value0_buf.selector = value_value_buf__value0_buf_selector;
            if (value_value_buf__value0_buf_selector == 0) {
                value_value_buf__value0_buf.selector = 0;
                value_value_buf__value0_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value0_buf_selector == 1) {
                value_value_buf__value0_buf.selector = 1;
                value_value_buf__value0_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value0_buf_selector == 2) {
                value_value_buf__value0_buf.selector = 2;
                value_value_buf__value0_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value0_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__value0_buf);
            const Ark_Int8 value_value_buf__value1_buf_selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf__value1_buf = {};
            value_value_buf__value1_buf.selector = value_value_buf__value1_buf_selector;
            if (value_value_buf__value1_buf_selector == 0) {
                value_value_buf__value1_buf.selector = 0;
                value_value_buf__value1_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value1_buf_selector == 1) {
                value_value_buf__value1_buf.selector = 1;
                value_value_buf__value1_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value1_buf_selector == 2) {
                value_value_buf__value1_buf.selector = 2;
                value_value_buf__value1_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value1_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__value1_buf);
            value_value_buf.value = value_value_buf_;
        }
        Opt_ShapePoint value_value = value_value_buf;;
        GetNodeModifiers()->getLineModifier()->setEndPoint(self, static_cast<Opt_ShapePoint*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LineAttribute_setEndPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LinearIndicator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLinearIndicatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LinearIndicator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LinearIndicatorInterface_setLinearIndicatorOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((controller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            controller_value_buf.value = static_cast<Ark_LinearIndicatorController>(LinearIndicatorController_serializer::read(thisDeserializer));
        }
        Opt_LinearIndicatorController controller_value = controller_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setLinearIndicatorOptions(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_LinearIndicatorController*>(&controller_value));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorInterface_setLinearIndicatorOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_setIndicatorStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = LinearIndicatorStyle_serializer::read(thisDeserializer);
        }
        Opt_LinearIndicatorStyle value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setIndicatorStyle(self, static_cast<Opt_LinearIndicatorStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_setIndicatorStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_setIndicatorLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setIndicatorLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_setIndicatorLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnLinearIndicatorChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnLinearIndicatorChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnLinearIndicatorChangeCallback))))};
        }
        Opt_OnLinearIndicatorChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setOnChange(self, static_cast<Opt_OnLinearIndicatorChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_List_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(List_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListInterface_setListOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ListOptions_serializer::read(thisDeserializer);
        }
        Opt_ListOptions options_value = options_value_buf;;
        GetNodeModifiers()->getListModifier()->setListOptions(self, static_cast<Opt_ListOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ListInterface_setListOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setAlignListItem(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ListItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ListItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setAlignListItem(self, static_cast<Opt_ListItemAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setAlignListItem, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setListDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setListDirection(self, static_cast<Opt_Axis*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setListDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setContentStartOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setContentStartOffset(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setContentStartOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setContentEndOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setContentEndOffset(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setContentEndOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListDividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ListDividerOptions_serializer::read(thisDeserializer);
        }
        Opt_ListDividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setDivider(self, static_cast<Opt_ListDividerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setMultiSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setMultiSelectable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setMultiSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setCachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setCachedCount0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setCachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setChainAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChainAnimation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setChainAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setChainAnimationOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainAnimationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ChainAnimationOptions_serializer::read(thisDeserializer);
        }
        Opt_ChainAnimationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChainAnimationOptions(self, static_cast<Opt_ChainAnimationOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setChainAnimationOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setSticky(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StickyStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_StickyStyle>(thisDeserializer.readInt32());
        }
        Opt_StickyStyle value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setSticky(self, static_cast<Opt_StickyStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setSticky, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setScrollSnapAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollSnapAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ScrollSnapAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollSnapAlign value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setScrollSnapAlign(self, static_cast<Opt_ScrollSnapAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setScrollSnapAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setChildrenMainSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChildrenMainSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ChildrenMainSize>(ChildrenMainSize_serializer::read(thisDeserializer));
        }
        Opt_ChildrenMainSize value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChildrenMainSize(self, static_cast<Opt_ChildrenMainSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setChildrenMainSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setMaintainVisibleContentPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setMaintainVisibleContentPosition(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setMaintainVisibleContentPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setStackFromEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setStackFromEnd(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setStackFromEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollIndex(self, static_cast<Opt_Callback_Number_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnScrollVisibleContentChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollVisibleContentChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollVisibleContentChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollVisibleContentChangeCallback))))};
        }
        Opt_OnScrollVisibleContentChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollVisibleContentChange(self, static_cast<Opt_OnScrollVisibleContentChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnScrollVisibleContentChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Boolean))))};
        }
        Opt_Callback_Number_Number_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemMove(self, static_cast<Opt_Callback_Number_Number_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnItemDragStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnItemDragStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_Opt_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnItemDragStartCallback))))};
        }
        Opt_OnItemDragStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragStart(self, static_cast<Opt_OnItemDragStartCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Void))))};
        }
        Opt_Callback_ItemDragInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragEnter(self, static_cast<Opt_Callback_ItemDragInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragMove(self, static_cast<Opt_Callback_ItemDragInfo_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragLeave(self, static_cast<Opt_Callback_ItemDragInfo_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnItemDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDrop(self, static_cast<Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnItemDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollFrameBegin(self, static_cast<Opt_OnScrollFrameBeginCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnWillScroll(self, static_cast<Opt_OnWillScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setOnDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnDidScroll(self, static_cast<Opt_OnScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setOnDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setLanes(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_LengthConstrain value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_LengthConstrain value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = LengthConstrain_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_LengthConstrain>(value_value_buf_);
        }
        Opt_Union_Number_LengthConstrain value_value = value_value_buf;;
        const auto gutter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension gutter_value_buf = {};
        gutter_value_buf.tag = gutter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((gutter_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 gutter_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension gutter_value_buf_ = {};
            gutter_value_buf_.selector = gutter_value_buf__selector;
            if (gutter_value_buf__selector == 0) {
                gutter_value_buf_.selector = 0;
                gutter_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (gutter_value_buf__selector == 1) {
                gutter_value_buf_.selector = 1;
                gutter_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (gutter_value_buf__selector == 2) {
                gutter_value_buf_.selector = 2;
                gutter_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for gutter_value_buf_ has to be chosen through deserialisation.");
            }
            gutter_value_buf.value = static_cast<Ark_Dimension>(gutter_value_buf_);
        }
        Opt_Dimension gutter_value = gutter_value_buf;;
        GetNodeModifiers()->getListModifier()->setLanes(self, static_cast<Opt_Union_Number_LengthConstrain*>(&value_value), static_cast<Opt_Dimension*>(&gutter_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setLanes, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_setCachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((show_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getListModifier()->setCachedCount1(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_Boolean*>(&show_value));
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_setCachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ListItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ListItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListItemInterface_setListItemOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ListItemOptions_serializer::read(thisDeserializer);
        }
        Opt_ListItemOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setListItemOptions(self, static_cast<Opt_ListItemOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemInterface_setListItemOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_setSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSelectable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_setSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSelected(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_setSwipeAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwipeActionOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SwipeActionOptions_serializer::read(thisDeserializer);
        }
        Opt_SwipeActionOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSwipeAction(self, static_cast<Opt_SwipeActionOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_setSwipeAction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_setOnSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isSelected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isSelected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setOnSelect(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_setOnSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getListItemModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ListItemGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListItemGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ListItemGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListItemGroupInterface_setListItemGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemGroupOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ListItemGroupOptions_serializer::read(thisDeserializer);
        }
        Opt_ListItemGroupOptions options_value = options_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setListItemGroupOptions(self, static_cast<Opt_ListItemGroupOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupInterface_setListItemGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemGroupAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListDividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ListDividerOptions_serializer::read(thisDeserializer);
        }
        Opt_ListDividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setDivider(self, static_cast<Opt_ListDividerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemGroupAttribute_setChildrenMainSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChildrenMainSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ChildrenMainSize>(ChildrenMainSize_serializer::read(thisDeserializer));
        }
        Opt_ChildrenMainSize value_value = value_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setChildrenMainSize(self, static_cast<Opt_ChildrenMainSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupAttribute_setChildrenMainSize, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LoadingProgress_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLoadingProgressModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LoadingProgress_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LoadingProgressInterface_setLoadingProgressOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getLoadingProgressModifier()->setLoadingProgressOptions(self);
}
KOALA_INTEROP_DIRECT_V1(LoadingProgressInterface_setLoadingProgressOptions, Ark_NativePointer)
void impl_LoadingProgressAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LoadingProgressAttribute_setEnableLoading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setEnableLoading(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_setEnableLoading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LoadingProgressAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Marquee_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMarqueeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Marquee_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MarqueeInterface_setMarqueeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_MarqueeOptions options_value = MarqueeOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getMarqueeModifier()->setMarqueeOptions(self, static_cast<Ark_MarqueeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeInterface_setMarqueeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setAllowScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setAllowScale(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setAllowScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontFamily(self, static_cast<Opt_Union_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setMarqueeUpdateStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarqueeUpdateStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_MarqueeUpdateStrategy>(thisDeserializer.readInt32());
        }
        Opt_MarqueeUpdateStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setMarqueeUpdateStrategy(self, static_cast<Opt_MarqueeUpdateStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setMarqueeUpdateStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setOnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setOnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setOnBounce(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnBounce(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setOnBounce, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnFinish(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MediaCachedImage_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMediaCachedImageModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MediaCachedImage_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MediaCachedImageInterface_setMediaCachedImageOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(DrawableDescriptor_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 3) {
            src_value_buf.selector = 3;
            src_value_buf.value3 = ASTCResource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource src_value = static_cast<Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource>(src_value_buf);;
        GetNodeModifiers()->getMediaCachedImageModifier()->setMediaCachedImageOptions(self, static_cast<Ark_Union_Image_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource*>(&src_value));
}
KOALA_INTEROP_DIRECT_V3(MediaCachedImageInterface_setMediaCachedImageOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Menu_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Menu_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuInterface_setMenuOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getMenuModifier()->setMenuOptions(self);
}
KOALA_INTEROP_DIRECT_V1(MenuInterface_setMenuOptions, Ark_NativePointer)
void impl_MenuAttribute_setFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_setRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_BorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_BorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Dimension value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Dimension>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = BorderRadiuses_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_BorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_BorderRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setRadius(self, static_cast<Opt_Union_Dimension_BorderRadiuses*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_setMenuItemDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setMenuItemDivider(self, static_cast<Opt_DividerStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setMenuItemDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_setMenuItemGroupDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setMenuItemGroupDivider(self, static_cast<Opt_DividerStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setMenuItemGroupDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_setSubMenuExpandingMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SubMenuExpandingMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SubMenuExpandingMode>(thisDeserializer.readInt32());
        }
        Opt_SubMenuExpandingMode value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setSubMenuExpandingMode(self, static_cast<Opt_SubMenuExpandingMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_setSubMenuExpandingMode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MenuItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MenuItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuItemInterface_setMenuItemOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_MenuItemOptions_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_MenuItemOptions_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = MenuItemOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_MenuItemOptions_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_MenuItemOptions_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setMenuItemOptions(self, static_cast<Opt_Union_MenuItemOptions_CustomBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemInterface_setMenuItemOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setSelected(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setSelectIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readBoolean();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setSelectIcon(self, static_cast<Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setSelectIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setOnChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setContentFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setContentFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setContentFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setContentFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setContentFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setContentFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setLabelFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setLabelFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setLabelFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_setLabelFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setLabelFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_setLabelFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getMenuItemModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MenuItemGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuItemGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MenuItemGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuItemGroupInterface_setMenuItemGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuItemGroupOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MenuItemGroupOptions_serializer::read(thisDeserializer);
        }
        Opt_MenuItemGroupOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemGroupModifier()->setMenuItemGroupOptions(self, static_cast<Opt_MenuItemGroupOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(MenuItemGroupInterface_setMenuItemGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavDestination_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavDestinationModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(NavDestination_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavDestinationInterface_setNavDestinationOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavDestinationModifier()->setNavDestinationOptions(self);
}
KOALA_INTEROP_DIRECT_V1(NavDestinationInterface_setNavDestinationOptions, Ark_NativePointer)
void impl_NavDestinationAttribute_setHideTitleBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideTitleBar0(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setHideTitleBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setHideBackButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideBackButton(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setHideBackButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnShown(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnShown(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnShown, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnHidden(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnBackPressed(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean))))};
        }
        Opt_Callback_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnBackPressed(self, static_cast<Opt_Callback_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnBackPressed, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Opt_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Object_Void))))};
        }
        Opt_Callback_Opt_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnResult(self, static_cast<Opt_Callback_Opt_Object_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavDestinationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_NavDestinationMode>(thisDeserializer.readInt32());
        }
        Opt_NavDestinationMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMode(self, static_cast<Opt_NavDestinationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setBackButtonIcon0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBackButtonIcon0(self, static_cast<Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setBackButtonIcon0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setMenus0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = NavigationMenuItem_serializer::read(thisDeserializer);
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMenus0(self, static_cast<Opt_Union_Array_NavigationMenuItem_CustomBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setMenus0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationContext_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NavDestinationContext value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationContext_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavDestinationContext value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationContext_Void))))};
        }
        Opt_Callback_NavDestinationContext_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnReady(self, static_cast<Opt_Callback_NavDestinationContext_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnWillAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillAppear(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnWillAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnWillDisappear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillDisappear(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnWillDisappear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnWillShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillShow(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnWillShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnWillHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillHide(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnWillHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setSystemBarStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_window_SystemBarStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = window_SystemBarStyle_serializer::read(thisDeserializer);
        }
        Opt_window_SystemBarStyle value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setSystemBarStyle(self, static_cast<Opt_window_SystemBarStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setSystemBarStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setRecoverable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setRecoverable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setRecoverable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setSystemTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationSystemTransitionType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_NavigationSystemTransitionType>(thisDeserializer.readInt32());
        }
        Opt_NavigationSystemTransitionType value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setSystemTransition(self, static_cast<Opt_NavigationSystemTransitionType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setSystemTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setBindToScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Scroller value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Scroller value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Scroller>(Scroller_serializer::read(thisDeserializer));
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Scroller value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBindToScrollable(self, static_cast<Opt_Array_Scroller*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setBindToScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setBindToNestedScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_NestedScrollInfo value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_NestedScrollInfo value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = NestedScrollInfo_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_NestedScrollInfo value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBindToNestedScrollable(self, static_cast<Opt_Array_NestedScrollInfo*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setBindToNestedScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnActive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationActiveReason_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationActiveReason_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationActiveReason_Void))))};
        }
        Opt_Callback_NavDestinationActiveReason_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnActive(self, static_cast<Opt_Callback_NavDestinationActiveReason_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnActive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnInactive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationActiveReason_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationActiveReason_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavDestinationActiveReason value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationActiveReason_Void))))};
        }
        Opt_Callback_NavDestinationActiveReason_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnInactive(self, static_cast<Opt_Callback_NavDestinationActiveReason_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnInactive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setCustomTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavDestinationTransitionDelegate value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_NavDestinationTransitionDelegate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_NavDestinationTransitionDelegate))))};
        }
        Opt_NavDestinationTransitionDelegate value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setCustomTransition(self, static_cast<Opt_NavDestinationTransitionDelegate*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setCustomTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setOnNewParam(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Opt_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Object_Void))))};
        }
        Opt_Callback_Opt_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnNewParam(self, static_cast<Opt_Callback_Opt_Object_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setOnNewParam, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setPreferredOrientation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomObject value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
        }
        Opt_CustomObject value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setPreferredOrientation(self, static_cast<Opt_CustomObject*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setPreferredOrientation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setEnableNavigationIndicator(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setEnableNavigationIndicator(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setEnableNavigationIndicator, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setTitle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = NavDestinationCommonTitle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = NavDestinationCustomTitle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 4) {
                value_value_buf_.selector = 4;
                value_value_buf_.value4 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource>(value_value_buf_);
        }
        Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationTitleOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationTitleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setTitle(self, static_cast<Opt_Union_String_CustomBuilder_NavDestinationCommonTitle_NavDestinationCustomTitle_Resource*>(&value_value), static_cast<Opt_NavigationTitleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setTitle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setHideTitleBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((hide_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideTitleBar1(self, static_cast<Opt_Boolean*>(&hide_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setHideTitleBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setBackButtonIcon1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto icon_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value_buf = {};
        icon_value_buf.tag = icon_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((icon_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 icon_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value_buf_ = {};
            icon_value_buf_.selector = icon_value_buf__selector;
            if (icon_value_buf__selector == 0) {
                icon_value_buf_.selector = 0;
                const Ark_Int8 icon_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr icon_value_buf__u = {};
                icon_value_buf__u.selector = icon_value_buf__u_selector;
                if (icon_value_buf__u_selector == 0) {
                    icon_value_buf__u.selector = 0;
                    icon_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (icon_value_buf__u_selector == 1) {
                    icon_value_buf__u.selector = 1;
                    icon_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for icon_value_buf__u has to be chosen through deserialisation.");
                }
                icon_value_buf_.value0 = static_cast<Ark_ResourceStr>(icon_value_buf__u);
            }
            else if (icon_value_buf__selector == 1) {
                icon_value_buf_.selector = 1;
                icon_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else if (icon_value_buf__selector == 2) {
                icon_value_buf_.selector = 2;
                icon_value_buf_.value2 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for icon_value_buf_ has to be chosen through deserialisation.");
            }
            icon_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier>(icon_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value = icon_value_buf;;
        const auto accessibilityText_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr accessibilityText_value_buf = {};
        accessibilityText_value_buf.tag = accessibilityText_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((accessibilityText_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 accessibilityText_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr accessibilityText_value_buf_ = {};
            accessibilityText_value_buf_.selector = accessibilityText_value_buf__selector;
            if (accessibilityText_value_buf__selector == 0) {
                accessibilityText_value_buf_.selector = 0;
                accessibilityText_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (accessibilityText_value_buf__selector == 1) {
                accessibilityText_value_buf_.selector = 1;
                accessibilityText_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for accessibilityText_value_buf_ has to be chosen through deserialisation.");
            }
            accessibilityText_value_buf.value = static_cast<Ark_ResourceStr>(accessibilityText_value_buf_);
        }
        Opt_ResourceStr accessibilityText_value = accessibilityText_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBackButtonIcon1(self, static_cast<Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier*>(&icon_value), static_cast<Opt_ResourceStr*>(&accessibilityText_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setBackButtonIcon1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setMenus1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto items_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf = {};
        items_value_buf.tag = items_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((items_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 items_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf_ = {};
            items_value_buf_.selector = items_value_buf__selector;
            if (items_value_buf__selector == 0) {
                items_value_buf_.selector = 0;
                const Ark_Int32 items_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem items_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(items_value_buf__u)>::type,
        std::decay<decltype(*items_value_buf__u.array)>::type>(&items_value_buf__u, items_value_buf__u_length);
                for (int items_value_buf__u_i = 0; items_value_buf__u_i < items_value_buf__u_length; items_value_buf__u_i++) {
                    items_value_buf__u.array[items_value_buf__u_i] = NavigationMenuItem_serializer::read(thisDeserializer);
                }
                items_value_buf_.value0 = items_value_buf__u;
            }
            else if (items_value_buf__selector == 1) {
                items_value_buf_.selector = 1;
                items_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for items_value_buf_ has to be chosen through deserialisation.");
            }
            items_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(items_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value = items_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMenus1(self, static_cast<Opt_Union_Array_NavigationMenuItem_CustomBuilder*>(&items_value), static_cast<Opt_NavigationMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setMenus1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setToolbarConfiguration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto toolbarParam_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value_buf = {};
        toolbarParam_value_buf.tag = toolbarParam_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((toolbarParam_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 toolbarParam_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value_buf_ = {};
            toolbarParam_value_buf_.selector = toolbarParam_value_buf__selector;
            if (toolbarParam_value_buf__selector == 0) {
                toolbarParam_value_buf_.selector = 0;
                const Ark_Int32 toolbarParam_value_buf__u_length = thisDeserializer.readInt32();
                Array_ToolbarItem toolbarParam_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(toolbarParam_value_buf__u)>::type,
        std::decay<decltype(*toolbarParam_value_buf__u.array)>::type>(&toolbarParam_value_buf__u, toolbarParam_value_buf__u_length);
                for (int toolbarParam_value_buf__u_i = 0; toolbarParam_value_buf__u_i < toolbarParam_value_buf__u_length; toolbarParam_value_buf__u_i++) {
                    toolbarParam_value_buf__u.array[toolbarParam_value_buf__u_i] = ToolbarItem_serializer::read(thisDeserializer);
                }
                toolbarParam_value_buf_.value0 = toolbarParam_value_buf__u;
            }
            else if (toolbarParam_value_buf__selector == 1) {
                toolbarParam_value_buf_.selector = 1;
                toolbarParam_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for toolbarParam_value_buf_ has to be chosen through deserialisation.");
            }
            toolbarParam_value_buf.value = static_cast<Ark_Union_Array_ToolbarItem_CustomBuilder>(toolbarParam_value_buf_);
        }
        Opt_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value = toolbarParam_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationToolbarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationToolbarOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationToolbarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setToolbarConfiguration(self, static_cast<Opt_Union_Array_ToolbarItem_CustomBuilder*>(&toolbarParam_value), static_cast<Opt_NavigationToolbarOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setToolbarConfiguration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setHideToolBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((hide_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideToolBar(self, static_cast<Opt_Boolean*>(&hide_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setHideToolBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setIgnoreLayoutSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((types_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_LayoutSafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_LayoutSafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((edges_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_LayoutSafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_LayoutSafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setIgnoreLayoutSafeArea(self, static_cast<Opt_Array_LayoutSafeAreaType*>(&types_value), static_cast<Opt_Array_LayoutSafeAreaEdge*>(&edges_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setIgnoreLayoutSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_setEnableStatusBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto enabled_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean enabled_value_buf = {};
        enabled_value_buf.tag = enabled_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((enabled_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            enabled_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean enabled_value = enabled_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setEnableStatusBar(self, static_cast<Opt_Boolean*>(&enabled_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_setEnableStatusBar, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Navigation_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavigationModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Navigation_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavigationInterface_setNavigationOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavigationModifier()->setNavigationOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(NavigationInterface_setNavigationOptions0, Ark_NativePointer)
void impl_NavigationInterface_setNavigationOptions1(Ark_NativePointer thisPtr, Ark_NativePointer pathInfos) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavigationModifier()->setNavigationOptions1(self, static_cast<Ark_NavPathStack>(pathInfos));
}
KOALA_INTEROP_DIRECT_V2(NavigationInterface_setNavigationOptions1, Ark_NativePointer, Ark_NativePointer)
void impl_NavigationAttribute_setNavBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setNavBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setNavBarPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavBarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_NavBarPosition>(thisDeserializer.readInt32());
        }
        Opt_NavBarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarPosition(self, static_cast<Opt_NavBarPosition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setNavBarPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setNavBarWidthRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Tuple_Dimension_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            Ark_Tuple_Dimension_Dimension value_value_buf_ = {};
            const Ark_Int8 value_value_buf__value0_buf_selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf__value0_buf = {};
            value_value_buf__value0_buf.selector = value_value_buf__value0_buf_selector;
            if (value_value_buf__value0_buf_selector == 0) {
                value_value_buf__value0_buf.selector = 0;
                value_value_buf__value0_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value0_buf_selector == 1) {
                value_value_buf__value0_buf.selector = 1;
                value_value_buf__value0_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value0_buf_selector == 2) {
                value_value_buf__value0_buf.selector = 2;
                value_value_buf__value0_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value0_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value0 = static_cast<Ark_Dimension>(value_value_buf__value0_buf);
            const Ark_Int8 value_value_buf__value1_buf_selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf__value1_buf = {};
            value_value_buf__value1_buf.selector = value_value_buf__value1_buf_selector;
            if (value_value_buf__value1_buf_selector == 0) {
                value_value_buf__value1_buf.selector = 0;
                value_value_buf__value1_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__value1_buf_selector == 1) {
                value_value_buf__value1_buf.selector = 1;
                value_value_buf__value1_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__value1_buf_selector == 2) {
                value_value_buf__value1_buf.selector = 2;
                value_value_buf__value1_buf.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf__value1_buf has to be chosen through deserialisation.");
            }
            value_value_buf_.value1 = static_cast<Ark_Dimension>(value_value_buf__value1_buf);
            value_value_buf.value = value_value_buf_;
        }
        Opt_Tuple_Dimension_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarWidthRange(self, static_cast<Opt_Tuple_Dimension_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setNavBarWidthRange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setMinContentWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMinContentWidth(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setMinContentWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_NavigationMode>(thisDeserializer.readInt32());
        }
        Opt_NavigationMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMode(self, static_cast<Opt_NavigationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setBackButtonIcon0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setBackButtonIcon0(self, static_cast<Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setBackButtonIcon0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideNavBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideNavBar(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideNavBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideTitleBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideTitleBar0(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideTitleBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideBackButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideBackButton(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideBackButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setTitleMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_NavigationTitleMode>(thisDeserializer.readInt32());
        }
        Opt_NavigationTitleMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setTitleMode(self, static_cast<Opt_NavigationTitleMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setTitleMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setMenus0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = NavigationMenuItem_serializer::read(thisDeserializer);
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMenus0(self, static_cast<Opt_Union_Array_NavigationMenuItem_CustomBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setMenus0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideToolBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideToolBar0(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideToolBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setEnableToolBarAdaptation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableToolBarAdaptation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setEnableToolBarAdaptation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setOnTitleModeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavigationTitleMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavigationTitleMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavigationTitleMode_Void))))};
        }
        Opt_Callback_NavigationTitleMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnTitleModeChange(self, static_cast<Opt_Callback_NavigationTitleMode_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setOnTitleModeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setOnNavBarStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnNavBarStateChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setOnNavBarStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setOnNavigationModeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavigationMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavigationMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavigationMode_Void))))};
        }
        Opt_Callback_NavigationMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnNavigationModeChange(self, static_cast<Opt_Callback_NavigationMode_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setOnNavigationModeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setNavDestination(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PageMapBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PageMapBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PageMapBuilder))))};
        }
        Opt_PageMapBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavDestination(self, static_cast<Opt_PageMapBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setNavDestination, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setCustomNavContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_NavigationAttribute_customNavContentTransition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_NavigationAttribute_customNavContentTransition)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_NavigationAttribute_customNavContentTransition))))};
        }
        Opt_Type_NavigationAttribute_customNavContentTransition value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setCustomNavContentTransition(self, static_cast<Opt_Type_NavigationAttribute_customNavContentTransition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setCustomNavContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setSystemBarStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_window_SystemBarStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = window_SystemBarStyle_serializer::read(thisDeserializer);
        }
        Opt_window_SystemBarStyle value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setSystemBarStyle(self, static_cast<Opt_window_SystemBarStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setSystemBarStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setRecoverable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setRecoverable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setRecoverable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setEnableDragBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableDragBar(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setEnableDragBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setEnableModeChangeAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableModeChangeAnimation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setEnableModeChangeAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setBackButtonIcon1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto icon_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value_buf = {};
        icon_value_buf.tag = icon_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((icon_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 icon_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value_buf_ = {};
            icon_value_buf_.selector = icon_value_buf__selector;
            if (icon_value_buf__selector == 0) {
                icon_value_buf_.selector = 0;
                icon_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (icon_value_buf__selector == 1) {
                icon_value_buf_.selector = 1;
                icon_value_buf_.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
            }
            else if (icon_value_buf__selector == 2) {
                icon_value_buf_.selector = 2;
                icon_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else if (icon_value_buf__selector == 3) {
                icon_value_buf_.selector = 3;
                icon_value_buf_.value3 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for icon_value_buf_ has to be chosen through deserialisation.");
            }
            icon_value_buf.value = static_cast<Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier>(icon_value_buf_);
        }
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value = icon_value_buf;;
        const auto accessibilityText_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr accessibilityText_value_buf = {};
        accessibilityText_value_buf.tag = accessibilityText_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((accessibilityText_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 accessibilityText_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr accessibilityText_value_buf_ = {};
            accessibilityText_value_buf_.selector = accessibilityText_value_buf__selector;
            if (accessibilityText_value_buf__selector == 0) {
                accessibilityText_value_buf_.selector = 0;
                accessibilityText_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (accessibilityText_value_buf__selector == 1) {
                accessibilityText_value_buf_.selector = 1;
                accessibilityText_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for accessibilityText_value_buf_ has to be chosen through deserialisation.");
            }
            accessibilityText_value_buf.value = static_cast<Ark_ResourceStr>(accessibilityText_value_buf_);
        }
        Opt_ResourceStr accessibilityText_value = accessibilityText_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setBackButtonIcon1(self, static_cast<Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier*>(&icon_value), static_cast<Opt_ResourceStr*>(&accessibilityText_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setBackButtonIcon1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setTitle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = NavigationCommonTitle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = NavigationCustomTitle_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle>(value_value_buf_);
        }
        Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationTitleOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationTitleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setTitle(self, static_cast<Opt_Union_ResourceStr_CustomBuilder_NavigationCommonTitle_NavigationCustomTitle*>(&value_value), static_cast<Opt_NavigationTitleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setTitle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideTitleBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((hide_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideTitleBar1(self, static_cast<Opt_Boolean*>(&hide_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideTitleBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setMenus1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto items_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf = {};
        items_value_buf.tag = items_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((items_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 items_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf_ = {};
            items_value_buf_.selector = items_value_buf__selector;
            if (items_value_buf__selector == 0) {
                items_value_buf_.selector = 0;
                const Ark_Int32 items_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem items_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(items_value_buf__u)>::type,
        std::decay<decltype(*items_value_buf__u.array)>::type>(&items_value_buf__u, items_value_buf__u_length);
                for (int items_value_buf__u_i = 0; items_value_buf__u_i < items_value_buf__u_length; items_value_buf__u_i++) {
                    items_value_buf__u.array[items_value_buf__u_i] = NavigationMenuItem_serializer::read(thisDeserializer);
                }
                items_value_buf_.value0 = items_value_buf__u;
            }
            else if (items_value_buf__selector == 1) {
                items_value_buf_.selector = 1;
                items_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for items_value_buf_ has to be chosen through deserialisation.");
            }
            items_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(items_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value = items_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMenus1(self, static_cast<Opt_Union_Array_NavigationMenuItem_CustomBuilder*>(&items_value), static_cast<Opt_NavigationMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setMenus1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setToolbarConfiguration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_ToolbarItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_ToolbarItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ToolbarItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = ToolbarItem_serializer::read(thisDeserializer);
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_ToolbarItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_ToolbarItem_CustomBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationToolbarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationToolbarOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationToolbarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setToolbarConfiguration(self, static_cast<Opt_Union_Array_ToolbarItem_CustomBuilder*>(&value_value), static_cast<Opt_NavigationToolbarOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setToolbarConfiguration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setHideToolBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((hide_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideToolBar1(self, static_cast<Opt_Boolean*>(&hide_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setHideToolBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_setIgnoreLayoutSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((types_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_LayoutSafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_LayoutSafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((edges_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_LayoutSafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_LayoutSafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setIgnoreLayoutSafeArea(self, static_cast<Opt_Array_LayoutSafeAreaType*>(&types_value), static_cast<Opt_Array_LayoutSafeAreaEdge*>(&edges_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_setIgnoreLayoutSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NodeContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNodeContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(NodeContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NodeContainerInterface_setNodeContainerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NodeController controller_value = NodeController_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getNodeContainerModifier()->setNodeContainerOptions(self, static_cast<Ark_NodeController*>(&controller_value));
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setNodeContainerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Path_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPathModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Path_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PathInterface_setPathOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PathOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PathOptions_serializer::read(thisDeserializer);
        }
        Opt_PathOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPathModifier()->setPathOptions(self, static_cast<Opt_PathOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(PathInterface_setPathOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PatternLock_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPatternLockModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(PatternLock_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PatternLockInterface_setPatternLockOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PatternLockController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((controller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            controller_value_buf.value = static_cast<Ark_PatternLockController>(PatternLockController_serializer::read(thisDeserializer));
        }
        Opt_PatternLockController controller_value = controller_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPatternLockOptions(self, static_cast<Opt_PatternLockController*>(&controller_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockInterface_setPatternLockOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setSideLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSideLength(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setSideLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setCircleRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setCircleRadius(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setCircleRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setRegularColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setRegularColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setRegularColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setActiveColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setActiveColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setActiveColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setPathColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPathColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setPathColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setPathStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPathStrokeWidth(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setPathStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setOnPatternComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Array_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_Number input)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Array_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_Number input)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Array_Number_Void))))};
        }
        Opt_Callback_Array_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setOnPatternComplete(self, static_cast<Opt_Callback_Array_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setOnPatternComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setAutoReset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setAutoReset(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setAutoReset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setOnDotConnect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setOnDotConnect(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setOnDotConnect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setActivateCircleStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CircleStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = CircleStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_CircleStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setActivateCircleStyle(self, static_cast<Opt_CircleStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setActivateCircleStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_setSkipUnselectedPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSkipUnselectedPoint(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_setSkipUnselectedPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PluginComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPluginComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(PluginComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PluginComponentInterface_setPluginComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_PluginComponentOptions options_value = PluginComponentOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getPluginComponentModifier()->setPluginComponentOptions(self, static_cast<Ark_PluginComponentOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(PluginComponentInterface_setPluginComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PluginComponentAttribute_setOnComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getPluginComponentModifier()->setOnComplete(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PluginComponentAttribute_setOnComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PluginComponentAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PluginErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PluginErrorData info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PluginErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PluginErrorData info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PluginErrorCallback))))};
        }
        Opt_PluginErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getPluginComponentModifier()->setOnError(self, static_cast<Opt_PluginErrorCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PluginComponentAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Polygon_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPolygonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Polygon_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PolygonInterface_setPolygonOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PolygonOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PolygonOptions_serializer::read(thisDeserializer);
        }
        Opt_PolygonOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPolygonModifier()->setPolygonOptions(self, static_cast<Opt_PolygonOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(PolygonInterface_setPolygonOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PolygonAttribute_setPoints(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ShapePoint value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ShapePoint value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                Ark_ShapePoint value_value_buf__buf = {};
                const Ark_Int8 value_value_buf__buf_value0_buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf_value0_buf = {};
                value_value_buf__buf_value0_buf.selector = value_value_buf__buf_value0_buf_selector;
                if (value_value_buf__buf_value0_buf_selector == 0) {
                    value_value_buf__buf_value0_buf.selector = 0;
                    value_value_buf__buf_value0_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_value0_buf_selector == 1) {
                    value_value_buf__buf_value0_buf.selector = 1;
                    value_value_buf__buf_value0_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_value0_buf_selector == 2) {
                    value_value_buf__buf_value0_buf.selector = 2;
                    value_value_buf__buf_value0_buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf_value0_buf has to be chosen through deserialisation.");
                }
                value_value_buf__buf.value0 = static_cast<Ark_Length>(value_value_buf__buf_value0_buf);
                const Ark_Int8 value_value_buf__buf_value1_buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf_value1_buf = {};
                value_value_buf__buf_value1_buf.selector = value_value_buf__buf_value1_buf_selector;
                if (value_value_buf__buf_value1_buf_selector == 0) {
                    value_value_buf__buf_value1_buf.selector = 0;
                    value_value_buf__buf_value1_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_value1_buf_selector == 1) {
                    value_value_buf__buf_value1_buf.selector = 1;
                    value_value_buf__buf_value1_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_value1_buf_selector == 2) {
                    value_value_buf__buf_value1_buf.selector = 2;
                    value_value_buf__buf_value1_buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf_value1_buf has to be chosen through deserialisation.");
                }
                value_value_buf__buf.value1 = static_cast<Ark_Length>(value_value_buf__buf_value1_buf);
                value_value_buf_.array[value_value_buf__i] = value_value_buf__buf;
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ShapePoint value_value = value_value_buf;;
        GetNodeModifiers()->getPolygonModifier()->setPoints(self, static_cast<Opt_Array_ShapePoint*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PolygonAttribute_setPoints, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Polyline_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPolylineModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Polyline_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PolylineInterface_setPolylineOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PolylineOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PolylineOptions_serializer::read(thisDeserializer);
        }
        Opt_PolylineOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPolylineModifier()->setPolylineOptions(self, static_cast<Opt_PolylineOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(PolylineInterface_setPolylineOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PolylineAttribute_setPoints(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ShapePoint value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ShapePoint value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                Ark_ShapePoint value_value_buf__buf = {};
                const Ark_Int8 value_value_buf__buf_value0_buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf_value0_buf = {};
                value_value_buf__buf_value0_buf.selector = value_value_buf__buf_value0_buf_selector;
                if (value_value_buf__buf_value0_buf_selector == 0) {
                    value_value_buf__buf_value0_buf.selector = 0;
                    value_value_buf__buf_value0_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_value0_buf_selector == 1) {
                    value_value_buf__buf_value0_buf.selector = 1;
                    value_value_buf__buf_value0_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_value0_buf_selector == 2) {
                    value_value_buf__buf_value0_buf.selector = 2;
                    value_value_buf__buf_value0_buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf_value0_buf has to be chosen through deserialisation.");
                }
                value_value_buf__buf.value0 = static_cast<Ark_Length>(value_value_buf__buf_value0_buf);
                const Ark_Int8 value_value_buf__buf_value1_buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf_value1_buf = {};
                value_value_buf__buf_value1_buf.selector = value_value_buf__buf_value1_buf_selector;
                if (value_value_buf__buf_value1_buf_selector == 0) {
                    value_value_buf__buf_value1_buf.selector = 0;
                    value_value_buf__buf_value1_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_value1_buf_selector == 1) {
                    value_value_buf__buf_value1_buf.selector = 1;
                    value_value_buf__buf_value1_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_value1_buf_selector == 2) {
                    value_value_buf__buf_value1_buf.selector = 2;
                    value_value_buf__buf_value1_buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf_value1_buf has to be chosen through deserialisation.");
                }
                value_value_buf__buf.value1 = static_cast<Ark_Length>(value_value_buf__buf_value1_buf);
                value_value_buf_.array[value_value_buf__i] = value_value_buf__buf;
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ShapePoint value_value = value_value_buf;;
        GetNodeModifiers()->getPolylineModifier()->setPoints(self, static_cast<Opt_Array_ShapePoint*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(PolylineAttribute_setPoints, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Progress_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getProgressModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Progress_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ProgressInterface_setProgressOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ProgressOptions options_value = ProgressOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getProgressModifier()->setProgressOptions(self, static_cast<Ark_ProgressOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressInterface_setProgressOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_setValue(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setValue(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_setValue, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setColor(self, static_cast<Opt_Union_ResourceColor_LinearGradient*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_setStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = LinearStyleOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = RingStyleOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = CapsuleStyleOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = ProgressStyleOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions>(value_value_buf_);
        }
        Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setStyle(self, static_cast<Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_setPrivacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setPrivacySensitive(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_setPrivacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_QRCode_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getQRCodeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(QRCode_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_QRCodeInterface_setQRCodeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr value_value = static_cast<Ark_ResourceStr>(value_value_buf);;
        GetNodeModifiers()->getQRCodeModifier()->setQRCodeOptions(self, static_cast<Ark_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(QRCodeInterface_setQRCodeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_QRCodeAttribute_setColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_setColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_QRCodeAttribute_setBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_setBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_QRCodeAttribute_setContentOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setContentOpacity(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_setContentOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Radio_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRadioModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Radio_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RadioInterface_setRadioOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RadioOptions options_value = RadioOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRadioModifier()->setRadioOptions(self, static_cast<Ark_RadioOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RadioInterface_setRadioOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_setChecked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setChecked(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_setChecked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRadioChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isChecked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRadioChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isChecked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRadioChangeCallback))))};
        }
        Opt_OnRadioChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setOnChange(self, static_cast<Opt_OnRadioChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_setRadioStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RadioStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RadioStyle_serializer::read(thisDeserializer);
        }
        Opt_RadioStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setRadioStyle(self, static_cast<Opt_RadioStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_setRadioStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_set_onChangeEvent_checked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean checked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean checked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getRadioModifier()->set_onChangeEvent_checked(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_set_onChangeEvent_checked, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Rating_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRatingModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Rating_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RatingInterface_setRatingOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RatingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = RatingOptions_serializer::read(thisDeserializer);
        }
        Opt_RatingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setRatingOptions(self, static_cast<Opt_RatingOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RatingInterface_setRatingOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_setStars(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStars(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_setStars, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_setStepSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStepSize(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_setStepSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_setStarStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StarStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = StarStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_StarStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStarStyle(self, static_cast<Opt_StarStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_setStarStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRatingChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRatingChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRatingChangeCallback))))};
        }
        Opt_OnRatingChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setOnChange(self, static_cast<Opt_OnRatingChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_set_onChangeEvent_rating(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getRatingModifier()->set_onChangeEvent_rating(self, static_cast<Callback_Opt_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_set_onChangeEvent_rating, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Rect_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRectModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Rect_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RectInterface_setRectOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RectOptions_RoundedRectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RectOptions_RoundedRectOptions options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = RectOptions_serializer::read(thisDeserializer);
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = RoundedRectOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RectOptions_RoundedRectOptions>(options_value_buf_);
        }
        Opt_Union_RectOptions_RoundedRectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRectOptions(self, static_cast<Opt_Union_RectOptions_RoundedRectOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RectInterface_setRectOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RectAttribute_setRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Array_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Array_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Union_Number_String value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    const Ark_Int8 value_value_buf__u_buf_selector = thisDeserializer.readInt8();
                    Ark_Union_Number_String value_value_buf__u_buf = {};
                    value_value_buf__u_buf.selector = value_value_buf__u_buf_selector;
                    if (value_value_buf__u_buf_selector == 0) {
                        value_value_buf__u_buf.selector = 0;
                        value_value_buf__u_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    }
                    else if (value_value_buf__u_buf_selector == 1) {
                        value_value_buf__u_buf.selector = 1;
                        value_value_buf__u_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__u_buf has to be chosen through deserialisation.");
                    }
                    value_value_buf__u.array[value_value_buf__u_i] = static_cast<Ark_Union_Number_String>(value_value_buf__u_buf);
                }
                value_value_buf_.value2 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Array_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String_Array_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRadius(self, static_cast<Opt_Union_Number_String_Array_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RectAttribute_setRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Refresh_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRefreshModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Refresh_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RefreshInterface_setRefreshOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RefreshOptions value_value = RefreshOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRefreshModifier()->setRefreshOptions(self, static_cast<Ark_RefreshOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshInterface_setRefreshOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setOnStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RefreshStatus_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_RefreshStatus state)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RefreshStatus_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_RefreshStatus state)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RefreshStatus_Void))))};
        }
        Opt_Callback_RefreshStatus_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnStateChange(self, static_cast<Opt_Callback_RefreshStatus_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setOnStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setOnRefreshing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnRefreshing(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setOnRefreshing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setRefreshOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setRefreshOffset(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setRefreshOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setPullToRefresh(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setPullToRefresh(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setPullToRefresh, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setOnOffsetChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnOffsetChange(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setOnOffsetChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_setPullDownRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setPullDownRatio(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_setPullDownRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_set_onChangeEvent_refreshing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean refreshing)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean refreshing)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};;
        GetNodeModifiers()->getRefreshModifier()->set_onChangeEvent_refreshing(self, static_cast<Callback_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_set_onChangeEvent_refreshing, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RelativeContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRelativeContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RelativeContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RelativeContainerInterface_setRelativeContainerOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRelativeContainerModifier()->setRelativeContainerOptions(self);
}
KOALA_INTEROP_DIRECT_V1(RelativeContainerInterface_setRelativeContainerOptions, Ark_NativePointer)
void impl_RelativeContainerAttribute_setGuideLine(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_GuideLineStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_GuideLineStyle value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = GuideLineStyle_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_GuideLineStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRelativeContainerModifier()->setGuideLine(self, static_cast<Opt_Array_GuideLineStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RelativeContainerAttribute_setGuideLine, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RelativeContainerAttribute_setBarrier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_BarrierStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_BarrierStyle value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = BarrierStyle_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_BarrierStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRelativeContainerModifier()->setBarrier(self, static_cast<Opt_Array_BarrierStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RelativeContainerAttribute_setBarrier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RemoteWindow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRemoteWindowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RemoteWindow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RemoteWindowInterface_setRemoteWindowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_WindowAnimationTarget target_value = WindowAnimationTarget_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRemoteWindowModifier()->setRemoteWindowOptions(self, static_cast<Ark_WindowAnimationTarget*>(&target_value));
}
KOALA_INTEROP_DIRECT_V3(RemoteWindowInterface_setRemoteWindowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichEditor_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRichEditorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RichEditor_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RichEditorInterface_setRichEditorOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RichEditorOptions value_value = RichEditorOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRichEditorModifier()->setRichEditorOptions0(self, static_cast<Ark_RichEditorOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorInterface_setRichEditorOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorInterface_setRichEditorOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RichEditorStyledStringOptions options_value = RichEditorStyledStringOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRichEditorModifier()->setRichEditorOptions1(self, static_cast<Ark_RichEditorStyledStringOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorInterface_setRichEditorOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnReady(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorSelection_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorSelection value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorSelection_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorSelection value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorSelection_Void))))};
        }
        Opt_Callback_RichEditorSelection_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSelect(self, static_cast<Opt_Callback_RichEditorSelection_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorRange_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorRange value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorRange_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorRange value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorRange_Void))))};
        }
        Opt_Callback_RichEditorRange_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSelectionChange(self, static_cast<Opt_Callback_RichEditorRange_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setAboutToIMEInput(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorInsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorInsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorInsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorInsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorInsertValue_Boolean))))};
        }
        Opt_Callback_RichEditorInsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setAboutToIMEInput(self, static_cast<Opt_Callback_RichEditorInsertValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setAboutToIMEInput, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnIMEInputComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorTextSpanResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorTextSpanResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorTextSpanResult_Void))))};
        }
        Opt_Callback_RichEditorTextSpanResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnIMEInputComplete(self, static_cast<Opt_Callback_RichEditorTextSpanResult_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnIMEInputComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnDidIMEInput(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TextRange_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TextRange value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TextRange_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TextRange_Void))))};
        }
        Opt_Callback_TextRange_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDidIMEInput(self, static_cast<Opt_Callback_TextRange_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnDidIMEInput, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setAboutToDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorDeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorDeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorDeleteValue_Boolean))))};
        }
        Opt_Callback_RichEditorDeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setAboutToDelete(self, static_cast<Opt_Callback_RichEditorDeleteValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setAboutToDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnDeleteComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDeleteComplete(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnDeleteComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setCopyOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCopyOptions(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setCopyOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PasteEventCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PasteEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PasteEventCallback))))};
        }
        Opt_PasteEventCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnPaste(self, static_cast<Opt_PasteEventCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEnableDataDetector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableDataDetector(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEnableDataDetector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEnablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnablePreviewText(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEnablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setDataDetectorConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDataDetectorConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextDataDetectorConfig_serializer::read(thisDeserializer);
        }
        Opt_TextDataDetectorConfig value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setDataDetectorConfig(self, static_cast<Opt_TextDataDetectorConfig*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setDataDetectorConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setCaretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCaretColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setCaretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnEditingChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnEditingChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnEditingChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEnterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnterKeyType(self, static_cast<Opt_EnterKeyType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEnterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SubmitCallback))))};
        }
        Opt_SubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSubmit(self, static_cast<Opt_SubmitCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorChangeValue_Boolean))))};
        }
        Opt_Callback_RichEditorChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnWillChange(self, static_cast<Opt_Callback_RichEditorChangeValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnDidChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnDidChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnDidChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnDidChangeCallback))))};
        }
        Opt_OnDidChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDidChange(self, static_cast<Opt_OnDidChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnDidChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CutEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CutEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CutEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CutEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CutEvent_Void))))};
        }
        Opt_Callback_CutEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnCut(self, static_cast<Opt_Callback_CutEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setOnCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CopyEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CopyEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CopyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CopyEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CopyEvent_Void))))};
        }
        Opt_Callback_CopyEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnCopy(self, static_cast<Opt_Callback_CopyEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setOnCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEnableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableKeyboardOnFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEnableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setBarState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setBarState(self, static_cast<Opt_BarState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setBarState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setMaxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setMaxLength(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setMaxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setMaxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setMaxLines(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setMaxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setKeyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setKeyboardAppearance(self, static_cast<Opt_KeyboardAppearance*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setKeyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setStopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setStopBackPress(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setStopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setBindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto spanType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorSpanType spanType_value_buf = {};
        spanType_value_buf.tag = spanType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((spanType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            spanType_value_buf.value = static_cast<Ark_RichEditorSpanType>(thisDeserializer.readInt32());
        }
        Opt_RichEditorSpanType spanType_value = spanType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResponseType_RichEditorResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((responseType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 responseType_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResponseType_RichEditorResponseType responseType_value_buf_ = {};
            responseType_value_buf_.selector = responseType_value_buf__selector;
            if (responseType_value_buf__selector == 0) {
                responseType_value_buf_.selector = 0;
                responseType_value_buf_.value0 = static_cast<Ark_ResponseType>(thisDeserializer.readInt32());
            }
            else if (responseType_value_buf__selector == 1) {
                responseType_value_buf_.selector = 1;
                responseType_value_buf_.value1 = static_cast<Ark_RichEditorResponseType>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for responseType_value_buf_ has to be chosen through deserialisation.");
            }
            responseType_value_buf.value = static_cast<Ark_Union_ResponseType_RichEditorResponseType>(responseType_value_buf_);
        }
        Opt_Union_ResponseType_RichEditorResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setBindSelectionMenu(self, static_cast<Opt_RichEditorSpanType*>(&spanType_value), static_cast<Opt_CustomNodeBuilder*>(&content_value), static_cast<Opt_Union_ResponseType_RichEditorResponseType*>(&responseType_value), static_cast<Opt_SelectionMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setBindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setCustomKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = KeyboardOptions_serializer::read(thisDeserializer);
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCustomKeyboard(self, static_cast<Opt_CustomNodeBuilder*>(&value_value), static_cast<Opt_KeyboardOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setCustomKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_setPlaceholder(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PlaceholderStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((style_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            style_value_buf.value = PlaceholderStyle_serializer::read(thisDeserializer);
        }
        Opt_PlaceholderStyle style_value = style_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setPlaceholder(self, static_cast<Opt_ResourceStr*>(&value_value), static_cast<Opt_PlaceholderStyle*>(&style_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_setPlaceholder, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichText_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRichTextModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RichText_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RichTextInterface_setRichTextOptions(Ark_NativePointer thisPtr, const KStringPtr& content) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRichTextModifier()->setRichTextOptions(self, (const Ark_String*) (&content));
}
KOALA_INTEROP_V2(RichTextInterface_setRichTextOptions, Ark_NativePointer, KStringPtr)
void impl_RichTextAttribute_setOnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichTextModifier()->setOnStart(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichTextAttribute_setOnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichTextAttribute_setOnComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichTextModifier()->setOnComplete(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichTextAttribute_setOnComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RootScene_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRootSceneModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RootScene_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RootSceneInterface_setRootSceneOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RootSceneSession session_value = RootSceneSession_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getRootSceneModifier()->setRootSceneOptions(self, static_cast<Ark_RootSceneSession*>(&session_value));
}
KOALA_INTEROP_DIRECT_V3(RootSceneInterface_setRootSceneOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Row_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Row_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RowInterface_setRowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RowOptions_RowOptionsV2 options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RowOptions_RowOptionsV2 options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = RowOptions_serializer::read(thisDeserializer);
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = RowOptionsV2_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RowOptions_RowOptionsV2>(options_value_buf_);
        }
        Opt_Union_RowOptions_RowOptionsV2 options_value = options_value_buf;;
        GetNodeModifiers()->getRowModifier()->setRowOptions(self, static_cast<Opt_Union_RowOptions_RowOptionsV2*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(RowInterface_setRowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_setAlignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VerticalAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_VerticalAlign>(thisDeserializer.readInt32());
        }
        Opt_VerticalAlign value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setAlignItems(self, static_cast<Opt_VerticalAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_setAlignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_setJustifyContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FlexAlign>(thisDeserializer.readInt32());
        }
        Opt_FlexAlign value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setJustifyContent(self, static_cast<Opt_FlexAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_setJustifyContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_setPointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PointLightStyle_serializer::read(thisDeserializer);
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setPointLight(self, static_cast<Opt_PointLightStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_setPointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_setReverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setReverse(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_setReverse, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RowSplit_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRowSplitModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RowSplit_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RowSplitInterface_setRowSplitOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRowSplitModifier()->setRowSplitOptions(self);
}
KOALA_INTEROP_DIRECT_V1(RowSplitInterface_setRowSplitOptions, Ark_NativePointer)
void impl_RowSplitAttribute_setResizeable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRowSplitModifier()->setResizeable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RowSplitAttribute_setResizeable, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Screen_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScreenModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Screen_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScreenInterface_setScreenOptions(Ark_NativePointer thisPtr, KInteropNumber screenId) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getScreenModifier()->setScreenOptions(self, (const Ark_Number*) (&screenId));
}
KOALA_INTEROP_DIRECT_V2(ScreenInterface_setScreenOptions, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_Scroll_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Scroll_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollInterface_setScrollOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scroller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Scroller scroller_value_buf = {};
        scroller_value_buf.tag = scroller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scroller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scroller_value_buf.value = static_cast<Ark_Scroller>(Scroller_serializer::read(thisDeserializer));
        }
        Opt_Scroller scroller_value = scroller_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollOptions(self, static_cast<Opt_Scroller*>(&scroller_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollInterface_setScrollOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ScrollDirection>(thisDeserializer.readInt32());
        }
        Opt_ScrollDirection value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollable(self, static_cast<Opt_ScrollDirection*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollOnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_OffsetResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ScrollOnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_OffsetResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ScrollOnWillScrollCallback))))};
        }
        Opt_ScrollOnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnWillScroll(self, static_cast<Opt_ScrollOnWillScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollOnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ScrollOnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ScrollOnScrollCallback))))};
        }
        Opt_ScrollOnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnDidScroll(self, static_cast<Opt_ScrollOnScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnScrollEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollEdgeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_Edge side)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollEdgeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_Edge side)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollEdgeCallback))))};
        }
        Opt_OnScrollEdgeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollEdge(self, static_cast<Opt_OnScrollEdgeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnScrollEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollStart(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollStop(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setScrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBar(self, static_cast<Opt_BarState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setScrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setScrollBarColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String>(value_value_buf_);
        }
        Opt_Union_Color_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBarColor(self, static_cast<Opt_Union_Color_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setScrollBarColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setScrollBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBarWidth(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setScrollBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setOnScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollFrameBegin(self, static_cast<Opt_OnScrollFrameBeginCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setOnScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = NestedScrollOptions_serializer::read(thisDeserializer);
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setNestedScroll(self, static_cast<Opt_NestedScrollOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setEnableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEnableScrollInteraction(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setEnableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setFriction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setFriction(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setFriction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setScrollSnap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollSnapOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ScrollSnapOptions_serializer::read(thisDeserializer);
        }
        Opt_ScrollSnapOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollSnap(self, static_cast<Opt_ScrollSnapOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setScrollSnap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setEnablePaging(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEnablePaging(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setEnablePaging, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setInitialOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OffsetOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = OffsetOptions_serializer::read(thisDeserializer);
        }
        Opt_OffsetOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setInitialOffset(self, static_cast<Opt_OffsetOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setInitialOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_setEdgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto edgeEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect edgeEffect_value_buf = {};
        edgeEffect_value_buf.tag = edgeEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((edgeEffect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            edgeEffect_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect edgeEffect_value = edgeEffect_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = EdgeEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEdgeEffect(self, static_cast<Opt_EdgeEffect*>(&edgeEffect_value), static_cast<Opt_EdgeEffectOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_setEdgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScrollBar_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollBarModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ScrollBar_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollBarInterface_setScrollBarOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScrollBarOptions value_value = ScrollBarOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getScrollBarModifier()->setScrollBarOptions(self, static_cast<Ark_ScrollBarOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollBarInterface_setScrollBarOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollBarAttribute_setEnableNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollBarModifier()->setEnableNestedScroll(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ScrollBarAttribute_setEnableNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Search_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSearchModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Search_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SearchInterface_setSearchOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SearchOptions_serializer::read(thisDeserializer);
        }
        Opt_SearchOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchOptions(self, static_cast<Opt_SearchOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(SearchInterface_setSearchOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setSearchIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_IconOptions_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_IconOptions_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = IconOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = SymbolGlyphModifier_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_IconOptions_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_IconOptions_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchIcon(self, static_cast<Opt_Union_IconOptions_SymbolGlyphModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setSearchIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setCancelButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = CancelButtonOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = CancelButtonSymbolOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions>(value_value_buf_);
        }
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCancelButton(self, static_cast<Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setCancelButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setTextIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextIndent(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setTextIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnEditChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setCaretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = CaretStyle_serializer::read(thisDeserializer);
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCaretStyle(self, static_cast<Opt_CaretStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setCaretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setPlaceholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setPlaceholderColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setPlaceholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setPlaceholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setPlaceholderFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setPlaceholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setTextFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setTextFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setEnterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnterKeyType(self, static_cast<Opt_EnterKeyType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setEnterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Callback_String_Void_SearchSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Callback_String_Void_SearchSubmitCallback value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SearchSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SearchSubmitCallback))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Callback_String_Void_SearchSubmitCallback>(value_value_buf_);
        }
        Opt_Union_Callback_String_Void_SearchSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnSubmit(self, static_cast<Opt_Union_Callback_String_Void_SearchSubmitCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnChange(self, static_cast<Opt_EditableTextOnChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextSelectionChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextSelectionChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextSelectionChangeCallback))))};
        }
        Opt_OnTextSelectionChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnTextSelectionChange(self, static_cast<Opt_OnTextSelectionChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContentScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContentScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContentScrollCallback))))};
        }
        Opt_OnContentScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnContentScroll(self, static_cast<Opt_OnContentScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnCopy(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnCut(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnPasteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnPasteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnPasteCallback))))};
        }
        Opt_OnPasteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnPaste(self, static_cast<Opt_OnPasteCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setCopyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCopyOption(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setCopyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setMaxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxLength(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setMaxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setTextAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextAlign(self, static_cast<Opt_TextAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setTextAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setEnableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnableKeyboardOnFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setEnableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setSelectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSelectionMenuHidden(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setSelectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setMinFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMinFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setMinFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setMaxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setMaxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setDecoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextDecorationOptions_serializer::read(thisDeserializer);
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setDecoration(self, static_cast<Opt_TextDecorationOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setDecoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setLetterSpacing(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setLineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setLineHeight(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setLineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SearchType>(thisDeserializer.readInt32());
        }
        Opt_SearchType value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setType(self, static_cast<Opt_SearchType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setFontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setFontFeature(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setFontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillInsert(self, static_cast<Opt_Callback_InsertValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnDidInsert(self, static_cast<Opt_Callback_InsertValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillDelete(self, static_cast<Opt_Callback_DeleteValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnDidDelete(self, static_cast<Opt_Callback_DeleteValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setEnablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnablePreviewText(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setEnablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setAutoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setAutoCapitalizationMode(self, static_cast<Opt_AutoCapitalizationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setAutoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setHalfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setHalfLeading(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setHalfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setStopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setStopBackPress(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setStopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setOnWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillChange(self, static_cast<Opt_Callback_EditableTextChangeValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setOnWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setKeyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setKeyboardAppearance(self, static_cast<Opt_KeyboardAppearance*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setKeyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setSearchButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchButtonOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((option_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            option_value_buf.value = SearchButtonOptions_serializer::read(thisDeserializer);
        }
        Opt_SearchButtonOptions option_value = option_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchButton(self, static_cast<Opt_ResourceStr*>(&value_value), static_cast<Opt_SearchButtonOptions*>(&option_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setSearchButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setInputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((error_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setInputFilter(self, static_cast<Opt_ResourceStr*>(&value_value), static_cast<Opt_Callback_String_Void*>(&error_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setInputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_setCustomKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = KeyboardOptions_serializer::read(thisDeserializer);
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCustomKeyboard(self, static_cast<Opt_CustomNodeBuilder*>(&value_value), static_cast<Opt_KeyboardOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_setCustomKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_set_onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_String_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetNodeModifiers()->getSearchModifier()->set_onChangeEvent_value(self, static_cast<Callback_String_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_set_onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Select_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSelectModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Select_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SelectInterface_setSelectOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 options_value_buf_length = thisDeserializer.readInt32();
        Array_SelectOption options_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(options_value_buf)>::type,
        std::decay<decltype(*options_value_buf.array)>::type>(&options_value_buf, options_value_buf_length);
        for (int options_value_buf_i = 0; options_value_buf_i < options_value_buf_length; options_value_buf_i++) {
            options_value_buf.array[options_value_buf_i] = SelectOption_serializer::read(thisDeserializer);
        }
        Array_SelectOption options_value = options_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectOptions(self, static_cast<Array_SelectOption*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(SelectInterface_setSelectOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelected(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setValue(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceStr_String_Resource>(value_value_buf_);
        }
        Opt_Union_ResourceStr_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setValue(self, static_cast<Opt_Union_ResourceStr_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setValue, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSelectedOptionBgColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionBgColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSelectedOptionBgColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSelectedOptionFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSelectedOptionFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSelectedOptionFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSelectedOptionFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionBgColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionBgColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionBgColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOnSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSelectCallback))))};
        }
        Opt_OnSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOnSelect(self, static_cast<Opt_OnSelectCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOnSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSpace(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSpace(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSpace, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setArrowPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ArrowPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ArrowPosition>(thisDeserializer.readInt32());
        }
        Opt_ArrowPosition value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setArrowPosition(self, static_cast<Opt_ArrowPosition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setArrowPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OptionWidthMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OptionWidthMode value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Dimension value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Dimension>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_OptionWidthMode>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OptionWidthMode>(value_value_buf_);
        }
        Opt_Union_Dimension_OptionWidthMode value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionWidth(self, static_cast<Opt_Union_Dimension_OptionWidthMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionHeight(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setMenuBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setMenuBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setMenuBackgroundBlurStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundBlurStyle(self, static_cast<Opt_BlurStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setMenuBackgroundBlurStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setControlSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ControlSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ControlSize>(thisDeserializer.readInt32());
        }
        Opt_ControlSize value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setControlSize(self, static_cast<Opt_ControlSize*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setControlSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setMenuItemContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuItemContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setMenuItemContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerOptions_serializer::read(thisDeserializer);
        }
        Opt_DividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setDivider(self, static_cast<Opt_DividerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setTextModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextModifier_serializer::read(thisDeserializer);
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setTextModifier(self, static_cast<Opt_TextModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setTextModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setArrowModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SymbolGlyphModifier_serializer::read(thisDeserializer);
        }
        Opt_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setArrowModifier(self, static_cast<Opt_SymbolGlyphModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setArrowModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setOptionTextModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextModifier_serializer::read(thisDeserializer);
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionTextModifier(self, static_cast<Opt_TextModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setOptionTextModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setSelectedOptionTextModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextModifier_serializer::read(thisDeserializer);
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionTextModifier(self, static_cast<Opt_TextModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setSelectedOptionTextModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setDividerStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setDividerStyle(self, static_cast<Opt_DividerStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setDividerStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setAvoidance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AvoidanceMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AvoidanceMode>(thisDeserializer.readInt32());
        }
        Opt_AvoidanceMode value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setAvoidance(self, static_cast<Opt_AvoidanceMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setAvoidance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setMenuOutline(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOutlineOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = MenuOutlineOptions_serializer::read(thisDeserializer);
        }
        Opt_MenuOutlineOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuOutline(self, static_cast<Opt_MenuOutlineOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setMenuOutline, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_setMenuAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuAlignType alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((alignType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            alignType_value_buf.value = static_cast<Ark_MenuAlignType>(thisDeserializer.readInt32());
        }
        Opt_MenuAlignType alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((offset_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            offset_value_buf.value = Offset_serializer::read(thisDeserializer);
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuAlign(self, static_cast<Opt_MenuAlignType*>(&alignType_value), static_cast<Opt_Offset*>(&offset_value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_setMenuAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Union_Number_Resource_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Union_Number_Resource_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Union_Number_Resource_Void))))};;
        GetNodeModifiers()->getSelectModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Opt_Union_Number_Resource_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_set_onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Union_ResourceStr_String_Resource_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Union_ResourceStr_String_Resource value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Union_ResourceStr_String_Resource_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Union_ResourceStr_String_Resource value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Union_ResourceStr_String_Resource_Void))))};;
        GetNodeModifiers()->getSelectModifier()->set_onChangeEvent_value(self, static_cast<Callback_Opt_Union_ResourceStr_String_Resource_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_set_onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Shape_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getShapeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Shape_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ShapeInterface_setShapeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_image_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        Opt_image_PixelMap value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setShapeOptions(self, static_cast<Opt_image_PixelMap*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeInterface_setShapeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setViewPort(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ViewportRect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ViewportRect_serializer::read(thisDeserializer);
        }
        Opt_ViewportRect value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setViewPort(self, static_cast<Opt_ViewportRect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setViewPort, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStroke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStroke(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStroke, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setFill(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeDashOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeDashOffset(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeDashOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeDashArray(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Length value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Length>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Length value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeDashArray(self, static_cast<Opt_Array_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeDashArray, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeLineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeLineCap(self, static_cast<Opt_LineCapStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeLineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeLineJoin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineJoinStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineJoinStyle>(thisDeserializer.readInt32());
        }
        Opt_LineJoinStyle value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeLineJoin(self, static_cast<Opt_LineJoinStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeLineJoin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeMiterLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeMiterLimit(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeMiterLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeOpacity(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setFillOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setFillOpacity(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setFillOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setAntiAlias(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setAntiAlias(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setAntiAlias, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_setMesh(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Number value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Number value_value = value_value_buf;;
        const auto column_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number column_value_buf = {};
        column_value_buf.tag = column_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((column_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            column_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number column_value = column_value_buf;;
        const auto row_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number row_value_buf = {};
        row_value_buf.tag = row_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((row_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            row_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number row_value = row_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setMesh(self, static_cast<Opt_Array_Number*>(&value_value), static_cast<Opt_Number*>(&column_value), static_cast<Opt_Number*>(&row_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_setMesh, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SideBarContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSideBarContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SideBarContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SideBarContainerInterface_setSideBarContainerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SideBarContainerType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_SideBarContainerType>(thisDeserializer.readInt32());
        }
        Opt_SideBarContainerType type_value = type_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarContainerOptions(self, static_cast<Opt_SideBarContainerType*>(&type_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerInterface_setSideBarContainerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setShowSideBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setShowSideBar(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setShowSideBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setControlButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ButtonStyle_serializer::read(thisDeserializer);
        }
        Opt_ButtonStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setControlButton(self, static_cast<Opt_ButtonStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setControlButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setShowControlButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setShowControlButton(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setShowControlButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setOnChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setSideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarWidth0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setSideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setMinSideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinSideBarWidth0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setMinSideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setMaxSideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMaxSideBarWidth0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setMaxSideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setSideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarWidth1(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setSideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setMinSideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinSideBarWidth1(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setMinSideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setMaxSideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMaxSideBarWidth1(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setMaxSideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setAutoHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setAutoHide(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setAutoHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setSideBarPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SideBarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SideBarPosition>(thisDeserializer.readInt32());
        }
        Opt_SideBarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarPosition(self, static_cast<Opt_SideBarPosition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setSideBarPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerStyle_serializer::read(thisDeserializer);
        }
        Opt_DividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setDivider(self, static_cast<Opt_DividerStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_setMinContentWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinContentWidth(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_setMinContentWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_set_onChangeEvent_showSideBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean showSideBar)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean showSideBar)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getSideBarContainerModifier()->set_onChangeEvent_showSideBar(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_set_onChangeEvent_showSideBar, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Slider_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSliderModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Slider_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SliderInterface_setSliderOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SliderOptions_serializer::read(thisDeserializer);
        }
        Opt_SliderOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSliderOptions(self, static_cast<Opt_SliderOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(SliderInterface_setSliderOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setBlockColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setBlockColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setTrackColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackColor(self, static_cast<Opt_Union_ResourceColor_LinearGradient*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setTrackColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(LinearGradient_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSelectedColor(self, static_cast<Opt_Union_ResourceColor_LinearGradient*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setShowSteps(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setShowSteps(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setShowSteps, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setTrackThickness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackThickness(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setTrackThickness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_SliderChangeMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_SliderChangeMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_SliderChangeMode_Void))))};
        }
        Opt_Callback_Number_SliderChangeMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setOnChange(self, static_cast<Opt_Callback_Number_SliderChangeMode_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setBlockBorderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockBorderColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setBlockBorderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setBlockBorderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockBorderWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setBlockBorderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setStepColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setStepColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setStepColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setTrackBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackBorderRadius(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setTrackBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setSelectedBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSelectedBorderRadius(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setSelectedBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setBlockSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SizeOptions_serializer::read(thisDeserializer);
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockSize(self, static_cast<Opt_SizeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setBlockSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setBlockStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderBlockStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SliderBlockStyle_serializer::read(thisDeserializer);
        }
        Opt_SliderBlockStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockStyle(self, static_cast<Opt_SliderBlockStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setBlockStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setStepSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setStepSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setStepSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setSliderInteractionMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderInteraction value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SliderInteraction>(thisDeserializer.readInt32());
        }
        Opt_SliderInteraction value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSliderInteractionMode(self, static_cast<Opt_SliderInteraction*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setSliderInteractionMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setMinResponsiveDistance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setMinResponsiveDistance(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setMinResponsiveDistance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setSlideRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SlideRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SlideRange_serializer::read(thisDeserializer);
        }
        Opt_SlideRange value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSlideRange(self, static_cast<Opt_SlideRange*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setSlideRange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setDigitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setDigitalCrownSensitivity(self, static_cast<Opt_CrownSensitivity*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setDigitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_setShowTips(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_ResourceStr>(content_value_buf_);
        }
        Opt_ResourceStr content_value = content_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setShowTips(self, static_cast<Opt_Boolean*>(&value_value), static_cast<Opt_ResourceStr*>(&content_value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_setShowTips, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_set_onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getSliderModifier()->set_onChangeEvent_value(self, static_cast<Callback_Opt_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_set_onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBaseSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(BaseSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BaseSpan_setTextBackgroundStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextBackgroundStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextBackgroundStyle_serializer::read(thisDeserializer);
        }
        Opt_TextBackgroundStyle value_value = value_value_buf;;
        GetNodeModifiers()->getBaseSpanModifier()->setTextBackgroundStyle(self, static_cast<Opt_TextBackgroundStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(BaseSpan_setTextBackgroundStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BaseSpan_setBaselineOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(LengthMetrics_serializer::read(thisDeserializer));
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getBaseSpanModifier()->setBaselineOffset(self, static_cast<Opt_LengthMetrics*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(BaseSpan_setBaselineOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Span_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Span_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SpanInterface_setSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource value_value = static_cast<Ark_Union_String_Resource>(value_value_buf);;
        GetNodeModifiers()->getSpanModifier()->setSpanOptions(self, static_cast<Ark_Union_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanInterface_setSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontFamily(self, static_cast<Opt_Union_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setDecoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DecorationStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DecorationStyleInterface_serializer::read(thisDeserializer);
        }
        Opt_DecorationStyleInterface value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setDecoration(self, static_cast<Opt_DecorationStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setDecoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setTextCase(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextCase value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextCase>(thisDeserializer.readInt32());
        }
        Opt_TextCase value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setTextCase(self, static_cast<Opt_TextCase*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setTextCase, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setLineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setLineHeight(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setLineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_setTextShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ShadowOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = ShadowOptions_serializer::read(thisDeserializer);
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setTextShadow(self, static_cast<Opt_Union_ShadowOptions_Array_ShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_setTextShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Stack_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStackModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Stack_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StackInterface_setStackOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StackOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = StackOptions_serializer::read(thisDeserializer);
        }
        Opt_StackOptions options_value = options_value_buf;;
        GetNodeModifiers()->getStackModifier()->setStackOptions(self, static_cast<Opt_StackOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(StackInterface_setStackOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StackAttribute_setAlignContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getStackModifier()->setAlignContent(self, static_cast<Opt_Alignment*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StackAttribute_setAlignContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StackAttribute_setPointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PointLightStyle_serializer::read(thisDeserializer);
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getStackModifier()->setPointLight(self, static_cast<Opt_PointLightStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StackAttribute_setPointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Stepper_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStepperModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Stepper_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StepperInterface_setStepperOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StepperOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = StepperOptions_serializer::read(thisDeserializer);
        }
        Opt_StepperOptions value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setStepperOptions(self, static_cast<Opt_StepperOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperInterface_setStepperOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnFinish(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_setOnSkip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnSkip(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_setOnSkip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnChange(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_setOnNext(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnNext(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_setOnNext, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_setOnPrevious(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number prevIndex, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnPrevious(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_setOnPrevious, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_set_onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getStepperModifier()->set_onChangeEvent_index(self, static_cast<Callback_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_set_onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StepperItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStepperItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(StepperItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StepperItemInterface_setStepperItemOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getStepperItemModifier()->setStepperItemOptions(self);
}
KOALA_INTEROP_DIRECT_V1(StepperItemInterface_setStepperItemOptions, Ark_NativePointer)
void impl_StepperItemAttribute_setPrevLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setPrevLabel(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_setPrevLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperItemAttribute_setNextLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setNextLabel(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_setNextLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperItemAttribute_setStatus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ItemState>(thisDeserializer.readInt32());
        }
        Opt_ItemState value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setStatus(self, static_cast<Opt_ItemState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_setStatus, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Swiper_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSwiperModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Swiper_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SwiperInterface_setSwiperOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((controller_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            controller_value_buf.value = static_cast<Ark_SwiperController>(SwiperController_serializer::read(thisDeserializer));
        }
        Opt_SwiperController controller_value = controller_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setSwiperOptions(self, static_cast<Opt_SwiperController*>(&controller_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperInterface_setSwiperOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndex(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setInterval(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setInterval(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setInterval, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setIndicator(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_IndicatorComponentController>(IndicatorComponentController_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = DotIndicator_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = DigitIndicator_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean>(value_value_buf_);
        }
        Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicator(self, static_cast<Opt_Union_IndicatorComponentController_DotIndicator_DigitIndicator_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setIndicator, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setDuration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDuration(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setDuration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setVertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setVertical(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setVertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setItemSpace(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setItemSpace(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setItemSpace, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setDisplayMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperDisplayMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SwiperDisplayMode>(thisDeserializer.readInt32());
        }
        Opt_SwiperDisplayMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayMode(self, static_cast<Opt_SwiperDisplayMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setDisplayMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setCachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCachedCount0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setCachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setEffectMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setEffectMode(self, static_cast<Opt_EdgeEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setEffectMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setDisableSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisableSwipe(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setDisableSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setCurve(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Curve_String_ICurve value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Curve_String_ICurve value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_curves_Curve>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_curves_ICurve>(curves_ICurve_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Curve_String_ICurve>(value_value_buf_);
        }
        Opt_Union_Curve_String_ICurve value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCurve(self, static_cast<Opt_Union_Curve_String_ICurve*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setCurve, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnChange(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnSelected(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnUnselected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnUnselected(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnUnselected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnAnimationStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperAnimationStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperAnimationStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperAnimationStartCallback))))};
        }
        Opt_OnSwiperAnimationStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnAnimationStart(self, static_cast<Opt_OnSwiperAnimationStartCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnAnimationStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnAnimationEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperAnimationEndCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperAnimationEndCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperAnimationEndCallback))))};
        }
        Opt_OnSwiperAnimationEndCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnAnimationEnd(self, static_cast<Opt_OnSwiperAnimationEndCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnAnimationEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnGestureSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperGestureSwipeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperGestureSwipeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperGestureSwipeCallback))))};
        }
        Opt_OnSwiperGestureSwipeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnGestureSwipe(self, static_cast<Opt_OnSwiperGestureSwipeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnGestureSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperNestedScrollMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SwiperNestedScrollMode>(thisDeserializer.readInt32());
        }
        Opt_SwiperNestedScrollMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setNestedScroll(self, static_cast<Opt_SwiperNestedScrollMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setCustomContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperContentAnimatedTransition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SwiperContentAnimatedTransition_serializer::read(thisDeserializer);
        }
        Opt_SwiperContentAnimatedTransition value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCustomContentTransition(self, static_cast<Opt_SwiperContentAnimatedTransition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setCustomContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnContentDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentDidScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ContentDidScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ContentDidScrollCallback))))};
        }
        Opt_ContentDidScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnContentDidScroll(self, static_cast<Opt_ContentDidScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnContentDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setIndicatorInteractive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicatorInteractive(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setIndicatorInteractive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setPageFlipMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PageFlipMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_PageFlipMode>(thisDeserializer.readInt32());
        }
        Opt_PageFlipMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setPageFlipMode(self, static_cast<Opt_PageFlipMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setPageFlipMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setOnContentWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ContentWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ContentWillScrollCallback))))};
        }
        Opt_ContentWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnContentWillScroll(self, static_cast<Opt_ContentWillScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setOnContentWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setAutoPlay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto autoPlay_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean autoPlay_value_buf = {};
        autoPlay_value_buf.tag = autoPlay_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((autoPlay_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            autoPlay_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean autoPlay_value = autoPlay_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoPlayOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = AutoPlayOptions_serializer::read(thisDeserializer);
        }
        Opt_AutoPlayOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setAutoPlay(self, static_cast<Opt_Boolean*>(&autoPlay_value), static_cast<Opt_AutoPlayOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setAutoPlay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setDisplayArrow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ArrowStyle_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ArrowStyle_Boolean value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ArrowStyle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ArrowStyle_Boolean>(value_value_buf_);
        }
        Opt_Union_ArrowStyle_Boolean value_value = value_value_buf;;
        const auto isHoverShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isHoverShow_value_buf = {};
        isHoverShow_value_buf.tag = isHoverShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isHoverShow_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isHoverShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isHoverShow_value = isHoverShow_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayArrow(self, static_cast<Opt_Union_ArrowStyle_Boolean*>(&value_value), static_cast<Opt_Boolean*>(&isHoverShow_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setDisplayArrow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setCachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto isShown_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShown_value_buf = {};
        isShown_value_buf.tag = isShown_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isShown_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isShown_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShown_value = isShown_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCachedCount1(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_Boolean*>(&isShown_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setCachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setDisplayCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_SwiperAutoFill value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_SwiperAutoFill value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = SwiperAutoFill_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_SwiperAutoFill>(value_value_buf_);
        }
        Opt_Union_Number_String_SwiperAutoFill value_value = value_value_buf;;
        const auto swipeByGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean swipeByGroup_value_buf = {};
        swipeByGroup_value_buf.tag = swipeByGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((swipeByGroup_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            swipeByGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean swipeByGroup_value = swipeByGroup_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayCount(self, static_cast<Opt_Union_Number_String_SwiperAutoFill*>(&value_value), static_cast<Opt_Boolean*>(&swipeByGroup_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setDisplayCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setPrevMargin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        const auto ignoreBlank_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean ignoreBlank_value_buf = {};
        ignoreBlank_value_buf.tag = ignoreBlank_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((ignoreBlank_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            ignoreBlank_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean ignoreBlank_value = ignoreBlank_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setPrevMargin(self, static_cast<Opt_Length*>(&value_value), static_cast<Opt_Boolean*>(&ignoreBlank_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setPrevMargin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_setNextMargin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        const auto ignoreBlank_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean ignoreBlank_value_buf = {};
        ignoreBlank_value_buf.tag = ignoreBlank_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((ignoreBlank_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            ignoreBlank_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean ignoreBlank_value = ignoreBlank_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setNextMargin(self, static_cast<Opt_Length*>(&value_value), static_cast<Opt_Boolean*>(&ignoreBlank_value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_setNextMargin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_set_onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getSwiperModifier()->set_onChangeEvent_index(self, static_cast<Callback_Opt_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_set_onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SymbolGlyph_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSymbolGlyphModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SymbolGlyph_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SymbolGlyphInterface_setSymbolGlyphOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Resource_serializer::read(thisDeserializer);
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setSymbolGlyphOptions(self, static_cast<Opt_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphInterface_setSymbolGlyphOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ResourceColor value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 3) {
                    value_value_buf__buf.selector = 3;
                    value_value_buf__buf.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ResourceColor>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontColor(self, static_cast<Opt_Array_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setEffectStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffectStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SymbolEffectStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolEffectStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setEffectStrategy(self, static_cast<Opt_SymbolEffectStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setEffectStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setRenderingStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolRenderingStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SymbolRenderingStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolRenderingStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setRenderingStrategy(self, static_cast<Opt_SymbolRenderingStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setRenderingStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_setSymbolEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto symbolEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffect symbolEffect_value_buf = {};
        symbolEffect_value_buf.tag = symbolEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((symbolEffect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            symbolEffect_value_buf.value = static_cast<Ark_SymbolEffect>(SymbolEffect_serializer::read(thisDeserializer));
        }
        Opt_SymbolEffect symbolEffect_value = symbolEffect_value_buf;;
        const auto triggerValue_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Boolean_Number triggerValue_value_buf = {};
        triggerValue_value_buf.tag = triggerValue_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((triggerValue_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 triggerValue_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Boolean_Number triggerValue_value_buf_ = {};
            triggerValue_value_buf_.selector = triggerValue_value_buf__selector;
            if (triggerValue_value_buf__selector == 0) {
                triggerValue_value_buf_.selector = 0;
                triggerValue_value_buf_.value0 = thisDeserializer.readBoolean();
            }
            else if (triggerValue_value_buf__selector == 1) {
                triggerValue_value_buf_.selector = 1;
                triggerValue_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else {
                INTEROP_FATAL("One of the branches for triggerValue_value_buf_ has to be chosen through deserialisation.");
            }
            triggerValue_value_buf.value = static_cast<Ark_Union_Boolean_Number>(triggerValue_value_buf_);
        }
        Opt_Union_Boolean_Number triggerValue_value = triggerValue_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setSymbolEffect(self, static_cast<Opt_SymbolEffect*>(&symbolEffect_value), static_cast<Opt_Union_Boolean_Number*>(&triggerValue_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_setSymbolEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SymbolSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSymbolSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SymbolSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SymbolSpanInterface_setSymbolSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = Resource_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getSymbolSpanModifier()->setSymbolSpanOptions(self, static_cast<Ark_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanInterface_setSymbolSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ResourceColor value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 3) {
                    value_value_buf__buf.selector = 3;
                    value_value_buf__buf.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ResourceColor>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontColor(self, static_cast<Opt_Array_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_setEffectStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffectStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SymbolEffectStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolEffectStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setEffectStrategy(self, static_cast<Opt_SymbolEffectStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_setEffectStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_setRenderingStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolRenderingStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_SymbolRenderingStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolRenderingStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setRenderingStrategy(self, static_cast<Opt_SymbolRenderingStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_setRenderingStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TabContent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTabContentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TabContent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TabContentInterface_setTabContentOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getTabContentModifier()->setTabContentOptions(self);
}
KOALA_INTEROP_DIRECT_V1(TabContentInterface_setTabContentOptions, Ark_NativePointer)
void impl_TabContentAttribute_setTabBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ComponentContent>(ComponentContent_serializer::read(thisDeserializer));
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = SubTabBarStyle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = BottomTabBarStyle_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 4) {
                value_value_buf_.selector = 4;
                value_value_buf_.value4 = Resource_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 5) {
                value_value_buf_.selector = 5;
                value_value_buf_.value5 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 6) {
                value_value_buf_.selector = 6;
                value_value_buf_.value6 = TabBarOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions>(value_value_buf_);
        }
        Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setTabBar(self, static_cast<Opt_Union_ComponentContent_SubTabBarStyle_BottomTabBarStyle_String_Resource_CustomBuilder_TabBarOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_setTabBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_setOnWillShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setOnWillShow(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_setOnWillShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_setOnWillHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setOnWillHide(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_setOnWillHide, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Tabs_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTabsModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Tabs_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TabsInterface_setTabsOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TabsOptions_serializer::read(thisDeserializer);
        }
        Opt_TabsOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setTabsOptions(self, static_cast<Opt_TabsOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TabsInterface_setTabsOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setVertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setVertical(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setVertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarPosition>(thisDeserializer.readInt32());
        }
        Opt_BarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarPosition(self, static_cast<Opt_BarPosition*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setScrollable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarWidth(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarHeight(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setAnimationDuration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setAnimationDuration(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setAnimationDuration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setAnimationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AnimationMode>(thisDeserializer.readInt32());
        }
        Opt_AnimationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setAnimationMode(self, static_cast<Opt_AnimationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setAnimationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setEdgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setEdgeEffect(self, static_cast<Opt_EdgeEffect*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setEdgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnChange(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnSelected(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnTabBarClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnTabBarClick(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnTabBarClick, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnUnselected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnUnselected(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnUnselected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnAnimationStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsAnimationStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsAnimationStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsAnimationStartCallback))))};
        }
        Opt_OnTabsAnimationStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnAnimationStart(self, static_cast<Opt_OnTabsAnimationStartCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnAnimationStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnAnimationEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsAnimationEndCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsAnimationEndCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsAnimationEndCallback))))};
        }
        Opt_OnTabsAnimationEndCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnAnimationEnd(self, static_cast<Opt_OnTabsAnimationEndCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnAnimationEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnGestureSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsGestureSwipeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsGestureSwipeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsGestureSwipeCallback))))};
        }
        Opt_OnTabsGestureSwipeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnGestureSwipe(self, static_cast<Opt_OnTabsGestureSwipeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnGestureSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setFadingEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setFadingEdge(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setFadingEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerStyle_serializer::read(thisDeserializer);
        }
        Opt_DividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setDivider(self, static_cast<Opt_DividerStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarOverlap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarOverlap(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarOverlap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarGridAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarGridColumnOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BarGridColumnOptions_serializer::read(thisDeserializer);
        }
        Opt_BarGridColumnOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarGridAlign(self, static_cast<Opt_BarGridColumnOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarGridAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setCustomContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsCustomContentTransitionCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TabsCustomContentTransitionCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TabsCustomContentTransitionCallback))))};
        }
        Opt_TabsCustomContentTransitionCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setCustomContentTransition(self, static_cast<Opt_TabsCustomContentTransitionCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setCustomContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarBackgroundBlurStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundBlurStyle0(self, static_cast<Opt_BlurStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarBackgroundBlurStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setPageFlipMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PageFlipMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_PageFlipMode>(thisDeserializer.readInt32());
        }
        Opt_PageFlipMode value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setPageFlipMode(self, static_cast<Opt_PageFlipMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setPageFlipMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarBackgroundEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BackgroundEffectOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundEffect(self, static_cast<Opt_BackgroundEffectOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarBackgroundEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setOnContentWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsContentWillChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsContentWillChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsContentWillChangeCallback))))};
        }
        Opt_OnTabsContentWillChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnContentWillChange(self, static_cast<Opt_OnTabsContentWillChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setOnContentWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarMode>(thisDeserializer.readInt32());
        }
        Opt_BarMode value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollableBarModeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ScrollableBarModeOptions_serializer::read(thisDeserializer);
        }
        Opt_ScrollableBarModeOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarMode(self, static_cast<Opt_BarMode*>(&value_value), static_cast<Opt_ScrollableBarModeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setBarBackgroundBlurStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((style_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = BackgroundBlurStyleOptions_serializer::read(thisDeserializer);
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundBlurStyle1(self, static_cast<Opt_BlurStyle*>(&style_value), static_cast<Opt_BackgroundBlurStyleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setBarBackgroundBlurStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_setCachedMaxCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto mode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsCacheMode mode_value_buf = {};
        mode_value_buf.tag = mode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((mode_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            mode_value_buf.value = static_cast<Ark_TabsCacheMode>(thisDeserializer.readInt32());
        }
        Opt_TabsCacheMode mode_value = mode_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setCachedMaxCount(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_TabsCacheMode*>(&mode_value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_setCachedMaxCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_set_onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getTabsModifier()->set_onChangeEvent_index(self, static_cast<Callback_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_set_onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Text_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Text_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextInterface_setTextOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_String_Resource>(content_value_buf_);
        }
        Opt_Union_String_Resource content_value = content_value_buf;;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextOptions_serializer::read(thisDeserializer);
        }
        Opt_TextOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextOptions(self, static_cast<Opt_Union_String_Resource*>(&content_value), static_cast<Opt_TextOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInterface_setTextOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMinFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMinFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMinFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMaxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMaxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setLineSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(LengthMetrics_serializer::read(thisDeserializer));
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineSpacing(self, static_cast<Opt_LengthMetrics*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setLineSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextAlign(self, static_cast<Opt_TextAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setLineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineHeight(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setLineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextOverflowOptions_serializer::read(thisDeserializer);
        }
        Opt_TextOverflowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextOverflow(self, static_cast<Opt_TextOverflowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontFamily(self, static_cast<Opt_Union_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMaxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxLines(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMaxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setDecoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DecorationStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DecorationStyleInterface_serializer::read(thisDeserializer);
        }
        Opt_DecorationStyleInterface value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDecoration(self, static_cast<Opt_DecorationStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setDecoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLetterSpacing(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextCase(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextCase value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextCase>(thisDeserializer.readInt32());
        }
        Opt_TextCase value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextCase(self, static_cast<Opt_TextCase*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextCase, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setBaselineOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setBaselineOffset(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setBaselineOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setCopyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setCopyOption(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setCopyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setDraggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDraggable(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setDraggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ShadowOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = ShadowOptions_serializer::read(thisDeserializer);
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextShadow(self, static_cast<Opt_Union_ShadowOptions_Array_ShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setHeightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setHeightAdaptivePolicy(self, static_cast<Opt_TextHeightAdaptivePolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setHeightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextIndent(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setWordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setWordBreak(self, static_cast<Opt_WordBreak*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setWordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setLineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineBreakStrategy(self, static_cast<Opt_LineBreakStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setLineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setOnCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnCopy(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setOnCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setCaretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setCaretColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setCaretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setEllipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEllipsisMode(self, static_cast<Opt_EllipsisMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setEllipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setEnableDataDetector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEnableDataDetector(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setEnableDataDetector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setDataDetectorConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDataDetectorConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextDataDetectorConfig_serializer::read(thisDeserializer);
        }
        Opt_TextDataDetectorConfig value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDataDetectorConfig(self, static_cast<Opt_TextDataDetectorConfig*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setDataDetectorConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setOnTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnTextSelectionChange(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setOnTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontFeature(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setMarqueeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextMarqueeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextMarqueeOptions_serializer::read(thisDeserializer);
        }
        Opt_TextMarqueeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMarqueeOptions(self, static_cast<Opt_TextMarqueeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setMarqueeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setOnMarqueeStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MarqueeState_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_MarqueeState value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MarqueeState_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_MarqueeState value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MarqueeState_Void))))};
        }
        Opt_Callback_MarqueeState_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnMarqueeStateChange(self, static_cast<Opt_Callback_MarqueeState_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setOnMarqueeStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setPrivacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setPrivacySensitive(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setPrivacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setTextSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextSelectableMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextSelectableMode>(thisDeserializer.readInt32());
        }
        Opt_TextSelectableMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextSelectable(self, static_cast<Opt_TextSelectableMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setTextSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setHalfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setHalfLeading(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setHalfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fontValue_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font fontValue_value_buf = {};
        fontValue_value_buf.tag = fontValue_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fontValue_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fontValue_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font fontValue_value = fontValue_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontSettingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = FontSettingOptions_serializer::read(thisDeserializer);
        }
        Opt_FontSettingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFont(self, static_cast<Opt_Font*>(&fontValue_value), static_cast<Opt_FontSettingOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto weight_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String weight_value_buf = {};
        weight_value_buf.tag = weight_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((weight_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 weight_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String weight_value_buf_ = {};
            weight_value_buf_.selector = weight_value_buf__selector;
            if (weight_value_buf__selector == 0) {
                weight_value_buf_.selector = 0;
                weight_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (weight_value_buf__selector == 1) {
                weight_value_buf_.selector = 1;
                weight_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (weight_value_buf__selector == 2) {
                weight_value_buf_.selector = 2;
                weight_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for weight_value_buf_ has to be chosen through deserialisation.");
            }
            weight_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(weight_value_buf_);
        }
        Opt_Union_Number_FontWeight_String weight_value = weight_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontSettingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = FontSettingOptions_serializer::read(thisDeserializer);
        }
        Opt_FontSettingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&weight_value), static_cast<Opt_FontSettingOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setSelection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto selectionStart_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number selectionStart_value_buf = {};
        selectionStart_value_buf.tag = selectionStart_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((selectionStart_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            selectionStart_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number selectionStart_value = selectionStart_value_buf;;
        const auto selectionEnd_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number selectionEnd_value_buf = {};
        selectionEnd_value_buf.tag = selectionEnd_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((selectionEnd_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            selectionEnd_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number selectionEnd_value = selectionEnd_value_buf;;
        GetNodeModifiers()->getTextModifier()->setSelection(self, static_cast<Opt_Number*>(&selectionStart_value), static_cast<Opt_Number*>(&selectionEnd_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setSelection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_setBindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto spanType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextSpanType spanType_value_buf = {};
        spanType_value_buf.tag = spanType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((spanType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            spanType_value_buf.value = static_cast<Ark_TextSpanType>(thisDeserializer.readInt32());
        }
        Opt_TextSpanType spanType_value = spanType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((responseType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            responseType_value_buf.value = static_cast<Ark_TextResponseType>(thisDeserializer.readInt32());
        }
        Opt_TextResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setBindSelectionMenu(self, static_cast<Opt_TextSpanType*>(&spanType_value), static_cast<Opt_CustomNodeBuilder*>(&content_value), static_cast<Opt_TextResponseType*>(&responseType_value), static_cast<Opt_SelectionMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_setBindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextArea_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextAreaModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextArea_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextAreaInterface_setTextAreaOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAreaOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextAreaOptions_serializer::read(thisDeserializer);
        }
        Opt_TextAreaOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextAreaOptions(self, static_cast<Opt_TextAreaOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaInterface_setTextAreaOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setPlaceholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setPlaceholderColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setPlaceholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setPlaceholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setPlaceholderFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setPlaceholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEnterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnterKeyType(self, static_cast<Opt_EnterKeyType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEnterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setTextAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextAlign(self, static_cast<Opt_TextAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setTextAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setCaretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCaretColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setCaretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value2 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_ResourceStr>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontFamily(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setTextOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflow value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextOverflow>(thisDeserializer.readInt32());
        }
        Opt_TextOverflow value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextOverflow(self, static_cast<Opt_TextOverflow*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setTextOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setTextIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextIndent(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setTextIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setCaretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = CaretStyle_serializer::read(thisDeserializer);
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCaretStyle(self, static_cast<Opt_CaretStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setCaretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EnterKeyType_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EnterKeyType_Void))))};
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextAreaSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextAreaSubmitCallback))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback>(value_value_buf_);
        }
        Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnSubmit(self, static_cast<Opt_Union_Callback_EnterKeyType_Void_TextAreaSubmitCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnChange(self, static_cast<Opt_EditableTextOnChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnTextSelectionChange(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnContentScroll(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isEditing)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isEditing)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnEditChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnCopy(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnCut(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_PasteEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_PasteEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_PasteEvent_Void))))};
        }
        Opt_Callback_String_PasteEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnPaste(self, static_cast<Opt_Callback_String_PasteEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setCopyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCopyOption(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setCopyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEnableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableKeyboardOnFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEnableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMaxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxLength(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMaxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextContentStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextContentStyle>(thisDeserializer.readInt32());
        }
        Opt_TextContentStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setStyle(self, static_cast<Opt_TextContentStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setBarState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setBarState(self, static_cast<Opt_BarState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setBarState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setSelectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setSelectionMenuHidden(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setSelectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMinFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMinFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMinFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMaxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMaxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setHeightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setHeightAdaptivePolicy(self, static_cast<Opt_TextHeightAdaptivePolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setHeightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setMaxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxLines(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setMaxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setWordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setWordBreak(self, static_cast<Opt_WordBreak*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setWordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setLineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineBreakStrategy(self, static_cast<Opt_LineBreakStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setLineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setDecoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextDecorationOptions_serializer::read(thisDeserializer);
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setDecoration(self, static_cast<Opt_TextDecorationOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setDecoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLetterSpacing(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setLineSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(LengthMetrics_serializer::read(thisDeserializer));
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineSpacing(self, static_cast<Opt_LengthMetrics*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setLineSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setLineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineHeight(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setLineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAreaType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextAreaType>(thisDeserializer.readInt32());
        }
        Opt_TextAreaType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setType(self, static_cast<Opt_TextAreaType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEnableAutoFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableAutoFill(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEnableAutoFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setContentType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentType>(thisDeserializer.readInt32());
        }
        Opt_ContentType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setContentType(self, static_cast<Opt_ContentType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setContentType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setFontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontFeature(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setFontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillInsert(self, static_cast<Opt_Callback_InsertValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnDidInsert(self, static_cast<Opt_Callback_InsertValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillDelete(self, static_cast<Opt_Callback_DeleteValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnDidDelete(self, static_cast<Opt_Callback_DeleteValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEnablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnablePreviewText(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEnablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setAutoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setAutoCapitalizationMode(self, static_cast<Opt_AutoCapitalizationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setAutoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setHalfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setHalfLeading(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setHalfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setEllipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEllipsisMode(self, static_cast<Opt_EllipsisMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setEllipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setStopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setStopBackPress(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setStopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setOnWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillChange(self, static_cast<Opt_Callback_EditableTextChangeValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setOnWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setKeyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setKeyboardAppearance(self, static_cast<Opt_KeyboardAppearance*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setKeyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setInputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((error_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setInputFilter(self, static_cast<Opt_ResourceStr*>(&value_value), static_cast<Opt_Callback_String_Void*>(&error_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setInputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setShowCounter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputCounterOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = InputCounterOptions_serializer::read(thisDeserializer);
        }
        Opt_InputCounterOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setShowCounter(self, static_cast<Opt_Boolean*>(&value_value), static_cast<Opt_InputCounterOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setShowCounter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_setCustomKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = KeyboardOptions_serializer::read(thisDeserializer);
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCustomKeyboard(self, static_cast<Opt_CustomNodeBuilder*>(&value_value), static_cast<Opt_KeyboardOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_setCustomKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_set_onChangeEvent_text(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Union_ResourceStr_Resource_String_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_ResourceStr_Resource_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_ResourceStr_Resource_String_Void))))};;
        GetNodeModifiers()->getTextAreaModifier()->set_onChangeEvent_text(self, static_cast<Callback_Union_ResourceStr_Resource_String_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_set_onChangeEvent_text, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextClock_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextClockModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextClock_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextClockInterface_setTextClockOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextClockOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TextClockOptions_serializer::read(thisDeserializer);
        }
        Opt_TextClockOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setTextClockOptions(self, static_cast<Opt_TextClockOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockInterface_setTextClockOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFormat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFormat(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFormat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setOnDateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setOnDateChange(self, static_cast<Opt_Callback_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setOnDateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontFamily(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setTextShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ShadowOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = ShadowOptions_serializer::read(thisDeserializer);
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setTextShadow(self, static_cast<Opt_Union_ShadowOptions_Array_ShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setTextShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setFontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontFeature(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setFontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_setDateTimeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_intl_DateTimeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = intl_DateTimeOptions_serializer::read(thisDeserializer);
        }
        Opt_intl_DateTimeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setDateTimeOptions(self, static_cast<Opt_intl_DateTimeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_setDateTimeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextInput_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextInputModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextInput_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextInputInterface_setTextInputOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextInputOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextInputOptions_serializer::read(thisDeserializer);
        }
        Opt_TextInputOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextInputOptions(self, static_cast<Opt_TextInputOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputInterface_setTextInputOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_InputType>(thisDeserializer.readInt32());
        }
        Opt_InputType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setType(self, static_cast<Opt_InputType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setContentType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentType>(thisDeserializer.readInt32());
        }
        Opt_ContentType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setContentType(self, static_cast<Opt_ContentType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setContentType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setPlaceholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPlaceholderColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setPlaceholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setTextOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflow value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextOverflow>(thisDeserializer.readInt32());
        }
        Opt_TextOverflow value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextOverflow(self, static_cast<Opt_TextOverflow*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setTextOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setTextIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextIndent(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setTextIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setPlaceholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = Font_serializer::read(thisDeserializer);
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPlaceholderFont(self, static_cast<Opt_Font*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setPlaceholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEnterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnterKeyType(self, static_cast<Opt_EnterKeyType*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEnterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCaretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCaretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnEditChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSubmitCallback))))};
        }
        Opt_OnSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnSubmit(self, static_cast<Opt_OnSubmitCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnChange(self, static_cast<Opt_EditableTextOnChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextSelectionChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextSelectionChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextSelectionChangeCallback))))};
        }
        Opt_OnTextSelectionChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnTextSelectionChange(self, static_cast<Opt_OnTextSelectionChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContentScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContentScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContentScrollCallback))))};
        }
        Opt_OnContentScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnContentScroll(self, static_cast<Opt_OnContentScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMaxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxLength(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMaxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value2 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_ResourceStr>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontFamily(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnCopy(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnCut(self, static_cast<Opt_Callback_String_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnPasteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnPasteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnPasteCallback))))};
        }
        Opt_OnPasteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnPaste(self, static_cast<Opt_OnPasteCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCopyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCopyOption(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCopyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowPasswordIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowPasswordIcon(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowPasswordIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setTextAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextAlign(self, static_cast<Opt_TextAlign*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setTextAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_TextInputStyle_TextContentStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_TextInputStyle_TextContentStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_TextInputStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_TextContentStyle>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_TextInputStyle_TextContentStyle>(value_value_buf_);
        }
        Opt_Union_TextInputStyle_TextContentStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setStyle(self, static_cast<Opt_Union_TextInputStyle_TextContentStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCaretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = CaretStyle_serializer::read(thisDeserializer);
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretStyle(self, static_cast<Opt_CaretStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCaretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setSelectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectedBackgroundColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setSelectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCaretPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretPosition(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCaretPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEnableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableKeyboardOnFocus(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEnableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setPasswordIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PasswordIcon value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PasswordIcon_serializer::read(thisDeserializer);
        }
        Opt_PasswordIcon value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPasswordIcon(self, static_cast<Opt_PasswordIcon*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setPasswordIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowError(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowUnit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowUnit(self, static_cast<Opt_CustomNodeBuilder*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowUnit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowUnderline(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowUnderline(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowUnderline, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setUnderlineColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_UnderlineColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_UnderlineColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = UnderlineColor_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_UnderlineColor>(value_value_buf_);
        }
        Opt_Union_ResourceColor_UnderlineColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setUnderlineColor(self, static_cast<Opt_Union_ResourceColor_UnderlineColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setUnderlineColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setSelectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectionMenuHidden(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setSelectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setBarState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setBarState(self, static_cast<Opt_BarState*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setBarState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMaxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxLines(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMaxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setWordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setWordBreak(self, static_cast<Opt_WordBreak*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setWordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setLineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLineBreakStrategy(self, static_cast<Opt_LineBreakStrategy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setLineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCancelButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = CancelButtonOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = CancelButtonSymbolOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions>(value_value_buf_);
        }
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCancelButton(self, static_cast<Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCancelButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setSelectAll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectAll(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setSelectAll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMinFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMinFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMinFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMaxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxFontSize(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMaxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMinFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMinFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMinFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setMaxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxFontScale(self, static_cast<Opt_Union_Number_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setMaxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setHeightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setHeightAdaptivePolicy(self, static_cast<Opt_TextHeightAdaptivePolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setHeightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEnableAutoFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableAutoFill(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEnableAutoFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setDecoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextDecorationOptions_serializer::read(thisDeserializer);
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setDecoration(self, static_cast<Opt_TextDecorationOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setDecoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLetterSpacing(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setLineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLineHeight(self, static_cast<Opt_Union_Number_String_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setLineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setPasswordRules(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPasswordRules(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setPasswordRules, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setFontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontFeature(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setFontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowPassword(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowPassword(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowPassword, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnSecurityStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnSecurityStateChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnSecurityStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillInsert(self, static_cast<Opt_Callback_InsertValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnDidInsert(self, static_cast<Opt_Callback_InsertValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillDelete(self, static_cast<Opt_Callback_DeleteValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnDidDelete(self, static_cast<Opt_Callback_DeleteValue_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEnablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnablePreviewText(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEnablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setAutoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setAutoCapitalizationMode(self, static_cast<Opt_AutoCapitalizationMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setAutoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setHalfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setHalfLeading(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setHalfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setEllipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEllipsisMode(self, static_cast<Opt_EllipsisMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setEllipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setStopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setStopBackPress(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setStopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setOnWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillChange(self, static_cast<Opt_Callback_EditableTextChangeValue_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setOnWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setKeyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setKeyboardAppearance(self, static_cast<Opt_KeyboardAppearance*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setKeyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setInputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((error_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setInputFilter(self, static_cast<Opt_ResourceStr*>(&value_value), static_cast<Opt_Callback_String_Void*>(&error_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setInputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setCustomKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = KeyboardOptions_serializer::read(thisDeserializer);
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCustomKeyboard(self, static_cast<Opt_CustomNodeBuilder*>(&value_value), static_cast<Opt_KeyboardOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setCustomKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_setShowCounter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputCounterOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = InputCounterOptions_serializer::read(thisDeserializer);
        }
        Opt_InputCounterOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowCounter(self, static_cast<Opt_Boolean*>(&value_value), static_cast<Opt_InputCounterOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_setShowCounter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_set_onChangeEvent_text(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Union_ResourceStr_Resource_String_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_ResourceStr_Resource_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Resource_String text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_ResourceStr_Resource_String_Void))))};;
        GetNodeModifiers()->getTextInputModifier()->set_onChangeEvent_text(self, static_cast<Callback_Union_ResourceStr_Resource_String_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_set_onChangeEvent_text, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextPicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextPickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextPicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextPickerInterface_setTextPickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TextPickerOptions_serializer::read(thisDeserializer);
        }
        Opt_TextPickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setTextPickerOptions(self, static_cast<Opt_TextPickerOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerInterface_setTextPickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDefaultPickerItemHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDefaultPickerItemHeight(self, static_cast<Opt_Union_Number_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDefaultPickerItemHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setCanLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setCanLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setCanLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDisappearTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDisappearTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDisappearTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setSelectedTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setSelectedTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDisableTextStyleAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDisableTextStyleAnimation(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDisableTextStyleAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDefaultTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextPickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_TextPickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDefaultTextStyle(self, static_cast<Opt_TextPickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDefaultTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextPickerChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextPickerChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextPickerChangeCallback))))};
        }
        Opt_OnTextPickerChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnChange(self, static_cast<Opt_OnTextPickerChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setOnScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerScrollStopCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextPickerScrollStopCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextPickerScrollStopCallback))))};
        }
        Opt_TextPickerScrollStopCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnScrollStop(self, static_cast<Opt_TextPickerScrollStopCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setOnScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setOnEnterSelectedArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerEnterSelectedAreaCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextPickerEnterSelectedAreaCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextPickerEnterSelectedAreaCallback))))};
        }
        Opt_TextPickerEnterSelectedAreaCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnEnterSelectedArea(self, static_cast<Opt_TextPickerEnterSelectedAreaCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setOnEnterSelectedArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setSelectedIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Array_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Array_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Number value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Array_Number>(value_value_buf_);
        }
        Opt_Union_Number_Array_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedIndex(self, static_cast<Opt_Union_Number_Array_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setSelectedIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = DividerOptions_serializer::read(thisDeserializer);
        }
        Opt_DividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDivider(self, static_cast<Opt_DividerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setGradientHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Dimension>(value_value_buf_);
        }
        Opt_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setGradientHeight(self, static_cast<Opt_Dimension*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setGradientHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_setDigitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDigitalCrownSensitivity(self, static_cast<Opt_CrownSensitivity*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_setDigitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Union_Number_Array_Number_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_Number_Array_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_Number_Array_Number_Void))))};;
        GetNodeModifiers()->getTextPickerModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Union_Number_Array_Number_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_set_onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Union_ResourceStr_Array_ResourceStr_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Array_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_ResourceStr_Array_ResourceStr_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_ResourceStr_Array_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_ResourceStr_Array_ResourceStr_Void))))};;
        GetNodeModifiers()->getTextPickerModifier()->set_onChangeEvent_value(self, static_cast<Callback_Union_ResourceStr_Array_ResourceStr_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_set_onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextTimer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextTimerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextTimer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextTimerInterface_setTextTimerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextTimerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TextTimerOptions_serializer::read(thisDeserializer);
        }
        Opt_TextTimerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setTextTimerOptions(self, static_cast<Opt_TextTimerOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerInterface_setTextTimerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFormat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFormat(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFormat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontSize(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontStyle(self, static_cast<Opt_FontStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value2 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_ResourceStr>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontWeight(self, static_cast<Opt_Union_Number_FontWeight_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setFontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontFamily(self, static_cast<Opt_ResourceStr*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setFontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setOnTimer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number utc, const Ark_Number elapsedTime)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number utc, const Ark_Number elapsedTime)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setOnTimer(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setOnTimer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setTextShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = ShadowOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = ShadowOptions_serializer::read(thisDeserializer);
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setTextShadow(self, static_cast<Opt_Union_ShadowOptions_Array_ShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setTextShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TimePicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTimePickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TimePicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TimePickerInterface_setTimePickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TimePickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = TimePickerOptions_serializer::read(thisDeserializer);
        }
        Opt_TimePickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setTimePickerOptions(self, static_cast<Opt_TimePickerOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerInterface_setTimePickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setUseMilitaryTime(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setUseMilitaryTime(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setUseMilitaryTime, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setDisappearTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDisappearTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setDisappearTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setSelectedTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PickerTextStyle_serializer::read(thisDeserializer);
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setSelectedTextStyle(self, static_cast<Opt_PickerTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setSelectedTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setDateTimeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_intl_DateTimeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = intl_DateTimeOptions_serializer::read(thisDeserializer);
        }
        Opt_intl_DateTimeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDateTimeOptions(self, static_cast<Opt_intl_DateTimeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setDateTimeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTimePickerChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TimePickerResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTimePickerChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTimePickerChangeCallback))))};
        }
        Opt_OnTimePickerChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setOnChange(self, static_cast<Opt_OnTimePickerChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setOnEnterSelectedArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TimePickerResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TimePickerResult value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TimePickerResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TimePickerResult_Void))))};
        }
        Opt_Callback_TimePickerResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setOnEnterSelectedArea(self, static_cast<Opt_Callback_TimePickerResult_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setOnEnterSelectedArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setDigitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDigitalCrownSensitivity(self, static_cast<Opt_CrownSensitivity*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setDigitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_setEnableCascade(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setEnableCascade(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_setEnableCascade, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_set_onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Date_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};;
        GetNodeModifiers()->getTimePickerModifier()->set_onChangeEvent_selected(self, static_cast<Callback_Date_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_set_onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Toggle_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getToggleModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Toggle_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ToggleInterface_setToggleOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ToggleOptions options_value = ToggleOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getToggleModifier()->setToggleOptions(self, static_cast<Ark_ToggleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleInterface_setToggleOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_setOnChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setOnChange(self, static_cast<Opt_Callback_Boolean_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_setOnChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setContentModifier(self, static_cast<Opt_ContentModifier*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_setSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSelectedColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_setSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_setSwitchPointColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSwitchPointColor(self, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_setSwitchPointColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_setSwitchStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwitchStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SwitchStyle_serializer::read(thisDeserializer);
        }
        Opt_SwitchStyle value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSwitchStyle(self, static_cast<Opt_SwitchStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_setSwitchStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_set_onChangeEvent_isOn(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean isOn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean isOn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getToggleModifier()->set_onChangeEvent_isOn(self, static_cast<Callback_Opt_Boolean_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_set_onChangeEvent_isOn, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_UIExtensionComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getUIExtensionComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(UIExtensionComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_UIExtensionComponentInterface_setUIExtensionComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Want want_value = Want_serializer::read(thisDeserializer);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_UIExtensionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = UIExtensionOptions_serializer::read(thisDeserializer);
        }
        Opt_UIExtensionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setUIExtensionComponentOptions(self, static_cast<Ark_Want*>(&want_value), static_cast<Opt_UIExtensionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentInterface_setUIExtensionComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_setOnRemoteReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnRemoteReady(self, static_cast<Opt_Callback_UIExtensionProxy_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_setOnRemoteReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_setOnReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Map_String_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Map_String_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Map_String_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Map_String_Object value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Map_String_Object_Void))))};
        }
        Opt_Callback_Map_String_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnReceive(self, static_cast<Opt_Callback_Map_String_Object_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_setOnReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ErrorCallback))))};
        }
        Opt_ErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnError(self, static_cast<Opt_ErrorCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_setOnTerminated(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TerminationInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TerminationInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TerminationInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TerminationInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TerminationInfo_Void))))};
        }
        Opt_Callback_TerminationInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnTerminated(self, static_cast<Opt_Callback_TerminationInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_setOnTerminated, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_setOnDrawReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnDrawReady(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_setOnDrawReady, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Video_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getVideoModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Video_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_VideoInterface_setVideoOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_VideoOptions value_value = VideoOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getVideoModifier()->setVideoOptions(self, static_cast<Ark_VideoOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoInterface_setVideoOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setMuted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setMuted(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setMuted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setAutoPlay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setAutoPlay(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setAutoPlay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setControls(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setControls(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setControls, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setLoop(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setObjectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setObjectFit(self, static_cast<Opt_ImageFit*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setObjectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnStart(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnPause(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnFinish(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnFullscreenChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FullscreenInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FullscreenInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FullscreenInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullscreenInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FullscreenInfo_Void))))};
        }
        Opt_Callback_FullscreenInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnFullscreenChange(self, static_cast<Opt_Callback_FullscreenInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnFullscreenChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnPrepared(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PreparedInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PreparedInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PreparedInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PreparedInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PreparedInfo_Void))))};
        }
        Opt_Callback_PreparedInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnPrepared(self, static_cast<Opt_Callback_PreparedInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnPrepared, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnSeeking(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnSeeking(self, static_cast<Opt_Callback_PlaybackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnSeeking, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnSeeked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnSeeked(self, static_cast<Opt_Callback_PlaybackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnSeeked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnUpdate(self, static_cast<Opt_Callback_PlaybackInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnError(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setOnStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnStop(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setOnStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setEnableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setEnableAnalyzer(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setEnableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setAnalyzerConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageAnalyzerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ImageAnalyzerConfig_serializer::read(thisDeserializer);
        }
        Opt_ImageAnalyzerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setAnalyzerConfig(self, static_cast<Opt_ImageAnalyzerConfig*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setAnalyzerConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setSurfaceBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ColorMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_ColorMetrics>(ColorMetrics_serializer::read(thisDeserializer));
        }
        Opt_ColorMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setSurfaceBackgroundColor(self, static_cast<Opt_ColorMetrics*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setSurfaceBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_setEnableShortcutKey(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setEnableShortcutKey(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_setEnableShortcutKey, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_WaterFlow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWaterFlowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(WaterFlow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WaterFlowInterface_setWaterFlowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WaterFlowOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = WaterFlowOptions_serializer::read(thisDeserializer);
        }
        Opt_WaterFlowOptions options_value = options_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setWaterFlowOptions(self, static_cast<Opt_WaterFlowOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowInterface_setWaterFlowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setColumnsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setColumnsTemplate(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setColumnsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setItemConstraintSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ConstraintSizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ConstraintSizeOptions_serializer::read(thisDeserializer);
        }
        Opt_ConstraintSizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setItemConstraintSize(self, static_cast<Opt_ConstraintSizeOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setItemConstraintSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setRowsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setRowsTemplate(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setRowsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setColumnsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setColumnsGap(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setColumnsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setRowsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Length value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Length>(value_value_buf_);
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setRowsGap(self, static_cast<Opt_Length*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setRowsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setLayoutDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_FlexDirection>(thisDeserializer.readInt32());
        }
        Opt_FlexDirection value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setLayoutDirection(self, static_cast<Opt_FlexDirection*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setLayoutDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setCachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setCachedCount0(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setCachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setOnScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnScrollFrameBegin(self, static_cast<Opt_OnScrollFrameBeginCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setOnScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setOnScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnScrollIndex(self, static_cast<Opt_Callback_Number_Number_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setOnScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setOnWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_Opt_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnWillScroll(self, static_cast<Opt_OnWillScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setOnWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setOnDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnDidScroll(self, static_cast<Opt_OnScrollCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setOnDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_setCachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((count_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((show_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setCachedCount1(self, static_cast<Opt_Number*>(&count_value), static_cast<Opt_Boolean*>(&show_value));
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_setCachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Web_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWebModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Web_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WebInterface_setWebOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_WebOptions value_value = WebOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getWebModifier()->setWebOptions(self, static_cast<Ark_WebOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebInterface_setWebOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setJavaScriptAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setJavaScriptAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setFileAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setFileAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setFileAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnlineImageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnlineImageAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnlineImageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDomStorageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDomStorageAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDomStorageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setImageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setImageAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setImageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMixedMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MixedMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_MixedMode>(thisDeserializer.readInt32());
        }
        Opt_MixedMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMixedMode(self, static_cast<Opt_MixedMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMixedMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setZoomAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setZoomAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setZoomAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setGeolocationAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setGeolocationAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setGeolocationAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setJavaScriptProxy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_JavaScriptProxy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = JavaScriptProxy_serializer::read(thisDeserializer);
        }
        Opt_JavaScriptProxy value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptProxy(self, static_cast<Opt_JavaScriptProxy*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setJavaScriptProxy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setCacheMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CacheMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CacheMode>(thisDeserializer.readInt32());
        }
        Opt_CacheMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setCacheMode(self, static_cast<Opt_CacheMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setCacheMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDarkMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebDarkMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WebDarkMode>(thisDeserializer.readInt32());
        }
        Opt_WebDarkMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDarkMode(self, static_cast<Opt_WebDarkMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDarkMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setForceDarkAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setForceDarkAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setForceDarkAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMediaOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebMediaOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = WebMediaOptions_serializer::read(thisDeserializer);
        }
        Opt_WebMediaOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMediaOptions(self, static_cast<Opt_WebMediaOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMediaOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOverviewModeAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOverviewModeAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOverviewModeAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOverScrollMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OverScrollMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_OverScrollMode>(thisDeserializer.readInt32());
        }
        Opt_OverScrollMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOverScrollMode(self, static_cast<Opt_OverScrollMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOverScrollMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setBlurOnKeyboardHideMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOnKeyboardHideMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_BlurOnKeyboardHideMode>(thisDeserializer.readInt32());
        }
        Opt_BlurOnKeyboardHideMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBlurOnKeyboardHideMode(self, static_cast<Opt_BlurOnKeyboardHideMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setBlurOnKeyboardHideMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setTextZoomRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Int32 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readInt32();
        }
        Opt_Int32 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTextZoomRatio(self, static_cast<Opt_Int32*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setTextZoomRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDatabaseAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDatabaseAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDatabaseAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setInitialScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Float64 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readFloat64();
        }
        Opt_Float64 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setInitialScale(self, static_cast<Opt_Float64*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setInitialScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMetaViewport(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMetaViewport(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMetaViewport, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnPageEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageEndEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageEndEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageEndEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageEndEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageEndEvent_Void))))};
        }
        Opt_Callback_OnPageEndEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageEnd(self, static_cast<Opt_Callback_OnPageEndEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnPageEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnPageBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageBeginEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageBeginEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageBeginEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageBeginEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageBeginEvent_Void))))};
        }
        Opt_Callback_OnPageBeginEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageBegin(self, static_cast<Opt_Callback_OnPageBeginEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnPageBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnProgressChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnProgressChangeEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnProgressChangeEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnProgressChangeEvent_Void))))};
        }
        Opt_Callback_OnProgressChangeEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnProgressChange(self, static_cast<Opt_Callback_OnProgressChangeEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnProgressChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnTitleReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnTitleReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnTitleReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnTitleReceiveEvent_Void))))};
        }
        Opt_Callback_OnTitleReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnTitleReceive(self, static_cast<Opt_Callback_OnTitleReceiveEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnTitleReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnGeolocationHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnGeolocationHide(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnGeolocationHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnGeolocationShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnGeolocationShowEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnGeolocationShowEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnGeolocationShowEvent_Void))))};
        }
        Opt_Callback_OnGeolocationShowEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnGeolocationShow(self, static_cast<Opt_Callback_OnGeolocationShowEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnGeolocationShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnRequestSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRequestSelected(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnRequestSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnAlert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnAlertEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnAlertEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnAlertEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAlertEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnAlertEvent_Boolean))))};
        }
        Opt_Callback_OnAlertEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAlert(self, static_cast<Opt_Callback_OnAlertEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnAlert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnBeforeUnload(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnBeforeUnloadEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnBeforeUnloadEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnBeforeUnloadEvent_Boolean))))};
        }
        Opt_Callback_OnBeforeUnloadEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnBeforeUnload(self, static_cast<Opt_Callback_OnBeforeUnloadEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnBeforeUnload, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnConfirm(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnConfirmEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnConfirmEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnConfirmEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConfirmEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnConfirmEvent_Boolean))))};
        }
        Opt_Callback_OnConfirmEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnConfirm(self, static_cast<Opt_Callback_OnConfirmEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnConfirm, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnPrompt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPromptEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPromptEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPromptEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPromptEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPromptEvent_Boolean))))};
        }
        Opt_Callback_OnPromptEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPrompt(self, static_cast<Opt_Callback_OnPromptEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnPrompt, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnConsole(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnConsoleEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnConsoleEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnConsoleEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConsoleEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnConsoleEvent_Boolean))))};
        }
        Opt_Callback_OnConsoleEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnConsole(self, static_cast<Opt_Callback_OnConsoleEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnConsole, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnErrorReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnErrorReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnErrorReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnErrorReceiveEvent_Void))))};
        }
        Opt_Callback_OnErrorReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnErrorReceive(self, static_cast<Opt_Callback_OnErrorReceiveEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnErrorReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnHttpErrorReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnHttpErrorReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnHttpErrorReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnHttpErrorReceiveEvent_Void))))};
        }
        Opt_Callback_OnHttpErrorReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnHttpErrorReceive(self, static_cast<Opt_Callback_OnHttpErrorReceiveEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnHttpErrorReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnDownloadStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnDownloadStartEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnDownloadStartEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnDownloadStartEvent_Void))))};
        }
        Opt_Callback_OnDownloadStartEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnDownloadStart(self, static_cast<Opt_Callback_OnDownloadStartEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnDownloadStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnRefreshAccessedHistory(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnRefreshAccessedHistoryEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnRefreshAccessedHistoryEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnRefreshAccessedHistoryEvent_Void))))};
        }
        Opt_Callback_OnRefreshAccessedHistoryEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRefreshAccessedHistory(self, static_cast<Opt_Callback_OnRefreshAccessedHistoryEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnRefreshAccessedHistory, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnRenderExited(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnRenderExitedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnRenderExitedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnRenderExitedEvent_Void))))};
        }
        Opt_Callback_OnRenderExitedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderExited(self, static_cast<Opt_Callback_OnRenderExitedEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnRenderExited, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnShowFileSelector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnShowFileSelectorEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnShowFileSelectorEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnShowFileSelectorEvent_Boolean))))};
        }
        Opt_Callback_OnShowFileSelectorEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnShowFileSelector(self, static_cast<Opt_Callback_OnShowFileSelectorEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnShowFileSelector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnResourceLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnResourceLoadEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnResourceLoadEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnResourceLoadEvent_Void))))};
        }
        Opt_Callback_OnResourceLoadEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnResourceLoad(self, static_cast<Opt_Callback_OnResourceLoadEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnResourceLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnFullScreenExit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFullScreenExit(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnFullScreenExit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnFullScreenEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFullScreenEnterCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFullScreenEnterCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFullScreenEnterCallback))))};
        }
        Opt_OnFullScreenEnterCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFullScreenEnter(self, static_cast<Opt_OnFullScreenEnterCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnFullScreenEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnScaleChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScaleChangeEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScaleChangeEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScaleChangeEvent_Void))))};
        }
        Opt_Callback_OnScaleChangeEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScaleChange(self, static_cast<Opt_Callback_OnScaleChangeEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnScaleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnHttpAuthRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnHttpAuthRequestEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnHttpAuthRequestEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnHttpAuthRequestEvent_Boolean))))};
        }
        Opt_Callback_OnHttpAuthRequestEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnHttpAuthRequest(self, static_cast<Opt_Callback_OnHttpAuthRequestEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnHttpAuthRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnInterceptRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnInterceptRequestEvent_WebResourceResponse value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent value0, const Callback_WebResourceResponse_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnInterceptRequestEvent_WebResourceResponse)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent value0, const Callback_WebResourceResponse_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnInterceptRequestEvent_WebResourceResponse))))};
        }
        Opt_Callback_OnInterceptRequestEvent_WebResourceResponse value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptRequest(self, static_cast<Opt_Callback_OnInterceptRequestEvent_WebResourceResponse*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnInterceptRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnPermissionRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPermissionRequestEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPermissionRequestEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPermissionRequestEvent_Void))))};
        }
        Opt_Callback_OnPermissionRequestEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPermissionRequest(self, static_cast<Opt_Callback_OnPermissionRequestEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnPermissionRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnScreenCaptureRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScreenCaptureRequestEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScreenCaptureRequestEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScreenCaptureRequestEvent_Void))))};
        }
        Opt_Callback_OnScreenCaptureRequestEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScreenCaptureRequest(self, static_cast<Opt_Callback_OnScreenCaptureRequestEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnScreenCaptureRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnContextMenuShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnContextMenuShowEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnContextMenuShowEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnContextMenuShowEvent_Boolean))))};
        }
        Opt_Callback_OnContextMenuShowEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnContextMenuShow(self, static_cast<Opt_Callback_OnContextMenuShowEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnContextMenuShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnContextMenuHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContextMenuHideCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContextMenuHideCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContextMenuHideCallback))))};
        }
        Opt_OnContextMenuHideCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnContextMenuHide(self, static_cast<Opt_OnContextMenuHideCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnContextMenuHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMediaPlayGestureAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMediaPlayGestureAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMediaPlayGestureAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnSearchResultReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnSearchResultReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnSearchResultReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnSearchResultReceiveEvent_Void))))};
        }
        Opt_Callback_OnSearchResultReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSearchResultReceive(self, static_cast<Opt_Callback_OnSearchResultReceiveEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnSearchResultReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScrollEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScrollEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScrollEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScrollEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScrollEvent_Void))))};
        }
        Opt_Callback_OnScrollEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScroll(self, static_cast<Opt_Callback_OnScrollEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnSslErrorEventReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnSslErrorEventReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnSslErrorEventReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnSslErrorEventReceiveEvent_Void))))};
        }
        Opt_Callback_OnSslErrorEventReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSslErrorEventReceive(self, static_cast<Opt_Callback_OnSslErrorEventReceiveEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnSslErrorEventReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnSslErrorEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSslErrorEventCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSslErrorEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSslErrorEventCallback))))};
        }
        Opt_OnSslErrorEventCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSslErrorEvent(self, static_cast<Opt_OnSslErrorEventCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnSslErrorEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnClientAuthenticationRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnClientAuthenticationEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnClientAuthenticationEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnClientAuthenticationEvent_Void))))};
        }
        Opt_Callback_OnClientAuthenticationEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnClientAuthenticationRequest(self, static_cast<Opt_Callback_OnClientAuthenticationEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnClientAuthenticationRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnWindowNew(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnWindowNewEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnWindowNewEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnWindowNewEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnWindowNewEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnWindowNewEvent_Void))))};
        }
        Opt_Callback_OnWindowNewEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnWindowNew(self, static_cast<Opt_Callback_OnWindowNewEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnWindowNew, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnWindowExit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnWindowExit(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnWindowExit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMultiWindowAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMultiWindowAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMultiWindowAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnInterceptKeyEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptKeyEvent(self, static_cast<Opt_Callback_KeyEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnInterceptKeyEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebStandardFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebStandardFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebStandardFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebSerifFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebSerifFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebSerifFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebSansSerifFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebSansSerifFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebSansSerifFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebFixedFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebFixedFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebFixedFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebFantasyFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebFantasyFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebFantasyFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setWebCursiveFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebCursiveFont(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setWebCursiveFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDefaultFixedFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Int32 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readInt32();
        }
        Opt_Int32 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultFixedFontSize(self, static_cast<Opt_Int32*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDefaultFixedFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDefaultFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Int32 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readInt32();
        }
        Opt_Int32 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultFontSize(self, static_cast<Opt_Int32*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDefaultFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMinFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Int32 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readInt32();
        }
        Opt_Int32 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMinFontSize(self, static_cast<Opt_Int32*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMinFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setMinLogicalFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Int32 value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readInt32();
        }
        Opt_Int32 value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMinLogicalFontSize(self, static_cast<Opt_Int32*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setMinLogicalFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setDefaultTextEncodingFormat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultTextEncodingFormat(self, static_cast<Opt_String*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setDefaultTextEncodingFormat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setForceDisplayScrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setForceDisplayScrollBar(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setForceDisplayScrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setBlockNetwork(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBlockNetwork(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setBlockNetwork, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setHorizontalScrollBarAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setHorizontalScrollBarAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setHorizontalScrollBarAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setVerticalScrollBarAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setVerticalScrollBarAccess(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setVerticalScrollBarAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnTouchIconUrlReceived(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnTouchIconUrlReceivedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnTouchIconUrlReceivedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnTouchIconUrlReceivedEvent_Void))))};
        }
        Opt_Callback_OnTouchIconUrlReceivedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnTouchIconUrlReceived(self, static_cast<Opt_Callback_OnTouchIconUrlReceivedEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnTouchIconUrlReceived, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnFaviconReceived(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnFaviconReceivedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnFaviconReceivedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnFaviconReceivedEvent_Void))))};
        }
        Opt_Callback_OnFaviconReceivedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFaviconReceived(self, static_cast<Opt_Callback_OnFaviconReceivedEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnFaviconReceived, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnPageVisible(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageVisibleEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageVisibleEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageVisibleEvent_Void))))};
        }
        Opt_Callback_OnPageVisibleEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageVisible(self, static_cast<Opt_Callback_OnPageVisibleEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnPageVisible, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnDataResubmitted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnDataResubmittedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnDataResubmittedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnDataResubmittedEvent_Void))))};
        }
        Opt_Callback_OnDataResubmittedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnDataResubmitted(self, static_cast<Opt_Callback_OnDataResubmittedEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnDataResubmitted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setPinchSmooth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setPinchSmooth(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setPinchSmooth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setAllowWindowOpenMethod(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setAllowWindowOpenMethod(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setAllowWindowOpenMethod, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnAudioStateChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnAudioStateChangedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnAudioStateChangedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnAudioStateChangedEvent_Void))))};
        }
        Opt_Callback_OnAudioStateChangedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAudioStateChanged(self, static_cast<Opt_Callback_OnAudioStateChangedEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnAudioStateChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnFirstContentfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnFirstContentfulPaintEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnFirstContentfulPaintEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnFirstContentfulPaintEvent_Void))))};
        }
        Opt_Callback_OnFirstContentfulPaintEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFirstContentfulPaint(self, static_cast<Opt_Callback_OnFirstContentfulPaintEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnFirstContentfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnFirstMeaningfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFirstMeaningfulPaintCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFirstMeaningfulPaintCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFirstMeaningfulPaintCallback))))};
        }
        Opt_OnFirstMeaningfulPaintCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFirstMeaningfulPaint(self, static_cast<Opt_OnFirstMeaningfulPaintCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnFirstMeaningfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnLargestContentfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnLargestContentfulPaintCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnLargestContentfulPaintCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnLargestContentfulPaintCallback))))};
        }
        Opt_OnLargestContentfulPaintCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnLargestContentfulPaint(self, static_cast<Opt_OnLargestContentfulPaintCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnLargestContentfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnLoadIntercept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnLoadInterceptEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnLoadInterceptEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent value0, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnLoadInterceptEvent_Boolean))))};
        }
        Opt_Callback_OnLoadInterceptEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnLoadIntercept(self, static_cast<Opt_Callback_OnLoadInterceptEvent_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnLoadIntercept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnControllerAttached(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnControllerAttached(self, static_cast<Opt_Callback_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnControllerAttached, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnOverScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnOverScrollEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnOverScrollEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnOverScrollEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnOverScrollEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnOverScrollEvent_Void))))};
        }
        Opt_Callback_OnOverScrollEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnOverScroll(self, static_cast<Opt_Callback_OnOverScrollEvent_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnOverScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnSafeBrowsingCheckResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSafeBrowsingCheckResultCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_ThreatType threatType)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSafeBrowsingCheckResultCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ThreatType threatType)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSafeBrowsingCheckResultCallback))))};
        }
        Opt_OnSafeBrowsingCheckResultCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSafeBrowsingCheckResult(self, static_cast<Opt_OnSafeBrowsingCheckResultCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnSafeBrowsingCheckResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnNavigationEntryCommitted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNavigationEntryCommittedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNavigationEntryCommittedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNavigationEntryCommittedCallback))))};
        }
        Opt_OnNavigationEntryCommittedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNavigationEntryCommitted(self, static_cast<Opt_OnNavigationEntryCommittedCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnNavigationEntryCommitted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnIntelligentTrackingPreventionResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnIntelligentTrackingPreventionCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnIntelligentTrackingPreventionCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnIntelligentTrackingPreventionCallback))))};
        }
        Opt_OnIntelligentTrackingPreventionCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnIntelligentTrackingPreventionResult(self, static_cast<Opt_OnIntelligentTrackingPreventionCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnIntelligentTrackingPreventionResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setJavaScriptOnDocumentStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ScriptItem_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptOnDocumentStart(self, static_cast<Opt_Array_ScriptItem*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setJavaScriptOnDocumentStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setJavaScriptOnDocumentEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ScriptItem_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptOnDocumentEnd(self, static_cast<Opt_Array_ScriptItem*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setJavaScriptOnDocumentEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setLayoutMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebLayoutMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WebLayoutMode>(thisDeserializer.readInt32());
        }
        Opt_WebLayoutMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setLayoutMode(self, static_cast<Opt_WebLayoutMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setLayoutMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_NestedScrollOptions_NestedScrollOptionsExt value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_NestedScrollOptions_NestedScrollOptionsExt value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = NestedScrollOptions_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = NestedScrollOptionsExt_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_NestedScrollOptions_NestedScrollOptionsExt>(value_value_buf_);
        }
        Opt_Union_NestedScrollOptions_NestedScrollOptionsExt value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setNestedScroll(self, static_cast<Opt_Union_NestedScrollOptions_NestedScrollOptionsExt*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEnableNativeEmbedMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableNativeEmbedMode(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEnableNativeEmbedMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnNativeEmbedLifecycleChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NativeEmbedDataInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NativeEmbedDataInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NativeEmbedDataInfo_Void))))};
        }
        Opt_Callback_NativeEmbedDataInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedLifecycleChange(self, static_cast<Opt_Callback_NativeEmbedDataInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnNativeEmbedLifecycleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnNativeEmbedVisibilityChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNativeEmbedVisibilityChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNativeEmbedVisibilityChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNativeEmbedVisibilityChangeCallback))))};
        }
        Opt_OnNativeEmbedVisibilityChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedVisibilityChange(self, static_cast<Opt_OnNativeEmbedVisibilityChangeCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnNativeEmbedVisibilityChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnNativeEmbedGestureEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NativeEmbedTouchInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NativeEmbedTouchInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NativeEmbedTouchInfo_Void))))};
        }
        Opt_Callback_NativeEmbedTouchInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedGestureEvent(self, static_cast<Opt_Callback_NativeEmbedTouchInfo_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnNativeEmbedGestureEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setCopyOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setCopyOptions(self, static_cast<Opt_CopyOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setCopyOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnOverrideUrlLoading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnOverrideUrlLoadingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnOverrideUrlLoadingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnOverrideUrlLoadingCallback))))};
        }
        Opt_OnOverrideUrlLoadingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnOverrideUrlLoading(self, static_cast<Opt_OnOverrideUrlLoadingCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnOverrideUrlLoading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setTextAutosizing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTextAutosizing(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setTextAutosizing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEnableNativeMediaPlayer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NativeMediaPlayerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = NativeMediaPlayerConfig_serializer::read(thisDeserializer);
        }
        Opt_NativeMediaPlayerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableNativeMediaPlayer(self, static_cast<Opt_NativeMediaPlayerConfig*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEnableNativeMediaPlayer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnRenderProcessNotResponding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRenderProcessNotRespondingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRenderProcessNotRespondingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRenderProcessNotRespondingCallback))))};
        }
        Opt_OnRenderProcessNotRespondingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderProcessNotResponding(self, static_cast<Opt_OnRenderProcessNotRespondingCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnRenderProcessNotResponding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnRenderProcessResponding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRenderProcessRespondingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRenderProcessRespondingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRenderProcessRespondingCallback))))};
        }
        Opt_OnRenderProcessRespondingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderProcessResponding(self, static_cast<Opt_OnRenderProcessRespondingCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnRenderProcessResponding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnViewportFitChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnViewportFitChangedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_ViewportFit viewportFit)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnViewportFitChangedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ViewportFit viewportFit)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnViewportFitChangedCallback))))};
        }
        Opt_OnViewportFitChangedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnViewportFitChanged(self, static_cast<Opt_OnViewportFitChangedCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnViewportFitChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnInterceptKeyboardAttach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebKeyboardCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_WebKeyboardCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_WebKeyboardCallback))))};
        }
        Opt_WebKeyboardCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptKeyboardAttach(self, static_cast<Opt_WebKeyboardCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnInterceptKeyboardAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOnAdsBlocked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAdsBlockedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAdsBlockedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAdsBlockedCallback))))};
        }
        Opt_OnAdsBlockedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAdsBlocked(self, static_cast<Opt_OnAdsBlockedCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOnAdsBlocked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setKeyboardAvoidMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebKeyboardAvoidMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_WebKeyboardAvoidMode>(thisDeserializer.readInt32());
        }
        Opt_WebKeyboardAvoidMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setKeyboardAvoidMode(self, static_cast<Opt_WebKeyboardAvoidMode*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setKeyboardAvoidMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEditMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EditMenuOptions_serializer::read(thisDeserializer);
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEditMenuOptions(self, static_cast<Opt_EditMenuOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEditMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEnableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableHapticFeedback(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEnableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setOptimizeParserBudget(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOptimizeParserBudget(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setOptimizeParserBudget, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEnableFollowSystemFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableFollowSystemFontWeight(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEnableFollowSystemFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setEnableWebAVSession(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableWebAVSession(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setEnableWebAVSession, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setRunJavaScriptOnDocumentStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ScriptItem_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnDocumentStart(self, static_cast<Opt_Array_ScriptItem*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setRunJavaScriptOnDocumentStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setRunJavaScriptOnDocumentEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ScriptItem_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnDocumentEnd(self, static_cast<Opt_Array_ScriptItem*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setRunJavaScriptOnDocumentEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setRunJavaScriptOnHeadEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = ScriptItem_serializer::read(thisDeserializer);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnHeadEnd(self, static_cast<Opt_Array_ScriptItem*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setRunJavaScriptOnHeadEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setNativeEmbedOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EmbedOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = EmbedOptions_serializer::read(thisDeserializer);
        }
        Opt_EmbedOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setNativeEmbedOptions(self, static_cast<Opt_EmbedOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setNativeEmbedOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setRegisterNativeEmbedRule(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto tag_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String tag_value_buf = {};
        tag_value_buf.tag = tag_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((tag_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            tag_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String tag_value = tag_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRegisterNativeEmbedRule(self, static_cast<Opt_String*>(&tag_value), static_cast<Opt_String*>(&type_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setRegisterNativeEmbedRule, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_setBindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto elementType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebElementType elementType_value_buf = {};
        elementType_value_buf.tag = elementType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((elementType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            elementType_value_buf.value = static_cast<Ark_WebElementType>(thisDeserializer.readInt32());
        }
        Opt_WebElementType elementType_value = elementType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((responseType_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            responseType_value_buf.value = static_cast<Ark_WebResponseType>(thisDeserializer.readInt32());
        }
        Opt_WebResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptionsExt options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionMenuOptionsExt_serializer::read(thisDeserializer);
        }
        Opt_SelectionMenuOptionsExt options_value = options_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBindSelectionMenu(self, static_cast<Opt_WebElementType*>(&elementType_value), static_cast<Opt_CustomNodeBuilder*>(&content_value), static_cast<Opt_WebResponseType*>(&responseType_value), static_cast<Opt_SelectionMenuOptionsExt*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_setBindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_WindowScene_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWindowSceneModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(WindowScene_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WindowSceneInterface_setWindowSceneOptions(Ark_NativePointer thisPtr, KInteropNumber persistentId) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getWindowSceneModifier()->setWindowSceneOptions(self, (const Ark_Number*) (&persistentId));
}
KOALA_INTEROP_DIRECT_V2(WindowSceneInterface_setWindowSceneOptions, Ark_NativePointer, KInteropNumber)
void impl_WindowSceneAttribute_setAttractionEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto destination_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position destination_value_buf = {};
        destination_value_buf.tag = destination_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((destination_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            destination_value_buf.value = Position_serializer::read(thisDeserializer);
        }
        Opt_Position destination_value = destination_value_buf;;
        const auto fraction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number fraction_value_buf = {};
        fraction_value_buf.tag = fraction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fraction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fraction_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number fraction_value = fraction_value_buf;;
        GetNodeModifiers()->getWindowSceneModifier()->setAttractionEffect(self, static_cast<Opt_Position*>(&destination_value), static_cast<Opt_Number*>(&fraction_value));
}
KOALA_INTEROP_DIRECT_V3(WindowSceneAttribute_setAttractionEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_XComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getXComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(XComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_XComponentInterface_setXComponentOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_XComponentParameter value_value = XComponentParameter_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions0(self, static_cast<Ark_XComponentParameter*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentInterface_setXComponentOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_XComponentOptions options_value = XComponentOptions_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions1(self, static_cast<Ark_XComponentOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentInterface_setXComponentOptions2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NativeXComponentParameters params_value = NativeXComponentParameters_serializer::read(thisDeserializer);;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions2(self, static_cast<Ark_NativeXComponentParameters*>(&params_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setOnLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNativeLoadCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Object event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNativeLoadCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNativeLoadCallback))))};
        }
        Opt_OnNativeLoadCallback value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setOnLoad(self, static_cast<Opt_OnNativeLoadCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setOnLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setOnDestroy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setOnDestroy(self, static_cast<Opt_VoidCallback*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setOnDestroy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setEnableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableAnalyzer(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setEnableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setEnableSecure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableSecure(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setEnableSecure, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setHdrBrightness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setHdrBrightness(self, static_cast<Opt_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setHdrBrightness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_setEnableTransparentLayer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableTransparentLayer(self, static_cast<Opt_Boolean*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_setEnableTransparentLayer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ComponentRoot_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getComponentRootModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ComponentRoot_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
Ark_NativePointer impl_CustomLayoutRoot_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCustomLayoutRootModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CustomLayoutRoot_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CustomLayoutRoot_setSubscribeOnMeasureSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_onMeasureSize_SizeResult value_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Measurable children, const Ark_ConstraintSizeOptions constraint, const Callback_SizeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_onMeasureSize_SizeResult)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Measurable children, const Ark_ConstraintSizeOptions constraint, const Callback_SizeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_onMeasureSize_SizeResult))))};;
        GetNodeModifiers()->getCustomLayoutRootModifier()->setSubscribeOnMeasureSize(self, static_cast<Callback_onMeasureSize_SizeResult*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CustomLayoutRoot_setSubscribeOnMeasureSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CustomLayoutRoot_setSubscribeOnPlaceChildren(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_onPlaceChildren_Void value_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Layoutable children, const Ark_ConstraintSizeOptions constraint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_onPlaceChildren_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GeometryInfo selfLayoutInfo, const Array_Layoutable children, const Ark_ConstraintSizeOptions constraint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_onPlaceChildren_Void))))};;
        GetNodeModifiers()->getCustomLayoutRootModifier()->setSubscribeOnPlaceChildren(self, static_cast<Callback_onPlaceChildren_Void*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CustomLayoutRoot_setSubscribeOnPlaceChildren, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Root_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRootModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Root_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)

// Accessors

Ark_NativePointer impl_AccessibilityHoverEvent_construct() {
        return GetAccessors()->getAccessibilityHoverEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(AccessibilityHoverEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_AccessibilityHoverEvent_getFinalizer() {
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AccessibilityHoverEvent_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_AccessibilityHoverEvent_getType(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setType(self, static_cast<Ark_AccessibilityHoverType>(type));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setType, Ark_NativePointer, Ark_Int32)
Ark_Number impl_AccessibilityHoverEvent_getX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setWindowY, Ark_NativePointer, KInteropNumber)
void impl_AnimationExtender_SetClipRect(Ark_NativePointer node, KFloat x, KFloat y, KFloat width, KFloat height) {
        GetAccessors()->getAnimationExtenderAccessor()->SetClipRect(node, x, y, width, height);
}
KOALA_INTEROP_DIRECT_V5(AnimationExtender_SetClipRect, Ark_NativePointer, KFloat, KFloat, KFloat, KFloat)
void impl_AnimationExtender_OpenImplicitAnimation(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam param_value = AnimateParam_serializer::read(thisDeserializer);;
        GetAccessors()->getAnimationExtenderAccessor()->OpenImplicitAnimation(static_cast<Ark_AnimateParam*>(&param_value));
}
KOALA_INTEROP_DIRECT_V2(AnimationExtender_OpenImplicitAnimation, KSerializerBuffer, int32_t)
void impl_AnimationExtender_CloseImplicitAnimation() {
        GetAccessors()->getAnimationExtenderAccessor()->CloseImplicitAnimation();
}
KOALA_INTEROP_DIRECT_V0(AnimationExtender_CloseImplicitAnimation)
void impl_AnimationExtender_StartDoubleAnimation(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_DoubleAnimationParam param_value = DoubleAnimationParam_serializer::read(thisDeserializer);;
        GetAccessors()->getAnimationExtenderAccessor()->StartDoubleAnimation(node, static_cast<Ark_DoubleAnimationParam*>(&param_value));
}
KOALA_INTEROP_DIRECT_V3(AnimationExtender_StartDoubleAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimationExtender_AnimationTranslate(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions options_value = TranslateOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getAnimationExtenderAccessor()->AnimationTranslate(node, static_cast<Ark_TranslateOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(AnimationExtender_AnimationTranslate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AppearSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getAppearSymbolEffectAccessor()->construct(static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_2(AppearSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AppearSymbolEffect_getFinalizer() {
        return GetAccessors()->getAppearSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AppearSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_AppearSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_AppearSymbolEffect self = reinterpret_cast<Ark_AppearSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getAppearSymbolEffectAccessor()->getScope(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(AppearSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_AppearSymbolEffect_setScope(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_AppearSymbolEffect self = reinterpret_cast<Ark_AppearSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        GetAccessors()->getAppearSymbolEffectAccessor()->setScope(self, static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_V3(AppearSymbolEffect_setScope, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AxisEvent_construct() {
        return GetAccessors()->getAxisEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(AxisEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_AxisEvent_getFinalizer() {
        return GetAccessors()->getAxisEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AxisEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_AxisEvent_getHorizontalAxisValue(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getHorizontalAxisValue(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getHorizontalAxisValue, KInteropNumber, Ark_NativePointer)
Ark_Number impl_AxisEvent_getVerticalAxisValue(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getVerticalAxisValue(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getVerticalAxisValue, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_AxisEvent_getAction(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getAction(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getAction, Ark_Int32, Ark_NativePointer)
void impl_AxisEvent_setAction(Ark_NativePointer thisPtr, Ark_Int32 action) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setAction(self, static_cast<Ark_AxisAction>(action));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setAction, Ark_NativePointer, Ark_Int32)
Ark_Number impl_AxisEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_AxisEvent_getScrollStep(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getAxisEventAccessor()->getScrollStep(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(AxisEvent_getScrollStep, KInteropReturnBuffer, Ark_NativePointer)
void impl_AxisEvent_setScrollStep(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scrollStep_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number scrollStep_value_buf = {};
        scrollStep_value_buf.tag = scrollStep_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scrollStep_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scrollStep_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number scrollStep_value = scrollStep_value_buf;;
        GetAccessors()->getAxisEventAccessor()->setScrollStep(self, static_cast<Opt_Number*>(&scrollStep_value));
}
KOALA_INTEROP_DIRECT_V3(AxisEvent_setScrollStep, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AxisEvent_getPropagation(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getAxisEventAccessor()->getPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_AxisEvent_setPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void propagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getAxisEventAccessor()->setPropagation(self, static_cast<Callback_Void*>(&propagation_value));
}
KOALA_INTEROP_DIRECT_V3(AxisEvent_setPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BackgroundColorStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TextBackgroundStyle textBackgroundStyle_value = TextBackgroundStyle_serializer::read(thisDeserializer);;
        return GetAccessors()->getBackgroundColorStyleAccessor()->construct(static_cast<Ark_TextBackgroundStyle*>(&textBackgroundStyle_value));
}
KOALA_INTEROP_DIRECT_2(BackgroundColorStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BackgroundColorStyle_getFinalizer() {
        return GetAccessors()->getBackgroundColorStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BackgroundColorStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BackgroundColorStyle_getTextBackgroundStyle(Ark_NativePointer thisPtr) {
        Ark_BackgroundColorStyle self = reinterpret_cast<Ark_BackgroundColorStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getBackgroundColorStyleAccessor()->getTextBackgroundStyle(self);
        SerializerBase _retSerializer {};
        TextBackgroundStyle_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BackgroundColorStyle_getTextBackgroundStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_BaseContext_construct() {
        return GetAccessors()->getBaseContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(BaseContext_construct, Ark_NativePointer)
Ark_NativePointer impl_BaseContext_getFinalizer() {
        return GetAccessors()->getBaseContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseContext_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_BaseCustomDialog_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto useSharedStorage_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useSharedStorage_value_buf = {};
        useSharedStorage_value_buf.tag = useSharedStorage_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((useSharedStorage_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            useSharedStorage_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useSharedStorage_value = useSharedStorage_value_buf;;
        const auto storage_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomObject storage_value_buf = {};
        storage_value_buf.tag = storage_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((storage_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            storage_value_buf.value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
        }
        Opt_CustomObject storage_value = storage_value_buf;;
        return GetAccessors()->getBaseCustomDialogAccessor()->construct(static_cast<Opt_Boolean*>(&useSharedStorage_value), static_cast<Opt_CustomObject*>(&storage_value));
}
KOALA_INTEROP_DIRECT_2(BaseCustomDialog_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseCustomDialog_getFinalizer() {
        return GetAccessors()->getBaseCustomDialogAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseCustomDialog_getFinalizer, Ark_NativePointer)
void impl_BaseCustomDialog_$_instantiate(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_T factory_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_T_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_T)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_T_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_T))))};;
        const auto initializers_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomObject initializers_value_buf = {};
        initializers_value_buf.tag = initializers_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((initializers_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            initializers_value_buf.value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("T_Options"));
        }
        Opt_CustomObject initializers_value = initializers_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((content_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void content_value = content_value_buf;;
        GetAccessors()->getBaseCustomDialogAccessor()->$_instantiate(static_cast<Callback_T*>(&factory_value), static_cast<Opt_CustomObject*>(&initializers_value), static_cast<Opt_Callback_Void*>(&content_value));
}
KOALA_INTEROP_DIRECT_V2(BaseCustomDialog_$_instantiate, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseEvent_construct() {
        return GetAccessors()->getBaseEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(BaseEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_BaseEvent_getFinalizer() {
        return GetAccessors()->getBaseEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BaseEvent_getTarget(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getTarget(self);
        SerializerBase _retSerializer {};
        EventTarget_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getTarget, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setTarget(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_EventTarget target_value = EventTarget_serializer::read(thisDeserializer);;
        GetAccessors()->getBaseEventAccessor()->setTarget(self, static_cast<Ark_EventTarget*>(&target_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setTarget, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_BaseEvent_getTimestamp(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTimestamp(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTimestamp, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setTimestamp(Ark_NativePointer thisPtr, KInteropNumber timestamp) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTimestamp(self, (const Ark_Number*) (&timestamp));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTimestamp, Ark_NativePointer, KInteropNumber)
Ark_Int32 impl_BaseEvent_getSource(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getSource(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getSource, Ark_Int32, Ark_NativePointer)
void impl_BaseEvent_setSource(Ark_NativePointer thisPtr, Ark_Int32 source) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setSource(self, static_cast<Ark_SourceType>(source));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setSource, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_BaseEvent_getAxisHorizontal(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getAxisHorizontal(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getAxisHorizontal, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setAxisHorizontal(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto axisHorizontal_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number axisHorizontal_value_buf = {};
        axisHorizontal_value_buf.tag = axisHorizontal_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((axisHorizontal_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            axisHorizontal_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number axisHorizontal_value = axisHorizontal_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setAxisHorizontal(self, static_cast<Opt_Number*>(&axisHorizontal_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setAxisHorizontal, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_BaseEvent_getAxisVertical(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getAxisVertical(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getAxisVertical, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setAxisVertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto axisVertical_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number axisVertical_value_buf = {};
        axisVertical_value_buf.tag = axisVertical_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((axisVertical_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            axisVertical_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number axisVertical_value = axisVertical_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setAxisVertical(self, static_cast<Opt_Number*>(&axisVertical_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setAxisVertical, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_BaseEvent_getPressure(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getPressure(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getPressure, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setPressure(Ark_NativePointer thisPtr, KInteropNumber pressure) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setPressure(self, (const Ark_Number*) (&pressure));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setPressure, Ark_NativePointer, KInteropNumber)
Ark_Number impl_BaseEvent_getTiltX(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTiltX(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTiltX, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setTiltX(Ark_NativePointer thisPtr, KInteropNumber tiltX) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTiltX(self, (const Ark_Number*) (&tiltX));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTiltX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_BaseEvent_getTiltY(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTiltY(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTiltY, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setTiltY(Ark_NativePointer thisPtr, KInteropNumber tiltY) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTiltY(self, (const Ark_Number*) (&tiltY));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTiltY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_BaseEvent_getRollAngle(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getRollAngle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getRollAngle, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setRollAngle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rollAngle_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rollAngle_value_buf = {};
        rollAngle_value_buf.tag = rollAngle_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rollAngle_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rollAngle_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rollAngle_value = rollAngle_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setRollAngle(self, static_cast<Opt_Number*>(&rollAngle_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setRollAngle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_BaseEvent_getSourceTool(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getSourceTool(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getSourceTool, Ark_Int32, Ark_NativePointer)
void impl_BaseEvent_setSourceTool(Ark_NativePointer thisPtr, Ark_Int32 sourceTool) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setSourceTool(self, static_cast<Ark_SourceTool>(sourceTool));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setSourceTool, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_BaseEvent_getGetModifierKeyState(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getGetModifierKeyState(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getGetModifierKeyState, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setGetModifierKeyState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto getModifierKeyState_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ModifierKeyStateGetter getModifierKeyState_value_buf = {};
        getModifierKeyState_value_buf.tag = getModifierKeyState_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((getModifierKeyState_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            getModifierKeyState_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ModifierKeyStateGetter)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ModifierKeyStateGetter))))};
        }
        Opt_ModifierKeyStateGetter getModifierKeyState_value = getModifierKeyState_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setGetModifierKeyState(self, static_cast<Opt_ModifierKeyStateGetter*>(&getModifierKeyState_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setGetModifierKeyState, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_BaseEvent_getDeviceId(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getDeviceId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getDeviceId, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setDeviceId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto deviceId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number deviceId_value_buf = {};
        deviceId_value_buf.tag = deviceId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((deviceId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            deviceId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number deviceId_value = deviceId_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setDeviceId(self, static_cast<Opt_Number*>(&deviceId_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setDeviceId, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_BaseEvent_getTargetDisplayId(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getTargetDisplayId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getTargetDisplayId, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setTargetDisplayId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto targetDisplayId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number targetDisplayId_value_buf = {};
        targetDisplayId_value_buf.tag = targetDisplayId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((targetDisplayId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            targetDisplayId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number targetDisplayId_value = targetDisplayId_value_buf;;
        GetAccessors()->getBaseEventAccessor()->setTargetDisplayId(self, static_cast<Opt_Number*>(&targetDisplayId_value));
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setTargetDisplayId, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseGestureEvent_construct() {
        return GetAccessors()->getBaseGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(BaseGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_BaseGestureEvent_getFinalizer() {
        return GetAccessors()->getBaseGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseGestureEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BaseGestureEvent_getFingerList(Ark_NativePointer thisPtr) {
        Ark_BaseGestureEvent self = reinterpret_cast<Ark_BaseGestureEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseGestureEventAccessor()->getFingerList(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_FingerInfo retValue_element = retValue.array[retValue_counter_i];
            FingerInfo_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseGestureEvent_getFingerList, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseGestureEvent_setFingerList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseGestureEvent self = reinterpret_cast<Ark_BaseGestureEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fingerList_value_buf_length = thisDeserializer.readInt32();
        Array_FingerInfo fingerList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fingerList_value_buf)>::type,
        std::decay<decltype(*fingerList_value_buf.array)>::type>(&fingerList_value_buf, fingerList_value_buf_length);
        for (int fingerList_value_buf_i = 0; fingerList_value_buf_i < fingerList_value_buf_length; fingerList_value_buf_i++) {
            fingerList_value_buf.array[fingerList_value_buf_i] = FingerInfo_serializer::read(thisDeserializer);
        }
        Array_FingerInfo fingerList_value = fingerList_value_buf;;
        GetAccessors()->getBaseGestureEventAccessor()->setFingerList(self, static_cast<Array_FingerInfo*>(&fingerList_value));
}
KOALA_INTEROP_DIRECT_V3(BaseGestureEvent_setFingerList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaselineOffsetStyle_construct(Ark_NativePointer value) {
        return GetAccessors()->getBaselineOffsetStyleAccessor()->construct(static_cast<Ark_LengthMetrics>(value));
}
KOALA_INTEROP_DIRECT_1(BaselineOffsetStyle_construct, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_BaselineOffsetStyle_getFinalizer() {
        return GetAccessors()->getBaselineOffsetStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaselineOffsetStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_BaselineOffsetStyle_getBaselineOffset(Ark_NativePointer thisPtr) {
        Ark_BaselineOffsetStyle self = reinterpret_cast<Ark_BaselineOffsetStyle>(thisPtr);
        return GetAccessors()->getBaselineOffsetStyleAccessor()->getBaselineOffset(self);
}
KOALA_INTEROP_DIRECT_1(BaselineOffsetStyle_getBaselineOffset, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_BaseShape_construct() {
        return GetAccessors()->getBaseShapeAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(BaseShape_construct, Ark_NativePointer)
Ark_NativePointer impl_BaseShape_getFinalizer() {
        return GetAccessors()->getBaseShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_BaseShape_width(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 width_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length width_value_buf = {};
        width_value_buf.selector = width_value_buf_selector;
        if (width_value_buf_selector == 0) {
            width_value_buf.selector = 0;
            width_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (width_value_buf_selector == 1) {
            width_value_buf.selector = 1;
            width_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (width_value_buf_selector == 2) {
            width_value_buf.selector = 2;
            width_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for width_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length width_value = static_cast<Ark_Length>(width_value_buf);;
        return GetAccessors()->getBaseShapeAccessor()->width(self, static_cast<Ark_Length*>(&width_value));
}
KOALA_INTEROP_DIRECT_3(BaseShape_width, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseShape_height(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 height_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length height_value_buf = {};
        height_value_buf.selector = height_value_buf_selector;
        if (height_value_buf_selector == 0) {
            height_value_buf.selector = 0;
            height_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (height_value_buf_selector == 1) {
            height_value_buf.selector = 1;
            height_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (height_value_buf_selector == 2) {
            height_value_buf.selector = 2;
            height_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for height_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length height_value = static_cast<Ark_Length>(height_value_buf);;
        return GetAccessors()->getBaseShapeAccessor()->height(self, static_cast<Ark_Length*>(&height_value));
}
KOALA_INTEROP_DIRECT_3(BaseShape_height, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = SizeOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getBaseShapeAccessor()->size(self, static_cast<Ark_SizeOptions*>(&size_value));
}
KOALA_INTEROP_DIRECT_3(BaseShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BounceSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((direction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        return GetAccessors()->getBounceSymbolEffectAccessor()->construct(static_cast<Opt_EffectScope*>(&scope_value), static_cast<Opt_EffectDirection*>(&direction_value));
}
KOALA_INTEROP_DIRECT_2(BounceSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BounceSymbolEffect_getFinalizer() {
        return GetAccessors()->getBounceSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BounceSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BounceSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getBounceSymbolEffectAccessor()->getScope(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BounceSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_BounceSymbolEffect_setScope(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        GetAccessors()->getBounceSymbolEffectAccessor()->setScope(self, static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_V3(BounceSymbolEffect_setScope, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_BounceSymbolEffect_getDirection(Ark_NativePointer thisPtr) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getBounceSymbolEffectAccessor()->getDirection(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectDirection>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BounceSymbolEffect_getDirection, KInteropReturnBuffer, Ark_NativePointer)
void impl_BounceSymbolEffect_setDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((direction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        GetAccessors()->getBounceSymbolEffectAccessor()->setDirection(self, static_cast<Opt_EffectDirection*>(&direction_value));
}
KOALA_INTEROP_DIRECT_V3(BounceSymbolEffect_setDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BuilderNodeOps_construct() {
        return GetAccessors()->getBuilderNodeOpsAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(BuilderNodeOps_construct, Ark_NativePointer)
Ark_NativePointer impl_BuilderNodeOps_getFinalizer() {
        return GetAccessors()->getBuilderNodeOpsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BuilderNodeOps_getFinalizer, Ark_NativePointer)
void impl_BuilderNodeOps_create(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void buildFunc_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getBuilderNodeOpsAccessor()->create(self, static_cast<Callback_Void*>(&buildFunc_value));
}
KOALA_INTEROP_DIRECT_V3(BuilderNodeOps_create, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BuilderNodeOps_disposeNode(Ark_NativePointer thisPtr) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        GetAccessors()->getBuilderNodeOpsAccessor()->disposeNode(self);
}
KOALA_INTEROP_DIRECT_V1(BuilderNodeOps_disposeNode, Ark_NativePointer)
void impl_BuilderNodeOps_setUpdateConfigurationCallback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void configurationUpdateFunc_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getBuilderNodeOpsAccessor()->setUpdateConfigurationCallback(self, static_cast<Callback_Void*>(&configurationUpdateFunc_value));
}
KOALA_INTEROP_DIRECT_V3(BuilderNodeOps_setUpdateConfigurationCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BuilderNodeOps_setOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_BuilderNodeOptions options_value = BuilderNodeOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getBuilderNodeOpsAccessor()->setOptions(self, static_cast<Ark_BuilderNodeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(BuilderNodeOps_setOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_BuilderNodeOps_postTouchEvent(Ark_NativePointer thisPtr, Ark_NativePointer event) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        return GetAccessors()->getBuilderNodeOpsAccessor()->postTouchEvent(self, static_cast<Ark_TouchEvent>(event));
}
KOALA_INTEROP_DIRECT_2(BuilderNodeOps_postTouchEvent, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_BuilderNodeOps_setRootFrameNodeInBuilderNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_BuilderNodeOps self = reinterpret_cast<Ark_BuilderNodeOps>(thisPtr);
        return GetAccessors()->getBuilderNodeOpsAccessor()->setRootFrameNodeInBuilderNode(self, node);
}
KOALA_INTEROP_DIRECT_2(BuilderNodeOps_setRootFrameNodeInBuilderNode, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_CalendarPickerDialog_construct() {
        return GetAccessors()->getCalendarPickerDialogAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CalendarPickerDialog_construct, Ark_NativePointer)
Ark_NativePointer impl_CalendarPickerDialog_getFinalizer() {
        return GetAccessors()->getCalendarPickerDialogAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CalendarPickerDialog_getFinalizer, Ark_NativePointer)
void impl_CalendarPickerDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarDialogOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = CalendarDialogOptions_serializer::read(thisDeserializer);
        }
        Opt_CalendarDialogOptions options_value = options_value_buf;;
        GetAccessors()->getCalendarPickerDialogAccessor()->show(static_cast<Opt_CalendarDialogOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V2(CalendarPickerDialog_show, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasGradient_construct() {
        return GetAccessors()->getCanvasGradientAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CanvasGradient_construct, Ark_NativePointer)
Ark_NativePointer impl_CanvasGradient_getFinalizer() {
        return GetAccessors()->getCanvasGradientAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasGradient_getFinalizer, Ark_NativePointer)
void impl_CanvasGradient_addColorStop(Ark_NativePointer thisPtr, KInteropNumber offset, const KStringPtr& color) {
        Ark_CanvasGradient self = reinterpret_cast<Ark_CanvasGradient>(thisPtr);
        GetAccessors()->getCanvasGradientAccessor()->addColorStop(self, (const Ark_Number*) (&offset), (const Ark_String*) (&color));
}
KOALA_INTEROP_V3(CanvasGradient_addColorStop, Ark_NativePointer, KInteropNumber, KStringPtr)
Ark_NativePointer impl_CanvasPath_construct() {
        return GetAccessors()->getCanvasPathAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CanvasPath_construct, Ark_NativePointer)
Ark_NativePointer impl_CanvasPath_getFinalizer() {
        return GetAccessors()->getCanvasPathAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasPath_getFinalizer, Ark_NativePointer)
void impl_CanvasPath_arc(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radius, KInteropNumber startAngle, KInteropNumber endAngle, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto counterclockwise_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean counterclockwise_value_buf = {};
        counterclockwise_value_buf.tag = counterclockwise_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((counterclockwise_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            counterclockwise_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean counterclockwise_value = counterclockwise_value_buf;;
        GetAccessors()->getCanvasPathAccessor()->arc(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radius), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&endAngle), static_cast<Opt_Boolean*>(&counterclockwise_value));
}
KOALA_INTEROP_DIRECT_V8(CanvasPath_arc, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_CanvasPath_arcTo(Ark_NativePointer thisPtr, KInteropNumber x1, KInteropNumber y1, KInteropNumber x2, KInteropNumber y2, KInteropNumber radius) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->arcTo(self, (const Ark_Number*) (&x1), (const Ark_Number*) (&y1), (const Ark_Number*) (&x2), (const Ark_Number*) (&y2), (const Ark_Number*) (&radius));
}
KOALA_INTEROP_DIRECT_V6(CanvasPath_arcTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_bezierCurveTo(Ark_NativePointer thisPtr, KInteropNumber cp1x, KInteropNumber cp1y, KInteropNumber cp2x, KInteropNumber cp2y, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->bezierCurveTo(self, (const Ark_Number*) (&cp1x), (const Ark_Number*) (&cp1y), (const Ark_Number*) (&cp2x), (const Ark_Number*) (&cp2y), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V7(CanvasPath_bezierCurveTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_closePath(Ark_NativePointer thisPtr) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->closePath(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasPath_closePath, Ark_NativePointer)
void impl_CanvasPath_ellipse(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radiusX, KInteropNumber radiusY, KInteropNumber rotation, KInteropNumber startAngle, KInteropNumber endAngle, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto counterclockwise_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean counterclockwise_value_buf = {};
        counterclockwise_value_buf.tag = counterclockwise_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((counterclockwise_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            counterclockwise_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean counterclockwise_value = counterclockwise_value_buf;;
        GetAccessors()->getCanvasPathAccessor()->ellipse(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radiusX), (const Ark_Number*) (&radiusY), (const Ark_Number*) (&rotation), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&endAngle), static_cast<Opt_Boolean*>(&counterclockwise_value));
}
KOALA_INTEROP_DIRECT_V10(CanvasPath_ellipse, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_CanvasPath_lineTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->lineTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasPath_lineTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasPath_moveTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->moveTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasPath_moveTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasPath_quadraticCurveTo(Ark_NativePointer thisPtr, KInteropNumber cpx, KInteropNumber cpy, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->quadraticCurveTo(self, (const Ark_Number*) (&cpx), (const Ark_Number*) (&cpy), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V5(CanvasPath_quadraticCurveTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_rect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->rect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasPath_rect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasPattern_construct() {
        return GetAccessors()->getCanvasPatternAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CanvasPattern_construct, Ark_NativePointer)
Ark_NativePointer impl_CanvasPattern_getFinalizer() {
        return GetAccessors()->getCanvasPatternAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasPattern_getFinalizer, Ark_NativePointer)
void impl_CanvasPattern_setTransform(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPattern self = reinterpret_cast<Ark_CanvasPattern>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((transform_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(Matrix2D_serializer::read(thisDeserializer));
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getCanvasPatternAccessor()->setTransform(self, static_cast<Opt_Matrix2D*>(&transform_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasPattern_setTransform, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_construct() {
        return GetAccessors()->getCanvasRendererAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderer_construct, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderer_getFinalizer() {
        return GetAccessors()->getCanvasRendererAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderer_getFinalizer, Ark_NativePointer)
void impl_CanvasRenderer_drawImage0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber dx, KInteropNumber dy) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(ImageBitmap_serializer::read(thisDeserializer));
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage0(self, static_cast<Ark_Union_ImageBitmap_PixelMap*>(&image_value), (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_drawImage0, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_drawImage1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber dx, KInteropNumber dy, KInteropNumber dw, KInteropNumber dh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(ImageBitmap_serializer::read(thisDeserializer));
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage1(self, static_cast<Ark_Union_ImageBitmap_PixelMap*>(&image_value), (const Ark_Number*) (&dx), (const Ark_Number*) (&dy), (const Ark_Number*) (&dw), (const Ark_Number*) (&dh));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_drawImage1, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_drawImage2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh, KInteropNumber dx, KInteropNumber dy, KInteropNumber dw, KInteropNumber dh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(ImageBitmap_serializer::read(thisDeserializer));
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage2(self, static_cast<Ark_Union_ImageBitmap_PixelMap*>(&image_value), (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh), (const Ark_Number*) (&dx), (const Ark_Number*) (&dy), (const Ark_Number*) (&dw), (const Ark_Number*) (&dh));
}
KOALA_INTEROP_DIRECT_V11(CanvasRenderer_drawImage2, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_beginPath(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->beginPath(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_beginPath, Ark_NativePointer)
void impl_CanvasRenderer_clip0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillRule_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->clip0(self, static_cast<Opt_String*>(&fillRule_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_clip0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_clip1(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillRule_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->clip1(self, static_cast<Ark_Path2D>(path), static_cast<Opt_String*>(&fillRule_value));
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_clip1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_fill0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillRule_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fill0(self, static_cast<Opt_String*>(&fillRule_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_fill0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_fill1(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillRule_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fill1(self, static_cast<Ark_Path2D>(path), static_cast<Opt_String*>(&fillRule_value));
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_fill1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_stroke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto path_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Path2D path_value_buf = {};
        path_value_buf.tag = path_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((path_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            path_value_buf.value = static_cast<Ark_Path2D>(Path2D_serializer::read(thisDeserializer));
        }
        Opt_Path2D path_value = path_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->stroke(self, static_cast<Opt_Path2D*>(&path_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_stroke, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_createLinearGradient(Ark_NativePointer thisPtr, KInteropNumber x0, KInteropNumber y0, KInteropNumber x1, KInteropNumber y1) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createLinearGradient(self, (const Ark_Number*) (&x0), (const Ark_Number*) (&y0), (const Ark_Number*) (&x1), (const Ark_Number*) (&y1));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_createLinearGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_CanvasRenderer_createPattern(Ark_NativePointer thisPtr, Ark_NativePointer image, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto repetition_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String repetition_value_buf = {};
        repetition_value_buf.tag = repetition_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((repetition_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            repetition_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String repetition_value = repetition_value_buf;;
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->createPattern(self, static_cast<Ark_ImageBitmap>(image), static_cast<Opt_String*>(&repetition_value));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            CanvasPattern_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_4(CanvasRenderer_createPattern, KInteropReturnBuffer, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_createRadialGradient(Ark_NativePointer thisPtr, KInteropNumber x0, KInteropNumber y0, KInteropNumber r0, KInteropNumber x1, KInteropNumber y1, KInteropNumber r1) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createRadialGradient(self, (const Ark_Number*) (&x0), (const Ark_Number*) (&y0), (const Ark_Number*) (&r0), (const Ark_Number*) (&x1), (const Ark_Number*) (&y1), (const Ark_Number*) (&r1));
}
KOALA_INTEROP_DIRECT_7(CanvasRenderer_createRadialGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createConicGradient(Ark_NativePointer thisPtr, KInteropNumber startAngle, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createConicGradient(self, (const Ark_Number*) (&startAngle), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_4(CanvasRenderer_createConicGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createImageData0(Ark_NativePointer thisPtr, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createImageData0(self, (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_3(CanvasRenderer_createImageData0, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createImageData1(Ark_NativePointer thisPtr, Ark_NativePointer imagedata) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createImageData1(self, static_cast<Ark_ImageData>(imagedata));
}
KOALA_INTEROP_DIRECT_2(CanvasRenderer_createImageData1, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderer_getImageData(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getImageData(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_getImageData, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_getPixelMap(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getPixelMap(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_getPixelMap, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_putImageData0(Ark_NativePointer thisPtr, Ark_NativePointer imagedata, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 dx_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dx_value_buf = {};
        dx_value_buf.selector = dx_value_buf_selector;
        if (dx_value_buf_selector == 0) {
            dx_value_buf.selector = 0;
            dx_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dx_value_buf_selector == 1) {
            dx_value_buf.selector = 1;
            dx_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dx_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dx_value = static_cast<Ark_Union_Number_String>(dx_value_buf);;
        const Ark_Int8 dy_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dy_value_buf = {};
        dy_value_buf.selector = dy_value_buf_selector;
        if (dy_value_buf_selector == 0) {
            dy_value_buf.selector = 0;
            dy_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dy_value_buf_selector == 1) {
            dy_value_buf.selector = 1;
            dy_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dy_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dy_value = static_cast<Ark_Union_Number_String>(dy_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->putImageData0(self, static_cast<Ark_ImageData>(imagedata), static_cast<Ark_Union_Number_String*>(&dx_value), static_cast<Ark_Union_Number_String*>(&dy_value));
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_putImageData0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_putImageData1(Ark_NativePointer thisPtr, Ark_NativePointer imagedata, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 dx_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dx_value_buf = {};
        dx_value_buf.selector = dx_value_buf_selector;
        if (dx_value_buf_selector == 0) {
            dx_value_buf.selector = 0;
            dx_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dx_value_buf_selector == 1) {
            dx_value_buf.selector = 1;
            dx_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dx_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dx_value = static_cast<Ark_Union_Number_String>(dx_value_buf);;
        const Ark_Int8 dy_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dy_value_buf = {};
        dy_value_buf.selector = dy_value_buf_selector;
        if (dy_value_buf_selector == 0) {
            dy_value_buf.selector = 0;
            dy_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dy_value_buf_selector == 1) {
            dy_value_buf.selector = 1;
            dy_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dy_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dy_value = static_cast<Ark_Union_Number_String>(dy_value_buf);;
        const Ark_Int8 dirtyX_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyX_value_buf = {};
        dirtyX_value_buf.selector = dirtyX_value_buf_selector;
        if (dirtyX_value_buf_selector == 0) {
            dirtyX_value_buf.selector = 0;
            dirtyX_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyX_value_buf_selector == 1) {
            dirtyX_value_buf.selector = 1;
            dirtyX_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyX_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyX_value = static_cast<Ark_Union_Number_String>(dirtyX_value_buf);;
        const Ark_Int8 dirtyY_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyY_value_buf = {};
        dirtyY_value_buf.selector = dirtyY_value_buf_selector;
        if (dirtyY_value_buf_selector == 0) {
            dirtyY_value_buf.selector = 0;
            dirtyY_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyY_value_buf_selector == 1) {
            dirtyY_value_buf.selector = 1;
            dirtyY_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyY_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyY_value = static_cast<Ark_Union_Number_String>(dirtyY_value_buf);;
        const Ark_Int8 dirtyWidth_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyWidth_value_buf = {};
        dirtyWidth_value_buf.selector = dirtyWidth_value_buf_selector;
        if (dirtyWidth_value_buf_selector == 0) {
            dirtyWidth_value_buf.selector = 0;
            dirtyWidth_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyWidth_value_buf_selector == 1) {
            dirtyWidth_value_buf.selector = 1;
            dirtyWidth_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyWidth_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyWidth_value = static_cast<Ark_Union_Number_String>(dirtyWidth_value_buf);;
        const Ark_Int8 dirtyHeight_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyHeight_value_buf = {};
        dirtyHeight_value_buf.selector = dirtyHeight_value_buf_selector;
        if (dirtyHeight_value_buf_selector == 0) {
            dirtyHeight_value_buf.selector = 0;
            dirtyHeight_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyHeight_value_buf_selector == 1) {
            dirtyHeight_value_buf.selector = 1;
            dirtyHeight_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyHeight_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyHeight_value = static_cast<Ark_Union_Number_String>(dirtyHeight_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->putImageData1(self, static_cast<Ark_ImageData>(imagedata), static_cast<Ark_Union_Number_String*>(&dx_value), static_cast<Ark_Union_Number_String*>(&dy_value), static_cast<Ark_Union_Number_String*>(&dirtyX_value), static_cast<Ark_Union_Number_String*>(&dirtyY_value), static_cast<Ark_Union_Number_String*>(&dirtyWidth_value), static_cast<Ark_Union_Number_String*>(&dirtyHeight_value));
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_putImageData1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_getLineDash(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getLineDash(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getLineDash, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setLineDash(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 segments_value_buf_length = thisDeserializer.readInt32();
        Array_Number segments_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(segments_value_buf)>::type,
        std::decay<decltype(*segments_value_buf.array)>::type>(&segments_value_buf, segments_value_buf_length);
        for (int segments_value_buf_i = 0; segments_value_buf_i < segments_value_buf_length; segments_value_buf_i++) {
            segments_value_buf.array[segments_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number segments_value = segments_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setLineDash(self, static_cast<Array_Number*>(&segments_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setLineDash, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_clearRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->clearRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_clearRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_fillRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->fillRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_fillRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_strokeRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->strokeRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_strokeRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_restore(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->restore(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_restore, Ark_NativePointer)
void impl_CanvasRenderer_save(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->save(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_save, Ark_NativePointer)
void impl_CanvasRenderer_fillText(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber x, KInteropNumber y, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto maxWidth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number maxWidth_value_buf = {};
        maxWidth_value_buf.tag = maxWidth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((maxWidth_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            maxWidth_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number maxWidth_value = maxWidth_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fillText(self, (const Ark_String*) (&text), (const Ark_Number*) (&x), (const Ark_Number*) (&y), static_cast<Opt_Number*>(&maxWidth_value));
}
KOALA_INTEROP_V6(CanvasRenderer_fillText, Ark_NativePointer, KStringPtr, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_measureText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->measureText(self, (const Ark_String*) (&text));
        SerializerBase _retSerializer {};
        TextMetrics_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(CanvasRenderer_measureText, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_strokeText(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber x, KInteropNumber y, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto maxWidth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number maxWidth_value_buf = {};
        maxWidth_value_buf.tag = maxWidth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((maxWidth_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            maxWidth_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number maxWidth_value = maxWidth_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->strokeText(self, (const Ark_String*) (&text), (const Ark_Number*) (&x), (const Ark_Number*) (&y), static_cast<Opt_Number*>(&maxWidth_value));
}
KOALA_INTEROP_V6(CanvasRenderer_strokeText, Ark_NativePointer, KStringPtr, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_getTransform(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getTransform(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getTransform, Ark_NativePointer, Ark_NativePointer)
void impl_CanvasRenderer_resetTransform(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->resetTransform(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_resetTransform, Ark_NativePointer)
void impl_CanvasRenderer_rotate(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->rotate(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_rotate, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_scale(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->scale(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_scale, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setTransform0(Ark_NativePointer thisPtr, KInteropNumber a, KInteropNumber b, KInteropNumber c, KInteropNumber d, KInteropNumber e, KInteropNumber f) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTransform0(self, (const Ark_Number*) (&a), (const Ark_Number*) (&b), (const Ark_Number*) (&c), (const Ark_Number*) (&d), (const Ark_Number*) (&e), (const Ark_Number*) (&f));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_setTransform0, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setTransform1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((transform_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(Matrix2D_serializer::read(thisDeserializer));
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setTransform1(self, static_cast<Opt_Matrix2D*>(&transform_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setTransform1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_transform(Ark_NativePointer thisPtr, KInteropNumber a, KInteropNumber b, KInteropNumber c, KInteropNumber d, KInteropNumber e, KInteropNumber f) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->transform(self, (const Ark_Number*) (&a), (const Ark_Number*) (&b), (const Ark_Number*) (&c), (const Ark_Number*) (&d), (const Ark_Number*) (&e), (const Ark_Number*) (&f));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_transform, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_translate(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->translate(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_translate, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setPixelMap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_image_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        Opt_image_PixelMap value_value = value_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setPixelMap(self, static_cast<Opt_image_PixelMap*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setPixelMap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_transferFromImageBitmap(Ark_NativePointer thisPtr, Ark_NativePointer bitmap) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->transferFromImageBitmap(self, static_cast<Ark_ImageBitmap>(bitmap));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_transferFromImageBitmap, Ark_NativePointer, Ark_NativePointer)
void impl_CanvasRenderer_saveLayer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->saveLayer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_saveLayer, Ark_NativePointer)
void impl_CanvasRenderer_restoreLayer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->restoreLayer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_restoreLayer, Ark_NativePointer)
void impl_CanvasRenderer_reset(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_reset, Ark_NativePointer)
KInteropReturnBuffer impl_CanvasRenderer_getLetterSpacing(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getLetterSpacing(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            LengthMetrics_serializer::write(_retSerializer, retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeString(retValue_1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getLetterSpacing, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 letterSpacing_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_LengthMetrics_String letterSpacing_value_buf = {};
        letterSpacing_value_buf.selector = letterSpacing_value_buf_selector;
        if (letterSpacing_value_buf_selector == 0) {
            letterSpacing_value_buf.selector = 0;
            letterSpacing_value_buf.value0 = static_cast<Ark_LengthMetrics>(LengthMetrics_serializer::read(thisDeserializer));
        }
        else if (letterSpacing_value_buf_selector == 1) {
            letterSpacing_value_buf.selector = 1;
            letterSpacing_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for letterSpacing_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_LengthMetrics_String letterSpacing_value = static_cast<Ark_Union_LengthMetrics_String>(letterSpacing_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setLetterSpacing(self, static_cast<Ark_Union_LengthMetrics_String*>(&letterSpacing_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_CanvasRenderer_getGlobalAlpha(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getGlobalAlpha(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getGlobalAlpha, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setGlobalAlpha(Ark_NativePointer thisPtr, KInteropNumber globalAlpha) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setGlobalAlpha(self, (const Ark_Number*) (&globalAlpha));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setGlobalAlpha, Ark_NativePointer, KInteropNumber)
Ark_String impl_CanvasRenderer_getGlobalCompositeOperation(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getGlobalCompositeOperation(self);
}
KOALA_INTEROP_1(CanvasRenderer_getGlobalCompositeOperation, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setGlobalCompositeOperation(Ark_NativePointer thisPtr, const KStringPtr& globalCompositeOperation) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setGlobalCompositeOperation(self, (const Ark_String*) (&globalCompositeOperation));
}
KOALA_INTEROP_V2(CanvasRenderer_setGlobalCompositeOperation, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_CanvasRenderer_getFillStyle(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getFillStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeString(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeNumber(retValue_1);
        }
        else if (retValue_type == 2) {
            _retSerializer.writeInt8(2);
            const auto retValue_2 = retValue.value2;
            CanvasGradient_serializer::write(_retSerializer, retValue_2);
        }
        else if (retValue_type == 3) {
            _retSerializer.writeInt8(3);
            const auto retValue_3 = retValue.value3;
            CanvasPattern_serializer::write(_retSerializer, retValue_3);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getFillStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setFillStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 fillStyle_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_CanvasGradient_CanvasPattern fillStyle_value_buf = {};
        fillStyle_value_buf.selector = fillStyle_value_buf_selector;
        if (fillStyle_value_buf_selector == 0) {
            fillStyle_value_buf.selector = 0;
            fillStyle_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (fillStyle_value_buf_selector == 1) {
            fillStyle_value_buf.selector = 1;
            fillStyle_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (fillStyle_value_buf_selector == 2) {
            fillStyle_value_buf.selector = 2;
            fillStyle_value_buf.value2 = static_cast<Ark_CanvasGradient>(CanvasGradient_serializer::read(thisDeserializer));
        }
        else if (fillStyle_value_buf_selector == 3) {
            fillStyle_value_buf.selector = 3;
            fillStyle_value_buf.value3 = static_cast<Ark_CanvasPattern>(CanvasPattern_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for fillStyle_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_CanvasGradient_CanvasPattern fillStyle_value = static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern>(fillStyle_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setFillStyle(self, static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern*>(&fillStyle_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setFillStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_getStrokeStyle(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getStrokeStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeString(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeNumber(retValue_1);
        }
        else if (retValue_type == 2) {
            _retSerializer.writeInt8(2);
            const auto retValue_2 = retValue.value2;
            CanvasGradient_serializer::write(_retSerializer, retValue_2);
        }
        else if (retValue_type == 3) {
            _retSerializer.writeInt8(3);
            const auto retValue_3 = retValue.value3;
            CanvasPattern_serializer::write(_retSerializer, retValue_3);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getStrokeStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setStrokeStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 strokeStyle_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_CanvasGradient_CanvasPattern strokeStyle_value_buf = {};
        strokeStyle_value_buf.selector = strokeStyle_value_buf_selector;
        if (strokeStyle_value_buf_selector == 0) {
            strokeStyle_value_buf.selector = 0;
            strokeStyle_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (strokeStyle_value_buf_selector == 1) {
            strokeStyle_value_buf.selector = 1;
            strokeStyle_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (strokeStyle_value_buf_selector == 2) {
            strokeStyle_value_buf.selector = 2;
            strokeStyle_value_buf.value2 = static_cast<Ark_CanvasGradient>(CanvasGradient_serializer::read(thisDeserializer));
        }
        else if (strokeStyle_value_buf_selector == 3) {
            strokeStyle_value_buf.selector = 3;
            strokeStyle_value_buf.value3 = static_cast<Ark_CanvasPattern>(CanvasPattern_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for strokeStyle_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_CanvasGradient_CanvasPattern strokeStyle_value = static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern>(strokeStyle_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setStrokeStyle(self, static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern*>(&strokeStyle_value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setStrokeStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_CanvasRenderer_getFilter(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getFilter(self);
}
KOALA_INTEROP_1(CanvasRenderer_getFilter, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setFilter(Ark_NativePointer thisPtr, const KStringPtr& filter) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setFilter(self, (const Ark_String*) (&filter));
}
KOALA_INTEROP_V2(CanvasRenderer_setFilter, Ark_NativePointer, KStringPtr)
Ark_Boolean impl_CanvasRenderer_getImageSmoothingEnabled(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getImageSmoothingEnabled(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getImageSmoothingEnabled, Ark_Boolean, Ark_NativePointer)
void impl_CanvasRenderer_setImageSmoothingEnabled(Ark_NativePointer thisPtr, Ark_Boolean imageSmoothingEnabled) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setImageSmoothingEnabled(self, imageSmoothingEnabled);
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setImageSmoothingEnabled, Ark_NativePointer, Ark_Boolean)
void impl_CanvasRenderer_getImageSmoothingQuality(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getImageSmoothingQuality(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getImageSmoothingQuality, Ark_NativePointer)
void impl_CanvasRenderer_setImageSmoothingQuality(Ark_NativePointer thisPtr, const KStringPtr& imageSmoothingQuality) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setImageSmoothingQuality(self, (const Ark_String*) (&imageSmoothingQuality));
}
KOALA_INTEROP_V2(CanvasRenderer_setImageSmoothingQuality, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getLineCap(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getLineCap(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getLineCap, Ark_NativePointer)
void impl_CanvasRenderer_setLineCap(Ark_NativePointer thisPtr, const KStringPtr& lineCap) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineCap(self, (const Ark_String*) (&lineCap));
}
KOALA_INTEROP_V2(CanvasRenderer_setLineCap, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getLineDashOffset(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getLineDashOffset(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getLineDashOffset, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setLineDashOffset(Ark_NativePointer thisPtr, KInteropNumber lineDashOffset) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineDashOffset(self, (const Ark_Number*) (&lineDashOffset));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setLineDashOffset, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_getLineJoin(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getLineJoin(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getLineJoin, Ark_NativePointer)
void impl_CanvasRenderer_setLineJoin(Ark_NativePointer thisPtr, const KStringPtr& lineJoin) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineJoin(self, (const Ark_String*) (&lineJoin));
}
KOALA_INTEROP_V2(CanvasRenderer_setLineJoin, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getLineWidth(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getLineWidth(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getLineWidth, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setLineWidth(Ark_NativePointer thisPtr, KInteropNumber lineWidth) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineWidth(self, (const Ark_Number*) (&lineWidth));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setLineWidth, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getMiterLimit(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getMiterLimit(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getMiterLimit, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setMiterLimit(Ark_NativePointer thisPtr, KInteropNumber miterLimit) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setMiterLimit(self, (const Ark_Number*) (&miterLimit));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setMiterLimit, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getShadowBlur(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowBlur(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowBlur, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowBlur(Ark_NativePointer thisPtr, KInteropNumber shadowBlur) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowBlur(self, (const Ark_Number*) (&shadowBlur));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowBlur, Ark_NativePointer, KInteropNumber)
Ark_String impl_CanvasRenderer_getShadowColor(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowColor(self);
}
KOALA_INTEROP_1(CanvasRenderer_getShadowColor, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setShadowColor(Ark_NativePointer thisPtr, const KStringPtr& shadowColor) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowColor(self, (const Ark_String*) (&shadowColor));
}
KOALA_INTEROP_V2(CanvasRenderer_setShadowColor, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getShadowOffsetX(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowOffsetX, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowOffsetX(Ark_NativePointer thisPtr, KInteropNumber shadowOffsetX) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowOffsetX(self, (const Ark_Number*) (&shadowOffsetX));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getShadowOffsetY(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowOffsetY, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowOffsetY(Ark_NativePointer thisPtr, KInteropNumber shadowOffsetY) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowOffsetY(self, (const Ark_Number*) (&shadowOffsetY));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowOffsetY, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_getDirection(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getDirection, Ark_NativePointer)
void impl_CanvasRenderer_setDirection(Ark_NativePointer thisPtr, const KStringPtr& direction) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setDirection(self, (const Ark_String*) (&direction));
}
KOALA_INTEROP_V2(CanvasRenderer_setDirection, Ark_NativePointer, KStringPtr)
Ark_String impl_CanvasRenderer_getFont(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getFont(self);
}
KOALA_INTEROP_1(CanvasRenderer_getFont, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setFont(Ark_NativePointer thisPtr, const KStringPtr& font) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setFont(self, (const Ark_String*) (&font));
}
KOALA_INTEROP_V2(CanvasRenderer_setFont, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getTextAlign(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getTextAlign(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getTextAlign, Ark_NativePointer)
void impl_CanvasRenderer_setTextAlign(Ark_NativePointer thisPtr, const KStringPtr& textAlign) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTextAlign(self, (const Ark_String*) (&textAlign));
}
KOALA_INTEROP_V2(CanvasRenderer_setTextAlign, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getTextBaseline(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getTextBaseline(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getTextBaseline, Ark_NativePointer)
void impl_CanvasRenderer_setTextBaseline(Ark_NativePointer thisPtr, const KStringPtr& textBaseline) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTextBaseline(self, (const Ark_String*) (&textBaseline));
}
KOALA_INTEROP_V2(CanvasRenderer_setTextBaseline, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_CanvasRenderingContext2D_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto settings_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings settings_value_buf = {};
        settings_value_buf.tag = settings_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((settings_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            settings_value_buf.value = static_cast<Ark_RenderingContextSettings>(RenderingContextSettings_serializer::read(thisDeserializer));
        }
        Opt_RenderingContextSettings settings_value = settings_value_buf;;
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->construct(static_cast<Opt_RenderingContextSettings*>(&settings_value), static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_2(CanvasRenderingContext2D_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderingContext2D_getFinalizer() {
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderingContext2D_getFinalizer, Ark_NativePointer)
Ark_String impl_CanvasRenderingContext2D_toDataURL(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        const auto quality_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number quality_value_buf = {};
        quality_value_buf.tag = quality_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((quality_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            quality_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number quality_value = quality_value_buf;;
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->toDataURL(self, static_cast<Opt_String*>(&type_value), static_cast<Opt_Number*>(&quality_value));
}
KOALA_INTEROP_3(CanvasRenderingContext2D_toDataURL, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_startImageAnalyzer(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ImageAnalyzerConfig config_value = ImageAnalyzerConfig_serializer::read(thisDeserializer);;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->startImageAnalyzer(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ImageAnalyzerConfig*>(&config_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_startImageAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_stopImageAnalyzer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        GetAccessors()->getCanvasRenderingContext2DAccessor()->stopImageAnalyzer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderingContext2D_stopImageAnalyzer, Ark_NativePointer)
void impl_CanvasRenderingContext2D_onOnAttach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->onOnAttach(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Callback_Void*>(&callback__value));
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_onOnAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_offOnAttach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->offOnAttach(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_offOnAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_onOnDetach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->onOnDetach(self, static_cast<Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderingContext2D_onOnDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_offOnDetach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->offOnDetach(self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderingContext2D_offOnDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_CanvasRenderingContext2D_getHeight(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getHeight, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderingContext2D_setHeight(Ark_NativePointer thisPtr, KInteropNumber height) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        GetAccessors()->getCanvasRenderingContext2DAccessor()->setHeight(self, (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderingContext2D_setHeight, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderingContext2D_getWidth(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getWidth, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderingContext2D_setWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        GetAccessors()->getCanvasRenderingContext2DAccessor()->setWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderingContext2D_setWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_CanvasRenderingContext2D_getCanvas(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getCanvas(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getCanvas, Ark_NativePointer, Ark_NativePointer)
void impl_CanvasRenderingContext2D_setCanvas(Ark_NativePointer thisPtr, Ark_NativePointer canvas) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        GetAccessors()->getCanvasRenderingContext2DAccessor()->setCanvas(self, static_cast<Ark_FrameNode>(canvas));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderingContext2D_setCanvas, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_ChildrenMainSize_construct(KInteropNumber childDefaultSize) {
        return GetAccessors()->getChildrenMainSizeAccessor()->construct((const Ark_Number*) (&childDefaultSize));
}
KOALA_INTEROP_DIRECT_1(ChildrenMainSize_construct, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ChildrenMainSize_getFinalizer() {
        return GetAccessors()->getChildrenMainSizeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ChildrenMainSize_getFinalizer, Ark_NativePointer)
void impl_ChildrenMainSize_splice(Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto deleteCount_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number deleteCount_value_buf = {};
        deleteCount_value_buf.tag = deleteCount_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((deleteCount_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            deleteCount_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number deleteCount_value = deleteCount_value_buf;;
        const auto childrenSize_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number childrenSize_value_buf = {};
        childrenSize_value_buf.tag = childrenSize_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((childrenSize_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 childrenSize_value_buf__length = thisDeserializer.readInt32();
            Array_Number childrenSize_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(childrenSize_value_buf_)>::type,
        std::decay<decltype(*childrenSize_value_buf_.array)>::type>(&childrenSize_value_buf_, childrenSize_value_buf__length);
            for (int childrenSize_value_buf__i = 0; childrenSize_value_buf__i < childrenSize_value_buf__length; childrenSize_value_buf__i++) {
                childrenSize_value_buf_.array[childrenSize_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            childrenSize_value_buf.value = childrenSize_value_buf_;
        }
        Opt_Array_Number childrenSize_value = childrenSize_value_buf;;
        GetAccessors()->getChildrenMainSizeAccessor()->splice(self, (const Ark_Number*) (&start), static_cast<Opt_Number*>(&deleteCount_value), static_cast<Opt_Array_Number*>(&childrenSize_value));
}
KOALA_INTEROP_DIRECT_V4(ChildrenMainSize_splice, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_ChildrenMainSize_update(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber childSize) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        GetAccessors()->getChildrenMainSizeAccessor()->update(self, (const Ark_Number*) (&index), (const Ark_Number*) (&childSize));
}
KOALA_INTEROP_DIRECT_V3(ChildrenMainSize_update, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_Number impl_ChildrenMainSize_getChildDefaultSize(Ark_NativePointer thisPtr) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        return GetAccessors()->getChildrenMainSizeAccessor()->getChildDefaultSize(self);
}
KOALA_INTEROP_DIRECT_1(ChildrenMainSize_getChildDefaultSize, KInteropNumber, Ark_NativePointer)
void impl_ChildrenMainSize_setChildDefaultSize(Ark_NativePointer thisPtr, KInteropNumber childDefaultSize) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        GetAccessors()->getChildrenMainSizeAccessor()->setChildDefaultSize(self, (const Ark_Number*) (&childDefaultSize));
}
KOALA_INTEROP_DIRECT_V2(ChildrenMainSize_setChildDefaultSize, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_CircleShape_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapeSize options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ShapeSize_serializer::read(thisDeserializer);
        }
        Opt_ShapeSize options_value = options_value_buf;;
        return GetAccessors()->getCircleShapeAccessor()->construct(static_cast<Opt_ShapeSize*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(CircleShape_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_getFinalizer() {
        return GetAccessors()->getCircleShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CircleShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_CircleShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getCircleShapeAccessor()->offset(self, static_cast<Ark_Position*>(&offset_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getCircleShapeAccessor()->fill(self, static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getCircleShapeAccessor()->position(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_width(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 width_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length width_value_buf = {};
        width_value_buf.selector = width_value_buf_selector;
        if (width_value_buf_selector == 0) {
            width_value_buf.selector = 0;
            width_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (width_value_buf_selector == 1) {
            width_value_buf.selector = 1;
            width_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (width_value_buf_selector == 2) {
            width_value_buf.selector = 2;
            width_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for width_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length width_value = static_cast<Ark_Length>(width_value_buf);;
        return GetAccessors()->getCircleShapeAccessor()->width(self, static_cast<Ark_Length*>(&width_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_width, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_height(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 height_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length height_value_buf = {};
        height_value_buf.selector = height_value_buf_selector;
        if (height_value_buf_selector == 0) {
            height_value_buf.selector = 0;
            height_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (height_value_buf_selector == 1) {
            height_value_buf.selector = 1;
            height_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (height_value_buf_selector == 2) {
            height_value_buf.selector = 2;
            height_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for height_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length height_value = static_cast<Ark_Length>(height_value_buf);;
        return GetAccessors()->getCircleShapeAccessor()->height(self, static_cast<Ark_Length*>(&height_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_height, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = SizeOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getCircleShapeAccessor()->size(self, static_cast<Ark_SizeOptions*>(&size_value));
}
KOALA_INTEROP_DIRECT_3(CircleShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ClickEvent_construct() {
        return GetAccessors()->getClickEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ClickEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_ClickEvent_getFinalizer() {
        return GetAccessors()->getClickEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ClickEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_ClickEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_ClickEvent_getHand(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getClickEventAccessor()->getHand(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_InteractionHand>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ClickEvent_getHand, KInteropReturnBuffer, Ark_NativePointer)
void impl_ClickEvent_setHand(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto hand_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InteractionHand hand_value_buf = {};
        hand_value_buf.tag = hand_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((hand_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            hand_value_buf.value = static_cast<Ark_InteractionHand>(thisDeserializer.readInt32());
        }
        Opt_InteractionHand hand_value = hand_value_buf;;
        GetAccessors()->getClickEventAccessor()->setHand(self, static_cast<Opt_InteractionHand*>(&hand_value));
}
KOALA_INTEROP_DIRECT_V3(ClickEvent_setHand, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ClickEvent_getPreventDefault(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getClickEventAccessor()->getPreventDefault(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getPreventDefault, Ark_NativePointer, Ark_NativePointer)
void impl_ClickEvent_setPreventDefault(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void preventDefault_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getClickEventAccessor()->setPreventDefault(self, static_cast<Callback_Void*>(&preventDefault_value));
}
KOALA_INTEROP_DIRECT_V3(ClickEvent_setPreventDefault, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ClientAuthenticationHandler_construct() {
        return GetAccessors()->getClientAuthenticationHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ClientAuthenticationHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_ClientAuthenticationHandler_getFinalizer() {
        return GetAccessors()->getClientAuthenticationHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ClientAuthenticationHandler_getFinalizer, Ark_NativePointer)
void impl_ClientAuthenticationHandler_confirm0(Ark_NativePointer thisPtr, const KStringPtr& priKeyFile, const KStringPtr& certChainFile) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->confirm0(self, (const Ark_String*) (&priKeyFile), (const Ark_String*) (&certChainFile));
}
KOALA_INTEROP_V3(ClientAuthenticationHandler_confirm0, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_ClientAuthenticationHandler_confirm1(Ark_NativePointer thisPtr, const KStringPtr& authUri) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->confirm1(self, (const Ark_String*) (&authUri));
}
KOALA_INTEROP_V2(ClientAuthenticationHandler_confirm1, Ark_NativePointer, KStringPtr)
void impl_ClientAuthenticationHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(ClientAuthenticationHandler_cancel, Ark_NativePointer)
void impl_ClientAuthenticationHandler_ignore(Ark_NativePointer thisPtr) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->ignore(self);
}
KOALA_INTEROP_DIRECT_V1(ClientAuthenticationHandler_ignore, Ark_NativePointer)
Ark_NativePointer impl_ColorContent_construct() {
        return GetAccessors()->getColorContentAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ColorContent_construct, Ark_NativePointer)
Ark_NativePointer impl_ColorContent_getFinalizer() {
        return GetAccessors()->getColorContentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ColorContent_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ColorContent_getORIGIN() {
        return GetAccessors()->getColorContentAccessor()->getORIGIN();
}
KOALA_INTEROP_DIRECT_0(ColorContent_getORIGIN, Ark_NativePointer)
Ark_NativePointer impl_ColorFilter_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 value_value_buf_length = thisDeserializer.readInt32();
        Array_Number value_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(value_value_buf)>::type,
        std::decay<decltype(*value_value_buf.array)>::type>(&value_value_buf, value_value_buf_length);
        for (int value_value_buf_i = 0; value_value_buf_i < value_value_buf_length; value_value_buf_i++) {
            value_value_buf.array[value_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number value_value = value_value_buf;;
        return GetAccessors()->getColorFilterAccessor()->construct(static_cast<Array_Number*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(ColorFilter_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorFilter_getFinalizer() {
        return GetAccessors()->getColorFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ColorFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ColorMetrics_construct() {
        return GetAccessors()->getColorMetricsAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ColorMetrics_construct, Ark_NativePointer)
Ark_NativePointer impl_ColorMetrics_getFinalizer() {
        return GetAccessors()->getColorMetricsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ColorMetrics_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ColorMetrics_numeric(KInteropNumber value) {
        return GetAccessors()->getColorMetricsAccessor()->numeric((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_numeric, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ColorMetrics_rgba(KInteropNumber red, KInteropNumber green, KInteropNumber blue, KInteropNumber alpha) {
        return GetAccessors()->getColorMetricsAccessor()->rgba((const Ark_Number*) (&red), (const Ark_Number*) (&green), (const Ark_Number*) (&blue), (const Ark_Number*) (&alpha));
}
KOALA_INTEROP_DIRECT_4(ColorMetrics_rgba, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_ColorMetrics_resourceColor(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getColorMetricsAccessor()->resourceColor(static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_2(ColorMetrics_resourceColor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorMetrics_blendColor(Ark_NativePointer thisPtr, Ark_NativePointer overlayColor) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->blendColor(self, static_cast<Ark_ColorMetrics>(overlayColor));
}
KOALA_INTEROP_DIRECT_2(ColorMetrics_blendColor, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_String impl_ColorMetrics_color(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->color(self);
}
KOALA_INTEROP_1(ColorMetrics_color, KStringPtr, Ark_NativePointer)
Ark_Number impl_ColorMetrics_red(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->red(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_red, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_green(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->green(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_green, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_blue(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->blue(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_blue, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_alpha(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->alpha(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_alpha, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_common_Context_construct() {
        return GetAccessors()->getCommon_ContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(common_Context_construct, Ark_NativePointer)
Ark_NativePointer impl_common_Context_getFinalizer() {
        return GetAccessors()->getCommon_ContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(common_Context_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_common_Context_createBundleContext(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& bundleName) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->createBundleContext(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&bundleName));
}
KOALA_INTEROP_CTX_2(common_Context_createBundleContext, Ark_NativePointer, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_common_Context_createModuleContext0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& moduleName) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->createModuleContext0(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&moduleName));
}
KOALA_INTEROP_CTX_2(common_Context_createModuleContext0, Ark_NativePointer, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_common_Context_createModuleContext1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& bundleName, const KStringPtr& moduleName) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->createModuleContext1(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&bundleName), (const Ark_String*) (&moduleName));
}
KOALA_INTEROP_CTX_3(common_Context_createModuleContext1, Ark_NativePointer, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_common_Context_getGroupDir0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& dataGroupID, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Context_getGroupDir_Callback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Context_getGroupDir_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Context_getGroupDir_Callback))))};;
        GetAccessors()->getCommon_ContextAccessor()->getGroupDir0(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&dataGroupID), static_cast<Context_getGroupDir_Callback*>(&callback__value));
}
KOALA_INTEROP_CTX_V4(common_Context_getGroupDir0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_common_Context_getGroupDir1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& dataGroupID, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_String_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_String value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_String_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_String value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_String_Opt_Array_String_Void))))};;
        GetAccessors()->getCommon_ContextAccessor()->getGroupDir1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&dataGroupID), static_cast<Callback_Opt_String_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(common_Context_getGroupDir1, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_String impl_common_Context_getCacheDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getCacheDir(self);
}
KOALA_INTEROP_1(common_Context_getCacheDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setCacheDir(Ark_NativePointer thisPtr, const KStringPtr& cacheDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setCacheDir(self, (const Ark_String*) (&cacheDir));
}
KOALA_INTEROP_V2(common_Context_setCacheDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getTempDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getTempDir(self);
}
KOALA_INTEROP_1(common_Context_getTempDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setTempDir(Ark_NativePointer thisPtr, const KStringPtr& tempDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setTempDir(self, (const Ark_String*) (&tempDir));
}
KOALA_INTEROP_V2(common_Context_setTempDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getFilesDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getFilesDir(self);
}
KOALA_INTEROP_1(common_Context_getFilesDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setFilesDir(Ark_NativePointer thisPtr, const KStringPtr& filesDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setFilesDir(self, (const Ark_String*) (&filesDir));
}
KOALA_INTEROP_V2(common_Context_setFilesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getDatabaseDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getDatabaseDir(self);
}
KOALA_INTEROP_1(common_Context_getDatabaseDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setDatabaseDir(Ark_NativePointer thisPtr, const KStringPtr& databaseDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setDatabaseDir(self, (const Ark_String*) (&databaseDir));
}
KOALA_INTEROP_V2(common_Context_setDatabaseDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getPreferencesDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getPreferencesDir(self);
}
KOALA_INTEROP_1(common_Context_getPreferencesDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setPreferencesDir(Ark_NativePointer thisPtr, const KStringPtr& preferencesDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setPreferencesDir(self, (const Ark_String*) (&preferencesDir));
}
KOALA_INTEROP_V2(common_Context_setPreferencesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getBundleCodeDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getBundleCodeDir(self);
}
KOALA_INTEROP_1(common_Context_getBundleCodeDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setBundleCodeDir(Ark_NativePointer thisPtr, const KStringPtr& bundleCodeDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setBundleCodeDir(self, (const Ark_String*) (&bundleCodeDir));
}
KOALA_INTEROP_V2(common_Context_setBundleCodeDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getDistributedFilesDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getDistributedFilesDir(self);
}
KOALA_INTEROP_1(common_Context_getDistributedFilesDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setDistributedFilesDir(Ark_NativePointer thisPtr, const KStringPtr& distributedFilesDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setDistributedFilesDir(self, (const Ark_String*) (&distributedFilesDir));
}
KOALA_INTEROP_V2(common_Context_setDistributedFilesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getResourceDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getResourceDir(self);
}
KOALA_INTEROP_1(common_Context_getResourceDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setResourceDir(Ark_NativePointer thisPtr, const KStringPtr& resourceDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setResourceDir(self, (const Ark_String*) (&resourceDir));
}
KOALA_INTEROP_V2(common_Context_setResourceDir, Ark_NativePointer, KStringPtr)
Ark_String impl_common_Context_getCloudFileDir(Ark_NativePointer thisPtr) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        return GetAccessors()->getCommon_ContextAccessor()->getCloudFileDir(self);
}
KOALA_INTEROP_1(common_Context_getCloudFileDir, KStringPtr, Ark_NativePointer)
void impl_common_Context_setCloudFileDir(Ark_NativePointer thisPtr, const KStringPtr& cloudFileDir) {
        Ark_common_Context self = reinterpret_cast<Ark_common_Context>(thisPtr);
        GetAccessors()->getCommon_ContextAccessor()->setCloudFileDir(self, (const Ark_String*) (&cloudFileDir));
}
KOALA_INTEROP_V2(common_Context_setCloudFileDir, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_CommonShape_construct() {
        return GetAccessors()->getCommonShapeAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CommonShape_construct, Ark_NativePointer)
Ark_NativePointer impl_CommonShape_getFinalizer() {
        return GetAccessors()->getCommonShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CommonShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_CommonShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getCommonShapeAccessor()->offset(self, static_cast<Ark_Position*>(&offset_value));
}
KOALA_INTEROP_DIRECT_3(CommonShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getCommonShapeAccessor()->fill(self, static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_3(CommonShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getCommonShapeAccessor()->position(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_3(CommonShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ComponentContent_construct() {
        return GetAccessors()->getComponentContentAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ComponentContent_construct, Ark_NativePointer)
Ark_NativePointer impl_ComponentContent_getFinalizer() {
        return GetAccessors()->getComponentContentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ComponentContent_getFinalizer, Ark_NativePointer)
void impl_ComponentContent_update(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object args_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getComponentContentAccessor()->update(self, static_cast<Ark_Object*>(&args_value));
}
KOALA_INTEROP_DIRECT_V3(ComponentContent_update, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ComponentContent_reuse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((param_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        GetAccessors()->getComponentContentAccessor()->reuse(self, static_cast<Opt_Object*>(&param_value));
}
KOALA_INTEROP_DIRECT_V3(ComponentContent_reuse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ComponentContent_recycle(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->recycle(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_recycle, Ark_NativePointer)
void impl_ComponentContent_dispose(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_dispose, Ark_NativePointer)
void impl_ComponentContent_updateConfiguration(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->updateConfiguration(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_updateConfiguration, Ark_NativePointer)
Ark_NativePointer impl_ConsoleMessage_construct() {
        return GetAccessors()->getConsoleMessageAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ConsoleMessage_construct, Ark_NativePointer)
Ark_NativePointer impl_ConsoleMessage_getFinalizer() {
        return GetAccessors()->getConsoleMessageAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ConsoleMessage_getFinalizer, Ark_NativePointer)
Ark_String impl_ConsoleMessage_getMessage(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getMessage(self);
}
KOALA_INTEROP_1(ConsoleMessage_getMessage, KStringPtr, Ark_NativePointer)
Ark_String impl_ConsoleMessage_getSourceId(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getSourceId(self);
}
KOALA_INTEROP_1(ConsoleMessage_getSourceId, KStringPtr, Ark_NativePointer)
Ark_Number impl_ConsoleMessage_getLineNumber(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getLineNumber(self);
}
KOALA_INTEROP_DIRECT_1(ConsoleMessage_getLineNumber, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_ConsoleMessage_getMessageLevel(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getMessageLevel(self);
}
KOALA_INTEROP_DIRECT_1(ConsoleMessage_getMessageLevel, Ark_Int32, Ark_NativePointer)
void impl_ContentModifierHelper_contentModifierButton(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        ButtonModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ButtonConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ButtonModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ButtonConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ButtonModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierButton(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<ButtonModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierCheckbox(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        CheckBoxModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_CheckBoxConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CheckBoxModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_CheckBoxConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CheckBoxModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierCheckbox(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<CheckBoxModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierCheckbox, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierDataPanel(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        DataPanelModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_DataPanelConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_DataPanelModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_DataPanelConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_DataPanelModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierDataPanel(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<DataPanelModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierDataPanel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierGauge(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        GaugeModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_GaugeConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GaugeModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_GaugeConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GaugeModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierGauge(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<GaugeModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierGauge, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierLoadingProgress(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        LoadingProgressModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_LoadingProgressConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_LoadingProgressModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_LoadingProgressConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_LoadingProgressModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierLoadingProgress(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<LoadingProgressModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierLoadingProgress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierProgress(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        ProgressModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ProgressConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ProgressModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ProgressConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ProgressModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierProgress(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<ProgressModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierProgress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierRadio(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        RadioModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RadioConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RadioModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RadioConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RadioModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierRadio(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<RadioModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierRadio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierRating(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        RatingModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RatingConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RatingModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_RatingConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RatingModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierRating(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<RatingModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierRating, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierMenuItem(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        MenuItemModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_MenuItemConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_MenuItemModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_MenuItemConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_MenuItemModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierMenuItem(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<MenuItemModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierMenuItem, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierSlider(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        SliderModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_SliderConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SliderModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_SliderConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SliderModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierSlider(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<SliderModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierSlider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierTextClock(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        TextClockModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextClockConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextClockModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextClockConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextClockModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierTextClock(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<TextClockModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierTextClock, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierTextTimer(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        TextTimerModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextTimerConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextTimerModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_TextTimerConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextTimerModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierTextTimer(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<TextTimerModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierTextTimer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ContentModifierHelper_contentModifierToggle(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        ToggleModifierBuilder builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ToggleConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ToggleModifierBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Ark_ToggleConfiguration config, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ToggleModifierBuilder))))};;
        GetAccessors()->getContentModifierHelperAccessor()->contentModifierToggle(node, static_cast<Ark_Object*>(&contentModifier_value), static_cast<ToggleModifierBuilder*>(&builder_value));
}
KOALA_INTEROP_DIRECT_V3(ContentModifierHelper_contentModifierToggle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Context_construct() {
        return GetAccessors()->getContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Context_construct, Ark_NativePointer)
Ark_NativePointer impl_Context_getFinalizer() {
        return GetAccessors()->getContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Context_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ControllerHandler_construct() {
        return GetAccessors()->getControllerHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ControllerHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_ControllerHandler_getFinalizer() {
        return GetAccessors()->getControllerHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ControllerHandler_getFinalizer, Ark_NativePointer)
void impl_ControllerHandler_setWebController(Ark_NativePointer thisPtr, Ark_NativePointer controller) {
        Ark_ControllerHandler self = reinterpret_cast<Ark_ControllerHandler>(thisPtr);
        GetAccessors()->getControllerHandlerAccessor()->setWebController(self, static_cast<Ark_webview_WebviewController>(controller));
}
KOALA_INTEROP_DIRECT_V2(ControllerHandler_setWebController, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_curves_ICurve_construct() {
        return GetAccessors()->getCurves_ICurveAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(curves_ICurve_construct, Ark_NativePointer)
Ark_NativePointer impl_curves_ICurve_getFinalizer() {
        return GetAccessors()->getCurves_ICurveAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(curves_ICurve_getFinalizer, Ark_NativePointer)
Ark_Number impl_curves_ICurve_interpolate(Ark_NativePointer thisPtr, KInteropNumber fraction) {
        Ark_curves_ICurve self = reinterpret_cast<Ark_curves_ICurve>(thisPtr);
        return GetAccessors()->getCurves_ICurveAccessor()->interpolate(self, (const Ark_Number*) (&fraction));
}
KOALA_INTEROP_DIRECT_2(curves_ICurve_interpolate, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_CustomDialogController_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomDialogControllerOptions value_value = CustomDialogControllerOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getCustomDialogControllerAccessor()->construct(static_cast<Ark_CustomDialogControllerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(CustomDialogController_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CustomDialogController_getFinalizer() {
        return GetAccessors()->getCustomDialogControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CustomDialogController_getFinalizer, Ark_NativePointer)
void impl_CustomDialogController_open(Ark_NativePointer thisPtr) {
        Ark_CustomDialogController self = reinterpret_cast<Ark_CustomDialogController>(thisPtr);
        GetAccessors()->getCustomDialogControllerAccessor()->open(self);
}
KOALA_INTEROP_DIRECT_V1(CustomDialogController_open, Ark_NativePointer)
void impl_CustomDialogController_close(Ark_NativePointer thisPtr) {
        Ark_CustomDialogController self = reinterpret_cast<Ark_CustomDialogController>(thisPtr);
        GetAccessors()->getCustomDialogControllerAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(CustomDialogController_close, Ark_NativePointer)
Ark_NativePointer impl_CustomSpan_construct() {
        return GetAccessors()->getCustomSpanAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(CustomSpan_construct, Ark_NativePointer)
Ark_NativePointer impl_CustomSpan_getFinalizer() {
        return GetAccessors()->getCustomSpanAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CustomSpan_getFinalizer, Ark_NativePointer)
void impl_CustomSpan_invalidate(Ark_NativePointer thisPtr) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        GetAccessors()->getCustomSpanAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(CustomSpan_invalidate, Ark_NativePointer)
Ark_NativePointer impl_CustomSpan_getOnMeasure(Ark_NativePointer thisPtr) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getCustomSpanAccessor()->getOnMeasure(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(CustomSpan_getOnMeasure, Ark_NativePointer, Ark_NativePointer)
void impl_CustomSpan_setOnMeasure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_CustomSpanMeasureInfo_CustomSpanMetrics onMeasure_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CustomSpanMeasureInfo measureInfo, const Callback_CustomSpanMetrics_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CustomSpanMeasureInfo_CustomSpanMetrics)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomSpanMeasureInfo measureInfo, const Callback_CustomSpanMetrics_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CustomSpanMeasureInfo_CustomSpanMetrics))))};;
        GetAccessors()->getCustomSpanAccessor()->setOnMeasure(self, static_cast<Callback_CustomSpanMeasureInfo_CustomSpanMetrics*>(&onMeasure_value));
}
KOALA_INTEROP_DIRECT_V3(CustomSpan_setOnMeasure, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CustomSpan_getOnDraw(Ark_NativePointer thisPtr) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getCustomSpanAccessor()->getOnDraw(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(CustomSpan_getOnDraw, Ark_NativePointer, Ark_NativePointer)
void impl_CustomSpan_setOnDraw(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_DrawContext_CustomSpanDrawInfo_Void onDraw_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DrawContext context, const Ark_CustomSpanDrawInfo drawInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DrawContext_CustomSpanDrawInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext context, const Ark_CustomSpanDrawInfo drawInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DrawContext_CustomSpanDrawInfo_Void))))};;
        GetAccessors()->getCustomSpanAccessor()->setOnDraw(self, static_cast<Callback_DrawContext_CustomSpanDrawInfo_Void*>(&onDraw_value));
}
KOALA_INTEROP_DIRECT_V3(CustomSpan_setOnDraw, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DataResubmissionHandler_construct() {
        return GetAccessors()->getDataResubmissionHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DataResubmissionHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_DataResubmissionHandler_getFinalizer() {
        return GetAccessors()->getDataResubmissionHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DataResubmissionHandler_getFinalizer, Ark_NativePointer)
void impl_DataResubmissionHandler_resend(Ark_NativePointer thisPtr) {
        Ark_DataResubmissionHandler self = reinterpret_cast<Ark_DataResubmissionHandler>(thisPtr);
        GetAccessors()->getDataResubmissionHandlerAccessor()->resend(self);
}
KOALA_INTEROP_DIRECT_V1(DataResubmissionHandler_resend, Ark_NativePointer)
void impl_DataResubmissionHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_DataResubmissionHandler self = reinterpret_cast<Ark_DataResubmissionHandler>(thisPtr);
        GetAccessors()->getDataResubmissionHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(DataResubmissionHandler_cancel, Ark_NativePointer)
Ark_NativePointer impl_DatePickerDialog_construct() {
        return GetAccessors()->getDatePickerDialogAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DatePickerDialog_construct, Ark_NativePointer)
Ark_NativePointer impl_DatePickerDialog_getFinalizer() {
        return GetAccessors()->getDatePickerDialogAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DatePickerDialog_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DecorationStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_DecorationStyleInterface value_value = DecorationStyleInterface_serializer::read(thisDeserializer);;
        return GetAccessors()->getDecorationStyleAccessor()->construct(static_cast<Ark_DecorationStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(DecorationStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DecorationStyle_getFinalizer() {
        return GetAccessors()->getDecorationStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DecorationStyle_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_DecorationStyle_getType(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        return GetAccessors()->getDecorationStyleAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(DecorationStyle_getType, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_DecorationStyle_getColor(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getDecorationStyleAccessor()->getColor(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeInt32(static_cast<Ark_Color>(retValue_value_0));
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeString(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                Resource_serializer::write(_retSerializer, retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DecorationStyle_getColor, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_DecorationStyle_getStyle(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getDecorationStyleAccessor()->getStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextDecorationStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DecorationStyle_getStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_DisappearSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getDisappearSymbolEffectAccessor()->construct(static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_2(DisappearSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DisappearSymbolEffect_getFinalizer() {
        return GetAccessors()->getDisappearSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DisappearSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_DisappearSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_DisappearSymbolEffect self = reinterpret_cast<Ark_DisappearSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getDisappearSymbolEffectAccessor()->getScope(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DisappearSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_DisappearSymbolEffect_setScope(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DisappearSymbolEffect self = reinterpret_cast<Ark_DisappearSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        GetAccessors()->getDisappearSymbolEffectAccessor()->setScope(self, static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_V3(DisappearSymbolEffect_setScope, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DismissDialogAction_construct() {
        return GetAccessors()->getDismissDialogActionAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DismissDialogAction_construct, Ark_NativePointer)
Ark_NativePointer impl_DismissDialogAction_getFinalizer() {
        return GetAccessors()->getDismissDialogActionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DismissDialogAction_getFinalizer, Ark_NativePointer)
void impl_DismissDialogAction_dismiss(Ark_NativePointer thisPtr) {
        Ark_DismissDialogAction self = reinterpret_cast<Ark_DismissDialogAction>(thisPtr);
        GetAccessors()->getDismissDialogActionAccessor()->dismiss(self);
}
KOALA_INTEROP_DIRECT_V1(DismissDialogAction_dismiss, Ark_NativePointer)
Ark_Int32 impl_DismissDialogAction_getReason(Ark_NativePointer thisPtr) {
        Ark_DismissDialogAction self = reinterpret_cast<Ark_DismissDialogAction>(thisPtr);
        return GetAccessors()->getDismissDialogActionAccessor()->getReason(self);
}
KOALA_INTEROP_DIRECT_1(DismissDialogAction_getReason, Ark_Int32, Ark_NativePointer)
void impl_DismissDialogAction_setReason(Ark_NativePointer thisPtr, Ark_Int32 reason) {
        Ark_DismissDialogAction self = reinterpret_cast<Ark_DismissDialogAction>(thisPtr);
        GetAccessors()->getDismissDialogActionAccessor()->setReason(self, static_cast<Ark_DismissReason>(reason));
}
KOALA_INTEROP_DIRECT_V2(DismissDialogAction_setReason, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_DismissPopupAction_construct() {
        return GetAccessors()->getDismissPopupActionAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DismissPopupAction_construct, Ark_NativePointer)
Ark_NativePointer impl_DismissPopupAction_getFinalizer() {
        return GetAccessors()->getDismissPopupActionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DismissPopupAction_getFinalizer, Ark_NativePointer)
void impl_DismissPopupAction_dismiss(Ark_NativePointer thisPtr) {
        Ark_DismissPopupAction self = reinterpret_cast<Ark_DismissPopupAction>(thisPtr);
        GetAccessors()->getDismissPopupActionAccessor()->dismiss(self);
}
KOALA_INTEROP_DIRECT_V1(DismissPopupAction_dismiss, Ark_NativePointer)
Ark_Int32 impl_DismissPopupAction_getReason(Ark_NativePointer thisPtr) {
        Ark_DismissPopupAction self = reinterpret_cast<Ark_DismissPopupAction>(thisPtr);
        return GetAccessors()->getDismissPopupActionAccessor()->getReason(self);
}
KOALA_INTEROP_DIRECT_1(DismissPopupAction_getReason, Ark_Int32, Ark_NativePointer)
void impl_DismissPopupAction_setReason(Ark_NativePointer thisPtr, Ark_Int32 reason) {
        Ark_DismissPopupAction self = reinterpret_cast<Ark_DismissPopupAction>(thisPtr);
        GetAccessors()->getDismissPopupActionAccessor()->setReason(self, static_cast<Ark_DismissReason>(reason));
}
KOALA_INTEROP_DIRECT_V2(DismissPopupAction_setReason, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_DragEvent_construct() {
        return GetAccessors()->getDragEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DragEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_DragEvent_getFinalizer() {
        return GetAccessors()->getDragEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DragEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_DragEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getWindowX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_DragEvent_setData(Ark_NativePointer thisPtr, Ark_NativePointer unifiedData) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setData(self, static_cast<Ark_unifiedDataChannel_UnifiedData>(unifiedData));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setData, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_DragEvent_getData(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getData(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getData, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_DragEvent_getSummary(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getDragEventAccessor()->getSummary(self);
        SerializerBase _retSerializer {};
        unifiedDataChannel_Summary_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DragEvent_getSummary, KInteropReturnBuffer, Ark_NativePointer)
void impl_DragEvent_setResult(Ark_NativePointer thisPtr, Ark_Int32 dragResult) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setResult(self, static_cast<Ark_DragResult>(dragResult));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setResult, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_DragEvent_getResult(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getResult(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getResult, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_DragEvent_getPreviewRect(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getDragEventAccessor()->getPreviewRect(self);
        SerializerBase _retSerializer {};
        Rectangle_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DragEvent_getPreviewRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocity, KInteropNumber, Ark_NativePointer)
void impl_DragEvent_executeDropAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void customDropAnimation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getDragEventAccessor()->executeDropAnimation(self, static_cast<Callback_Void*>(&customDropAnimation_value));
}
KOALA_INTEROP_DIRECT_V3(DragEvent_executeDropAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_DragEvent_getDragBehavior(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDragBehavior(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDragBehavior, Ark_Int32, Ark_NativePointer)
void impl_DragEvent_setDragBehavior(Ark_NativePointer thisPtr, Ark_Int32 dragBehavior) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setDragBehavior(self, static_cast<Ark_DragBehavior>(dragBehavior));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setDragBehavior, Ark_NativePointer, Ark_Int32)
Ark_Boolean impl_DragEvent_getUseCustomDropAnimation(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getUseCustomDropAnimation(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getUseCustomDropAnimation, Ark_Boolean, Ark_NativePointer)
void impl_DragEvent_setUseCustomDropAnimation(Ark_NativePointer thisPtr, Ark_Boolean useCustomDropAnimation) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setUseCustomDropAnimation(self, useCustomDropAnimation);
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setUseCustomDropAnimation, Ark_NativePointer, Ark_Boolean)
KInteropReturnBuffer impl_DragEvent_getGetModifierKeyState(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getDragEventAccessor()->getGetModifierKeyState(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DragEvent_getGetModifierKeyState, KInteropReturnBuffer, Ark_NativePointer)
void impl_DragEvent_setGetModifierKeyState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto getModifierKeyState_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ModifierKeyStateGetter getModifierKeyState_value_buf = {};
        getModifierKeyState_value_buf.tag = getModifierKeyState_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((getModifierKeyState_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            getModifierKeyState_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ModifierKeyStateGetter)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ModifierKeyStateGetter))))};
        }
        Opt_ModifierKeyStateGetter getModifierKeyState_value = getModifierKeyState_value_buf;;
        GetAccessors()->getDragEventAccessor()->setGetModifierKeyState(self, static_cast<Opt_ModifierKeyStateGetter*>(&getModifierKeyState_value));
}
KOALA_INTEROP_DIRECT_V3(DragEvent_setGetModifierKeyState, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawableDescriptor_construct() {
        return GetAccessors()->getDrawableDescriptorAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DrawableDescriptor_construct, Ark_NativePointer)
Ark_NativePointer impl_DrawableDescriptor_getFinalizer() {
        return GetAccessors()->getDrawableDescriptorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawableDescriptor_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DrawableDescriptor_getPixelMap(Ark_NativePointer thisPtr) {
        Ark_DrawableDescriptor self = reinterpret_cast<Ark_DrawableDescriptor>(thisPtr);
        return GetAccessors()->getDrawableDescriptorAccessor()->getPixelMap(self);
}
KOALA_INTEROP_DIRECT_1(DrawableDescriptor_getPixelMap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_DrawContext_construct() {
        return GetAccessors()->getDrawContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DrawContext_construct, Ark_NativePointer)
Ark_NativePointer impl_DrawContext_getFinalizer() {
        return GetAccessors()->getDrawContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawContext_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_DrawContext_size(Ark_NativePointer thisPtr) {
        Ark_DrawContext self = reinterpret_cast<Ark_DrawContext>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawContextAccessor()->size(self);
        SerializerBase _retSerializer {};
        Size_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DrawContext_size, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_DrawContext_sizeInPixel(Ark_NativePointer thisPtr) {
        Ark_DrawContext self = reinterpret_cast<Ark_DrawContext>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawContextAccessor()->sizeInPixel(self);
        SerializerBase _retSerializer {};
        Size_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DrawContext_sizeInPixel, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_DrawContext_canvas(Ark_NativePointer thisPtr) {
        Ark_DrawContext self = reinterpret_cast<Ark_DrawContext>(thisPtr);
        return GetAccessors()->getDrawContextAccessor()->canvas(self);
}
KOALA_INTEROP_DIRECT_1(DrawContext_canvas, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Brush_construct0() {
        return GetAccessors()->getDrawing_BrushAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(drawing_Brush_construct0, Ark_NativePointer)
Ark_NativePointer impl_drawing_Brush_construct1(Ark_NativePointer brush) {
        return GetAccessors()->getDrawing_BrushAccessor()->construct1(static_cast<Ark_drawing_Brush>(brush));
}
KOALA_INTEROP_DIRECT_1(drawing_Brush_construct1, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Brush_getFinalizer() {
        return GetAccessors()->getDrawing_BrushAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Brush_getFinalizer, Ark_NativePointer)
void impl_drawing_Brush_setColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_BrushAccessor()->setColor0(self, static_cast<Ark_common2D_Color*>(&color_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Brush_setColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Brush_setColor1(Ark_NativePointer thisPtr, KInteropNumber color) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setColor1(self, (const Ark_Number*) (&color));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setColor1, Ark_NativePointer, KInteropNumber)
void impl_drawing_Brush_setColor2(Ark_NativePointer thisPtr, KInteropNumber alpha, KInteropNumber red, KInteropNumber green, KInteropNumber blue) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setColor2(self, (const Ark_Number*) (&alpha), (const Ark_Number*) (&red), (const Ark_Number*) (&green), (const Ark_Number*) (&blue));
}
KOALA_INTEROP_DIRECT_V5(drawing_Brush_setColor2, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_drawing_Brush_getColor(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_BrushAccessor()->getColor(self);
        SerializerBase _retSerializer {};
        common2D_Color_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Brush_getColor, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_drawing_Brush_getHexColor(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        return GetAccessors()->getDrawing_BrushAccessor()->getHexColor(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Brush_getHexColor, KInteropNumber, Ark_NativePointer)
void impl_drawing_Brush_setAntiAlias(Ark_NativePointer thisPtr, Ark_Boolean aa) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setAntiAlias(self, aa);
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setAntiAlias, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Brush_isAntiAlias(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        return GetAccessors()->getDrawing_BrushAccessor()->isAntiAlias(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Brush_isAntiAlias, Ark_Boolean, Ark_NativePointer)
void impl_drawing_Brush_setAlpha(Ark_NativePointer thisPtr, KInteropNumber alpha) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setAlpha(self, (const Ark_Number*) (&alpha));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setAlpha, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Brush_getAlpha(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        return GetAccessors()->getDrawing_BrushAccessor()->getAlpha(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Brush_getAlpha, KInteropNumber, Ark_NativePointer)
void impl_drawing_Brush_setColorFilter(Ark_NativePointer thisPtr, Ark_NativePointer filter) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setColorFilter(self, static_cast<Ark_drawing_ColorFilter>(filter));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setColorFilter, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Brush_getColorFilter(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        return GetAccessors()->getDrawing_BrushAccessor()->getColorFilter(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Brush_getColorFilter, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Brush_setImageFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto filter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_ImageFilter filter_value_buf = {};
        filter_value_buf.tag = filter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((filter_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            filter_value_buf.value = static_cast<Ark_drawing_ImageFilter>(drawing_ImageFilter_serializer::read(thisDeserializer));
        }
        Opt_drawing_ImageFilter filter_value = filter_value_buf;;
        GetAccessors()->getDrawing_BrushAccessor()->setImageFilter(self, static_cast<Opt_drawing_ImageFilter*>(&filter_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Brush_setImageFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Brush_setMaskFilter(Ark_NativePointer thisPtr, Ark_NativePointer filter) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setMaskFilter(self, static_cast<Ark_drawing_MaskFilter>(filter));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setMaskFilter, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Brush_setShadowLayer(Ark_NativePointer thisPtr, Ark_NativePointer shadowLayer) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setShadowLayer(self, static_cast<Ark_drawing_ShadowLayer>(shadowLayer));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setShadowLayer, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Brush_setShaderEffect(Ark_NativePointer thisPtr, Ark_NativePointer shaderEffect) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setShaderEffect(self, static_cast<Ark_drawing_ShaderEffect>(shaderEffect));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setShaderEffect, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Brush_setBlendMode(Ark_NativePointer thisPtr, Ark_Int32 mode) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->setBlendMode(self, static_cast<Ark_drawing_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_V2(drawing_Brush_setBlendMode, Ark_NativePointer, Ark_Int32)
void impl_drawing_Brush_reset(Ark_NativePointer thisPtr) {
        Ark_drawing_Brush self = reinterpret_cast<Ark_drawing_Brush>(thisPtr);
        GetAccessors()->getDrawing_BrushAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Brush_reset, Ark_NativePointer)
Ark_NativePointer impl_drawing_Canvas_construct(Ark_NativePointer pixelmap) {
        return GetAccessors()->getDrawing_CanvasAccessor()->construct(static_cast<Ark_image_PixelMap>(pixelmap));
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_construct, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Canvas_getFinalizer() {
        return GetAccessors()->getDrawing_CanvasAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Canvas_getFinalizer, Ark_NativePointer)
void impl_drawing_Canvas_drawRect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawRect0(self, static_cast<Ark_common2D_Rect*>(&rect_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_drawRect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Canvas_drawRect1(Ark_NativePointer thisPtr, KInteropNumber left, KInteropNumber top, KInteropNumber right, KInteropNumber bottom) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawRect1(self, (const Ark_Number*) (&left), (const Ark_Number*) (&top), (const Ark_Number*) (&right), (const Ark_Number*) (&bottom));
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_drawRect1, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawRoundRect(Ark_NativePointer thisPtr, Ark_NativePointer roundRect) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawRoundRect(self, static_cast<Ark_drawing_RoundRect>(roundRect));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_drawRoundRect, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_drawNestedRoundRect(Ark_NativePointer thisPtr, Ark_NativePointer outer, Ark_NativePointer inner) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawNestedRoundRect(self, static_cast<Ark_drawing_RoundRect>(outer), static_cast<Ark_drawing_RoundRect>(inner));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_drawNestedRoundRect, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_drawBackground(Ark_NativePointer thisPtr, Ark_NativePointer brush) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawBackground(self, static_cast<Ark_drawing_Brush>(brush));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_drawBackground, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_drawShadow0(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber lightRadius, Ark_Int32 flag) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point3d planeParams_value = common2D_Point3d_serializer::read(thisDeserializer);;
        Ark_common2D_Point3d devLightPos_value = common2D_Point3d_serializer::read(thisDeserializer);;
        Ark_common2D_Color ambientColor_value = common2D_Color_serializer::read(thisDeserializer);;
        Ark_common2D_Color spotColor_value = common2D_Color_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawShadow0(self, static_cast<Ark_drawing_Path>(path), static_cast<Ark_common2D_Point3d*>(&planeParams_value), static_cast<Ark_common2D_Point3d*>(&devLightPos_value), (const Ark_Number*) (&lightRadius), static_cast<Ark_common2D_Color*>(&ambientColor_value), static_cast<Ark_common2D_Color*>(&spotColor_value), static_cast<Ark_drawing_ShadowFlag>(flag));
}
KOALA_INTEROP_DIRECT_V6(drawing_Canvas_drawShadow0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, Ark_Int32)
void impl_drawing_Canvas_drawShadow1(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber lightRadius, KInteropNumber ambientColor, KInteropNumber spotColor, Ark_Int32 flag) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point3d planeParams_value = common2D_Point3d_serializer::read(thisDeserializer);;
        Ark_common2D_Point3d devLightPos_value = common2D_Point3d_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawShadow1(self, static_cast<Ark_drawing_Path>(path), static_cast<Ark_common2D_Point3d*>(&planeParams_value), static_cast<Ark_common2D_Point3d*>(&devLightPos_value), (const Ark_Number*) (&lightRadius), (const Ark_Number*) (&ambientColor), (const Ark_Number*) (&spotColor), static_cast<Ark_drawing_ShadowFlag>(flag));
}
KOALA_INTEROP_DIRECT_V8(drawing_Canvas_drawShadow1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber, Ark_Int32)
void impl_drawing_Canvas_drawCircle(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radius) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawCircle(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radius));
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_drawCircle, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawImage(Ark_NativePointer thisPtr, Ark_NativePointer pixelmap, KInteropNumber left, KInteropNumber top, Ark_NativePointer samplingOptions) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawImage(self, static_cast<Ark_image_PixelMap>(pixelmap), (const Ark_Number*) (&left), (const Ark_Number*) (&top), static_cast<Ark_drawing_SamplingOptions>(samplingOptions));
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_drawImage, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_NativePointer)
void impl_drawing_Canvas_drawImageRect(Ark_NativePointer thisPtr, Ark_NativePointer pixelmap, KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer samplingOptions) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect dstRect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawImageRect(self, static_cast<Ark_image_PixelMap>(pixelmap), static_cast<Ark_common2D_Rect*>(&dstRect_value), static_cast<Ark_drawing_SamplingOptions>(samplingOptions));
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_drawImageRect, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_NativePointer)
void impl_drawing_Canvas_drawImageRectWithSrc(Ark_NativePointer thisPtr, Ark_NativePointer pixelmap, KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer samplingOptions, Ark_Int32 constraint) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect srcRect_value = common2D_Rect_serializer::read(thisDeserializer);;
        Ark_common2D_Rect dstRect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawImageRectWithSrc(self, static_cast<Ark_image_PixelMap>(pixelmap), static_cast<Ark_common2D_Rect*>(&srcRect_value), static_cast<Ark_common2D_Rect*>(&dstRect_value), static_cast<Ark_drawing_SamplingOptions>(samplingOptions), static_cast<Ark_drawing_SrcRectConstraint>(constraint));
}
KOALA_INTEROP_DIRECT_V6(drawing_Canvas_drawImageRectWithSrc, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_NativePointer, Ark_Int32)
void impl_drawing_Canvas_drawColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 blendMode) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawColor0(self, static_cast<Ark_common2D_Color*>(&color_value), static_cast<Ark_drawing_BlendMode>(blendMode));
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_drawColor0, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
void impl_drawing_Canvas_drawColor1(Ark_NativePointer thisPtr, KInteropNumber color, Ark_Int32 blendMode) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawColor1(self, (const Ark_Number*) (&color), static_cast<Ark_drawing_BlendMode>(blendMode));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_drawColor1, Ark_NativePointer, KInteropNumber, Ark_Int32)
void impl_drawing_Canvas_drawColor2(Ark_NativePointer thisPtr, KInteropNumber alpha, KInteropNumber red, KInteropNumber green, KInteropNumber blue, Ark_Int32 blendMode) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawColor2(self, (const Ark_Number*) (&alpha), (const Ark_Number*) (&red), (const Ark_Number*) (&green), (const Ark_Number*) (&blue), static_cast<Ark_drawing_BlendMode>(blendMode));
}
KOALA_INTEROP_DIRECT_V6(drawing_Canvas_drawColor2, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, Ark_Int32)
void impl_drawing_Canvas_drawOval(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect oval_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawOval(self, static_cast<Ark_common2D_Rect*>(&oval_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_drawOval, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Canvas_drawArc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber startAngle, KInteropNumber sweepAngle) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect arc_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->drawArc(self, static_cast<Ark_common2D_Rect*>(&arc_value), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&sweepAngle));
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_drawArc, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawPoint(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawPoint(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_drawPoint, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawPoints(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 mode) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 points_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point points_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(points_value_buf)>::type,
        std::decay<decltype(*points_value_buf.array)>::type>(&points_value_buf, points_value_buf_length);
        for (int points_value_buf_i = 0; points_value_buf_i < points_value_buf_length; points_value_buf_i++) {
            points_value_buf.array[points_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point points_value = points_value_buf;;
        GetAccessors()->getDrawing_CanvasAccessor()->drawPoints(self, static_cast<Array_common2D_Point*>(&points_value), static_cast<Ark_drawing_PointMode>(mode));
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_drawPoints, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
void impl_drawing_Canvas_drawPath(Ark_NativePointer thisPtr, Ark_NativePointer path) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawPath(self, static_cast<Ark_drawing_Path>(path));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_drawPath, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_drawLine(Ark_NativePointer thisPtr, KInteropNumber x0, KInteropNumber y0, KInteropNumber x1, KInteropNumber y1) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawLine(self, (const Ark_Number*) (&x0), (const Ark_Number*) (&y0), (const Ark_Number*) (&x1), (const Ark_Number*) (&y1));
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_drawLine, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawSingleCharacter(Ark_NativePointer thisPtr, const KStringPtr& text, Ark_NativePointer font, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawSingleCharacter(self, (const Ark_String*) (&text), static_cast<Ark_drawing_Font>(font), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_V5(drawing_Canvas_drawSingleCharacter, Ark_NativePointer, KStringPtr, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawTextBlob(Ark_NativePointer thisPtr, Ark_NativePointer blob, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawTextBlob(self, static_cast<Ark_drawing_TextBlob>(blob), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_drawTextBlob, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawPixelMapMesh(Ark_NativePointer thisPtr, Ark_NativePointer pixelmap, KInteropNumber meshWidth, KInteropNumber meshHeight, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber vertOffset, KInteropNumber colorOffset) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 vertices_value_buf_length = thisDeserializer.readInt32();
        Array_Number vertices_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(vertices_value_buf)>::type,
        std::decay<decltype(*vertices_value_buf.array)>::type>(&vertices_value_buf, vertices_value_buf_length);
        for (int vertices_value_buf_i = 0; vertices_value_buf_i < vertices_value_buf_length; vertices_value_buf_i++) {
            vertices_value_buf.array[vertices_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number vertices_value = vertices_value_buf;;
        const Ark_Int32 colors_value_buf_length = thisDeserializer.readInt32();
        Array_Number colors_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colors_value_buf)>::type,
        std::decay<decltype(*colors_value_buf.array)>::type>(&colors_value_buf, colors_value_buf_length);
        for (int colors_value_buf_i = 0; colors_value_buf_i < colors_value_buf_length; colors_value_buf_i++) {
            colors_value_buf.array[colors_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number colors_value = colors_value_buf;;
        GetAccessors()->getDrawing_CanvasAccessor()->drawPixelMapMesh(self, static_cast<Ark_image_PixelMap>(pixelmap), (const Ark_Number*) (&meshWidth), (const Ark_Number*) (&meshHeight), static_cast<Array_Number*>(&vertices_value), (const Ark_Number*) (&vertOffset), static_cast<Array_Number*>(&colors_value), (const Ark_Number*) (&colorOffset));
}
KOALA_INTEROP_DIRECT_V8(drawing_Canvas_drawPixelMapMesh, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_drawRegion(Ark_NativePointer thisPtr, Ark_NativePointer region) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->drawRegion(self, static_cast<Ark_drawing_Region>(region));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_drawRegion, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_attachPen(Ark_NativePointer thisPtr, Ark_NativePointer pen) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->attachPen(self, static_cast<Ark_drawing_Pen>(pen));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_attachPen, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_attachBrush(Ark_NativePointer thisPtr, Ark_NativePointer brush) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->attachBrush(self, static_cast<Ark_drawing_Brush>(brush));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_attachBrush, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_detachPen(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->detachPen(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Canvas_detachPen, Ark_NativePointer)
void impl_drawing_Canvas_detachBrush(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->detachBrush(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Canvas_detachBrush, Ark_NativePointer)
Ark_Number impl_drawing_Canvas_save(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->save(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_save, KInteropNumber, Ark_NativePointer)
Ark_Number impl_drawing_Canvas_saveLayer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_common2D_Rect rect_value_buf = {};
        rect_value_buf.tag = rect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rect_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rect_value_buf.value = common2D_Rect_serializer::read(thisDeserializer);
        }
        Opt_common2D_Rect rect_value = rect_value_buf;;
        const auto brush_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Brush brush_value_buf = {};
        brush_value_buf.tag = brush_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((brush_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            brush_value_buf.value = static_cast<Ark_drawing_Brush>(drawing_Brush_serializer::read(thisDeserializer));
        }
        Opt_drawing_Brush brush_value = brush_value_buf;;
        return GetAccessors()->getDrawing_CanvasAccessor()->saveLayer(self, static_cast<Opt_common2D_Rect*>(&rect_value), static_cast<Opt_drawing_Brush*>(&brush_value));
}
KOALA_INTEROP_DIRECT_3(drawing_Canvas_saveLayer, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Canvas_clear0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->clear0(self, static_cast<Ark_common2D_Color*>(&color_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_clear0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Canvas_clear1(Ark_NativePointer thisPtr, KInteropNumber color) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->clear1(self, (const Ark_Number*) (&color));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_clear1, Ark_NativePointer, KInteropNumber)
void impl_drawing_Canvas_restore(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->restore(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Canvas_restore, Ark_NativePointer)
void impl_drawing_Canvas_restoreToCount(Ark_NativePointer thisPtr, KInteropNumber count) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->restoreToCount(self, (const Ark_Number*) (&count));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_restoreToCount, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Canvas_getSaveCount(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->getSaveCount(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_getSaveCount, KInteropNumber, Ark_NativePointer)
Ark_Number impl_drawing_Canvas_getWidth(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_getWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_drawing_Canvas_getHeight(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_getHeight, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_drawing_Canvas_getLocalClipBounds(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_CanvasAccessor()->getLocalClipBounds(self);
        SerializerBase _retSerializer {};
        common2D_Rect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Canvas_getLocalClipBounds, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Canvas_getTotalMatrix(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->getTotalMatrix(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_getTotalMatrix, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_scale(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->scale(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_scale, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_skew(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->skew(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_skew, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_rotate(Ark_NativePointer thisPtr, KInteropNumber degrees, KInteropNumber sx, KInteropNumber sy) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->rotate(self, (const Ark_Number*) (&degrees), (const Ark_Number*) (&sx), (const Ark_Number*) (&sy));
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_rotate, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_translate(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->translate(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_translate, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Canvas_clipPath(Ark_NativePointer thisPtr, Ark_NativePointer path, Ark_Int32 clipOp, Ark_Boolean doAntiAlias) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->clipPath(self, static_cast<Ark_drawing_Path>(path), static_cast<Ark_drawing_ClipOp>(clipOp), doAntiAlias);
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_clipPath, Ark_NativePointer, Ark_NativePointer, Ark_Int32, Ark_Boolean)
void impl_drawing_Canvas_clipRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 clipOp, Ark_Boolean doAntiAlias) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_CanvasAccessor()->clipRect(self, static_cast<Ark_common2D_Rect*>(&rect_value), static_cast<Ark_drawing_ClipOp>(clipOp), doAntiAlias);
}
KOALA_INTEROP_DIRECT_V5(drawing_Canvas_clipRect, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32, Ark_Boolean)
void impl_drawing_Canvas_concatMatrix(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->concatMatrix(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_concatMatrix, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_clipRegion(Ark_NativePointer thisPtr, Ark_NativePointer region, Ark_Int32 clipOp) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->clipRegion(self, static_cast<Ark_drawing_Region>(region), static_cast<Ark_drawing_ClipOp>(clipOp));
}
KOALA_INTEROP_DIRECT_V3(drawing_Canvas_clipRegion, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
void impl_drawing_Canvas_clipRoundRect(Ark_NativePointer thisPtr, Ark_NativePointer roundRect, Ark_Int32 clipOp, Ark_Boolean doAntiAlias) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->clipRoundRect(self, static_cast<Ark_drawing_RoundRect>(roundRect), static_cast<Ark_drawing_ClipOp>(clipOp), doAntiAlias);
}
KOALA_INTEROP_DIRECT_V4(drawing_Canvas_clipRoundRect, Ark_NativePointer, Ark_NativePointer, Ark_Int32, Ark_Boolean)
Ark_Boolean impl_drawing_Canvas_isClipEmpty(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        return GetAccessors()->getDrawing_CanvasAccessor()->isClipEmpty(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Canvas_isClipEmpty, Ark_Boolean, Ark_NativePointer)
void impl_drawing_Canvas_setMatrix(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->setMatrix(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_V2(drawing_Canvas_setMatrix, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Canvas_resetMatrix(Ark_NativePointer thisPtr) {
        Ark_drawing_Canvas self = reinterpret_cast<Ark_drawing_Canvas>(thisPtr);
        GetAccessors()->getDrawing_CanvasAccessor()->resetMatrix(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Canvas_resetMatrix, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_construct() {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_ColorFilter_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_getFinalizer() {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_ColorFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_createBlendModeColorFilter0(KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 mode) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createBlendModeColorFilter0(static_cast<Ark_common2D_Color*>(&color_value), static_cast<Ark_drawing_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_3(drawing_ColorFilter_createBlendModeColorFilter0, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
Ark_NativePointer impl_drawing_ColorFilter_createBlendModeColorFilter1(KInteropNumber color, Ark_Int32 mode) {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createBlendModeColorFilter1((const Ark_Number*) (&color), static_cast<Ark_drawing_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_2(drawing_ColorFilter_createBlendModeColorFilter1, Ark_NativePointer, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_drawing_ColorFilter_createComposeColorFilter(Ark_NativePointer outer, Ark_NativePointer inner) {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createComposeColorFilter(static_cast<Ark_drawing_ColorFilter>(outer), static_cast<Ark_drawing_ColorFilter>(inner));
}
KOALA_INTEROP_DIRECT_2(drawing_ColorFilter_createComposeColorFilter, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_createLinearToSRGBGamma() {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createLinearToSRGBGamma();
}
KOALA_INTEROP_DIRECT_0(drawing_ColorFilter_createLinearToSRGBGamma, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_createSRGBGammaToLinear() {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createSRGBGammaToLinear();
}
KOALA_INTEROP_DIRECT_0(drawing_ColorFilter_createSRGBGammaToLinear, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_createLumaColorFilter() {
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createLumaColorFilter();
}
KOALA_INTEROP_DIRECT_0(drawing_ColorFilter_createLumaColorFilter, Ark_NativePointer)
Ark_NativePointer impl_drawing_ColorFilter_createMatrixColorFilter(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 matrix_value_buf_length = thisDeserializer.readInt32();
        Array_Number matrix_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(matrix_value_buf)>::type,
        std::decay<decltype(*matrix_value_buf.array)>::type>(&matrix_value_buf, matrix_value_buf_length);
        for (int matrix_value_buf_i = 0; matrix_value_buf_i < matrix_value_buf_length; matrix_value_buf_i++) {
            matrix_value_buf.array[matrix_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawing_ColorFilterAccessor()->createMatrixColorFilter(static_cast<Array_Number*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_2(drawing_ColorFilter_createMatrixColorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_drawing_Font_construct() {
        return GetAccessors()->getDrawing_FontAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_Font_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_Font_getFinalizer() {
        return GetAccessors()->getDrawing_FontAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Font_getFinalizer, Ark_NativePointer)
void impl_drawing_Font_enableSubpixel(Ark_NativePointer thisPtr, Ark_Boolean isSubpixel) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->enableSubpixel(self, isSubpixel);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_enableSubpixel, Ark_NativePointer, Ark_Boolean)
void impl_drawing_Font_enableEmbolden(Ark_NativePointer thisPtr, Ark_Boolean isEmbolden) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->enableEmbolden(self, isEmbolden);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_enableEmbolden, Ark_NativePointer, Ark_Boolean)
void impl_drawing_Font_enableLinearMetrics(Ark_NativePointer thisPtr, Ark_Boolean isLinearMetrics) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->enableLinearMetrics(self, isLinearMetrics);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_enableLinearMetrics, Ark_NativePointer, Ark_Boolean)
void impl_drawing_Font_setSize(Ark_NativePointer thisPtr, KInteropNumber textSize) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setSize(self, (const Ark_Number*) (&textSize));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setSize, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Font_getSize(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getSize(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getSize, KInteropNumber, Ark_NativePointer)
void impl_drawing_Font_setTypeface(Ark_NativePointer thisPtr, Ark_NativePointer typeface) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setTypeface(self, static_cast<Ark_drawing_Typeface>(typeface));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setTypeface, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Font_getTypeface(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getTypeface(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getTypeface, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_drawing_Font_getMetrics(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_FontAccessor()->getMetrics(self);
        SerializerBase _retSerializer {};
        drawing_FontMetrics_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Font_getMetrics, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_drawing_Font_measureSingleCharacter(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->measureSingleCharacter(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_2(drawing_Font_measureSingleCharacter, KInteropNumber, Ark_NativePointer, KStringPtr)
Ark_Number impl_drawing_Font_measureText(Ark_NativePointer thisPtr, const KStringPtr& text, Ark_Int32 encoding) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->measureText(self, (const Ark_String*) (&text), static_cast<Ark_drawing_TextEncoding>(encoding));
}
KOALA_INTEROP_3(drawing_Font_measureText, KInteropNumber, Ark_NativePointer, KStringPtr, Ark_Int32)
void impl_drawing_Font_setScaleX(Ark_NativePointer thisPtr, KInteropNumber scaleX) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setScaleX(self, (const Ark_Number*) (&scaleX));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setScaleX, Ark_NativePointer, KInteropNumber)
void impl_drawing_Font_setSkewX(Ark_NativePointer thisPtr, KInteropNumber skewX) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setSkewX(self, (const Ark_Number*) (&skewX));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setSkewX, Ark_NativePointer, KInteropNumber)
void impl_drawing_Font_setEdging(Ark_NativePointer thisPtr, Ark_Int32 edging) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setEdging(self, static_cast<Ark_drawing_FontEdging>(edging));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setEdging, Ark_NativePointer, Ark_Int32)
void impl_drawing_Font_setHinting(Ark_NativePointer thisPtr, Ark_Int32 hinting) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setHinting(self, static_cast<Ark_drawing_FontHinting>(hinting));
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setHinting, Ark_NativePointer, Ark_Int32)
Ark_Number impl_drawing_Font_countText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->countText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_2(drawing_Font_countText, KInteropNumber, Ark_NativePointer, KStringPtr)
void impl_drawing_Font_setBaselineSnap(Ark_NativePointer thisPtr, Ark_Boolean isBaselineSnap) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setBaselineSnap(self, isBaselineSnap);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setBaselineSnap, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Font_isBaselineSnap(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isBaselineSnap(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isBaselineSnap, Ark_Boolean, Ark_NativePointer)
void impl_drawing_Font_setEmbeddedBitmaps(Ark_NativePointer thisPtr, Ark_Boolean isEmbeddedBitmaps) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setEmbeddedBitmaps(self, isEmbeddedBitmaps);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setEmbeddedBitmaps, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Font_isEmbeddedBitmaps(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isEmbeddedBitmaps(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isEmbeddedBitmaps, Ark_Boolean, Ark_NativePointer)
void impl_drawing_Font_setForceAutoHinting(Ark_NativePointer thisPtr, Ark_Boolean isForceAutoHinting) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        GetAccessors()->getDrawing_FontAccessor()->setForceAutoHinting(self, isForceAutoHinting);
}
KOALA_INTEROP_DIRECT_V2(drawing_Font_setForceAutoHinting, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Font_isForceAutoHinting(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isForceAutoHinting(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isForceAutoHinting, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_drawing_Font_getWidths(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 glyphs_value_buf_length = thisDeserializer.readInt32();
        Array_Number glyphs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(glyphs_value_buf)>::type,
        std::decay<decltype(*glyphs_value_buf.array)>::type>(&glyphs_value_buf, glyphs_value_buf_length);
        for (int glyphs_value_buf_i = 0; glyphs_value_buf_i < glyphs_value_buf_length; glyphs_value_buf_i++) {
            glyphs_value_buf.array[glyphs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number glyphs_value = glyphs_value_buf;;
        const auto &retValue = GetAccessors()->getDrawing_FontAccessor()->getWidths(self, static_cast<Array_Number*>(&glyphs_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(drawing_Font_getWidths, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_drawing_Font_textToGlyphs(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber glyphCount) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_FontAccessor()->textToGlyphs(self, (const Ark_String*) (&text), (const Ark_Number*) (&glyphCount));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(drawing_Font_textToGlyphs, KInteropReturnBuffer, Ark_NativePointer, KStringPtr, KInteropNumber)
Ark_Boolean impl_drawing_Font_isSubpixel(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isSubpixel(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isSubpixel, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_drawing_Font_isLinearMetrics(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isLinearMetrics(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isLinearMetrics, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_drawing_Font_getSkewX(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getSkewX(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getSkewX, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_drawing_Font_isEmbolden(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->isEmbolden(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_isEmbolden, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_drawing_Font_getScaleX(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getScaleX(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getScaleX, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_drawing_Font_getHinting(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getHinting(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getHinting, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_drawing_Font_getEdging(Ark_NativePointer thisPtr) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getEdging(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Font_getEdging, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_drawing_Font_createPathForGlyph(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->createPathForGlyph(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_2(drawing_Font_createPathForGlyph, Ark_NativePointer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_drawing_Font_getBounds(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 glyphs_value_buf_length = thisDeserializer.readInt32();
        Array_Number glyphs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(glyphs_value_buf)>::type,
        std::decay<decltype(*glyphs_value_buf.array)>::type>(&glyphs_value_buf, glyphs_value_buf_length);
        for (int glyphs_value_buf_i = 0; glyphs_value_buf_i < glyphs_value_buf_length; glyphs_value_buf_i++) {
            glyphs_value_buf.array[glyphs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number glyphs_value = glyphs_value_buf;;
        const auto &retValue = GetAccessors()->getDrawing_FontAccessor()->getBounds(self, static_cast<Array_Number*>(&glyphs_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_common2D_Rect retValue_element = retValue.array[retValue_counter_i];
            common2D_Rect_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(drawing_Font_getBounds, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_drawing_Font_getTextPath(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber byteLength, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Font self = reinterpret_cast<Ark_drawing_Font>(thisPtr);
        return GetAccessors()->getDrawing_FontAccessor()->getTextPath(self, (const Ark_String*) (&text), (const Ark_Number*) (&byteLength), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_5(drawing_Font_getTextPath, Ark_NativePointer, Ark_NativePointer, KStringPtr, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_ImageFilter_construct() {
        return GetAccessors()->getDrawing_ImageFilterAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_ImageFilter_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_ImageFilter_getFinalizer() {
        return GetAccessors()->getDrawing_ImageFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_ImageFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ImageFilter_createBlurImageFilter(KInteropNumber sigmaX, KInteropNumber sigmaY, Ark_Int32 tileMode, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto imageFilter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_ImageFilter imageFilter_value_buf = {};
        imageFilter_value_buf.tag = imageFilter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((imageFilter_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            imageFilter_value_buf.value = static_cast<Ark_drawing_ImageFilter>(drawing_ImageFilter_serializer::read(thisDeserializer));
        }
        Opt_drawing_ImageFilter imageFilter_value = imageFilter_value_buf;;
        return GetAccessors()->getDrawing_ImageFilterAccessor()->createBlurImageFilter((const Ark_Number*) (&sigmaX), (const Ark_Number*) (&sigmaY), static_cast<Ark_drawing_TileMode>(tileMode), static_cast<Opt_drawing_ImageFilter*>(&imageFilter_value));
}
KOALA_INTEROP_DIRECT_5(drawing_ImageFilter_createBlurImageFilter, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_drawing_ImageFilter_createFromColorFilter(Ark_NativePointer colorFilter, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto imageFilter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_ImageFilter imageFilter_value_buf = {};
        imageFilter_value_buf.tag = imageFilter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((imageFilter_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            imageFilter_value_buf.value = static_cast<Ark_drawing_ImageFilter>(drawing_ImageFilter_serializer::read(thisDeserializer));
        }
        Opt_drawing_ImageFilter imageFilter_value = imageFilter_value_buf;;
        return GetAccessors()->getDrawing_ImageFilterAccessor()->createFromColorFilter(static_cast<Ark_drawing_ColorFilter>(colorFilter), static_cast<Opt_drawing_ImageFilter*>(&imageFilter_value));
}
KOALA_INTEROP_DIRECT_3(drawing_ImageFilter_createFromColorFilter, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_drawing_Lattice_construct() {
        return GetAccessors()->getDrawing_LatticeAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_Lattice_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_Lattice_getFinalizer() {
        return GetAccessors()->getDrawing_LatticeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Lattice_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Lattice_createImageLattice(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fXCount, KInteropNumber fYCount) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 xDivs_value_buf_length = thisDeserializer.readInt32();
        Array_Number xDivs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(xDivs_value_buf)>::type,
        std::decay<decltype(*xDivs_value_buf.array)>::type>(&xDivs_value_buf, xDivs_value_buf_length);
        for (int xDivs_value_buf_i = 0; xDivs_value_buf_i < xDivs_value_buf_length; xDivs_value_buf_i++) {
            xDivs_value_buf.array[xDivs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number xDivs_value = xDivs_value_buf;;
        const Ark_Int32 yDivs_value_buf_length = thisDeserializer.readInt32();
        Array_Number yDivs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(yDivs_value_buf)>::type,
        std::decay<decltype(*yDivs_value_buf.array)>::type>(&yDivs_value_buf, yDivs_value_buf_length);
        for (int yDivs_value_buf_i = 0; yDivs_value_buf_i < yDivs_value_buf_length; yDivs_value_buf_i++) {
            yDivs_value_buf.array[yDivs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number yDivs_value = yDivs_value_buf;;
        const auto fBounds_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_common2D_Rect fBounds_value_buf = {};
        fBounds_value_buf.tag = fBounds_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fBounds_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fBounds_value_buf.value = common2D_Rect_serializer::read(thisDeserializer);
        }
        Opt_common2D_Rect fBounds_value = fBounds_value_buf;;
        const auto fRectTypes_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_drawing_RectType fRectTypes_value_buf = {};
        fRectTypes_value_buf.tag = fRectTypes_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fRectTypes_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 fRectTypes_value_buf__length = thisDeserializer.readInt32();
            Array_drawing_RectType fRectTypes_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(fRectTypes_value_buf_)>::type,
        std::decay<decltype(*fRectTypes_value_buf_.array)>::type>(&fRectTypes_value_buf_, fRectTypes_value_buf__length);
            for (int fRectTypes_value_buf__i = 0; fRectTypes_value_buf__i < fRectTypes_value_buf__length; fRectTypes_value_buf__i++) {
                fRectTypes_value_buf_.array[fRectTypes_value_buf__i] = static_cast<Ark_drawing_RectType>(thisDeserializer.readInt32());
            }
            fRectTypes_value_buf.value = fRectTypes_value_buf_;
        }
        Opt_Array_drawing_RectType fRectTypes_value = fRectTypes_value_buf;;
        const auto fColors_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_CustomObject fColors_value_buf = {};
        fColors_value_buf.tag = fColors_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fColors_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 fColors_value_buf__length = thisDeserializer.readInt32();
            Array_CustomObject fColors_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(fColors_value_buf_)>::type,
        std::decay<decltype(*fColors_value_buf_.array)>::type>(&fColors_value_buf_, fColors_value_buf__length);
            for (int fColors_value_buf__i = 0; fColors_value_buf__i < fColors_value_buf__length; fColors_value_buf__i++) {
                fColors_value_buf_.array[fColors_value_buf__i] = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("T"));
            }
            fColors_value_buf.value = fColors_value_buf_;
        }
        Opt_Array_CustomObject fColors_value = fColors_value_buf;;
        return GetAccessors()->getDrawing_LatticeAccessor()->createImageLattice(static_cast<Array_Number*>(&xDivs_value), static_cast<Array_Number*>(&yDivs_value), (const Ark_Number*) (&fXCount), (const Ark_Number*) (&fYCount), static_cast<Opt_common2D_Rect*>(&fBounds_value), static_cast<Opt_Array_drawing_RectType*>(&fRectTypes_value), static_cast<Opt_Array_CustomObject*>(&fColors_value));
}
KOALA_INTEROP_DIRECT_4(drawing_Lattice_createImageLattice, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_MaskFilter_construct() {
        return GetAccessors()->getDrawing_MaskFilterAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_MaskFilter_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_MaskFilter_getFinalizer() {
        return GetAccessors()->getDrawing_MaskFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_MaskFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_MaskFilter_createBlurMaskFilter(Ark_Int32 blurType, KInteropNumber sigma) {
        return GetAccessors()->getDrawing_MaskFilterAccessor()->createBlurMaskFilter(static_cast<Ark_drawing_BlurType>(blurType), (const Ark_Number*) (&sigma));
}
KOALA_INTEROP_DIRECT_2(drawing_MaskFilter_createBlurMaskFilter, Ark_NativePointer, Ark_Int32, KInteropNumber)
Ark_NativePointer impl_drawing_Matrix_construct() {
        return GetAccessors()->getDrawing_MatrixAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_Matrix_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_Matrix_getFinalizer() {
        return GetAccessors()->getDrawing_MatrixAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Matrix_getFinalizer, Ark_NativePointer)
void impl_drawing_Matrix_setRotation(Ark_NativePointer thisPtr, KInteropNumber degree, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->setRotation(self, (const Ark_Number*) (&degree), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V4(drawing_Matrix_setRotation, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_setScale(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->setScale(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V5(drawing_Matrix_setScale, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_setTranslation(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->setTranslation(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Matrix_setTranslation, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_setMatrix(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 values_value_buf_length = thisDeserializer.readInt32();
        Array_Number values_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(values_value_buf)>::type,
        std::decay<decltype(*values_value_buf.array)>::type>(&values_value_buf, values_value_buf_length);
        for (int values_value_buf_i = 0; values_value_buf_i < values_value_buf_length; values_value_buf_i++) {
            values_value_buf.array[values_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number values_value = values_value_buf;;
        GetAccessors()->getDrawing_MatrixAccessor()->setMatrix(self, static_cast<Array_Number*>(&values_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Matrix_setMatrix, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Matrix_preConcat(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->preConcat(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_V2(drawing_Matrix_preConcat, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Matrix_isEqual(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        return GetAccessors()->getDrawing_MatrixAccessor()->isEqual(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_2(drawing_Matrix_isEqual, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Matrix_invert(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        return GetAccessors()->getDrawing_MatrixAccessor()->invert(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_2(drawing_Matrix_invert, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Matrix_isIdentity(Ark_NativePointer thisPtr) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        return GetAccessors()->getDrawing_MatrixAccessor()->isIdentity(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Matrix_isIdentity, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_drawing_Matrix_getValue(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        return GetAccessors()->getDrawing_MatrixAccessor()->getValue(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_2(drawing_Matrix_getValue, KInteropNumber, Ark_NativePointer, KInteropNumber)
void impl_drawing_Matrix_postRotate(Ark_NativePointer thisPtr, KInteropNumber degree, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->postRotate(self, (const Ark_Number*) (&degree), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V4(drawing_Matrix_postRotate, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_postScale(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->postScale(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V5(drawing_Matrix_postScale, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_postTranslate(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->postTranslate(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Matrix_postTranslate, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_preRotate(Ark_NativePointer thisPtr, KInteropNumber degree, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->preRotate(self, (const Ark_Number*) (&degree), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V4(drawing_Matrix_preRotate, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_preScale(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber px, KInteropNumber py) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->preScale(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&px), (const Ark_Number*) (&py));
}
KOALA_INTEROP_DIRECT_V5(drawing_Matrix_preScale, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_preTranslate(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->preTranslate(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Matrix_preTranslate, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Matrix_reset(Ark_NativePointer thisPtr) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        GetAccessors()->getDrawing_MatrixAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Matrix_reset, Ark_NativePointer)
KInteropReturnBuffer impl_drawing_Matrix_mapPoints(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 src_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point src_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(src_value_buf)>::type,
        std::decay<decltype(*src_value_buf.array)>::type>(&src_value_buf, src_value_buf_length);
        for (int src_value_buf_i = 0; src_value_buf_i < src_value_buf_length; src_value_buf_i++) {
            src_value_buf.array[src_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point src_value = src_value_buf;;
        const auto &retValue = GetAccessors()->getDrawing_MatrixAccessor()->mapPoints(self, static_cast<Array_common2D_Point*>(&src_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_common2D_Point retValue_element = retValue.array[retValue_counter_i];
            common2D_Point_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(drawing_Matrix_mapPoints, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_drawing_Matrix_getAll(Ark_NativePointer thisPtr) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_MatrixAccessor()->getAll(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Matrix_getAll, KInteropReturnBuffer, Ark_NativePointer)
Ark_Boolean impl_drawing_Matrix_mapRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect dst_value = common2D_Rect_serializer::read(thisDeserializer);;
        Ark_common2D_Rect src_value = common2D_Rect_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_MatrixAccessor()->mapRect(self, static_cast<Ark_common2D_Rect*>(&dst_value), static_cast<Ark_common2D_Rect*>(&src_value));
}
KOALA_INTEROP_DIRECT_3(drawing_Matrix_mapRect, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_drawing_Matrix_setRectToRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 scaleToFit) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect src_value = common2D_Rect_serializer::read(thisDeserializer);;
        Ark_common2D_Rect dst_value = common2D_Rect_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_MatrixAccessor()->setRectToRect(self, static_cast<Ark_common2D_Rect*>(&src_value), static_cast<Ark_common2D_Rect*>(&dst_value), static_cast<Ark_drawing_ScaleToFit>(scaleToFit));
}
KOALA_INTEROP_DIRECT_4(drawing_Matrix_setRectToRect, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
Ark_Boolean impl_drawing_Matrix_setPolyToPoly(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber count) {
        Ark_drawing_Matrix self = reinterpret_cast<Ark_drawing_Matrix>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 src_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point src_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(src_value_buf)>::type,
        std::decay<decltype(*src_value_buf.array)>::type>(&src_value_buf, src_value_buf_length);
        for (int src_value_buf_i = 0; src_value_buf_i < src_value_buf_length; src_value_buf_i++) {
            src_value_buf.array[src_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point src_value = src_value_buf;;
        const Ark_Int32 dst_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point dst_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(dst_value_buf)>::type,
        std::decay<decltype(*dst_value_buf.array)>::type>(&dst_value_buf, dst_value_buf_length);
        for (int dst_value_buf_i = 0; dst_value_buf_i < dst_value_buf_length; dst_value_buf_i++) {
            dst_value_buf.array[dst_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point dst_value = dst_value_buf;;
        return GetAccessors()->getDrawing_MatrixAccessor()->setPolyToPoly(self, static_cast<Array_common2D_Point*>(&src_value), static_cast<Array_common2D_Point*>(&dst_value), (const Ark_Number*) (&count));
}
KOALA_INTEROP_DIRECT_4(drawing_Matrix_setPolyToPoly, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber)
Ark_NativePointer impl_drawing_Path_construct0() {
        return GetAccessors()->getDrawing_PathAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(drawing_Path_construct0, Ark_NativePointer)
Ark_NativePointer impl_drawing_Path_construct1(Ark_NativePointer path) {
        return GetAccessors()->getDrawing_PathAccessor()->construct1(static_cast<Ark_drawing_Path>(path));
}
KOALA_INTEROP_DIRECT_1(drawing_Path_construct1, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Path_getFinalizer() {
        return GetAccessors()->getDrawing_PathAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Path_getFinalizer, Ark_NativePointer)
void impl_drawing_Path_moveTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->moveTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(drawing_Path_moveTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_lineTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->lineTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(drawing_Path_lineTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_arcTo(Ark_NativePointer thisPtr, KInteropNumber x1, KInteropNumber y1, KInteropNumber x2, KInteropNumber y2, KInteropNumber startDeg, KInteropNumber sweepDeg) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->arcTo(self, (const Ark_Number*) (&x1), (const Ark_Number*) (&y1), (const Ark_Number*) (&x2), (const Ark_Number*) (&y2), (const Ark_Number*) (&startDeg), (const Ark_Number*) (&sweepDeg));
}
KOALA_INTEROP_DIRECT_V7(drawing_Path_arcTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_quadTo(Ark_NativePointer thisPtr, KInteropNumber ctrlX, KInteropNumber ctrlY, KInteropNumber endX, KInteropNumber endY) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->quadTo(self, (const Ark_Number*) (&ctrlX), (const Ark_Number*) (&ctrlY), (const Ark_Number*) (&endX), (const Ark_Number*) (&endY));
}
KOALA_INTEROP_DIRECT_V5(drawing_Path_quadTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_conicTo(Ark_NativePointer thisPtr, KInteropNumber ctrlX, KInteropNumber ctrlY, KInteropNumber endX, KInteropNumber endY, KInteropNumber weight) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->conicTo(self, (const Ark_Number*) (&ctrlX), (const Ark_Number*) (&ctrlY), (const Ark_Number*) (&endX), (const Ark_Number*) (&endY), (const Ark_Number*) (&weight));
}
KOALA_INTEROP_DIRECT_V6(drawing_Path_conicTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_cubicTo(Ark_NativePointer thisPtr, KInteropNumber ctrlX1, KInteropNumber ctrlY1, KInteropNumber ctrlX2, KInteropNumber ctrlY2, KInteropNumber endX, KInteropNumber endY) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->cubicTo(self, (const Ark_Number*) (&ctrlX1), (const Ark_Number*) (&ctrlY1), (const Ark_Number*) (&ctrlX2), (const Ark_Number*) (&ctrlY2), (const Ark_Number*) (&endX), (const Ark_Number*) (&endY));
}
KOALA_INTEROP_DIRECT_V7(drawing_Path_cubicTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_rMoveTo(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->rMoveTo(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Path_rMoveTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_rLineTo(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->rLineTo(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_Path_rLineTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_rQuadTo(Ark_NativePointer thisPtr, KInteropNumber dx1, KInteropNumber dy1, KInteropNumber dx2, KInteropNumber dy2) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->rQuadTo(self, (const Ark_Number*) (&dx1), (const Ark_Number*) (&dy1), (const Ark_Number*) (&dx2), (const Ark_Number*) (&dy2));
}
KOALA_INTEROP_DIRECT_V5(drawing_Path_rQuadTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_rConicTo(Ark_NativePointer thisPtr, KInteropNumber ctrlX, KInteropNumber ctrlY, KInteropNumber endX, KInteropNumber endY, KInteropNumber weight) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->rConicTo(self, (const Ark_Number*) (&ctrlX), (const Ark_Number*) (&ctrlY), (const Ark_Number*) (&endX), (const Ark_Number*) (&endY), (const Ark_Number*) (&weight));
}
KOALA_INTEROP_DIRECT_V6(drawing_Path_rConicTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_rCubicTo(Ark_NativePointer thisPtr, KInteropNumber ctrlX1, KInteropNumber ctrlY1, KInteropNumber ctrlX2, KInteropNumber ctrlY2, KInteropNumber endX, KInteropNumber endY) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->rCubicTo(self, (const Ark_Number*) (&ctrlX1), (const Ark_Number*) (&ctrlY1), (const Ark_Number*) (&ctrlX2), (const Ark_Number*) (&ctrlY2), (const Ark_Number*) (&endX), (const Ark_Number*) (&endY));
}
KOALA_INTEROP_DIRECT_V7(drawing_Path_rCubicTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_drawing_Path_addPolygon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Boolean close) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 points_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point points_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(points_value_buf)>::type,
        std::decay<decltype(*points_value_buf.array)>::type>(&points_value_buf, points_value_buf_length);
        for (int points_value_buf_i = 0; points_value_buf_i < points_value_buf_length; points_value_buf_i++) {
            points_value_buf.array[points_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point points_value = points_value_buf;;
        GetAccessors()->getDrawing_PathAccessor()->addPolygon(self, static_cast<Array_common2D_Point*>(&points_value), close);
}
KOALA_INTEROP_DIRECT_V4(drawing_Path_addPolygon, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Boolean)
Ark_Boolean impl_drawing_Path_op(Ark_NativePointer thisPtr, Ark_NativePointer path, Ark_Int32 pathOp) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->op(self, static_cast<Ark_drawing_Path>(path), static_cast<Ark_drawing_PathOp>(pathOp));
}
KOALA_INTEROP_DIRECT_3(drawing_Path_op, Ark_Boolean, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
void impl_drawing_Path_addArc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber startAngle, KInteropNumber sweepAngle) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_PathAccessor()->addArc(self, static_cast<Ark_common2D_Rect*>(&rect_value), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&sweepAngle));
}
KOALA_INTEROP_DIRECT_V5(drawing_Path_addArc, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
void impl_drawing_Path_addCircle(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radius, Ark_Int32 pathDirection) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->addCircle(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radius), static_cast<Ark_drawing_PathDirection>(pathDirection));
}
KOALA_INTEROP_DIRECT_V5(drawing_Path_addCircle, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, Ark_Int32)
void impl_drawing_Path_addOval(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber start, Ark_Int32 pathDirection) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_PathAccessor()->addOval(self, static_cast<Ark_common2D_Rect*>(&rect_value), (const Ark_Number*) (&start), static_cast<Ark_drawing_PathDirection>(pathDirection));
}
KOALA_INTEROP_DIRECT_V5(drawing_Path_addOval, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, Ark_Int32)
void impl_drawing_Path_addRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 pathDirection) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_PathAccessor()->addRect(self, static_cast<Ark_common2D_Rect*>(&rect_value), static_cast<Ark_drawing_PathDirection>(pathDirection));
}
KOALA_INTEROP_DIRECT_V4(drawing_Path_addRect, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
void impl_drawing_Path_addRoundRect(Ark_NativePointer thisPtr, Ark_NativePointer roundRect, Ark_Int32 pathDirection) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->addRoundRect(self, static_cast<Ark_drawing_RoundRect>(roundRect), static_cast<Ark_drawing_PathDirection>(pathDirection));
}
KOALA_INTEROP_DIRECT_V3(drawing_Path_addRoundRect, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
void impl_drawing_Path_addPath(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto matrix_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Matrix matrix_value_buf = {};
        matrix_value_buf.tag = matrix_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((matrix_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            matrix_value_buf.value = static_cast<Ark_drawing_Matrix>(drawing_Matrix_serializer::read(thisDeserializer));
        }
        Opt_drawing_Matrix matrix_value = matrix_value_buf;;
        GetAccessors()->getDrawing_PathAccessor()->addPath(self, static_cast<Ark_drawing_Path>(path), static_cast<Opt_drawing_Matrix*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_V4(drawing_Path_addPath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Path_transform(Ark_NativePointer thisPtr, Ark_NativePointer matrix) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->transform(self, static_cast<Ark_drawing_Matrix>(matrix));
}
KOALA_INTEROP_DIRECT_V2(drawing_Path_transform, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Path_contains(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->contains(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_3(drawing_Path_contains, Ark_Boolean, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_setFillType(Ark_NativePointer thisPtr, Ark_Int32 pathFillType) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->setFillType(self, static_cast<Ark_drawing_PathFillType>(pathFillType));
}
KOALA_INTEROP_DIRECT_V2(drawing_Path_setFillType, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_drawing_Path_getBounds(Ark_NativePointer thisPtr) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_PathAccessor()->getBounds(self);
        SerializerBase _retSerializer {};
        common2D_Rect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Path_getBounds, KInteropReturnBuffer, Ark_NativePointer)
void impl_drawing_Path_close(Ark_NativePointer thisPtr) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Path_close, Ark_NativePointer)
Ark_NativePointer impl_drawing_Path_offset(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->offset(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_3(drawing_Path_offset, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_drawing_Path_reset(Ark_NativePointer thisPtr) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        GetAccessors()->getDrawing_PathAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Path_reset, Ark_NativePointer)
Ark_Number impl_drawing_Path_getLength(Ark_NativePointer thisPtr, Ark_Boolean forceClosed) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->getLength(self, forceClosed);
}
KOALA_INTEROP_DIRECT_2(drawing_Path_getLength, KInteropNumber, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Path_getPositionAndTangent(Ark_NativePointer thisPtr, Ark_Boolean forceClosed, KInteropNumber distance, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point position_value = common2D_Point_serializer::read(thisDeserializer);;
        Ark_common2D_Point tangent_value = common2D_Point_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_PathAccessor()->getPositionAndTangent(self, forceClosed, (const Ark_Number*) (&distance), static_cast<Ark_common2D_Point*>(&position_value), static_cast<Ark_common2D_Point*>(&tangent_value));
}
KOALA_INTEROP_DIRECT_5(drawing_Path_getPositionAndTangent, Ark_Boolean, Ark_NativePointer, Ark_Boolean, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_drawing_Path_isClosed(Ark_NativePointer thisPtr) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->isClosed(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Path_isClosed, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_drawing_Path_getMatrix(Ark_NativePointer thisPtr, Ark_Boolean forceClosed, KInteropNumber distance, Ark_NativePointer matrix, Ark_Int32 flags) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->getMatrix(self, forceClosed, (const Ark_Number*) (&distance), static_cast<Ark_drawing_Matrix>(matrix), static_cast<Ark_drawing_PathMeasureMatrixFlags>(flags));
}
KOALA_INTEROP_DIRECT_5(drawing_Path_getMatrix, Ark_Boolean, Ark_NativePointer, Ark_Boolean, KInteropNumber, Ark_NativePointer, Ark_Int32)
Ark_Boolean impl_drawing_Path_buildFromSvgString(Ark_NativePointer thisPtr, const KStringPtr& str) {
        Ark_drawing_Path self = reinterpret_cast<Ark_drawing_Path>(thisPtr);
        return GetAccessors()->getDrawing_PathAccessor()->buildFromSvgString(self, (const Ark_String*) (&str));
}
KOALA_INTEROP_2(drawing_Path_buildFromSvgString, Ark_Boolean, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_drawing_PathEffect_construct() {
        return GetAccessors()->getDrawing_PathEffectAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_PathEffect_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_PathEffect_getFinalizer() {
        return GetAccessors()->getDrawing_PathEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_PathEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_PathEffect_createDashPathEffect(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber phase) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 intervals_value_buf_length = thisDeserializer.readInt32();
        Array_Number intervals_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(intervals_value_buf)>::type,
        std::decay<decltype(*intervals_value_buf.array)>::type>(&intervals_value_buf, intervals_value_buf_length);
        for (int intervals_value_buf_i = 0; intervals_value_buf_i < intervals_value_buf_length; intervals_value_buf_i++) {
            intervals_value_buf.array[intervals_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number intervals_value = intervals_value_buf;;
        return GetAccessors()->getDrawing_PathEffectAccessor()->createDashPathEffect(static_cast<Array_Number*>(&intervals_value), (const Ark_Number*) (&phase));
}
KOALA_INTEROP_DIRECT_3(drawing_PathEffect_createDashPathEffect, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber)
Ark_NativePointer impl_drawing_PathEffect_createCornerPathEffect(KInteropNumber radius) {
        return GetAccessors()->getDrawing_PathEffectAccessor()->createCornerPathEffect((const Ark_Number*) (&radius));
}
KOALA_INTEROP_DIRECT_1(drawing_PathEffect_createCornerPathEffect, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_drawing_Pen_construct0() {
        return GetAccessors()->getDrawing_PenAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(drawing_Pen_construct0, Ark_NativePointer)
Ark_NativePointer impl_drawing_Pen_construct1(Ark_NativePointer pen) {
        return GetAccessors()->getDrawing_PenAccessor()->construct1(static_cast<Ark_drawing_Pen>(pen));
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_construct1, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Pen_getFinalizer() {
        return GetAccessors()->getDrawing_PenAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Pen_getFinalizer, Ark_NativePointer)
void impl_drawing_Pen_setMiterLimit(Ark_NativePointer thisPtr, KInteropNumber miter) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setMiterLimit(self, (const Ark_Number*) (&miter));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setMiterLimit, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Pen_getMiterLimit(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getMiterLimit(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getMiterLimit, KInteropNumber, Ark_NativePointer)
void impl_drawing_Pen_setShaderEffect(Ark_NativePointer thisPtr, Ark_NativePointer shaderEffect) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setShaderEffect(self, static_cast<Ark_drawing_ShaderEffect>(shaderEffect));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setShaderEffect, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Pen_setColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawing_PenAccessor()->setColor0(self, static_cast<Ark_common2D_Color*>(&color_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Pen_setColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Pen_setColor1(Ark_NativePointer thisPtr, KInteropNumber color) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setColor1(self, (const Ark_Number*) (&color));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setColor1, Ark_NativePointer, KInteropNumber)
void impl_drawing_Pen_setColor2(Ark_NativePointer thisPtr, KInteropNumber alpha, KInteropNumber red, KInteropNumber green, KInteropNumber blue) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setColor2(self, (const Ark_Number*) (&alpha), (const Ark_Number*) (&red), (const Ark_Number*) (&green), (const Ark_Number*) (&blue));
}
KOALA_INTEROP_DIRECT_V5(drawing_Pen_setColor2, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_drawing_Pen_getColor(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_PenAccessor()->getColor(self);
        SerializerBase _retSerializer {};
        common2D_Color_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_Pen_getColor, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_drawing_Pen_getHexColor(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getHexColor(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getHexColor, KInteropNumber, Ark_NativePointer)
void impl_drawing_Pen_setStrokeWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setStrokeWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setStrokeWidth, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Pen_getWidth(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getWidth, KInteropNumber, Ark_NativePointer)
void impl_drawing_Pen_setAntiAlias(Ark_NativePointer thisPtr, Ark_Boolean aa) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setAntiAlias(self, aa);
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setAntiAlias, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_drawing_Pen_isAntiAlias(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->isAntiAlias(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_isAntiAlias, Ark_Boolean, Ark_NativePointer)
void impl_drawing_Pen_setAlpha(Ark_NativePointer thisPtr, KInteropNumber alpha) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setAlpha(self, (const Ark_Number*) (&alpha));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setAlpha, Ark_NativePointer, KInteropNumber)
Ark_Number impl_drawing_Pen_getAlpha(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getAlpha(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getAlpha, KInteropNumber, Ark_NativePointer)
void impl_drawing_Pen_setColorFilter(Ark_NativePointer thisPtr, Ark_NativePointer filter) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setColorFilter(self, static_cast<Ark_drawing_ColorFilter>(filter));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setColorFilter, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Pen_getColorFilter(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getColorFilter(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getColorFilter, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Pen_setImageFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto filter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_ImageFilter filter_value_buf = {};
        filter_value_buf.tag = filter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((filter_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            filter_value_buf.value = static_cast<Ark_drawing_ImageFilter>(drawing_ImageFilter_serializer::read(thisDeserializer));
        }
        Opt_drawing_ImageFilter filter_value = filter_value_buf;;
        GetAccessors()->getDrawing_PenAccessor()->setImageFilter(self, static_cast<Opt_drawing_ImageFilter*>(&filter_value));
}
KOALA_INTEROP_DIRECT_V3(drawing_Pen_setImageFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_drawing_Pen_setMaskFilter(Ark_NativePointer thisPtr, Ark_NativePointer filter) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setMaskFilter(self, static_cast<Ark_drawing_MaskFilter>(filter));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setMaskFilter, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Pen_setPathEffect(Ark_NativePointer thisPtr, Ark_NativePointer effect) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setPathEffect(self, static_cast<Ark_drawing_PathEffect>(effect));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setPathEffect, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Pen_setShadowLayer(Ark_NativePointer thisPtr, Ark_NativePointer shadowLayer) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setShadowLayer(self, static_cast<Ark_drawing_ShadowLayer>(shadowLayer));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setShadowLayer, Ark_NativePointer, Ark_NativePointer)
void impl_drawing_Pen_setBlendMode(Ark_NativePointer thisPtr, Ark_Int32 mode) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setBlendMode(self, static_cast<Ark_drawing_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setBlendMode, Ark_NativePointer, Ark_Int32)
void impl_drawing_Pen_setDither(Ark_NativePointer thisPtr, Ark_Boolean dither) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setDither(self, dither);
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setDither, Ark_NativePointer, Ark_Boolean)
void impl_drawing_Pen_setJoinStyle(Ark_NativePointer thisPtr, Ark_Int32 style) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setJoinStyle(self, static_cast<Ark_drawing_JoinStyle>(style));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setJoinStyle, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_drawing_Pen_getJoinStyle(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getJoinStyle(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getJoinStyle, Ark_Int32, Ark_NativePointer)
void impl_drawing_Pen_setCapStyle(Ark_NativePointer thisPtr, Ark_Int32 style) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->setCapStyle(self, static_cast<Ark_drawing_CapStyle>(style));
}
KOALA_INTEROP_DIRECT_V2(drawing_Pen_setCapStyle, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_drawing_Pen_getCapStyle(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getCapStyle(self);
}
KOALA_INTEROP_DIRECT_1(drawing_Pen_getCapStyle, Ark_Int32, Ark_NativePointer)
void impl_drawing_Pen_reset(Ark_NativePointer thisPtr) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        GetAccessors()->getDrawing_PenAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(drawing_Pen_reset, Ark_NativePointer)
Ark_Boolean impl_drawing_Pen_getFillPath(Ark_NativePointer thisPtr, Ark_NativePointer src, Ark_NativePointer dst) {
        Ark_drawing_Pen self = reinterpret_cast<Ark_drawing_Pen>(thisPtr);
        return GetAccessors()->getDrawing_PenAccessor()->getFillPath(self, static_cast<Ark_drawing_Path>(src), static_cast<Ark_drawing_Path>(dst));
}
KOALA_INTEROP_DIRECT_3(drawing_Pen_getFillPath, Ark_Boolean, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_drawing_Region_construct() {
        return GetAccessors()->getDrawing_RegionAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_Region_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_Region_getFinalizer() {
        return GetAccessors()->getDrawing_RegionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Region_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_drawing_Region_isPointContained(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->isPointContained(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_3(drawing_Region_isPointContained, Ark_Boolean, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_Boolean impl_drawing_Region_isRegionContained(Ark_NativePointer thisPtr, Ark_NativePointer other) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->isRegionContained(self, static_cast<Ark_drawing_Region>(other));
}
KOALA_INTEROP_DIRECT_2(drawing_Region_isRegionContained, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Region_op(Ark_NativePointer thisPtr, Ark_NativePointer region, Ark_Int32 regionOp) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->op(self, static_cast<Ark_drawing_Region>(region), static_cast<Ark_drawing_RegionOp>(regionOp));
}
KOALA_INTEROP_DIRECT_3(drawing_Region_op, Ark_Boolean, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
Ark_Boolean impl_drawing_Region_quickReject(Ark_NativePointer thisPtr, KInteropNumber left, KInteropNumber top, KInteropNumber right, KInteropNumber bottom) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->quickReject(self, (const Ark_Number*) (&left), (const Ark_Number*) (&top), (const Ark_Number*) (&right), (const Ark_Number*) (&bottom));
}
KOALA_INTEROP_DIRECT_5(drawing_Region_quickReject, Ark_Boolean, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_Boolean impl_drawing_Region_setPath(Ark_NativePointer thisPtr, Ark_NativePointer path, Ark_NativePointer clip) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->setPath(self, static_cast<Ark_drawing_Path>(path), static_cast<Ark_drawing_Region>(clip));
}
KOALA_INTEROP_DIRECT_3(drawing_Region_setPath, Ark_Boolean, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_drawing_Region_setRect(Ark_NativePointer thisPtr, KInteropNumber left, KInteropNumber top, KInteropNumber right, KInteropNumber bottom) {
        Ark_drawing_Region self = reinterpret_cast<Ark_drawing_Region>(thisPtr);
        return GetAccessors()->getDrawing_RegionAccessor()->setRect(self, (const Ark_Number*) (&left), (const Ark_Number*) (&top), (const Ark_Number*) (&right), (const Ark_Number*) (&bottom));
}
KOALA_INTEROP_DIRECT_5(drawing_Region_setRect, Ark_Boolean, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_RoundRect_construct(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber xRadii, KInteropNumber yRadii) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_RoundRectAccessor()->construct(static_cast<Ark_common2D_Rect*>(&rect_value), (const Ark_Number*) (&xRadii), (const Ark_Number*) (&yRadii));
}
KOALA_INTEROP_DIRECT_4(drawing_RoundRect_construct, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_RoundRect_getFinalizer() {
        return GetAccessors()->getDrawing_RoundRectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_RoundRect_getFinalizer, Ark_NativePointer)
void impl_drawing_RoundRect_setCorner(Ark_NativePointer thisPtr, Ark_Int32 pos, KInteropNumber x, KInteropNumber y) {
        Ark_drawing_RoundRect self = reinterpret_cast<Ark_drawing_RoundRect>(thisPtr);
        GetAccessors()->getDrawing_RoundRectAccessor()->setCorner(self, static_cast<Ark_drawing_CornerPos>(pos), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V4(drawing_RoundRect_setCorner, Ark_NativePointer, Ark_Int32, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_drawing_RoundRect_getCorner(Ark_NativePointer thisPtr, Ark_Int32 pos) {
        Ark_drawing_RoundRect self = reinterpret_cast<Ark_drawing_RoundRect>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_RoundRectAccessor()->getCorner(self, static_cast<Ark_drawing_CornerPos>(pos));
        SerializerBase _retSerializer {};
        common2D_Point_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(drawing_RoundRect_getCorner, KInteropReturnBuffer, Ark_NativePointer, Ark_Int32)
void impl_drawing_RoundRect_offset(Ark_NativePointer thisPtr, KInteropNumber dx, KInteropNumber dy) {
        Ark_drawing_RoundRect self = reinterpret_cast<Ark_drawing_RoundRect>(thisPtr);
        GetAccessors()->getDrawing_RoundRectAccessor()->offset(self, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V3(drawing_RoundRect_offset, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_SamplingOptions_construct0() {
        return GetAccessors()->getDrawing_SamplingOptionsAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(drawing_SamplingOptions_construct0, Ark_NativePointer)
Ark_NativePointer impl_drawing_SamplingOptions_construct1(Ark_Int32 filterMode) {
        return GetAccessors()->getDrawing_SamplingOptionsAccessor()->construct1(static_cast<Ark_drawing_FilterMode>(filterMode));
}
KOALA_INTEROP_DIRECT_1(drawing_SamplingOptions_construct1, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_drawing_SamplingOptions_getFinalizer() {
        return GetAccessors()->getDrawing_SamplingOptionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_SamplingOptions_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ShaderEffect_construct() {
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_ShaderEffect_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_ShaderEffect_getFinalizer() {
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_ShaderEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ShaderEffect_createColorShader(KInteropNumber color) {
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->createColorShader((const Ark_Number*) (&color));
}
KOALA_INTEROP_DIRECT_1(drawing_ShaderEffect_createColorShader, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_drawing_ShaderEffect_createLinearGradient(KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 mode) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point startPt_value = common2D_Point_serializer::read(thisDeserializer);;
        Ark_common2D_Point endPt_value = common2D_Point_serializer::read(thisDeserializer);;
        const Ark_Int32 colors_value_buf_length = thisDeserializer.readInt32();
        Array_Number colors_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colors_value_buf)>::type,
        std::decay<decltype(*colors_value_buf.array)>::type>(&colors_value_buf, colors_value_buf_length);
        for (int colors_value_buf_i = 0; colors_value_buf_i < colors_value_buf_length; colors_value_buf_i++) {
            colors_value_buf.array[colors_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number colors_value = colors_value_buf;;
        const auto pos_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number pos_value_buf = {};
        pos_value_buf.tag = pos_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((pos_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 pos_value_buf__length = thisDeserializer.readInt32();
            Array_Number pos_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(pos_value_buf_)>::type,
        std::decay<decltype(*pos_value_buf_.array)>::type>(&pos_value_buf_, pos_value_buf__length);
            for (int pos_value_buf__i = 0; pos_value_buf__i < pos_value_buf__length; pos_value_buf__i++) {
                pos_value_buf_.array[pos_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            pos_value_buf.value = pos_value_buf_;
        }
        Opt_Array_Number pos_value = pos_value_buf;;
        const auto matrix_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Matrix matrix_value_buf = {};
        matrix_value_buf.tag = matrix_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((matrix_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            matrix_value_buf.value = static_cast<Ark_drawing_Matrix>(drawing_Matrix_serializer::read(thisDeserializer));
        }
        Opt_drawing_Matrix matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->createLinearGradient(static_cast<Ark_common2D_Point*>(&startPt_value), static_cast<Ark_common2D_Point*>(&endPt_value), static_cast<Array_Number*>(&colors_value), static_cast<Ark_drawing_TileMode>(mode), static_cast<Opt_Array_Number*>(&pos_value), static_cast<Opt_drawing_Matrix*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_3(drawing_ShaderEffect_createLinearGradient, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
Ark_NativePointer impl_drawing_ShaderEffect_createRadialGradient(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber radius, Ark_Int32 mode) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point centerPt_value = common2D_Point_serializer::read(thisDeserializer);;
        const Ark_Int32 colors_value_buf_length = thisDeserializer.readInt32();
        Array_Number colors_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colors_value_buf)>::type,
        std::decay<decltype(*colors_value_buf.array)>::type>(&colors_value_buf, colors_value_buf_length);
        for (int colors_value_buf_i = 0; colors_value_buf_i < colors_value_buf_length; colors_value_buf_i++) {
            colors_value_buf.array[colors_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number colors_value = colors_value_buf;;
        const auto pos_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number pos_value_buf = {};
        pos_value_buf.tag = pos_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((pos_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 pos_value_buf__length = thisDeserializer.readInt32();
            Array_Number pos_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(pos_value_buf_)>::type,
        std::decay<decltype(*pos_value_buf_.array)>::type>(&pos_value_buf_, pos_value_buf__length);
            for (int pos_value_buf__i = 0; pos_value_buf__i < pos_value_buf__length; pos_value_buf__i++) {
                pos_value_buf_.array[pos_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            pos_value_buf.value = pos_value_buf_;
        }
        Opt_Array_Number pos_value = pos_value_buf;;
        const auto matrix_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Matrix matrix_value_buf = {};
        matrix_value_buf.tag = matrix_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((matrix_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            matrix_value_buf.value = static_cast<Ark_drawing_Matrix>(drawing_Matrix_serializer::read(thisDeserializer));
        }
        Opt_drawing_Matrix matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->createRadialGradient(static_cast<Ark_common2D_Point*>(&centerPt_value), (const Ark_Number*) (&radius), static_cast<Array_Number*>(&colors_value), static_cast<Ark_drawing_TileMode>(mode), static_cast<Opt_Array_Number*>(&pos_value), static_cast<Opt_drawing_Matrix*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_4(drawing_ShaderEffect_createRadialGradient, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_drawing_ShaderEffect_createSweepGradient(KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 mode, KInteropNumber startAngle, KInteropNumber endAngle) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point centerPt_value = common2D_Point_serializer::read(thisDeserializer);;
        const Ark_Int32 colors_value_buf_length = thisDeserializer.readInt32();
        Array_Number colors_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colors_value_buf)>::type,
        std::decay<decltype(*colors_value_buf.array)>::type>(&colors_value_buf, colors_value_buf_length);
        for (int colors_value_buf_i = 0; colors_value_buf_i < colors_value_buf_length; colors_value_buf_i++) {
            colors_value_buf.array[colors_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number colors_value = colors_value_buf;;
        const auto pos_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number pos_value_buf = {};
        pos_value_buf.tag = pos_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((pos_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 pos_value_buf__length = thisDeserializer.readInt32();
            Array_Number pos_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(pos_value_buf_)>::type,
        std::decay<decltype(*pos_value_buf_.array)>::type>(&pos_value_buf_, pos_value_buf__length);
            for (int pos_value_buf__i = 0; pos_value_buf__i < pos_value_buf__length; pos_value_buf__i++) {
                pos_value_buf_.array[pos_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            pos_value_buf.value = pos_value_buf_;
        }
        Opt_Array_Number pos_value = pos_value_buf;;
        const auto matrix_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Matrix matrix_value_buf = {};
        matrix_value_buf.tag = matrix_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((matrix_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            matrix_value_buf.value = static_cast<Ark_drawing_Matrix>(drawing_Matrix_serializer::read(thisDeserializer));
        }
        Opt_drawing_Matrix matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->createSweepGradient(static_cast<Ark_common2D_Point*>(&centerPt_value), static_cast<Array_Number*>(&colors_value), static_cast<Ark_drawing_TileMode>(mode), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&endAngle), static_cast<Opt_Array_Number*>(&pos_value), static_cast<Opt_drawing_Matrix*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_5(drawing_ShaderEffect_createSweepGradient, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_ShaderEffect_createConicalGradient(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber startRadius, KInteropNumber endRadius, Ark_Int32 mode) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point startPt_value = common2D_Point_serializer::read(thisDeserializer);;
        Ark_common2D_Point endPt_value = common2D_Point_serializer::read(thisDeserializer);;
        const Ark_Int32 colors_value_buf_length = thisDeserializer.readInt32();
        Array_Number colors_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colors_value_buf)>::type,
        std::decay<decltype(*colors_value_buf.array)>::type>(&colors_value_buf, colors_value_buf_length);
        for (int colors_value_buf_i = 0; colors_value_buf_i < colors_value_buf_length; colors_value_buf_i++) {
            colors_value_buf.array[colors_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number colors_value = colors_value_buf;;
        const auto pos_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number pos_value_buf = {};
        pos_value_buf.tag = pos_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((pos_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 pos_value_buf__length = thisDeserializer.readInt32();
            Array_Number pos_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(pos_value_buf_)>::type,
        std::decay<decltype(*pos_value_buf_.array)>::type>(&pos_value_buf_, pos_value_buf__length);
            for (int pos_value_buf__i = 0; pos_value_buf__i < pos_value_buf__length; pos_value_buf__i++) {
                pos_value_buf_.array[pos_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            pos_value_buf.value = pos_value_buf_;
        }
        Opt_Array_Number pos_value = pos_value_buf;;
        const auto matrix_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_drawing_Matrix matrix_value_buf = {};
        matrix_value_buf.tag = matrix_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((matrix_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            matrix_value_buf.value = static_cast<Ark_drawing_Matrix>(drawing_Matrix_serializer::read(thisDeserializer));
        }
        Opt_drawing_Matrix matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawing_ShaderEffectAccessor()->createConicalGradient(static_cast<Ark_common2D_Point*>(&startPt_value), (const Ark_Number*) (&startRadius), static_cast<Ark_common2D_Point*>(&endPt_value), (const Ark_Number*) (&endRadius), static_cast<Array_Number*>(&colors_value), static_cast<Ark_drawing_TileMode>(mode), static_cast<Opt_Array_Number*>(&pos_value), static_cast<Opt_drawing_Matrix*>(&matrix_value));
}
KOALA_INTEROP_DIRECT_5(drawing_ShaderEffect_createConicalGradient, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_drawing_ShadowLayer_construct() {
        return GetAccessors()->getDrawing_ShadowLayerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_ShadowLayer_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_ShadowLayer_getFinalizer() {
        return GetAccessors()->getDrawing_ShadowLayerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_ShadowLayer_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_ShadowLayer_create0(KInteropNumber blurRadius, KInteropNumber x, KInteropNumber y, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Color color_value = common2D_Color_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_ShadowLayerAccessor()->create0((const Ark_Number*) (&blurRadius), (const Ark_Number*) (&x), (const Ark_Number*) (&y), static_cast<Ark_common2D_Color*>(&color_value));
}
KOALA_INTEROP_DIRECT_5(drawing_ShadowLayer_create0, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_drawing_ShadowLayer_create1(KInteropNumber blurRadius, KInteropNumber x, KInteropNumber y, KInteropNumber color) {
        return GetAccessors()->getDrawing_ShadowLayerAccessor()->create1((const Ark_Number*) (&blurRadius), (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&color));
}
KOALA_INTEROP_DIRECT_4(drawing_ShadowLayer_create1, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_drawing_TextBlob_construct() {
        return GetAccessors()->getDrawing_TextBlobAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_TextBlob_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_TextBlob_getFinalizer() {
        return GetAccessors()->getDrawing_TextBlobAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_TextBlob_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_drawing_TextBlob_makeFromString(const KStringPtr& text, Ark_NativePointer font, Ark_Int32 encoding) {
        return GetAccessors()->getDrawing_TextBlobAccessor()->makeFromString((const Ark_String*) (&text), static_cast<Ark_drawing_Font>(font), static_cast<Ark_drawing_TextEncoding>(encoding));
}
KOALA_INTEROP_3(drawing_TextBlob_makeFromString, Ark_NativePointer, KStringPtr, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_drawing_TextBlob_makeFromPosText(const KStringPtr& text, KInteropNumber len, KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer font) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 points_value_buf_length = thisDeserializer.readInt32();
        Array_common2D_Point points_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(points_value_buf)>::type,
        std::decay<decltype(*points_value_buf.array)>::type>(&points_value_buf, points_value_buf_length);
        for (int points_value_buf_i = 0; points_value_buf_i < points_value_buf_length; points_value_buf_i++) {
            points_value_buf.array[points_value_buf_i] = common2D_Point_serializer::read(thisDeserializer);
        }
        Array_common2D_Point points_value = points_value_buf;;
        return GetAccessors()->getDrawing_TextBlobAccessor()->makeFromPosText((const Ark_String*) (&text), (const Ark_Number*) (&len), static_cast<Array_common2D_Point*>(&points_value), static_cast<Ark_drawing_Font>(font));
}
KOALA_INTEROP_5(drawing_TextBlob_makeFromPosText, Ark_NativePointer, KStringPtr, KInteropNumber, KSerializerBuffer, int32_t, Ark_NativePointer)
Ark_NativePointer impl_drawing_TextBlob_makeFromRunBuffer(KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer font) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 pos_value_buf_length = thisDeserializer.readInt32();
        Array_drawing_TextBlobRunBuffer pos_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(pos_value_buf)>::type,
        std::decay<decltype(*pos_value_buf.array)>::type>(&pos_value_buf, pos_value_buf_length);
        for (int pos_value_buf_i = 0; pos_value_buf_i < pos_value_buf_length; pos_value_buf_i++) {
            pos_value_buf.array[pos_value_buf_i] = drawing_TextBlobRunBuffer_serializer::read(thisDeserializer);
        }
        Array_drawing_TextBlobRunBuffer pos_value = pos_value_buf;;
        Ark_common2D_Rect bounds_value = common2D_Rect_serializer::read(thisDeserializer);;
        return GetAccessors()->getDrawing_TextBlobAccessor()->makeFromRunBuffer(static_cast<Array_drawing_TextBlobRunBuffer*>(&pos_value), static_cast<Ark_drawing_Font>(font), static_cast<Ark_common2D_Rect*>(&bounds_value));
}
KOALA_INTEROP_DIRECT_3(drawing_TextBlob_makeFromRunBuffer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_NativePointer)
KInteropReturnBuffer impl_drawing_TextBlob_bounds(Ark_NativePointer thisPtr) {
        Ark_drawing_TextBlob self = reinterpret_cast<Ark_drawing_TextBlob>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawing_TextBlobAccessor()->bounds(self);
        SerializerBase _retSerializer {};
        common2D_Rect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(drawing_TextBlob_bounds, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_drawing_TextBlob_uniqueID(Ark_NativePointer thisPtr) {
        Ark_drawing_TextBlob self = reinterpret_cast<Ark_drawing_TextBlob>(thisPtr);
        return GetAccessors()->getDrawing_TextBlobAccessor()->uniqueID(self);
}
KOALA_INTEROP_DIRECT_1(drawing_TextBlob_uniqueID, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_drawing_Typeface_construct() {
        return GetAccessors()->getDrawing_TypefaceAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(drawing_Typeface_construct, Ark_NativePointer)
Ark_NativePointer impl_drawing_Typeface_getFinalizer() {
        return GetAccessors()->getDrawing_TypefaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(drawing_Typeface_getFinalizer, Ark_NativePointer)
Ark_String impl_drawing_Typeface_getFamilyName(Ark_NativePointer thisPtr) {
        Ark_drawing_Typeface self = reinterpret_cast<Ark_drawing_Typeface>(thisPtr);
        return GetAccessors()->getDrawing_TypefaceAccessor()->getFamilyName(self);
}
KOALA_INTEROP_1(drawing_Typeface_getFamilyName, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_drawing_Typeface_makeFromFile(const KStringPtr& filePath) {
        return GetAccessors()->getDrawing_TypefaceAccessor()->makeFromFile((const Ark_String*) (&filePath));
}
KOALA_INTEROP_1(drawing_Typeface_makeFromFile, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_DrawingRenderingContext_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getDrawingRenderingContextAccessor()->construct(static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_2(DrawingRenderingContext_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawingRenderingContext_getFinalizer() {
        return GetAccessors()->getDrawingRenderingContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawingRenderingContext_getFinalizer, Ark_NativePointer)
void impl_DrawingRenderingContext_invalidate(Ark_NativePointer thisPtr) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        GetAccessors()->getDrawingRenderingContextAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(DrawingRenderingContext_invalidate, Ark_NativePointer)
KInteropReturnBuffer impl_DrawingRenderingContext_getSize(Ark_NativePointer thisPtr) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawingRenderingContextAccessor()->getSize(self);
        SerializerBase _retSerializer {};
        Size_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DrawingRenderingContext_getSize, KInteropReturnBuffer, Ark_NativePointer)
void impl_DrawingRenderingContext_setSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Size size_value = Size_serializer::read(thisDeserializer);;
        GetAccessors()->getDrawingRenderingContextAccessor()->setSize(self, static_cast<Ark_Size*>(&size_value));
}
KOALA_INTEROP_DIRECT_V3(DrawingRenderingContext_setSize, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawModifier_construct() {
        return GetAccessors()->getDrawModifierAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(DrawModifier_construct, Ark_NativePointer)
Ark_NativePointer impl_DrawModifier_getFinalizer() {
        return GetAccessors()->getDrawModifierAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawModifier_getFinalizer, Ark_NativePointer)
void impl_DrawModifier_invalidate(Ark_NativePointer thisPtr) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        GetAccessors()->getDrawModifierAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(DrawModifier_invalidate, Ark_NativePointer)
Ark_NativePointer impl_DrawModifier_getDrawBehind_callback(Ark_NativePointer thisPtr) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getDrawModifierAccessor()->getDrawBehind_callback(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(DrawModifier_getDrawBehind_callback, Ark_NativePointer, Ark_NativePointer)
void impl_DrawModifier_setDrawBehind_callback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_DrawContext_Void drawBehind_callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DrawContext drawContext)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DrawContext_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext drawContext)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DrawContext_Void))))};;
        GetAccessors()->getDrawModifierAccessor()->setDrawBehind_callback(self, static_cast<Callback_DrawContext_Void*>(&drawBehind_callback_value));
}
KOALA_INTEROP_DIRECT_V3(DrawModifier_setDrawBehind_callback, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawModifier_getDrawContent_callback(Ark_NativePointer thisPtr) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getDrawModifierAccessor()->getDrawContent_callback(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(DrawModifier_getDrawContent_callback, Ark_NativePointer, Ark_NativePointer)
void impl_DrawModifier_setDrawContent_callback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_DrawContext_Void drawContent_callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DrawContext drawContext)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DrawContext_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext drawContext)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DrawContext_Void))))};;
        GetAccessors()->getDrawModifierAccessor()->setDrawContent_callback(self, static_cast<Callback_DrawContext_Void*>(&drawContent_callback_value));
}
KOALA_INTEROP_DIRECT_V3(DrawModifier_setDrawContent_callback, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapeSize options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ShapeSize_serializer::read(thisDeserializer);
        }
        Opt_ShapeSize options_value = options_value_buf;;
        return GetAccessors()->getEllipseShapeAccessor()->construct(static_cast<Opt_ShapeSize*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(EllipseShape_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_getFinalizer() {
        return GetAccessors()->getEllipseShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EllipseShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_EllipseShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getEllipseShapeAccessor()->offset(self, static_cast<Ark_Position*>(&offset_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getEllipseShapeAccessor()->fill(self, static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getEllipseShapeAccessor()->position(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_width(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 width_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length width_value_buf = {};
        width_value_buf.selector = width_value_buf_selector;
        if (width_value_buf_selector == 0) {
            width_value_buf.selector = 0;
            width_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (width_value_buf_selector == 1) {
            width_value_buf.selector = 1;
            width_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (width_value_buf_selector == 2) {
            width_value_buf.selector = 2;
            width_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for width_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length width_value = static_cast<Ark_Length>(width_value_buf);;
        return GetAccessors()->getEllipseShapeAccessor()->width(self, static_cast<Ark_Length*>(&width_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_width, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_height(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 height_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length height_value_buf = {};
        height_value_buf.selector = height_value_buf_selector;
        if (height_value_buf_selector == 0) {
            height_value_buf.selector = 0;
            height_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (height_value_buf_selector == 1) {
            height_value_buf.selector = 1;
            height_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (height_value_buf_selector == 2) {
            height_value_buf.selector = 2;
            height_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for height_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length height_value = static_cast<Ark_Length>(height_value_buf);;
        return GetAccessors()->getEllipseShapeAccessor()->height(self, static_cast<Ark_Length*>(&height_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_height, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = SizeOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getEllipseShapeAccessor()->size(self, static_cast<Ark_SizeOptions*>(&size_value));
}
KOALA_INTEROP_DIRECT_3(EllipseShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_EventEmulator_emitClickEvent(Ark_NativePointer node, Ark_NativePointer event) {
        GetAccessors()->getEventEmulatorAccessor()->emitClickEvent(node, static_cast<Ark_ClickEvent>(event));
}
KOALA_INTEROP_DIRECT_V2(EventEmulator_emitClickEvent, Ark_NativePointer, Ark_NativePointer)
void impl_EventEmulator_emitTextInputEvent(Ark_NativePointer node, const KStringPtr& text) {
        GetAccessors()->getEventEmulatorAccessor()->emitTextInputEvent(node, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(EventEmulator_emitTextInputEvent, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_EventResult_construct() {
        return GetAccessors()->getEventResultAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(EventResult_construct, Ark_NativePointer)
Ark_NativePointer impl_EventResult_getFinalizer() {
        return GetAccessors()->getEventResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EventResult_getFinalizer, Ark_NativePointer)
void impl_EventResult_setGestureEventResult0(Ark_NativePointer thisPtr, Ark_Boolean result) {
        Ark_EventResult self = reinterpret_cast<Ark_EventResult>(thisPtr);
        GetAccessors()->getEventResultAccessor()->setGestureEventResult0(self, result);
}
KOALA_INTEROP_DIRECT_V2(EventResult_setGestureEventResult0, Ark_NativePointer, Ark_Boolean)
void impl_EventResult_setGestureEventResult1(Ark_NativePointer thisPtr, Ark_Boolean result, Ark_Boolean stopPropagation) {
        Ark_EventResult self = reinterpret_cast<Ark_EventResult>(thisPtr);
        GetAccessors()->getEventResultAccessor()->setGestureEventResult1(self, result, stopPropagation);
}
KOALA_INTEROP_DIRECT_V3(EventResult_setGestureEventResult1, Ark_NativePointer, Ark_Boolean, Ark_Boolean)
Ark_NativePointer impl_EventTargetInfo_construct() {
        return GetAccessors()->getEventTargetInfoAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(EventTargetInfo_construct, Ark_NativePointer)
Ark_NativePointer impl_EventTargetInfo_getFinalizer() {
        return GetAccessors()->getEventTargetInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EventTargetInfo_getFinalizer, Ark_NativePointer)
Ark_String impl_EventTargetInfo_getId(Ark_NativePointer thisPtr) {
        Ark_EventTargetInfo self = reinterpret_cast<Ark_EventTargetInfo>(thisPtr);
        return GetAccessors()->getEventTargetInfoAccessor()->getId(self);
}
KOALA_INTEROP_1(EventTargetInfo_getId, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_ExtendableComponent_construct() {
        return GetAccessors()->getExtendableComponentAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ExtendableComponent_construct, Ark_NativePointer)
Ark_NativePointer impl_ExtendableComponent_getFinalizer() {
        return GetAccessors()->getExtendableComponentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ExtendableComponent_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ExtendableComponent_getUIContext(Ark_NativePointer thisPtr) {
        Ark_ExtendableComponent self = reinterpret_cast<Ark_ExtendableComponent>(thisPtr);
        return GetAccessors()->getExtendableComponentAccessor()->getUIContext(self);
}
KOALA_INTEROP_DIRECT_1(ExtendableComponent_getUIContext, Ark_NativePointer, Ark_NativePointer)
Ark_Int32 impl_ExtendableComponent_getUniqueId(Ark_NativePointer thisPtr) {
        Ark_ExtendableComponent self = reinterpret_cast<Ark_ExtendableComponent>(thisPtr);
        return GetAccessors()->getExtendableComponentAccessor()->getUniqueId(self);
}
KOALA_INTEROP_DIRECT_1(ExtendableComponent_getUniqueId, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorParam_construct() {
        return GetAccessors()->getFileSelectorParamAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(FileSelectorParam_construct, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorParam_getFinalizer() {
        return GetAccessors()->getFileSelectorParamAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FileSelectorParam_getFinalizer, Ark_NativePointer)
Ark_String impl_FileSelectorParam_getTitle(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->getTitle(self);
}
KOALA_INTEROP_1(FileSelectorParam_getTitle, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_FileSelectorParam_getMode(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->getMode(self);
}
KOALA_INTEROP_DIRECT_1(FileSelectorParam_getMode, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_FileSelectorParam_getAcceptType(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        const auto &retValue = GetAccessors()->getFileSelectorParamAccessor()->getAcceptType(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FileSelectorParam_getAcceptType, KInteropReturnBuffer, Ark_NativePointer)
Ark_Boolean impl_FileSelectorParam_isCapture(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->isCapture(self);
}
KOALA_INTEROP_DIRECT_1(FileSelectorParam_isCapture, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_FileSelectorParam_getMimeTypes(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        const auto &retValue = GetAccessors()->getFileSelectorParamAccessor()->getMimeTypes(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FileSelectorParam_getMimeTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorResult_construct() {
        return GetAccessors()->getFileSelectorResultAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(FileSelectorResult_construct, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorResult_getFinalizer() {
        return GetAccessors()->getFileSelectorResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FileSelectorResult_getFinalizer, Ark_NativePointer)
void impl_FileSelectorResult_handleFileList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FileSelectorResult self = reinterpret_cast<Ark_FileSelectorResult>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fileList_value_buf_length = thisDeserializer.readInt32();
        Array_String fileList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fileList_value_buf)>::type,
        std::decay<decltype(*fileList_value_buf.array)>::type>(&fileList_value_buf, fileList_value_buf_length);
        for (int fileList_value_buf_i = 0; fileList_value_buf_i < fileList_value_buf_length; fileList_value_buf_i++) {
            fileList_value_buf.array[fileList_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String fileList_value = fileList_value_buf;;
        GetAccessors()->getFileSelectorResultAccessor()->handleFileList(self, static_cast<Array_String*>(&fileList_value));
}
KOALA_INTEROP_DIRECT_V3(FileSelectorResult_handleFileList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FocusAxisEvent_construct() {
        return GetAccessors()->getFocusAxisEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(FocusAxisEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_FocusAxisEvent_getFinalizer() {
        return GetAccessors()->getFocusAxisEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FocusAxisEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_FocusAxisEvent_getAxisMap(Ark_NativePointer thisPtr) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getFocusAxisEventAccessor()->getAxisMap(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.size);
        for (int32_t i = 0; i < retValue.size; i++) {
            auto retValue_key = retValue.keys[i];
            auto retValue_value = retValue.values[i];
            _retSerializer.writeInt32(static_cast<Ark_AxisModel>(retValue_key));
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FocusAxisEvent_getAxisMap, KInteropReturnBuffer, Ark_NativePointer)
void impl_FocusAxisEvent_setAxisMap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 axisMap_value_buf_size = thisDeserializer.readInt32();
        Map_AxisModel_Number axisMap_value_buf = {};
        thisDeserializer.resizeMap<Map_AxisModel_Number, Ark_AxisModel, Ark_Number>(&axisMap_value_buf, axisMap_value_buf_size);
        for (int axisMap_value_buf_i = 0; axisMap_value_buf_i < axisMap_value_buf_size; axisMap_value_buf_i++) {
            const Ark_AxisModel axisMap_value_buf_key = static_cast<Ark_AxisModel>(thisDeserializer.readInt32());
            const Ark_Number axisMap_value_buf_value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            axisMap_value_buf.keys[axisMap_value_buf_i] = axisMap_value_buf_key;
            axisMap_value_buf.values[axisMap_value_buf_i] = axisMap_value_buf_value;
        }
        Map_AxisModel_Number axisMap_value = axisMap_value_buf;;
        GetAccessors()->getFocusAxisEventAccessor()->setAxisMap(self, static_cast<Map_AxisModel_Number*>(&axisMap_value));
}
KOALA_INTEROP_DIRECT_V3(FocusAxisEvent_setAxisMap, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FocusAxisEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getFocusAxisEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(FocusAxisEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_FocusAxisEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getFocusAxisEventAccessor()->setStopPropagation(self, static_cast<Callback_Void*>(&stopPropagation_value));
}
KOALA_INTEROP_DIRECT_V3(FocusAxisEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FocusController_requestFocus(const KStringPtr& key) {
        GetAccessors()->getFocusControllerAccessor()->requestFocus((const Ark_String*) (&key));
}
KOALA_INTEROP_V1(FocusController_requestFocus, KStringPtr)
Ark_NativePointer impl_FrameNode_construct(Ark_NativePointer uiContext) {
        return GetAccessors()->getFrameNodeAccessor()->construct(static_cast<Ark_UIContext>(uiContext));
}
KOALA_INTEROP_DIRECT_1(FrameNode_construct, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getFinalizer() {
        return GetAccessors()->getFrameNodeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FrameNode_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_FrameNode_isModifiable(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->isModifiable(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_isModifiable, Ark_Boolean, Ark_NativePointer)
void impl_FrameNode_appendChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->appendChild(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(FrameNode_appendChild, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_insertChildAfter(Ark_NativePointer thisPtr, Ark_NativePointer child, Ark_NativePointer sibling) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->insertChildAfter(self, static_cast<Ark_FrameNode>(child), static_cast<Ark_FrameNode>(sibling));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_insertChildAfter, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_removeChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->removeChild(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(FrameNode_removeChild, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_clearChildren(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->clearChildren(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_clearChildren, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getChild(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber expandMode) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getChild(self, (const Ark_Number*) (&index), (const Ark_Number*) (&expandMode));
}
KOALA_INTEROP_DIRECT_3(FrameNode_getChild, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_FrameNode_getFirstChild(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getFirstChild(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFirstChild, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getNextSibling(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getNextSibling(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getNextSibling, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getPreviousSibling(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getPreviousSibling(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getPreviousSibling, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getParent(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getParent(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getParent, Ark_NativePointer, Ark_NativePointer)
Ark_Int32 impl_FrameNode_getChildrenCount(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getChildrenCount(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getChildrenCount, Ark_Int32, Ark_NativePointer)
void impl_FrameNode_dispose(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_dispose, Ark_NativePointer)
Ark_String impl_FrameNode_getId(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getId(self);
}
KOALA_INTEROP_1(FrameNode_getId, KStringPtr, Ark_NativePointer)
Ark_Number impl_FrameNode_getUniqueId(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getUniqueId(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getUniqueId, KInteropNumber, Ark_NativePointer)
Ark_String impl_FrameNode_getNodeType(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getNodeType(self);
}
KOALA_INTEROP_1(FrameNode_getNodeType, KStringPtr, Ark_NativePointer)
Ark_Number impl_FrameNode_getOpacity(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getOpacity(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getOpacity, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_FrameNode_isVisible(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->isVisible(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_isVisible, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_FrameNode_isClipToFrame(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->isClipToFrame(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_isClipToFrame, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_FrameNode_isAttached(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->isAttached(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_isAttached, Ark_Boolean, Ark_NativePointer)
void impl_FrameNode_getInspectorInfo(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->getInspectorInfo(self);
}
KOALA_INTEROP_V1(FrameNode_getInspectorInfo, Ark_NativePointer)
void impl_FrameNode_invalidate(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_invalidate, Ark_NativePointer)
void impl_FrameNode_disposeTree(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->disposeTree(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_disposeTree, Ark_NativePointer)
void impl_FrameNode_setCrossLanguageOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CrossLanguageOptions options_value = CrossLanguageOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getFrameNodeAccessor()->setCrossLanguageOptions(self, static_cast<Ark_CrossLanguageOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_setCrossLanguageOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_FrameNode_getCrossLanguageOptions(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        const auto &retValue = GetAccessors()->getFrameNodeAccessor()->getCrossLanguageOptions(self);
        SerializerBase _retSerializer {};
        CrossLanguageOptions_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FrameNode_getCrossLanguageOptions, KInteropReturnBuffer, Ark_NativePointer)
void impl_FrameNode_setMeasuredSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Size size_value = Size_serializer::read(thisDeserializer);;
        GetAccessors()->getFrameNodeAccessor()->setMeasuredSize(self, static_cast<Ark_Size*>(&size_value));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_setMeasuredSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FrameNode_setLayoutPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        GetAccessors()->getFrameNodeAccessor()->setLayoutPosition(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_setLayoutPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FrameNode_measure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_LayoutConstraint constraint_value = LayoutConstraint_serializer::read(thisDeserializer);;
        GetAccessors()->getFrameNodeAccessor()->measure(self, static_cast<Ark_LayoutConstraint*>(&constraint_value));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_measure, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FrameNode_layout(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        GetAccessors()->getFrameNodeAccessor()->layout(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_layout, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FrameNode_setNeedsLayout(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->setNeedsLayout(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_setNeedsLayout, Ark_NativePointer)
KInteropReturnBuffer impl_FrameNode_getPositionToWindowWithTransform(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        const auto &retValue = GetAccessors()->getFrameNodeAccessor()->getPositionToWindowWithTransform(self);
        SerializerBase _retSerializer {};
        Position_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FrameNode_getPositionToWindowWithTransform, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getFrameNodeByKey(const KStringPtr& name) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodeByKey((const Ark_String*) (&name));
}
KOALA_INTEROP_1(FrameNode_getFrameNodeByKey, Ark_NativePointer, KStringPtr)
Ark_Number impl_FrameNode_getIdByFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getIdByFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_2(FrameNode_getIdByFrameNode, KInteropNumber, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_moveTo(Ark_NativePointer thisPtr, Ark_NativePointer targetParent, KInteropNumber index) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->moveTo(self, static_cast<Ark_FrameNode>(targetParent), (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_moveTo, Ark_NativePointer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_FrameNode_getFirstChildIndexWithoutExpand(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getFirstChildIndexWithoutExpand(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFirstChildIndexWithoutExpand, KInteropNumber, Ark_NativePointer)
Ark_Number impl_FrameNode_getLastChildIndexWithoutExpand(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getLastChildIndexWithoutExpand(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getLastChildIndexWithoutExpand, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getAttachedFrameNodeById(const KStringPtr& id) {
        return GetAccessors()->getFrameNodeAccessor()->getAttachedFrameNodeById((const Ark_String*) (&id));
}
KOALA_INTEROP_1(FrameNode_getAttachedFrameNodeById, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_FrameNode_getFrameNodeById(KInteropNumber id) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodeById((const Ark_Number*) (&id));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodeById, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_FrameNode_getFrameNodeByUniqueId(KInteropNumber id) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodeByUniqueId((const Ark_Number*) (&id));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodeByUniqueId, Ark_NativePointer, KInteropNumber)
void impl_FrameNode_reuse(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->reuse(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_reuse, Ark_NativePointer)
void impl_FrameNode_recycle(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->recycle(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_recycle, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getFrameNodePtr(Ark_NativePointer node) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodePtr(static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodePtr, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_createTypedFrameNode(const KStringPtr& type) {
        return GetAccessors()->getFrameNodeAccessor()->createTypedFrameNode((const Ark_String*) (&type));
}
KOALA_INTEROP_1(FrameNode_createTypedFrameNode, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_FrictionMotion_construct(KInteropNumber friction, KInteropNumber position, KInteropNumber velocity) {
        return GetAccessors()->getFrictionMotionAccessor()->construct((const Ark_Number*) (&friction), (const Ark_Number*) (&position), (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_3(FrictionMotion_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_FrictionMotion_getFinalizer() {
        return GetAccessors()->getFrictionMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FrictionMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_FullScreenExitHandler_construct() {
        return GetAccessors()->getFullScreenExitHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(FullScreenExitHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_FullScreenExitHandler_getFinalizer() {
        return GetAccessors()->getFullScreenExitHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FullScreenExitHandler_getFinalizer, Ark_NativePointer)
void impl_FullScreenExitHandler_exitFullScreen(Ark_NativePointer thisPtr) {
        Ark_FullScreenExitHandler self = reinterpret_cast<Ark_FullScreenExitHandler>(thisPtr);
        GetAccessors()->getFullScreenExitHandlerAccessor()->exitFullScreen(self);
}
KOALA_INTEROP_DIRECT_V1(FullScreenExitHandler_exitFullScreen, Ark_NativePointer)
Ark_NativePointer impl_Gesture_construct() {
        return GetAccessors()->getGestureAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Gesture_construct, Ark_NativePointer)
Ark_NativePointer impl_Gesture_getFinalizer() {
        return GetAccessors()->getGestureAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Gesture_getFinalizer, Ark_NativePointer)
void impl_Gesture_tag(Ark_NativePointer thisPtr, const KStringPtr& tag) {
        Ark_Gesture self = reinterpret_cast<Ark_Gesture>(thisPtr);
        GetAccessors()->getGestureAccessor()->tag(self, (const Ark_String*) (&tag));
}
KOALA_INTEROP_V2(Gesture_tag, Ark_NativePointer, KStringPtr)
void impl_Gesture_allowedTypes(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Gesture self = reinterpret_cast<Ark_Gesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 types_value_buf_length = thisDeserializer.readInt32();
        Array_SourceTool types_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(types_value_buf)>::type,
        std::decay<decltype(*types_value_buf.array)>::type>(&types_value_buf, types_value_buf_length);
        for (int types_value_buf_i = 0; types_value_buf_i < types_value_buf_length; types_value_buf_i++) {
            types_value_buf.array[types_value_buf_i] = static_cast<Ark_SourceTool>(thisDeserializer.readInt32());
        }
        Array_SourceTool types_value = types_value_buf;;
        GetAccessors()->getGestureAccessor()->allowedTypes(self, static_cast<Array_SourceTool*>(&types_value));
}
KOALA_INTEROP_DIRECT_V3(Gesture_allowedTypes, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureEvent_construct() {
        return GetAccessors()->getGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(GestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_GestureEvent_getFinalizer() {
        return GetAccessors()->getGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_GestureEvent_getRepeat(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getRepeat(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getRepeat, Ark_Boolean, Ark_NativePointer)
void impl_GestureEvent_setRepeat(Ark_NativePointer thisPtr, Ark_Boolean repeat) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setRepeat(self, repeat);
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setRepeat, Ark_NativePointer, Ark_Boolean)
KInteropReturnBuffer impl_GestureEvent_getFingerList(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getGestureEventAccessor()->getFingerList(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_FingerInfo retValue_element = retValue.array[retValue_counter_i];
            FingerInfo_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GestureEvent_getFingerList, KInteropReturnBuffer, Ark_NativePointer)
void impl_GestureEvent_setFingerList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fingerList_value_buf_length = thisDeserializer.readInt32();
        Array_FingerInfo fingerList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fingerList_value_buf)>::type,
        std::decay<decltype(*fingerList_value_buf.array)>::type>(&fingerList_value_buf, fingerList_value_buf_length);
        for (int fingerList_value_buf_i = 0; fingerList_value_buf_i < fingerList_value_buf_length; fingerList_value_buf_i++) {
            fingerList_value_buf.array[fingerList_value_buf_i] = FingerInfo_serializer::read(thisDeserializer);
        }
        Array_FingerInfo fingerList_value = fingerList_value_buf;;
        GetAccessors()->getGestureEventAccessor()->setFingerList(self, static_cast<Array_FingerInfo*>(&fingerList_value));
}
KOALA_INTEROP_DIRECT_V3(GestureEvent_setFingerList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_GestureEvent_getOffsetX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getOffsetX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setOffsetX(Ark_NativePointer thisPtr, KInteropNumber offsetX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setOffsetX(self, (const Ark_Number*) (&offsetX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getOffsetY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getOffsetY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setOffsetY(Ark_NativePointer thisPtr, KInteropNumber offsetY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setOffsetY(self, (const Ark_Number*) (&offsetY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setOffsetY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getSpeed(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getSpeed(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getSpeed, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setSpeed(Ark_NativePointer thisPtr, KInteropNumber speed) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setSpeed(self, (const Ark_Number*) (&speed));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setSpeed, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getScale(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getScale(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getScale, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setScale(Ark_NativePointer thisPtr, KInteropNumber scale) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setScale(self, (const Ark_Number*) (&scale));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setScale, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getPinchCenterX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getPinchCenterX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getPinchCenterX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setPinchCenterX(Ark_NativePointer thisPtr, KInteropNumber pinchCenterX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setPinchCenterX(self, (const Ark_Number*) (&pinchCenterX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setPinchCenterX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getPinchCenterY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getPinchCenterY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getPinchCenterY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setPinchCenterY(Ark_NativePointer thisPtr, KInteropNumber pinchCenterY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setPinchCenterY(self, (const Ark_Number*) (&pinchCenterY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setPinchCenterY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocityX(Ark_NativePointer thisPtr, KInteropNumber velocityX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocityX(self, (const Ark_Number*) (&velocityX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocityX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocityY(Ark_NativePointer thisPtr, KInteropNumber velocityY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocityY(self, (const Ark_Number*) (&velocityY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocityY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocity, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocity(Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocity(self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_GestureGroupInterface_construct(Ark_Int32 mode, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 gesture_value_buf_length = thisDeserializer.readInt32();
        Array_GestureType gesture_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(gesture_value_buf)>::type,
        std::decay<decltype(*gesture_value_buf.array)>::type>(&gesture_value_buf, gesture_value_buf_length);
        for (int gesture_value_buf_i = 0; gesture_value_buf_i < gesture_value_buf_length; gesture_value_buf_i++) {
            const Ark_Int8 gesture_value_buf_buf_selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_buf = {};
            gesture_value_buf_buf.selector = gesture_value_buf_buf_selector;
            if (gesture_value_buf_buf_selector == 0) {
                gesture_value_buf_buf.selector = 0;
                gesture_value_buf_buf.value0 = static_cast<Ark_Gesture>(Gesture_serializer::read(thisDeserializer));
            }
            else if (gesture_value_buf_buf_selector == 1) {
                gesture_value_buf_buf.selector = 1;
                gesture_value_buf_buf.value1 = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_buf has to be chosen through deserialisation.");
            }
            gesture_value_buf.array[gesture_value_buf_i] = static_cast<Ark_GestureType>(gesture_value_buf_buf);
        }
        Array_GestureType gesture_value = gesture_value_buf;;
        return GetAccessors()->getGestureGroupInterfaceAccessor()->construct(static_cast<Ark_GestureMode>(mode), static_cast<Array_GestureType*>(&gesture_value));
}
KOALA_INTEROP_DIRECT_3(GestureGroupInterface_construct, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureGroupInterface_getFinalizer() {
        return GetAccessors()->getGestureGroupInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureGroupInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_GestureGroupInterface_onCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureGroupInterface self = reinterpret_cast<Ark_GestureGroupInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getGestureGroupInterfaceAccessor()->onCancel(self, static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(GestureGroupInterface_onCancel, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureModifier_construct() {
        return GetAccessors()->getGestureModifierAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(GestureModifier_construct, Ark_NativePointer)
Ark_NativePointer impl_GestureModifier_getFinalizer() {
        return GetAccessors()->getGestureModifierAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureModifier_getFinalizer, Ark_NativePointer)
void impl_GestureModifier_applyGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureModifier self = reinterpret_cast<Ark_GestureModifier>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_UIGestureEvent event_value = UIGestureEvent_serializer::read(thisDeserializer);;
        GetAccessors()->getGestureModifierAccessor()->applyGesture(self, static_cast<Ark_UIGestureEvent*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(GestureModifier_applyGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureRecognizer_construct() {
        return GetAccessors()->getGestureRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(GestureRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_GestureRecognizer_getFinalizer() {
        return GetAccessors()->getGestureRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureRecognizer_getFinalizer, Ark_NativePointer)
Ark_String impl_GestureRecognizer_getTag(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getTag(self);
}
KOALA_INTEROP_1(GestureRecognizer_getTag, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_GestureRecognizer_getType(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getType, Ark_Int32, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isBuiltIn(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isBuiltIn(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isBuiltIn, Ark_Boolean, Ark_NativePointer)
void impl_GestureRecognizer_setEnabled(Ark_NativePointer thisPtr, Ark_Boolean isEnabled) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        GetAccessors()->getGestureRecognizerAccessor()->setEnabled(self, isEnabled);
}
KOALA_INTEROP_DIRECT_V2(GestureRecognizer_setEnabled, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_GestureRecognizer_isEnabled(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isEnabled(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isEnabled, Ark_Boolean, Ark_NativePointer)
Ark_Int32 impl_GestureRecognizer_getState(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getState(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getState, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_GestureRecognizer_getEventTargetInfo(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getEventTargetInfo(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getEventTargetInfo, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isValid(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isValid(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isValid, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_GestureRecognizer_getFingerCount(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getFingerCount(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getFingerCount, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isFingerCountLimit(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isFingerCountLimit(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isFingerCountLimit, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_GestureStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = GestureStyleInterface_serializer::read(thisDeserializer);
        }
        Opt_GestureStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getGestureStyleAccessor()->construct(static_cast<Opt_GestureStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(GestureStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureStyle_getFinalizer() {
        return GetAccessors()->getGestureStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureStyle_getFinalizer, Ark_NativePointer)
void impl_GlobalScope_ohos_arkui_componentSnapshot_get(const KStringPtr& id, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        AsyncCallback_image_PixelMap_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_image_PixelMap result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AsyncCallback_image_PixelMap_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_image_PixelMap result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AsyncCallback_image_PixelMap_Void))))};;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SnapshotOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SnapshotOptions_serializer::read(thisDeserializer);
        }
        Opt_SnapshotOptions options_value = options_value_buf;;
        GetAccessors()->getGlobalScope_ohos_arkui_componentSnapshotAccessor()->get((const Ark_String*) (&id), static_cast<AsyncCallback_image_PixelMap_Void*>(&callback_value), static_cast<Opt_SnapshotOptions*>(&options_value));
}
KOALA_INTEROP_V3(GlobalScope_ohos_arkui_componentSnapshot_get, KStringPtr, KSerializerBuffer, int32_t)
void impl_GlobalScope_ohos_arkui_performanceMonitor_begin(const KStringPtr& scene, Ark_Int32 startInputType, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto note_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String note_value_buf = {};
        note_value_buf.tag = note_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((note_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            note_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String note_value = note_value_buf;;
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->begin((const Ark_String*) (&scene), static_cast<Ark_PerfMonitorActionType>(startInputType), static_cast<Opt_String*>(&note_value));
}
KOALA_INTEROP_V4(GlobalScope_ohos_arkui_performanceMonitor_begin, KStringPtr, Ark_Int32, KSerializerBuffer, int32_t)
void impl_GlobalScope_ohos_arkui_performanceMonitor_end(const KStringPtr& scene) {
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->end((const Ark_String*) (&scene));
}
KOALA_INTEROP_V1(GlobalScope_ohos_arkui_performanceMonitor_end, KStringPtr)
void impl_GlobalScope_ohos_arkui_performanceMonitor_recordInputEventTime(Ark_Int32 actionType, Ark_Int32 sourceType, KLong time) {
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->recordInputEventTime(static_cast<Ark_PerfMonitorActionType>(actionType), static_cast<Ark_PerfMonitorSourceType>(sourceType), time);
}
KOALA_INTEROP_DIRECT_V3(GlobalScope_ohos_arkui_performanceMonitor_recordInputEventTime, Ark_Int32, Ark_Int32, KLong)
void impl_GlobalScope_ohos_font_registerFont(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_FontOptions options_value = FontOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getGlobalScope_ohos_fontAccessor()->registerFont(static_cast<Ark_FontOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_ohos_font_registerFont, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_ohos_font_getSystemFontList() {
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_fontAccessor()->getSystemFontList();
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_0(GlobalScope_ohos_font_getSystemFontList, KInteropReturnBuffer)
KInteropReturnBuffer impl_GlobalScope_ohos_font_getFontByName(const KStringPtr& fontName) {
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_fontAccessor()->getFontByName((const Ark_String*) (&fontName));
        SerializerBase _retSerializer {};
        FontInfo_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_ohos_font_getFontByName, KInteropReturnBuffer, KStringPtr)
Ark_Number impl_GlobalScope_ohos_measure_utils_measureText(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_MeasureOptions options_value = MeasureOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getGlobalScope_ohos_measure_utilsAccessor()->measureText(static_cast<Ark_MeasureOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(GlobalScope_ohos_measure_utils_measureText, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_ohos_measure_utils_measureTextSize(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_MeasureOptions options_value = MeasureOptions_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_measure_utilsAccessor()->measureTextSize(static_cast<Ark_MeasureOptions*>(&options_value));
        SerializerBase _retSerializer {};
        SizeOptions_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(GlobalScope_ohos_measure_utils_measureTextSize, KInteropReturnBuffer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HierarchicalSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillStyle_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectFillStyle fillStyle_value_buf = {};
        fillStyle_value_buf.tag = fillStyle_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillStyle_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillStyle_value_buf.value = static_cast<Ark_EffectFillStyle>(thisDeserializer.readInt32());
        }
        Opt_EffectFillStyle fillStyle_value = fillStyle_value_buf;;
        return GetAccessors()->getHierarchicalSymbolEffectAccessor()->construct(static_cast<Opt_EffectFillStyle*>(&fillStyle_value));
}
KOALA_INTEROP_DIRECT_2(HierarchicalSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HierarchicalSymbolEffect_getFinalizer() {
        return GetAccessors()->getHierarchicalSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HierarchicalSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_HierarchicalSymbolEffect_getFillStyle(Ark_NativePointer thisPtr) {
        Ark_HierarchicalSymbolEffect self = reinterpret_cast<Ark_HierarchicalSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getHierarchicalSymbolEffectAccessor()->getFillStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectFillStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HierarchicalSymbolEffect_getFillStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_HierarchicalSymbolEffect_setFillStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HierarchicalSymbolEffect self = reinterpret_cast<Ark_HierarchicalSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto fillStyle_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectFillStyle fillStyle_value_buf = {};
        fillStyle_value_buf.tag = fillStyle_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((fillStyle_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            fillStyle_value_buf.value = static_cast<Ark_EffectFillStyle>(thisDeserializer.readInt32());
        }
        Opt_EffectFillStyle fillStyle_value = fillStyle_value_buf;;
        GetAccessors()->getHierarchicalSymbolEffectAccessor()->setFillStyle(self, static_cast<Opt_EffectFillStyle*>(&fillStyle_value));
}
KOALA_INTEROP_DIRECT_V3(HierarchicalSymbolEffect_setFillStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HoverEvent_construct() {
        return GetAccessors()->getHoverEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(HoverEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_HoverEvent_getFinalizer() {
        return GetAccessors()->getHoverEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HoverEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_HoverEvent_getX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto x_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number x_value_buf = {};
        x_value_buf.tag = x_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((x_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            x_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number x_value = x_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setX(self, static_cast<Opt_Number*>(&x_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_HoverEvent_getY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto y_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number y_value_buf = {};
        y_value_buf.tag = y_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((y_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            y_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number y_value = y_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setY(self, static_cast<Opt_Number*>(&y_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setY, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_HoverEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getWindowX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getWindowX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setWindowX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto windowX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number windowX_value_buf = {};
        windowX_value_buf.tag = windowX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((windowX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            windowX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number windowX_value = windowX_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setWindowX(self, static_cast<Opt_Number*>(&windowX_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setWindowX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_HoverEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getWindowY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getWindowY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setWindowY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto windowY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number windowY_value_buf = {};
        windowY_value_buf.tag = windowY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((windowY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            windowY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number windowY_value = windowY_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setWindowY(self, static_cast<Opt_Number*>(&windowY_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setWindowY, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_HoverEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getDisplayX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getDisplayX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setDisplayX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto displayX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number displayX_value_buf = {};
        displayX_value_buf.tag = displayX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((displayX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            displayX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number displayX_value = displayX_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setDisplayX(self, static_cast<Opt_Number*>(&displayX_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setDisplayX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_HoverEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getDisplayY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getDisplayY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setDisplayY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto displayY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number displayY_value_buf = {};
        displayY_value_buf.tag = displayY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((displayY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            displayY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number displayY_value = displayY_value_buf;;
        GetAccessors()->getHoverEventAccessor()->setDisplayY(self, static_cast<Opt_Number*>(&displayY_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setDisplayY, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HoverEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getHoverEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(HoverEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_HoverEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getHoverEventAccessor()->setStopPropagation(self, static_cast<Callback_Void*>(&stopPropagation_value));
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HttpAuthHandler_construct() {
        return GetAccessors()->getHttpAuthHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(HttpAuthHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_HttpAuthHandler_getFinalizer() {
        return GetAccessors()->getHttpAuthHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HttpAuthHandler_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_HttpAuthHandler_confirm(Ark_NativePointer thisPtr, const KStringPtr& userName, const KStringPtr& password) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        return GetAccessors()->getHttpAuthHandlerAccessor()->confirm(self, (const Ark_String*) (&userName), (const Ark_String*) (&password));
}
KOALA_INTEROP_3(HttpAuthHandler_confirm, Ark_Boolean, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_HttpAuthHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        GetAccessors()->getHttpAuthHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(HttpAuthHandler_cancel, Ark_NativePointer)
Ark_Boolean impl_HttpAuthHandler_isHttpAuthInfoSaved(Ark_NativePointer thisPtr) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        return GetAccessors()->getHttpAuthHandlerAccessor()->isHttpAuthInfoSaved(self);
}
KOALA_INTEROP_DIRECT_1(HttpAuthHandler_isHttpAuthInfoSaved, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_image_PixelMap_construct() {
        return GetAccessors()->getImage_PixelMapAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(image_PixelMap_construct, Ark_NativePointer)
Ark_NativePointer impl_image_PixelMap_getFinalizer() {
        return GetAccessors()->getImage_PixelMapAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(image_PixelMap_getFinalizer, Ark_NativePointer)
void impl_image_PixelMap_readPixelsToBufferSync(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_image_PixelMap self = reinterpret_cast<Ark_image_PixelMap>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Buffer dst_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        GetAccessors()->getImage_PixelMapAccessor()->readPixelsToBufferSync(self, static_cast<Ark_Buffer*>(&dst_value));
}
KOALA_INTEROP_DIRECT_V3(image_PixelMap_readPixelsToBufferSync, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_image_PixelMap_writeBufferToPixels(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_image_PixelMap self = reinterpret_cast<Ark_image_PixelMap>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Buffer src_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        GetAccessors()->getImage_PixelMapAccessor()->writeBufferToPixels(self, static_cast<Ark_Buffer*>(&src_value));
}
KOALA_INTEROP_DIRECT_V3(image_PixelMap_writeBufferToPixels, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_image_PixelMap_getIsEditable(Ark_NativePointer thisPtr) {
        Ark_image_PixelMap self = reinterpret_cast<Ark_image_PixelMap>(thisPtr);
        return GetAccessors()->getImage_PixelMapAccessor()->getIsEditable(self);
}
KOALA_INTEROP_DIRECT_1(image_PixelMap_getIsEditable, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_image_PixelMap_getIsStrideAlignment(Ark_NativePointer thisPtr) {
        Ark_image_PixelMap self = reinterpret_cast<Ark_image_PixelMap>(thisPtr);
        return GetAccessors()->getImage_PixelMapAccessor()->getIsStrideAlignment(self);
}
KOALA_INTEROP_DIRECT_1(image_PixelMap_getIsStrideAlignment, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_ImageAnalyzerController_construct() {
        return GetAccessors()->getImageAnalyzerControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ImageAnalyzerController_construct, Ark_NativePointer)
Ark_NativePointer impl_ImageAnalyzerController_getFinalizer() {
        return GetAccessors()->getImageAnalyzerControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageAnalyzerController_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAnalyzerController_getImageAnalyzerSupportTypes(Ark_NativePointer thisPtr) {
        Ark_ImageAnalyzerController self = reinterpret_cast<Ark_ImageAnalyzerController>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAnalyzerControllerAccessor()->getImageAnalyzerSupportTypes(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_ImageAnalyzerType retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeInt32(static_cast<Ark_ImageAnalyzerType>(retValue_element));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAnalyzerController_getImageAnalyzerSupportTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_ImageAttachment_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageAttachmentInterface_Opt_AttachmentType value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = ImageAttachmentInterface_serializer::read(thisDeserializer);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            const auto value_value_buf_u_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_AttachmentType value_value_buf_u = {};
            value_value_buf_u.tag = value_value_buf_u_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((value_value_buf_u_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
            {
                const Ark_Int8 value_value_buf_u__selector = thisDeserializer.readInt8();
                Ark_AttachmentType value_value_buf_u_ = {};
                value_value_buf_u_.selector = value_value_buf_u__selector;
                if (value_value_buf_u__selector == 0) {
                    value_value_buf_u_.selector = 0;
                    value_value_buf_u_.value0 = ImageAttachmentInterface_serializer::read(thisDeserializer);
                }
                else if (value_value_buf_u__selector == 1) {
                    value_value_buf_u_.selector = 1;
                    value_value_buf_u_.value1 = ResourceImageAttachmentOptions_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf_u_ has to be chosen through deserialisation.");
                }
                value_value_buf_u.value = static_cast<Ark_AttachmentType>(value_value_buf_u_);
            }
            value_value_buf.value1 = value_value_buf_u;
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageAttachmentInterface_Opt_AttachmentType value_value = static_cast<Ark_Union_ImageAttachmentInterface_Opt_AttachmentType>(value_value_buf);;
        return GetAccessors()->getImageAttachmentAccessor()->construct(static_cast<Ark_Union_ImageAttachmentInterface_Opt_AttachmentType*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(ImageAttachment_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageAttachment_getFinalizer() {
        return GetAccessors()->getImageAttachmentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageAttachment_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ImageAttachment_getValue(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        return GetAccessors()->getImageAttachmentAccessor()->getValue(self);
}
KOALA_INTEROP_DIRECT_1(ImageAttachment_getValue, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getSize(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getSize(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            SizeOptions_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getSize, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getVerticalAlign(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getVerticalAlign(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_ImageSpanAlignment>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getVerticalAlign, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getObjectFit(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getObjectFit(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_ImageFit>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getObjectFit, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getLayoutStyle(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getLayoutStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            ImageAttachmentLayoutStyle_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getLayoutStyle, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getColorFilter(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getColorFilter(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                ColorFilter_serializer::write(_retSerializer, retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                drawing_ColorFilter_serializer::write(_retSerializer, retValue_value_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getColorFilter, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_ImageBitmap_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_String src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            src_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_String src_value = static_cast<Ark_Union_PixelMap_String>(src_value_buf);;
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getImageBitmapAccessor()->construct(static_cast<Ark_Union_PixelMap_String*>(&src_value), static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_2(ImageBitmap_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageBitmap_getFinalizer() {
        return GetAccessors()->getImageBitmapAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageBitmap_getFinalizer, Ark_NativePointer)
void impl_ImageBitmap_close(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        GetAccessors()->getImageBitmapAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(ImageBitmap_close, Ark_NativePointer)
Ark_Number impl_ImageBitmap_getHeight(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        return GetAccessors()->getImageBitmapAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(ImageBitmap_getHeight, KInteropNumber, Ark_NativePointer)
void impl_ImageBitmap_setHeight(Ark_NativePointer thisPtr, KInteropNumber height) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        GetAccessors()->getImageBitmapAccessor()->setHeight(self, (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_V2(ImageBitmap_setHeight, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ImageBitmap_getWidth(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        return GetAccessors()->getImageBitmapAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(ImageBitmap_getWidth, KInteropNumber, Ark_NativePointer)
void impl_ImageBitmap_setWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        GetAccessors()->getImageBitmapAccessor()->setWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(ImageBitmap_setWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ImageData_construct(KInteropNumber width, KInteropNumber height, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto data_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Buffer data_value_buf = {};
        data_value_buf.tag = data_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((data_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            data_value_buf.value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        Opt_Buffer data_value = data_value_buf;;
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getImageDataAccessor()->construct((const Ark_Number*) (&width), (const Ark_Number*) (&height), static_cast<Opt_Buffer*>(&data_value), static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_4(ImageData_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageData_getFinalizer() {
        return GetAccessors()->getImageDataAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageData_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageData_getData(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        const auto &retValue = GetAccessors()->getImageDataAccessor()->getData(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageData_getData, KInteropReturnBuffer, Ark_NativePointer)
void impl_ImageData_setData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Buffer data_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        GetAccessors()->getImageDataAccessor()->setData(self, static_cast<Ark_Buffer*>(&data_value));
}
KOALA_INTEROP_DIRECT_V3(ImageData_setData, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_ImageData_getHeight(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        return GetAccessors()->getImageDataAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(ImageData_getHeight, KInteropNumber, Ark_NativePointer)
void impl_ImageData_setHeight(Ark_NativePointer thisPtr, KInteropNumber height) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        GetAccessors()->getImageDataAccessor()->setHeight(self, (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_V2(ImageData_setHeight, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ImageData_getWidth(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        return GetAccessors()->getImageDataAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(ImageData_getWidth, KInteropNumber, Ark_NativePointer)
void impl_ImageData_setWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        GetAccessors()->getImageDataAccessor()->setWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(ImageData_setWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_IndicatorComponentController_construct() {
        return GetAccessors()->getIndicatorComponentControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(IndicatorComponentController_construct, Ark_NativePointer)
Ark_NativePointer impl_IndicatorComponentController_getFinalizer() {
        return GetAccessors()->getIndicatorComponentControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(IndicatorComponentController_getFinalizer, Ark_NativePointer)
void impl_IndicatorComponentController_showNext(Ark_NativePointer thisPtr) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        GetAccessors()->getIndicatorComponentControllerAccessor()->showNext(self);
}
KOALA_INTEROP_DIRECT_V1(IndicatorComponentController_showNext, Ark_NativePointer)
void impl_IndicatorComponentController_showPrevious(Ark_NativePointer thisPtr) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        GetAccessors()->getIndicatorComponentControllerAccessor()->showPrevious(self);
}
KOALA_INTEROP_DIRECT_V1(IndicatorComponentController_showPrevious, Ark_NativePointer)
void impl_IndicatorComponentController_changeIndex(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto useAnimation_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useAnimation_value_buf = {};
        useAnimation_value_buf.tag = useAnimation_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((useAnimation_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            useAnimation_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useAnimation_value = useAnimation_value_buf;;
        GetAccessors()->getIndicatorComponentControllerAccessor()->changeIndex(self, (const Ark_Number*) (&index), static_cast<Opt_Boolean*>(&useAnimation_value));
}
KOALA_INTEROP_DIRECT_V4(IndicatorComponentController_changeIndex, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_IUIContext_freezeUINode0(const KStringPtr& id, Ark_Boolean isFrozen) {
        GetAccessors()->getIUIContextAccessor()->freezeUINode0((const Ark_String*) (&id), isFrozen);
}
KOALA_INTEROP_V2(IUIContext_freezeUINode0, KStringPtr, Ark_Boolean)
void impl_IUIContext_freezeUINode1(KInteropNumber id, Ark_Boolean isFrozen) {
        GetAccessors()->getIUIContextAccessor()->freezeUINode1((const Ark_Number*) (&id), isFrozen);
}
KOALA_INTEROP_DIRECT_V2(IUIContext_freezeUINode1, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_JsGeolocation_construct() {
        return GetAccessors()->getJsGeolocationAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(JsGeolocation_construct, Ark_NativePointer)
Ark_NativePointer impl_JsGeolocation_getFinalizer() {
        return GetAccessors()->getJsGeolocationAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(JsGeolocation_getFinalizer, Ark_NativePointer)
void impl_JsGeolocation_invoke(Ark_NativePointer thisPtr, const KStringPtr& origin, Ark_Boolean allow, Ark_Boolean retain) {
        Ark_JsGeolocation self = reinterpret_cast<Ark_JsGeolocation>(thisPtr);
        GetAccessors()->getJsGeolocationAccessor()->invoke(self, (const Ark_String*) (&origin), allow, retain);
}
KOALA_INTEROP_V4(JsGeolocation_invoke, Ark_NativePointer, KStringPtr, Ark_Boolean, Ark_Boolean)
Ark_NativePointer impl_JsResult_construct() {
        return GetAccessors()->getJsResultAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(JsResult_construct, Ark_NativePointer)
Ark_NativePointer impl_JsResult_getFinalizer() {
        return GetAccessors()->getJsResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(JsResult_getFinalizer, Ark_NativePointer)
void impl_JsResult_handleCancel(Ark_NativePointer thisPtr) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handleCancel(self);
}
KOALA_INTEROP_DIRECT_V1(JsResult_handleCancel, Ark_NativePointer)
void impl_JsResult_handleConfirm(Ark_NativePointer thisPtr) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handleConfirm(self);
}
KOALA_INTEROP_DIRECT_V1(JsResult_handleConfirm, Ark_NativePointer)
void impl_JsResult_handlePromptConfirm(Ark_NativePointer thisPtr, const KStringPtr& result) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handlePromptConfirm(self, (const Ark_String*) (&result));
}
KOALA_INTEROP_V2(JsResult_handlePromptConfirm, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_KeyEvent_construct() {
        return GetAccessors()->getKeyEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(KeyEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_KeyEvent_getFinalizer() {
        return GetAccessors()->getKeyEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(KeyEvent_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_KeyEvent_getType(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setType(self, static_cast<Ark_KeyType>(type));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setType, Ark_NativePointer, Ark_Int32)
Ark_Number impl_KeyEvent_getKeyCode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeyCode(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getKeyCode, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setKeyCode(Ark_NativePointer thisPtr, KInteropNumber keyCode) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeyCode(self, (const Ark_Number*) (&keyCode));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setKeyCode, Ark_NativePointer, KInteropNumber)
Ark_String impl_KeyEvent_getKeyText(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeyText(self);
}
KOALA_INTEROP_1(KeyEvent_getKeyText, KStringPtr, Ark_NativePointer)
void impl_KeyEvent_setKeyText(Ark_NativePointer thisPtr, const KStringPtr& keyText) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeyText(self, (const Ark_String*) (&keyText));
}
KOALA_INTEROP_V2(KeyEvent_setKeyText, Ark_NativePointer, KStringPtr)
Ark_Int32 impl_KeyEvent_getKeySource(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeySource(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getKeySource, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setKeySource(Ark_NativePointer thisPtr, Ark_Int32 keySource) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeySource(self, static_cast<Ark_KeySource>(keySource));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setKeySource, Ark_NativePointer, Ark_Int32)
Ark_Number impl_KeyEvent_getDeviceId(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getDeviceId(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getDeviceId, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setDeviceId(Ark_NativePointer thisPtr, KInteropNumber deviceId) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setDeviceId(self, (const Ark_Number*) (&deviceId));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setDeviceId, Ark_NativePointer, KInteropNumber)
Ark_Number impl_KeyEvent_getMetaKey(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getMetaKey(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getMetaKey, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setMetaKey(Ark_NativePointer thisPtr, KInteropNumber metaKey) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setMetaKey(self, (const Ark_Number*) (&metaKey));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setMetaKey, Ark_NativePointer, KInteropNumber)
Ark_Number impl_KeyEvent_getTimestamp(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getTimestamp(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getTimestamp, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setTimestamp(Ark_NativePointer thisPtr, KInteropNumber timestamp) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setTimestamp(self, (const Ark_Number*) (&timestamp));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setTimestamp, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_KeyEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getKeyEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_KeyEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getKeyEventAccessor()->setStopPropagation(self, static_cast<Callback_Void*>(&stopPropagation_value));
}
KOALA_INTEROP_DIRECT_V3(KeyEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_KeyEvent_getIntentionCode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getIntentionCode(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getIntentionCode, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setIntentionCode(Ark_NativePointer thisPtr, Ark_Int32 intentionCode) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setIntentionCode(self, static_cast<Ark_IntentionCode>(intentionCode));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setIntentionCode, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_KeyEvent_getGetModifierKeyState(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getKeyEventAccessor()->getGetModifierKeyState(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(KeyEvent_getGetModifierKeyState, KInteropReturnBuffer, Ark_NativePointer)
void impl_KeyEvent_setGetModifierKeyState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto getModifierKeyState_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ModifierKeyStateGetter getModifierKeyState_value_buf = {};
        getModifierKeyState_value_buf.tag = getModifierKeyState_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((getModifierKeyState_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            getModifierKeyState_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ModifierKeyStateGetter)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_String keys, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ModifierKeyStateGetter))))};
        }
        Opt_ModifierKeyStateGetter getModifierKeyState_value = getModifierKeyState_value_buf;;
        GetAccessors()->getKeyEventAccessor()->setGetModifierKeyState(self, static_cast<Opt_ModifierKeyStateGetter*>(&getModifierKeyState_value));
}
KOALA_INTEROP_DIRECT_V3(KeyEvent_setGetModifierKeyState, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_KeyEvent_getUnicode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getKeyEventAccessor()->getUnicode(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(KeyEvent_getUnicode, KInteropReturnBuffer, Ark_NativePointer)
void impl_KeyEvent_setUnicode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto unicode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number unicode_value_buf = {};
        unicode_value_buf.tag = unicode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unicode_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unicode_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number unicode_value = unicode_value_buf;;
        GetAccessors()->getKeyEventAccessor()->setUnicode(self, static_cast<Opt_Number*>(&unicode_value));
}
KOALA_INTEROP_DIRECT_V3(KeyEvent_setUnicode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Layoutable_construct() {
        return GetAccessors()->getLayoutableAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Layoutable_construct, Ark_NativePointer)
Ark_NativePointer impl_Layoutable_getFinalizer() {
        return GetAccessors()->getLayoutableAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Layoutable_getFinalizer, Ark_NativePointer)
void impl_Layoutable_layout(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        GetAccessors()->getLayoutableAccessor()->layout(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_V3(Layoutable_layout, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Layoutable_getMargin(Ark_NativePointer thisPtr) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutableAccessor()->getMargin(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Layoutable_getMargin, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Layoutable_getPadding(Ark_NativePointer thisPtr) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutableAccessor()->getPadding(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Layoutable_getPadding, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Layoutable_getBorderWidth(Ark_NativePointer thisPtr) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutableAccessor()->getBorderWidth(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Layoutable_getBorderWidth, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Layoutable_getMeasureResult(Ark_NativePointer thisPtr) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutableAccessor()->getMeasureResult(self);
        SerializerBase _retSerializer {};
        MeasureResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Layoutable_getMeasureResult, KInteropReturnBuffer, Ark_NativePointer)
void impl_Layoutable_setMeasureResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_MeasureResult measureResult_value = MeasureResult_serializer::read(thisDeserializer);;
        GetAccessors()->getLayoutableAccessor()->setMeasureResult(self, static_cast<Ark_MeasureResult*>(&measureResult_value));
}
KOALA_INTEROP_DIRECT_V3(Layoutable_setMeasureResult, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Layoutable_getUniqueId(Ark_NativePointer thisPtr) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutableAccessor()->getUniqueId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Layoutable_getUniqueId, KInteropReturnBuffer, Ark_NativePointer)
void impl_Layoutable_setUniqueId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Layoutable self = reinterpret_cast<Ark_Layoutable>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto uniqueId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number uniqueId_value_buf = {};
        uniqueId_value_buf.tag = uniqueId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((uniqueId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            uniqueId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number uniqueId_value = uniqueId_value_buf;;
        GetAccessors()->getLayoutableAccessor()->setUniqueId(self, static_cast<Opt_Number*>(&uniqueId_value));
}
KOALA_INTEROP_DIRECT_V3(Layoutable_setUniqueId, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LayoutCallback_construct() {
        return GetAccessors()->getLayoutCallbackAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LayoutCallback_construct, Ark_NativePointer)
Ark_NativePointer impl_LayoutCallback_getFinalizer() {
        return GetAccessors()->getLayoutCallbackAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayoutCallback_getFinalizer, Ark_NativePointer)
void impl_LayoutCallback_onPlaceChildren(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LayoutCallback self = reinterpret_cast<Ark_LayoutCallback>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_GeometryInfo selfLayoutInfo_value = GeometryInfo_serializer::read(thisDeserializer);;
        const Ark_Int32 children_value_buf_length = thisDeserializer.readInt32();
        Array_Layoutable children_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(children_value_buf)>::type,
        std::decay<decltype(*children_value_buf.array)>::type>(&children_value_buf, children_value_buf_length);
        for (int children_value_buf_i = 0; children_value_buf_i < children_value_buf_length; children_value_buf_i++) {
            children_value_buf.array[children_value_buf_i] = static_cast<Ark_Layoutable>(Layoutable_serializer::read(thisDeserializer));
        }
        Array_Layoutable children_value = children_value_buf;;
        Ark_ConstraintSizeOptions constraint_value = ConstraintSizeOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getLayoutCallbackAccessor()->onPlaceChildren(self, static_cast<Ark_GeometryInfo*>(&selfLayoutInfo_value), static_cast<Array_Layoutable*>(&children_value), static_cast<Ark_ConstraintSizeOptions*>(&constraint_value));
}
KOALA_INTEROP_DIRECT_V3(LayoutCallback_onPlaceChildren, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_LayoutCallback_onMeasureSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LayoutCallback self = reinterpret_cast<Ark_LayoutCallback>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_GeometryInfo selfLayoutInfo_value = GeometryInfo_serializer::read(thisDeserializer);;
        const Ark_Int32 children_value_buf_length = thisDeserializer.readInt32();
        Array_Measurable children_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(children_value_buf)>::type,
        std::decay<decltype(*children_value_buf.array)>::type>(&children_value_buf, children_value_buf_length);
        for (int children_value_buf_i = 0; children_value_buf_i < children_value_buf_length; children_value_buf_i++) {
            children_value_buf.array[children_value_buf_i] = static_cast<Ark_Measurable>(Measurable_serializer::read(thisDeserializer));
        }
        Array_Measurable children_value = children_value_buf;;
        Ark_ConstraintSizeOptions constraint_value = ConstraintSizeOptions_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getLayoutCallbackAccessor()->onMeasureSize(self, static_cast<Ark_GeometryInfo*>(&selfLayoutInfo_value), static_cast<Array_Measurable*>(&children_value), static_cast<Ark_ConstraintSizeOptions*>(&constraint_value));
        SerializerBase _retSerializer {};
        SizeResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(LayoutCallback_onMeasureSize, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LayoutChild_construct() {
        return GetAccessors()->getLayoutChildAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LayoutChild_construct, Ark_NativePointer)
Ark_NativePointer impl_LayoutChild_getFinalizer() {
        return GetAccessors()->getLayoutChildAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayoutChild_getFinalizer, Ark_NativePointer)
void impl_LayoutChild_measure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ConstraintSizeOptions childConstraint_value = ConstraintSizeOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getLayoutChildAccessor()->measure(self, static_cast<Ark_ConstraintSizeOptions*>(&childConstraint_value));
}
KOALA_INTEROP_DIRECT_V3(LayoutChild_measure, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_LayoutChild_getName(Ark_NativePointer thisPtr) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        return GetAccessors()->getLayoutChildAccessor()->getName(self);
}
KOALA_INTEROP_1(LayoutChild_getName, KStringPtr, Ark_NativePointer)
void impl_LayoutChild_setName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        GetAccessors()->getLayoutChildAccessor()->setName(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_V2(LayoutChild_setName, Ark_NativePointer, KStringPtr)
Ark_String impl_LayoutChild_getId(Ark_NativePointer thisPtr) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        return GetAccessors()->getLayoutChildAccessor()->getId(self);
}
KOALA_INTEROP_1(LayoutChild_getId, KStringPtr, Ark_NativePointer)
void impl_LayoutChild_setId(Ark_NativePointer thisPtr, const KStringPtr& id) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        GetAccessors()->getLayoutChildAccessor()->setId(self, (const Ark_String*) (&id));
}
KOALA_INTEROP_V2(LayoutChild_setId, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_LayoutChild_getPosition(Ark_NativePointer thisPtr) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutChildAccessor()->getPosition(self);
        SerializerBase _retSerializer {};
        Position_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(LayoutChild_getPosition, KInteropReturnBuffer, Ark_NativePointer)
void impl_LayoutChild_setPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LayoutChild self = reinterpret_cast<Ark_LayoutChild>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        GetAccessors()->getLayoutChildAccessor()->setPosition(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_V3(LayoutChild_setPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LayoutManager_construct() {
        return GetAccessors()->getLayoutManagerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LayoutManager_construct, Ark_NativePointer)
Ark_NativePointer impl_LayoutManager_getFinalizer() {
        return GetAccessors()->getLayoutManagerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayoutManager_getFinalizer, Ark_NativePointer)
Ark_Number impl_LayoutManager_getLineCount(Ark_NativePointer thisPtr) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        return GetAccessors()->getLayoutManagerAccessor()->getLineCount(self);
}
KOALA_INTEROP_DIRECT_1(LayoutManager_getLineCount, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_LayoutManager_getGlyphPositionAtCoordinate(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutManagerAccessor()->getGlyphPositionAtCoordinate(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
        SerializerBase _retSerializer {};
        PositionWithAffinity_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(LayoutManager_getGlyphPositionAtCoordinate, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_LayoutPolicy_construct() {
        return GetAccessors()->getLayoutPolicyAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LayoutPolicy_construct, Ark_NativePointer)
Ark_NativePointer impl_LayoutPolicy_getFinalizer() {
        return GetAccessors()->getLayoutPolicyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayoutPolicy_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LayoutPolicy_getMatchParent() {
        return GetAccessors()->getLayoutPolicyAccessor()->getMatchParent();
}
KOALA_INTEROP_DIRECT_0(LayoutPolicy_getMatchParent, Ark_NativePointer)
void impl_LazyForEachOps_Sync(Ark_NativePointer node, Ark_Int32 totalCount, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_CreateItem creator_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CreateItem)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CreateItem))))};;
        Callback_RangeUpdate updater_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RangeUpdate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RangeUpdate))))};;
        GetAccessors()->getLazyForEachOpsAccessor()->Sync(node, totalCount, static_cast<Callback_CreateItem*>(&creator_value), static_cast<Callback_RangeUpdate*>(&updater_value));
}
KOALA_INTEROP_DIRECT_V4(LazyForEachOps_Sync, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LengthMetrics_construct(KInteropNumber value, Ark_Int32 unit) {
        return GetAccessors()->getLengthMetricsAccessor()->construct((const Ark_Number*) (&value), static_cast<Ark_LengthUnit>(unit));
}
KOALA_INTEROP_DIRECT_2(LengthMetrics_construct, Ark_NativePointer, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_LengthMetrics_getFinalizer() {
        return GetAccessors()->getLengthMetricsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LengthMetrics_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LengthMetrics_px(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_px, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_vp(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->vp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_vp, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_fp(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->fp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_fp, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_percent(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->percent((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_percent, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_lpx(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->lpx((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_lpx, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_resource(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = Resource_serializer::read(thisDeserializer);;
        return GetAccessors()->getLengthMetricsAccessor()->resource(static_cast<Ark_Resource*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(LengthMetrics_resource, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_LengthMetrics_getUnit(Ark_NativePointer thisPtr) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        return GetAccessors()->getLengthMetricsAccessor()->getUnit(self);
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_getUnit, Ark_Int32, Ark_NativePointer)
void impl_LengthMetrics_setUnit(Ark_NativePointer thisPtr, Ark_Int32 unit) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        GetAccessors()->getLengthMetricsAccessor()->setUnit(self, static_cast<Ark_LengthUnit>(unit));
}
KOALA_INTEROP_DIRECT_V2(LengthMetrics_setUnit, Ark_NativePointer, Ark_Int32)
Ark_Number impl_LengthMetrics_getValue(Ark_NativePointer thisPtr) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        return GetAccessors()->getLengthMetricsAccessor()->getValue(self);
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_getValue, KInteropNumber, Ark_NativePointer)
void impl_LengthMetrics_setValue(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        GetAccessors()->getLengthMetricsAccessor()->setValue(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(LengthMetrics_setValue, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LetterSpacingStyle_construct(Ark_NativePointer value) {
        return GetAccessors()->getLetterSpacingStyleAccessor()->construct(static_cast<Ark_LengthMetrics>(value));
}
KOALA_INTEROP_DIRECT_1(LetterSpacingStyle_construct, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LetterSpacingStyle_getFinalizer() {
        return GetAccessors()->getLetterSpacingStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LetterSpacingStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_LetterSpacingStyle_getLetterSpacing(Ark_NativePointer thisPtr) {
        Ark_LetterSpacingStyle self = reinterpret_cast<Ark_LetterSpacingStyle>(thisPtr);
        return GetAccessors()->getLetterSpacingStyleAccessor()->getLetterSpacing(self);
}
KOALA_INTEROP_DIRECT_1(LetterSpacingStyle_getLetterSpacing, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_LevelOrder_construct() {
        return GetAccessors()->getLevelOrderAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LevelOrder_construct, Ark_NativePointer)
Ark_NativePointer impl_LevelOrder_getFinalizer() {
        return GetAccessors()->getLevelOrderAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LevelOrder_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LevelOrder_clamp(KInteropNumber order) {
        return GetAccessors()->getLevelOrderAccessor()->clamp((const Ark_Number*) (&order));
}
KOALA_INTEROP_DIRECT_1(LevelOrder_clamp, Ark_NativePointer, KInteropNumber)
Ark_Number impl_LevelOrder_getOrder(Ark_NativePointer thisPtr) {
        Ark_LevelOrder self = reinterpret_cast<Ark_LevelOrder>(thisPtr);
        return GetAccessors()->getLevelOrderAccessor()->getOrder(self);
}
KOALA_INTEROP_DIRECT_1(LevelOrder_getOrder, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_LifeCycle_construct() {
        return GetAccessors()->getLifeCycleAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LifeCycle_construct, Ark_NativePointer)
Ark_NativePointer impl_LifeCycle_getFinalizer() {
        return GetAccessors()->getLifeCycleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LifeCycle_getFinalizer, Ark_NativePointer)
void impl_LifeCycle_aboutToAppear(Ark_NativePointer thisPtr) {
        Ark_LifeCycle self = reinterpret_cast<Ark_LifeCycle>(thisPtr);
        GetAccessors()->getLifeCycleAccessor()->aboutToAppear(self);
}
KOALA_INTEROP_DIRECT_V1(LifeCycle_aboutToAppear, Ark_NativePointer)
void impl_LifeCycle_aboutToDisappear(Ark_NativePointer thisPtr) {
        Ark_LifeCycle self = reinterpret_cast<Ark_LifeCycle>(thisPtr);
        GetAccessors()->getLifeCycleAccessor()->aboutToDisappear(self);
}
KOALA_INTEROP_DIRECT_V1(LifeCycle_aboutToDisappear, Ark_NativePointer)
void impl_LifeCycle_onDidBuild(Ark_NativePointer thisPtr) {
        Ark_LifeCycle self = reinterpret_cast<Ark_LifeCycle>(thisPtr);
        GetAccessors()->getLifeCycleAccessor()->onDidBuild(self);
}
KOALA_INTEROP_DIRECT_V1(LifeCycle_onDidBuild, Ark_NativePointer)
void impl_LifeCycle_build(Ark_NativePointer thisPtr) {
        Ark_LifeCycle self = reinterpret_cast<Ark_LifeCycle>(thisPtr);
        GetAccessors()->getLifeCycleAccessor()->build(self);
}
KOALA_INTEROP_DIRECT_V1(LifeCycle_build, Ark_NativePointer)
Ark_NativePointer impl_LinearGradient_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 colorStops_value_buf_length = thisDeserializer.readInt32();
        Array_ColorStop colorStops_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colorStops_value_buf)>::type,
        std::decay<decltype(*colorStops_value_buf.array)>::type>(&colorStops_value_buf, colorStops_value_buf_length);
        for (int colorStops_value_buf_i = 0; colorStops_value_buf_i < colorStops_value_buf_length; colorStops_value_buf_i++) {
            colorStops_value_buf.array[colorStops_value_buf_i] = ColorStop_serializer::read(thisDeserializer);
        }
        Array_ColorStop colorStops_value = colorStops_value_buf;;
        return GetAccessors()->getLinearGradientAccessor()->construct(static_cast<Array_ColorStop*>(&colorStops_value));
}
KOALA_INTEROP_DIRECT_2(LinearGradient_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LinearGradient_getFinalizer() {
        return GetAccessors()->getLinearGradientAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LinearGradient_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LinearIndicatorController_construct() {
        return GetAccessors()->getLinearIndicatorControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LinearIndicatorController_construct, Ark_NativePointer)
Ark_NativePointer impl_LinearIndicatorController_getFinalizer() {
        return GetAccessors()->getLinearIndicatorControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LinearIndicatorController_getFinalizer, Ark_NativePointer)
void impl_LinearIndicatorController_setProgress(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber progress) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->setProgress(self, (const Ark_Number*) (&index), (const Ark_Number*) (&progress));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorController_setProgress, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_LinearIndicatorController_start(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorStartOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = LinearIndicatorStartOptions_serializer::read(thisDeserializer);
        }
        Opt_LinearIndicatorStartOptions options_value = options_value_buf;;
        GetAccessors()->getLinearIndicatorControllerAccessor()->start(self, static_cast<Opt_LinearIndicatorStartOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorController_start, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorController_pause(Ark_NativePointer thisPtr) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(LinearIndicatorController_pause, Ark_NativePointer)
void impl_LinearIndicatorController_stop(Ark_NativePointer thisPtr) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(LinearIndicatorController_stop, Ark_NativePointer)
Ark_NativePointer impl_LineHeightStyle_construct(Ark_NativePointer lineHeight) {
        return GetAccessors()->getLineHeightStyleAccessor()->construct(static_cast<Ark_LengthMetrics>(lineHeight));
}
KOALA_INTEROP_DIRECT_1(LineHeightStyle_construct, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LineHeightStyle_getFinalizer() {
        return GetAccessors()->getLineHeightStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LineHeightStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_LineHeightStyle_getLineHeight(Ark_NativePointer thisPtr) {
        Ark_LineHeightStyle self = reinterpret_cast<Ark_LineHeightStyle>(thisPtr);
        return GetAccessors()->getLineHeightStyleAccessor()->getLineHeight(self);
}
KOALA_INTEROP_DIRECT_1(LineHeightStyle_getLineHeight, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_ListScroller_construct() {
        return GetAccessors()->getListScrollerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ListScroller_construct, Ark_NativePointer)
Ark_NativePointer impl_ListScroller_getFinalizer() {
        return GetAccessors()->getListScrollerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ListScroller_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ListScroller_getItemRectInGroup(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber indexInGroup) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        const auto &retValue = GetAccessors()->getListScrollerAccessor()->getItemRectInGroup(self, (const Ark_Number*) (&index), (const Ark_Number*) (&indexInGroup));
        SerializerBase _retSerializer {};
        RectResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(ListScroller_getItemRectInGroup, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_ListScroller_scrollToItemInGroup(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber indexInGroup, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto smooth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean smooth_value_buf = {};
        smooth_value_buf.tag = smooth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((smooth_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            smooth_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean smooth_value = smooth_value_buf;;
        const auto align_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollAlign align_value_buf = {};
        align_value_buf.tag = align_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((align_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            align_value_buf.value = static_cast<Ark_ScrollAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollAlign align_value = align_value_buf;;
        GetAccessors()->getListScrollerAccessor()->scrollToItemInGroup(self, (const Ark_Number*) (&index), (const Ark_Number*) (&indexInGroup), static_cast<Opt_Boolean*>(&smooth_value), static_cast<Opt_ScrollAlign*>(&align_value));
}
KOALA_INTEROP_DIRECT_V5(ListScroller_scrollToItemInGroup, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_ListScroller_closeAllSwipeActions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CloseSwipeActionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = CloseSwipeActionOptions_serializer::read(thisDeserializer);
        }
        Opt_CloseSwipeActionOptions options_value = options_value_buf;;
        GetAccessors()->getListScrollerAccessor()->closeAllSwipeActions(self, static_cast<Opt_CloseSwipeActionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(ListScroller_closeAllSwipeActions, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_ListScroller_getVisibleListContentInfo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        const auto &retValue = GetAccessors()->getListScrollerAccessor()->getVisibleListContentInfo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
        SerializerBase _retSerializer {};
        VisibleListContentInfo_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(ListScroller_getVisibleListContentInfo, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_LongPressGestureEvent_construct() {
        return GetAccessors()->getLongPressGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_LongPressGestureEvent_getFinalizer() {
        return GetAccessors()->getLongPressGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_LongPressGestureEvent_getRepeat(Ark_NativePointer thisPtr) {
        Ark_LongPressGestureEvent self = reinterpret_cast<Ark_LongPressGestureEvent>(thisPtr);
        return GetAccessors()->getLongPressGestureEventAccessor()->getRepeat(self);
}
KOALA_INTEROP_DIRECT_1(LongPressGestureEvent_getRepeat, Ark_Boolean, Ark_NativePointer)
void impl_LongPressGestureEvent_setRepeat(Ark_NativePointer thisPtr, Ark_Boolean repeat) {
        Ark_LongPressGestureEvent self = reinterpret_cast<Ark_LongPressGestureEvent>(thisPtr);
        GetAccessors()->getLongPressGestureEventAccessor()->setRepeat(self, repeat);
}
KOALA_INTEROP_DIRECT_V2(LongPressGestureEvent_setRepeat, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_LongPressGestureInterface_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_LongPressGestureInterface_Invoke_Literal value_value = LongPressGestureInterface_Invoke_Literal_serializer::read(thisDeserializer);;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->construct(static_cast<Ark_LongPressGestureInterface_Invoke_Literal*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(LongPressGestureInterface_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_getFinalizer() {
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LongPressGestureInterface_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onAction(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onAction, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionEnd(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionCancel0(self, static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionCancel1(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressRecognizer_construct() {
        return GetAccessors()->getLongPressRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(LongPressRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_LongPressRecognizer_getFinalizer() {
        return GetAccessors()->getLongPressRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressRecognizer_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_LongPressRecognizer_isRepeat(Ark_NativePointer thisPtr) {
        Ark_LongPressRecognizer self = reinterpret_cast<Ark_LongPressRecognizer>(thisPtr);
        return GetAccessors()->getLongPressRecognizerAccessor()->isRepeat(self);
}
KOALA_INTEROP_DIRECT_1(LongPressRecognizer_isRepeat, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_LongPressRecognizer_getDuration(Ark_NativePointer thisPtr) {
        Ark_LongPressRecognizer self = reinterpret_cast<Ark_LongPressRecognizer>(thisPtr);
        return GetAccessors()->getLongPressRecognizerAccessor()->getDuration(self);
}
KOALA_INTEROP_DIRECT_1(LongPressRecognizer_getDuration, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_construct0() {
        return GetAccessors()->getMatrix2DAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(Matrix2D_construct0, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_construct1(Ark_Int32 unit) {
        return GetAccessors()->getMatrix2DAccessor()->construct1(static_cast<Ark_LengthMetricsUnit>(unit));
}
KOALA_INTEROP_DIRECT_1(Matrix2D_construct1, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_Matrix2D_getFinalizer() {
        return GetAccessors()->getMatrix2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Matrix2D_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_identity(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        return GetAccessors()->getMatrix2DAccessor()->identity(self);
}
KOALA_INTEROP_DIRECT_1(Matrix2D_identity, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_invert(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        return GetAccessors()->getMatrix2DAccessor()->invert(self);
}
KOALA_INTEROP_DIRECT_1(Matrix2D_invert, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_rotate(Ark_NativePointer thisPtr, KInteropNumber degree, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rx_value_buf = {};
        rx_value_buf.tag = rx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rx_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rx_value = rx_value_buf;;
        const auto ry_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number ry_value_buf = {};
        ry_value_buf.tag = ry_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((ry_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            ry_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number ry_value = ry_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->rotate(self, (const Ark_Number*) (&degree), static_cast<Opt_Number*>(&rx_value), static_cast<Opt_Number*>(&ry_value));
}
KOALA_INTEROP_DIRECT_4(Matrix2D_rotate, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_translate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto tx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number tx_value_buf = {};
        tx_value_buf.tag = tx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((tx_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            tx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number tx_value = tx_value_buf;;
        const auto ty_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number ty_value_buf = {};
        ty_value_buf.tag = ty_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((ty_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            ty_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number ty_value = ty_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->translate(self, static_cast<Opt_Number*>(&tx_value), static_cast<Opt_Number*>(&ty_value));
}
KOALA_INTEROP_DIRECT_3(Matrix2D_translate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_scale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto sx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number sx_value_buf = {};
        sx_value_buf.tag = sx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sx_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number sx_value = sx_value_buf;;
        const auto sy_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number sy_value_buf = {};
        sy_value_buf.tag = sy_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sy_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sy_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number sy_value = sy_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->scale(self, static_cast<Opt_Number*>(&sx_value), static_cast<Opt_Number*>(&sy_value));
}
KOALA_INTEROP_DIRECT_3(Matrix2D_scale, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getScaleX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getScaleX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getScaleX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setScaleX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scaleX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number scaleX_value_buf = {};
        scaleX_value_buf.tag = scaleX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scaleX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scaleX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number scaleX_value = scaleX_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setScaleX(self, static_cast<Opt_Number*>(&scaleX_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setScaleX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getRotateY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getRotateY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getRotateY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setRotateY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rotateY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rotateY_value_buf = {};
        rotateY_value_buf.tag = rotateY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rotateY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rotateY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rotateY_value = rotateY_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setRotateY(self, static_cast<Opt_Number*>(&rotateY_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setRotateY, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getRotateX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getRotateX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getRotateX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setRotateX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rotateX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rotateX_value_buf = {};
        rotateX_value_buf.tag = rotateX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rotateX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rotateX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rotateX_value = rotateX_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setRotateX(self, static_cast<Opt_Number*>(&rotateX_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setRotateX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getScaleY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getScaleY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getScaleY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setScaleY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scaleY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number scaleY_value_buf = {};
        scaleY_value_buf.tag = scaleY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scaleY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scaleY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number scaleY_value = scaleY_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setScaleY(self, static_cast<Opt_Number*>(&scaleY_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setScaleY, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getTranslateX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getTranslateX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getTranslateX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setTranslateX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto translateX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number translateX_value_buf = {};
        translateX_value_buf.tag = translateX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((translateX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            translateX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number translateX_value = translateX_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setTranslateX(self, static_cast<Opt_Number*>(&translateX_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setTranslateX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getTranslateY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getTranslateY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getTranslateY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setTranslateY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto translateY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number translateY_value_buf = {};
        translateY_value_buf.tag = translateY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((translateY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            translateY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number translateY_value = translateY_value_buf;;
        GetAccessors()->getMatrix2DAccessor()->setTranslateY(self, static_cast<Opt_Number*>(&translateY_value));
}
KOALA_INTEROP_DIRECT_V3(Matrix2D_setTranslateY, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_matrix4_Matrix4Transit_construct() {
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(matrix4_Matrix4Transit_construct, Ark_NativePointer)
Ark_NativePointer impl_matrix4_Matrix4Transit_getFinalizer() {
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(matrix4_Matrix4Transit_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_matrix4_Matrix4Transit_copy(Ark_NativePointer thisPtr) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->copy(self);
}
KOALA_INTEROP_DIRECT_1(matrix4_Matrix4Transit_copy, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_matrix4_Matrix4Transit_invert(Ark_NativePointer thisPtr) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->invert(self);
}
KOALA_INTEROP_DIRECT_1(matrix4_Matrix4Transit_invert, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_matrix4_Matrix4Transit_combine(Ark_NativePointer thisPtr, Ark_NativePointer options) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->combine(self, static_cast<Ark_matrix4_Matrix4Transit>(options));
}
KOALA_INTEROP_DIRECT_2(matrix4_Matrix4Transit_combine, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_matrix4_Matrix4Transit_translate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions options_value = TranslateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->translate(self, static_cast<Ark_TranslateOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(matrix4_Matrix4Transit_translate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_matrix4_Matrix4Transit_scale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScaleOptions options_value = ScaleOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->scale(self, static_cast<Ark_ScaleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(matrix4_Matrix4Transit_scale, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_matrix4_Matrix4Transit_skew(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->skew(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_3(matrix4_Matrix4Transit_skew, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_matrix4_Matrix4Transit_rotate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RotateOptions options_value = RotateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->rotate(self, static_cast<Ark_RotateOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(matrix4_Matrix4Transit_rotate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_matrix4_Matrix4Transit_transformPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_matrix4_Matrix4TransformPoint options_value_buf = {};
        options_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        options_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_matrix4_Matrix4TransformPoint options_value = options_value_buf;;
        const auto &retValue = GetAccessors()->getMatrix4_Matrix4TransitAccessor()->transformPoint(self, static_cast<Ark_matrix4_Matrix4TransformPoint*>(&options_value));
        SerializerBase _retSerializer {};
        const auto retValue_0 = retValue.value0;
        _retSerializer.writeNumber(retValue_0);
        const auto retValue_1 = retValue.value1;
        _retSerializer.writeNumber(retValue_1);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(matrix4_Matrix4Transit_transformPoint, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_matrix4_Matrix4Transit_setPolyToPoly(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_matrix4_Matrix4Transit self = reinterpret_cast<Ark_matrix4_Matrix4Transit>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_matrix4_PolyToPolyOptions options_value = matrix4_PolyToPolyOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getMatrix4_Matrix4TransitAccessor()->setPolyToPoly(self, static_cast<Ark_matrix4_PolyToPolyOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(matrix4_Matrix4Transit_setPolyToPoly, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Measurable_construct() {
        return GetAccessors()->getMeasurableAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Measurable_construct, Ark_NativePointer)
Ark_NativePointer impl_Measurable_getFinalizer() {
        return GetAccessors()->getMeasurableAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Measurable_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_measure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ConstraintSizeOptions constraint_value = ConstraintSizeOptions_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->measure(self, static_cast<Ark_ConstraintSizeOptions*>(&constraint_value));
        SerializerBase _retSerializer {};
        MeasureResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(Measurable_measure, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Measurable_getMargin(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getMargin(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getMargin, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getPadding(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getPadding(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getPadding, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getBorderWidth(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getBorderWidth(self);
        SerializerBase _retSerializer {};
        DirectionalEdgesT_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getBorderWidth, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getUniqueId(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getUniqueId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getUniqueId, KInteropReturnBuffer, Ark_NativePointer)
void impl_Measurable_setUniqueId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto uniqueId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number uniqueId_value_buf = {};
        uniqueId_value_buf.tag = uniqueId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((uniqueId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            uniqueId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number uniqueId_value = uniqueId_value_buf;;
        GetAccessors()->getMeasurableAccessor()->setUniqueId(self, static_cast<Opt_Number*>(&uniqueId_value));
}
KOALA_INTEROP_DIRECT_V3(Measurable_setUniqueId, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MouseEvent_construct() {
        return GetAccessors()->getMouseEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(MouseEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_MouseEvent_getFinalizer() {
        return GetAccessors()->getMouseEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(MouseEvent_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_MouseEvent_getButton(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getButton(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getButton, Ark_Int32, Ark_NativePointer)
void impl_MouseEvent_setButton(Ark_NativePointer thisPtr, Ark_Int32 button) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setButton(self, static_cast<Ark_MouseButton>(button));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setButton, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_MouseEvent_getAction(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getAction(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getAction, Ark_Int32, Ark_NativePointer)
void impl_MouseEvent_setAction(Ark_NativePointer thisPtr, Ark_Int32 action) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setAction(self, static_cast<Ark_MouseAction>(action));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setAction, Ark_NativePointer, Ark_Int32)
Ark_Number impl_MouseEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_MouseEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getMouseEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_MouseEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getMouseEventAccessor()->setStopPropagation(self, static_cast<Callback_Void*>(&stopPropagation_value));
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MouseEvent_getRawDeltaX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getRawDeltaX(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getRawDeltaX, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setRawDeltaX(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rawDeltaX_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rawDeltaX_value_buf = {};
        rawDeltaX_value_buf.tag = rawDeltaX_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rawDeltaX_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rawDeltaX_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rawDeltaX_value = rawDeltaX_value_buf;;
        GetAccessors()->getMouseEventAccessor()->setRawDeltaX(self, static_cast<Opt_Number*>(&rawDeltaX_value));
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setRawDeltaX, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MouseEvent_getRawDeltaY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getRawDeltaY(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getRawDeltaY, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setRawDeltaY(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto rawDeltaY_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rawDeltaY_value_buf = {};
        rawDeltaY_value_buf.tag = rawDeltaY_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((rawDeltaY_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            rawDeltaY_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rawDeltaY_value = rawDeltaY_value_buf;;
        GetAccessors()->getMouseEventAccessor()->setRawDeltaY(self, static_cast<Opt_Number*>(&rawDeltaY_value));
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setRawDeltaY, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MouseEvent_getPressedButtons(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getPressedButtons(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(retValue_value.length);
            for (int retValue_value_counter_i = 0; retValue_value_counter_i < retValue_value.length; retValue_value_counter_i++) {
                const Ark_MouseButton retValue_value_element = retValue_value.array[retValue_value_counter_i];
                _retSerializer.writeInt32(static_cast<Ark_MouseButton>(retValue_value_element));
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getPressedButtons, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setPressedButtons(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto pressedButtons_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_MouseButton pressedButtons_value_buf = {};
        pressedButtons_value_buf.tag = pressedButtons_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((pressedButtons_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 pressedButtons_value_buf__length = thisDeserializer.readInt32();
            Array_MouseButton pressedButtons_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(pressedButtons_value_buf_)>::type,
        std::decay<decltype(*pressedButtons_value_buf_.array)>::type>(&pressedButtons_value_buf_, pressedButtons_value_buf__length);
            for (int pressedButtons_value_buf__i = 0; pressedButtons_value_buf__i < pressedButtons_value_buf__length; pressedButtons_value_buf__i++) {
                pressedButtons_value_buf_.array[pressedButtons_value_buf__i] = static_cast<Ark_MouseButton>(thisDeserializer.readInt32());
            }
            pressedButtons_value_buf.value = pressedButtons_value_buf_;
        }
        Opt_Array_MouseButton pressedButtons_value = pressedButtons_value_buf;;
        GetAccessors()->getMouseEventAccessor()->setPressedButtons(self, static_cast<Opt_Array_MouseButton*>(&pressedButtons_value));
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setPressedButtons, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MutableStyledString_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_ImageAttachment_CustomSpan value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_ImageAttachment>(ImageAttachment_serializer::read(thisDeserializer));
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = static_cast<Ark_CustomSpan>(CustomSpan_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_ImageAttachment_CustomSpan value_value = static_cast<Ark_Union_String_ImageAttachment_CustomSpan>(value_value_buf);;
        const auto styles_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_StyleOptions styles_value_buf = {};
        styles_value_buf.tag = styles_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((styles_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 styles_value_buf__length = thisDeserializer.readInt32();
            Array_StyleOptions styles_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(styles_value_buf_)>::type,
        std::decay<decltype(*styles_value_buf_.array)>::type>(&styles_value_buf_, styles_value_buf__length);
            for (int styles_value_buf__i = 0; styles_value_buf__i < styles_value_buf__length; styles_value_buf__i++) {
                styles_value_buf_.array[styles_value_buf__i] = StyleOptions_serializer::read(thisDeserializer);
            }
            styles_value_buf.value = styles_value_buf_;
        }
        Opt_Array_StyleOptions styles_value = styles_value_buf;;
        return GetAccessors()->getMutableStyledStringAccessor()->construct(static_cast<Ark_Union_String_ImageAttachment_CustomSpan*>(&value_value), static_cast<Opt_Array_StyleOptions*>(&styles_value));
}
KOALA_INTEROP_DIRECT_2(MutableStyledString_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MutableStyledString_getFinalizer() {
        return GetAccessors()->getMutableStyledStringAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(MutableStyledString_getFinalizer, Ark_NativePointer)
void impl_MutableStyledString_replaceString(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, const KStringPtr& other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->replaceString(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), (const Ark_String*) (&other));
}
KOALA_INTEROP_V4(MutableStyledString_replaceString, Ark_NativePointer, KInteropNumber, KInteropNumber, KStringPtr)
void impl_MutableStyledString_insertString(Ark_NativePointer thisPtr, KInteropNumber start, const KStringPtr& other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->insertString(self, (const Ark_Number*) (&start), (const Ark_String*) (&other));
}
KOALA_INTEROP_V3(MutableStyledString_insertString, Ark_NativePointer, KInteropNumber, KStringPtr)
void impl_MutableStyledString_removeString(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeString(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length));
}
KOALA_INTEROP_DIRECT_V3(MutableStyledString_removeString, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_MutableStyledString_replaceStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SpanStyle spanStyle_value = SpanStyle_serializer::read(thisDeserializer);;
        GetAccessors()->getMutableStyledStringAccessor()->replaceStyle(self, static_cast<Ark_SpanStyle*>(&spanStyle_value));
}
KOALA_INTEROP_DIRECT_V3(MutableStyledString_replaceStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MutableStyledString_setStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SpanStyle spanStyle_value = SpanStyle_serializer::read(thisDeserializer);;
        GetAccessors()->getMutableStyledStringAccessor()->setStyle(self, static_cast<Ark_SpanStyle*>(&spanStyle_value));
}
KOALA_INTEROP_DIRECT_V3(MutableStyledString_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MutableStyledString_removeStyle(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, Ark_Int32 styledKey) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeStyle(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), static_cast<Ark_StyledStringKey>(styledKey));
}
KOALA_INTEROP_DIRECT_V4(MutableStyledString_removeStyle, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_Int32)
void impl_MutableStyledString_removeStyles(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeStyles(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length));
}
KOALA_INTEROP_DIRECT_V3(MutableStyledString_removeStyles, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_MutableStyledString_clearStyles(Ark_NativePointer thisPtr) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->clearStyles(self);
}
KOALA_INTEROP_DIRECT_V1(MutableStyledString_clearStyles, Ark_NativePointer)
void impl_MutableStyledString_replaceStyledString(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->replaceStyledString(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_V4(MutableStyledString_replaceStyledString, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_NativePointer)
void impl_MutableStyledString_insertStyledString(Ark_NativePointer thisPtr, KInteropNumber start, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->insertStyledString(self, (const Ark_Number*) (&start), static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_V3(MutableStyledString_insertStyledString, Ark_NativePointer, KInteropNumber, Ark_NativePointer)
void impl_MutableStyledString_appendStyledString(Ark_NativePointer thisPtr, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->appendStyledString(self, static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_V2(MutableStyledString_appendStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_construct() {
        return GetAccessors()->getNavDestinationContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(NavDestinationContext_construct, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getFinalizer() {
        return GetAccessors()->getNavDestinationContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavDestinationContext_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_NavDestinationContext_getConfigInRouteMap(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        const auto &retValue = GetAccessors()->getNavDestinationContextAccessor()->getConfigInRouteMap(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RouteMapConfig_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavDestinationContext_getConfigInRouteMap, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getPathInfo(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        return GetAccessors()->getNavDestinationContextAccessor()->getPathInfo(self);
}
KOALA_INTEROP_DIRECT_1(NavDestinationContext_getPathInfo, Ark_NativePointer, Ark_NativePointer)
void impl_NavDestinationContext_setPathInfo(Ark_NativePointer thisPtr, Ark_NativePointer pathInfo) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        GetAccessors()->getNavDestinationContextAccessor()->setPathInfo(self, static_cast<Ark_NavPathInfo>(pathInfo));
}
KOALA_INTEROP_DIRECT_V2(NavDestinationContext_setPathInfo, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getPathStack(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        return GetAccessors()->getNavDestinationContextAccessor()->getPathStack(self);
}
KOALA_INTEROP_DIRECT_1(NavDestinationContext_getPathStack, Ark_NativePointer, Ark_NativePointer)
void impl_NavDestinationContext_setPathStack(Ark_NativePointer thisPtr, Ark_NativePointer pathStack) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        GetAccessors()->getNavDestinationContextAccessor()->setPathStack(self, static_cast<Ark_NavPathStack>(pathStack));
}
KOALA_INTEROP_DIRECT_V2(NavDestinationContext_setPathStack, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_NavDestinationContext_getNavDestinationId(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        const auto &retValue = GetAccessors()->getNavDestinationContextAccessor()->getNavDestinationId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeString(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavDestinationContext_getNavDestinationId, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavDestinationContext_setNavDestinationId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto navDestinationId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String navDestinationId_value_buf = {};
        navDestinationId_value_buf.tag = navDestinationId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((navDestinationId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            navDestinationId_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String navDestinationId_value = navDestinationId_value_buf;;
        GetAccessors()->getNavDestinationContextAccessor()->setNavDestinationId(self, static_cast<Opt_String*>(&navDestinationId_value));
}
KOALA_INTEROP_DIRECT_V3(NavDestinationContext_setNavDestinationId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_setNavigationOptions(Ark_NativePointer ptr, Ark_NativePointer pathStack) {
        GetAccessors()->getNavExtenderAccessor()->setNavigationOptions(ptr, static_cast<Ark_NavPathStack>(pathStack));
}
KOALA_INTEROP_DIRECT_V2(NavExtender_setNavigationOptions, Ark_NativePointer, Ark_NativePointer)
void impl_NavExtender_setUpdateStackCallback(Ark_NativePointer peer, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        NavExtender_OnUpdateStack callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_NavExtender_OnUpdateStack)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_NavExtender_OnUpdateStack))))};;
        GetAccessors()->getNavExtenderAccessor()->setUpdateStackCallback(static_cast<Ark_NavPathStack>(peer), static_cast<NavExtender_OnUpdateStack*>(&callback_value));
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setUpdateStackCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_syncStack(Ark_NativePointer peer) {
        GetAccessors()->getNavExtenderAccessor()->syncStack(static_cast<Ark_NavPathStack>(peer));
}
KOALA_INTEROP_DIRECT_V1(NavExtender_syncStack, Ark_NativePointer)
Ark_Boolean impl_NavExtender_checkNeedCreate(Ark_NativePointer navigation, Ark_Int32 index) {
        return GetAccessors()->getNavExtenderAccessor()->checkNeedCreate(navigation, index);
}
KOALA_INTEROP_DIRECT_2(NavExtender_checkNeedCreate, Ark_Boolean, Ark_NativePointer, Ark_Int32)
void impl_NavExtender_setNavDestinationNode(Ark_NativePointer peer, Ark_Int32 index, Ark_NativePointer node) {
        GetAccessors()->getNavExtenderAccessor()->setNavDestinationNode(static_cast<Ark_NavPathStack>(peer), index, node);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setNavDestinationNode, Ark_NativePointer, Ark_Int32, Ark_NativePointer)
void impl_NavExtender_pushPath(Ark_NativePointer pathStack, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NavigationOptions options_value = NavigationOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getNavExtenderAccessor()->pushPath(static_cast<Ark_NavPathStack>(pathStack), static_cast<Ark_NavPathInfo>(info), static_cast<Ark_NavigationOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavExtender_pushPath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_replacePath(Ark_NativePointer pathStack, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NavigationOptions options_value = NavigationOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getNavExtenderAccessor()->replacePath(static_cast<Ark_NavPathStack>(pathStack), static_cast<Ark_NavPathInfo>(info), static_cast<Ark_NavigationOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavExtender_replacePath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_NavExtender_pop(Ark_NativePointer pathStack, Ark_Boolean animated) {
        return GetAccessors()->getNavExtenderAccessor()->pop(static_cast<Ark_NavPathStack>(pathStack), animated);
}
KOALA_INTEROP_2(NavExtender_pop, KStringPtr, Ark_NativePointer, Ark_Boolean)
void impl_NavExtender_setOnPopCallback(Ark_NativePointer pathStack, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_String_Void popCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetAccessors()->getNavExtenderAccessor()->setOnPopCallback(static_cast<Ark_NavPathStack>(pathStack), static_cast<Callback_String_Void*>(&popCallback_value));
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setOnPopCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_NavExtender_getIdByIndex(Ark_NativePointer pathStack, Ark_Int32 index) {
        return GetAccessors()->getNavExtenderAccessor()->getIdByIndex(static_cast<Ark_NavPathStack>(pathStack), index);
}
KOALA_INTEROP_2(NavExtender_getIdByIndex, KStringPtr, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_NavExtender_getIdByName(Ark_NativePointer pathStack, const KStringPtr& name) {
        const auto &retValue = GetAccessors()->getNavExtenderAccessor()->getIdByName(static_cast<Ark_NavPathStack>(pathStack), (const Ark_String*) (&name));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavExtender_getIdByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
void impl_NavExtender_popToIndex(Ark_NativePointer pathStack, Ark_Int32 index, Ark_Boolean animated) {
        GetAccessors()->getNavExtenderAccessor()->popToIndex(static_cast<Ark_NavPathStack>(pathStack), index, animated);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_popToIndex, Ark_NativePointer, Ark_Int32, Ark_Boolean)
Ark_Number impl_NavExtender_popToName(Ark_NativePointer pathStack, const KStringPtr& name, Ark_Boolean animated) {
        return GetAccessors()->getNavExtenderAccessor()->popToName(static_cast<Ark_NavPathStack>(pathStack), (const Ark_String*) (&name), animated);
}
KOALA_INTEROP_3(NavExtender_popToName, KInteropNumber, Ark_NativePointer, KStringPtr, Ark_Boolean)
Ark_NativePointer impl_NavigationTransitionProxy_construct() {
        return GetAccessors()->getNavigationTransitionProxyAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(NavigationTransitionProxy_construct, Ark_NativePointer)
Ark_NativePointer impl_NavigationTransitionProxy_getFinalizer() {
        return GetAccessors()->getNavigationTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavigationTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_NavigationTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        GetAccessors()->getNavigationTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(NavigationTransitionProxy_finishTransition, Ark_NativePointer)
KInteropReturnBuffer impl_NavigationTransitionProxy_getFrom(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getFrom(self);
        SerializerBase _retSerializer {};
        NavContentInfo_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getFrom, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setFrom(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NavContentInfo from_value = NavContentInfo_serializer::read(thisDeserializer);;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setFrom(self, static_cast<Ark_NavContentInfo*>(&from_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setFrom, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getTo(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getTo(self);
        SerializerBase _retSerializer {};
        NavContentInfo_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getTo, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NavContentInfo to_value = NavContentInfo_serializer::read(thisDeserializer);;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setTo(self, static_cast<Ark_NavContentInfo*>(&to_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setTo, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getIsInteractive(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getIsInteractive(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getIsInteractive, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setIsInteractive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isInteractive_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isInteractive_value_buf = {};
        isInteractive_value_buf.tag = isInteractive_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isInteractive_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isInteractive_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isInteractive_value = isInteractive_value_buf;;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setIsInteractive(self, static_cast<Opt_Boolean*>(&isInteractive_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setIsInteractive, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getCancelTransition(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getCancelTransition(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getCancelTransition, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setCancelTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto cancelTransition_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback cancelTransition_value_buf = {};
        cancelTransition_value_buf.tag = cancelTransition_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((cancelTransition_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            cancelTransition_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback cancelTransition_value = cancelTransition_value_buf;;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setCancelTransition(self, static_cast<Opt_VoidCallback*>(&cancelTransition_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setCancelTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getUpdateTransition(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getUpdateTransition(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getUpdateTransition, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setUpdateTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto updateTransition_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_UpdateTransitionCallback updateTransition_value_buf = {};
        updateTransition_value_buf.tag = updateTransition_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((updateTransition_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            updateTransition_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_UpdateTransitionCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_UpdateTransitionCallback))))};
        }
        Opt_UpdateTransitionCallback updateTransition_value = updateTransition_value_buf;;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setUpdateTransition(self, static_cast<Opt_UpdateTransitionCallback*>(&updateTransition_value));
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setUpdateTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavPathInfo_construct(const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((param_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        const auto onPop_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PopInfo_Void onPop_value_buf = {};
        onPop_value_buf.tag = onPop_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onPop_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onPop_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};
        }
        Opt_Callback_PopInfo_Void onPop_value = onPop_value_buf;;
        const auto isEntry_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isEntry_value_buf = {};
        isEntry_value_buf.tag = isEntry_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isEntry_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isEntry_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isEntry_value = isEntry_value_buf;;
        return GetAccessors()->getNavPathInfoAccessor()->construct((const Ark_String*) (&name), static_cast<Opt_Object*>(&param_value), static_cast<Opt_Callback_PopInfo_Void*>(&onPop_value), static_cast<Opt_Boolean*>(&isEntry_value));
}
KOALA_INTEROP_3(NavPathInfo_construct, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavPathInfo_getFinalizer() {
        return GetAccessors()->getNavPathInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavPathInfo_getFinalizer, Ark_NativePointer)
Ark_String impl_NavPathInfo_getName(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        return GetAccessors()->getNavPathInfoAccessor()->getName(self);
}
KOALA_INTEROP_1(NavPathInfo_getName, KStringPtr, Ark_NativePointer)
void impl_NavPathInfo_setName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        GetAccessors()->getNavPathInfoAccessor()->setName(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_V2(NavPathInfo_setName, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathInfo_getParam(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getParam(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getParam, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setParam(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((param_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        GetAccessors()->getNavPathInfoAccessor()->setParam(self, static_cast<Opt_Object*>(&param_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setParam, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathInfo_getOnPop(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getOnPop(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getOnPop, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setOnPop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto onPop_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PopInfo_Void onPop_value_buf = {};
        onPop_value_buf.tag = onPop_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onPop_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onPop_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};
        }
        Opt_Callback_PopInfo_Void onPop_value = onPop_value_buf;;
        GetAccessors()->getNavPathInfoAccessor()->setOnPop(self, static_cast<Opt_Callback_PopInfo_Void*>(&onPop_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setOnPop, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathInfo_getIsEntry(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getIsEntry(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getIsEntry, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setIsEntry(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto isEntry_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isEntry_value_buf = {};
        isEntry_value_buf.tag = isEntry_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((isEntry_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            isEntry_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isEntry_value = isEntry_value_buf;;
        GetAccessors()->getNavPathInfoAccessor()->setIsEntry(self, static_cast<Opt_Boolean*>(&isEntry_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setIsEntry, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathInfo_getNavDestinationId(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getNavDestinationId(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeString(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getNavDestinationId, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setNavDestinationId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto navDestinationId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String navDestinationId_value_buf = {};
        navDestinationId_value_buf.tag = navDestinationId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((navDestinationId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            navDestinationId_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String navDestinationId_value = navDestinationId_value_buf;;
        GetAccessors()->getNavPathInfoAccessor()->setNavDestinationId(self, static_cast<Opt_String*>(&navDestinationId_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setNavDestinationId, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavPathStack_construct() {
        return GetAccessors()->getNavPathStackAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(NavPathStack_construct, Ark_NativePointer)
Ark_NativePointer impl_NavPathStack_getFinalizer() {
        return GetAccessors()->getNavPathStackAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavPathStack_getFinalizer, Ark_NativePointer)
void impl_NavPathStack_pushPath0(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPath0(self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_pushPath0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPath1(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPath1(self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_NavigationOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_pushPath1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestination0(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestination0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_Boolean*>(&animated_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestination0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestination1(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestination1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_NavigationOptions*>(&options_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestination1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPathByName0(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((param_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPathByName0(self, (const Ark_String*) (&name), static_cast<Opt_Object*>(&param_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_V4(NavPathStack_pushPathByName0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPathByName1(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Callback_PopInfo_Void onPop_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPathByName1(self, (const Ark_String*) (&name), static_cast<Ark_Object*>(&param_value), static_cast<Callback_PopInfo_Void*>(&onPop_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_V4(NavPathStack_pushPathByName1, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestinationByName0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestinationByName0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&name), static_cast<Ark_Object*>(&param_value), static_cast<Opt_Boolean*>(&animated_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestinationByName0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestinationByName1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Callback_PopInfo_Void onPop_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestinationByName1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&name), static_cast<Ark_Object*>(&param_value), static_cast<Callback_PopInfo_Void*>(&onPop_value), static_cast<Opt_Boolean*>(&animated_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestinationByName1, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePath0(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePath0(self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_replacePath0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePath1(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePath1(self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_NavigationOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_replacePath1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replaceDestination(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = NavigationOptions_serializer::read(thisDeserializer);
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->replaceDestination(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), static_cast<Opt_NavigationOptions*>(&options_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(NavPathStack_replaceDestination, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePathByName(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePathByName(self, (const Ark_String*) (&name), static_cast<Ark_Object*>(&param_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_V4(NavPathStack_replacePathByName, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_removeByIndexes(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 indexes_value_buf_length = thisDeserializer.readInt32();
        Array_Number indexes_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(indexes_value_buf)>::type,
        std::decay<decltype(*indexes_value_buf.array)>::type>(&indexes_value_buf, indexes_value_buf_length);
        for (int indexes_value_buf_i = 0; indexes_value_buf_i < indexes_value_buf_length; indexes_value_buf_i++) {
            indexes_value_buf.array[indexes_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number indexes_value = indexes_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->removeByIndexes(self, static_cast<Array_Number*>(&indexes_value));
}
KOALA_INTEROP_DIRECT_3(NavPathStack_removeByIndexes, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_removeByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->removeByName(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_2(NavPathStack_removeByName, KInteropNumber, Ark_NativePointer, KStringPtr)
Ark_Boolean impl_NavPathStack_removeByNavDestinationId(Ark_NativePointer thisPtr, const KStringPtr& navDestinationId) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->removeByNavDestinationId(self, (const Ark_String*) (&navDestinationId));
}
KOALA_INTEROP_2(NavPathStack_removeByNavDestinationId, Ark_Boolean, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_pop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->pop0(self, static_cast<Opt_Boolean*>(&animated_value));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            NavPathInfo_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(NavPathStack_pop0, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_pop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->pop1(self, static_cast<Ark_Object*>(&result_value), static_cast<Opt_Boolean*>(&animated_value));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            NavPathInfo_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(NavPathStack_pop1, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_popToName0(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->popToName0(self, (const Ark_String*) (&name), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_4(NavPathStack_popToName0, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_popToName1(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->popToName1(self, (const Ark_String*) (&name), static_cast<Ark_Object*>(&result_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_4(NavPathStack_popToName1, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_popToIndex0(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->popToIndex0(self, (const Ark_Number*) (&index), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_popToIndex0, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_NavPathStack_popToIndex1(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->popToIndex1(self, (const Ark_Number*) (&index), static_cast<Ark_Object*>(&result_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_popToIndex1, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_moveToTop(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->moveToTop(self, (const Ark_String*) (&name), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_4(NavPathStack_moveToTop, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_moveIndexToTop(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->moveIndexToTop(self, (const Ark_Number*) (&index), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_moveIndexToTop, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_NavPathStack_clear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->clear(self, static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_clear, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_getAllPathName(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getAllPathName(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getAllPathName, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_NavPathStack_getParamByIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParamByIndex(self, (const Ark_Number*) (&index));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getParamByIndex, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_NavPathStack_getParamByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParamByName(self, (const Ark_String*) (&name));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Opt_Object retValue_element = retValue.array[retValue_counter_i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = runtimeType(retValue_element);
            _retSerializer.writeInt8(retValue_element_type);
            if ((retValue_element_type) != (INTEROP_RUNTIME_UNDEFINED)) {
                const auto retValue_element_value = retValue_element.value;
                _retSerializer.writeObject(retValue_element_value);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getParamByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_getIndexByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getIndexByName(self, (const Ark_String*) (&name));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getIndexByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_getParent(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParent(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            NavPathStack_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getParent, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_NavPathStack_size(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->size(self);
}
KOALA_INTEROP_DIRECT_1(NavPathStack_size, KInteropNumber, Ark_NativePointer)
void impl_NavPathStack_disableAnimation(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        GetAccessors()->getNavPathStackAccessor()->disableAnimation(self, value);
}
KOALA_INTEROP_DIRECT_V2(NavPathStack_disableAnimation, Ark_NativePointer, Ark_Boolean)
void impl_NavPathStack_setInterception(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_NavigationInterception interception_value = NavigationInterception_serializer::read(thisDeserializer);;
        GetAccessors()->getNavPathStackAccessor()->setInterception(self, static_cast<Ark_NavigationInterception*>(&interception_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_setInterception, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_getPathStack(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getPathStack(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_NavPathInfo retValue_element = retValue.array[retValue_counter_i];
            NavPathInfo_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getPathStack, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathStack_setPathStack(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 pathStack_value_buf_length = thisDeserializer.readInt32();
        Array_NavPathInfo pathStack_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(pathStack_value_buf)>::type,
        std::decay<decltype(*pathStack_value_buf.array)>::type>(&pathStack_value_buf, pathStack_value_buf_length);
        for (int pathStack_value_buf_i = 0; pathStack_value_buf_i < pathStack_value_buf_length; pathStack_value_buf_i++) {
            pathStack_value_buf.array[pathStack_value_buf_i] = static_cast<Ark_NavPathInfo>(NavPathInfo_serializer::read(thisDeserializer));
        }
        Array_NavPathInfo pathStack_value = pathStack_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animated_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->setPathStack(self, static_cast<Array_NavPathInfo*>(&pathStack_value), static_cast<Opt_Boolean*>(&animated_value));
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_setPathStack, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NodeContent_construct() {
        return GetAccessors()->getNodeContentAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(NodeContent_construct, Ark_NativePointer)
Ark_NativePointer impl_NodeContent_getFinalizer() {
        return GetAccessors()->getNodeContentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NodeContent_getFinalizer, Ark_NativePointer)
void impl_NodeContent_addFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_NodeContent self = reinterpret_cast<Ark_NodeContent>(thisPtr);
        GetAccessors()->getNodeContentAccessor()->addFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(NodeContent_addFrameNode, Ark_NativePointer, Ark_NativePointer)
void impl_NodeContent_removeFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_NodeContent self = reinterpret_cast<Ark_NodeContent>(thisPtr);
        GetAccessors()->getNodeContentAccessor()->removeFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(NodeContent_removeFrameNode, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_construct(KInteropNumber width, KInteropNumber height, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getOffscreenCanvasAccessor()->construct((const Ark_Number*) (&width), (const Ark_Number*) (&height), static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_4(OffscreenCanvas_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_OffscreenCanvas_getFinalizer() {
        return GetAccessors()->getOffscreenCanvasAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(OffscreenCanvas_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_transferToImageBitmap(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->transferToImageBitmap(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_transferToImageBitmap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_getContext2d(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = static_cast<Ark_RenderingContextSettings>(RenderingContextSettings_serializer::read(thisDeserializer));
        }
        Opt_RenderingContextSettings options_value = options_value_buf;;
        return GetAccessors()->getOffscreenCanvasAccessor()->getContext2d(self, static_cast<Opt_RenderingContextSettings*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(OffscreenCanvas_getContext2d, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_OffscreenCanvas_getHeight(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_getHeight, KInteropNumber, Ark_NativePointer)
void impl_OffscreenCanvas_setHeight(Ark_NativePointer thisPtr, KInteropNumber height) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        GetAccessors()->getOffscreenCanvasAccessor()->setHeight(self, (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_V2(OffscreenCanvas_setHeight, Ark_NativePointer, KInteropNumber)
Ark_Number impl_OffscreenCanvas_getWidth(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_getWidth, KInteropNumber, Ark_NativePointer)
void impl_OffscreenCanvas_setWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        GetAccessors()->getOffscreenCanvasAccessor()->setWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(OffscreenCanvas_setWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_construct(KInteropNumber width, KInteropNumber height, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto settings_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings settings_value_buf = {};
        settings_value_buf.tag = settings_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((settings_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            settings_value_buf.value = static_cast<Ark_RenderingContextSettings>(RenderingContextSettings_serializer::read(thisDeserializer));
        }
        Opt_RenderingContextSettings settings_value = settings_value_buf;;
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((unit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->construct((const Ark_Number*) (&width), (const Ark_Number*) (&height), static_cast<Opt_RenderingContextSettings*>(&settings_value), static_cast<Opt_LengthMetricsUnit*>(&unit_value));
}
KOALA_INTEROP_DIRECT_4(OffscreenCanvasRenderingContext2D_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_getFinalizer() {
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(OffscreenCanvasRenderingContext2D_getFinalizer, Ark_NativePointer)
Ark_String impl_OffscreenCanvasRenderingContext2D_toDataURL(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_OffscreenCanvasRenderingContext2D self = reinterpret_cast<Ark_OffscreenCanvasRenderingContext2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((type_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        const auto quality_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number quality_value_buf = {};
        quality_value_buf.tag = quality_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((quality_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            quality_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number quality_value = quality_value_buf;;
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->toDataURL(self, static_cast<Opt_String*>(&type_value), static_cast<Opt_Number*>(&quality_value));
}
KOALA_INTEROP_3(OffscreenCanvasRenderingContext2D_toDataURL, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_transferToImageBitmap(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvasRenderingContext2D self = reinterpret_cast<Ark_OffscreenCanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->transferToImageBitmap(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvasRenderingContext2D_transferToImageBitmap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_PageLifeCycle_construct() {
        return GetAccessors()->getPageLifeCycleAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PageLifeCycle_construct, Ark_NativePointer)
Ark_NativePointer impl_PageLifeCycle_getFinalizer() {
        return GetAccessors()->getPageLifeCycleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PageLifeCycle_getFinalizer, Ark_NativePointer)
void impl_PageLifeCycle_onPageShow(Ark_NativePointer thisPtr) {
        Ark_PageLifeCycle self = reinterpret_cast<Ark_PageLifeCycle>(thisPtr);
        GetAccessors()->getPageLifeCycleAccessor()->onPageShow(self);
}
KOALA_INTEROP_DIRECT_V1(PageLifeCycle_onPageShow, Ark_NativePointer)
void impl_PageLifeCycle_onPageHide(Ark_NativePointer thisPtr) {
        Ark_PageLifeCycle self = reinterpret_cast<Ark_PageLifeCycle>(thisPtr);
        GetAccessors()->getPageLifeCycleAccessor()->onPageHide(self);
}
KOALA_INTEROP_DIRECT_V1(PageLifeCycle_onPageHide, Ark_NativePointer)
Ark_Boolean impl_PageLifeCycle_onBackPress(Ark_NativePointer thisPtr) {
        Ark_PageLifeCycle self = reinterpret_cast<Ark_PageLifeCycle>(thisPtr);
        return GetAccessors()->getPageLifeCycleAccessor()->onBackPress(self);
}
KOALA_INTEROP_DIRECT_1(PageLifeCycle_onBackPress, Ark_Boolean, Ark_NativePointer)
void impl_PageLifeCycle_pageTransition(Ark_NativePointer thisPtr) {
        Ark_PageLifeCycle self = reinterpret_cast<Ark_PageLifeCycle>(thisPtr);
        GetAccessors()->getPageLifeCycleAccessor()->pageTransition(self);
}
KOALA_INTEROP_DIRECT_V1(PageLifeCycle_pageTransition, Ark_NativePointer)
void impl_PageLifeCycle_onNewParam(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PageLifeCycle self = reinterpret_cast<Ark_PageLifeCycle>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((param_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        GetAccessors()->getPageLifeCycleAccessor()->onNewParam(self, static_cast<Opt_Object*>(&param_value));
}
KOALA_INTEROP_DIRECT_V3(PageLifeCycle_onNewParam, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureEvent_construct() {
        return GetAccessors()->getPanGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PanGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_PanGestureEvent_getFinalizer() {
        return GetAccessors()->getPanGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_PanGestureEvent_getOffsetX(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getOffsetX, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setOffsetX(Ark_NativePointer thisPtr, KInteropNumber offsetX) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setOffsetX(self, (const Ark_Number*) (&offsetX));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getOffsetY(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getOffsetY, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setOffsetY(Ark_NativePointer thisPtr, KInteropNumber offsetY) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setOffsetY(self, (const Ark_Number*) (&offsetY));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setOffsetY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocityX(Ark_NativePointer thisPtr, KInteropNumber velocityX) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocityX(self, (const Ark_Number*) (&velocityX));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocityX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocityY(Ark_NativePointer thisPtr, KInteropNumber velocityY) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocityY(self, (const Ark_Number*) (&velocityY));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocityY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocity, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocity(Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocity(self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_PanGestureInterface_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = PanGestureInterface_Invoke_Literal_serializer::read(thisDeserializer);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_PanGestureOptions>(PanGestureOptions_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions value_value = static_cast<Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions>(value_value_buf);;
        return GetAccessors()->getPanGestureInterfaceAccessor()->construct(static_cast<Ark_Union_PanGestureInterface_Invoke_Literal_PanGestureOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(PanGestureInterface_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_getFinalizer() {
        return GetAccessors()->getPanGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PanGestureInterface_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionStart(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionStart, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionUpdate(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionUpdate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionEnd(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionCancel0(self, static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionCancel1(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureOptions_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PanGestureHandlerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = PanGestureHandlerOptions_serializer::read(thisDeserializer);
        }
        Opt_PanGestureHandlerOptions value_value = value_value_buf;;
        return GetAccessors()->getPanGestureOptionsAccessor()->construct(static_cast<Opt_PanGestureHandlerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(PanGestureOptions_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureOptions_getFinalizer() {
        return GetAccessors()->getPanGestureOptionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureOptions_getFinalizer, Ark_NativePointer)
void impl_PanGestureOptions_setDirection(Ark_NativePointer thisPtr, Ark_Int32 value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setDirection(self, static_cast<Ark_PanDirection>(value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setDirection, Ark_NativePointer, Ark_Int32)
void impl_PanGestureOptions_setDistance(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setDistance(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setDistance, Ark_NativePointer, KInteropNumber)
void impl_PanGestureOptions_setFingers(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setFingers(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setFingers, Ark_NativePointer, KInteropNumber)
Ark_Int32 impl_PanGestureOptions_getDirection(Ark_NativePointer thisPtr) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        return GetAccessors()->getPanGestureOptionsAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureOptions_getDirection, Ark_Int32, Ark_NativePointer)
Ark_Number impl_PanGestureOptions_getDistance(Ark_NativePointer thisPtr) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        return GetAccessors()->getPanGestureOptionsAccessor()->getDistance(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureOptions_getDistance, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_construct() {
        return GetAccessors()->getPanRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PanRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_getFinalizer() {
        return GetAccessors()->getPanRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanRecognizer_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_getPanGestureOptions(Ark_NativePointer thisPtr) {
        Ark_PanRecognizer self = reinterpret_cast<Ark_PanRecognizer>(thisPtr);
        return GetAccessors()->getPanRecognizerAccessor()->getPanGestureOptions(self);
}
KOALA_INTEROP_DIRECT_1(PanRecognizer_getPanGestureOptions, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_ParagraphStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ParagraphStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = ParagraphStyleInterface_serializer::read(thisDeserializer);
        }
        Opt_ParagraphStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getParagraphStyleAccessor()->construct(static_cast<Opt_ParagraphStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(ParagraphStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ParagraphStyle_getFinalizer() {
        return GetAccessors()->getParagraphStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ParagraphStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getTextAlign(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getTextAlign(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextAlign>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getTextAlign, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getTextIndent(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getTextIndent(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getTextIndent, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getMaxLines(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getMaxLines(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getMaxLines, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getOverflow(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getOverflow(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextOverflow>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getOverflow, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getWordBreak(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getWordBreak(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_WordBreak>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getWordBreak, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getLeadingMargin(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getLeadingMargin(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeNumber(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                LeadingMarginPlaceholder_serializer::write(_retSerializer, retValue_value_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getLeadingMargin, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getParagraphSpacing(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getParagraphSpacing(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getParagraphSpacing, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_Path2D_construct0() {
        return GetAccessors()->getPath2DAccessor()->construct0();
}
KOALA_INTEROP_DIRECT_0(Path2D_construct0, Ark_NativePointer)
Ark_NativePointer impl_Path2D_construct1(Ark_Int32 unit) {
        return GetAccessors()->getPath2DAccessor()->construct1(static_cast<Ark_LengthMetricsUnit>(unit));
}
KOALA_INTEROP_DIRECT_1(Path2D_construct1, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_Path2D_construct2(Ark_NativePointer path) {
        return GetAccessors()->getPath2DAccessor()->construct2(static_cast<Ark_Path2D>(path));
}
KOALA_INTEROP_DIRECT_1(Path2D_construct2, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Path2D_construct3(Ark_NativePointer path, Ark_Int32 unit) {
        return GetAccessors()->getPath2DAccessor()->construct3(static_cast<Ark_Path2D>(path), static_cast<Ark_LengthMetricsUnit>(unit));
}
KOALA_INTEROP_DIRECT_2(Path2D_construct3, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_Path2D_construct4(const KStringPtr& d) {
        return GetAccessors()->getPath2DAccessor()->construct4((const Ark_String*) (&d));
}
KOALA_INTEROP_1(Path2D_construct4, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_Path2D_construct5(const KStringPtr& description, Ark_Int32 unit) {
        return GetAccessors()->getPath2DAccessor()->construct5((const Ark_String*) (&description), static_cast<Ark_LengthMetricsUnit>(unit));
}
KOALA_INTEROP_2(Path2D_construct5, Ark_NativePointer, KStringPtr, Ark_Int32)
Ark_NativePointer impl_Path2D_getFinalizer() {
        return GetAccessors()->getPath2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Path2D_getFinalizer, Ark_NativePointer)
void impl_Path2D_addPath(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Path2D self = reinterpret_cast<Ark_Path2D>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((transform_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(Matrix2D_serializer::read(thisDeserializer));
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getPath2DAccessor()->addPath(self, static_cast<Ark_Path2D>(path), static_cast<Opt_Matrix2D*>(&transform_value));
}
KOALA_INTEROP_DIRECT_V4(Path2D_addPath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PathShapeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PathShapeOptions_serializer::read(thisDeserializer);
        }
        Opt_PathShapeOptions options_value = options_value_buf;;
        return GetAccessors()->getPathShapeAccessor()->construct(static_cast<Opt_PathShapeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(PathShape_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_getFinalizer() {
        return GetAccessors()->getPathShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PathShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PathShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getPathShapeAccessor()->offset(self, static_cast<Ark_Position*>(&offset_value));
}
KOALA_INTEROP_DIRECT_3(PathShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getPathShapeAccessor()->fill(self, static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_3(PathShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getPathShapeAccessor()->position(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_3(PathShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_commands(Ark_NativePointer thisPtr, const KStringPtr& commands) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        return GetAccessors()->getPathShapeAccessor()->commands(self, (const Ark_String*) (&commands));
}
KOALA_INTEROP_2(PathShape_commands, Ark_NativePointer, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_PatternLockController_construct() {
        return GetAccessors()->getPatternLockControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PatternLockController_construct, Ark_NativePointer)
Ark_NativePointer impl_PatternLockController_getFinalizer() {
        return GetAccessors()->getPatternLockControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PatternLockController_getFinalizer, Ark_NativePointer)
void impl_PatternLockController_reset(Ark_NativePointer thisPtr) {
        Ark_PatternLockController self = reinterpret_cast<Ark_PatternLockController>(thisPtr);
        GetAccessors()->getPatternLockControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(PatternLockController_reset, Ark_NativePointer)
void impl_PatternLockController_setChallengeResult(Ark_NativePointer thisPtr, Ark_Int32 result) {
        Ark_PatternLockController self = reinterpret_cast<Ark_PatternLockController>(thisPtr);
        GetAccessors()->getPatternLockControllerAccessor()->setChallengeResult(self, static_cast<Ark_PatternLockChallengeResult>(result));
}
KOALA_INTEROP_DIRECT_V2(PatternLockController_setChallengeResult, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_PermissionRequest_construct() {
        return GetAccessors()->getPermissionRequestAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PermissionRequest_construct, Ark_NativePointer)
Ark_NativePointer impl_PermissionRequest_getFinalizer() {
        return GetAccessors()->getPermissionRequestAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PermissionRequest_getFinalizer, Ark_NativePointer)
void impl_PermissionRequest_deny(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        GetAccessors()->getPermissionRequestAccessor()->deny(self);
}
KOALA_INTEROP_DIRECT_V1(PermissionRequest_deny, Ark_NativePointer)
Ark_String impl_PermissionRequest_getOrigin(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        return GetAccessors()->getPermissionRequestAccessor()->getOrigin(self);
}
KOALA_INTEROP_1(PermissionRequest_getOrigin, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_PermissionRequest_getAccessibleResource(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        const auto &retValue = GetAccessors()->getPermissionRequestAccessor()->getAccessibleResource(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(PermissionRequest_getAccessibleResource, KInteropReturnBuffer, Ark_NativePointer)
void impl_PermissionRequest_grant(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 resources_value_buf_length = thisDeserializer.readInt32();
        Array_String resources_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(resources_value_buf)>::type,
        std::decay<decltype(*resources_value_buf.array)>::type>(&resources_value_buf, resources_value_buf_length);
        for (int resources_value_buf_i = 0; resources_value_buf_i < resources_value_buf_length; resources_value_buf_i++) {
            resources_value_buf.array[resources_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String resources_value = resources_value_buf;;
        GetAccessors()->getPermissionRequestAccessor()->grant(self, static_cast<Array_String*>(&resources_value));
}
KOALA_INTEROP_DIRECT_V3(PermissionRequest_grant, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureEvent_construct() {
        return GetAccessors()->getPinchGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PinchGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_PinchGestureEvent_getFinalizer() {
        return GetAccessors()->getPinchGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_PinchGestureEvent_getScale(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getScale(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getScale, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setScale(Ark_NativePointer thisPtr, KInteropNumber scale) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setScale(self, (const Ark_Number*) (&scale));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setScale, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PinchGestureEvent_getPinchCenterX(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getPinchCenterX(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getPinchCenterX, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setPinchCenterX(Ark_NativePointer thisPtr, KInteropNumber pinchCenterX) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setPinchCenterX(self, (const Ark_Number*) (&pinchCenterX));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setPinchCenterX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PinchGestureEvent_getPinchCenterY(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getPinchCenterY(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getPinchCenterY, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setPinchCenterY(Ark_NativePointer thisPtr, KInteropNumber pinchCenterY) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setPinchCenterY(self, (const Ark_Number*) (&pinchCenterY));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setPinchCenterY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_PinchGestureInterface_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_PinchGestureInterface_Invoke_Literal value_value = PinchGestureInterface_Invoke_Literal_serializer::read(thisDeserializer);;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->construct(static_cast<Ark_PinchGestureInterface_Invoke_Literal*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(PinchGestureInterface_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_getFinalizer() {
        return GetAccessors()->getPinchGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PinchGestureInterface_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionStart(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionStart, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionUpdate(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionUpdate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionEnd(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionCancel0(self, static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionCancel1(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchRecognizer_construct() {
        return GetAccessors()->getPinchRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PinchRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_PinchRecognizer_getFinalizer() {
        return GetAccessors()->getPinchRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_PinchRecognizer_getDistance(Ark_NativePointer thisPtr) {
        Ark_PinchRecognizer self = reinterpret_cast<Ark_PinchRecognizer>(thisPtr);
        return GetAccessors()->getPinchRecognizerAccessor()->getDistance(self);
}
KOALA_INTEROP_DIRECT_1(PinchRecognizer_getDistance, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_PixelMapMock_construct() {
        return GetAccessors()->getPixelMapMockAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PixelMapMock_construct, Ark_NativePointer)
Ark_NativePointer impl_PixelMapMock_getFinalizer() {
        return GetAccessors()->getPixelMapMockAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PixelMapMock_getFinalizer, Ark_NativePointer)
void impl_PixelMapMock_release(Ark_NativePointer thisPtr) {
        Ark_PixelMapMock self = reinterpret_cast<Ark_PixelMapMock>(thisPtr);
        GetAccessors()->getPixelMapMockAccessor()->release(self);
}
KOALA_INTEROP_DIRECT_V1(PixelMapMock_release, Ark_NativePointer)
Ark_NativePointer impl_ProgressMask_construct(KInteropNumber value, KInteropNumber total, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getProgressMaskAccessor()->construct((const Ark_Number*) (&value), (const Ark_Number*) (&total), static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_4(ProgressMask_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ProgressMask_getFinalizer() {
        return GetAccessors()->getProgressMaskAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ProgressMask_getFinalizer, Ark_NativePointer)
void impl_ProgressMask_updateProgress(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        GetAccessors()->getProgressMaskAccessor()->updateProgress(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(ProgressMask_updateProgress, Ark_NativePointer, KInteropNumber)
void impl_ProgressMask_updateColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 3) {
            value_value_buf.selector = 3;
            value_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor value_value = static_cast<Ark_ResourceColor>(value_value_buf);;
        GetAccessors()->getProgressMaskAccessor()->updateColor(self, static_cast<Ark_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(ProgressMask_updateColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressMask_enableBreathingAnimation(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        GetAccessors()->getProgressMaskAccessor()->enableBreathingAnimation(self, value);
}
KOALA_INTEROP_DIRECT_V2(ProgressMask_enableBreathingAnimation, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_PromptAction_construct() {
        return GetAccessors()->getPromptActionAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(PromptAction_construct, Ark_NativePointer)
Ark_NativePointer impl_PromptAction_getFinalizer() {
        return GetAccessors()->getPromptActionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PromptAction_getFinalizer, Ark_NativePointer)
void impl_PromptAction_openPopup(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TargetInfo target_value = TargetInfo_serializer::read(thisDeserializer);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PopupCommonOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PopupCommonOptions_serializer::read(thisDeserializer);
        }
        Opt_PopupCommonOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->openPopup(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Ark_TargetInfo*>(&target_value), static_cast<Opt_PopupCommonOptions*>(&options_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_openPopup, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PromptAction_upatePopup(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_PopupCommonOptions options_value = PopupCommonOptions_serializer::read(thisDeserializer);;
        const auto partialUpdate_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean partialUpdate_value_buf = {};
        partialUpdate_value_buf.tag = partialUpdate_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((partialUpdate_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            partialUpdate_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean partialUpdate_value = partialUpdate_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->upatePopup(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Ark_PopupCommonOptions*>(&options_value), static_cast<Opt_Boolean*>(&partialUpdate_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_upatePopup, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PromptAction_closePopup(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->closePopup(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_closePopup, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PromptAction_openMenu(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TargetInfo target_value = TargetInfo_serializer::read(thisDeserializer);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = MenuOptions_serializer::read(thisDeserializer);
        }
        Opt_MenuOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->openMenu(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Ark_TargetInfo*>(&target_value), static_cast<Opt_MenuOptions*>(&options_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_openMenu, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PromptAction_updateMenu(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_MenuOptions options_value = MenuOptions_serializer::read(thisDeserializer);;
        const auto partialUpdate_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean partialUpdate_value_buf = {};
        partialUpdate_value_buf.tag = partialUpdate_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((partialUpdate_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            partialUpdate_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean partialUpdate_value = partialUpdate_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->updateMenu(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Ark_MenuOptions*>(&options_value), static_cast<Opt_Boolean*>(&partialUpdate_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_updateMenu, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PromptAction_closeMenu(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer content, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PromptAction self = reinterpret_cast<Ark_PromptAction>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getPromptActionAccessor()->closeMenu(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(content), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(PromptAction_closeMenu, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RectShapeOptions_RoundRectShapeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RectShapeOptions_RoundRectShapeOptions options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = RectShapeOptions_serializer::read(thisDeserializer);
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = RoundRectShapeOptions_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RectShapeOptions_RoundRectShapeOptions>(options_value_buf_);
        }
        Opt_Union_RectShapeOptions_RoundRectShapeOptions options_value = options_value_buf;;
        return GetAccessors()->getRectShapeAccessor()->construct(static_cast<Opt_Union_RectShapeOptions_RoundRectShapeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(RectShape_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_getFinalizer() {
        return GetAccessors()->getRectShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RectShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_RectShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getRectShapeAccessor()->offset(self, static_cast<Ark_Position*>(&offset_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->fill(self, static_cast<Ark_ResourceColor*>(&color_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = Position_serializer::read(thisDeserializer);;
        return GetAccessors()->getRectShapeAccessor()->position(self, static_cast<Ark_Position*>(&position_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_width(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 width_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length width_value_buf = {};
        width_value_buf.selector = width_value_buf_selector;
        if (width_value_buf_selector == 0) {
            width_value_buf.selector = 0;
            width_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (width_value_buf_selector == 1) {
            width_value_buf.selector = 1;
            width_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (width_value_buf_selector == 2) {
            width_value_buf.selector = 2;
            width_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for width_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length width_value = static_cast<Ark_Length>(width_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->width(self, static_cast<Ark_Length*>(&width_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_width, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_height(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 height_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length height_value_buf = {};
        height_value_buf.selector = height_value_buf_selector;
        if (height_value_buf_selector == 0) {
            height_value_buf.selector = 0;
            height_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (height_value_buf_selector == 1) {
            height_value_buf.selector = 1;
            height_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (height_value_buf_selector == 2) {
            height_value_buf.selector = 2;
            height_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for height_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length height_value = static_cast<Ark_Length>(height_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->height(self, static_cast<Ark_Length*>(&height_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_height, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = SizeOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getRectShapeAccessor()->size(self, static_cast<Ark_SizeOptions*>(&size_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radiusWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 rWidth_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String rWidth_value_buf = {};
        rWidth_value_buf.selector = rWidth_value_buf_selector;
        if (rWidth_value_buf_selector == 0) {
            rWidth_value_buf.selector = 0;
            rWidth_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (rWidth_value_buf_selector == 1) {
            rWidth_value_buf.selector = 1;
            rWidth_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for rWidth_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String rWidth_value = static_cast<Ark_Union_Number_String>(rWidth_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radiusWidth(self, static_cast<Ark_Union_Number_String*>(&rWidth_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_radiusWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radiusHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 rHeight_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String rHeight_value_buf = {};
        rHeight_value_buf.selector = rHeight_value_buf_selector;
        if (rHeight_value_buf_selector == 0) {
            rHeight_value_buf.selector = 0;
            rHeight_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (rHeight_value_buf_selector == 1) {
            rHeight_value_buf.selector = 1;
            rHeight_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for rHeight_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String rHeight_value = static_cast<Ark_Union_Number_String>(rHeight_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radiusHeight(self, static_cast<Ark_Union_Number_String*>(&rHeight_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_radiusHeight, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 radius_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String_Array_Union_Number_String radius_value_buf = {};
        radius_value_buf.selector = radius_value_buf_selector;
        if (radius_value_buf_selector == 0) {
            radius_value_buf.selector = 0;
            radius_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (radius_value_buf_selector == 1) {
            radius_value_buf.selector = 1;
            radius_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (radius_value_buf_selector == 2) {
            radius_value_buf.selector = 2;
            const Ark_Int32 radius_value_buf_u_length = thisDeserializer.readInt32();
            Array_Union_Number_String radius_value_buf_u = {};
            thisDeserializer.resizeArray<std::decay<decltype(radius_value_buf_u)>::type,
        std::decay<decltype(*radius_value_buf_u.array)>::type>(&radius_value_buf_u, radius_value_buf_u_length);
            for (int radius_value_buf_u_i = 0; radius_value_buf_u_i < radius_value_buf_u_length; radius_value_buf_u_i++) {
                const Ark_Int8 radius_value_buf_u_buf_selector = thisDeserializer.readInt8();
                Ark_Union_Number_String radius_value_buf_u_buf = {};
                radius_value_buf_u_buf.selector = radius_value_buf_u_buf_selector;
                if (radius_value_buf_u_buf_selector == 0) {
                    radius_value_buf_u_buf.selector = 0;
                    radius_value_buf_u_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (radius_value_buf_u_buf_selector == 1) {
                    radius_value_buf_u_buf.selector = 1;
                    radius_value_buf_u_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else {
                    INTEROP_FATAL("One of the branches for radius_value_buf_u_buf has to be chosen through deserialisation.");
                }
                radius_value_buf_u.array[radius_value_buf_u_i] = static_cast<Ark_Union_Number_String>(radius_value_buf_u_buf);
            }
            radius_value_buf.value2 = radius_value_buf_u;
        }
        else {
            INTEROP_FATAL("One of the branches for radius_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String_Array_Union_Number_String radius_value = static_cast<Ark_Union_Number_String_Array_Union_Number_String>(radius_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radius(self, static_cast<Ark_Union_Number_String_Array_Union_Number_String*>(&radius_value));
}
KOALA_INTEROP_DIRECT_3(RectShape_radius, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderingContextSettings_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto antialias_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean antialias_value_buf = {};
        antialias_value_buf.tag = antialias_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((antialias_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            antialias_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean antialias_value = antialias_value_buf;;
        return GetAccessors()->getRenderingContextSettingsAccessor()->construct(static_cast<Opt_Boolean*>(&antialias_value));
}
KOALA_INTEROP_DIRECT_2(RenderingContextSettings_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderingContextSettings_getFinalizer() {
        return GetAccessors()->getRenderingContextSettingsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RenderingContextSettings_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderingContextSettings_getAntialias(Ark_NativePointer thisPtr) {
        Ark_RenderingContextSettings self = reinterpret_cast<Ark_RenderingContextSettings>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderingContextSettingsAccessor()->getAntialias(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderingContextSettings_getAntialias, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderingContextSettings_setAntialias(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderingContextSettings self = reinterpret_cast<Ark_RenderingContextSettings>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto antialias_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean antialias_value_buf = {};
        antialias_value_buf.tag = antialias_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((antialias_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            antialias_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean antialias_value = antialias_value_buf;;
        GetAccessors()->getRenderingContextSettingsAccessor()->setAntialias(self, static_cast<Opt_Boolean*>(&antialias_value));
}
KOALA_INTEROP_DIRECT_V3(RenderingContextSettings_setAntialias, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderNode_construct() {
        return GetAccessors()->getRenderNodeAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RenderNode_construct, Ark_NativePointer)
Ark_NativePointer impl_RenderNode_getFinalizer() {
        return GetAccessors()->getRenderNodeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RenderNode_getFinalizer, Ark_NativePointer)
void impl_RenderNode_appendChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->appendChild(self, static_cast<Ark_RenderNode>(node));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_appendChild, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_insertChildAfter(Ark_NativePointer thisPtr, Ark_NativePointer child, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto sibling_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderNode sibling_value_buf = {};
        sibling_value_buf.tag = sibling_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sibling_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sibling_value_buf.value = static_cast<Ark_RenderNode>(RenderNode_serializer::read(thisDeserializer));
        }
        Opt_RenderNode sibling_value = sibling_value_buf;;
        GetAccessors()->getRenderNodeAccessor()->insertChildAfter(self, static_cast<Ark_RenderNode>(child), static_cast<Opt_RenderNode*>(&sibling_value));
}
KOALA_INTEROP_DIRECT_V4(RenderNode_insertChildAfter, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_removeChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->removeChild(self, static_cast<Ark_RenderNode>(node));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_removeChild, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_clearChildren(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->clearChildren(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_clearChildren, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getChild(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getChild(self, (const Ark_Number*) (&index));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RenderNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(RenderNode_getChild, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getFirstChild(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getFirstChild(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RenderNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getFirstChild, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getNextSibling(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getNextSibling(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RenderNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getNextSibling, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getPreviousSibling(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPreviousSibling(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RenderNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPreviousSibling, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_draw(Ark_NativePointer thisPtr, Ark_NativePointer context) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->draw(self, static_cast<Ark_DrawContext>(context));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_draw, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_invalidate(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_invalidate, Ark_NativePointer)
void impl_RenderNode_dispose(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_dispose, Ark_NativePointer)
Ark_Number impl_RenderNode_getBackgroundColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getBackgroundColor(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getBackgroundColor, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setBackgroundColor(Ark_NativePointer thisPtr, KInteropNumber backgroundColor) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setBackgroundColor(self, (const Ark_Number*) (&backgroundColor));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setBackgroundColor, Ark_NativePointer, KInteropNumber)
Ark_Boolean impl_RenderNode_getClipToFrame(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getClipToFrame(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getClipToFrame, Ark_Boolean, Ark_NativePointer)
void impl_RenderNode_setClipToFrame(Ark_NativePointer thisPtr, Ark_Boolean clipToFrame) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setClipToFrame(self, clipToFrame);
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setClipToFrame, Ark_NativePointer, Ark_Boolean)
Ark_Number impl_RenderNode_getOpacity(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getOpacity(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getOpacity, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setOpacity(Ark_NativePointer thisPtr, KInteropNumber opacity) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setOpacity(self, (const Ark_Number*) (&opacity));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setOpacity, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getSize(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getSize(self);
        SerializerBase _retSerializer {};
        Size_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getSize, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Size size_value = Size_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setSize(self, static_cast<Ark_Size*>(&size_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setSize, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getPosition(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPosition(self);
        SerializerBase _retSerializer {};
        Vector2_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPosition, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector2 position_value = Vector2_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setPosition(self, static_cast<Ark_Vector2*>(&position_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getFrame(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getFrame(self);
        SerializerBase _retSerializer {};
        Frame_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getFrame, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setFrame(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Frame frame_value = Frame_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setFrame(self, static_cast<Ark_Frame*>(&frame_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setFrame, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getPivot(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPivot(self);
        SerializerBase _retSerializer {};
        Vector2_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPivot, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setPivot(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector2 pivot_value = Vector2_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setPivot(self, static_cast<Ark_Vector2*>(&pivot_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setPivot, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getScale(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getScale(self);
        SerializerBase _retSerializer {};
        Vector2_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getScale, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector2 scale_value = Vector2_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setScale(self, static_cast<Ark_Vector2*>(&scale_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setScale, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getTranslation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getTranslation(self);
        SerializerBase _retSerializer {};
        Vector2_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getTranslation, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setTranslation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector2 translation_value = Vector2_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setTranslation(self, static_cast<Ark_Vector2*>(&translation_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setTranslation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getRotation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getRotation(self);
        SerializerBase _retSerializer {};
        Vector3_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getRotation, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setRotation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector3 rotation_value = Vector3_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setRotation(self, static_cast<Ark_Vector3*>(&rotation_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setRotation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getTransform(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getTransform(self);
        SerializerBase _retSerializer {};
        const auto retValue_0 = retValue.value0;
        _retSerializer.writeNumber(retValue_0);
        const auto retValue_1 = retValue.value1;
        _retSerializer.writeNumber(retValue_1);
        const auto retValue_2 = retValue.value2;
        _retSerializer.writeNumber(retValue_2);
        const auto retValue_3 = retValue.value3;
        _retSerializer.writeNumber(retValue_3);
        const auto retValue_4 = retValue.value4;
        _retSerializer.writeNumber(retValue_4);
        const auto retValue_5 = retValue.value5;
        _retSerializer.writeNumber(retValue_5);
        const auto retValue_6 = retValue.value6;
        _retSerializer.writeNumber(retValue_6);
        const auto retValue_7 = retValue.value7;
        _retSerializer.writeNumber(retValue_7);
        const auto retValue_8 = retValue.value8;
        _retSerializer.writeNumber(retValue_8);
        const auto retValue_9 = retValue.value9;
        _retSerializer.writeNumber(retValue_9);
        const auto retValue_10 = retValue.value10;
        _retSerializer.writeNumber(retValue_10);
        const auto retValue_11 = retValue.value11;
        _retSerializer.writeNumber(retValue_11);
        const auto retValue_12 = retValue.value12;
        _retSerializer.writeNumber(retValue_12);
        const auto retValue_13 = retValue.value13;
        _retSerializer.writeNumber(retValue_13);
        const auto retValue_14 = retValue.value14;
        _retSerializer.writeNumber(retValue_14);
        const auto retValue_15 = retValue.value15;
        _retSerializer.writeNumber(retValue_15);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getTransform, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setTransform(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Matrix4 transform_value_buf = {};
        transform_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value2 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value3 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value4 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value5 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value6 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value7 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value8 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value9 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value10 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value11 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value12 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value13 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value14 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value15 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_Matrix4 transform_value = transform_value_buf;;
        GetAccessors()->getRenderNodeAccessor()->setTransform(self, static_cast<Ark_Matrix4*>(&transform_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setTransform, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RenderNode_getShadowColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowColor(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowColor, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowColor(Ark_NativePointer thisPtr, KInteropNumber shadowColor) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowColor(self, (const Ark_Number*) (&shadowColor));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowColor, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getShadowOffset(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getShadowOffset(self);
        SerializerBase _retSerializer {};
        Vector2_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getShadowOffset, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setShadowOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Vector2 shadowOffset_value = Vector2_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setShadowOffset(self, static_cast<Ark_Vector2*>(&shadowOffset_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setShadowOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_RenderNode_getLabel(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getLabel(self);
}
KOALA_INTEROP_1(RenderNode_getLabel, KStringPtr, Ark_NativePointer)
void impl_RenderNode_setLabel(Ark_NativePointer thisPtr, const KStringPtr& label) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setLabel(self, (const Ark_String*) (&label));
}
KOALA_INTEROP_V2(RenderNode_setLabel, Ark_NativePointer, KStringPtr)
Ark_Number impl_RenderNode_getShadowAlpha(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowAlpha(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowAlpha, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowAlpha(Ark_NativePointer thisPtr, KInteropNumber shadowAlpha) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowAlpha(self, (const Ark_Number*) (&shadowAlpha));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowAlpha, Ark_NativePointer, KInteropNumber)
Ark_Number impl_RenderNode_getShadowElevation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowElevation(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowElevation, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowElevation(Ark_NativePointer thisPtr, KInteropNumber shadowElevation) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowElevation(self, (const Ark_Number*) (&shadowElevation));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowElevation, Ark_NativePointer, KInteropNumber)
Ark_Number impl_RenderNode_getShadowRadius(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowRadius(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowRadius, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowRadius(Ark_NativePointer thisPtr, KInteropNumber shadowRadius) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowRadius(self, (const Ark_Number*) (&shadowRadius));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowRadius, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getBorderStyle(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderStyle(self);
        SerializerBase _retSerializer {};
        EdgeStyles_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_EdgeStyles borderStyle_value = EdgeStyles_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setBorderStyle(self, static_cast<Ark_EdgeStyles*>(&borderStyle_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderWidth(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderWidth(self);
        SerializerBase _retSerializer {};
        Edges_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderWidth, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Edges borderWidth_value = Edges_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setBorderWidth(self, static_cast<Ark_Edges*>(&borderWidth_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderColor(self);
        SerializerBase _retSerializer {};
        Edges_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderColor, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Edges borderColor_value = Edges_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setBorderColor(self, static_cast<Ark_Edges*>(&borderColor_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderRadius(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderRadius(self);
        SerializerBase _retSerializer {};
        BorderRadiuses_graphics_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderRadius, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_BorderRadiuses_graphics borderRadius_value = BorderRadiuses_graphics_serializer::read(thisDeserializer);;
        GetAccessors()->getRenderNodeAccessor()->setBorderRadius(self, static_cast<Ark_BorderRadiuses_graphics*>(&borderRadius_value));
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderNode_getShapeMask(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShapeMask(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShapeMask, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_setShapeMask(Ark_NativePointer thisPtr, Ark_NativePointer shapeMask) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShapeMask(self, static_cast<Ark_ShapeMask>(shapeMask));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShapeMask, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RenderNode_getShapeClip(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShapeClip(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShapeClip, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_setShapeClip(Ark_NativePointer thisPtr, Ark_NativePointer shapeClip) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShapeClip(self, static_cast<Ark_ShapeClip>(shapeClip));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShapeClip, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_RenderNode_getMarkNodeGroup(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getMarkNodeGroup(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getMarkNodeGroup, Ark_Boolean, Ark_NativePointer)
void impl_RenderNode_setMarkNodeGroup(Ark_NativePointer thisPtr, Ark_Boolean markNodeGroup) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setMarkNodeGroup(self, markNodeGroup);
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setMarkNodeGroup, Ark_NativePointer, Ark_Boolean)
Ark_Int32 impl_RenderNode_getLengthMetricsUnit(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getLengthMetricsUnit(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getLengthMetricsUnit, Ark_Int32, Ark_NativePointer)
void impl_RenderNode_setLengthMetricsUnit(Ark_NativePointer thisPtr, Ark_Int32 lengthMetricsUnit) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setLengthMetricsUnit(self, static_cast<Ark_LengthMetricsUnit>(lengthMetricsUnit));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setLengthMetricsUnit, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_RenderServiceNode_getNodeId(const KStringPtr& nodeId) {
        return GetAccessors()->getRenderServiceNodeAccessor()->getNodeId((const Ark_String*) (&nodeId));
}
KOALA_INTEROP_1(RenderServiceNode_getNodeId, Ark_Int32, KStringPtr)
Ark_NativePointer impl_ReplaceSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getReplaceSymbolEffectAccessor()->construct(static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_2(ReplaceSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ReplaceSymbolEffect_getFinalizer() {
        return GetAccessors()->getReplaceSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ReplaceSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ReplaceSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_ReplaceSymbolEffect self = reinterpret_cast<Ark_ReplaceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getReplaceSymbolEffectAccessor()->getScope(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ReplaceSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_ReplaceSymbolEffect_setScope(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ReplaceSymbolEffect self = reinterpret_cast<Ark_ReplaceSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        GetAccessors()->getReplaceSymbolEffectAccessor()->setScope(self, static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_V3(ReplaceSymbolEffect_setScope, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RestrictedWorker_construct(const KStringPtr& scriptURL, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = WorkerOptions_serializer::read(thisDeserializer);
        }
        Opt_WorkerOptions options_value = options_value_buf;;
        return GetAccessors()->getRestrictedWorkerAccessor()->construct((const Ark_String*) (&scriptURL), static_cast<Opt_WorkerOptions*>(&options_value));
}
KOALA_INTEROP_3(RestrictedWorker_construct, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RestrictedWorker_getFinalizer() {
        return GetAccessors()->getRestrictedWorkerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RestrictedWorker_getFinalizer, Ark_NativePointer)
void impl_RestrictedWorker_postMessage0(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const Ark_Int32 transfer_value_buf_length = thisDeserializer.readInt32();
        Array_Buffer transfer_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(transfer_value_buf)>::type,
        std::decay<decltype(*transfer_value_buf.array)>::type>(&transfer_value_buf, transfer_value_buf_length);
        for (int transfer_value_buf_i = 0; transfer_value_buf_i < transfer_value_buf_length; transfer_value_buf_i++) {
            transfer_value_buf.array[transfer_value_buf_i] = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        Array_Buffer transfer_value = transfer_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessage0(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_Object*>(&message_value), static_cast<Array_Buffer*>(&transfer_value));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessage0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_postMessage1(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PostMessageOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = PostMessageOptions_serializer::read(thisDeserializer);
        }
        Opt_PostMessageOptions options_value = options_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessage1(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_Object*>(&message_value), static_cast<Opt_PostMessageOptions*>(&options_value));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessage1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_postMessageWithSharedSendable(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto transfer_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Buffer transfer_value_buf = {};
        transfer_value_buf.tag = transfer_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((transfer_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 transfer_value_buf__length = thisDeserializer.readInt32();
            Array_Buffer transfer_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(transfer_value_buf_)>::type,
        std::decay<decltype(*transfer_value_buf_.array)>::type>(&transfer_value_buf_, transfer_value_buf__length);
            for (int transfer_value_buf__i = 0; transfer_value_buf__i < transfer_value_buf__length; transfer_value_buf__i++) {
                transfer_value_buf_.array[transfer_value_buf__i] = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
            }
            transfer_value_buf.value = transfer_value_buf_;
        }
        Opt_Array_Buffer transfer_value = transfer_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessageWithSharedSendable(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_Object*>(&message_value), static_cast<Opt_Array_Buffer*>(&transfer_value));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessageWithSharedSendable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_on(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_WorkerEventListener listener_value = WorkerEventListener_serializer::read(thisDeserializer);;
        GetAccessors()->getRestrictedWorkerAccessor()->on(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener*>(&listener_value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_on, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_once(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_WorkerEventListener listener_value = WorkerEventListener_serializer::read(thisDeserializer);;
        GetAccessors()->getRestrictedWorkerAccessor()->once(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener*>(&listener_value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_once, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_off(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto listener_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerEventListener listener_value_buf = {};
        listener_value_buf.tag = listener_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((listener_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            listener_value_buf.value = WorkerEventListener_serializer::read(thisDeserializer);
        }
        Opt_WorkerEventListener listener_value = listener_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->off(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Opt_WorkerEventListener*>(&listener_value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_off, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_terminate(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->terminate(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(RestrictedWorker_terminate, Ark_NativePointer)
void impl_RestrictedWorker_addEventListener(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_WorkerEventListener listener_value = WorkerEventListener_serializer::read(thisDeserializer);;
        GetAccessors()->getRestrictedWorkerAccessor()->addEventListener(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener*>(&listener_value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_addEventListener, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Boolean impl_RestrictedWorker_dispatchEvent(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Event event_value = Event_serializer::read(thisDeserializer);;
        return GetAccessors()->getRestrictedWorkerAccessor()->dispatchEvent(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_Event*>(&event_value));
}
KOALA_INTEROP_CTX_3(RestrictedWorker_dispatchEvent, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_removeEventListener(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerEventListener callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = WorkerEventListener_serializer::read(thisDeserializer);
        }
        Opt_WorkerEventListener callback__value = callback__value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->removeEventListener(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Opt_WorkerEventListener*>(&callback__value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_removeEventListener, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_removeAllListener(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->removeAllListener(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(RestrictedWorker_removeAllListener, Ark_NativePointer)
void impl_RestrictedWorker_registerGlobalCallObject(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& instanceName, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object globalCallObject_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getRestrictedWorkerAccessor()->registerGlobalCallObject(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&instanceName), static_cast<Ark_Object*>(&globalCallObject_value));
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_registerGlobalCallObject, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_unregisterGlobalCallObject(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto instanceName_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String instanceName_value_buf = {};
        instanceName_value_buf.tag = instanceName_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((instanceName_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            instanceName_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String instanceName_value = instanceName_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->unregisterGlobalCallObject(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Opt_String*>(&instanceName_value));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_unregisterGlobalCallObject, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnexit(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnexit(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnexit, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnexit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto onexit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RestrictedWorker_onexit_Callback onexit_value_buf = {};
        onexit_value_buf.tag = onexit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onexit_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onexit_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number code)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onexit_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number code)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onexit_Callback))))};
        }
        Opt_RestrictedWorker_onexit_Callback onexit_value = onexit_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnexit(self, static_cast<Opt_RestrictedWorker_onexit_Callback*>(&onexit_value));
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnexit, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnerror(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnerror(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnerror, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnerror(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto onerror_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RestrictedWorker_onerror_Callback onerror_value_buf = {};
        onerror_value_buf.tag = onerror_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onerror_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onerror_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ErrorEvent ev)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onerror_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ErrorEvent ev)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onerror_Callback))))};
        }
        Opt_RestrictedWorker_onerror_Callback onerror_value = onerror_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnerror(self, static_cast<Opt_RestrictedWorker_onerror_Callback*>(&onerror_value));
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnerror, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnmessage(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnmessage(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnmessage, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnmessage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto onmessage_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RestrictedWorker_onmessage_Callback onmessage_value_buf = {};
        onmessage_value_buf.tag = onmessage_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onmessage_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onmessage_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onmessage_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onmessage_Callback))))};
        }
        Opt_RestrictedWorker_onmessage_Callback onmessage_value = onmessage_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnmessage(self, static_cast<Opt_RestrictedWorker_onmessage_Callback*>(&onmessage_value));
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnmessage, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnmessageerror(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnmessageerror(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnmessageerror, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnmessageerror(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto onmessageerror_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RestrictedWorker_onmessage_Callback onmessageerror_value_buf = {};
        onmessageerror_value_buf.tag = onmessageerror_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((onmessageerror_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            onmessageerror_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onmessage_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onmessage_Callback))))};
        }
        Opt_RestrictedWorker_onmessage_Callback onmessageerror_value = onmessageerror_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnmessageerror(self, static_cast<Opt_RestrictedWorker_onmessage_Callback*>(&onmessageerror_value));
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnmessageerror, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichEditorBaseController_construct() {
        return GetAccessors()->getRichEditorBaseControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RichEditorBaseController_construct, Ark_NativePointer)
Ark_NativePointer impl_RichEditorBaseController_getFinalizer() {
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorBaseController_getFinalizer, Ark_NativePointer)
Ark_Number impl_RichEditorBaseController_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getCaretOffset(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_getCaretOffset, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_RichEditorBaseController_setCaretOffset(Ark_NativePointer thisPtr, KInteropNumber offset) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->setCaretOffset(self, (const Ark_Number*) (&offset));
}
KOALA_INTEROP_DIRECT_2(RichEditorBaseController_setCaretOffset, Ark_Boolean, Ark_NativePointer, KInteropNumber)
void impl_RichEditorBaseController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        GetAccessors()->getRichEditorBaseControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(RichEditorBaseController_closeSelectionMenu, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getTypingStyle(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getTypingStyle(self);
        SerializerBase _retSerializer {};
        RichEditorTextStyle_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getTypingStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_RichEditorBaseController_setTypingStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RichEditorTextStyle value_value = RichEditorTextStyle_serializer::read(thisDeserializer);;
        GetAccessors()->getRichEditorBaseControllerAccessor()->setTypingStyle(self, static_cast<Ark_RichEditorTextStyle*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorBaseController_setTypingStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorBaseController_setSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getRichEditorBaseControllerAccessor()->setSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), static_cast<Opt_SelectionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V5(RichEditorBaseController_setSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_RichEditorBaseController_isEditing(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->isEditing(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_isEditing, Ark_Boolean, Ark_NativePointer)
void impl_RichEditorBaseController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        GetAccessors()->getRichEditorBaseControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(RichEditorBaseController_stopEditing, Ark_NativePointer)
Ark_NativePointer impl_RichEditorBaseController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getPreviewText(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getPreviewText(self);
        SerializerBase _retSerializer {};
        PreviewText_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getPreviewText, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getCaretRect(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getCaretRect(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            RectResult_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getCaretRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_construct() {
        return GetAccessors()->getRichEditorControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RichEditorController_construct, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_getFinalizer() {
        return GetAccessors()->getRichEditorControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorController_getFinalizer, Ark_NativePointer)
Ark_Number impl_RichEditorController_addTextSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 content_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr content_value_buf = {};
        content_value_buf.selector = content_value_buf_selector;
        if (content_value_buf_selector == 0) {
            content_value_buf.selector = 0;
            content_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (content_value_buf_selector == 1) {
            content_value_buf.selector = 1;
            content_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for content_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr content_value = static_cast<Ark_ResourceStr>(content_value_buf);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorTextSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = RichEditorTextSpanOptions_serializer::read(thisDeserializer);
        }
        Opt_RichEditorTextSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addTextSpan(self, static_cast<Ark_ResourceStr*>(&content_value), static_cast<Opt_RichEditorTextSpanOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addTextSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addImageSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_image_PixelMap>(image_PixelMap_serializer::read(thisDeserializer));
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            const Ark_Int8 value_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_u = {};
            value_value_buf_u.selector = value_value_buf_u_selector;
            if (value_value_buf_u_selector == 0) {
                value_value_buf_u.selector = 0;
                value_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf_u_selector == 1) {
                value_value_buf_u.selector = 1;
                value_value_buf_u.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_u has to be chosen through deserialisation.");
            }
            value_value_buf.value1 = static_cast<Ark_ResourceStr>(value_value_buf_u);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr value_value = static_cast<Ark_Union_PixelMap_ResourceStr>(value_value_buf);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorImageSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = RichEditorImageSpanOptions_serializer::read(thisDeserializer);
        }
        Opt_RichEditorImageSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addImageSpan(self, static_cast<Ark_Union_PixelMap_ResourceStr*>(&value_value), static_cast<Opt_RichEditorImageSpanOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addImageSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addBuilderSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        CustomNodeBuilder value_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorBuilderSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = RichEditorBuilderSpanOptions_serializer::read(thisDeserializer);
        }
        Opt_RichEditorBuilderSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addBuilderSpan(self, static_cast<CustomNodeBuilder*>(&value_value), static_cast<Opt_RichEditorBuilderSpanOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addBuilderSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addSymbolSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = Resource_serializer::read(thisDeserializer);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorSymbolSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = RichEditorSymbolSpanOptions_serializer::read(thisDeserializer);
        }
        Opt_RichEditorSymbolSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addSymbolSpan(self, static_cast<Ark_Resource*>(&value_value), static_cast<Opt_RichEditorSymbolSpanOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addSymbolSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_updateSpanStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = RichEditorUpdateTextSpanStyleOptions_serializer::read(thisDeserializer);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = RichEditorUpdateImageSpanStyleOptions_serializer::read(thisDeserializer);
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = RichEditorUpdateSymbolSpanStyleOptions_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions value_value = static_cast<Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions>(value_value_buf);;
        GetAccessors()->getRichEditorControllerAccessor()->updateSpanStyle(self, static_cast<Ark_Union_RichEditorUpdateTextSpanStyleOptions_RichEditorUpdateImageSpanStyleOptions_RichEditorUpdateSymbolSpanStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_updateSpanStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_updateParagraphStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RichEditorParagraphStyleOptions value_value = RichEditorParagraphStyleOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getRichEditorControllerAccessor()->updateParagraphStyle(self, static_cast<Ark_RichEditorParagraphStyleOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_updateParagraphStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_deleteSpans(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RichEditorRange_serializer::read(thisDeserializer);
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        GetAccessors()->getRichEditorControllerAccessor()->deleteSpans(self, static_cast<Opt_RichEditorRange*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_deleteSpans, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getSpans(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RichEditorRange_serializer::read(thisDeserializer);
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getSpans(self, static_cast<Opt_RichEditorRange*>(&value_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult retValue_element = retValue.array[retValue_counter_i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = retValue_element.selector;
            if (retValue_element_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_element_0 = retValue_element.value0;
                RichEditorImageSpanResult_serializer::write(_retSerializer, retValue_element_0);
            }
            else if (retValue_element_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_element_1 = retValue_element.value1;
                RichEditorTextSpanResult_serializer::write(_retSerializer, retValue_element_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(RichEditorController_getSpans, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getParagraphs(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RichEditorRange_serializer::read(thisDeserializer);
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getParagraphs(self, static_cast<Opt_RichEditorRange*>(&value_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_RichEditorParagraphResult retValue_element = retValue.array[retValue_counter_i];
            RichEditorParagraphResult_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(RichEditorController_getParagraphs, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getSelection(Ark_NativePointer thisPtr) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getSelection(self);
        SerializerBase _retSerializer {};
        RichEditorSelection_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorController_getSelection, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorController_fromStyledString(Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->fromStyledString(self, static_cast<Ark_StyledString>(value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_RichEditorSpan retValue_element = retValue.array[retValue_counter_i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = retValue_element.selector;
            if (retValue_element_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_element_0 = retValue_element.value0;
                RichEditorImageSpanResult_serializer::write(_retSerializer, retValue_element_0);
            }
            else if (retValue_element_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_element_1 = retValue_element.value1;
                RichEditorTextSpanResult_serializer::write(_retSerializer, retValue_element_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(RichEditorController_fromStyledString, KInteropReturnBuffer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_toStyledString(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RichEditorRange value_value = RichEditorRange_serializer::read(thisDeserializer);;
        return GetAccessors()->getRichEditorControllerAccessor()->toStyledString(self, static_cast<Ark_RichEditorRange*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(RichEditorController_toStyledString, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichEditorStyledStringController_construct() {
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RichEditorStyledStringController_construct, Ark_NativePointer)
Ark_NativePointer impl_RichEditorStyledStringController_getFinalizer() {
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorStyledStringController_getFinalizer, Ark_NativePointer)
void impl_RichEditorStyledStringController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer styledString) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        GetAccessors()->getRichEditorStyledStringControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_DIRECT_V2(RichEditorStyledStringController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorStyledStringController_getStyledString(Ark_NativePointer thisPtr) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->getStyledString(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorStyledStringController_getStyledString, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorStyledStringController_getSelection(Ark_NativePointer thisPtr) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorStyledStringControllerAccessor()->getSelection(self);
        SerializerBase _retSerializer {};
        RichEditorRange_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorStyledStringController_getSelection, KInteropReturnBuffer, Ark_NativePointer)
void impl_RichEditorStyledStringController_onContentChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_StyledStringChangedListener listener_value = StyledStringChangedListener_serializer::read(thisDeserializer);;
        GetAccessors()->getRichEditorStyledStringControllerAccessor()->onContentChanged(self, static_cast<Ark_StyledStringChangedListener*>(&listener_value));
}
KOALA_INTEROP_DIRECT_V3(RichEditorStyledStringController_onContentChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGesture_construct() {
        return GetAccessors()->getRotationGestureAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RotationGesture_construct, Ark_NativePointer)
Ark_NativePointer impl_RotationGesture_getFinalizer() {
        return GetAccessors()->getRotationGestureAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationGesture_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_RotationGesture_$_instantiate(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_RotationGesture factory_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_RotationGesture_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RotationGesture)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_RotationGesture_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RotationGesture))))};;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RotationGestureHandlerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = RotationGestureHandlerOptions_serializer::read(thisDeserializer);
        }
        Opt_RotationGestureHandlerOptions value_value = value_value_buf;;
        return GetAccessors()->getRotationGestureAccessor()->$_instantiate(static_cast<Callback_RotationGesture*>(&factory_value), static_cast<Opt_RotationGestureHandlerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(RotationGesture_$_instantiate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RotationGesture_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGesture self = reinterpret_cast<Ark_RotationGesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getRotationGestureAccessor()->onActionStart(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(RotationGesture_onActionStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RotationGesture_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGesture self = reinterpret_cast<Ark_RotationGesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getRotationGestureAccessor()->onActionUpdate(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(RotationGesture_onActionUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RotationGesture_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGesture self = reinterpret_cast<Ark_RotationGesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getRotationGestureAccessor()->onActionEnd(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(RotationGesture_onActionEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RotationGesture_onActionCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGesture self = reinterpret_cast<Ark_RotationGesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getRotationGestureAccessor()->onActionCancel(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(RotationGesture_onActionCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureEvent_construct() {
        return GetAccessors()->getRotationGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RotationGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_RotationGestureEvent_getFinalizer() {
        return GetAccessors()->getRotationGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_RotationGestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_RotationGestureEvent self = reinterpret_cast<Ark_RotationGestureEvent>(thisPtr);
        return GetAccessors()->getRotationGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(RotationGestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_RotationGestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_RotationGestureEvent self = reinterpret_cast<Ark_RotationGestureEvent>(thisPtr);
        GetAccessors()->getRotationGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(RotationGestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_RotationRecognizer_construct() {
        return GetAccessors()->getRotationRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(RotationRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_RotationRecognizer_getFinalizer() {
        return GetAccessors()->getRotationRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_RotationRecognizer_getAngle(Ark_NativePointer thisPtr) {
        Ark_RotationRecognizer self = reinterpret_cast<Ark_RotationRecognizer>(thisPtr);
        return GetAccessors()->getRotationRecognizerAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(RotationRecognizer_getAngle, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_ScaleSymbolEffect_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((direction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        return GetAccessors()->getScaleSymbolEffectAccessor()->construct(static_cast<Opt_EffectScope*>(&scope_value), static_cast<Opt_EffectDirection*>(&direction_value));
}
KOALA_INTEROP_DIRECT_2(ScaleSymbolEffect_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScaleSymbolEffect_getFinalizer() {
        return GetAccessors()->getScaleSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScaleSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ScaleSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getScaleSymbolEffectAccessor()->getScope(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ScaleSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_ScaleSymbolEffect_setScope(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((scope_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        GetAccessors()->getScaleSymbolEffectAccessor()->setScope(self, static_cast<Opt_EffectScope*>(&scope_value));
}
KOALA_INTEROP_DIRECT_V3(ScaleSymbolEffect_setScope, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_ScaleSymbolEffect_getDirection(Ark_NativePointer thisPtr) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getScaleSymbolEffectAccessor()->getDirection(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectDirection>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ScaleSymbolEffect_getDirection, KInteropReturnBuffer, Ark_NativePointer)
void impl_ScaleSymbolEffect_setDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((direction_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        GetAccessors()->getScaleSymbolEffectAccessor()->setDirection(self, static_cast<Opt_EffectDirection*>(&direction_value));
}
KOALA_INTEROP_DIRECT_V3(ScaleSymbolEffect_setDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Scene_construct() {
        return GetAccessors()->getSceneAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Scene_construct, Ark_NativePointer)
Ark_NativePointer impl_Scene_getFinalizer() {
        return GetAccessors()->getSceneAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Scene_getFinalizer, Ark_NativePointer)
void impl_Scene_load(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto uri_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr uri_value_buf = {};
        uri_value_buf.tag = uri_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((uri_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 uri_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr uri_value_buf_ = {};
            uri_value_buf_.selector = uri_value_buf__selector;
            if (uri_value_buf__selector == 0) {
                uri_value_buf_.selector = 0;
                uri_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (uri_value_buf__selector == 1) {
                uri_value_buf_.selector = 1;
                uri_value_buf_.value1 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for uri_value_buf_ has to be chosen through deserialisation.");
            }
            uri_value_buf.value = static_cast<Ark_ResourceStr>(uri_value_buf_);
        }
        Opt_ResourceStr uri_value = uri_value_buf;;
        Callback_Opt_Scene_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Scene value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Scene_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Scene value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Scene_Opt_Array_String_Void))))};;
        GetAccessors()->getSceneAccessor()->load(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), static_cast<Opt_ResourceStr*>(&uri_value), static_cast<Callback_Opt_Scene_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V2(Scene_load, KSerializerBuffer, int32_t)
void impl_Scene_destroy(Ark_NativePointer thisPtr) {
        Ark_Scene self = reinterpret_cast<Ark_Scene>(thisPtr);
        GetAccessors()->getSceneAccessor()->destroy(self);
}
KOALA_INTEROP_DIRECT_V1(Scene_destroy, Ark_NativePointer)
Ark_NativePointer impl_ScreenCaptureHandler_construct() {
        return GetAccessors()->getScreenCaptureHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ScreenCaptureHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_ScreenCaptureHandler_getFinalizer() {
        return GetAccessors()->getScreenCaptureHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScreenCaptureHandler_getFinalizer, Ark_NativePointer)
Ark_String impl_ScreenCaptureHandler_getOrigin(Ark_NativePointer thisPtr) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        return GetAccessors()->getScreenCaptureHandlerAccessor()->getOrigin(self);
}
KOALA_INTEROP_1(ScreenCaptureHandler_getOrigin, KStringPtr, Ark_NativePointer)
void impl_ScreenCaptureHandler_grant(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScreenCaptureConfig config_value = ScreenCaptureConfig_serializer::read(thisDeserializer);;
        GetAccessors()->getScreenCaptureHandlerAccessor()->grant(self, static_cast<Ark_ScreenCaptureConfig*>(&config_value));
}
KOALA_INTEROP_DIRECT_V3(ScreenCaptureHandler_grant, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScreenCaptureHandler_deny(Ark_NativePointer thisPtr) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        GetAccessors()->getScreenCaptureHandlerAccessor()->deny(self);
}
KOALA_INTEROP_DIRECT_V1(ScreenCaptureHandler_deny, Ark_NativePointer)
Ark_NativePointer impl_ScrollableTargetInfo_construct() {
        return GetAccessors()->getScrollableTargetInfoAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ScrollableTargetInfo_construct, Ark_NativePointer)
Ark_NativePointer impl_ScrollableTargetInfo_getFinalizer() {
        return GetAccessors()->getScrollableTargetInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScrollableTargetInfo_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_ScrollableTargetInfo_isBegin(Ark_NativePointer thisPtr) {
        Ark_ScrollableTargetInfo self = reinterpret_cast<Ark_ScrollableTargetInfo>(thisPtr);
        return GetAccessors()->getScrollableTargetInfoAccessor()->isBegin(self);
}
KOALA_INTEROP_DIRECT_1(ScrollableTargetInfo_isBegin, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_ScrollableTargetInfo_isEnd(Ark_NativePointer thisPtr) {
        Ark_ScrollableTargetInfo self = reinterpret_cast<Ark_ScrollableTargetInfo>(thisPtr);
        return GetAccessors()->getScrollableTargetInfoAccessor()->isEnd(self);
}
KOALA_INTEROP_DIRECT_1(ScrollableTargetInfo_isEnd, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_Scroller_construct() {
        return GetAccessors()->getScrollerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(Scroller_construct, Ark_NativePointer)
Ark_NativePointer impl_Scroller_getFinalizer() {
        return GetAccessors()->getScrollerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Scroller_getFinalizer, Ark_NativePointer)
void impl_Scroller_scrollTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScrollOptions options_value = ScrollOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getScrollerAccessor()->scrollTo(self, static_cast<Ark_ScrollOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollTo, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Scroller_scrollEdge(Ark_NativePointer thisPtr, Ark_Int32 value, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollEdgeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ScrollEdgeOptions_serializer::read(thisDeserializer);
        }
        Opt_ScrollEdgeOptions options_value = options_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollEdge(self, static_cast<Ark_Edge>(value), static_cast<Opt_ScrollEdgeOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(Scroller_scrollEdge, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
void impl_Scroller_fling(Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        GetAccessors()->getScrollerAccessor()->fling(self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_V2(Scroller_fling, Ark_NativePointer, KInteropNumber)
void impl_Scroller_scrollPage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScrollPageOptions value_value = ScrollPageOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getScrollerAccessor()->scrollPage(self, static_cast<Ark_ScrollPageOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollPage, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Scroller_currentOffset(Ark_NativePointer thisPtr) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        const auto &retValue = GetAccessors()->getScrollerAccessor()->currentOffset(self);
        SerializerBase _retSerializer {};
        OffsetResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Scroller_currentOffset, KInteropReturnBuffer, Ark_NativePointer)
void impl_Scroller_scrollToIndex(Ark_NativePointer thisPtr, KInteropNumber value, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto smooth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean smooth_value_buf = {};
        smooth_value_buf.tag = smooth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((smooth_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            smooth_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean smooth_value = smooth_value_buf;;
        const auto align_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollAlign align_value_buf = {};
        align_value_buf.tag = align_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((align_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            align_value_buf.value = static_cast<Ark_ScrollAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollAlign align_value = align_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollToIndexOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = ScrollToIndexOptions_serializer::read(thisDeserializer);
        }
        Opt_ScrollToIndexOptions options_value = options_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollToIndex(self, (const Ark_Number*) (&value), static_cast<Opt_Boolean*>(&smooth_value), static_cast<Opt_ScrollAlign*>(&align_value), static_cast<Opt_ScrollToIndexOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V4(Scroller_scrollToIndex, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_Scroller_scrollBy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 dx_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length dx_value_buf = {};
        dx_value_buf.selector = dx_value_buf_selector;
        if (dx_value_buf_selector == 0) {
            dx_value_buf.selector = 0;
            dx_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (dx_value_buf_selector == 1) {
            dx_value_buf.selector = 1;
            dx_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dx_value_buf_selector == 2) {
            dx_value_buf.selector = 2;
            dx_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for dx_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length dx_value = static_cast<Ark_Length>(dx_value_buf);;
        const Ark_Int8 dy_value_buf_selector = thisDeserializer.readInt8();
        Ark_Length dy_value_buf = {};
        dy_value_buf.selector = dy_value_buf_selector;
        if (dy_value_buf_selector == 0) {
            dy_value_buf.selector = 0;
            dy_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (dy_value_buf_selector == 1) {
            dy_value_buf.selector = 1;
            dy_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dy_value_buf_selector == 2) {
            dy_value_buf.selector = 2;
            dy_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for dy_value_buf has to be chosen through deserialisation.");
        }
        Ark_Length dy_value = static_cast<Ark_Length>(dy_value_buf);;
        GetAccessors()->getScrollerAccessor()->scrollBy(self, static_cast<Ark_Length*>(&dx_value), static_cast<Ark_Length*>(&dy_value));
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollBy, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_Scroller_isAtEnd(Ark_NativePointer thisPtr) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        return GetAccessors()->getScrollerAccessor()->isAtEnd(self);
}
KOALA_INTEROP_DIRECT_1(Scroller_isAtEnd, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_Scroller_getItemRect(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        const auto &retValue = GetAccessors()->getScrollerAccessor()->getItemRect(self, (const Ark_Number*) (&index));
        SerializerBase _retSerializer {};
        RectResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(Scroller_getItemRect, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_Scroller_getItemIndex(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        return GetAccessors()->getScrollerAccessor()->getItemIndex(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_3(Scroller_getItemIndex, KInteropNumber, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_ScrollMotion_construct(KInteropNumber position, KInteropNumber velocity, KInteropNumber min, KInteropNumber max, Ark_NativePointer prop) {
        return GetAccessors()->getScrollMotionAccessor()->construct((const Ark_Number*) (&position), (const Ark_Number*) (&velocity), (const Ark_Number*) (&min), (const Ark_Number*) (&max), static_cast<Ark_SpringProp>(prop));
}
KOALA_INTEROP_DIRECT_5(ScrollMotion_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_ScrollMotion_getFinalizer() {
        return GetAccessors()->getScrollMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScrollMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ScrollResult_construct() {
        return GetAccessors()->getScrollResultAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ScrollResult_construct, Ark_NativePointer)
Ark_NativePointer impl_ScrollResult_getFinalizer() {
        return GetAccessors()->getScrollResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScrollResult_getFinalizer, Ark_NativePointer)
Ark_Number impl_ScrollResult_getOffsetRemain(Ark_NativePointer thisPtr) {
        Ark_ScrollResult self = reinterpret_cast<Ark_ScrollResult>(thisPtr);
        return GetAccessors()->getScrollResultAccessor()->getOffsetRemain(self);
}
KOALA_INTEROP_DIRECT_1(ScrollResult_getOffsetRemain, KInteropNumber, Ark_NativePointer)
void impl_ScrollResult_setOffsetRemain(Ark_NativePointer thisPtr, KInteropNumber offsetRemain) {
        Ark_ScrollResult self = reinterpret_cast<Ark_ScrollResult>(thisPtr);
        GetAccessors()->getScrollResultAccessor()->setOffsetRemain(self, (const Ark_Number*) (&offsetRemain));
}
KOALA_INTEROP_DIRECT_V2(ScrollResult_setOffsetRemain, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SearchController_construct() {
        return GetAccessors()->getSearchControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SearchController_construct, Ark_NativePointer)
Ark_NativePointer impl_SearchController_getFinalizer() {
        return GetAccessors()->getSearchControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SearchController_getFinalizer, Ark_NativePointer)
void impl_SearchController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        GetAccessors()->getSearchControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(SearchController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_SearchController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        GetAccessors()->getSearchControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(SearchController_stopEditing, Ark_NativePointer)
void impl_SearchController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getSearchControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), static_cast<Opt_SelectionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V5(SearchController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SearchOps_registerSearchValueCallback(Ark_NativePointer node, const KStringPtr& value, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        SearchValueCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SearchValueCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SearchValueCallback))))};;
        return GetAccessors()->getSearchOpsAccessor()->registerSearchValueCallback(node, (const Ark_String*) (&value), static_cast<SearchValueCallback*>(&callback_value));
}
KOALA_INTEROP_4(SearchOps_registerSearchValueCallback, Ark_NativePointer, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ShapeClip_construct() {
        return GetAccessors()->getShapeClipAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ShapeClip_construct, Ark_NativePointer)
Ark_NativePointer impl_ShapeClip_getFinalizer() {
        return GetAccessors()->getShapeClipAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ShapeClip_getFinalizer, Ark_NativePointer)
void impl_ShapeClip_setRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeClipAccessor()->setRectShape(self, static_cast<Ark_common2D_Rect*>(&rect_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setRoundRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RoundRect roundRect_value = RoundRect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeClipAccessor()->setRoundRectShape(self, static_cast<Ark_RoundRect*>(&roundRect_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setRoundRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setCircleShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Circle circle_value = Circle_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeClipAccessor()->setCircleShape(self, static_cast<Ark_Circle*>(&circle_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setCircleShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setOvalShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect oval_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeClipAccessor()->setOvalShape(self, static_cast<Ark_common2D_Rect*>(&oval_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setOvalShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setCommandPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CommandPath path_value = CommandPath_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeClipAccessor()->setCommandPath(self, static_cast<Ark_CommandPath*>(&path_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setCommandPath, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ShapeMask_construct() {
        return GetAccessors()->getShapeMaskAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ShapeMask_construct, Ark_NativePointer)
Ark_NativePointer impl_ShapeMask_getFinalizer() {
        return GetAccessors()->getShapeMaskAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ShapeMask_getFinalizer, Ark_NativePointer)
void impl_ShapeMask_setRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect rect_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeMaskAccessor()->setRectShape(self, static_cast<Ark_common2D_Rect*>(&rect_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setRoundRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RoundRect roundRect_value = RoundRect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeMaskAccessor()->setRoundRectShape(self, static_cast<Ark_RoundRect*>(&roundRect_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setRoundRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setCircleShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Circle circle_value = Circle_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeMaskAccessor()->setCircleShape(self, static_cast<Ark_Circle*>(&circle_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setCircleShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setOvalShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Rect oval_value = common2D_Rect_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeMaskAccessor()->setOvalShape(self, static_cast<Ark_common2D_Rect*>(&oval_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setOvalShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setCommandPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CommandPath path_value = CommandPath_serializer::read(thisDeserializer);;
        GetAccessors()->getShapeMaskAccessor()->setCommandPath(self, static_cast<Ark_CommandPath*>(&path_value));
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setCommandPath, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_ShapeMask_getFillColor(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getFillColor(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getFillColor, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setFillColor(Ark_NativePointer thisPtr, KInteropNumber fillColor) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setFillColor(self, (const Ark_Number*) (&fillColor));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setFillColor, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ShapeMask_getStrokeColor(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getStrokeColor(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getStrokeColor, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setStrokeColor(Ark_NativePointer thisPtr, KInteropNumber strokeColor) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setStrokeColor(self, (const Ark_Number*) (&strokeColor));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setStrokeColor, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ShapeMask_getStrokeWidth(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getStrokeWidth(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getStrokeWidth, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setStrokeWidth(Ark_NativePointer thisPtr, KInteropNumber strokeWidth) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setStrokeWidth(self, (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setStrokeWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SpringMotion_construct(KInteropNumber start, KInteropNumber end, KInteropNumber velocity, Ark_NativePointer prop) {
        return GetAccessors()->getSpringMotionAccessor()->construct((const Ark_Number*) (&start), (const Ark_Number*) (&end), (const Ark_Number*) (&velocity), static_cast<Ark_SpringProp>(prop));
}
KOALA_INTEROP_DIRECT_4(SpringMotion_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_SpringMotion_getFinalizer() {
        return GetAccessors()->getSpringMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SpringMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SpringProp_construct(KInteropNumber mass, KInteropNumber stiffness, KInteropNumber damping) {
        return GetAccessors()->getSpringPropAccessor()->construct((const Ark_Number*) (&mass), (const Ark_Number*) (&stiffness), (const Ark_Number*) (&damping));
}
KOALA_INTEROP_DIRECT_3(SpringProp_construct, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_SpringProp_getFinalizer() {
        return GetAccessors()->getSpringPropAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SpringProp_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SslErrorHandler_construct() {
        return GetAccessors()->getSslErrorHandlerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SslErrorHandler_construct, Ark_NativePointer)
Ark_NativePointer impl_SslErrorHandler_getFinalizer() {
        return GetAccessors()->getSslErrorHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SslErrorHandler_getFinalizer, Ark_NativePointer)
void impl_SslErrorHandler_handleConfirm(Ark_NativePointer thisPtr) {
        Ark_SslErrorHandler self = reinterpret_cast<Ark_SslErrorHandler>(thisPtr);
        GetAccessors()->getSslErrorHandlerAccessor()->handleConfirm(self);
}
KOALA_INTEROP_DIRECT_V1(SslErrorHandler_handleConfirm, Ark_NativePointer)
void impl_SslErrorHandler_handleCancel(Ark_NativePointer thisPtr) {
        Ark_SslErrorHandler self = reinterpret_cast<Ark_SslErrorHandler>(thisPtr);
        GetAccessors()->getSslErrorHandlerAccessor()->handleCancel(self);
}
KOALA_INTEROP_DIRECT_V1(SslErrorHandler_handleCancel, Ark_NativePointer)
void impl_StateStylesOps_onStateStyleChange(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_StateStylesChange stateStyleChange_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 currentState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_StateStylesChange)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 currentState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_StateStylesChange))))};;
        GetAccessors()->getStateStylesOpsAccessor()->onStateStyleChange(node, static_cast<Callback_StateStylesChange*>(&stateStyleChange_value));
}
KOALA_INTEROP_DIRECT_V3(StateStylesOps_onStateStyleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StyledString_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_ImageAttachment_CustomSpan value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_ImageAttachment>(ImageAttachment_serializer::read(thisDeserializer));
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = static_cast<Ark_CustomSpan>(CustomSpan_serializer::read(thisDeserializer));
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_ImageAttachment_CustomSpan value_value = static_cast<Ark_Union_String_ImageAttachment_CustomSpan>(value_value_buf);;
        const auto styles_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_StyleOptions styles_value_buf = {};
        styles_value_buf.tag = styles_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((styles_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 styles_value_buf__length = thisDeserializer.readInt32();
            Array_StyleOptions styles_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(styles_value_buf_)>::type,
        std::decay<decltype(*styles_value_buf_.array)>::type>(&styles_value_buf_, styles_value_buf__length);
            for (int styles_value_buf__i = 0; styles_value_buf__i < styles_value_buf__length; styles_value_buf__i++) {
                styles_value_buf_.array[styles_value_buf__i] = StyleOptions_serializer::read(thisDeserializer);
            }
            styles_value_buf.value = styles_value_buf_;
        }
        Opt_Array_StyleOptions styles_value = styles_value_buf;;
        return GetAccessors()->getStyledStringAccessor()->construct(static_cast<Ark_Union_String_ImageAttachment_CustomSpan*>(&value_value), static_cast<Opt_Array_StyleOptions*>(&styles_value));
}
KOALA_INTEROP_DIRECT_2(StyledString_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StyledString_getFinalizer() {
        return GetAccessors()->getStyledStringAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(StyledString_getFinalizer, Ark_NativePointer)
Ark_String impl_StyledString_getString(Ark_NativePointer thisPtr) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->getString(self);
}
KOALA_INTEROP_1(StyledString_getString, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_StyledString_getStyles(Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto styledKey_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StyledStringKey styledKey_value_buf = {};
        styledKey_value_buf.tag = styledKey_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((styledKey_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            styledKey_value_buf.value = static_cast<Ark_StyledStringKey>(thisDeserializer.readInt32());
        }
        Opt_StyledStringKey styledKey_value = styledKey_value_buf;;
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->getStyles(self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), static_cast<Opt_StyledStringKey*>(&styledKey_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_SpanStyle retValue_element = retValue.array[retValue_counter_i];
            SpanStyle_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_5(StyledString_getStyles, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_StyledString_equals(Ark_NativePointer thisPtr, Ark_NativePointer other) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->equals(self, static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_2(StyledString_equals, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_StyledString_subStyledString(Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto length_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number length_value_buf = {};
        length_value_buf.tag = length_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((length_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            length_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number length_value = length_value_buf;;
        return GetAccessors()->getStyledStringAccessor()->subStyledString(self, (const Ark_Number*) (&start), static_cast<Opt_Number*>(&length_value));
}
KOALA_INTEROP_DIRECT_4(StyledString_subStyledString, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_StyledString_fromHtml(KVMContext vmContext, const KStringPtr& html, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->fromHtml(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), (const Ark_String*) (&html), static_cast<Callback_Opt_StyledString_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(StyledString_fromHtml, KStringPtr, KSerializerBuffer, int32_t)
Ark_String impl_StyledString_toHtml(Ark_NativePointer styledString) {
        return GetAccessors()->getStyledStringAccessor()->toHtml(static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_1(StyledString_toHtml, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_StyledString_marshalling0(Ark_NativePointer styledString, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        StyledStringMarshallCallback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_StyledStringMarshallCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_StyledStringMarshallCallback))))};;
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->marshalling0(static_cast<Ark_StyledString>(styledString), static_cast<StyledStringMarshallCallback*>(&callback__value));
        SerializerBase _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(StyledString_marshalling0, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StyledString_unmarshalling0(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Buffer buffer_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        StyledStringUnmarshallCallback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_StyledStringUnmarshallCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_StyledStringUnmarshallCallback))))};;
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->unmarshalling0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), static_cast<Ark_Buffer*>(&buffer_value), static_cast<StyledStringUnmarshallCallback*>(&callback__value), static_cast<Callback_Opt_StyledString_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V2(StyledString_unmarshalling0, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_StyledString_marshalling1(Ark_NativePointer styledString) {
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->marshalling1(static_cast<Ark_StyledString>(styledString));
        SerializerBase _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(StyledString_marshalling1, KInteropReturnBuffer, Ark_NativePointer)
void impl_StyledString_unmarshalling1(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Buffer buffer_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->unmarshalling1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), static_cast<Ark_Buffer*>(&buffer_value), static_cast<Callback_Opt_StyledString_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V2(StyledString_unmarshalling1, KSerializerBuffer, int32_t)
Ark_Number impl_StyledString_getLength(Ark_NativePointer thisPtr) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->getLength(self);
}
KOALA_INTEROP_DIRECT_1(StyledString_getLength, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_construct() {
        return GetAccessors()->getStyledStringControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(StyledStringController_construct, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_getFinalizer() {
        return GetAccessors()->getStyledStringControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(StyledStringController_getFinalizer, Ark_NativePointer)
void impl_StyledStringController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer styledString) {
        Ark_StyledStringController self = reinterpret_cast<Ark_StyledStringController>(thisPtr);
        GetAccessors()->getStyledStringControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_DIRECT_V2(StyledStringController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_getStyledString(Ark_NativePointer thisPtr) {
        Ark_StyledStringController self = reinterpret_cast<Ark_StyledStringController>(thisPtr);
        return GetAccessors()->getStyledStringControllerAccessor()->getStyledString(self);
}
KOALA_INTEROP_DIRECT_1(StyledStringController_getStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_SubmitEvent_construct() {
        return GetAccessors()->getSubmitEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SubmitEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_SubmitEvent_getFinalizer() {
        return GetAccessors()->getSubmitEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SubmitEvent_getFinalizer, Ark_NativePointer)
void impl_SubmitEvent_keepEditableState(Ark_NativePointer thisPtr) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        GetAccessors()->getSubmitEventAccessor()->keepEditableState(self);
}
KOALA_INTEROP_DIRECT_V1(SubmitEvent_keepEditableState, Ark_NativePointer)
Ark_String impl_SubmitEvent_getText(Ark_NativePointer thisPtr) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        return GetAccessors()->getSubmitEventAccessor()->getText(self);
}
KOALA_INTEROP_1(SubmitEvent_getText, KStringPtr, Ark_NativePointer)
void impl_SubmitEvent_setText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        GetAccessors()->getSubmitEventAccessor()->setText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(SubmitEvent_setText, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_SwipeGesture_construct() {
        return GetAccessors()->getSwipeGestureAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SwipeGesture_construct, Ark_NativePointer)
Ark_NativePointer impl_SwipeGesture_getFinalizer() {
        return GetAccessors()->getSwipeGestureAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeGesture_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SwipeGesture_$_instantiate(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_SwipeGesture factory_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_SwipeGesture_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_SwipeGesture)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_SwipeGesture_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_SwipeGesture))))};;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwipeGestureHandlerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = SwipeGestureHandlerOptions_serializer::read(thisDeserializer);
        }
        Opt_SwipeGestureHandlerOptions value_value = value_value_buf;;
        return GetAccessors()->getSwipeGestureAccessor()->$_instantiate(static_cast<Callback_SwipeGesture*>(&factory_value), static_cast<Opt_SwipeGestureHandlerOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(SwipeGesture_$_instantiate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwipeGesture_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwipeGesture self = reinterpret_cast<Ark_SwipeGesture>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getSwipeGestureAccessor()->onAction(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(SwipeGesture_onAction, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SwipeGestureEvent_construct() {
        return GetAccessors()->getSwipeGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SwipeGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_SwipeGestureEvent_getFinalizer() {
        return GetAccessors()->getSwipeGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_SwipeGestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        return GetAccessors()->getSwipeGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(SwipeGestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_SwipeGestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        GetAccessors()->getSwipeGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(SwipeGestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwipeGestureEvent_getSpeed(Ark_NativePointer thisPtr) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        return GetAccessors()->getSwipeGestureEventAccessor()->getSpeed(self);
}
KOALA_INTEROP_DIRECT_1(SwipeGestureEvent_getSpeed, KInteropNumber, Ark_NativePointer)
void impl_SwipeGestureEvent_setSpeed(Ark_NativePointer thisPtr, KInteropNumber speed) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        GetAccessors()->getSwipeGestureEventAccessor()->setSpeed(self, (const Ark_Number*) (&speed));
}
KOALA_INTEROP_DIRECT_V2(SwipeGestureEvent_setSpeed, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SwiperContentTransitionProxy_construct() {
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SwiperContentTransitionProxy_construct, Ark_NativePointer)
Ark_NativePointer impl_SwiperContentTransitionProxy_getFinalizer() {
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwiperContentTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperContentTransitionProxy_finishTransition, Ark_NativePointer)
Ark_Number impl_SwiperContentTransitionProxy_getSelectedIndex(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getSelectedIndex(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getSelectedIndex, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setSelectedIndex(Ark_NativePointer thisPtr, KInteropNumber selectedIndex) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setSelectedIndex(self, (const Ark_Number*) (&selectedIndex));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setSelectedIndex, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getIndex(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getIndex(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getIndex, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setIndex(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setIndex, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getPosition(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getPosition(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getPosition, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setPosition(Ark_NativePointer thisPtr, KInteropNumber position) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setPosition(self, (const Ark_Number*) (&position));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setPosition, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getMainAxisLength(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getMainAxisLength(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getMainAxisLength, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setMainAxisLength(Ark_NativePointer thisPtr, KInteropNumber mainAxisLength) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setMainAxisLength(self, (const Ark_Number*) (&mainAxisLength));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setMainAxisLength, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SwiperController_construct() {
        return GetAccessors()->getSwiperControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SwiperController_construct, Ark_NativePointer)
Ark_NativePointer impl_SwiperController_getFinalizer() {
        return GetAccessors()->getSwiperControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwiperController_getFinalizer, Ark_NativePointer)
void impl_SwiperController_showNext(Ark_NativePointer thisPtr) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        GetAccessors()->getSwiperControllerAccessor()->showNext(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperController_showNext, Ark_NativePointer)
void impl_SwiperController_showPrevious(Ark_NativePointer thisPtr) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        GetAccessors()->getSwiperControllerAccessor()->showPrevious(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperController_showPrevious, Ark_NativePointer)
void impl_SwiperController_changeIndex(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto animationMode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SwiperAnimationMode_Boolean animationMode_value_buf = {};
        animationMode_value_buf.tag = animationMode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((animationMode_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 animationMode_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SwiperAnimationMode_Boolean animationMode_value_buf_ = {};
            animationMode_value_buf_.selector = animationMode_value_buf__selector;
            if (animationMode_value_buf__selector == 0) {
                animationMode_value_buf_.selector = 0;
                animationMode_value_buf_.value0 = static_cast<Ark_SwiperAnimationMode>(thisDeserializer.readInt32());
            }
            else if (animationMode_value_buf__selector == 1) {
                animationMode_value_buf_.selector = 1;
                animationMode_value_buf_.value1 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for animationMode_value_buf_ has to be chosen through deserialisation.");
            }
            animationMode_value_buf.value = static_cast<Ark_Union_SwiperAnimationMode_Boolean>(animationMode_value_buf_);
        }
        Opt_Union_SwiperAnimationMode_Boolean animationMode_value = animationMode_value_buf;;
        GetAccessors()->getSwiperControllerAccessor()->changeIndex(self, (const Ark_Number*) (&index), static_cast<Opt_Union_SwiperAnimationMode_Boolean*>(&animationMode_value));
}
KOALA_INTEROP_DIRECT_V4(SwiperController_changeIndex, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_SwiperController_finishAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback callback__value = callback__value_buf;;
        GetAccessors()->getSwiperControllerAccessor()->finishAnimation(self, static_cast<Opt_VoidCallback*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(SwiperController_finishAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperController_preloadItems(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto indices_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number indices_value_buf = {};
        indices_value_buf.tag = indices_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((indices_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 indices_value_buf__length = thisDeserializer.readInt32();
            Array_Number indices_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(indices_value_buf_)>::type,
        std::decay<decltype(*indices_value_buf_.array)>::type>(&indices_value_buf_, indices_value_buf__length);
            for (int indices_value_buf__i = 0; indices_value_buf__i < indices_value_buf__length; indices_value_buf__i++) {
                indices_value_buf_.array[indices_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            indices_value_buf.value = indices_value_buf_;
        }
        Opt_Array_Number indices_value = indices_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getSwiperControllerAccessor()->preloadItems(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Opt_Array_Number*>(&indices_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(SwiperController_preloadItems, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SwipeRecognizer_construct() {
        return GetAccessors()->getSwipeRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SwipeRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_SwipeRecognizer_getFinalizer() {
        return GetAccessors()->getSwipeRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_SwipeRecognizer_getVelocityThreshold(Ark_NativePointer thisPtr) {
        Ark_SwipeRecognizer self = reinterpret_cast<Ark_SwipeRecognizer>(thisPtr);
        return GetAccessors()->getSwipeRecognizerAccessor()->getVelocityThreshold(self);
}
KOALA_INTEROP_DIRECT_1(SwipeRecognizer_getVelocityThreshold, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_SwipeRecognizer_getDirection(Ark_NativePointer thisPtr) {
        Ark_SwipeRecognizer self = reinterpret_cast<Ark_SwipeRecognizer>(thisPtr);
        return GetAccessors()->getSwipeRecognizerAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_1(SwipeRecognizer_getDirection, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_SymbolEffect_construct() {
        return GetAccessors()->getSymbolEffectAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(SymbolEffect_construct, Ark_NativePointer)
Ark_NativePointer impl_SymbolEffect_getFinalizer() {
        return GetAccessors()->getSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SymbolEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SystemOps_StartFrame() {
        return GetAccessors()->getSystemOpsAccessor()->StartFrame();
}
KOALA_INTEROP_DIRECT_0(SystemOps_StartFrame, Ark_NativePointer)
void impl_SystemOps_EndFrame(Ark_NativePointer root) {
        GetAccessors()->getSystemOpsAccessor()->EndFrame(root);
}
KOALA_INTEROP_DIRECT_V1(SystemOps_EndFrame, Ark_NativePointer)
void impl_SystemOps_syncInstanceId(Ark_Int32 instanceId) {
        GetAccessors()->getSystemOpsAccessor()->syncInstanceId(instanceId);
}
KOALA_INTEROP_DIRECT_V1(SystemOps_syncInstanceId, Ark_Int32)
void impl_SystemOps_restoreInstanceId() {
        GetAccessors()->getSystemOpsAccessor()->restoreInstanceId();
}
KOALA_INTEROP_DIRECT_V0(SystemOps_restoreInstanceId)
Ark_Int32 impl_SystemOps_getResourceId(const KStringPtr& bundleName, const KStringPtr& moduleName, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 params_value_buf_length = thisDeserializer.readInt32();
        Array_String params_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(params_value_buf)>::type,
        std::decay<decltype(*params_value_buf.array)>::type>(&params_value_buf, params_value_buf_length);
        for (int params_value_buf_i = 0; params_value_buf_i < params_value_buf_length; params_value_buf_i++) {
            params_value_buf.array[params_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String params_value = params_value_buf;;
        return GetAccessors()->getSystemOpsAccessor()->getResourceId((const Ark_String*) (&bundleName), (const Ark_String*) (&moduleName), static_cast<Array_String*>(&params_value));
}
KOALA_INTEROP_4(SystemOps_getResourceId, Ark_Int32, KStringPtr, KStringPtr, KSerializerBuffer, int32_t)
void impl_SystemOps_resourceManagerReset() {
        GetAccessors()->getSystemOpsAccessor()->resourceManagerReset();
}
KOALA_INTEROP_DIRECT_V0(SystemOps_resourceManagerReset)
void impl_SystemOps_setFrameCallback(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber delayTime) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Number_Void onFrameCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        Callback_Number_Void onIdleCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetAccessors()->getSystemOpsAccessor()->setFrameCallback(static_cast<Callback_Number_Void*>(&onFrameCallback_value), static_cast<Callback_Number_Void*>(&onIdleCallback_value), (const Ark_Number*) (&delayTime));
}
KOALA_INTEROP_DIRECT_V3(SystemOps_setFrameCallback, KSerializerBuffer, int32_t, KInteropNumber)
KInteropReturnBuffer impl_SystemOps_colorMetricsResourceColor(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Resource color_value = Resource_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getSystemOpsAccessor()->colorMetricsResourceColor(static_cast<Ark_Resource*>(&color_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(SystemOps_colorMetricsResourceColor, KInteropReturnBuffer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TabBarSymbol_construct() {
        return GetAccessors()->getTabBarSymbolAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TabBarSymbol_construct, Ark_NativePointer)
Ark_NativePointer impl_TabBarSymbol_getFinalizer() {
        return GetAccessors()->getTabBarSymbolAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TabBarSymbol_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TabBarSymbol_getNormal(Ark_NativePointer thisPtr) {
        Ark_TabBarSymbol self = reinterpret_cast<Ark_TabBarSymbol>(thisPtr);
        const auto &retValue = GetAccessors()->getTabBarSymbolAccessor()->getNormal(self);
        SerializerBase _retSerializer {};
        SymbolGlyphModifier_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TabBarSymbol_getNormal, KInteropReturnBuffer, Ark_NativePointer)
void impl_TabBarSymbol_setNormal(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabBarSymbol self = reinterpret_cast<Ark_TabBarSymbol>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SymbolGlyphModifier normal_value = SymbolGlyphModifier_serializer::read(thisDeserializer);;
        GetAccessors()->getTabBarSymbolAccessor()->setNormal(self, static_cast<Ark_SymbolGlyphModifier*>(&normal_value));
}
KOALA_INTEROP_DIRECT_V3(TabBarSymbol_setNormal, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TabBarSymbol_getSelected(Ark_NativePointer thisPtr) {
        Ark_TabBarSymbol self = reinterpret_cast<Ark_TabBarSymbol>(thisPtr);
        const auto &retValue = GetAccessors()->getTabBarSymbolAccessor()->getSelected(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            SymbolGlyphModifier_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TabBarSymbol_getSelected, KInteropReturnBuffer, Ark_NativePointer)
void impl_TabBarSymbol_setSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabBarSymbol self = reinterpret_cast<Ark_TabBarSymbol>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto selected_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolGlyphModifier selected_value_buf = {};
        selected_value_buf.tag = selected_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((selected_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            selected_value_buf.value = SymbolGlyphModifier_serializer::read(thisDeserializer);
        }
        Opt_SymbolGlyphModifier selected_value = selected_value_buf;;
        GetAccessors()->getTabBarSymbolAccessor()->setSelected(self, static_cast<Opt_SymbolGlyphModifier*>(&selected_value));
}
KOALA_INTEROP_DIRECT_V3(TabBarSymbol_setSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TabContentTransitionProxy_construct() {
        return GetAccessors()->getTabContentTransitionProxyAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TabContentTransitionProxy_construct, Ark_NativePointer)
Ark_NativePointer impl_TabContentTransitionProxy_getFinalizer() {
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TabContentTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_TabContentTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(TabContentTransitionProxy_finishTransition, Ark_NativePointer)
Ark_Number impl_TabContentTransitionProxy_getFrom(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getFrom(self);
}
KOALA_INTEROP_DIRECT_1(TabContentTransitionProxy_getFrom, KInteropNumber, Ark_NativePointer)
void impl_TabContentTransitionProxy_setFrom(Ark_NativePointer thisPtr, KInteropNumber from) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->setFrom(self, (const Ark_Number*) (&from));
}
KOALA_INTEROP_DIRECT_V2(TabContentTransitionProxy_setFrom, Ark_NativePointer, KInteropNumber)
Ark_Number impl_TabContentTransitionProxy_getTo(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getTo(self);
}
KOALA_INTEROP_DIRECT_1(TabContentTransitionProxy_getTo, KInteropNumber, Ark_NativePointer)
void impl_TabContentTransitionProxy_setTo(Ark_NativePointer thisPtr, KInteropNumber to) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->setTo(self, (const Ark_Number*) (&to));
}
KOALA_INTEROP_DIRECT_V2(TabContentTransitionProxy_setTo, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TabsController_construct() {
        return GetAccessors()->getTabsControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TabsController_construct, Ark_NativePointer)
Ark_NativePointer impl_TabsController_getFinalizer() {
        return GetAccessors()->getTabsControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TabsController_getFinalizer, Ark_NativePointer)
void impl_TabsController_changeIndex(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        GetAccessors()->getTabsControllerAccessor()->changeIndex(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TabsController_changeIndex, Ark_NativePointer, KInteropNumber)
void impl_TabsController_preloadItems(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto indices_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number indices_value_buf = {};
        indices_value_buf.tag = indices_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((indices_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 indices_value_buf__length = thisDeserializer.readInt32();
            Array_Number indices_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(indices_value_buf_)>::type,
        std::decay<decltype(*indices_value_buf_.array)>::type>(&indices_value_buf_, indices_value_buf__length);
            for (int indices_value_buf__i = 0; indices_value_buf__i < indices_value_buf__length; indices_value_buf__i++) {
                indices_value_buf_.array[indices_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            indices_value_buf.value = indices_value_buf_;
        }
        Opt_Array_Number indices_value = indices_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getTabsControllerAccessor()->preloadItems(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Opt_Array_Number*>(&indices_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(TabsController_preloadItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsController_setTabBarTranslate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions translate_value = TranslateOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getTabsControllerAccessor()->setTabBarTranslate(self, static_cast<Ark_TranslateOptions*>(&translate_value));
}
KOALA_INTEROP_DIRECT_V3(TabsController_setTabBarTranslate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsController_setTabBarOpacity(Ark_NativePointer thisPtr, KInteropNumber opacity) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        GetAccessors()->getTabsControllerAccessor()->setTabBarOpacity(self, (const Ark_Number*) (&opacity));
}
KOALA_INTEROP_DIRECT_V2(TabsController_setTabBarOpacity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TapGestureEvent_construct() {
        return GetAccessors()->getTapGestureEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TapGestureEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_TapGestureEvent_getFinalizer() {
        return GetAccessors()->getTapGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapGestureEvent_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TapGestureInterface_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TapGestureParameters value_value = TapGestureParameters_serializer::read(thisDeserializer);;
        return GetAccessors()->getTapGestureInterfaceAccessor()->construct(static_cast<Ark_TapGestureParameters*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(TapGestureInterface_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TapGestureInterface_getFinalizer() {
        return GetAccessors()->getTapGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TapGestureInterface_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TapGestureInterface self = reinterpret_cast<Ark_TapGestureInterface>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getTapGestureInterfaceAccessor()->onAction(self, static_cast<Callback_GestureEvent_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_3(TapGestureInterface_onAction, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TapRecognizer_construct() {
        return GetAccessors()->getTapRecognizerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TapRecognizer_construct, Ark_NativePointer)
Ark_NativePointer impl_TapRecognizer_getFinalizer() {
        return GetAccessors()->getTapRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_TapRecognizer_getTapCount(Ark_NativePointer thisPtr) {
        Ark_TapRecognizer self = reinterpret_cast<Ark_TapRecognizer>(thisPtr);
        return GetAccessors()->getTapRecognizerAccessor()->getTapCount(self);
}
KOALA_INTEROP_DIRECT_1(TapRecognizer_getTapCount, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_text_FontCollection_construct() {
        return GetAccessors()->getText_FontCollectionAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(text_FontCollection_construct, Ark_NativePointer)
Ark_NativePointer impl_text_FontCollection_getFinalizer() {
        return GetAccessors()->getText_FontCollectionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_FontCollection_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_text_FontCollection_getGlobalInstance() {
        return GetAccessors()->getText_FontCollectionAccessor()->getGlobalInstance();
}
KOALA_INTEROP_DIRECT_0(text_FontCollection_getGlobalInstance, Ark_NativePointer)
void impl_text_FontCollection_loadFontSync(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_FontCollection self = reinterpret_cast<Ark_text_FontCollection>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 path_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource path_value_buf = {};
        path_value_buf.selector = path_value_buf_selector;
        if (path_value_buf_selector == 0) {
            path_value_buf.selector = 0;
            path_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (path_value_buf_selector == 1) {
            path_value_buf.selector = 1;
            path_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for path_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource path_value = static_cast<Ark_Union_String_Resource>(path_value_buf);;
        GetAccessors()->getText_FontCollectionAccessor()->loadFontSync(self, (const Ark_String*) (&name), static_cast<Ark_Union_String_Resource*>(&path_value));
}
KOALA_INTEROP_V4(text_FontCollection_loadFontSync, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_text_FontCollection_loadFont(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_FontCollection self = reinterpret_cast<Ark_text_FontCollection>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 path_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource path_value_buf = {};
        path_value_buf.selector = path_value_buf_selector;
        if (path_value_buf_selector == 0) {
            path_value_buf.selector = 0;
            path_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (path_value_buf_selector == 1) {
            path_value_buf.selector = 1;
            path_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for path_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource path_value = static_cast<Ark_Union_String_Resource>(path_value_buf);;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getText_FontCollectionAccessor()->loadFont(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&name), static_cast<Ark_Union_String_Resource*>(&path_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(text_FontCollection_loadFont, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_text_FontCollection_clearCaches(Ark_NativePointer thisPtr) {
        Ark_text_FontCollection self = reinterpret_cast<Ark_text_FontCollection>(thisPtr);
        GetAccessors()->getText_FontCollectionAccessor()->clearCaches(self);
}
KOALA_INTEROP_DIRECT_V1(text_FontCollection_clearCaches, Ark_NativePointer)
Ark_NativePointer impl_text_LineTypeset_construct() {
        return GetAccessors()->getText_LineTypesetAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(text_LineTypeset_construct, Ark_NativePointer)
Ark_NativePointer impl_text_LineTypeset_getFinalizer() {
        return GetAccessors()->getText_LineTypesetAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_LineTypeset_getFinalizer, Ark_NativePointer)
Ark_Number impl_text_LineTypeset_getLineBreak(Ark_NativePointer thisPtr, KInteropNumber startIndex, KInteropNumber width) {
        Ark_text_LineTypeset self = reinterpret_cast<Ark_text_LineTypeset>(thisPtr);
        return GetAccessors()->getText_LineTypesetAccessor()->getLineBreak(self, (const Ark_Number*) (&startIndex), (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_3(text_LineTypeset_getLineBreak, KInteropNumber, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_text_LineTypeset_createLine(Ark_NativePointer thisPtr, KInteropNumber startIndex, KInteropNumber count) {
        Ark_text_LineTypeset self = reinterpret_cast<Ark_text_LineTypeset>(thisPtr);
        return GetAccessors()->getText_LineTypesetAccessor()->createLine(self, (const Ark_Number*) (&startIndex), (const Ark_Number*) (&count));
}
KOALA_INTEROP_DIRECT_3(text_LineTypeset_createLine, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_text_Paragraph_construct() {
        return GetAccessors()->getText_ParagraphAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(text_Paragraph_construct, Ark_NativePointer)
Ark_NativePointer impl_text_Paragraph_getFinalizer() {
        return GetAccessors()->getText_ParagraphAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_Paragraph_getFinalizer, Ark_NativePointer)
void impl_text_Paragraph_layoutSync(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        GetAccessors()->getText_ParagraphAccessor()->layoutSync(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(text_Paragraph_layoutSync, Ark_NativePointer, KInteropNumber)
void impl_text_Paragraph_layout(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber width, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getText_ParagraphAccessor()->layout(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_Number*) (&width), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(text_Paragraph_layout, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_text_Paragraph_paint(Ark_NativePointer thisPtr, Ark_NativePointer canvas, KInteropNumber x, KInteropNumber y) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        GetAccessors()->getText_ParagraphAccessor()->paint(self, static_cast<Ark_drawing_Canvas>(canvas), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V4(text_Paragraph_paint, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_text_Paragraph_paintOnPath(Ark_NativePointer thisPtr, Ark_NativePointer canvas, Ark_NativePointer path, KInteropNumber hOffset, KInteropNumber vOffset) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        GetAccessors()->getText_ParagraphAccessor()->paintOnPath(self, static_cast<Ark_drawing_Canvas>(canvas), static_cast<Ark_drawing_Path>(path), (const Ark_Number*) (&hOffset), (const Ark_Number*) (&vOffset));
}
KOALA_INTEROP_DIRECT_V5(text_Paragraph_paintOnPath, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_Number impl_text_Paragraph_getMaxWidth(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getMaxWidth(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getMaxWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getHeight(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getHeight, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getLongestLine(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getLongestLine(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getLongestLine, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getLongestLineWithIndent(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getLongestLineWithIndent(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getLongestLineWithIndent, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getMinIntrinsicWidth(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getMinIntrinsicWidth(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getMinIntrinsicWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getMaxIntrinsicWidth(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getMaxIntrinsicWidth(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getMaxIntrinsicWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getAlphabeticBaseline(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getAlphabeticBaseline(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getAlphabeticBaseline, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getIdeographicBaseline(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getIdeographicBaseline(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getIdeographicBaseline, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_text_Paragraph_getRectsForRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 widthStyle, Ark_Int32 heightStyle) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_Range range_value = text_Range_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getRectsForRange(self, static_cast<Ark_text_Range*>(&range_value), static_cast<Ark_text_RectWidthStyle>(widthStyle), static_cast<Ark_text_RectHeightStyle>(heightStyle));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_text_TextBox retValue_element = retValue.array[retValue_counter_i];
            text_TextBox_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_5(text_Paragraph_getRectsForRange, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32, Ark_Int32)
KInteropReturnBuffer impl_text_Paragraph_getRectsForPlaceholders(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getRectsForPlaceholders(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_text_TextBox retValue_element = retValue.array[retValue_counter_i];
            text_TextBox_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Paragraph_getRectsForPlaceholders, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Paragraph_getGlyphPositionAtCoordinate(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getGlyphPositionAtCoordinate(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
        SerializerBase _retSerializer {};
        text_PositionWithAffinity_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(text_Paragraph_getGlyphPositionAtCoordinate, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_text_Paragraph_getWordBoundary(Ark_NativePointer thisPtr, KInteropNumber offset) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getWordBoundary(self, (const Ark_Number*) (&offset));
        SerializerBase _retSerializer {};
        text_Range_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(text_Paragraph_getWordBoundary, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_text_Paragraph_getLineCount(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getLineCount(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_getLineCount, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_Paragraph_getLineHeight(Ark_NativePointer thisPtr, KInteropNumber line) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getLineHeight(self, (const Ark_Number*) (&line));
}
KOALA_INTEROP_DIRECT_2(text_Paragraph_getLineHeight, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_text_Paragraph_getLineWidth(Ark_NativePointer thisPtr, KInteropNumber line) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->getLineWidth(self, (const Ark_Number*) (&line));
}
KOALA_INTEROP_DIRECT_2(text_Paragraph_getLineWidth, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Boolean impl_text_Paragraph_didExceedMaxLines(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        return GetAccessors()->getText_ParagraphAccessor()->didExceedMaxLines(self);
}
KOALA_INTEROP_DIRECT_1(text_Paragraph_didExceedMaxLines, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_text_Paragraph_getTextLines(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getTextLines(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_text_TextLine retValue_element = retValue.array[retValue_counter_i];
            text_TextLine_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Paragraph_getTextLines, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Paragraph_getActualTextRange(Ark_NativePointer thisPtr, KInteropNumber lineNumber, Ark_Boolean includeSpaces) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getActualTextRange(self, (const Ark_Number*) (&lineNumber), includeSpaces);
        SerializerBase _retSerializer {};
        text_Range_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(text_Paragraph_getActualTextRange, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, Ark_Boolean)
KInteropReturnBuffer impl_text_Paragraph_getLineMetrics0(Ark_NativePointer thisPtr) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getLineMetrics0(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_text_LineMetrics retValue_element = retValue.array[retValue_counter_i];
            text_LineMetrics_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Paragraph_getLineMetrics0, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Paragraph_getLineMetrics1(Ark_NativePointer thisPtr, KInteropNumber lineNumber) {
        Ark_text_Paragraph self = reinterpret_cast<Ark_text_Paragraph>(thisPtr);
        const auto &retValue = GetAccessors()->getText_ParagraphAccessor()->getLineMetrics1(self, (const Ark_Number*) (&lineNumber));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            text_LineMetrics_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(text_Paragraph_getLineMetrics1, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_text_ParagraphBuilder_construct(KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer fontCollection) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_ParagraphStyle paragraphStyle_value = text_ParagraphStyle_serializer::read(thisDeserializer);;
        return GetAccessors()->getText_ParagraphBuilderAccessor()->construct(static_cast<Ark_text_ParagraphStyle*>(&paragraphStyle_value), static_cast<Ark_text_FontCollection>(fontCollection));
}
KOALA_INTEROP_DIRECT_3(text_ParagraphBuilder_construct, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_NativePointer)
Ark_NativePointer impl_text_ParagraphBuilder_getFinalizer() {
        return GetAccessors()->getText_ParagraphBuilderAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_ParagraphBuilder_getFinalizer, Ark_NativePointer)
void impl_text_ParagraphBuilder_pushStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_TextStyle textStyle_value = text_TextStyle_serializer::read(thisDeserializer);;
        GetAccessors()->getText_ParagraphBuilderAccessor()->pushStyle(self, static_cast<Ark_text_TextStyle*>(&textStyle_value));
}
KOALA_INTEROP_DIRECT_V3(text_ParagraphBuilder_pushStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_text_ParagraphBuilder_popStyle(Ark_NativePointer thisPtr) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        GetAccessors()->getText_ParagraphBuilderAccessor()->popStyle(self);
}
KOALA_INTEROP_DIRECT_V1(text_ParagraphBuilder_popStyle, Ark_NativePointer)
void impl_text_ParagraphBuilder_addText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        GetAccessors()->getText_ParagraphBuilderAccessor()->addText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(text_ParagraphBuilder_addText, Ark_NativePointer, KStringPtr)
void impl_text_ParagraphBuilder_addPlaceholder(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_PlaceholderSpan placeholderSpan_value = text_PlaceholderSpan_serializer::read(thisDeserializer);;
        GetAccessors()->getText_ParagraphBuilderAccessor()->addPlaceholder(self, static_cast<Ark_text_PlaceholderSpan*>(&placeholderSpan_value));
}
KOALA_INTEROP_DIRECT_V3(text_ParagraphBuilder_addPlaceholder, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_text_ParagraphBuilder_build(Ark_NativePointer thisPtr) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        return GetAccessors()->getText_ParagraphBuilderAccessor()->build(self);
}
KOALA_INTEROP_DIRECT_1(text_ParagraphBuilder_build, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_text_ParagraphBuilder_buildLineTypeset(Ark_NativePointer thisPtr) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        return GetAccessors()->getText_ParagraphBuilderAccessor()->buildLineTypeset(self);
}
KOALA_INTEROP_DIRECT_1(text_ParagraphBuilder_buildLineTypeset, Ark_NativePointer, Ark_NativePointer)
void impl_text_ParagraphBuilder_addSymbol(Ark_NativePointer thisPtr, KInteropNumber symbolId) {
        Ark_text_ParagraphBuilder self = reinterpret_cast<Ark_text_ParagraphBuilder>(thisPtr);
        GetAccessors()->getText_ParagraphBuilderAccessor()->addSymbol(self, (const Ark_Number*) (&symbolId));
}
KOALA_INTEROP_DIRECT_V2(text_ParagraphBuilder_addSymbol, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_text_Run_construct() {
        return GetAccessors()->getText_RunAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(text_Run_construct, Ark_NativePointer)
Ark_NativePointer impl_text_Run_getFinalizer() {
        return GetAccessors()->getText_RunAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_Run_getFinalizer, Ark_NativePointer)
Ark_Number impl_text_Run_getGlyphCount(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        return GetAccessors()->getText_RunAccessor()->getGlyphCount(self);
}
KOALA_INTEROP_DIRECT_1(text_Run_getGlyphCount, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_text_Run_getGlyphs0(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getGlyphs0(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getGlyphs0, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Run_getGlyphs1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_Range range_value = text_Range_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getGlyphs1(self, static_cast<Ark_text_Range*>(&range_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(text_Run_getGlyphs1, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_text_Run_getPositions0(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getPositions0(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_common2D_Point retValue_element = retValue.array[retValue_counter_i];
            common2D_Point_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getPositions0, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Run_getPositions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_Range range_value = text_Range_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getPositions1(self, static_cast<Ark_text_Range*>(&range_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_common2D_Point retValue_element = retValue.array[retValue_counter_i];
            common2D_Point_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(text_Run_getPositions1, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_text_Run_getOffsets(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getOffsets(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_common2D_Point retValue_element = retValue.array[retValue_counter_i];
            common2D_Point_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getOffsets, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_text_Run_getFont(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        return GetAccessors()->getText_RunAccessor()->getFont(self);
}
KOALA_INTEROP_DIRECT_1(text_Run_getFont, Ark_NativePointer, Ark_NativePointer)
void impl_text_Run_paint(Ark_NativePointer thisPtr, Ark_NativePointer canvas, KInteropNumber x, KInteropNumber y) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        GetAccessors()->getText_RunAccessor()->paint(self, static_cast<Ark_drawing_Canvas>(canvas), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V4(text_Run_paint, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_text_Run_getStringIndices(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_Range range_value = text_Range_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getStringIndices(self, static_cast<Ark_text_Range*>(&range_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Number retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(text_Run_getStringIndices, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_text_Run_getStringRange(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getStringRange(self);
        SerializerBase _retSerializer {};
        text_Range_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getStringRange, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Run_getTypographicBounds(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getTypographicBounds(self);
        SerializerBase _retSerializer {};
        text_TypographicBounds_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getTypographicBounds, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_Run_getImageBounds(Ark_NativePointer thisPtr) {
        Ark_text_Run self = reinterpret_cast<Ark_text_Run>(thisPtr);
        const auto &retValue = GetAccessors()->getText_RunAccessor()->getImageBounds(self);
        SerializerBase _retSerializer {};
        common2D_Rect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_Run_getImageBounds, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_text_TextLine_construct() {
        return GetAccessors()->getText_TextLineAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(text_TextLine_construct, Ark_NativePointer)
Ark_NativePointer impl_text_TextLine_getFinalizer() {
        return GetAccessors()->getText_TextLineAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(text_TextLine_getFinalizer, Ark_NativePointer)
Ark_Number impl_text_TextLine_getGlyphCount(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        return GetAccessors()->getText_TextLineAccessor()->getGlyphCount(self);
}
KOALA_INTEROP_DIRECT_1(text_TextLine_getGlyphCount, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_text_TextLine_getTextRange(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        const auto &retValue = GetAccessors()->getText_TextLineAccessor()->getTextRange(self);
        SerializerBase _retSerializer {};
        text_Range_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_TextLine_getTextRange, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_TextLine_getGlyphRuns(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        const auto &retValue = GetAccessors()->getText_TextLineAccessor()->getGlyphRuns(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_text_Run retValue_element = retValue.array[retValue_counter_i];
            text_Run_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_TextLine_getGlyphRuns, KInteropReturnBuffer, Ark_NativePointer)
void impl_text_TextLine_paint(Ark_NativePointer thisPtr, Ark_NativePointer canvas, KInteropNumber x, KInteropNumber y) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        GetAccessors()->getText_TextLineAccessor()->paint(self, static_cast<Ark_drawing_Canvas>(canvas), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V4(text_TextLine_paint, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_text_TextLine_createTruncatedLine(Ark_NativePointer thisPtr, KInteropNumber width, Ark_Int32 ellipsisMode, const KStringPtr& ellipsis) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        return GetAccessors()->getText_TextLineAccessor()->createTruncatedLine(self, (const Ark_Number*) (&width), static_cast<Ark_text_EllipsisMode>(ellipsisMode), (const Ark_String*) (&ellipsis));
}
KOALA_INTEROP_4(text_TextLine_createTruncatedLine, Ark_NativePointer, Ark_NativePointer, KInteropNumber, Ark_Int32, KStringPtr)
KInteropReturnBuffer impl_text_TextLine_getTypographicBounds(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        const auto &retValue = GetAccessors()->getText_TextLineAccessor()->getTypographicBounds(self);
        SerializerBase _retSerializer {};
        text_TypographicBounds_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_TextLine_getTypographicBounds, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_text_TextLine_getImageBounds(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        const auto &retValue = GetAccessors()->getText_TextLineAccessor()->getImageBounds(self);
        SerializerBase _retSerializer {};
        common2D_Rect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(text_TextLine_getImageBounds, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_text_TextLine_getTrailingSpaceWidth(Ark_NativePointer thisPtr) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        return GetAccessors()->getText_TextLineAccessor()->getTrailingSpaceWidth(self);
}
KOALA_INTEROP_DIRECT_1(text_TextLine_getTrailingSpaceWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_text_TextLine_getStringIndexForPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_common2D_Point point_value = common2D_Point_serializer::read(thisDeserializer);;
        return GetAccessors()->getText_TextLineAccessor()->getStringIndexForPosition(self, static_cast<Ark_common2D_Point*>(&point_value));
}
KOALA_INTEROP_DIRECT_3(text_TextLine_getStringIndexForPosition, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_text_TextLine_getOffsetForStringIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        return GetAccessors()->getText_TextLineAccessor()->getOffsetForStringIndex(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_2(text_TextLine_getOffsetForStringIndex, KInteropNumber, Ark_NativePointer, KInteropNumber)
void impl_text_TextLine_enumerateCaretOffsets(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        text_Callback_Number_Number_Boolean_Boolean callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, const Ark_Number index, const Ark_Boolean leadingEdge, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Boolean_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, const Ark_Number index, const Ark_Boolean leadingEdge, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Boolean_Boolean))))};;
        GetAccessors()->getText_TextLineAccessor()->enumerateCaretOffsets(self, static_cast<text_Callback_Number_Number_Boolean_Boolean*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(text_TextLine_enumerateCaretOffsets, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_text_TextLine_getAlignmentOffset(Ark_NativePointer thisPtr, KInteropNumber alignmentFactor, KInteropNumber alignmentWidth) {
        Ark_text_TextLine self = reinterpret_cast<Ark_text_TextLine>(thisPtr);
        return GetAccessors()->getText_TextLineAccessor()->getAlignmentOffset(self, (const Ark_Number*) (&alignmentFactor), (const Ark_Number*) (&alignmentWidth));
}
KOALA_INTEROP_DIRECT_3(text_TextLine_getAlignmentOffset, KInteropNumber, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_TextAreaController_construct() {
        return GetAccessors()->getTextAreaControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextAreaController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextAreaController_getFinalizer() {
        return GetAccessors()->getTextAreaControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextAreaController_getFinalizer, Ark_NativePointer)
void impl_TextAreaController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        GetAccessors()->getTextAreaControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TextAreaController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_TextAreaController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextAreaControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), static_cast<Opt_SelectionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V5(TextAreaController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextAreaController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        GetAccessors()->getTextAreaControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextAreaController_stopEditing, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_construct() {
        return GetAccessors()->getTextBaseControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextBaseController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_getFinalizer() {
        return GetAccessors()->getTextBaseControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextBaseController_getFinalizer, Ark_NativePointer)
void impl_TextBaseController_setSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextBaseControllerAccessor()->setSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), static_cast<Opt_SelectionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V5(TextBaseController_setSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextBaseController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        GetAccessors()->getTextBaseControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(TextBaseController_closeSelectionMenu, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        return GetAccessors()->getTextBaseControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(TextBaseController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextClockController_construct() {
        return GetAccessors()->getTextClockControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextClockController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextClockController_getFinalizer() {
        return GetAccessors()->getTextClockControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextClockController_getFinalizer, Ark_NativePointer)
void impl_TextClockController_start(Ark_NativePointer thisPtr) {
        Ark_TextClockController self = reinterpret_cast<Ark_TextClockController>(thisPtr);
        GetAccessors()->getTextClockControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(TextClockController_start, Ark_NativePointer)
void impl_TextClockController_stop(Ark_NativePointer thisPtr) {
        Ark_TextClockController self = reinterpret_cast<Ark_TextClockController>(thisPtr);
        GetAccessors()->getTextClockControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(TextClockController_stop, Ark_NativePointer)
Ark_NativePointer impl_TextContentControllerBase_construct() {
        return GetAccessors()->getTextContentControllerBaseAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextContentControllerBase_construct, Ark_NativePointer)
Ark_NativePointer impl_TextContentControllerBase_getFinalizer() {
        return GetAccessors()->getTextContentControllerBaseAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextContentControllerBase_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextContentControllerBase_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getCaretOffset(self);
        SerializerBase _retSerializer {};
        CaretOffset_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getCaretOffset, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextContentControllerBase_getTextContentRect(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getTextContentRect(self);
        SerializerBase _retSerializer {};
        RectResult_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getTextContentRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_TextContentControllerBase_getTextContentLineCount(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        return GetAccessors()->getTextContentControllerBaseAccessor()->getTextContentLineCount(self);
}
KOALA_INTEROP_DIRECT_1(TextContentControllerBase_getTextContentLineCount, KInteropNumber, Ark_NativePointer)
Ark_Number impl_TextContentControllerBase_addText(Ark_NativePointer thisPtr, const KStringPtr& text, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto textOperationOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextContentControllerOptions textOperationOptions_value_buf = {};
        textOperationOptions_value_buf.tag = textOperationOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((textOperationOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            textOperationOptions_value_buf.value = TextContentControllerOptions_serializer::read(thisDeserializer);
        }
        Opt_TextContentControllerOptions textOperationOptions_value = textOperationOptions_value_buf;;
        return GetAccessors()->getTextContentControllerBaseAccessor()->addText(self, (const Ark_String*) (&text), static_cast<Opt_TextContentControllerOptions*>(&textOperationOptions_value));
}
KOALA_INTEROP_4(TextContentControllerBase_addText, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_TextContentControllerBase_deleteText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto range_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextRange range_value_buf = {};
        range_value_buf.tag = range_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((range_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            range_value_buf.value = TextRange_serializer::read(thisDeserializer);
        }
        Opt_TextRange range_value = range_value_buf;;
        GetAccessors()->getTextContentControllerBaseAccessor()->deleteText(self, static_cast<Opt_TextRange*>(&range_value));
}
KOALA_INTEROP_DIRECT_V3(TextContentControllerBase_deleteText, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TextContentControllerBase_getSelection(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getSelection(self);
        SerializerBase _retSerializer {};
        TextRange_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getSelection, KInteropReturnBuffer, Ark_NativePointer)
void impl_TextContentControllerBase_clearPreviewText(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        GetAccessors()->getTextContentControllerBaseAccessor()->clearPreviewText(self);
}
KOALA_INTEROP_DIRECT_V1(TextContentControllerBase_clearPreviewText, Ark_NativePointer)
Ark_String impl_TextContentControllerBase_getText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto range_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextRange range_value_buf = {};
        range_value_buf.tag = range_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((range_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            range_value_buf.value = TextRange_serializer::read(thisDeserializer);
        }
        Opt_TextRange range_value = range_value_buf;;
        return GetAccessors()->getTextContentControllerBaseAccessor()->getText(self, static_cast<Opt_TextRange*>(&range_value));
}
KOALA_INTEROP_3(TextContentControllerBase_getText, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextController_construct() {
        return GetAccessors()->getTextControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextController_getFinalizer() {
        return GetAccessors()->getTextControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextController_getFinalizer, Ark_NativePointer)
void impl_TextController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        GetAccessors()->getTextControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(TextController_closeSelectionMenu, Ark_NativePointer)
void impl_TextController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        GetAccessors()->getTextControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(value));
}
KOALA_INTEROP_DIRECT_V2(TextController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        return GetAccessors()->getTextControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(TextController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextEditControllerEx_construct() {
        return GetAccessors()->getTextEditControllerExAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextEditControllerEx_construct, Ark_NativePointer)
Ark_NativePointer impl_TextEditControllerEx_getFinalizer() {
        return GetAccessors()->getTextEditControllerExAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextEditControllerEx_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_TextEditControllerEx_isEditing(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->isEditing(self);
}
KOALA_INTEROP_DIRECT_1(TextEditControllerEx_isEditing, Ark_Boolean, Ark_NativePointer)
void impl_TextEditControllerEx_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        GetAccessors()->getTextEditControllerExAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextEditControllerEx_stopEditing, Ark_NativePointer)
Ark_Boolean impl_TextEditControllerEx_setCaretOffset(Ark_NativePointer thisPtr, KInteropNumber offset) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->setCaretOffset(self, (const Ark_Number*) (&offset));
}
KOALA_INTEROP_DIRECT_2(TextEditControllerEx_setCaretOffset, Ark_Boolean, Ark_NativePointer, KInteropNumber)
Ark_Number impl_TextEditControllerEx_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->getCaretOffset(self);
}
KOALA_INTEROP_DIRECT_1(TextEditControllerEx_getCaretOffset, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_TextEditControllerEx_getPreviewText(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        const auto &retValue = GetAccessors()->getTextEditControllerExAccessor()->getPreviewText(self);
        SerializerBase _retSerializer {};
        PreviewText_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextEditControllerEx_getPreviewText, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_TextFieldOps_registerTextFieldValueCallback(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr value_value = static_cast<Ark_ResourceStr>(value_value_buf);;
        TextFieldValueCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextFieldValueCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextFieldValueCallback))))};;
        return GetAccessors()->getTextFieldOpsAccessor()->registerTextFieldValueCallback(node, static_cast<Ark_ResourceStr*>(&value_value), static_cast<TextFieldValueCallback*>(&callback_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_registerTextFieldValueCallback, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetWidth(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LayoutPolicy>(LayoutPolicy_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetWidth(node, static_cast<Opt_Union_Length_LayoutPolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetHeight(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LayoutPolicy>(LayoutPolicy_serializer::read(thisDeserializer));
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetHeight(node, static_cast<Opt_Union_Length_LayoutPolicy*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetHeight, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetPadding(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Padding_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedPadding_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetPadding(node, static_cast<Opt_Union_Padding_Length_LocalizedPadding*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetPadding, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetMargin(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = Padding_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedPadding_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetMargin(node, static_cast<Opt_Union_Padding_Length_LocalizedPadding*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetMargin, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorder(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = BorderOptions_serializer::read(thisDeserializer);
        }
        Opt_BorderOptions value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorder(node, static_cast<Opt_BorderOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorder, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderWidth(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeWidths_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdgeWidths_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths>(value_value_buf_);
        }
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderWidth(node, static_cast<Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderColor(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeColors_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedEdgeColors_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderColor(node, static_cast<Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderColor, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderStyle(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BorderStyle_EdgeStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BorderStyle_EdgeStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_BorderStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = EdgeStyles_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_BorderStyle_EdgeStyles>(value_value_buf_);
        }
        Opt_Union_BorderStyle_EdgeStyles value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderStyle(node, static_cast<Opt_Union_BorderStyle_EdgeStyles*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderStyle, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderRadius(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_Length value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = Resource_serializer::read(thisDeserializer);
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_Length>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = BorderRadiuses_serializer::read(thisDeserializer);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = LocalizedBorderRadiuses_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderRadius(node, static_cast<Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderRadius, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBackgroundColor(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = Resource_serializer::read(thisDeserializer);
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBackgroundColor(node, static_cast<Opt_ResourceColor*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBackgroundColor, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextInputController_construct() {
        return GetAccessors()->getTextInputControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextInputController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextInputController_getFinalizer() {
        return GetAccessors()->getTextInputControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextInputController_getFinalizer, Ark_NativePointer)
void impl_TextInputController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        GetAccessors()->getTextInputControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TextInputController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_TextInputController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((options_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            options_value_buf.value = SelectionOptions_serializer::read(thisDeserializer);
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextInputControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), static_cast<Opt_SelectionOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V5(TextInputController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextInputController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        GetAccessors()->getTextInputControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextInputController_stopEditing, Ark_NativePointer)
Ark_NativePointer impl_TextMenuController_construct() {
        return GetAccessors()->getTextMenuControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextMenuController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextMenuController_getFinalizer() {
        return GetAccessors()->getTextMenuControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextMenuController_getFinalizer, Ark_NativePointer)
void impl_TextMenuController_setMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextMenuController self = reinterpret_cast<Ark_TextMenuController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TextMenuOptions options_value = TextMenuOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getTextMenuControllerAccessor()->setMenuOptions(self, static_cast<Ark_TextMenuOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(TextMenuController_setMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextMenuItemId_construct() {
        return GetAccessors()->getTextMenuItemIdAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_construct, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getFinalizer() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_of(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 id_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr id_value_buf = {};
        id_value_buf.selector = id_value_buf_selector;
        if (id_value_buf_selector == 0) {
            id_value_buf.selector = 0;
            id_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (id_value_buf_selector == 1) {
            id_value_buf.selector = 1;
            id_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for id_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr id_value = static_cast<Ark_ResourceStr>(id_value_buf);;
        return GetAccessors()->getTextMenuItemIdAccessor()->of(static_cast<Ark_ResourceStr*>(&id_value));
}
KOALA_INTEROP_DIRECT_2(TextMenuItemId_of, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_TextMenuItemId_equals(Ark_NativePointer thisPtr, Ark_NativePointer id) {
        Ark_TextMenuItemId self = reinterpret_cast<Ark_TextMenuItemId>(thisPtr);
        return GetAccessors()->getTextMenuItemIdAccessor()->equals(self, static_cast<Ark_TextMenuItemId>(id));
}
KOALA_INTEROP_DIRECT_2(TextMenuItemId_equals, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCUT() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCUT();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCUT, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCOPY() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCOPY();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCOPY, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getPASTE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getPASTE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getPASTE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSELECT_ALL() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSELECT_ALL();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSELECT_ALL, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCOLLABORATION_SERVICE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCOLLABORATION_SERVICE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCOLLABORATION_SERVICE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCAMERA_INPUT() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCAMERA_INPUT();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCAMERA_INPUT, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getAI_WRITER() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getAI_WRITER();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getAI_WRITER, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getTRANSLATE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getTRANSLATE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getTRANSLATE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSEARCH() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSEARCH();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSEARCH, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSHARE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSHARE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSHARE, Ark_NativePointer)
Ark_NativePointer impl_TextPickerDialog_construct() {
        return GetAccessors()->getTextPickerDialogAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextPickerDialog_construct, Ark_NativePointer)
Ark_NativePointer impl_TextPickerDialog_getFinalizer() {
        return GetAccessors()->getTextPickerDialogAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextPickerDialog_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TextShadowStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = ShadowOptions_serializer::read(thisDeserializer);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            const Ark_Int32 value_value_buf_u_length = thisDeserializer.readInt32();
            Array_ShadowOptions value_value_buf_u = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_u)>::type,
        std::decay<decltype(*value_value_buf_u.array)>::type>(&value_value_buf_u, value_value_buf_u_length);
            for (int value_value_buf_u_i = 0; value_value_buf_u_i < value_value_buf_u_length; value_value_buf_u_i++) {
                value_value_buf_u.array[value_value_buf_u_i] = ShadowOptions_serializer::read(thisDeserializer);
            }
            value_value_buf.value1 = value_value_buf_u;
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ShadowOptions_Array_ShadowOptions value_value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf);;
        return GetAccessors()->getTextShadowStyleAccessor()->construct(static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(TextShadowStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextShadowStyle_getFinalizer() {
        return GetAccessors()->getTextShadowStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextShadowStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextShadowStyle_getTextShadow(Ark_NativePointer thisPtr) {
        Ark_TextShadowStyle self = reinterpret_cast<Ark_TextShadowStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextShadowStyleAccessor()->getTextShadow(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_ShadowOptions retValue_element = retValue.array[retValue_counter_i];
            ShadowOptions_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextShadowStyle_getTextShadow, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_TextStyle_construct(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((value_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            value_value_buf.value = TextStyleInterface_serializer::read(thisDeserializer);
        }
        Opt_TextStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getTextStyleAccessor()->construct(static_cast<Opt_TextStyleInterface*>(&value_value));
}
KOALA_INTEROP_DIRECT_2(TextStyle_construct, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextStyle_getFinalizer() {
        return GetAccessors()->getTextStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_getFontColor(Ark_NativePointer thisPtr) {
        Ark_TextStyle self = reinterpret_cast<Ark_TextStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyleAccessor()->getFontColor(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeInt32(static_cast<Ark_Color>(retValue_value_0));
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeString(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                Resource_serializer::write(_retSerializer, retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_getFontColor, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_getFontFamily(Ark_NativePointer thisPtr) {
        Ark_TextStyle self = reinterpret_cast<Ark_TextStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyleAccessor()->getFontFamily(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeString(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_getFontFamily, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_getFontSize(Ark_NativePointer thisPtr) {
        Ark_TextStyle self = reinterpret_cast<Ark_TextStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyleAccessor()->getFontSize(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_getFontSize, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_getFontWeight(Ark_NativePointer thisPtr) {
        Ark_TextStyle self = reinterpret_cast<Ark_TextStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyleAccessor()->getFontWeight(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_getFontWeight, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_getFontStyle(Ark_NativePointer thisPtr) {
        Ark_TextStyle self = reinterpret_cast<Ark_TextStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyleAccessor()->getFontStyle(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_FontStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_getFontStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_TextTimerController_construct() {
        return GetAccessors()->getTextTimerControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TextTimerController_construct, Ark_NativePointer)
Ark_NativePointer impl_TextTimerController_getFinalizer() {
        return GetAccessors()->getTextTimerControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextTimerController_getFinalizer, Ark_NativePointer)
void impl_TextTimerController_start(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_start, Ark_NativePointer)
void impl_TextTimerController_pause(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_pause, Ark_NativePointer)
void impl_TextTimerController_reset(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_reset, Ark_NativePointer)
Ark_NativePointer impl_ThemeControl_construct() {
        return GetAccessors()->getThemeControlAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(ThemeControl_construct, Ark_NativePointer)
Ark_NativePointer impl_ThemeControl_getFinalizer() {
        return GetAccessors()->getThemeControlAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ThemeControl_getFinalizer, Ark_NativePointer)
void impl_ThemeControl_setDefaultTheme(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomTheme theme_value = CustomTheme_serializer::read(thisDeserializer);;
        GetAccessors()->getThemeControlAccessor()->setDefaultTheme(static_cast<Ark_CustomTheme*>(&theme_value));
}
KOALA_INTEROP_DIRECT_V2(ThemeControl_setDefaultTheme, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TimePickerDialog_construct() {
        return GetAccessors()->getTimePickerDialogAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TimePickerDialog_construct, Ark_NativePointer)
Ark_NativePointer impl_TimePickerDialog_getFinalizer() {
        return GetAccessors()->getTimePickerDialogAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TimePickerDialog_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TouchEvent_construct() {
        return GetAccessors()->getTouchEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(TouchEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_TouchEvent_getFinalizer() {
        return GetAccessors()->getTouchEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TouchEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TouchEvent_getHistoricalPoints(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getHistoricalPoints(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_HistoricalPoint retValue_element = retValue.array[retValue_counter_i];
            HistoricalPoint_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getHistoricalPoints, KInteropReturnBuffer, Ark_NativePointer)
Ark_Int32 impl_TouchEvent_getType(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        return GetAccessors()->getTouchEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(TouchEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_TouchEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        GetAccessors()->getTouchEventAccessor()->setType(self, static_cast<Ark_TouchType>(type));
}
KOALA_INTEROP_DIRECT_V2(TouchEvent_setType, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_TouchEvent_getTouches(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getTouches(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_TouchObject retValue_element = retValue.array[retValue_counter_i];
            TouchObject_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getTouches, KInteropReturnBuffer, Ark_NativePointer)
void impl_TouchEvent_setTouches(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 touches_value_buf_length = thisDeserializer.readInt32();
        Array_TouchObject touches_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(touches_value_buf)>::type,
        std::decay<decltype(*touches_value_buf.array)>::type>(&touches_value_buf, touches_value_buf_length);
        for (int touches_value_buf_i = 0; touches_value_buf_i < touches_value_buf_length; touches_value_buf_i++) {
            touches_value_buf.array[touches_value_buf_i] = TouchObject_serializer::read(thisDeserializer);
        }
        Array_TouchObject touches_value = touches_value_buf;;
        GetAccessors()->getTouchEventAccessor()->setTouches(self, static_cast<Array_TouchObject*>(&touches_value));
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setTouches, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TouchEvent_getChangedTouches(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getChangedTouches(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_TouchObject retValue_element = retValue.array[retValue_counter_i];
            TouchObject_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getChangedTouches, KInteropReturnBuffer, Ark_NativePointer)
void impl_TouchEvent_setChangedTouches(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 changedTouches_value_buf_length = thisDeserializer.readInt32();
        Array_TouchObject changedTouches_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(changedTouches_value_buf)>::type,
        std::decay<decltype(*changedTouches_value_buf.array)>::type>(&changedTouches_value_buf, changedTouches_value_buf_length);
        for (int changedTouches_value_buf_i = 0; changedTouches_value_buf_i < changedTouches_value_buf_length; changedTouches_value_buf_i++) {
            changedTouches_value_buf.array[changedTouches_value_buf_i] = TouchObject_serializer::read(thisDeserializer);
        }
        Array_TouchObject changedTouches_value = changedTouches_value_buf;;
        GetAccessors()->getTouchEventAccessor()->setChangedTouches(self, static_cast<Array_TouchObject*>(&changedTouches_value));
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setChangedTouches, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TouchEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getTouchEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(TouchEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_TouchEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getTouchEventAccessor()->setStopPropagation(self, static_cast<Callback_Void*>(&stopPropagation_value));
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TouchEvent_getPreventDefault(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getTouchEventAccessor()->getPreventDefault(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(TouchEvent_getPreventDefault, Ark_NativePointer, Ark_NativePointer)
void impl_TouchEvent_setPreventDefault(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void preventDefault_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getTouchEventAccessor()->setPreventDefault(self, static_cast<Callback_Void*>(&preventDefault_value));
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setPreventDefault, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_construct0(const KStringPtr& type) {
        return GetAccessors()->getTransitionEffectAccessor()->construct0((const Ark_String*) (&type));
}
KOALA_INTEROP_1(TransitionEffect_construct0, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_TransitionEffect_construct1(KInteropNumber effect) {
        return GetAccessors()->getTransitionEffectAccessor()->construct1((const Ark_Number*) (&effect));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_construct1, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TransitionEffect_construct2(Ark_Int32 effect) {
        return GetAccessors()->getTransitionEffectAccessor()->construct2(static_cast<Ark_TransitionEdge>(effect));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_construct2, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_TransitionEffect_construct3(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions effect_value = TranslateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->construct3(static_cast<Ark_TranslateOptions*>(&effect_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_construct3, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_construct4(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RotateOptions effect_value = RotateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->construct4(static_cast<Ark_RotateOptions*>(&effect_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_construct4, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_construct5(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScaleOptions effect_value = ScaleOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->construct5(static_cast<Ark_ScaleOptions*>(&effect_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_construct5, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_construct6(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AsymmetricTransitionOption effect_value = AsymmetricTransitionOption_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->construct6(static_cast<Ark_AsymmetricTransitionOption*>(&effect_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_construct6, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_getFinalizer() {
        return GetAccessors()->getTransitionEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_translate(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions options_value = TranslateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->translate(static_cast<Ark_TranslateOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_translate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_rotate(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_RotateOptions options_value = RotateOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->rotate(static_cast<Ark_RotateOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_rotate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_scale(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ScaleOptions options_value = ScaleOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->scale(static_cast<Ark_ScaleOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_scale, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_opacity(KInteropNumber alpha) {
        return GetAccessors()->getTransitionEffectAccessor()->opacity((const Ark_Number*) (&alpha));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_opacity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TransitionEffect_move(Ark_Int32 edge) {
        return GetAccessors()->getTransitionEffectAccessor()->move(static_cast<Ark_TransitionEdge>(edge));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_move, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_TransitionEffect_asymmetric(Ark_NativePointer appear, Ark_NativePointer disappear) {
        return GetAccessors()->getTransitionEffectAccessor()->asymmetric(static_cast<Ark_TransitionEffect>(appear), static_cast<Ark_TransitionEffect>(disappear));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_asymmetric, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_animation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = AnimateParam_serializer::read(thisDeserializer);;
        return GetAccessors()->getTransitionEffectAccessor()->animation(self, static_cast<Ark_AnimateParam*>(&value_value));
}
KOALA_INTEROP_DIRECT_3(TransitionEffect_animation, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_combine(Ark_NativePointer thisPtr, Ark_NativePointer transitionEffect) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->combine(self, static_cast<Ark_TransitionEffect>(transitionEffect));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_combine, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getIDENTITY(Ark_NativePointer thisPtr) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->getIDENTITY(self);
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_getIDENTITY, Ark_NativePointer, Ark_NativePointer)
void impl_TransitionEffect_setIDENTITY(Ark_NativePointer thisPtr, Ark_NativePointer IDENTITY) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        GetAccessors()->getTransitionEffectAccessor()->setIDENTITY(self, static_cast<Ark_TransitionEffect>(IDENTITY));
}
KOALA_INTEROP_DIRECT_V2(TransitionEffect_setIDENTITY, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getOPACITY(Ark_NativePointer thisPtr) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->getOPACITY(self);
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_getOPACITY, Ark_NativePointer, Ark_NativePointer)
void impl_TransitionEffect_setOPACITY(Ark_NativePointer thisPtr, Ark_NativePointer OPACITY) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        GetAccessors()->getTransitionEffectAccessor()->setOPACITY(self, static_cast<Ark_TransitionEffect>(OPACITY));
}
KOALA_INTEROP_DIRECT_V2(TransitionEffect_setOPACITY, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getSLIDE(Ark_NativePointer thisPtr) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->getSLIDE(self);
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_getSLIDE, Ark_NativePointer, Ark_NativePointer)
void impl_TransitionEffect_setSLIDE(Ark_NativePointer thisPtr, Ark_NativePointer SLIDE) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        GetAccessors()->getTransitionEffectAccessor()->setSLIDE(self, static_cast<Ark_TransitionEffect>(SLIDE));
}
KOALA_INTEROP_DIRECT_V2(TransitionEffect_setSLIDE, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getSLIDE_SWITCH(Ark_NativePointer thisPtr) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->getSLIDE_SWITCH(self);
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_getSLIDE_SWITCH, Ark_NativePointer, Ark_NativePointer)
void impl_TransitionEffect_setSLIDE_SWITCH(Ark_NativePointer thisPtr, Ark_NativePointer SLIDE_SWITCH) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        GetAccessors()->getTransitionEffectAccessor()->setSLIDE_SWITCH(self, static_cast<Ark_TransitionEffect>(SLIDE_SWITCH));
}
KOALA_INTEROP_DIRECT_V2(TransitionEffect_setSLIDE_SWITCH, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_UICommonEvent_construct() {
        return GetAccessors()->getUICommonEventAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(UICommonEvent_construct, Ark_NativePointer)
Ark_NativePointer impl_UICommonEvent_getFinalizer() {
        return GetAccessors()->getUICommonEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UICommonEvent_getFinalizer, Ark_NativePointer)
void impl_UICommonEvent_setOnClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnClick(self, static_cast<Opt_Callback_ClickEvent_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnClick, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_Void))))};
        }
        Opt_Callback_TouchEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnTouch(self, static_cast<Opt_Callback_TouchEvent_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnAppear(self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnDisappear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnDisappear(self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnDisappear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnKeyEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Void))))};
        }
        Opt_Callback_KeyEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnKeyEvent(self, static_cast<Opt_Callback_KeyEvent_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnKeyEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnFocus(self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnBlur(self, static_cast<Opt_Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HoverCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_HoverCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_HoverCallback))))};
        }
        Opt_HoverCallback callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnHover(self, static_cast<Opt_HoverCallback*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnMouse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MouseEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MouseEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MouseEvent_Void))))};
        }
        Opt_Callback_MouseEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnMouse(self, static_cast<Opt_Callback_MouseEvent_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnMouse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnSizeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeChangeCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SizeChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SizeChangeCallback))))};
        }
        Opt_SizeChangeCallback callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnSizeChange(self, static_cast<Opt_SizeChangeCallback*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnSizeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnVisibleAreaApproximateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_VisibleAreaEventOptions options_value = VisibleAreaEventOptions_serializer::read(thisDeserializer);;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((event_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnVisibleAreaApproximateChange(self, static_cast<Ark_VisibleAreaEventOptions*>(&options_value), static_cast<Opt_VisibleAreaChangeCallback*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnVisibleAreaApproximateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_UIContext_construct() {
        return GetAccessors()->getUIContextAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(UIContext_construct, Ark_NativePointer)
Ark_NativePointer impl_UIContext_getFinalizer() {
        return GetAccessors()->getUIContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UIContext_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_UIContext_getFont(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->getFont(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_getFont, Ark_NativePointer, Ark_NativePointer)
Ark_String impl_UIContext_getFilteredInspectorTree(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto filters_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_String filters_value_buf = {};
        filters_value_buf.tag = filters_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((filters_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 filters_value_buf__length = thisDeserializer.readInt32();
            Array_String filters_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(filters_value_buf_)>::type,
        std::decay<decltype(*filters_value_buf_.array)>::type>(&filters_value_buf_, filters_value_buf__length);
            for (int filters_value_buf__i = 0; filters_value_buf__i < filters_value_buf__length; filters_value_buf__i++) {
                filters_value_buf_.array[filters_value_buf__i] = static_cast<Ark_String>(thisDeserializer.readString());
            }
            filters_value_buf.value = filters_value_buf_;
        }
        Opt_Array_String filters_value = filters_value_buf;;
        return GetAccessors()->getUIContextAccessor()->getFilteredInspectorTree(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Opt_Array_String*>(&filters_value));
}
KOALA_INTEROP_CTX_3(UIContext_getFilteredInspectorTree, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_UIContext_getFilteredInspectorTreeById(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& id, KInteropNumber depth, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto filters_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_String filters_value_buf = {};
        filters_value_buf.tag = filters_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((filters_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 filters_value_buf__length = thisDeserializer.readInt32();
            Array_String filters_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(filters_value_buf_)>::type,
        std::decay<decltype(*filters_value_buf_.array)>::type>(&filters_value_buf_, filters_value_buf__length);
            for (int filters_value_buf__i = 0; filters_value_buf__i < filters_value_buf__length; filters_value_buf__i++) {
                filters_value_buf_.array[filters_value_buf__i] = static_cast<Ark_String>(thisDeserializer.readString());
            }
            filters_value_buf.value = filters_value_buf_;
        }
        Opt_Array_String filters_value = filters_value_buf;;
        return GetAccessors()->getUIContextAccessor()->getFilteredInspectorTreeById(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&id), (const Ark_Number*) (&depth), static_cast<Opt_Array_String*>(&filters_value));
}
KOALA_INTEROP_CTX_5(UIContext_getFilteredInspectorTreeById, KStringPtr, Ark_NativePointer, KStringPtr, KInteropNumber, KSerializerBuffer, int32_t)
void impl_UIContext_animateTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = AnimateParam_serializer::read(thisDeserializer);;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->animateTo(self, static_cast<Ark_AnimateParam*>(&value_value), static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(UIContext_animateTo, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_showTextPickerDialog(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_TextPickerDialogOptions options_value = TextPickerDialogOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getUIContextAccessor()->showTextPickerDialog(self, static_cast<Ark_TextPickerDialogOptions*>(&options_value));
}
KOALA_INTEROP_DIRECT_V3(UIContext_showTextPickerDialog, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_runScopedTask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->runScopedTask(self, static_cast<Callback_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UIContext_runScopedTask, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_animateToImmediately(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam param_value = AnimateParam_serializer::read(thisDeserializer);;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->animateToImmediately(self, static_cast<Ark_AnimateParam*>(&param_value), static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V3(UIContext_animateToImmediately, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_UIContext_getFrameNodeById(Ark_NativePointer thisPtr, const KStringPtr& id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getFrameNodeById(self, (const Ark_String*) (&id));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            FrameNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getFrameNodeById, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_UIContext_getAttachedFrameNodeById(Ark_NativePointer thisPtr, const KStringPtr& id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getAttachedFrameNodeById(self, (const Ark_String*) (&id));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            FrameNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getAttachedFrameNodeById, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_UIContext_getFrameNodeByUniqueId(Ark_NativePointer thisPtr, KInteropNumber id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getFrameNodeByUniqueId(self, (const Ark_Number*) (&id));
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            FrameNode_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getFrameNodeByUniqueId, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_vp2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->vp2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_vp2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2vp(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2vp(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2vp, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_fp2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->fp2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_fp2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2fp(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2fp(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2fp, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_lpx2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->lpx2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_lpx2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2lpx(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2lpx(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2lpx, KInteropNumber, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_UIContext_getHostContext(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getHostContext(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            common_Context_serializer::write(_retSerializer, retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UIContext_getHostContext, KInteropReturnBuffer, Ark_NativePointer)
void impl_UIContext_setDynamicDimming(Ark_NativePointer thisPtr, const KStringPtr& id, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        GetAccessors()->getUIContextAccessor()->setDynamicDimming(self, (const Ark_String*) (&id), (const Ark_Number*) (&value));
}
KOALA_INTEROP_V3(UIContext_setDynamicDimming, Ark_NativePointer, KStringPtr, KInteropNumber)
KInteropReturnBuffer impl_UIContext_getWindowName(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getWindowName(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeString(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UIContext_getWindowName, KInteropReturnBuffer, Ark_NativePointer)
Ark_Int32 impl_UIContext_getWindowWidthBreakpoint(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->getWindowWidthBreakpoint(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_getWindowWidthBreakpoint, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_UIContext_getWindowHeightBreakpoint(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->getWindowHeightBreakpoint(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_getWindowHeightBreakpoint, Ark_Int32, Ark_NativePointer)
void impl_UIContext_openBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto sheetOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SheetOptions sheetOptions_value_buf = {};
        sheetOptions_value_buf.tag = sheetOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sheetOptions_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            sheetOptions_value_buf.value = SheetOptions_serializer::read(thisDeserializer);
        }
        Opt_SheetOptions sheetOptions_value = sheetOptions_value_buf;;
        const auto targetId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number targetId_value_buf = {};
        targetId_value_buf.tag = targetId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((targetId_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            targetId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number targetId_value = targetId_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getUIContextAccessor()->openBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(bindSheetContent), static_cast<Opt_SheetOptions*>(&sheetOptions_value), static_cast<Opt_Number*>(&targetId_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(UIContext_openBindSheet, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_updateBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SheetOptions sheetOptions_value = SheetOptions_serializer::read(thisDeserializer);;
        const auto partialUpdate_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean partialUpdate_value_buf = {};
        partialUpdate_value_buf.tag = partialUpdate_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((partialUpdate_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            partialUpdate_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean partialUpdate_value = partialUpdate_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getUIContextAccessor()->updateBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(bindSheetContent), static_cast<Ark_SheetOptions*>(&sheetOptions_value), static_cast<Opt_Boolean*>(&partialUpdate_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(UIContext_updateBindSheet, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_closeBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getUIContextAccessor()->closeBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ComponentContent>(bindSheetContent), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(UIContext_closeBindSheet, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_clearResourceCache(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        GetAccessors()->getUIContextAccessor()->clearResourceCache(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(UIContext_clearResourceCache, Ark_NativePointer)
Ark_Boolean impl_UIContext_isFollowingSystemFontScale(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->isFollowingSystemFontScale(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_isFollowingSystemFontScale, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_UIContext_getMaxFontScale(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->getMaxFontScale(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_getMaxFontScale, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_UIContextAtomicServiceBar_getBarRect() {
        const auto &retValue = GetAccessors()->getUIContextAtomicServiceBarAccessor()->getBarRect();
        SerializerBase _retSerializer {};
        Frame_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_0(UIContextAtomicServiceBar_getBarRect, KInteropReturnBuffer)
Ark_NativePointer impl_uiEffect_VisualEffect_construct() {
        return GetAccessors()->getUiEffect_VisualEffectAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(uiEffect_VisualEffect_construct, Ark_NativePointer)
Ark_NativePointer impl_uiEffect_VisualEffect_getFinalizer() {
        return GetAccessors()->getUiEffect_VisualEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(uiEffect_VisualEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_uiEffect_VisualEffect_backgroundColorBlender(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_uiEffect_VisualEffect self = reinterpret_cast<Ark_uiEffect_VisualEffect>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_uiEffect_BrightnessBlender blender_value = uiEffect_BrightnessBlender_serializer::read(thisDeserializer);;
        return GetAccessors()->getUiEffect_VisualEffectAccessor()->backgroundColorBlender(self, static_cast<Ark_uiEffect_BrightnessBlender*>(&blender_value));
}
KOALA_INTEROP_DIRECT_3(uiEffect_VisualEffect_backgroundColorBlender, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_UIExtensionProxy_construct() {
        return GetAccessors()->getUIExtensionProxyAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(UIExtensionProxy_construct, Ark_NativePointer)
Ark_NativePointer impl_UIExtensionProxy_getFinalizer() {
        return GetAccessors()->getUIExtensionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UIExtensionProxy_getFinalizer, Ark_NativePointer)
void impl_UIExtensionProxy_send(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 data_value_buf_size = thisDeserializer.readInt32();
        Map_String_Object data_value_buf = {};
        thisDeserializer.resizeMap<Map_String_Object, Ark_String, Ark_Object>(&data_value_buf, data_value_buf_size);
        for (int data_value_buf_i = 0; data_value_buf_i < data_value_buf_size; data_value_buf_i++) {
            const Ark_String data_value_buf_key = static_cast<Ark_String>(thisDeserializer.readString());
            const Ark_Object data_value_buf_value = static_cast<Ark_Object>(thisDeserializer.readObject());
            data_value_buf.keys[data_value_buf_i] = data_value_buf_key;
            data_value_buf.values[data_value_buf_i] = data_value_buf_value;
        }
        Map_String_Object data_value = data_value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->send(self, static_cast<Map_String_Object*>(&data_value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_send, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_UIExtensionProxy_sendSync(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 data_value_buf_size = thisDeserializer.readInt32();
        Map_String_Object data_value_buf = {};
        thisDeserializer.resizeMap<Map_String_Object, Ark_String, Ark_Object>(&data_value_buf, data_value_buf_size);
        for (int data_value_buf_i = 0; data_value_buf_i < data_value_buf_size; data_value_buf_i++) {
            const Ark_String data_value_buf_key = static_cast<Ark_String>(thisDeserializer.readString());
            const Ark_Object data_value_buf_value = static_cast<Ark_Object>(thisDeserializer.readObject());
            data_value_buf.keys[data_value_buf_i] = data_value_buf_key;
            data_value_buf.values[data_value_buf_i] = data_value_buf_value;
        }
        Map_String_Object data_value = data_value_buf;;
        const auto &retValue = GetAccessors()->getUIExtensionProxyAccessor()->sendSync(self, static_cast<Map_String_Object*>(&data_value));
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.size);
        for (int32_t i = 0; i < retValue.size; i++) {
            auto retValue_key = retValue.keys[i];
            auto retValue_value = retValue.values[i];
            _retSerializer.writeString(retValue_key);
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(UIExtensionProxy_sendSync, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_onAsyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_UIExtensionProxy_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};;
        GetAccessors()->getUIExtensionProxyAccessor()->onAsyncReceiverRegister(self, static_cast<Callback_UIExtensionProxy_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_onAsyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_onSyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_UIExtensionProxy_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};;
        GetAccessors()->getUIExtensionProxyAccessor()->onSyncReceiverRegister(self, static_cast<Callback_UIExtensionProxy_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_onSyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_offAsyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void callback__value = callback__value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->offAsyncReceiverRegister(self, static_cast<Opt_Callback_UIExtensionProxy_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_offAsyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_offSyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((callback__value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy value0)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void callback__value = callback__value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->offSyncReceiverRegister(self, static_cast<Opt_Callback_UIExtensionProxy_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_offSyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_unifiedDataChannel_UnifiedData_construct() {
        return GetAccessors()->getUnifiedDataChannel_UnifiedDataAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(unifiedDataChannel_UnifiedData_construct, Ark_NativePointer)
Ark_NativePointer impl_unifiedDataChannel_UnifiedData_getFinalizer() {
        return GetAccessors()->getUnifiedDataChannel_UnifiedDataAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(unifiedDataChannel_UnifiedData_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_unifiedDataChannel_UnifiedData_hasType(Ark_NativePointer thisPtr, const KStringPtr& UnifiedData_type) {
        Ark_unifiedDataChannel_UnifiedData self = reinterpret_cast<Ark_unifiedDataChannel_UnifiedData>(thisPtr);
        return GetAccessors()->getUnifiedDataChannel_UnifiedDataAccessor()->hasType(self, (const Ark_String*) (&UnifiedData_type));
}
KOALA_INTEROP_2(unifiedDataChannel_UnifiedData_hasType, Ark_Boolean, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_unifiedDataChannel_UnifiedData_getTypes(Ark_NativePointer thisPtr) {
        Ark_unifiedDataChannel_UnifiedData self = reinterpret_cast<Ark_unifiedDataChannel_UnifiedData>(thisPtr);
        const auto &retValue = GetAccessors()->getUnifiedDataChannel_UnifiedDataAccessor()->getTypes(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_String retValue_element = retValue.array[retValue_counter_i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(unifiedDataChannel_UnifiedData_getTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_UrlStyle_construct(const KStringPtr& url) {
        return GetAccessors()->getUrlStyleAccessor()->construct((const Ark_String*) (&url));
}
KOALA_INTEROP_1(UrlStyle_construct, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_UrlStyle_getFinalizer() {
        return GetAccessors()->getUrlStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UrlStyle_getFinalizer, Ark_NativePointer)
Ark_String impl_UrlStyle_getUrl(Ark_NativePointer thisPtr) {
        Ark_UrlStyle self = reinterpret_cast<Ark_UrlStyle>(thisPtr);
        return GetAccessors()->getUrlStyleAccessor()->getUrl(self);
}
KOALA_INTEROP_1(UrlStyle_getUrl, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_UserDataSpan_construct() {
        return GetAccessors()->getUserDataSpanAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(UserDataSpan_construct, Ark_NativePointer)
Ark_NativePointer impl_UserDataSpan_getFinalizer() {
        return GetAccessors()->getUserDataSpanAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UserDataSpan_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_VideoController_construct() {
        return GetAccessors()->getVideoControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(VideoController_construct, Ark_NativePointer)
Ark_NativePointer impl_VideoController_getFinalizer() {
        return GetAccessors()->getVideoControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(VideoController_getFinalizer, Ark_NativePointer)
void impl_VideoController_start(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_start, Ark_NativePointer)
void impl_VideoController_pause(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_pause, Ark_NativePointer)
void impl_VideoController_stop(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_stop, Ark_NativePointer)
void impl_VideoController_setCurrentTime0(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->setCurrentTime0(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(VideoController_setCurrentTime0, Ark_NativePointer, KInteropNumber)
void impl_VideoController_requestFullscreen(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->requestFullscreen(self, value);
}
KOALA_INTEROP_DIRECT_V2(VideoController_requestFullscreen, Ark_NativePointer, Ark_Boolean)
void impl_VideoController_exitFullscreen(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->exitFullscreen(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_exitFullscreen, Ark_NativePointer)
void impl_VideoController_setCurrentTime1(Ark_NativePointer thisPtr, KInteropNumber value, Ark_Int32 seekMode) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->setCurrentTime1(self, (const Ark_Number*) (&value), static_cast<Ark_SeekMode>(seekMode));
}
KOALA_INTEROP_DIRECT_V3(VideoController_setCurrentTime1, Ark_NativePointer, KInteropNumber, Ark_Int32)
void impl_VideoController_reset(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_reset, Ark_NativePointer)
Ark_NativePointer impl_WaterFlowSections_construct() {
        return GetAccessors()->getWaterFlowSectionsAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WaterFlowSections_construct, Ark_NativePointer)
Ark_NativePointer impl_WaterFlowSections_getFinalizer() {
        return GetAccessors()->getWaterFlowSectionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WaterFlowSections_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_WaterFlowSections_splice(Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const auto deleteCount_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number deleteCount_value_buf = {};
        deleteCount_value_buf.tag = deleteCount_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((deleteCount_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            deleteCount_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number deleteCount_value = deleteCount_value_buf;;
        const auto sections_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SectionOptions sections_value_buf = {};
        sections_value_buf.tag = sections_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((sections_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 sections_value_buf__length = thisDeserializer.readInt32();
            Array_SectionOptions sections_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(sections_value_buf_)>::type,
        std::decay<decltype(*sections_value_buf_.array)>::type>(&sections_value_buf_, sections_value_buf__length);
            for (int sections_value_buf__i = 0; sections_value_buf__i < sections_value_buf__length; sections_value_buf__i++) {
                sections_value_buf_.array[sections_value_buf__i] = SectionOptions_serializer::read(thisDeserializer);
            }
            sections_value_buf.value = sections_value_buf_;
        }
        Opt_Array_SectionOptions sections_value = sections_value_buf;;
        return GetAccessors()->getWaterFlowSectionsAccessor()->splice(self, (const Ark_Number*) (&start), static_cast<Opt_Number*>(&deleteCount_value), static_cast<Opt_Array_SectionOptions*>(&sections_value));
}
KOALA_INTEROP_DIRECT_4(WaterFlowSections_splice, Ark_Boolean, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_WaterFlowSections_push(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SectionOptions section_value = SectionOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getWaterFlowSectionsAccessor()->push(self, static_cast<Ark_SectionOptions*>(&section_value));
}
KOALA_INTEROP_DIRECT_3(WaterFlowSections_push, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_WaterFlowSections_update(Ark_NativePointer thisPtr, KInteropNumber sectionIndex, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SectionOptions section_value = SectionOptions_serializer::read(thisDeserializer);;
        return GetAccessors()->getWaterFlowSectionsAccessor()->update(self, (const Ark_Number*) (&sectionIndex), static_cast<Ark_SectionOptions*>(&section_value));
}
KOALA_INTEROP_DIRECT_4(WaterFlowSections_update, Ark_Boolean, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_WaterFlowSections_values(Ark_NativePointer thisPtr) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        const auto &retValue = GetAccessors()->getWaterFlowSectionsAccessor()->values(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_SectionOptions retValue_element = retValue.array[retValue_counter_i];
            SectionOptions_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WaterFlowSections_values, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_WaterFlowSections_length(Ark_NativePointer thisPtr) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        return GetAccessors()->getWaterFlowSectionsAccessor()->length(self);
}
KOALA_INTEROP_DIRECT_1(WaterFlowSections_length, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuParam_construct() {
        return GetAccessors()->getWebContextMenuParamAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuParam_construct, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuParam_getFinalizer() {
        return GetAccessors()->getWebContextMenuParamAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuParam_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_x(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->x(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_x, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_y(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->y(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_y, Ark_Int32, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getLinkUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getLinkUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getLinkUrl, KStringPtr, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getUnfilteredLinkUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getUnfilteredLinkUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getUnfilteredLinkUrl, KStringPtr, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getSourceUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSourceUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getSourceUrl, KStringPtr, Ark_NativePointer)
Ark_Boolean impl_WebContextMenuParam_existsImageContents(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->existsImageContents(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_existsImageContents, Ark_Boolean, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getMediaType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getMediaType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getMediaType, Ark_Int32, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getSelectionText(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSelectionText(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getSelectionText, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getSourceType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSourceType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getSourceType, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getInputFieldType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getInputFieldType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getInputFieldType, Ark_Int32, Ark_NativePointer)
Ark_Boolean impl_WebContextMenuParam_isEditable(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->isEditable(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_isEditable, Ark_Boolean, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getEditStateFlags(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getEditStateFlags(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getEditStateFlags, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getPreviewWidth(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getPreviewWidth(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getPreviewWidth, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getPreviewHeight(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getPreviewHeight(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getPreviewHeight, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuResult_construct() {
        return GetAccessors()->getWebContextMenuResultAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuResult_construct, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuResult_getFinalizer() {
        return GetAccessors()->getWebContextMenuResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuResult_getFinalizer, Ark_NativePointer)
void impl_WebContextMenuResult_closeContextMenu(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->closeContextMenu(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_closeContextMenu, Ark_NativePointer)
void impl_WebContextMenuResult_copyImage(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->copyImage(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_copyImage, Ark_NativePointer)
void impl_WebContextMenuResult_copy(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->copy(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_copy, Ark_NativePointer)
void impl_WebContextMenuResult_paste(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->paste(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_paste, Ark_NativePointer)
void impl_WebContextMenuResult_cut(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->cut(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_cut, Ark_NativePointer)
void impl_WebContextMenuResult_selectAll(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->selectAll(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_selectAll, Ark_NativePointer)
Ark_NativePointer impl_WebCookie_construct() {
        return GetAccessors()->getWebCookieAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebCookie_construct, Ark_NativePointer)
Ark_NativePointer impl_WebCookie_getFinalizer() {
        return GetAccessors()->getWebCookieAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebCookie_getFinalizer, Ark_NativePointer)
void impl_WebCookie_setCookie(Ark_NativePointer thisPtr) {
        Ark_WebCookie self = reinterpret_cast<Ark_WebCookie>(thisPtr);
        GetAccessors()->getWebCookieAccessor()->setCookie(self);
}
KOALA_INTEROP_DIRECT_V1(WebCookie_setCookie, Ark_NativePointer)
void impl_WebCookie_saveCookie(Ark_NativePointer thisPtr) {
        Ark_WebCookie self = reinterpret_cast<Ark_WebCookie>(thisPtr);
        GetAccessors()->getWebCookieAccessor()->saveCookie(self);
}
KOALA_INTEROP_DIRECT_V1(WebCookie_saveCookie, Ark_NativePointer)
Ark_NativePointer impl_WebKeyboardController_construct() {
        return GetAccessors()->getWebKeyboardControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebKeyboardController_construct, Ark_NativePointer)
Ark_NativePointer impl_WebKeyboardController_getFinalizer() {
        return GetAccessors()->getWebKeyboardControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebKeyboardController_getFinalizer, Ark_NativePointer)
void impl_WebKeyboardController_insertText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->insertText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(WebKeyboardController_insertText, Ark_NativePointer, KStringPtr)
void impl_WebKeyboardController_deleteForward(Ark_NativePointer thisPtr, Ark_Int32 length) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->deleteForward(self, length);
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_deleteForward, Ark_NativePointer, Ark_Int32)
void impl_WebKeyboardController_deleteBackward(Ark_NativePointer thisPtr, Ark_Int32 length) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->deleteBackward(self, length);
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_deleteBackward, Ark_NativePointer, Ark_Int32)
void impl_WebKeyboardController_sendFunctionKey(Ark_NativePointer thisPtr, Ark_Int32 key) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->sendFunctionKey(self, key);
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_sendFunctionKey, Ark_NativePointer, Ark_Int32)
void impl_WebKeyboardController_close(Ark_NativePointer thisPtr) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(WebKeyboardController_close, Ark_NativePointer)
Ark_NativePointer impl_WebResourceError_construct() {
        return GetAccessors()->getWebResourceErrorAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebResourceError_construct, Ark_NativePointer)
Ark_NativePointer impl_WebResourceError_getFinalizer() {
        return GetAccessors()->getWebResourceErrorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceError_getFinalizer, Ark_NativePointer)
Ark_String impl_WebResourceError_getErrorInfo(Ark_NativePointer thisPtr) {
        Ark_WebResourceError self = reinterpret_cast<Ark_WebResourceError>(thisPtr);
        return GetAccessors()->getWebResourceErrorAccessor()->getErrorInfo(self);
}
KOALA_INTEROP_1(WebResourceError_getErrorInfo, KStringPtr, Ark_NativePointer)
Ark_Number impl_WebResourceError_getErrorCode(Ark_NativePointer thisPtr) {
        Ark_WebResourceError self = reinterpret_cast<Ark_WebResourceError>(thisPtr);
        return GetAccessors()->getWebResourceErrorAccessor()->getErrorCode(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceError_getErrorCode, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_WebResourceRequest_construct() {
        return GetAccessors()->getWebResourceRequestAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebResourceRequest_construct, Ark_NativePointer)
Ark_NativePointer impl_WebResourceRequest_getFinalizer() {
        return GetAccessors()->getWebResourceRequestAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceRequest_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceRequest_getRequestHeader(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceRequestAccessor()->getRequestHeader(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Header retValue_element = retValue.array[retValue_counter_i];
            Header_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceRequest_getRequestHeader, KInteropReturnBuffer, Ark_NativePointer)
Ark_String impl_WebResourceRequest_getRequestUrl(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->getRequestUrl(self);
}
KOALA_INTEROP_1(WebResourceRequest_getRequestUrl, KStringPtr, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isRequestGesture(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isRequestGesture(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isRequestGesture, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isMainFrame(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isMainFrame(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isMainFrame, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isRedirect(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isRedirect(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isRedirect, Ark_Boolean, Ark_NativePointer)
Ark_String impl_WebResourceRequest_getRequestMethod(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->getRequestMethod(self);
}
KOALA_INTEROP_1(WebResourceRequest_getRequestMethod, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_WebResourceResponse_construct() {
        return GetAccessors()->getWebResourceResponseAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(WebResourceResponse_construct, Ark_NativePointer)
Ark_NativePointer impl_WebResourceResponse_getFinalizer() {
        return GetAccessors()->getWebResourceResponseAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceResponse_getFinalizer, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseData(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseData(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseData, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceResponse_getResponseDataEx(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceResponseAccessor()->getResponseDataEx(self);
        SerializerBase _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((retValue_type) != (INTEROP_RUNTIME_UNDEFINED)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeString(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeBuffer(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                Resource_serializer::write(_retSerializer, retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceResponse_getResponseDataEx, KInteropReturnBuffer, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseEncoding(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseEncoding(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseEncoding, KStringPtr, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseMimeType(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseMimeType(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseMimeType, KStringPtr, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getReasonMessage(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getReasonMessage(self);
}
KOALA_INTEROP_1(WebResourceResponse_getReasonMessage, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceResponse_getResponseHeader(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceResponseAccessor()->getResponseHeader(self);
        SerializerBase _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int retValue_counter_i = 0; retValue_counter_i < retValue.length; retValue_counter_i++) {
            const Ark_Header retValue_element = retValue.array[retValue_counter_i];
            Header_serializer::write(_retSerializer, retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceResponse_getResponseHeader, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_WebResourceResponse_getResponseCode(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseCode(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceResponse_getResponseCode, KInteropNumber, Ark_NativePointer)
void impl_WebResourceResponse_setResponseData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 data_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_Resource_Buffer data_value_buf = {};
        data_value_buf.selector = data_value_buf_selector;
        if (data_value_buf_selector == 0) {
            data_value_buf.selector = 0;
            data_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (data_value_buf_selector == 1) {
            data_value_buf.selector = 1;
            data_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (data_value_buf_selector == 2) {
            data_value_buf.selector = 2;
            data_value_buf.value2 = Resource_serializer::read(thisDeserializer);
        }
        else if (data_value_buf_selector == 3) {
            data_value_buf.selector = 3;
            data_value_buf.value3 = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        else {
            INTEROP_FATAL("One of the branches for data_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_Resource_Buffer data_value = static_cast<Ark_Union_String_Number_Resource_Buffer>(data_value_buf);;
        GetAccessors()->getWebResourceResponseAccessor()->setResponseData(self, static_cast<Ark_Union_String_Number_Resource_Buffer*>(&data_value));
}
KOALA_INTEROP_DIRECT_V3(WebResourceResponse_setResponseData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebResourceResponse_setResponseEncoding(Ark_NativePointer thisPtr, const KStringPtr& encoding) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseEncoding(self, (const Ark_String*) (&encoding));
}
KOALA_INTEROP_V2(WebResourceResponse_setResponseEncoding, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setResponseMimeType(Ark_NativePointer thisPtr, const KStringPtr& mimeType) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseMimeType(self, (const Ark_String*) (&mimeType));
}
KOALA_INTEROP_V2(WebResourceResponse_setResponseMimeType, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setReasonMessage(Ark_NativePointer thisPtr, const KStringPtr& reason) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setReasonMessage(self, (const Ark_String*) (&reason));
}
KOALA_INTEROP_V2(WebResourceResponse_setReasonMessage, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setResponseHeader(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 header_value_buf_length = thisDeserializer.readInt32();
        Array_Header header_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(header_value_buf)>::type,
        std::decay<decltype(*header_value_buf.array)>::type>(&header_value_buf, header_value_buf_length);
        for (int header_value_buf_i = 0; header_value_buf_i < header_value_buf_length; header_value_buf_i++) {
            header_value_buf.array[header_value_buf_i] = Header_serializer::read(thisDeserializer);
        }
        Array_Header header_value = header_value_buf;;
        GetAccessors()->getWebResourceResponseAccessor()->setResponseHeader(self, static_cast<Array_Header*>(&header_value));
}
KOALA_INTEROP_DIRECT_V3(WebResourceResponse_setResponseHeader, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebResourceResponse_setResponseCode(Ark_NativePointer thisPtr, KInteropNumber code) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseCode(self, (const Ark_Number*) (&code));
}
KOALA_INTEROP_DIRECT_V2(WebResourceResponse_setResponseCode, Ark_NativePointer, KInteropNumber)
void impl_WebResourceResponse_setResponseIsReady(Ark_NativePointer thisPtr, Ark_Boolean IsReady) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseIsReady(self, IsReady);
}
KOALA_INTEROP_DIRECT_V2(WebResourceResponse_setResponseIsReady, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_WebResourceResponse_getResponseIsReady(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseIsReady(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceResponse_getResponseIsReady, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_webview_WebviewController_construct() {
        return GetAccessors()->getWebview_WebviewControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(webview_WebviewController_construct, Ark_NativePointer)
Ark_NativePointer impl_webview_WebviewController_getFinalizer() {
        return GetAccessors()->getWebview_WebviewControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(webview_WebviewController_getFinalizer, Ark_NativePointer)
void impl_webview_WebviewController_initializeWebEngine() {
        GetAccessors()->getWebview_WebviewControllerAccessor()->initializeWebEngine();
}
KOALA_INTEROP_DIRECT_V0(webview_WebviewController_initializeWebEngine)
void impl_webview_WebviewController_loadUrl(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_webview_WebviewController self = reinterpret_cast<Ark_webview_WebviewController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int8 url_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource url_value_buf = {};
        url_value_buf.selector = url_value_buf_selector;
        if (url_value_buf_selector == 0) {
            url_value_buf.selector = 0;
            url_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (url_value_buf_selector == 1) {
            url_value_buf.selector = 1;
            url_value_buf.value1 = Resource_serializer::read(thisDeserializer);
        }
        else {
            INTEROP_FATAL("One of the branches for url_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource url_value = static_cast<Ark_Union_String_Resource>(url_value_buf);;
        const auto headers_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_webview_WebHeader headers_value_buf = {};
        headers_value_buf.tag = headers_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((headers_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            const Ark_Int32 headers_value_buf__length = thisDeserializer.readInt32();
            Array_webview_WebHeader headers_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(headers_value_buf_)>::type,
        std::decay<decltype(*headers_value_buf_.array)>::type>(&headers_value_buf_, headers_value_buf__length);
            for (int headers_value_buf__i = 0; headers_value_buf__i < headers_value_buf__length; headers_value_buf__i++) {
                headers_value_buf_.array[headers_value_buf__i] = webview_WebHeader_serializer::read(thisDeserializer);
            }
            headers_value_buf.value = headers_value_buf_;
        }
        Opt_Array_webview_WebHeader headers_value = headers_value_buf;;
        GetAccessors()->getWebview_WebviewControllerAccessor()->loadUrl(self, static_cast<Ark_Union_String_Resource*>(&url_value), static_cast<Opt_Array_webview_WebHeader*>(&headers_value));
}
KOALA_INTEROP_DIRECT_V3(webview_WebviewController_loadUrl, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_XComponentController_construct() {
        return GetAccessors()->getXComponentControllerAccessor()->construct();
}
KOALA_INTEROP_DIRECT_0(XComponentController_construct, Ark_NativePointer)
Ark_NativePointer impl_XComponentController_getFinalizer() {
        return GetAccessors()->getXComponentControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(XComponentController_getFinalizer, Ark_NativePointer)
Ark_String impl_XComponentController_getXComponentSurfaceId(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        return GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceId(self);
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceId, KStringPtr, Ark_NativePointer)
void impl_XComponentController_getXComponentContext(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->getXComponentContext(self);
}
KOALA_INTEROP_V1(XComponentController_getXComponentContext, Ark_NativePointer)
void impl_XComponentController_setXComponentSurfaceRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SurfaceRect rect_value = SurfaceRect_serializer::read(thisDeserializer);;
        GetAccessors()->getXComponentControllerAccessor()->setXComponentSurfaceRect(self, static_cast<Ark_SurfaceRect*>(&rect_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setXComponentSurfaceRect, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_XComponentController_getXComponentSurfaceRect(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        const auto &retValue = GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceRect(self);
        SerializerBase _retSerializer {};
        SurfaceRect_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceRect, KInteropReturnBuffer, Ark_NativePointer)
void impl_XComponentController_setXComponentSurfaceRotation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_SurfaceRotationOptions rotationOptions_value = SurfaceRotationOptions_serializer::read(thisDeserializer);;
        GetAccessors()->getXComponentControllerAccessor()->setXComponentSurfaceRotation(self, static_cast<Ark_SurfaceRotationOptions*>(&rotationOptions_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setXComponentSurfaceRotation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_XComponentController_getXComponentSurfaceRotation(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        const auto &retValue = GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceRotation(self);
        SerializerBase _retSerializer {};
        SurfaceRotationOptions_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceRotation, KInteropReturnBuffer, Ark_NativePointer)
void impl_XComponentController_startImageAnalyzer(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_ImageAnalyzerConfig config_value = ImageAnalyzerConfig_serializer::read(thisDeserializer);;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getXComponentControllerAccessor()->startImageAnalyzer(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_ImageAnalyzerConfig*>(&config_value), static_cast<Callback_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(XComponentController_startImageAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentController_stopImageAnalyzer(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->stopImageAnalyzer(self);
}
KOALA_INTEROP_DIRECT_V1(XComponentController_stopImageAnalyzer, Ark_NativePointer)
Ark_NativePointer impl_XComponentController_getOnSurfaceCreated(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getXComponentControllerAccessor()->getOnSurfaceCreated(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(XComponentController_getOnSurfaceCreated, Ark_NativePointer, Ark_NativePointer)
void impl_XComponentController_setOnSurfaceCreated(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_String_Void onSurfaceCreated_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String surfaceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String surfaceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceCreated(self, static_cast<Callback_String_Void*>(&onSurfaceCreated_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceCreated, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_XComponentController_getOnSurfaceChanged(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getXComponentControllerAccessor()->getOnSurfaceChanged(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(XComponentController_getOnSurfaceChanged, Ark_NativePointer, Ark_NativePointer)
void impl_XComponentController_setOnSurfaceChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_String_SurfaceRect_Void onSurfaceChanged_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_SurfaceRect_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_SurfaceRect_Void))))};;
        GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceChanged(self, static_cast<Callback_String_SurfaceRect_Void*>(&onSurfaceChanged_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_XComponentController_getOnSurfaceDestroyed(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getXComponentControllerAccessor()->getOnSurfaceDestroyed(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(XComponentController_getOnSurfaceDestroyed, Ark_NativePointer, Ark_NativePointer)
void impl_XComponentController_setOnSurfaceDestroyed(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_String_Void onSurfaceDestroyed_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String surfaceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String surfaceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceDestroyed(self, static_cast<Callback_String_Void*>(&onSurfaceDestroyed_value));
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceDestroyed, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_$r(const KStringPtr& value, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        const Ark_Int32 params_value_buf_length = thisDeserializer.readInt32();
        Array_Opt_Object params_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(params_value_buf)>::type,
        std::decay<decltype(*params_value_buf.array)>::type>(&params_value_buf, params_value_buf_length);
        for (int params_value_buf_i = 0; params_value_buf_i < params_value_buf_length; params_value_buf_i++) {
            const auto params_value_buf_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Object params_value_buf_buf = {};
            params_value_buf_buf.tag = params_value_buf_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((params_value_buf_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
            {
                params_value_buf_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
            }
            params_value_buf.array[params_value_buf_i] = params_value_buf_buf;
        }
        Array_Opt_Object params_value = params_value_buf;;
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->$r((const Ark_String*) (&value), static_cast<Array_Opt_Object*>(&params_value));
        SerializerBase _retSerializer {};
        Resource_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(GlobalScope_$r, KInteropReturnBuffer, KStringPtr, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_$rawfile(const KStringPtr& value) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->$rawfile((const Ark_String*) (&value));
        SerializerBase _retSerializer {};
        Resource_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_$rawfile, KInteropReturnBuffer, KStringPtr)
void impl_GlobalScope_animateTo(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = AnimateParam_serializer::read(thisDeserializer);;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->animateTo(static_cast<Ark_AnimateParam*>(&value_value), static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_animateTo, KSerializerBuffer, int32_t)
void impl_GlobalScope_animateToImmediately(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = AnimateParam_serializer::read(thisDeserializer);;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->animateToImmediately(static_cast<Ark_AnimateParam*>(&value_value), static_cast<Callback_Void*>(&event_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_animateToImmediately, KSerializerBuffer, int32_t)
void impl_GlobalScope_applyStyles(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomObject self_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("T"));;
        CustomStyles customStyles_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String instance)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomStyles)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String instance)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomStyles))))};;
        GetAccessors()->getGlobalScopeAccessor()->applyStyles(static_cast<Ark_CustomObject*>(&self_value), static_cast<CustomStyles*>(&customStyles_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_applyStyles, KSerializerBuffer, int32_t)
void impl_GlobalScope_bindCompatibleProvideCallback(Ark_NativePointer component, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomObject createCompatibleState_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        Ark_CustomObject setCallback_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        const auto compatibleComponent_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomObject compatibleComponent_value_buf = {};
        compatibleComponent_value_buf.tag = compatibleComponent_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((compatibleComponent_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            compatibleComponent_value_buf.value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));
        }
        Opt_CustomObject compatibleComponent_value = compatibleComponent_value_buf;;
        GetAccessors()->getGlobalScopeAccessor()->bindCompatibleProvideCallback(static_cast<Ark_ExtendableComponent>(component), static_cast<Ark_CustomObject*>(&createCompatibleState_value), static_cast<Ark_CustomObject*>(&setCallback_value), static_cast<Opt_CustomObject*>(&compatibleComponent_value));
}
KOALA_INTEROP_DIRECT_V3(GlobalScope_bindCompatibleProvideCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_borderRadiuses(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->borderRadiuses((const Ark_Number*) (&all));
        SerializerBase _retSerializer {};
        BorderRadiuses_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_borderRadiuses, KInteropReturnBuffer, KInteropNumber)
KInteropReturnBuffer impl_GlobalScope_borderStyles(Ark_Int32 all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->borderStyles(static_cast<Ark_BorderStyle>(all));
        SerializerBase _retSerializer {};
        Edges_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_borderStyles, KInteropReturnBuffer, Ark_Int32)
void impl_GlobalScope_compatibleComponent(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        CompatibleInitCallback init_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_CompatibleComponentInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CompatibleInitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_CompatibleComponentInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CompatibleInitCallback))))};;
        CompatibleUpdateCallback update_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CustomObject component)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CompatibleUpdateCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CustomObject component)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CompatibleUpdateCallback))))};;
        const auto component_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ExtendableComponent component_value_buf = {};
        component_value_buf.tag = component_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((component_value_buf_runtimeType) != (INTEROP_RUNTIME_UNDEFINED))
        {
            component_value_buf.value = static_cast<Ark_ExtendableComponent>(ExtendableComponent_serializer::read(thisDeserializer));
        }
        Opt_ExtendableComponent component_value = component_value_buf;;
        GetAccessors()->getGlobalScopeAccessor()->compatibleComponent(static_cast<CompatibleInitCallback*>(&init_value), static_cast<CompatibleUpdateCallback*>(&update_value), static_cast<Opt_ExtendableComponent*>(&component_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_compatibleComponent, KSerializerBuffer, int32_t)
void impl_GlobalScope_compatibleWrappedBuilder(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomObject builder_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        Ark_CustomObject args_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        GetAccessors()->getGlobalScopeAccessor()->compatibleWrappedBuilder(static_cast<Ark_CustomObject*>(&builder_value), static_cast<Ark_CustomObject*>(&args_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_compatibleWrappedBuilder, KSerializerBuffer, int32_t)
void impl_GlobalScope_cursorControl_restoreDefault() {
        GetAccessors()->getGlobalScopeAccessor()->cursorControl_restoreDefault();
}
KOALA_INTEROP_DIRECT_V0(GlobalScope_cursorControl_restoreDefault)
void impl_GlobalScope_cursorControl_setCursor(Ark_Int32 value) {
        GetAccessors()->getGlobalScopeAccessor()->cursorControl_setCursor(static_cast<Ark_pointer_PointerStyle>(value));
}
KOALA_INTEROP_DIRECT_V1(GlobalScope_cursorControl_setCursor, Ark_Int32)
KInteropReturnBuffer impl_GlobalScope_edgeColors(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->edgeColors((const Ark_Number*) (&all));
        SerializerBase _retSerializer {};
        Edges_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_edgeColors, KInteropReturnBuffer, KInteropNumber)
KInteropReturnBuffer impl_GlobalScope_edgeWidths(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->edgeWidths((const Ark_Number*) (&all));
        SerializerBase _retSerializer {};
        Edges_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_edgeWidths, KInteropReturnBuffer, KInteropNumber)
Ark_Boolean impl_GlobalScope_focusControl_requestFocus(const KStringPtr& value) {
        return GetAccessors()->getGlobalScopeAccessor()->focusControl_requestFocus((const Ark_String*) (&value));
}
KOALA_INTEROP_1(GlobalScope_focusControl_requestFocus, Ark_Boolean, KStringPtr)
KInteropReturnBuffer impl_GlobalScope_font_getUIFontConfig() {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->font_getUIFontConfig();
        SerializerBase _retSerializer {};
        font_UIFontConfig_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_0(GlobalScope_font_getUIFontConfig, KInteropReturnBuffer)
void impl_GlobalScope_getCompatibleState(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_CustomObject state_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        Ark_CustomObject createCompatibleState_value = static_cast<Ark_CustomObject>(thisDeserializer.readCustomObject("object"));;
        GetAccessors()->getGlobalScopeAccessor()->getCompatibleState(static_cast<Ark_CustomObject*>(&state_value), static_cast<Ark_CustomObject*>(&createCompatibleState_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_getCompatibleState, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_getRectangleById(const KStringPtr& id) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->getRectangleById((const Ark_String*) (&id));
        SerializerBase _retSerializer {};
        ComponentInfo_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_getRectangleById, KInteropReturnBuffer, KStringPtr)
void impl_GlobalScope_postCardAction(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_Object component_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Ark_Object action_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getGlobalScopeAccessor()->postCardAction(static_cast<Ark_Object*>(&component_value), static_cast<Ark_Object*>(&action_value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_postCardAction, KSerializerBuffer, int32_t)
void impl_GlobalScope_Profiler_registerVsyncCallback(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Profiler_Callback_String_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->Profiler_registerVsyncCallback(static_cast<Profiler_Callback_String_Void*>(&callback__value));
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_Profiler_registerVsyncCallback, KSerializerBuffer, int32_t)
void impl_GlobalScope_Profiler_unregisterVsyncCallback() {
        GetAccessors()->getGlobalScopeAccessor()->Profiler_unregisterVsyncCallback();
}
KOALA_INTEROP_DIRECT_V0(GlobalScope_Profiler_unregisterVsyncCallback)
Ark_Number impl_GlobalScope_px2vp(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->px2vp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_px2vp, KInteropNumber, KInteropNumber)
void impl_GlobalScope_setAppBgColor(const KStringPtr& value) {
        GetAccessors()->getGlobalScopeAccessor()->setAppBgColor((const Ark_String*) (&value));
}
KOALA_INTEROP_V1(GlobalScope_setAppBgColor, KStringPtr)
void impl_GlobalScope_text_getFontDescriptorByFullName(KVMContext vmContext, const KStringPtr& fullName, Ark_Int32 fontType, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_FontDescriptor_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_CustomObject value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_FontDescriptor_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_CustomObject value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_FontDescriptor_Opt_Array_String_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->text_getFontDescriptorByFullName(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), (const Ark_String*) (&fullName), static_cast<Ark_text_SystemFontType>(fontType), static_cast<Callback_Opt_FontDescriptor_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V4(GlobalScope_text_getFontDescriptorByFullName, KStringPtr, Ark_Int32, KSerializerBuffer, int32_t)
void impl_GlobalScope_text_getSystemFontFullNamesByType(KVMContext vmContext, Ark_Int32 fontType, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Callback_Opt_Array_String_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Opt_Array_String_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->text_getSystemFontFullNamesByType(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), static_cast<Ark_text_SystemFontType>(fontType), static_cast<Callback_Opt_Array_String_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V3(GlobalScope_text_getSystemFontFullNamesByType, Ark_Int32, KSerializerBuffer, int32_t)
void impl_GlobalScope_text_matchFontDescriptors(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_text_FontDescriptor desc_value = text_FontDescriptor_serializer::read(thisDeserializer);;
        Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_CustomObject value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_CustomObject value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->text_matchFontDescriptors(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), static_cast<Ark_text_FontDescriptor*>(&desc_value), static_cast<Callback_Opt_Array_FontDescriptor_Opt_Array_String_Void*>(&outputArgumentForReturningPromise_value));
}
KOALA_INTEROP_CTX_V2(GlobalScope_text_matchFontDescriptors, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_uiEffect_createBrightnessBlender(KSerializerBuffer thisArray, int32_t thisLength) {
        DeserializerBase thisDeserializer(thisArray, thisLength);
        Ark_uiEffect_BrightnessBlenderParam param_value = uiEffect_BrightnessBlenderParam_serializer::read(thisDeserializer);;
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->uiEffect_createBrightnessBlender(static_cast<Ark_uiEffect_BrightnessBlenderParam*>(&param_value));
        SerializerBase _retSerializer {};
        uiEffect_BrightnessBlender_serializer::write(_retSerializer, retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(GlobalScope_uiEffect_createBrightnessBlender, KInteropReturnBuffer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GlobalScope_uiEffect_createEffect() {
        return GetAccessors()->getGlobalScopeAccessor()->uiEffect_createEffect();
}
KOALA_INTEROP_DIRECT_0(GlobalScope_uiEffect_createEffect, Ark_NativePointer)
Ark_Number impl_GlobalScope_vp2px(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->vp2px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_vp2px, KInteropNumber, KInteropNumber)