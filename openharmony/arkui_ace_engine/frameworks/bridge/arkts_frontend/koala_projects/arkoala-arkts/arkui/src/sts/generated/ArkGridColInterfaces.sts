/*
 * Copyright (c) 2024-2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// WARNING! THIS FILE IS AUTO-GENERATED, DO NOT MAKE CHANGES, THEY WILL BE LOST ON NEXT GENERATION!

@memo
@BuildLambda("GridCol")
export function GridCol(
    option?: GridColOptions | undefined, 
    @memo
    content?: () => void,
): ArkGridColComponent {
    throw new Error("This function should only be called through a BuilderLambda redirect")
}

@memo
export function GridColImpl(
    @memo
    style: ((attributes: ArkGridColComponent) => void) | undefined,
    option?: GridColOptions | undefined, 
    @memo
    content?: () => void,
): void {
    const receiver = remember(() => {
        return new ArkGridColComponent()
    })
    NodeAttach<ArkGridColPeer>((): ArkGridColPeer => ArkGridColPeer.create(receiver), (_: ArkGridColPeer) => {
        receiver.setGridColOptions(option)
        style?.(receiver)
        content?.()
        receiver.applyAttributesFinish()
    })
}

