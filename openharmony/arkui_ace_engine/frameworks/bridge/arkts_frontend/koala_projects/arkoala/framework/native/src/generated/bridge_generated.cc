/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <vector>
#include <string>
#include "callback_kind.h"

#define KOALA_INTEROP_MODULE ArkUIGeneratedNativeModule
#include "common-interop.h"
#include "arkoala_api_generated.h"
#include "Serializers.h"
#include "callbacks.h"

const OH_AnyAPI* GetAnyImpl(int kind, int version, std::string* result = nullptr);

static const GENERATED_ArkUIFullNodeAPI* GetFullImpl() {
    return reinterpret_cast<const GENERATED_ArkUIFullNodeAPI*>(
        GetAnyImpl(static_cast<int>(GENERATED_Ark_APIVariantKind::GENERATED_FULL),
        GENERATED_ARKUI_FULL_API_VERSION, nullptr));
}

static const GENERATED_ArkUINodeModifiers* GetNodeModifiers() {
    return GetFullImpl()->getNodeModifiers();
}

static const GENERATED_ArkUIAccessors* GetAccessors() {
    return GetFullImpl()->getAccessors();
}

Ark_NativePointer impl_ComponentRoot_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getComponentRootModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ComponentRoot_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
Ark_NativePointer impl_Root_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRootModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Root_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
Ark_NativePointer impl_AbilityComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getAbilityComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(AbilityComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_AbilityComponentInterface_setAbilityComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal__want value_value_buf = {};
        value_value_buf.want = thisDeserializer.readWant();
        Ark_Literal__want value_value = value_value_buf;;
        GetNodeModifiers()->getAbilityComponentModifier()->setAbilityComponentOptions(self, (const Ark_Literal__want*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AbilityComponentInterface_setAbilityComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AbilityComponentAttribute_onConnect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAbilityComponentModifier()->setOnConnect(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AbilityComponentAttribute_onConnect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AbilityComponentAttribute_onDisconnect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAbilityComponentModifier()->setOnDisconnect(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AbilityComponentAttribute_onDisconnect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AlphabetIndexer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getAlphabetIndexerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(AlphabetIndexer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_AlphabetIndexerInterface_setAlphabetIndexerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AlphabetIndexerOptions options_value = thisDeserializer.readAlphabetIndexerOptions();;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAlphabetIndexerOptions(self, (const Ark_AlphabetIndexerOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerInterface_setAlphabetIndexerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_onSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnSelected(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_onSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_selectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_selectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupBackground(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupBackground(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupBackground, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupSelectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupSelectedColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupSelectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupUnselectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupUnselectedColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupUnselectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupItemBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupItemBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_usingPopup(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setUsingPopup(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_usingPopup, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_selectedFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelectedFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_selectedFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupItemFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupItemFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_itemSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Number>(value_value_buf_);
        }
        Opt_Union_String_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setItemSize(self, (const Opt_Union_String_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_itemSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_font(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_font, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_onSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerSelectCallback))))};
        }
        Opt_OnAlphabetIndexerSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnSelect(self, (const Opt_OnAlphabetIndexerSelectCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_onSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_onRequestPopupData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerRequestPopupDataCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerRequestPopupDataCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Array_String_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerRequestPopupDataCallback))))};
        }
        Opt_OnAlphabetIndexerRequestPopupDataCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnRequestPopupData(self, (const Opt_OnAlphabetIndexerRequestPopupDataCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_onRequestPopupData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_onPopupSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAlphabetIndexerPopupSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAlphabetIndexerPopupSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAlphabetIndexerPopupSelectCallback))))};
        }
        Opt_OnAlphabetIndexerPopupSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setOnPopupSelect(self, (const Opt_OnAlphabetIndexerPopupSelectCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_onPopupSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setSelected(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPosition();
        }
        Opt_Position value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupPosition(self, (const Opt_Position*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_autoCollapse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAutoCollapse(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_autoCollapse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupItemBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupItemBorderRadius(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupItemBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_itemBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setItemBorderRadius(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_itemBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupBackgroundBlurStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupBackgroundBlurStyle(self, (const Opt_BlurStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupBackgroundBlurStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_popupTitleBackground(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setPopupTitleBackground(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_popupTitleBackground, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute_alignStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_IndexerAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_IndexerAlign>(thisDeserializer.readInt32());
        }
        Opt_IndexerAlign value_value = value_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (offset_value_buf_runtimeType))
        {
            offset_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length offset_value = offset_value_buf;;
        GetNodeModifiers()->getAlphabetIndexerModifier()->setAlignStyle(self, (const Opt_IndexerAlign*)&value_value, (const Opt_Length*)&offset_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute_alignStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AlphabetIndexerAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getAlphabetIndexerModifier()->set_onChangeEvent_selected(self, (const Callback_Opt_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(AlphabetIndexerAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Animator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getAnimatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Animator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_AnimatorInterface_setAnimatorOptions(Ark_NativePointer thisPtr, const KStringPtr& value) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getAnimatorModifier()->setAnimatorOptions(self, (const Ark_String*) (&value));
}
KOALA_INTEROP_V2(AnimatorInterface_setAnimatorOptions, Ark_NativePointer, KStringPtr)
void impl_AnimatorAttribute_state(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationStatus value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AnimationStatus>(thisDeserializer.readInt32());
        }
        Opt_AnimationStatus value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setState(self, (const Opt_AnimationStatus*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_state, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_duration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setDuration(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_duration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_curve(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Curve value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Curve>(thisDeserializer.readInt32());
        }
        Opt_Curve value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setCurve(self, (const Opt_Curve*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_curve, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_delay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setDelay(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_delay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_fillMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FillMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FillMode>(thisDeserializer.readInt32());
        }
        Opt_FillMode value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setFillMode(self, (const Opt_FillMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_fillMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_iterations(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setIterations(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_iterations, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_playMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PlayMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PlayMode>(thisDeserializer.readInt32());
        }
        Opt_PlayMode value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setPlayMode(self, (const Opt_PlayMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_playMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_motion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SpringMotion value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SpringMotion>(thisDeserializer.readSpringMotion());
        }
        Opt_SpringMotion value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setMotion(self, (const Opt_SpringMotion*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_motion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnPause(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnRepeat(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnCancel(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnFinish(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimatorAttribute_onFrame(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getAnimatorModifier()->setOnFrame(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(AnimatorAttribute_onFrame, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Badge_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBadgeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Badge_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BadgeInterface_setBadgeOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_BadgeParamWithNumber value_value = thisDeserializer.readBadgeParamWithNumber();;
        GetNodeModifiers()->getBadgeModifier()->setBadgeOptions0(self, (const Ark_BadgeParamWithNumber*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(BadgeInterface_setBadgeOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BadgeInterface_setBadgeOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_BadgeParamWithString value_value = thisDeserializer.readBadgeParamWithString();;
        GetNodeModifiers()->getBadgeModifier()->setBadgeOptions1(self, (const Ark_BadgeParamWithString*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(BadgeInterface_setBadgeOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Blank_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBlankModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Blank_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BlankInterface_setBlankOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto min_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String min_value_buf = {};
        min_value_buf.tag = min_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (min_value_buf_runtimeType))
        {
            const Ark_Int8 min_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String min_value_buf_ = {};
            min_value_buf_.selector = min_value_buf__selector;
            if (min_value_buf__selector == 0) {
                min_value_buf_.selector = 0;
                min_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (min_value_buf__selector == 1) {
                min_value_buf_.selector = 1;
                min_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for min_value_buf_ has to be chosen through deserialisation.");
            }
            min_value_buf.value = static_cast<Ark_Union_Number_String>(min_value_buf_);
        }
        Opt_Union_Number_String min_value = min_value_buf;;
        GetNodeModifiers()->getBlankModifier()->setBlankOptions(self, (const Opt_Union_Number_String*)&min_value);
}
KOALA_INTEROP_DIRECT_V3(BlankInterface_setBlankOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BlankAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getBlankModifier()->setColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(BlankAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Button_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getButtonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Button_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ButtonInterface_setButtonOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getButtonModifier()->setButtonOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(ButtonInterface_setButtonOptions0, Ark_NativePointer)
void impl_ButtonInterface_setButtonOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ButtonOptions options_value = thisDeserializer.readButtonOptions();;
        GetNodeModifiers()->getButtonModifier()->setButtonOptions1(self, (const Ark_ButtonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonInterface_setButtonOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonInterface_setButtonOptions2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 label_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr label_value_buf = {};
        label_value_buf.selector = label_value_buf_selector;
        if (label_value_buf_selector == 0) {
            label_value_buf.selector = 0;
            label_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (label_value_buf_selector == 1) {
            label_value_buf.selector = 1;
            label_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for label_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr label_value = static_cast<Ark_ResourceStr>(label_value_buf);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readButtonOptions();
        }
        Opt_ButtonOptions options_value = options_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setButtonOptions2(self, (const Ark_ResourceStr*)&label_value, (const Opt_ButtonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonInterface_setButtonOptions2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ButtonType>(thisDeserializer.readInt32());
        }
        Opt_ButtonType value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setType(self, (const Opt_ButtonType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_stateEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setStateEffect(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_stateEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_buttonStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonStyleMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ButtonStyleMode>(thisDeserializer.readInt32());
        }
        Opt_ButtonStyleMode value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setButtonStyle(self, (const Opt_ButtonStyleMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_buttonStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_controlSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ControlSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ControlSize>(thisDeserializer.readInt32());
        }
        Opt_ControlSize value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setControlSize(self, (const Opt_ControlSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_controlSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_role(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonRole value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ButtonRole>(thisDeserializer.readInt32());
        }
        Opt_ButtonRole value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setRole(self, (const Opt_ButtonRole*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_role, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setFontFamily(self, (const Opt_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_labelStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LabelStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLabelStyle();
        }
        Opt_LabelStyle value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setLabelStyle(self, (const Opt_LabelStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_labelStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ButtonAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getButtonModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ButtonAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Calendar_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCalendarModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Calendar_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CalendarInterface_setCalendarOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Type_CalendarInterface_callable0_value value_value_buf = {};
        Ark_Literal_Number_day_month_year value_value_buf_date_buf = {};
        value_value_buf_date_buf.year = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf_date_buf.month = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf_date_buf.day = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf.date = value_value_buf_date_buf;
        value_value_buf.currentData = thisDeserializer.readMonthData();
        value_value_buf.preData = thisDeserializer.readMonthData();
        value_value_buf.nextData = thisDeserializer.readMonthData();
        const auto value_value_buf_controller_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarController value_value_buf_controller_buf = {};
        value_value_buf_controller_buf.tag = value_value_buf_controller_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_controller_buf_runtimeType))
        {
            value_value_buf_controller_buf.value = static_cast<Ark_CalendarController>(thisDeserializer.readCalendarController());
        }
        value_value_buf.controller = value_value_buf_controller_buf;
        Ark_Type_CalendarInterface_callable0_value value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setCalendarOptions(self, (const Ark_Type_CalendarInterface_callable0_value*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarInterface_setCalendarOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_showLunar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setShowLunar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_showLunar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_showHoliday(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setShowHoliday(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_showHoliday, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_needSlide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setNeedSlide(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_needSlide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_startOfWeek(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setStartOfWeek(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_startOfWeek, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_offDays(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setOffDays(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_offDays, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_direction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setDirection(self, (const Opt_Axis*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_direction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_currentDayStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CurrentDayStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCurrentDayStyle();
        }
        Opt_CurrentDayStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setCurrentDayStyle(self, (const Opt_CurrentDayStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_currentDayStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_nonCurrentDayStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NonCurrentDayStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNonCurrentDayStyle();
        }
        Opt_NonCurrentDayStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setNonCurrentDayStyle(self, (const Opt_NonCurrentDayStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_nonCurrentDayStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_todayStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TodayStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTodayStyle();
        }
        Opt_TodayStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setTodayStyle(self, (const Opt_TodayStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_todayStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_weekStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WeekStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readWeekStyle();
        }
        Opt_WeekStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setWeekStyle(self, (const Opt_WeekStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_weekStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_workStateStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkStateStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readWorkStateStyle();
        }
        Opt_WorkStateStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setWorkStateStyle(self, (const Opt_WorkStateStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_workStateStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_onSelectChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CalendarSelectedDate_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CalendarSelectedDate event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CalendarSelectedDate_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CalendarSelectedDate event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CalendarSelectedDate_Void))))};
        }
        Opt_Callback_CalendarSelectedDate_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setOnSelectChange(self, (const Opt_Callback_CalendarSelectedDate_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_onSelectChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarAttribute_onRequestData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CalendarRequestedData_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CalendarRequestedData event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CalendarRequestedData_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CalendarRequestedData event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CalendarRequestedData_Void))))};
        }
        Opt_Callback_CalendarRequestedData_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarModifier()->setOnRequestData(self, (const Opt_Callback_CalendarRequestedData_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarAttribute_onRequestData, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CalendarPicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCalendarPickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CalendarPicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CalendarPickerInterface_setCalendarPickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readCalendarOptions();
        }
        Opt_CalendarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setCalendarPickerOptions(self, (const Opt_CalendarOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerInterface_setCalendarPickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_textStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_textStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_textStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_textStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setOnChange0(self, (const Opt_Callback_Date_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setOnChange1(self, (const Opt_Callback_Date_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_markToday(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setMarkToday(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_markToday, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_edgeAlign0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarAlign alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (alignType_value_buf_runtimeType))
        {
            alignType_value_buf.value = static_cast<Ark_CalendarAlign>(thisDeserializer.readInt32());
        }
        Opt_CalendarAlign alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (offset_value_buf_runtimeType))
        {
            offset_value_buf.value = thisDeserializer.readOffset();
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setEdgeAlign0(self, (const Opt_CalendarAlign*)&alignType_value, (const Opt_Offset*)&offset_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_edgeAlign0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerAttribute_edgeAlign1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarAlign alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (alignType_value_buf_runtimeType))
        {
            alignType_value_buf.value = static_cast<Ark_CalendarAlign>(thisDeserializer.readInt32());
        }
        Opt_CalendarAlign alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (offset_value_buf_runtimeType))
        {
            offset_value_buf.value = thisDeserializer.readOffset();
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getCalendarPickerModifier()->setEdgeAlign1(self, (const Opt_CalendarAlign*)&alignType_value, (const Opt_Offset*)&offset_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarPickerAttribute_edgeAlign1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Common_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCommonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Common_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CommonInterface_setCommonOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getCommonModifier()->setCommonOptions(self);
}
KOALA_INTEROP_DIRECT_V1(CommonInterface_setCommonOptions, Ark_NativePointer)
Ark_NativePointer impl_CommonMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCommonMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CommonMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CommonMethod_width0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setWidth0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_width0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_width1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLayoutPolicy();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setWidth1(self, (const Opt_Union_Length_LayoutPolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_width1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_height0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHeight0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_height0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_height1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLayoutPolicy();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHeight1(self, (const Opt_Union_Length_LayoutPolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_height1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_drawModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DrawModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_DrawModifier>(thisDeserializer.readDrawModifier());
        }
        Opt_DrawModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDrawModifier(self, (const Opt_DrawModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_drawModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_responseRegion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_Rectangle_Rectangle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_Rectangle_Rectangle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Rectangle value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readRectangle();
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readRectangle();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_Rectangle_Rectangle>(value_value_buf_);
        }
        Opt_Union_Array_Rectangle_Rectangle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setResponseRegion(self, (const Opt_Union_Array_Rectangle_Rectangle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_responseRegion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_mouseResponseRegion(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_Rectangle_Rectangle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_Rectangle_Rectangle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Rectangle value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readRectangle();
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readRectangle();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_Rectangle_Rectangle>(value_value_buf_);
        }
        Opt_Union_Array_Rectangle_Rectangle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMouseResponseRegion(self, (const Opt_Union_Array_Rectangle_Rectangle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_mouseResponseRegion, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSizeOptions();
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSize(self, (const Opt_SizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_size, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_constraintSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ConstraintSizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readConstraintSizeOptions();
        }
        Opt_ConstraintSizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setConstraintSize(self, (const Opt_ConstraintSizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_constraintSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_touchable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTouchable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_touchable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_hitTestBehavior(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HitTestMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_HitTestMode>(thisDeserializer.readInt32());
        }
        Opt_HitTestMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHitTestBehavior(self, (const Opt_HitTestMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_hitTestBehavior, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onChildTouchTest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Array_TouchTestInfo_TouchResult value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Array_TouchTestInfo_TouchResult)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_TouchTestInfo value, const Callback_TouchResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Array_TouchTestInfo_TouchResult))))};
        }
        Opt_Callback_Array_TouchTestInfo_TouchResult value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnChildTouchTest(self, (const Opt_Callback_Array_TouchTestInfo_TouchResult*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onChildTouchTest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_layoutWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLayoutWeight(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_layoutWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_chainWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainWeightOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readChainWeightOptions();
        }
        Opt_ChainWeightOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setChainWeight(self, (const Opt_ChainWeightOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_chainWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_padding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Padding value_value_buf__u = {};
                const auto value_value_buf__u_top_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_top_buf = {};
                value_value_buf__u_top_buf.tag = value_value_buf__u_top_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_top_buf_runtimeType))
                {
                    value_value_buf__u_top_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.top = value_value_buf__u_top_buf;
                const auto value_value_buf__u_right_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_right_buf = {};
                value_value_buf__u_right_buf.tag = value_value_buf__u_right_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_right_buf_runtimeType))
                {
                    value_value_buf__u_right_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.right = value_value_buf__u_right_buf;
                const auto value_value_buf__u_bottom_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_bottom_buf = {};
                value_value_buf__u_bottom_buf.tag = value_value_buf__u_bottom_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_bottom_buf_runtimeType))
                {
                    value_value_buf__u_bottom_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.bottom = value_value_buf__u_bottom_buf;
                const auto value_value_buf__u_left_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_left_buf = {};
                value_value_buf__u_left_buf.tag = value_value_buf__u_left_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_left_buf_runtimeType))
                {
                    value_value_buf__u_left_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.left = value_value_buf__u_left_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedPadding();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPadding(self, (const Opt_Union_Padding_Length_LocalizedPadding*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_padding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_safeAreaPadding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_LengthMetrics_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_LengthMetrics_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Padding value_value_buf__u = {};
                const auto value_value_buf__u_top_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_top_buf = {};
                value_value_buf__u_top_buf.tag = value_value_buf__u_top_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_top_buf_runtimeType))
                {
                    value_value_buf__u_top_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.top = value_value_buf__u_top_buf;
                const auto value_value_buf__u_right_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_right_buf = {};
                value_value_buf__u_right_buf.tag = value_value_buf__u_right_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_right_buf_runtimeType))
                {
                    value_value_buf__u_right_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.right = value_value_buf__u_right_buf;
                const auto value_value_buf__u_bottom_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_bottom_buf = {};
                value_value_buf__u_bottom_buf.tag = value_value_buf__u_bottom_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_bottom_buf_runtimeType))
                {
                    value_value_buf__u_bottom_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.bottom = value_value_buf__u_bottom_buf;
                const auto value_value_buf__u_left_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_left_buf = {};
                value_value_buf__u_left_buf.tag = value_value_buf__u_left_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_left_buf_runtimeType))
                {
                    value_value_buf__u_left_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.left = value_value_buf__u_left_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedPadding();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_LengthMetrics_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_LengthMetrics_LocalizedPadding value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSafeAreaPadding(self, (const Opt_Union_Padding_LengthMetrics_LocalizedPadding*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_safeAreaPadding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_margin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Margin_Length_LocalizedMargin value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Margin_Length_LocalizedMargin value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPadding();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedPadding();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Margin_Length_LocalizedMargin>(value_value_buf_);
        }
        Opt_Union_Margin_Length_LocalizedMargin value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMargin(self, (const Opt_Union_Margin_Length_LocalizedMargin*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_margin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_pixelRound(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelRoundPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPixelRoundPolicy();
        }
        Opt_PixelRoundPolicy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPixelRound(self, (const Opt_PixelRoundPolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_pixelRound, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundImageSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SizeOptions_ImageSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SizeOptions_ImageSize value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readSizeOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ImageSize>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_SizeOptions_ImageSize>(value_value_buf_);
        }
        Opt_Union_SizeOptions_ImageSize value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImageSize(self, (const Opt_Union_SizeOptions_ImageSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundImageSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundImagePosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Alignment value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPosition();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Alignment>(value_value_buf_);
        }
        Opt_Union_Position_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImagePosition(self, (const Opt_Union_Position_Alignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundImagePosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBackgroundEffectOptions();
        }
        Opt_BackgroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundEffect0(self, (const Opt_BackgroundEffectOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundEffectOptions();
        }
        Opt_BackgroundEffectOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sysOptions_value_buf_runtimeType))
        {
            sysOptions_value_buf.value = thisDeserializer.readSystemAdaptiveOptions();
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundEffect1(self, (const Opt_BackgroundEffectOptions*)&options_value, (const Opt_SystemAdaptiveOptions*)&sysOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundImageResizable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResizableOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readResizableOptions();
        }
        Opt_ResizableOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImageResizable(self, (const Opt_ResizableOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundImageResizable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ForegroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readForegroundEffectOptions();
        }
        Opt_ForegroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundEffect(self, (const Opt_ForegroundEffectOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_visualEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisualEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_VisualEffect>(thisDeserializer.readVisualEffect());
        }
        Opt_VisualEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setVisualEffect(self, (const Opt_VisualEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_visualEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Filter>(thisDeserializer.readFilter());
        }
        Opt_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundFilter(self, (const Opt_Filter*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Filter>(thisDeserializer.readFilter());
        }
        Opt_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundFilter(self, (const Opt_Filter*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_compositingFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Filter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Filter>(thisDeserializer.readFilter());
        }
        Opt_Filter value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setCompositingFilter(self, (const Opt_Filter*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_compositingFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_opacity0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOpacity0(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_opacity0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_opacity1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOpacity1(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_opacity1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_border(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBorderOptions();
        }
        Opt_BorderOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorder(self, (const Opt_BorderOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_border, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_borderStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BorderStyle_EdgeStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BorderStyle_EdgeStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_BorderStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeStyles();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_BorderStyle_EdgeStyles>(value_value_buf_);
        }
        Opt_Union_BorderStyle_EdgeStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderStyle(self, (const Opt_Union_BorderStyle_EdgeStyles*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_borderStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_borderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeWidths();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeWidths();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths>(value_value_buf_);
        }
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderWidth(self, (const Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_borderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_borderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeColors();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeColors();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderColor(self, (const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_borderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_borderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBorderRadiuses();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedBorderRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderRadius(self, (const Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_borderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_borderImage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderImageOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBorderImageOption();
        }
        Opt_BorderImageOption value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBorderImage(self, (const Opt_BorderImageOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_borderImage, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outline0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OutlineOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readOutlineOptions();
        }
        Opt_OutlineOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutline0(self, (const Opt_OutlineOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outline0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outline1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OutlineOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readOutlineOptions();
        }
        Opt_OutlineOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutline1(self, (const Opt_OutlineOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outline1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_OutlineStyle_EdgeOutlineStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_OutlineStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeOutlineStyles();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_OutlineStyle_EdgeOutlineStyles>(value_value_buf_);
        }
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineStyle0(self, (const Opt_Union_OutlineStyle_EdgeOutlineStyles*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_OutlineStyle_EdgeOutlineStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_OutlineStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeOutlineStyles();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_OutlineStyle_EdgeOutlineStyles>(value_value_buf_);
        }
        Opt_Union_OutlineStyle_EdgeOutlineStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineStyle1(self, (const Opt_Union_OutlineStyle_EdgeOutlineStyles*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_EdgeOutlineWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_EdgeOutlineWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeOutlineWidths();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_EdgeOutlineWidths>(value_value_buf_);
        }
        Opt_Union_Dimension_EdgeOutlineWidths value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineWidth0(self, (const Opt_Union_Dimension_EdgeOutlineWidths*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_EdgeOutlineWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_EdgeOutlineWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeOutlineWidths();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_EdgeOutlineWidths>(value_value_buf_);
        }
        Opt_Union_Dimension_EdgeOutlineWidths value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineWidth1(self, (const Opt_Union_Dimension_EdgeOutlineWidths*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeColors();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeColors();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineColor0(self, (const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeColors();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeColors();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineColor1(self, (const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineRadius0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OutlineRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OutlineRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readOutlineRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OutlineRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_OutlineRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineRadius0(self, (const Opt_Union_Dimension_OutlineRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineRadius0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_outlineRadius1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OutlineRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OutlineRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readOutlineRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OutlineRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_OutlineRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOutlineRadius1(self, (const Opt_Union_Dimension_OutlineRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_outlineRadius1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_ColoringStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_ColoringStrategy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ColoringStrategy>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_ColoringStrategy>(value_value_buf_);
        }
        Opt_Union_ResourceColor_ColoringStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundColor0(self, (const Opt_Union_ResourceColor_ColoringStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_ColoringStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_ColoringStrategy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ColoringStrategy>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_ColoringStrategy>(value_value_buf_);
        }
        Opt_Union_ResourceColor_ColoringStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundColor1(self, (const Opt_Union_ResourceColor_ColoringStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onClick0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnClick0(self, (const Opt_Callback_ClickEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onClick0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onClick1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (event_value_buf_runtimeType))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void event_value = event_value_buf;;
        const auto distanceThreshold_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number distanceThreshold_value_buf = {};
        distanceThreshold_value_buf.tag = distanceThreshold_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (distanceThreshold_value_buf_runtimeType))
        {
            distanceThreshold_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number distanceThreshold_value = distanceThreshold_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnClick1(self, (const Opt_Callback_ClickEvent_Void*)&event_value, (const Opt_Number*)&distanceThreshold_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onClick1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_HoverEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_HoverEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_HoverEvent_Void))))};
        }
        Opt_Callback_Boolean_HoverEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnHover(self, (const Opt_Callback_Boolean_HoverEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onHoverMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_HoverEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_HoverEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_HoverEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_HoverEvent_Void))))};
        }
        Opt_Callback_HoverEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnHoverMove(self, (const Opt_Callback_HoverEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onHoverMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAccessibilityHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AccessibilityCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_AccessibilityHoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AccessibilityCallback))))};
        }
        Opt_AccessibilityCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAccessibilityHover(self, (const Opt_AccessibilityCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAccessibilityHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_hoverEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HoverEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_HoverEffect>(thisDeserializer.readInt32());
        }
        Opt_HoverEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHoverEffect(self, (const Opt_HoverEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_hoverEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onMouse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MouseEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MouseEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MouseEvent_Void))))};
        }
        Opt_Callback_MouseEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnMouse(self, (const Opt_Callback_MouseEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onMouse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_Void))))};
        }
        Opt_Callback_TouchEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnTouch(self, (const Opt_Callback_TouchEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onKeyEvent0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Void))))};
        }
        Opt_Callback_KeyEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyEvent0(self, (const Opt_Callback_KeyEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onKeyEvent0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onKeyEvent1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyEvent1(self, (const Opt_Callback_KeyEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onKeyEvent1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDigitalCrown(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CrownEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CrownEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CrownEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CrownEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CrownEvent_Void))))};
        }
        Opt_Callback_CrownEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDigitalCrown(self, (const Opt_Callback_CrownEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDigitalCrown, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onKeyPreIme(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyPreIme(self, (const Opt_Callback_KeyEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onKeyPreIme, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onKeyEventDispatch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnKeyEventDispatch(self, (const Opt_Callback_KeyEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onKeyEventDispatch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onFocusAxisEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FocusAxisEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FocusAxisEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FocusAxisEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FocusAxisEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FocusAxisEvent_Void))))};
        }
        Opt_Callback_FocusAxisEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnFocusAxisEvent(self, (const Opt_Callback_FocusAxisEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onFocusAxisEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAxisEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_AxisEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_AxisEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_AxisEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AxisEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_AxisEvent_Void))))};
        }
        Opt_Callback_AxisEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAxisEvent(self, (const Opt_Callback_AxisEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAxisEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_nextFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusMovement value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFocusMovement();
        }
        Opt_FocusMovement value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setNextFocus(self, (const Opt_FocusMovement*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_nextFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_tabStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTabStop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_tabStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnFocus(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnBlur(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_tabIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTabIndex(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_tabIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_defaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDefaultFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_defaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_groupDefaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGroupDefaultFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_groupDefaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusOnTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusOnTouch(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusOnTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusBox(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusBoxStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFocusBoxStyle();
        }
        Opt_FocusBoxStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusBox(self, (const Opt_FocusBoxStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusBox, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_animation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimateParam value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readAnimateParam();
        }
        Opt_AnimateParam value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAnimation(self, (const Opt_AnimateParam*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_animation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_transition0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_TransitionOptions_TransitionEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_TransitionOptions_TransitionEffect value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readTransitionOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_TransitionEffect>(thisDeserializer.readTransitionEffect());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_TransitionOptions_TransitionEffect>(value_value_buf_);
        }
        Opt_Union_TransitionOptions_TransitionEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransition0(self, (const Opt_Union_TransitionOptions_TransitionEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_transition0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_transition1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto effect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransitionEffect effect_value_buf = {};
        effect_value_buf.tag = effect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (effect_value_buf_runtimeType))
        {
            effect_value_buf.value = static_cast<Ark_TransitionEffect>(thisDeserializer.readTransitionEffect());
        }
        Opt_TransitionEffect effect_value = effect_value_buf;;
        const auto onFinish_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransitionFinishCallback onFinish_value_buf = {};
        onFinish_value_buf.tag = onFinish_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (onFinish_value_buf_runtimeType))
        {
            onFinish_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean transitionIn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TransitionFinishCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean transitionIn)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TransitionFinishCallback))))};
        }
        Opt_TransitionFinishCallback onFinish_value = onFinish_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransition1(self, (const Opt_TransitionEffect*)&effect_value, (const Opt_TransitionFinishCallback*)&onFinish_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_transition1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_motionBlur0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MotionBlurOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMotionBlurOptions();
        }
        Opt_MotionBlurOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMotionBlur0(self, (const Opt_MotionBlurOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_motionBlur0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_motionBlur1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MotionBlurOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMotionBlurOptions();
        }
        Opt_MotionBlurOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMotionBlur1(self, (const Opt_MotionBlurOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_motionBlur1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_brightness0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBrightness0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_brightness0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_brightness1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBrightness1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_brightness1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_contrast0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setContrast0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_contrast0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_contrast1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setContrast1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_contrast1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_grayscale0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGrayscale0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_grayscale0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_grayscale1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGrayscale1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_grayscale1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_colorBlend0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_String_Resource>(value_value_buf_);
        }
        Opt_Union_Color_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setColorBlend0(self, (const Opt_Union_Color_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_colorBlend0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_colorBlend1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_String_Resource>(value_value_buf_);
        }
        Opt_Union_Color_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setColorBlend1(self, (const Opt_Union_Color_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_colorBlend1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_saturate0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSaturate0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_saturate0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_saturate1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSaturate1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_saturate1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sepia0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSepia0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sepia0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sepia1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSepia1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sepia1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_invert0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_InvertOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_InvertOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readInvertOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_InvertOptions>(value_value_buf_);
        }
        Opt_Union_Number_InvertOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setInvert0(self, (const Opt_Union_Number_InvertOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_invert0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_invert1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_InvertOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_InvertOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readInvertOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_InvertOptions>(value_value_buf_);
        }
        Opt_Union_Number_InvertOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setInvert1(self, (const Opt_Union_Number_InvertOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_invert1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_hueRotate0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHueRotate0(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_hueRotate0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_hueRotate1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setHueRotate1(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_hueRotate1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useShadowBatching0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseShadowBatching0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useShadowBatching0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useShadowBatching1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseShadowBatching1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useShadowBatching1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseEffect0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto useEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useEffect_value_buf = {};
        useEffect_value_buf.tag = useEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (useEffect_value_buf_runtimeType))
        {
            useEffect_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useEffect_value = useEffect_value_buf;;
        const auto effectType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectType effectType_value_buf = {};
        effectType_value_buf.tag = effectType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (effectType_value_buf_runtimeType))
        {
            effectType_value_buf.value = static_cast<Ark_EffectType>(thisDeserializer.readInt32());
        }
        Opt_EffectType effectType_value = effectType_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseEffect1(self, (const Opt_Boolean*)&useEffect_value, (const Opt_EffectType*)&effectType_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useEffect2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto useEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useEffect_value_buf = {};
        useEffect_value_buf.tag = useEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (useEffect_value_buf_runtimeType))
        {
            useEffect_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useEffect_value = useEffect_value_buf;;
        const auto effectType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectType effectType_value_buf = {};
        effectType_value_buf.tag = effectType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (effectType_value_buf_runtimeType))
        {
            effectType_value_buf.value = static_cast<Ark_EffectType>(thisDeserializer.readInt32());
        }
        Opt_EffectType effectType_value = effectType_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseEffect2(self, (const Opt_Boolean*)&useEffect_value, (const Opt_EffectType*)&effectType_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useEffect2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_renderGroup0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderGroup0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_renderGroup0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_renderGroup1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderGroup1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_renderGroup1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_freeze0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFreeze0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_freeze0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_freeze1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFreeze1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_freeze1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_translate0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TranslateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTranslateOptions();
        }
        Opt_TranslateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTranslate0(self, (const Opt_TranslateOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_translate0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_translate1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TranslateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTranslateOptions();
        }
        Opt_TranslateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTranslate1(self, (const Opt_TranslateOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_translate1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_scale0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScaleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readScaleOptions();
        }
        Opt_ScaleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setScale0(self, (const Opt_ScaleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_scale0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_scale1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScaleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readScaleOptions();
        }
        Opt_ScaleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setScale1(self, (const Opt_ScaleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_scale1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_gridSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGridSpan(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_gridSpan, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_gridOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGridOffset(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_gridOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_rotate0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RotateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRotateOptions();
        }
        Opt_RotateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRotate0(self, (const Opt_RotateOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_rotate0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_rotate1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RotateOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRotateOptions();
        }
        Opt_RotateOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRotate1(self, (const Opt_RotateOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_rotate1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_transform0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TransformationMatrix value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTransformationMatrix();
        }
        Opt_TransformationMatrix value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransform0(self, (const Opt_TransformationMatrix*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_transform0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_transform1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setTransform1(self, (const Opt_Object*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_transform1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAppear(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDisAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDisAppear(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDisAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAttach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAttach(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDetach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDetach(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAreaChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Area_Area_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Area_Area_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Area oldValue, const Ark_Area newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Area_Area_Void))))};
        }
        Opt_Callback_Area_Area_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAreaChange(self, (const Opt_Callback_Area_Area_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAreaChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_visibility(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Visibility value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Visibility>(thisDeserializer.readInt32());
        }
        Opt_Visibility value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setVisibility(self, (const Opt_Visibility*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_visibility, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_flexGrow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexGrow(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_flexGrow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_flexShrink(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexShrink(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_flexShrink, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_flexBasis(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFlexBasis(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_flexBasis, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_alignSelf(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignSelf(self, (const Opt_ItemAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_alignSelf, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_displayPriority(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDisplayPriority(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_displayPriority, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_zIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setZIndex(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_zIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_direction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Direction value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Direction>(thisDeserializer.readInt32());
        }
        Opt_Direction value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDirection(self, (const Opt_Direction*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_direction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_align(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlign(self, (const Opt_Alignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_align, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Edges_LocalizedEdges value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Edges_LocalizedEdges value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPosition();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdges();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdges();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Edges_LocalizedEdges>(value_value_buf_);
        }
        Opt_Union_Position_Edges_LocalizedEdges value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPosition(self, (const Opt_Union_Position_Edges_LocalizedEdges*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_position, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_markAnchor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_LocalizedPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_LocalizedPosition value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPosition();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLocalizedPosition();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_LocalizedPosition>(value_value_buf_);
        }
        Opt_Union_Position_LocalizedPosition value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMarkAnchor(self, (const Opt_Union_Position_LocalizedPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_markAnchor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Edges_LocalizedEdges value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Edges_LocalizedEdges value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPosition();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdges();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdges();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Edges_LocalizedEdges>(value_value_buf_);
        }
        Opt_Union_Position_Edges_LocalizedEdges value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOffset(self, (const Opt_Union_Position_Edges_LocalizedEdges*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_offset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_enabled(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setEnabled(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_enabled, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_useSizeType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Union_Number_Literal_Number_offset_span_lg_md_sm_xs value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Union_Number_Literal_Number_offset_span_lg_md_sm_xs value_value_buf_ = {};
            const auto value_value_buf__xs_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Union_Number_Literal_Number_offset_span value_value_buf__xs_buf = {};
            value_value_buf__xs_buf.tag = value_value_buf__xs_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__xs_buf_runtimeType))
            {
                const Ark_Int8 value_value_buf__xs_buf__selector = thisDeserializer.readInt8();
                Ark_Union_Number_Literal_Number_offset_span value_value_buf__xs_buf_ = {};
                value_value_buf__xs_buf_.selector = value_value_buf__xs_buf__selector;
                if (value_value_buf__xs_buf__selector == 0) {
                    value_value_buf__xs_buf_.selector = 0;
                    value_value_buf__xs_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__xs_buf__selector == 1) {
                    value_value_buf__xs_buf_.selector = 1;
                    Ark_Literal_Number_offset_span value_value_buf__xs_buf__u = {};
                    value_value_buf__xs_buf__u.span = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__xs_buf__u.offset = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__xs_buf_.value1 = value_value_buf__xs_buf__u;
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__xs_buf_ has to be chosen through deserialisation.");
                }
                value_value_buf__xs_buf.value = static_cast<Ark_Union_Number_Literal_Number_offset_span>(value_value_buf__xs_buf_);
            }
            value_value_buf_.xs = value_value_buf__xs_buf;
            const auto value_value_buf__sm_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Union_Number_Literal_Number_offset_span value_value_buf__sm_buf = {};
            value_value_buf__sm_buf.tag = value_value_buf__sm_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__sm_buf_runtimeType))
            {
                const Ark_Int8 value_value_buf__sm_buf__selector = thisDeserializer.readInt8();
                Ark_Union_Number_Literal_Number_offset_span value_value_buf__sm_buf_ = {};
                value_value_buf__sm_buf_.selector = value_value_buf__sm_buf__selector;
                if (value_value_buf__sm_buf__selector == 0) {
                    value_value_buf__sm_buf_.selector = 0;
                    value_value_buf__sm_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__sm_buf__selector == 1) {
                    value_value_buf__sm_buf_.selector = 1;
                    Ark_Literal_Number_offset_span value_value_buf__sm_buf__u = {};
                    value_value_buf__sm_buf__u.span = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__sm_buf__u.offset = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__sm_buf_.value1 = value_value_buf__sm_buf__u;
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__sm_buf_ has to be chosen through deserialisation.");
                }
                value_value_buf__sm_buf.value = static_cast<Ark_Union_Number_Literal_Number_offset_span>(value_value_buf__sm_buf_);
            }
            value_value_buf_.sm = value_value_buf__sm_buf;
            const auto value_value_buf__md_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Union_Number_Literal_Number_offset_span value_value_buf__md_buf = {};
            value_value_buf__md_buf.tag = value_value_buf__md_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__md_buf_runtimeType))
            {
                const Ark_Int8 value_value_buf__md_buf__selector = thisDeserializer.readInt8();
                Ark_Union_Number_Literal_Number_offset_span value_value_buf__md_buf_ = {};
                value_value_buf__md_buf_.selector = value_value_buf__md_buf__selector;
                if (value_value_buf__md_buf__selector == 0) {
                    value_value_buf__md_buf_.selector = 0;
                    value_value_buf__md_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__md_buf__selector == 1) {
                    value_value_buf__md_buf_.selector = 1;
                    Ark_Literal_Number_offset_span value_value_buf__md_buf__u = {};
                    value_value_buf__md_buf__u.span = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__md_buf__u.offset = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__md_buf_.value1 = value_value_buf__md_buf__u;
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__md_buf_ has to be chosen through deserialisation.");
                }
                value_value_buf__md_buf.value = static_cast<Ark_Union_Number_Literal_Number_offset_span>(value_value_buf__md_buf_);
            }
            value_value_buf_.md = value_value_buf__md_buf;
            const auto value_value_buf__lg_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Union_Number_Literal_Number_offset_span value_value_buf__lg_buf = {};
            value_value_buf__lg_buf.tag = value_value_buf__lg_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__lg_buf_runtimeType))
            {
                const Ark_Int8 value_value_buf__lg_buf__selector = thisDeserializer.readInt8();
                Ark_Union_Number_Literal_Number_offset_span value_value_buf__lg_buf_ = {};
                value_value_buf__lg_buf_.selector = value_value_buf__lg_buf__selector;
                if (value_value_buf__lg_buf__selector == 0) {
                    value_value_buf__lg_buf_.selector = 0;
                    value_value_buf__lg_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__lg_buf__selector == 1) {
                    value_value_buf__lg_buf_.selector = 1;
                    Ark_Literal_Number_offset_span value_value_buf__lg_buf__u = {};
                    value_value_buf__lg_buf__u.span = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__lg_buf__u.offset = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__lg_buf_.value1 = value_value_buf__lg_buf__u;
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__lg_buf_ has to be chosen through deserialisation.");
                }
                value_value_buf__lg_buf.value = static_cast<Ark_Union_Number_Literal_Number_offset_span>(value_value_buf__lg_buf_);
            }
            value_value_buf_.lg = value_value_buf__lg_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Union_Number_Literal_Number_offset_span_lg_md_sm_xs value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setUseSizeType(self, (const Opt_Literal_Union_Number_Literal_Number_offset_span_lg_md_sm_xs*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_useSizeType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_alignRules0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AlignRuleOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readAlignRuleOption();
        }
        Opt_AlignRuleOption value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignRules0(self, (const Opt_AlignRuleOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_alignRules0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_alignRules1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LocalizedAlignRuleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLocalizedAlignRuleOptions();
        }
        Opt_LocalizedAlignRuleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAlignRules1(self, (const Opt_LocalizedAlignRuleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_alignRules1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_aspectRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAspectRatio(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_aspectRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clickEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ClickEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readClickEffect();
        }
        Opt_ClickEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClickEffect0(self, (const Opt_ClickEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clickEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clickEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ClickEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readClickEffect();
        }
        Opt_ClickEffect value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClickEffect1(self, (const Opt_ClickEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clickEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Union_CustomBuilder_DragItemInfo value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Union_CustomBuilder_DragItemInfo)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams, const Callback_Union_CustomBuilder_DragItemInfo_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Union_CustomBuilder_DragItemInfo))))};
        }
        Opt_Callback_DragEvent_String_Union_CustomBuilder_DragItemInfo value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragStart(self, (const Opt_Callback_DragEvent_String_Union_CustomBuilder_DragItemInfo*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Void))))};
        }
        Opt_Callback_DragEvent_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragEnter(self, (const Opt_Callback_DragEvent_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Void))))};
        }
        Opt_Callback_DragEvent_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragMove(self, (const Opt_Callback_DragEvent_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Void))))};
        }
        Opt_Callback_DragEvent_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragLeave(self, (const Opt_Callback_DragEvent_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDrop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Void))))};
        }
        Opt_Callback_DragEvent_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDrop0(self, (const Opt_Callback_DragEvent_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDrop0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDrop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto eventCallback_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnDragEventCallback eventCallback_value_buf = {};
        eventCallback_value_buf.tag = eventCallback_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (eventCallback_value_buf_runtimeType))
        {
            eventCallback_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnDragEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnDragEventCallback))))};
        }
        Opt_OnDragEventCallback eventCallback_value = eventCallback_value_buf;;
        const auto dropOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DropOptions dropOptions_value_buf = {};
        dropOptions_value_buf.tag = dropOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (dropOptions_value_buf_runtimeType))
        {
            dropOptions_value_buf.value = thisDeserializer.readDropOptions();
        }
        Opt_DropOptions dropOptions_value = dropOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDrop1(self, (const Opt_OnDragEventCallback*)&eventCallback_value, (const Opt_DropOptions*)&dropOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDrop1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onDragEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DragEvent_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DragEvent_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DragEvent event, const Opt_String extraParams)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DragEvent_String_Void))))};
        }
        Opt_Callback_DragEvent_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnDragEnd(self, (const Opt_Callback_DragEvent_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onDragEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_allowDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_UniformDataType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_UniformDataType value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_UniformDataType>(thisDeserializer.readInt32());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_UniformDataType value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAllowDrop(self, (const Opt_Array_UniformDataType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_allowDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_draggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDraggable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_draggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_dragPreview0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CustomBuilder_DragItemInfo_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CustomBuilder_DragItemInfo_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readDragItemInfo();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CustomBuilder_DragItemInfo_String>(value_value_buf_);
        }
        Opt_Union_CustomBuilder_DragItemInfo_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreview0(self, (const Opt_Union_CustomBuilder_DragItemInfo_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_dragPreview0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_dragPreview1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto preview_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CustomBuilder_DragItemInfo_String preview_value_buf = {};
        preview_value_buf.tag = preview_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (preview_value_buf_runtimeType))
        {
            const Ark_Int8 preview_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CustomBuilder_DragItemInfo_String preview_value_buf_ = {};
            preview_value_buf_.selector = preview_value_buf__selector;
            if (preview_value_buf__selector == 0) {
                preview_value_buf_.selector = 0;
                preview_value_buf_.value0 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (preview_value_buf__selector == 1) {
                preview_value_buf_.selector = 1;
                preview_value_buf_.value1 = thisDeserializer.readDragItemInfo();
            }
            else if (preview_value_buf__selector == 2) {
                preview_value_buf_.selector = 2;
                preview_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for preview_value_buf_ has to be chosen through deserialisation.");
            }
            preview_value_buf.value = static_cast<Ark_Union_CustomBuilder_DragItemInfo_String>(preview_value_buf_);
        }
        Opt_Union_CustomBuilder_DragItemInfo_String preview_value = preview_value_buf;;
        const auto config_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PreviewConfiguration config_value_buf = {};
        config_value_buf.tag = config_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (config_value_buf_runtimeType))
        {
            config_value_buf.value = thisDeserializer.readPreviewConfiguration();
        }
        Opt_PreviewConfiguration config_value = config_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreview1(self, (const Opt_Union_CustomBuilder_DragItemInfo_String*)&preview_value, (const Opt_PreviewConfiguration*)&config_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_dragPreview1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onPreDrag(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PreDragStatus_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_PreDragStatus parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PreDragStatus_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_PreDragStatus parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PreDragStatus_Void))))};
        }
        Opt_Callback_PreDragStatus_Void value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnPreDrag(self, (const Opt_Callback_PreDragStatus_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onPreDrag, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_linearGradient0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLinearGradientOptions();
        }
        Opt_LinearGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradient0(self, (const Opt_LinearGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_linearGradient0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_linearGradient1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLinearGradientOptions();
        }
        Opt_LinearGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradient1(self, (const Opt_LinearGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_linearGradient1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sweepGradient0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SweepGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSweepGradientOptions();
        }
        Opt_SweepGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSweepGradient0(self, (const Opt_SweepGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sweepGradient0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sweepGradient1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SweepGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSweepGradientOptions();
        }
        Opt_SweepGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSweepGradient1(self, (const Opt_SweepGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sweepGradient1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_radialGradient0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RadialGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRadialGradientOptions();
        }
        Opt_RadialGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRadialGradient0(self, (const Opt_RadialGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_radialGradient0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_radialGradient1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RadialGradientOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRadialGradientOptions();
        }
        Opt_RadialGradientOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRadialGradient1(self, (const Opt_RadialGradientOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_radialGradient1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_motionPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MotionPathOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMotionPathOptions();
        }
        Opt_MotionPathOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMotionPath(self, (const Opt_MotionPathOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_motionPath, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_shadow0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_ShadowStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_ShadowStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ShadowStyle>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_ShadowStyle>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_ShadowStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setShadow0(self, (const Opt_Union_ShadowOptions_ShadowStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_shadow0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_shadow1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_ShadowStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_ShadowStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_ShadowStyle>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_ShadowStyle>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_ShadowStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setShadow1(self, (const Opt_Union_ShadowOptions_ShadowStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_shadow1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clip0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClip0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clip0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clip1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClip1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clip1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clip2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClip2(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clip2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clipShape0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(thisDeserializer.readCircleShape());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(thisDeserializer.readEllipseShape());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(thisDeserializer.readPathShape());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(thisDeserializer.readRectShape());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClipShape0(self, (const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clipShape0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_clipShape1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(thisDeserializer.readCircleShape());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(thisDeserializer.readEllipseShape());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(thisDeserializer.readPathShape());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(thisDeserializer.readRectShape());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setClipShape1(self, (const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_clipShape1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_mask0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ProgressMask value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ProgressMask>(thisDeserializer.readProgressMask());
        }
        Opt_ProgressMask value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMask0(self, (const Opt_ProgressMask*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_mask0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_mask1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ProgressMask value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ProgressMask>(thisDeserializer.readProgressMask());
        }
        Opt_ProgressMask value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMask1(self, (const Opt_ProgressMask*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_mask1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_mask2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ProgressMask value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ProgressMask>(thisDeserializer.readProgressMask());
        }
        Opt_ProgressMask value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMask2(self, (const Opt_ProgressMask*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_mask2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_maskShape0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(thisDeserializer.readCircleShape());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(thisDeserializer.readEllipseShape());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(thisDeserializer.readPathShape());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(thisDeserializer.readRectShape());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMaskShape0(self, (const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_maskShape0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_maskShape1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CircleShape_EllipseShape_PathShape_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_CircleShape>(thisDeserializer.readCircleShape());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EllipseShape>(thisDeserializer.readEllipseShape());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PathShape>(thisDeserializer.readPathShape());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_RectShape>(thisDeserializer.readRectShape());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CircleShape_EllipseShape_PathShape_RectShape>(value_value_buf_);
        }
        Opt_Union_CircleShape_EllipseShape_PathShape_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMaskShape1(self, (const Opt_Union_CircleShape_EllipseShape_PathShape_RectShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_maskShape1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_key(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setKey(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_key, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_id(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setId(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_id, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_geometryTransition0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGeometryTransition0(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_geometryTransition0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_geometryTransition1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (id_value_buf_runtimeType))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GeometryTransitionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readGeometryTransitionOptions();
        }
        Opt_GeometryTransitionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGeometryTransition1(self, (const Opt_String*)&id_value, (const Opt_GeometryTransitionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_geometryTransition1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_stateStyles(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StateStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readStateStyles();
        }
        Opt_StateStyles value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setStateStyles(self, (const Opt_StateStyles*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_stateStyles, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_restoreId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRestoreId(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_restoreId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sphericalEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSphericalEffect0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sphericalEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sphericalEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSphericalEffect1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sphericalEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_lightUpEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLightUpEffect0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_lightUpEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_lightUpEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLightUpEffect1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_lightUpEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_pixelStretchEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelStretchEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPixelStretchEffectOptions();
        }
        Opt_PixelStretchEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPixelStretchEffect0(self, (const Opt_PixelStretchEffectOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_pixelStretchEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_pixelStretchEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelStretchEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPixelStretchEffectOptions();
        }
        Opt_PixelStretchEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPixelStretchEffect1(self, (const Opt_PixelStretchEffectOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_pixelStretchEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityGroup0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityGroup0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityGroup0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityGroup1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isGroup_value_buf = {};
        isGroup_value_buf.tag = isGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isGroup_value_buf_runtimeType))
        {
            isGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isGroup_value = isGroup_value_buf;;
        const auto accessibilityOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityOptions accessibilityOptions_value_buf = {};
        accessibilityOptions_value_buf.tag = accessibilityOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (accessibilityOptions_value_buf_runtimeType))
        {
            accessibilityOptions_value_buf.value = thisDeserializer.readAccessibilityOptions();
        }
        Opt_AccessibilityOptions accessibilityOptions_value = accessibilityOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityGroup1(self, (const Opt_Boolean*)&isGroup_value, (const Opt_AccessibilityOptions*)&accessibilityOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityGroup1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityText0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityText0(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityText0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityText1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readResource();
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityText1(self, (const Opt_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityText1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityNextFocusId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityNextFocusId(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityNextFocusId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityDefaultFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDefaultFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityDefaultFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityUseSamePage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilitySamePageMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AccessibilitySamePageMode>(thisDeserializer.readInt32());
        }
        Opt_AccessibilitySamePageMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityUseSamePage(self, (const Opt_AccessibilitySamePageMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityUseSamePage, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityScrollTriggerable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityScrollTriggerable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityScrollTriggerable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityRole(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityRoleType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AccessibilityRoleType>(thisDeserializer.readInt32());
        }
        Opt_AccessibilityRoleType value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityRole(self, (const Opt_AccessibilityRoleType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityRole, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onAccessibilityFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AccessibilityFocusCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isFocus)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AccessibilityFocusCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isFocus)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AccessibilityFocusCallback))))};
        }
        Opt_AccessibilityFocusCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnAccessibilityFocus(self, (const Opt_AccessibilityFocusCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onAccessibilityFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityTextHint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityTextHint(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityTextHint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityDescription0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDescription0(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityDescription0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityDescription1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readResource();
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityDescription1(self, (const Opt_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityDescription1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityLevel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityLevel(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityLevel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityVirtualNode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityVirtualNode(self, (const Opt_CustomNodeBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityVirtualNode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityChecked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityChecked(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityChecked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilitySelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilitySelected(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilitySelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_obscured(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ObscuredReasons value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ObscuredReasons value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ObscuredReasons>(thisDeserializer.readInt32());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ObscuredReasons value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setObscured(self, (const Opt_Array_ObscuredReasons*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_obscured, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_reuseId(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setReuseId(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_reuseId, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_reuse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ReuseOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readReuseOptions();
        }
        Opt_ReuseOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setReuse(self, (const Opt_ReuseOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_reuse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_renderFit0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_RenderFit>(thisDeserializer.readInt32());
        }
        Opt_RenderFit value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderFit0(self, (const Opt_RenderFit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_renderFit0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_renderFit1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_RenderFit>(thisDeserializer.readInt32());
        }
        Opt_RenderFit value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setRenderFit1(self, (const Opt_RenderFit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_renderFit1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_gestureModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_GestureModifier>(thisDeserializer.readGestureModifier());
        }
        Opt_GestureModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGestureModifier(self, (const Opt_GestureModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_gestureModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundBrightness0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBrightnessOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBackgroundBrightnessOptions();
        }
        Opt_BackgroundBrightnessOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBrightness0(self, (const Opt_BackgroundBrightnessOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundBrightness0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundBrightness1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBrightnessOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBackgroundBrightnessOptions();
        }
        Opt_BackgroundBrightnessOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBrightness1(self, (const Opt_BackgroundBrightnessOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundBrightness1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onGestureJudgeBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureInfo gestureInfo, const Ark_BaseGestureEvent event, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult))))};
        }
        Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureJudgeBegin(self, (const Opt_Callback_GestureInfo_BaseGestureEvent_GestureJudgeResult*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onGestureJudgeBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onGestureRecognizerJudgeBegin0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureRecognizerJudgeBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GestureRecognizerJudgeBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GestureRecognizerJudgeBeginCallback))))};
        }
        Opt_GestureRecognizerJudgeBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureRecognizerJudgeBegin0(self, (const Opt_GestureRecognizerJudgeBeginCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onGestureRecognizerJudgeBegin0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onGestureRecognizerJudgeBegin1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureRecognizerJudgeBeginCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GestureRecognizerJudgeBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BaseGestureEvent event, const Ark_GestureRecognizer current, const Array_GestureRecognizer recognizers, const Callback_GestureJudgeResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GestureRecognizerJudgeBeginCallback))))};
        }
        Opt_GestureRecognizerJudgeBeginCallback callback__value = callback__value_buf;;
        const auto exposeInnerGesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean exposeInnerGesture_value_buf = {};
        exposeInnerGesture_value_buf.tag = exposeInnerGesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (exposeInnerGesture_value_buf_runtimeType))
        {
            exposeInnerGesture_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean exposeInnerGesture_value = exposeInnerGesture_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnGestureRecognizerJudgeBegin1(self, (const Opt_GestureRecognizerJudgeBeginCallback*)&callback__value, (const Opt_Boolean*)&exposeInnerGesture_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onGestureRecognizerJudgeBegin1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_shouldBuiltInRecognizerParallelWith(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShouldBuiltInRecognizerParallelWithCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ShouldBuiltInRecognizerParallelWithCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureRecognizer current, const Array_GestureRecognizer others, const Callback_GestureRecognizer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ShouldBuiltInRecognizerParallelWithCallback))))};
        }
        Opt_ShouldBuiltInRecognizerParallelWithCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setShouldBuiltInRecognizerParallelWith(self, (const Opt_ShouldBuiltInRecognizerParallelWithCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_shouldBuiltInRecognizerParallelWith, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_monopolizeEvents(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setMonopolizeEvents(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_monopolizeEvents, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onTouchIntercept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_HitTestMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent parameter, const Callback_HitTestMode_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_HitTestMode)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent parameter, const Callback_HitTestMode_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_HitTestMode))))};
        }
        Opt_Callback_TouchEvent_HitTestMode value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnTouchIntercept(self, (const Opt_Callback_TouchEvent_HitTestMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onTouchIntercept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onSizeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SizeChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SizeChangeCallback))))};
        }
        Opt_SizeChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnSizeChange(self, (const Opt_SizeChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onSizeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_accessibilityFocusDrawLevel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusDrawLevel value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FocusDrawLevel>(thisDeserializer.readInt32());
        }
        Opt_FocusDrawLevel value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAccessibilityFocusDrawLevel(self, (const Opt_FocusDrawLevel*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_accessibilityFocusDrawLevel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_customProperty(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto name_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String name_value_buf = {};
        name_value_buf.tag = name_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (name_value_buf_runtimeType))
        {
            name_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String name_value = name_value_buf;;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object value_value = value_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setCustomProperty(self, (const Opt_String*)&name_value, (const Opt_Object*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_customProperty, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_expandSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (types_value_buf_runtimeType))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_SafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_SafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_SafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (edges_value_buf_runtimeType))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_SafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_SafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_SafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setExpandSafeArea(self, (const Opt_Array_SafeAreaType*)&types_value, (const Opt_Array_SafeAreaEdge*)&edges_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_expandSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_background(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (builder_value_buf_runtimeType))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Alignment_align options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            Ark_Literal_Alignment_align options_value_buf_ = {};
            const auto options_value_buf__align_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Alignment options_value_buf__align_buf = {};
            options_value_buf__align_buf.tag = options_value_buf__align_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf__align_buf_runtimeType))
            {
                options_value_buf__align_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
            }
            options_value_buf_.align = options_value_buf__align_buf;
            options_value_buf.value = options_value_buf_;
        }
        Opt_Literal_Alignment_align options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackground(self, (const Opt_CustomNodeBuilder*)&builder_value, (const Opt_Literal_Alignment_align*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_background, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundImage0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto src_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap src_value_buf = {};
        src_value_buf.tag = src_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (src_value_buf_runtimeType))
        {
            const Ark_Int8 src_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap src_value_buf_ = {};
            src_value_buf_.selector = src_value_buf__selector;
            if (src_value_buf__selector == 0) {
                src_value_buf_.selector = 0;
                const Ark_Int8 src_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr src_value_buf__u = {};
                src_value_buf__u.selector = src_value_buf__u_selector;
                if (src_value_buf__u_selector == 0) {
                    src_value_buf__u.selector = 0;
                    src_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (src_value_buf__u_selector == 1) {
                    src_value_buf__u.selector = 1;
                    src_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for src_value_buf__u has to be chosen through deserialisation.");
                }
                src_value_buf_.value0 = static_cast<Ark_ResourceStr>(src_value_buf__u);
            }
            else if (src_value_buf__selector == 1) {
                src_value_buf_.selector = 1;
                src_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_ has to be chosen through deserialisation.");
            }
            src_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap>(src_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap src_value = src_value_buf;;
        const auto repeat_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRepeat repeat_value_buf = {};
        repeat_value_buf.tag = repeat_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (repeat_value_buf_runtimeType))
        {
            repeat_value_buf.value = static_cast<Ark_ImageRepeat>(thisDeserializer.readInt32());
        }
        Opt_ImageRepeat repeat_value = repeat_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImage0(self, (const Opt_Union_ResourceStr_PixelMap*)&src_value, (const Opt_ImageRepeat*)&repeat_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundImage0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundImage1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto src_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap src_value_buf = {};
        src_value_buf.tag = src_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (src_value_buf_runtimeType))
        {
            const Ark_Int8 src_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap src_value_buf_ = {};
            src_value_buf_.selector = src_value_buf__selector;
            if (src_value_buf__selector == 0) {
                src_value_buf_.selector = 0;
                const Ark_Int8 src_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr src_value_buf__u = {};
                src_value_buf__u.selector = src_value_buf__u_selector;
                if (src_value_buf__u_selector == 0) {
                    src_value_buf__u.selector = 0;
                    src_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (src_value_buf__u_selector == 1) {
                    src_value_buf__u.selector = 1;
                    src_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for src_value_buf__u has to be chosen through deserialisation.");
                }
                src_value_buf_.value0 = static_cast<Ark_ResourceStr>(src_value_buf__u);
            }
            else if (src_value_buf__selector == 1) {
                src_value_buf_.selector = 1;
                src_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_ has to be chosen through deserialisation.");
            }
            src_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap>(src_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap src_value = src_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundImageOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundImageOptions();
        }
        Opt_BackgroundImageOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundImage1(self, (const Opt_Union_ResourceStr_PixelMap*)&src_value, (const Opt_BackgroundImageOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundImage1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundBlurStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundBlurStyleOptions();
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBlurStyle0(self, (const Opt_BlurStyle*)&value_value, (const Opt_BackgroundBlurStyleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundBlurStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backgroundBlurStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundBlurStyleOptions();
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sysOptions_value_buf_runtimeType))
        {
            sysOptions_value_buf.value = thisDeserializer.readSystemAdaptiveOptions();
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackgroundBlurStyle1(self, (const Opt_BlurStyle*)&style_value, (const Opt_BackgroundBlurStyleOptions*)&options_value, (const Opt_SystemAdaptiveOptions*)&sysOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backgroundBlurStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundBlurStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ForegroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readForegroundBlurStyleOptions();
        }
        Opt_ForegroundBlurStyleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundBlurStyle0(self, (const Opt_BlurStyle*)&value_value, (const Opt_ForegroundBlurStyleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundBlurStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_foregroundBlurStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ForegroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readForegroundBlurStyleOptions();
        }
        Opt_ForegroundBlurStyleOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sysOptions_value_buf_runtimeType))
        {
            sysOptions_value_buf.value = thisDeserializer.readSystemAdaptiveOptions();
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setForegroundBlurStyle1(self, (const Opt_BlurStyle*)&style_value, (const Opt_ForegroundBlurStyleOptions*)&options_value, (const Opt_SystemAdaptiveOptions*)&sysOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_foregroundBlurStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusScopeId0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (id_value_buf_runtimeType))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto isGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isGroup_value_buf = {};
        isGroup_value_buf.tag = isGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isGroup_value_buf_runtimeType))
        {
            isGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isGroup_value = isGroup_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusScopeId0(self, (const Opt_String*)&id_value, (const Opt_Boolean*)&isGroup_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusScopeId0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusScopeId1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (id_value_buf_runtimeType))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto isGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isGroup_value_buf = {};
        isGroup_value_buf.tag = isGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isGroup_value_buf_runtimeType))
        {
            isGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isGroup_value = isGroup_value_buf;;
        const auto arrowStepOut_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean arrowStepOut_value_buf = {};
        arrowStepOut_value_buf.tag = arrowStepOut_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (arrowStepOut_value_buf_runtimeType))
        {
            arrowStepOut_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean arrowStepOut_value = arrowStepOut_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusScopeId1(self, (const Opt_String*)&id_value, (const Opt_Boolean*)&isGroup_value, (const Opt_Boolean*)&arrowStepOut_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusScopeId1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_focusScopePriority(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scopeId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String scopeId_value_buf = {};
        scopeId_value_buf.tag = scopeId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scopeId_value_buf_runtimeType))
        {
            scopeId_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String scopeId_value = scopeId_value_buf;;
        const auto priority_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FocusPriority priority_value_buf = {};
        priority_value_buf.tag = priority_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (priority_value_buf_runtimeType))
        {
            priority_value_buf.value = static_cast<Ark_FocusPriority>(thisDeserializer.readInt32());
        }
        Opt_FocusPriority priority_value = priority_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setFocusScopePriority(self, (const Opt_String*)&scopeId_value, (const Opt_FocusPriority*)&priority_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_focusScopePriority, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_gesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (gesture_value_buf_runtimeType))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_TapGestureInterface>(thisDeserializer.readTapGestureInterface());
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_LongPressGestureInterface>(thisDeserializer.readLongPressGestureInterface());
            }
            else if (gesture_value_buf__selector == 2) {
                gesture_value_buf_.selector = 2;
                gesture_value_buf_.value2 = static_cast<Ark_PanGestureInterface>(thisDeserializer.readPanGestureInterface());
            }
            else if (gesture_value_buf__selector == 3) {
                gesture_value_buf_.selector = 3;
                gesture_value_buf_.value3 = static_cast<Ark_PinchGestureInterface>(thisDeserializer.readPinchGestureInterface());
            }
            else if (gesture_value_buf__selector == 4) {
                gesture_value_buf_.selector = 4;
                gesture_value_buf_.value4 = static_cast<Ark_SwipeGestureInterface>(thisDeserializer.readSwipeGestureInterface());
            }
            else if (gesture_value_buf__selector == 5) {
                gesture_value_buf_.selector = 5;
                gesture_value_buf_.value5 = static_cast<Ark_RotationGestureInterface>(thisDeserializer.readRotationGestureInterface());
            }
            else if (gesture_value_buf__selector == 6) {
                gesture_value_buf_.selector = 6;
                gesture_value_buf_.value6 = static_cast<Ark_GestureGroupInterface>(thisDeserializer.readGestureGroupInterface());
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mask_value_buf_runtimeType))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setGesture(self, (const Opt_GestureType*)&gesture_value, (const Opt_GestureMask*)&mask_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_gesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_priorityGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (gesture_value_buf_runtimeType))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_TapGestureInterface>(thisDeserializer.readTapGestureInterface());
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_LongPressGestureInterface>(thisDeserializer.readLongPressGestureInterface());
            }
            else if (gesture_value_buf__selector == 2) {
                gesture_value_buf_.selector = 2;
                gesture_value_buf_.value2 = static_cast<Ark_PanGestureInterface>(thisDeserializer.readPanGestureInterface());
            }
            else if (gesture_value_buf__selector == 3) {
                gesture_value_buf_.selector = 3;
                gesture_value_buf_.value3 = static_cast<Ark_PinchGestureInterface>(thisDeserializer.readPinchGestureInterface());
            }
            else if (gesture_value_buf__selector == 4) {
                gesture_value_buf_.selector = 4;
                gesture_value_buf_.value4 = static_cast<Ark_SwipeGestureInterface>(thisDeserializer.readSwipeGestureInterface());
            }
            else if (gesture_value_buf__selector == 5) {
                gesture_value_buf_.selector = 5;
                gesture_value_buf_.value5 = static_cast<Ark_RotationGestureInterface>(thisDeserializer.readRotationGestureInterface());
            }
            else if (gesture_value_buf__selector == 6) {
                gesture_value_buf_.selector = 6;
                gesture_value_buf_.value6 = static_cast<Ark_GestureGroupInterface>(thisDeserializer.readGestureGroupInterface());
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mask_value_buf_runtimeType))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setPriorityGesture(self, (const Opt_GestureType*)&gesture_value, (const Opt_GestureMask*)&mask_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_priorityGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_parallelGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto gesture_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureType gesture_value_buf = {};
        gesture_value_buf.tag = gesture_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (gesture_value_buf_runtimeType))
        {
            const Ark_Int8 gesture_value_buf__selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_ = {};
            gesture_value_buf_.selector = gesture_value_buf__selector;
            if (gesture_value_buf__selector == 0) {
                gesture_value_buf_.selector = 0;
                gesture_value_buf_.value0 = static_cast<Ark_TapGestureInterface>(thisDeserializer.readTapGestureInterface());
            }
            else if (gesture_value_buf__selector == 1) {
                gesture_value_buf_.selector = 1;
                gesture_value_buf_.value1 = static_cast<Ark_LongPressGestureInterface>(thisDeserializer.readLongPressGestureInterface());
            }
            else if (gesture_value_buf__selector == 2) {
                gesture_value_buf_.selector = 2;
                gesture_value_buf_.value2 = static_cast<Ark_PanGestureInterface>(thisDeserializer.readPanGestureInterface());
            }
            else if (gesture_value_buf__selector == 3) {
                gesture_value_buf_.selector = 3;
                gesture_value_buf_.value3 = static_cast<Ark_PinchGestureInterface>(thisDeserializer.readPinchGestureInterface());
            }
            else if (gesture_value_buf__selector == 4) {
                gesture_value_buf_.selector = 4;
                gesture_value_buf_.value4 = static_cast<Ark_SwipeGestureInterface>(thisDeserializer.readSwipeGestureInterface());
            }
            else if (gesture_value_buf__selector == 5) {
                gesture_value_buf_.selector = 5;
                gesture_value_buf_.value5 = static_cast<Ark_RotationGestureInterface>(thisDeserializer.readRotationGestureInterface());
            }
            else if (gesture_value_buf__selector == 6) {
                gesture_value_buf_.selector = 6;
                gesture_value_buf_.value6 = static_cast<Ark_GestureGroupInterface>(thisDeserializer.readGestureGroupInterface());
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_ has to be chosen through deserialisation.");
            }
            gesture_value_buf.value = static_cast<Ark_GestureType>(gesture_value_buf_);
        }
        Opt_GestureType gesture_value = gesture_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureMask mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mask_value_buf_runtimeType))
        {
            mask_value_buf.value = static_cast<Ark_GestureMask>(thisDeserializer.readInt32());
        }
        Opt_GestureMask mask_value = mask_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setParallelGesture(self, (const Opt_GestureType*)&gesture_value, (const Opt_GestureMask*)&mask_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_parallelGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_blur0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBlurOptions();
        }
        Opt_BlurOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlur0(self, (const Opt_Number*)&value_value, (const Opt_BlurOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_blur0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_blur1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto blurRadius_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number blurRadius_value_buf = {};
        blurRadius_value_buf.tag = blurRadius_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (blurRadius_value_buf_runtimeType))
        {
            blurRadius_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number blurRadius_value = blurRadius_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBlurOptions();
        }
        Opt_BlurOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sysOptions_value_buf_runtimeType))
        {
            sysOptions_value_buf.value = thisDeserializer.readSystemAdaptiveOptions();
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlur1(self, (const Opt_Number*)&blurRadius_value, (const Opt_BlurOptions*)&options_value, (const Opt_SystemAdaptiveOptions*)&sysOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_blur1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_linearGradientBlur0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientBlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readLinearGradientBlurOptions();
        }
        Opt_LinearGradientBlurOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradientBlur0(self, (const Opt_Number*)&value_value, (const Opt_LinearGradientBlurOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_linearGradientBlur0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_linearGradientBlur1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto blurRadius_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number blurRadius_value_buf = {};
        blurRadius_value_buf.tag = blurRadius_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (blurRadius_value_buf_runtimeType))
        {
            blurRadius_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number blurRadius_value = blurRadius_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearGradientBlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readLinearGradientBlurOptions();
        }
        Opt_LinearGradientBlurOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setLinearGradientBlur1(self, (const Opt_Number*)&blurRadius_value, (const Opt_LinearGradientBlurOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_linearGradientBlur1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_systemBarEffect(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getCommonMethodModifier()->setSystemBarEffect(self);
}
KOALA_INTEROP_DIRECT_V1(CommonMethod_systemBarEffect, Ark_NativePointer)
void impl_CommonMethod_backdropBlur0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBlurOptions();
        }
        Opt_BlurOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackdropBlur0(self, (const Opt_Number*)&value_value, (const Opt_BlurOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backdropBlur0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_backdropBlur1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto radius_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number radius_value_buf = {};
        radius_value_buf.tag = radius_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (radius_value_buf_runtimeType))
        {
            radius_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number radius_value = radius_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBlurOptions();
        }
        Opt_BlurOptions options_value = options_value_buf;;
        const auto sysOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemAdaptiveOptions sysOptions_value_buf = {};
        sysOptions_value_buf.tag = sysOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sysOptions_value_buf_runtimeType))
        {
            sysOptions_value_buf.value = thisDeserializer.readSystemAdaptiveOptions();
        }
        Opt_SystemAdaptiveOptions sysOptions_value = sysOptions_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBackdropBlur1(self, (const Opt_Number*)&radius_value, (const Opt_BlurOptions*)&options_value, (const Opt_SystemAdaptiveOptions*)&sysOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_backdropBlur1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_sharedTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto id_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String id_value_buf = {};
        id_value_buf.tag = id_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (id_value_buf_runtimeType))
        {
            id_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String id_value = id_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_sharedTransitionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readsharedTransitionOptions();
        }
        Opt_sharedTransitionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setSharedTransition(self, (const Opt_String*)&id_value, (const Opt_sharedTransitionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_sharedTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_chainMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (direction_value_buf_runtimeType))
        {
            direction_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis direction_value = direction_value_buf;;
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_ChainStyle>(thisDeserializer.readInt32());
        }
        Opt_ChainStyle style_value = style_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setChainMode(self, (const Opt_Axis*)&direction_value, (const Opt_ChainStyle*)&style_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_chainMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_dragPreviewOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DragPreviewOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDragPreviewOptions();
        }
        Opt_DragPreviewOptions value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DragInteractionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readDragInteractionOptions();
        }
        Opt_DragInteractionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setDragPreviewOptions(self, (const Opt_DragPreviewOptions*)&value_value, (const Opt_DragInteractionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_dragPreviewOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_overlay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_CustomBuilder_ComponentContent value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_CustomBuilder_ComponentContent value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_ComponentContent>(thisDeserializer.readComponentContent());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_CustomBuilder_ComponentContent>(value_value_buf_);
        }
        Opt_Union_String_CustomBuilder_ComponentContent value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OverlayOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readOverlayOptions();
        }
        Opt_OverlayOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOverlay(self, (const Opt_Union_String_CustomBuilder_ComponentContent*)&value_value, (const Opt_OverlayOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_overlay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_blendMode0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlendMode>(thisDeserializer.readInt32());
        }
        Opt_BlendMode value_value = value_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendApplyType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_BlendApplyType>(thisDeserializer.readInt32());
        }
        Opt_BlendApplyType type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlendMode0(self, (const Opt_BlendMode*)&value_value, (const Opt_BlendApplyType*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_blendMode0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_blendMode1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto mode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendMode mode_value_buf = {};
        mode_value_buf.tag = mode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mode_value_buf_runtimeType))
        {
            mode_value_buf.value = static_cast<Ark_BlendMode>(thisDeserializer.readInt32());
        }
        Opt_BlendMode mode_value = mode_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendApplyType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_BlendApplyType>(thisDeserializer.readInt32());
        }
        Opt_BlendApplyType type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBlendMode1(self, (const Opt_BlendMode*)&mode_value, (const Opt_BlendApplyType*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_blendMode1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_advancedBlendMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto effect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BlendMode_Blender effect_value_buf = {};
        effect_value_buf.tag = effect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (effect_value_buf_runtimeType))
        {
            const Ark_Int8 effect_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BlendMode_Blender effect_value_buf_ = {};
            effect_value_buf_.selector = effect_value_buf__selector;
            if (effect_value_buf__selector == 0) {
                effect_value_buf_.selector = 0;
                effect_value_buf_.value0 = static_cast<Ark_BlendMode>(thisDeserializer.readInt32());
            }
            else if (effect_value_buf__selector == 1) {
                effect_value_buf_.selector = 1;
                effect_value_buf_.value1 = thisDeserializer.readBrightnessBlender();
            }
            else {
                INTEROP_FATAL("One of the branches for effect_value_buf_ has to be chosen through deserialisation.");
            }
            effect_value_buf.value = static_cast<Ark_Union_BlendMode_Blender>(effect_value_buf_);
        }
        Opt_Union_BlendMode_Blender effect_value = effect_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlendApplyType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_BlendApplyType>(thisDeserializer.readInt32());
        }
        Opt_BlendApplyType type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setAdvancedBlendMode(self, (const Opt_Union_BlendMode_Blender*)&effect_value, (const Opt_BlendApplyType*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_advancedBlendMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindTips(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto message_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TipsMessageType message_value_buf = {};
        message_value_buf.tag = message_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (message_value_buf_runtimeType))
        {
            const Ark_Int8 message_value_buf__selector = thisDeserializer.readInt8();
            Ark_TipsMessageType message_value_buf_ = {};
            message_value_buf_.selector = message_value_buf__selector;
            if (message_value_buf__selector == 0) {
                message_value_buf_.selector = 0;
                const Ark_Int8 message_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr message_value_buf__u = {};
                message_value_buf__u.selector = message_value_buf__u_selector;
                if (message_value_buf__u_selector == 0) {
                    message_value_buf__u.selector = 0;
                    message_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (message_value_buf__u_selector == 1) {
                    message_value_buf__u.selector = 1;
                    message_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for message_value_buf__u has to be chosen through deserialisation.");
                }
                message_value_buf_.value0 = static_cast<Ark_ResourceStr>(message_value_buf__u);
            }
            else if (message_value_buf__selector == 1) {
                message_value_buf_.selector = 1;
                message_value_buf_.value1 = static_cast<Ark_StyledString>(thisDeserializer.readStyledString());
            }
            else {
                INTEROP_FATAL("One of the branches for message_value_buf_ has to be chosen through deserialisation.");
            }
            message_value_buf.value = static_cast<Ark_TipsMessageType>(message_value_buf_);
        }
        Opt_TipsMessageType message_value = message_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TipsOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTipsOptions();
        }
        Opt_TipsOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindTips(self, (const Opt_TipsMessageType*)&message_value, (const Opt_TipsOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindTips, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindPopup(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (show_value_buf_runtimeType))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        const auto popup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_PopupOptions_CustomPopupOptions popup_value_buf = {};
        popup_value_buf.tag = popup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (popup_value_buf_runtimeType))
        {
            const Ark_Int8 popup_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_PopupOptions_CustomPopupOptions popup_value_buf_ = {};
            popup_value_buf_.selector = popup_value_buf__selector;
            if (popup_value_buf__selector == 0) {
                popup_value_buf_.selector = 0;
                popup_value_buf_.value0 = thisDeserializer.readPopupOptions();
            }
            else if (popup_value_buf__selector == 1) {
                popup_value_buf_.selector = 1;
                popup_value_buf_.value1 = thisDeserializer.readCustomPopupOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for popup_value_buf_ has to be chosen through deserialisation.");
            }
            popup_value_buf.value = static_cast<Ark_Union_PopupOptions_CustomPopupOptions>(popup_value_buf_);
        }
        Opt_Union_PopupOptions_CustomPopupOptions popup_value = popup_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindPopup(self, (const Opt_Boolean*)&show_value, (const Opt_Union_PopupOptions_CustomPopupOptions*)&popup_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindPopup, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindMenu0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_MenuElement_CustomBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_MenuElement_CustomBuilder content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                const Ark_Int32 content_value_buf__u_length = thisDeserializer.readInt32();
                Array_MenuElement content_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(content_value_buf__u)>::type,
        std::decay<decltype(*content_value_buf__u.array)>::type>(&content_value_buf__u, content_value_buf__u_length);
                for (int content_value_buf__u_i = 0; content_value_buf__u_i < content_value_buf__u_length; content_value_buf__u_i++) {
                    content_value_buf__u.array[content_value_buf__u_i] = thisDeserializer.readMenuElement();
                }
                content_value_buf_.value0 = content_value_buf__u;
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_Array_MenuElement_CustomBuilder>(content_value_buf_);
        }
        Opt_Union_Array_MenuElement_CustomBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readMenuOptions();
        }
        Opt_MenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindMenu0(self, (const Opt_Union_Array_MenuElement_CustomBuilder*)&content_value, (const Opt_MenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindMenu0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindMenu1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShow_value_buf_runtimeType))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_MenuElement_CustomBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_MenuElement_CustomBuilder content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                const Ark_Int32 content_value_buf__u_length = thisDeserializer.readInt32();
                Array_MenuElement content_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(content_value_buf__u)>::type,
        std::decay<decltype(*content_value_buf__u.array)>::type>(&content_value_buf__u, content_value_buf__u_length);
                for (int content_value_buf__u_i = 0; content_value_buf__u_i < content_value_buf__u_length; content_value_buf__u_i++) {
                    content_value_buf__u.array[content_value_buf__u_i] = thisDeserializer.readMenuElement();
                }
                content_value_buf_.value0 = content_value_buf__u;
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_Array_MenuElement_CustomBuilder>(content_value_buf_);
        }
        Opt_Union_Array_MenuElement_CustomBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readMenuOptions();
        }
        Opt_MenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindMenu1(self, (const Opt_Boolean*)&isShow_value, (const Opt_Union_Array_MenuElement_CustomBuilder*)&content_value, (const Opt_MenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindMenu1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindContextMenu0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (responseType_value_buf_runtimeType))
        {
            responseType_value_buf.value = static_cast<Ark_ResponseType>(thisDeserializer.readInt32());
        }
        Opt_ResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContextMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readContextMenuOptions();
        }
        Opt_ContextMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContextMenu0(self, (const Opt_CustomNodeBuilder*)&content_value, (const Opt_ResponseType*)&responseType_value, (const Opt_ContextMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindContextMenu0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindContextMenu1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isShown_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShown_value_buf = {};
        isShown_value_buf.tag = isShown_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShown_value_buf_runtimeType))
        {
            isShown_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShown_value = isShown_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContextMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readContextMenuOptions();
        }
        Opt_ContextMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContextMenu1(self, (const Opt_Boolean*)&isShown_value, (const Opt_CustomNodeBuilder*)&content_value, (const Opt_ContextMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindContextMenu1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindContentCover0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShow_value_buf_runtimeType))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (builder_value_buf_runtimeType))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ModalTransition type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_ModalTransition>(thisDeserializer.readInt32());
        }
        Opt_ModalTransition type_value = type_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContentCover0(self, (const Opt_Boolean*)&isShow_value, (const Opt_CustomNodeBuilder*)&builder_value, (const Opt_ModalTransition*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindContentCover0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindContentCover1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShow_value_buf_runtimeType))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (builder_value_buf_runtimeType))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentCoverOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readContentCoverOptions();
        }
        Opt_ContentCoverOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindContentCover1(self, (const Opt_Boolean*)&isShow_value, (const Opt_CustomNodeBuilder*)&builder_value, (const Opt_ContentCoverOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindContentCover1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_bindSheet(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto isShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShow_value_buf = {};
        isShow_value_buf.tag = isShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShow_value_buf_runtimeType))
        {
            isShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShow_value = isShow_value_buf;;
        const auto builder_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder builder_value_buf = {};
        builder_value_buf.tag = builder_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (builder_value_buf_runtimeType))
        {
            builder_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder builder_value = builder_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SheetOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSheetOptions();
        }
        Opt_SheetOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setBindSheet(self, (const Opt_Boolean*)&isShow_value, (const Opt_CustomNodeBuilder*)&builder_value, (const Opt_SheetOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_bindSheet, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onVisibleAreaChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto ratios_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number ratios_value_buf = {};
        ratios_value_buf.tag = ratios_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ratios_value_buf_runtimeType))
        {
            const Ark_Int32 ratios_value_buf__length = thisDeserializer.readInt32();
            Array_Number ratios_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(ratios_value_buf_)>::type,
        std::decay<decltype(*ratios_value_buf_.array)>::type>(&ratios_value_buf_, ratios_value_buf__length);
            for (int ratios_value_buf__i = 0; ratios_value_buf__i < ratios_value_buf__length; ratios_value_buf__i++) {
                ratios_value_buf_.array[ratios_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            ratios_value_buf.value = ratios_value_buf_;
        }
        Opt_Array_Number ratios_value = ratios_value_buf;;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (event_value_buf_runtimeType))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnVisibleAreaChange(self, (const Opt_Array_Number*)&ratios_value, (const Opt_VisibleAreaChangeCallback*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onVisibleAreaChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_onVisibleAreaApproximateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaEventOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readVisibleAreaEventOptions();
        }
        Opt_VisibleAreaEventOptions options_value = options_value_buf;;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (event_value_buf_runtimeType))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setOnVisibleAreaApproximateChange(self, (const Opt_VisibleAreaEventOptions*)&options_value, (const Opt_VisibleAreaChangeCallback*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_onVisibleAreaApproximateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonMethod_keyboardShortcut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_FunctionKey value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_FunctionKey value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FunctionKey>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_FunctionKey>(value_value_buf_);
        }
        Opt_Union_String_FunctionKey value_value = value_value_buf;;
        const auto keys_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ModifierKey keys_value_buf = {};
        keys_value_buf.tag = keys_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (keys_value_buf_runtimeType))
        {
            const Ark_Int32 keys_value_buf__length = thisDeserializer.readInt32();
            Array_ModifierKey keys_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(keys_value_buf_)>::type,
        std::decay<decltype(*keys_value_buf_.array)>::type>(&keys_value_buf_, keys_value_buf__length);
            for (int keys_value_buf__i = 0; keys_value_buf__i < keys_value_buf__length; keys_value_buf__i++) {
                keys_value_buf_.array[keys_value_buf__i] = static_cast<Ark_ModifierKey>(thisDeserializer.readInt32());
            }
            keys_value_buf.value = keys_value_buf_;
        }
        Opt_Array_ModifierKey keys_value = keys_value_buf;;
        const auto action_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void action_value_buf = {};
        action_value_buf.tag = action_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (action_value_buf_runtimeType))
        {
            action_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void action_value = action_value_buf;;
        GetNodeModifiers()->getCommonMethodModifier()->setKeyboardShortcut(self, (const Opt_Union_String_FunctionKey*)&value_value, (const Opt_Array_ModifierKey*)&keys_value, (const Opt_Callback_Void*)&action_value);
}
KOALA_INTEROP_DIRECT_V3(CommonMethod_keyboardShortcut, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShapeMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCommonShapeMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CommonShapeMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CommonShapeMethod_stroke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStroke(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_stroke, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setFill(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_fill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeDashOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeDashOffset(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeDashOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeLineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeLineCap(self, (const Opt_LineCapStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeLineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeLineJoin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineJoinStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineJoinStyle>(thisDeserializer.readInt32());
        }
        Opt_LineJoinStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeLineJoin(self, (const Opt_LineJoinStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeLineJoin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeMiterLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeMiterLimit(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeMiterLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeOpacity(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_fillOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setFillOpacity(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_fillOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_antiAlias(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setAntiAlias(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_antiAlias, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CommonShapeMethod_strokeDashArray(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Length value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readLength();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Length value_value = value_value_buf;;
        GetNodeModifiers()->getCommonShapeMethodModifier()->setStrokeDashArray(self, (const Opt_Array_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CommonShapeMethod_strokeDashArray, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScrollableCommonMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollableCommonMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ScrollableCommonMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollableCommonMethod_scrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBar(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_scrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_scrollBarColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String>(value_value_buf_);
        }
        Opt_Union_Color_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBarColor(self, (const Opt_Union_Color_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_scrollBarColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_scrollBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setScrollBarWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_scrollBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNestedScrollOptions();
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setNestedScroll(self, (const Opt_NestedScrollOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_enableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setEnableScrollInteraction(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_enableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_friction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFriction(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_friction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_onScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnScroll(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_onScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_onReachStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnReachStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_onReachStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_onReachEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnReachEnd(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_onReachEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_onScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnScrollStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_onScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_onScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setOnScrollStop(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_onScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_flingSpeedLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFlingSpeedLimit(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_flingSpeedLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_clipContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ContentClipMode_RectShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ContentClipMode_RectShape value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ContentClipMode>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_RectShape>(thisDeserializer.readRectShape());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ContentClipMode_RectShape>(value_value_buf_);
        }
        Opt_Union_ContentClipMode_RectShape value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setClipContent(self, (const Opt_Union_ContentClipMode_RectShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_clipContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_digitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setDigitalCrownSensitivity(self, (const Opt_CrownSensitivity*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_digitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_backToTop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setBackToTop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_backToTop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_edgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto edgeEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect edgeEffect_value_buf = {};
        edgeEffect_value_buf.tag = edgeEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (edgeEffect_value_buf_runtimeType))
        {
            edgeEffect_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect edgeEffect_value = edgeEffect_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readEdgeEffectOptions();
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setEdgeEffect(self, (const Opt_EdgeEffect*)&edgeEffect_value, (const Opt_EdgeEffectOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_edgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollableCommonMethod_fadingEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto enabled_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean enabled_value_buf = {};
        enabled_value_buf.tag = enabled_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (enabled_value_buf_runtimeType))
        {
            enabled_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean enabled_value = enabled_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FadingEdgeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readFadingEdgeOptions();
        }
        Opt_FadingEdgeOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollableCommonMethodModifier()->setFadingEdge(self, (const Opt_Boolean*)&enabled_value, (const Opt_FadingEdgeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollableCommonMethod_fadingEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Navigation_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavigationModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Navigation_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavigationInterface_setNavigationOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavigationModifier()->setNavigationOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(NavigationInterface_setNavigationOptions0, Ark_NativePointer)
void impl_NavigationInterface_setNavigationOptions1(Ark_NativePointer thisPtr, Ark_NativePointer pathInfos) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavigationModifier()->setNavigationOptions1(self, static_cast<Ark_NavPathStack>(pathInfos));
}
KOALA_INTEROP_DIRECT_V2(NavigationInterface_setNavigationOptions1, Ark_NativePointer, Ark_NativePointer)
void impl_NavigationAttribute_navBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_navBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_navBarPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavBarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavBarPosition>(thisDeserializer.readInt32());
        }
        Opt_NavBarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarPosition(self, (const Opt_NavBarPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_navBarPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_navBarWidthRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Tuple_Dimension_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Tuple_Dimension_Dimension value_value_buf_ = {};
            value_value_buf_.value0 = thisDeserializer.readLength();
            value_value_buf_.value1 = thisDeserializer.readLength();
            value_value_buf.value = value_value_buf_;
        }
        Opt_Tuple_Dimension_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavBarWidthRange(self, (const Opt_Tuple_Dimension_Dimension*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_navBarWidthRange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_minContentWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMinContentWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_minContentWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_mode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavigationMode>(thisDeserializer.readInt32());
        }
        Opt_NavigationMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMode(self, (const Opt_NavigationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_mode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_backButtonIcon0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setBackButtonIcon0(self, (const Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_backButtonIcon0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_backButtonIcon1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto icon_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value_buf = {};
        icon_value_buf.tag = icon_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (icon_value_buf_runtimeType))
        {
            const Ark_Int8 icon_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value_buf_ = {};
            icon_value_buf_.selector = icon_value_buf__selector;
            if (icon_value_buf__selector == 0) {
                icon_value_buf_.selector = 0;
                icon_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (icon_value_buf__selector == 1) {
                icon_value_buf_.selector = 1;
                icon_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else if (icon_value_buf__selector == 2) {
                icon_value_buf_.selector = 2;
                icon_value_buf_.value2 = thisDeserializer.readResource();
            }
            else if (icon_value_buf__selector == 3) {
                icon_value_buf_.selector = 3;
                icon_value_buf_.value3 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for icon_value_buf_ has to be chosen through deserialisation.");
            }
            icon_value_buf.value = static_cast<Ark_Union_String_PixelMap_Resource_SymbolGlyphModifier>(icon_value_buf_);
        }
        Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier icon_value = icon_value_buf;;
        const auto accessibilityText_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr accessibilityText_value_buf = {};
        accessibilityText_value_buf.tag = accessibilityText_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (accessibilityText_value_buf_runtimeType))
        {
            const Ark_Int8 accessibilityText_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr accessibilityText_value_buf_ = {};
            accessibilityText_value_buf_.selector = accessibilityText_value_buf__selector;
            if (accessibilityText_value_buf__selector == 0) {
                accessibilityText_value_buf_.selector = 0;
                accessibilityText_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (accessibilityText_value_buf__selector == 1) {
                accessibilityText_value_buf_.selector = 1;
                accessibilityText_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for accessibilityText_value_buf_ has to be chosen through deserialisation.");
            }
            accessibilityText_value_buf.value = static_cast<Ark_ResourceStr>(accessibilityText_value_buf_);
        }
        Opt_ResourceStr accessibilityText_value = accessibilityText_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setBackButtonIcon1(self, (const Opt_Union_String_PixelMap_Resource_SymbolGlyphModifier*)&icon_value, (const Opt_ResourceStr*)&accessibilityText_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_backButtonIcon1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideNavBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideNavBar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideNavBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_subTitle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setSubTitle(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_subTitle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideTitleBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideTitleBar0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideTitleBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideTitleBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (hide_value_buf_runtimeType))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideTitleBar1(self, (const Opt_Boolean*)&hide_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideTitleBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideBackButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideBackButton(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideBackButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_titleMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavigationTitleMode>(thisDeserializer.readInt32());
        }
        Opt_NavigationTitleMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setTitleMode(self, (const Opt_NavigationTitleMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_titleMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_menus0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readNavigationMenuItem();
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMenus0(self, (const Opt_Union_Array_NavigationMenuItem_CustomBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_menus0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_menus1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto items_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf = {};
        items_value_buf.tag = items_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (items_value_buf_runtimeType))
        {
            const Ark_Int8 items_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf_ = {};
            items_value_buf_.selector = items_value_buf__selector;
            if (items_value_buf__selector == 0) {
                items_value_buf_.selector = 0;
                const Ark_Int32 items_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem items_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(items_value_buf__u)>::type,
        std::decay<decltype(*items_value_buf__u.array)>::type>(&items_value_buf__u, items_value_buf__u_length);
                for (int items_value_buf__u_i = 0; items_value_buf__u_i < items_value_buf__u_length; items_value_buf__u_i++) {
                    items_value_buf__u.array[items_value_buf__u_i] = thisDeserializer.readNavigationMenuItem();
                }
                items_value_buf_.value0 = items_value_buf__u;
            }
            else if (items_value_buf__selector == 1) {
                items_value_buf_.selector = 1;
                items_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for items_value_buf_ has to be chosen through deserialisation.");
            }
            items_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(items_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value = items_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationMenuOptions();
        }
        Opt_NavigationMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setMenus1(self, (const Opt_Union_Array_NavigationMenuItem_CustomBuilder*)&items_value, (const Opt_NavigationMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_menus1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_toolBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setToolBar(self, (const Opt_CustomNodeBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_toolBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideToolBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideToolBar0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideToolBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_hideToolBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (hide_value_buf_runtimeType))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setHideToolBar1(self, (const Opt_Boolean*)&hide_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_hideToolBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_enableToolBarAdaptation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableToolBarAdaptation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_enableToolBarAdaptation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_onTitleModeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavigationTitleMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavigationTitleMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavigationTitleMode_Void))))};
        }
        Opt_Callback_NavigationTitleMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnTitleModeChange(self, (const Opt_Callback_NavigationTitleMode_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_onTitleModeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_onNavBarStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnNavBarStateChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_onNavBarStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_onNavigationModeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavigationMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavigationMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavigationMode_Void))))};
        }
        Opt_Callback_NavigationMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setOnNavigationModeChange(self, (const Opt_Callback_NavigationMode_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_onNavigationModeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_navDestination(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Opt_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Opt_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String name, const Opt_Object param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Opt_Object_Void))))};
        }
        Opt_Callback_String_Opt_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setNavDestination(self, (const Opt_Callback_String_Opt_Object_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_navDestination, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_customNavContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_NavigationAttribute_customNavContentTransition_delegate value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_NavigationAttribute_customNavContentTransition_delegate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavContentInfo from, const Ark_NavContentInfo to, Ark_NavigationOperation operation, const Callback_Opt_NavigationAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_NavigationAttribute_customNavContentTransition_delegate))))};
        }
        Opt_Type_NavigationAttribute_customNavContentTransition_delegate value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setCustomNavContentTransition(self, (const Opt_Type_NavigationAttribute_customNavContentTransition_delegate*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_customNavContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_systemBarStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemBarStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSystemBarStyle();
        }
        Opt_SystemBarStyle value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setSystemBarStyle(self, (const Opt_SystemBarStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_systemBarStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_recoverable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setRecoverable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_recoverable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_enableDragBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableDragBar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_enableDragBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_enableModeChangeAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setEnableModeChangeAnimation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_enableModeChangeAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_title(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_NavigationAttribute_title_value value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_NavigationAttribute_title_value value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readNavigationCommonTitle();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readNavigationCustomTitle();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_NavigationAttribute_title_value>(value_value_buf_);
        }
        Opt_Type_NavigationAttribute_title_value value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationTitleOptions();
        }
        Opt_NavigationTitleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setTitle(self, (const Opt_Type_NavigationAttribute_title_value*)&value_value, (const Opt_NavigationTitleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_title, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_toolbarConfiguration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_ToolbarItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_ToolbarItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ToolbarItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readToolbarItem();
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_ToolbarItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_ToolbarItem_CustomBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationToolbarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationToolbarOptions();
        }
        Opt_NavigationToolbarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setToolbarConfiguration(self, (const Opt_Union_Array_ToolbarItem_CustomBuilder*)&value_value, (const Opt_NavigationToolbarOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_toolbarConfiguration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigationAttribute_ignoreLayoutSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (types_value_buf_runtimeType))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_LayoutSafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_LayoutSafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (edges_value_buf_runtimeType))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_LayoutSafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_LayoutSafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getNavigationModifier()->setIgnoreLayoutSafeArea(self, (const Opt_Array_LayoutSafeAreaType*)&types_value, (const Opt_Array_LayoutSafeAreaEdge*)&edges_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationAttribute_ignoreLayoutSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Canvas_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCanvasModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Canvas_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CanvasInterface_setCanvasOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto context_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf = {};
        context_value_buf.tag = context_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (context_value_buf_runtimeType))
        {
            const Ark_Int8 context_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf_ = {};
            context_value_buf_.selector = context_value_buf__selector;
            if (context_value_buf__selector == 0) {
                context_value_buf_.selector = 0;
                context_value_buf_.value0 = static_cast<Ark_CanvasRenderingContext2D>(thisDeserializer.readCanvasRenderingContext2D());
            }
            else if (context_value_buf__selector == 1) {
                context_value_buf_.selector = 1;
                context_value_buf_.value1 = static_cast<Ark_DrawingRenderingContext>(thisDeserializer.readDrawingRenderingContext());
            }
            else {
                INTEROP_FATAL("One of the branches for context_value_buf_ has to be chosen through deserialisation.");
            }
            context_value_buf.value = static_cast<Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext>(context_value_buf_);
        }
        Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value = context_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setCanvasOptions0(self, (const Opt_Union_CanvasRenderingContext2D_DrawingRenderingContext*)&context_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasInterface_setCanvasOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasInterface_setCanvasOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 context_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value_buf = {};
        context_value_buf.selector = context_value_buf_selector;
        if (context_value_buf_selector == 0) {
            context_value_buf.selector = 0;
            context_value_buf.value0 = static_cast<Ark_CanvasRenderingContext2D>(thisDeserializer.readCanvasRenderingContext2D());
        }
        else if (context_value_buf_selector == 1) {
            context_value_buf.selector = 1;
            context_value_buf.value1 = static_cast<Ark_DrawingRenderingContext>(thisDeserializer.readDrawingRenderingContext());
        }
        else {
            INTEROP_FATAL("One of the branches for context_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext context_value = static_cast<Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext>(context_value_buf);;
        Ark_ImageAIOptions imageAIOptions_value = thisDeserializer.readImageAIOptions();;
        GetNodeModifiers()->getCanvasModifier()->setCanvasOptions1(self, (const Ark_Union_CanvasRenderingContext2D_DrawingRenderingContext*)&context_value, (const Ark_ImageAIOptions*)&imageAIOptions_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasInterface_setCanvasOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasAttribute_onReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setOnReady(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasAttribute_onReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasAttribute_enableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCanvasModifier()->setEnableAnalyzer(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasAttribute_enableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Checkbox_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCheckboxModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Checkbox_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CheckboxInterface_setCheckboxOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckboxOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readCheckboxOptions();
        }
        Opt_CheckboxOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setCheckboxOptions(self, (const Opt_CheckboxOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxInterface_setCheckboxOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_select0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelect0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_select0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_select1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelect1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_select1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_selectedColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelectedColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_selectedColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_selectedColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setSelectedColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_selectedColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_shape0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setShape0(self, (const Opt_CheckBoxShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_shape0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_shape1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setShape1(self, (const Opt_CheckBoxShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_shape1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_unselectedColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setUnselectedColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_unselectedColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_unselectedColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setUnselectedColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_unselectedColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_mark0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMarkStyle();
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setMark0(self, (const Opt_MarkStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_mark0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_mark1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMarkStyle();
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setMark1(self, (const Opt_MarkStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_mark1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxChangeCallback))))};
        }
        Opt_OnCheckboxChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setOnChange0(self, (const Opt_OnCheckboxChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxChangeCallback))))};
        }
        Opt_OnCheckboxChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setOnChange1(self, (const Opt_OnCheckboxChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_contentModifier0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setContentModifier0(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_contentModifier0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute_contentModifier1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxModifier()->setContentModifier1(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute_contentModifier1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxAttribute__onChangeEvent_select(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getCheckboxModifier()->set_onChangeEvent_select(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxAttribute__onChangeEvent_select, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CheckboxGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCheckboxGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(CheckboxGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CheckboxGroupInterface_setCheckboxGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckboxGroupOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readCheckboxGroupOptions();
        }
        Opt_CheckboxGroupOptions options_value = options_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setCheckboxGroupOptions(self, (const Opt_CheckboxGroupOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupInterface_setCheckboxGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_selectAll0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectAll0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_selectAll0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_selectAll1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectAll1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_selectAll1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_selectedColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectedColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_selectedColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_selectedColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setSelectedColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_selectedColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_unselectedColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setUnselectedColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_unselectedColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_unselectedColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setUnselectedColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_unselectedColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_mark0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMarkStyle();
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setMark0(self, (const Opt_MarkStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_mark0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_mark1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarkStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMarkStyle();
        }
        Opt_MarkStyle value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setMark1(self, (const Opt_MarkStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_mark1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxGroupChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxGroupChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxGroupChangeCallback))))};
        }
        Opt_OnCheckboxGroupChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setOnChange0(self, (const Opt_OnCheckboxGroupChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnCheckboxGroupChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnCheckboxGroupChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CheckboxGroupResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnCheckboxGroupChangeCallback))))};
        }
        Opt_OnCheckboxGroupChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setOnChange1(self, (const Opt_OnCheckboxGroupChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_checkboxShape0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setCheckboxShape0(self, (const Opt_CheckBoxShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_checkboxShape0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute_checkboxShape1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CheckBoxShape value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CheckBoxShape>(thisDeserializer.readInt32());
        }
        Opt_CheckBoxShape value_value = value_value_buf;;
        GetNodeModifiers()->getCheckboxGroupModifier()->setCheckboxShape1(self, (const Opt_CheckBoxShape*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute_checkboxShape1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CheckboxGroupAttribute__onChangeEvent_selectAll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getCheckboxGroupModifier()->set_onChangeEvent_selectAll(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(CheckboxGroupAttribute__onChangeEvent_selectAll, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Circle_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCircleModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Circle_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CircleInterface_setCircleOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CircleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCircleOptions();
        }
        Opt_CircleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getCircleModifier()->setCircleOptions(self, (const Opt_CircleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CircleInterface_setCircleOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Column_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getColumnModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Column_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ColumnInterface_setColumnOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ColumnOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readColumnOptions();
        }
        Opt_ColumnOptions options_value = options_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setColumnOptions0(self, (const Opt_ColumnOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnInterface_setColumnOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnInterface_setColumnOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColumnOptions_ColumnOptionsV2 options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColumnOptions_ColumnOptionsV2 options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = thisDeserializer.readColumnOptions();
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = thisDeserializer.readColumnOptionsV2();
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_ColumnOptions_ColumnOptionsV2>(options_value_buf_);
        }
        Opt_Union_ColumnOptions_ColumnOptionsV2 options_value = options_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setColumnOptions1(self, (const Opt_Union_ColumnOptions_ColumnOptionsV2*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnInterface_setColumnOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_alignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HorizontalAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_HorizontalAlign>(thisDeserializer.readInt32());
        }
        Opt_HorizontalAlign value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setAlignItems(self, (const Opt_HorizontalAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_alignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_justifyContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FlexAlign>(thisDeserializer.readInt32());
        }
        Opt_FlexAlign value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setJustifyContent(self, (const Opt_FlexAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_justifyContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_pointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPointLightStyle();
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setPointLight(self, (const Opt_PointLightStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_pointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnAttribute_reverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getColumnModifier()->setReverse(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnAttribute_reverse, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColumnSplit_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getColumnSplitModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ColumnSplit_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ColumnSplitInterface_setColumnSplitOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getColumnSplitModifier()->setColumnSplitOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ColumnSplitInterface_setColumnSplitOptions, Ark_NativePointer)
void impl_ColumnSplitAttribute_resizeable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getColumnSplitModifier()->setResizeable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnSplitAttribute_resizeable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ColumnSplitAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ColumnSplitDividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readColumnSplitDividerStyle();
        }
        Opt_ColumnSplitDividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getColumnSplitModifier()->setDivider(self, (const Opt_ColumnSplitDividerStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ColumnSplitAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Component3D_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getComponent3DModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Component3D_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_Component3DInterface_setComponent3DOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto sceneOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SceneOptions sceneOptions_value_buf = {};
        sceneOptions_value_buf.tag = sceneOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sceneOptions_value_buf_runtimeType))
        {
            sceneOptions_value_buf.value = thisDeserializer.readSceneOptions();
        }
        Opt_SceneOptions sceneOptions_value = sceneOptions_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setComponent3DOptions(self, (const Opt_SceneOptions*)&sceneOptions_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DInterface_setComponent3DOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_environment(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setEnvironment(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_environment, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_shader(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setShader(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_shader, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_shaderImageTexture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setShaderImageTexture(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_shaderImageTexture, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_shaderInputBuffer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Number value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Number value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setShaderInputBuffer(self, (const Opt_Array_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_shaderInputBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_renderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setRenderWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_renderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_renderHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setRenderHeight(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_renderHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Component3DAttribute_customRender(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto uri_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr uri_value_buf = {};
        uri_value_buf.tag = uri_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (uri_value_buf_runtimeType))
        {
            const Ark_Int8 uri_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr uri_value_buf_ = {};
            uri_value_buf_.selector = uri_value_buf__selector;
            if (uri_value_buf__selector == 0) {
                uri_value_buf_.selector = 0;
                uri_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (uri_value_buf__selector == 1) {
                uri_value_buf_.selector = 1;
                uri_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for uri_value_buf_ has to be chosen through deserialisation.");
            }
            uri_value_buf.value = static_cast<Ark_ResourceStr>(uri_value_buf_);
        }
        Opt_ResourceStr uri_value = uri_value_buf;;
        const auto selfRenderUpdate_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean selfRenderUpdate_value_buf = {};
        selfRenderUpdate_value_buf.tag = selfRenderUpdate_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (selfRenderUpdate_value_buf_runtimeType))
        {
            selfRenderUpdate_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean selfRenderUpdate_value = selfRenderUpdate_value_buf;;
        GetNodeModifiers()->getComponent3DModifier()->setCustomRender(self, (const Opt_ResourceStr*)&uri_value, (const Opt_Boolean*)&selfRenderUpdate_value);
}
KOALA_INTEROP_DIRECT_V3(Component3DAttribute_customRender, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ContainerSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getContainerSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ContainerSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ContainerSpanInterface_setContainerSpanOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getContainerSpanModifier()->setContainerSpanOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ContainerSpanInterface_setContainerSpanOptions, Ark_NativePointer)
void impl_ContainerSpanAttribute_textBackgroundStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextBackgroundStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextBackgroundStyle();
        }
        Opt_TextBackgroundStyle value_value = value_value_buf;;
        GetNodeModifiers()->getContainerSpanModifier()->setTextBackgroundStyle(self, (const Opt_TextBackgroundStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ContainerSpanAttribute_textBackgroundStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Counter_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getCounterModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Counter_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_CounterInterface_setCounterOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getCounterModifier()->setCounterOptions(self);
}
KOALA_INTEROP_DIRECT_V1(CounterInterface_setCounterOptions, Ark_NativePointer)
void impl_CounterAttribute_onInc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setOnInc(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_onInc, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_onDec(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setOnDec(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_onDec, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_enableDec(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setEnableDec(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_enableDec, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CounterAttribute_enableInc(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getCounterModifier()->setEnableInc(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CounterAttribute_enableInc, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DataPanel_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDataPanelModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(DataPanel_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DataPanelInterface_setDataPanelOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DataPanelOptions options_value = thisDeserializer.readDataPanelOptions();;
        GetNodeModifiers()->getDataPanelModifier()->setDataPanelOptions(self, (const Ark_DataPanelOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelInterface_setDataPanelOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_closeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setCloseEffect(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_closeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_valueColors(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_Union_ResourceColor_LinearGradient value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    const Ark_Int8 value_value_buf__buf_u_selector = thisDeserializer.readInt8();
                    Ark_ResourceColor value_value_buf__buf_u = {};
                    value_value_buf__buf_u.selector = value_value_buf__buf_u_selector;
                    if (value_value_buf__buf_u_selector == 0) {
                        value_value_buf__buf_u.selector = 0;
                        value_value_buf__buf_u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                    }
                    else if (value_value_buf__buf_u_selector == 1) {
                        value_value_buf__buf_u.selector = 1;
                        value_value_buf__buf_u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    }
                    else if (value_value_buf__buf_u_selector == 2) {
                        value_value_buf__buf_u.selector = 2;
                        value_value_buf__buf_u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                    }
                    else if (value_value_buf__buf_u_selector == 3) {
                        value_value_buf__buf_u.selector = 3;
                        value_value_buf__buf_u.value3 = thisDeserializer.readResource();
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__buf_u has to be chosen through deserialisation.");
                    }
                    value_value_buf__buf.value0 = static_cast<Ark_ResourceColor>(value_value_buf__buf_u);
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setValueColors(self, (const Opt_Array_Union_ResourceColor_LinearGradient*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_valueColors, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_trackBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setTrackBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_trackBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_strokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setStrokeWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_strokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_trackShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DataPanelShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDataPanelShadowOptions();
        }
        Opt_DataPanelShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setTrackShadow(self, (const Opt_DataPanelShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_trackShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DataPanelAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getDataPanelModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DataPanelAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DatePicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDatePickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(DatePicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DatePickerInterface_setDatePickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DatePickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readDatePickerOptions();
        }
        Opt_DatePickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDatePickerOptions(self, (const Opt_DatePickerOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerInterface_setDatePickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_lunar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setLunar0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_lunar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_lunar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setLunar1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_lunar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_disappearTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDisappearTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_disappearTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_disappearTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDisappearTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_disappearTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_textStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_textStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_textStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_textStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_selectedTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setSelectedTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_selectedTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_selectedTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setSelectedTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_selectedTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DatePickerResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DatePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DatePickerResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DatePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DatePickerResult_Void))))};
        }
        Opt_Callback_DatePickerResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setOnChange(self, (const Opt_Callback_DatePickerResult_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_onDateChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setOnDateChange0(self, (const Opt_Callback_Date_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_onDateChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_onDateChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Date_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};
        }
        Opt_Callback_Date_Void value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setOnDateChange1(self, (const Opt_Callback_Date_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_onDateChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_digitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setDigitalCrownSensitivity(self, (const Opt_CrownSensitivity*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_digitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDatePickerModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DatePickerAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Date_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};;
        GetNodeModifiers()->getDatePickerModifier()->set_onChangeEvent_selected(self, (const Callback_Date_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(DatePickerAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NodeContainerInterface_addNodeContainerRootNode(Ark_NativePointer thisPtr, Ark_NativePointer childPtr) {
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Ark_NodeHandle child = reinterpret_cast<Ark_NodeHandle>(childPtr);
    GetNodeModifiers()->getNodeContainerModifier()->addNodeContainerRootNode(self, child);
}
KOALA_INTEROP_DIRECT_V2(NodeContainerInterface_addNodeContainerRootNode, Ark_NativePointer, Ark_NativePointer)
void impl_NodeContainerInterface_setAboutToAppear(
Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_Void value_value = { thisDeserializer.readCallbackResource(),
        reinterpret_cast<void (*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(
            reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))),
        reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(
            thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void)))) };
    GetNodeModifiers()->getNodeContainerModifier()->setAboutToAppear(self, (const Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setAboutToAppear, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
Ark_NativePointer impl_Divider_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getDividerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Divider_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_DividerInterface_setDividerOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getDividerModifier()->setDividerOptions(self);
}
KOALA_INTEROP_DIRECT_V1(DividerInterface_setDividerOptions, Ark_NativePointer)
void impl_DividerAttribute_vertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setVertical(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_vertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_strokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setStrokeWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_strokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DividerAttribute_lineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getDividerModifier()->setLineCap(self, (const Opt_LineCapStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(DividerAttribute_lineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EffectComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEffectComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(EffectComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EffectComponentInterface_setEffectComponentOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getEffectComponentModifier()->setEffectComponentOptions(self);
}
KOALA_INTEROP_DIRECT_V1(EffectComponentInterface_setEffectComponentOptions, Ark_NativePointer)
Ark_NativePointer impl_Ellipse_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEllipseModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Ellipse_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EllipseInterface_setEllipseOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipseOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readEllipseOptions();
        }
        Opt_EllipseOptions options_value = options_value_buf;;
        GetNodeModifiers()->getEllipseModifier()->setEllipseOptions(self, (const Opt_EllipseOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(EllipseInterface_setEllipseOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EmbeddedComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getEmbeddedComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(EmbeddedComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_EmbeddedComponentInterface_setEmbeddedComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 type) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Want loader_value = thisDeserializer.readWant();;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setEmbeddedComponentOptions(self, (const Ark_Want*)&loader_value, static_cast<Ark_EmbeddedType>(type));
}
KOALA_INTEROP_DIRECT_V4(EmbeddedComponentInterface_setEmbeddedComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
void impl_EmbeddedComponentAttribute_onTerminated(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TerminationInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TerminationInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TerminationInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TerminationInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TerminationInfo_Void))))};
        }
        Opt_Callback_TerminationInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setOnTerminated(self, (const Opt_Callback_TerminationInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(EmbeddedComponentAttribute_onTerminated, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_EmbeddedComponentAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BusinessError err)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BusinessError err)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ErrorCallback))))};
        }
        Opt_ErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getEmbeddedComponentModifier()->setOnError(self, (const Opt_ErrorCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(EmbeddedComponentAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Flex_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFlexModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Flex_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FlexInterface_setFlexOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFlexOptions();
        }
        Opt_FlexOptions value_value = value_value_buf;;
        GetNodeModifiers()->getFlexModifier()->setFlexOptions(self, (const Opt_FlexOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FlexInterface_setFlexOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FlexAttribute_pointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPointLightStyle();
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getFlexModifier()->setPointLight(self, (const Opt_PointLightStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FlexAttribute_pointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FlowItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFlowItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FlowItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FlowItemInterface_setFlowItemOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getFlowItemModifier()->setFlowItemOptions(self);
}
KOALA_INTEROP_DIRECT_V1(FlowItemInterface_setFlowItemOptions, Ark_NativePointer)
Ark_NativePointer impl_FolderStack_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFolderStackModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FolderStack_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FolderStackInterface_setFolderStackOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FolderStackOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readFolderStackOptions();
        }
        Opt_FolderStackOptions options_value = options_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setFolderStackOptions(self, (const Opt_FolderStackOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackInterface_setFolderStackOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_alignContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setAlignContent(self, (const Opt_Alignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_alignContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_onFolderStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFoldStatusChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFoldStatusChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFoldStatusChangeInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFoldStatusChangeCallback))))};
        }
        Opt_OnFoldStatusChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setOnFolderStateChange(self, (const Opt_OnFoldStatusChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_onFolderStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_onHoverStatusChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnHoverStatusChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_HoverEventParam param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnHoverStatusChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_HoverEventParam param)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnHoverStatusChangeCallback))))};
        }
        Opt_OnHoverStatusChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setOnHoverStatusChange(self, (const Opt_OnHoverStatusChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_onHoverStatusChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_enableAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setEnableAnimation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_enableAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FolderStackAttribute_autoHalfFold(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFolderStackModifier()->setAutoHalfFold(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FolderStackAttribute_autoHalfFold, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FormComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFormComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FormComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FormComponentInterface_setFormComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_FormInfo value_value = thisDeserializer.readFormInfo();;
        GetNodeModifiers()->getFormComponentModifier()->setFormComponentOptions(self, (const Ark_FormInfo*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentInterface_setFormComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSizeOptions();
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setSize(self, (const Opt_SizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_size, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_moduleName(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setModuleName(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_moduleName, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_dimension(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FormDimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FormDimension>(thisDeserializer.readInt32());
        }
        Opt_FormDimension value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setDimension(self, (const Opt_FormDimension*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_dimension, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_allowUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setAllowUpdate(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_allowUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_visibility(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Visibility value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Visibility>(thisDeserializer.readInt32());
        }
        Opt_Visibility value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setVisibility(self, (const Opt_Visibility*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_visibility, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_onAcquired(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FormCallbackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FormCallbackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FormCallbackInfo_Void))))};
        }
        Opt_Callback_FormCallbackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnAcquired(self, (const Opt_Callback_FormCallbackInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_onAcquired, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Literal_Number_errcode_String_msg_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Literal_Number_errcode_String_msg info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Literal_Number_errcode_String_msg_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Literal_Number_errcode_String_msg info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Literal_Number_errcode_String_msg_Void))))};
        }
        Opt_Callback_Literal_Number_errcode_String_msg_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnError(self, (const Opt_Callback_Literal_Number_errcode_String_msg_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_onRouter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Any_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Object info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Any_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Object info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Any_Void))))};
        }
        Opt_Callback_Any_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnRouter(self, (const Opt_Callback_Any_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_onRouter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_onUninstall(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FormCallbackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FormCallbackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FormCallbackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FormCallbackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FormCallbackInfo_Void))))};
        }
        Opt_Callback_FormCallbackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnUninstall(self, (const Opt_Callback_FormCallbackInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_onUninstall, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_FormComponentAttribute_onLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getFormComponentModifier()->setOnLoad(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(FormComponentAttribute_onLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FormLink_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getFormLinkModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(FormLink_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_FormLinkInterface_setFormLinkOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_FormLinkOptions options_value = thisDeserializer.readFormLinkOptions();;
        GetNodeModifiers()->getFormLinkModifier()->setFormLinkOptions(self, (const Ark_FormLinkOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(FormLinkInterface_setFormLinkOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Gauge_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGaugeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Gauge_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GaugeInterface_setGaugeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_GaugeOptions options_value = thisDeserializer.readGaugeOptions();;
        GetNodeModifiers()->getGaugeModifier()->setGaugeOptions(self, (const Ark_GaugeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeInterface_setGaugeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setValue(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_value, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_startAngle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setStartAngle(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_startAngle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_endAngle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setEndAngle(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_endAngle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_colors(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_GaugeAttribute_colors_colors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_GaugeAttribute_colors_colors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    Ark_Tuple_Union_ResourceColor_LinearGradient_Number value_value_buf__u_buf = {};
                    const Ark_Int8 value_value_buf__u_buf_value0_buf_selector = thisDeserializer.readInt8();
                    Ark_Union_ResourceColor_LinearGradient value_value_buf__u_buf_value0_buf = {};
                    value_value_buf__u_buf_value0_buf.selector = value_value_buf__u_buf_value0_buf_selector;
                    if (value_value_buf__u_buf_value0_buf_selector == 0) {
                        value_value_buf__u_buf_value0_buf.selector = 0;
                        const Ark_Int8 value_value_buf__u_buf_value0_buf_u_selector = thisDeserializer.readInt8();
                        Ark_ResourceColor value_value_buf__u_buf_value0_buf_u = {};
                        value_value_buf__u_buf_value0_buf_u.selector = value_value_buf__u_buf_value0_buf_u_selector;
                        if (value_value_buf__u_buf_value0_buf_u_selector == 0) {
                            value_value_buf__u_buf_value0_buf_u.selector = 0;
                            value_value_buf__u_buf_value0_buf_u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 1) {
                            value_value_buf__u_buf_value0_buf_u.selector = 1;
                            value_value_buf__u_buf_value0_buf_u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 2) {
                            value_value_buf__u_buf_value0_buf_u.selector = 2;
                            value_value_buf__u_buf_value0_buf_u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                        }
                        else if (value_value_buf__u_buf_value0_buf_u_selector == 3) {
                            value_value_buf__u_buf_value0_buf_u.selector = 3;
                            value_value_buf__u_buf_value0_buf_u.value3 = thisDeserializer.readResource();
                        }
                        else {
                            INTEROP_FATAL("One of the branches for value_value_buf__u_buf_value0_buf_u has to be chosen through deserialisation.");
                        }
                        value_value_buf__u_buf_value0_buf.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u_buf_value0_buf_u);
                    }
                    else if (value_value_buf__u_buf_value0_buf_selector == 1) {
                        value_value_buf__u_buf_value0_buf.selector = 1;
                        value_value_buf__u_buf_value0_buf.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__u_buf_value0_buf has to be chosen through deserialisation.");
                    }
                    value_value_buf__u_buf.value0 = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf__u_buf_value0_buf);
                    value_value_buf__u_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    value_value_buf__u.array[value_value_buf__u_i] = value_value_buf__u_buf;
                }
                value_value_buf_.value2 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_GaugeAttribute_colors_colors>(value_value_buf_);
        }
        Opt_Type_GaugeAttribute_colors_colors value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setColors(self, (const Opt_Type_GaugeAttribute_colors_colors*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_colors, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_strokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setStrokeWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_strokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_description(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setDescription(self, (const Opt_CustomNodeBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_description, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NodeContainerInterface_setAboutToDisappear(
    Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void value_value = { thisDeserializer.readCallbackResource(),
            reinterpret_cast<void (*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))),
            reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(
                thisDeserializer.readPointerOrDefault(
                    reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void)))) };
        GetNodeModifiers()->getNodeContainerModifier()->setAboutToDisappear(self, (const Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setAboutToDisappear, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
void impl_NodeContainerInterface_setAboutToResize(
    Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        NodeContainer_AboutToResizeCallback callback_value = { thisDeserializer.readCallbackResource(),
            reinterpret_cast<void (*)(const Ark_Int32 resourceId, const Ark_Size size)>(
                thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(
                    getManagedCallbackCaller(Kind_NodeContainer_AboutToResizeCallback)))),
            reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Size size)>(
                thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(
                    getManagedCallbackCallerSync(Kind_NodeContainer_AboutToResizeCallback)))) };
        ;
        GetNodeModifiers()->getNodeContainerModifier()->setAboutToResize(
            self, (const NodeContainer_AboutToResizeCallback*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setAboutToResize, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
void impl_NodeContainerInterface_setOnAttach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void value_value = { thisDeserializer.readCallbackResource(),
            reinterpret_cast<void (*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))),
            reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(
                thisDeserializer.readPointerOrDefault(
                    reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void)))) };
        GetNodeModifiers()->getNodeContainerModifier()->setOnAttach(self, (const Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setOnAttach, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
void impl_NodeContainerInterface_setOnDetach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void value_value = { thisDeserializer.readCallbackResource(),
            reinterpret_cast<void (*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))),
            reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(
                thisDeserializer.readPointerOrDefault(
                    reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void)))) };
        GetNodeModifiers()->getNodeContainerModifier()->setOnDetach(self, (const Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setOnDetach, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
void impl_NodeContainerInterface_setOnTouchEvent(
    Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength)
{
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_Void value_value_buf = {};
        value_value_buf.tag =
            value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType)) {
            value_value_buf.value = { thisDeserializer.readCallbackResource(),
                reinterpret_cast<void (*)(const Ark_Int32 resourceId, const Ark_TouchEvent event)>(
                    thisDeserializer.readPointerOrDefault(
                        reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_Void)))),
                reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event)>(
                    thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(
                        getManagedCallbackCallerSync(Kind_Callback_TouchEvent_Void)))) };
        }
        Opt_Callback_TouchEvent_Void value_value = value_value_buf;
        GetNodeModifiers()->getCommonMethodModifier()->setOnTouch(self, (const Opt_Callback_TouchEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setOnTouchEvent, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
void impl_GaugeAttribute_trackShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GaugeShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readGaugeShadowOptions();
        }
        Opt_GaugeShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setTrackShadow(self, (const Opt_GaugeShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_trackShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_indicator(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GaugeIndicatorOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readGaugeIndicatorOptions();
        }
        Opt_GaugeIndicatorOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setIndicator(self, (const Opt_GaugeIndicatorOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_indicator, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_privacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setPrivacySensitive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_privacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GaugeAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getGaugeModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GaugeAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Grid_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Grid_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridInterface_setGridOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scroller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Scroller scroller_value_buf = {};
        scroller_value_buf.tag = scroller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scroller_value_buf_runtimeType))
        {
            scroller_value_buf.value = static_cast<Ark_Scroller>(thisDeserializer.readScroller());
        }
        Opt_Scroller scroller_value = scroller_value_buf;;
        const auto layoutOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridLayoutOptions layoutOptions_value_buf = {};
        layoutOptions_value_buf.tag = layoutOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (layoutOptions_value_buf_runtimeType))
        {
            layoutOptions_value_buf.value = thisDeserializer.readGridLayoutOptions();
        }
        Opt_GridLayoutOptions layoutOptions_value = layoutOptions_value_buf;;
        GetNodeModifiers()->getGridModifier()->setGridOptions(self, (const Opt_Scroller*)&scroller_value, (const Opt_GridLayoutOptions*)&layoutOptions_value);
}
KOALA_INTEROP_DIRECT_V3(GridInterface_setGridOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_columnsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setColumnsTemplate(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_columnsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_rowsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setRowsTemplate(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_rowsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_columnsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setColumnsGap(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_columnsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_rowsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setRowsGap(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_rowsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_scrollBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setScrollBarWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_scrollBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_scrollBarColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String>(value_value_buf_);
        }
        Opt_Union_Color_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setScrollBarColor(self, (const Opt_Union_Color_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_scrollBarColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_scrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setScrollBar(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_scrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScrollBarUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_ComputedBarAttribute value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_ComputedBarAttribute)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number offset, const Callback_ComputedBarAttribute_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_ComputedBarAttribute))))};
        }
        Opt_Callback_Number_Number_ComputedBarAttribute value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollBarUpdate(self, (const Opt_Callback_Number_Number_ComputedBarAttribute*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScrollBarUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollIndex(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_cachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCachedCount0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_cachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_cachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (show_value_buf_runtimeType))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCachedCount1(self, (const Opt_Number*)&count_value, (const Opt_Boolean*)&show_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_cachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_editMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setEditMode(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_editMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_multiSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMultiSelectable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_multiSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_maxCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMaxCount(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_maxCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_minCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setMinCount(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_minCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_cellLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setCellLength(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_cellLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_layoutDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_GridDirection>(thisDeserializer.readInt32());
        }
        Opt_GridDirection value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setLayoutDirection(self, (const Opt_GridDirection*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_layoutDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_supportAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setSupportAnimation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_supportAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onItemDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridAttribute_onItemDragStart_event_type value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_GridAttribute_onItemDragStart_event_type)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_GridAttribute_onItemDragStart_event_type))))};
        }
        Opt_GridAttribute_onItemDragStart_event_type value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragStart(self, (const Opt_GridAttribute_onItemDragStart_event_type*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onItemDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onItemDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Void))))};
        }
        Opt_Callback_ItemDragInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragEnter(self, (const Opt_Callback_ItemDragInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onItemDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onItemDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragMove(self, (const Opt_Callback_ItemDragInfo_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onItemDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onItemDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDragLeave(self, (const Opt_Callback_ItemDragInfo_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onItemDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onItemDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnItemDrop(self, (const Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onItemDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNestedScrollOptions();
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setNestedScroll(self, (const Opt_NestedScrollOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_enableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setEnableScrollInteraction(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_enableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_friction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setFriction(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_friction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_alignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridItemAlignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_GridItemAlignment>(thisDeserializer.readInt32());
        }
        Opt_GridItemAlignment value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setAlignItems(self, (const Opt_GridItemAlignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_alignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScroll(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onReachStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnReachStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onReachStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onReachEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnReachEnd(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onReachEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollStop(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnScrollFrameBegin(self, (const Opt_OnScrollFrameBeginCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnWillScroll(self, (const Opt_OnWillScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_onDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getGridModifier()->setOnDidScroll(self, (const Opt_OnScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_onDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridAttribute_edgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readEdgeEffectOptions();
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getGridModifier()->setEdgeEffect(self, (const Opt_EdgeEffect*)&value_value, (const Opt_EdgeEffectOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(GridAttribute_edgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridItemInterface_setGridItemOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridItemOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readGridItemOptions();
        }
        Opt_GridItemOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setGridItemOptions(self, (const Opt_GridItemOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemInterface_setGridItemOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_rowStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setRowStart(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_rowStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_rowEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setRowEnd(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_rowEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_columnStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setColumnStart(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_columnStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_columnEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setColumnEnd(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_columnEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_forceRebuild(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setForceRebuild(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_forceRebuild, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_selectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setSelectable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_selectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setSelected(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute_onSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridItemModifier()->setOnSelect(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute_onSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridItemAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getGridItemModifier()->set_onChangeEvent_selected(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(GridItemAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridCol_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridColModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridCol_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridColInterface_setGridColOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridColOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (option_value_buf_runtimeType))
        {
            option_value_buf.value = thisDeserializer.readGridColOptions();
        }
        Opt_GridColOptions option_value = option_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setGridColOptions(self, (const Opt_GridColOptions*)&option_value);
}
KOALA_INTEROP_DIRECT_V3(GridColInterface_setGridColOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_span(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readGridColColumnOption();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setSpan(self, (const Opt_Union_Number_GridColColumnOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_span, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_gridColOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readGridColColumnOption();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setGridColOffset(self, (const Opt_Union_Number_GridColColumnOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_gridColOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridColAttribute_order(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_GridColColumnOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_GridColColumnOption value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readGridColColumnOption();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_GridColColumnOption>(value_value_buf_);
        }
        Opt_Union_Number_GridColColumnOption value_value = value_value_buf;;
        GetNodeModifiers()->getGridColModifier()->setOrder(self, (const Opt_Union_Number_GridColColumnOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridColAttribute_order, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridContainerInterface_setGridContainerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridContainerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readGridContainerOptions();
        }
        Opt_GridContainerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getGridContainerModifier()->setGridContainerOptions(self, (const Opt_GridContainerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridContainerInterface_setGridContainerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GridRow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getGridRowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(GridRow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_GridRowInterface_setGridRowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GridRowOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (option_value_buf_runtimeType))
        {
            option_value_buf.value = thisDeserializer.readGridRowOptions();
        }
        Opt_GridRowOptions option_value = option_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setGridRowOptions(self, (const Opt_GridRowOptions*)&option_value);
}
KOALA_INTEROP_DIRECT_V3(GridRowInterface_setGridRowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridRowAttribute_onBreakpointChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setOnBreakpointChange(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridRowAttribute_onBreakpointChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GridRowAttribute_alignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getGridRowModifier()->setAlignItems(self, (const Opt_ItemAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(GridRowAttribute_alignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Hyperlink_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getHyperlinkModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Hyperlink_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_HyperlinkInterface_setHyperlinkOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 address_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource address_value_buf = {};
        address_value_buf.selector = address_value_buf_selector;
        if (address_value_buf_selector == 0) {
            address_value_buf.selector = 0;
            address_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (address_value_buf_selector == 1) {
            address_value_buf.selector = 1;
            address_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for address_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource address_value = static_cast<Ark_Union_String_Resource>(address_value_buf);;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_String_Resource>(content_value_buf_);
        }
        Opt_Union_String_Resource content_value = content_value_buf;;
        GetNodeModifiers()->getHyperlinkModifier()->setHyperlinkOptions(self, (const Ark_Union_String_Resource*)&address_value, (const Opt_Union_String_Resource*)&content_value);
}
KOALA_INTEROP_DIRECT_V3(HyperlinkInterface_setHyperlinkOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_HyperlinkAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Color_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getHyperlinkModifier()->setColor(self, (const Opt_Union_Color_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(HyperlinkAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Image_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Image_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageInterface_setImageOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor>(src_value_buf);;
        GetNodeModifiers()->getImageModifier()->setImageOptions0(self, (const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor*)&src_value);
}
KOALA_INTEROP_DIRECT_V3(ImageInterface_setImageOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageInterface_setImageOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        else if (src_value_buf_selector == 3) {
            src_value_buf.selector = 3;
            src_value_buf.value3 = static_cast<Ark_ImageContent>(thisDeserializer.readInt32());
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent>(src_value_buf);;
        GetNodeModifiers()->getImageModifier()->setImageOptions1(self, (const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ImageContent*)&src_value);
}
KOALA_INTEROP_DIRECT_V3(ImageInterface_setImageOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageInterface_setImageOptions2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor>(src_value_buf);;
        Ark_ImageAIOptions imageAIOptions_value = thisDeserializer.readImageAIOptions();;
        GetNodeModifiers()->getImageModifier()->setImageOptions2(self, (const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor*)&src_value, (const Ark_ImageAIOptions*)&imageAIOptions_value);
}
KOALA_INTEROP_DIRECT_V3(ImageInterface_setImageOptions2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_alt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource_PixelMap value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource_PixelMap>(value_value_buf_);
        }
        Opt_Union_String_Resource_PixelMap value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAlt(self, (const Opt_Union_String_Resource_PixelMap*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_alt, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_matchTextDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setMatchTextDirection(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_matchTextDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_fitOriginalSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setFitOriginalSize(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_fitOriginalSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_fillColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setFillColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_fillColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_fillColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_ColorContent value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_ColorContent value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readColorContent();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_ColorContent>(value_value_buf_);
        }
        Opt_Union_ResourceColor_ColorContent value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setFillColor1(self, (const Opt_Union_ResourceColor_ColorContent*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_fillColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_objectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setObjectFit(self, (const Opt_ImageFit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_objectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_imageMatrix(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix4Transit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Matrix4Transit>(thisDeserializer.readMatrix4Transit());
        }
        Opt_Matrix4Transit value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setImageMatrix(self, (const Opt_Matrix4Transit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_imageMatrix, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_objectRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRepeat value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageRepeat>(thisDeserializer.readInt32());
        }
        Opt_ImageRepeat value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setObjectRepeat(self, (const Opt_ImageRepeat*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_objectRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_autoResize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAutoResize(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_autoResize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_renderMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRenderMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageRenderMode>(thisDeserializer.readInt32());
        }
        Opt_ImageRenderMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setRenderMode(self, (const Opt_ImageRenderMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_renderMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_dynamicRangeMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DynamicRangeMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_DynamicRangeMode>(thisDeserializer.readInt32());
        }
        Opt_DynamicRangeMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setDynamicRangeMode(self, (const Opt_DynamicRangeMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_dynamicRangeMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_interpolation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageInterpolation value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageInterpolation>(thisDeserializer.readInt32());
        }
        Opt_ImageInterpolation value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setInterpolation(self, (const Opt_ImageInterpolation*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_interpolation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_sourceSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageSourceSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readImageSourceSize();
        }
        Opt_ImageSourceSize value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setSourceSize(self, (const Opt_ImageSourceSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_sourceSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_syncLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setSyncLoad(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_syncLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_colorFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColorFilter_DrawingColorFilter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColorFilter_DrawingColorFilter value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ColorFilter>(thisDeserializer.readColorFilter());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_DrawingColorFilter>(thisDeserializer.readDrawingColorFilter());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ColorFilter_DrawingColorFilter>(value_value_buf_);
        }
        Opt_Union_ColorFilter_DrawingColorFilter value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setColorFilter(self, (const Opt_Union_ColorFilter_DrawingColorFilter*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_colorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_copyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setCopyOption(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_copyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_draggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setDraggable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_draggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_pointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPointLightStyle();
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setPointLight(self, (const Opt_PointLightStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_pointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_edgeAntialiasing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEdgeAntialiasing(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_edgeAntialiasing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_onComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Type_ImageAttribute_onComplete_callback_event_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Type_ImageAttribute_onComplete_callback_event event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Type_ImageAttribute_onComplete_callback_event_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Type_ImageAttribute_onComplete_callback_event event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Type_ImageAttribute_onComplete_callback_event_Void))))};
        }
        Opt_Callback_Type_ImageAttribute_onComplete_callback_event_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnComplete(self, (const Opt_Callback_Type_ImageAttribute_onComplete_callback_event_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_onComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageErrorCallback))))};
        }
        Opt_ImageErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnError(self, (const Opt_ImageErrorCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOnFinish(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_enableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEnableAnalyzer(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_enableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_analyzerConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageAnalyzerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readImageAnalyzerConfig();
        }
        Opt_ImageAnalyzerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setAnalyzerConfig(self, (const Opt_ImageAnalyzerConfig*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_analyzerConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_resizable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResizableOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readResizableOptions();
        }
        Opt_ResizableOptions value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setResizable(self, (const Opt_ResizableOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_resizable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_privacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setPrivacySensitive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_privacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_enhancedImageQuality(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResolutionQuality value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ResolutionQuality>(thisDeserializer.readInt32());
        }
        Opt_ResolutionQuality value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setEnhancedImageQuality(self, (const Opt_ResolutionQuality*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_enhancedImageQuality, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAttribute_orientation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageRotateOrientation value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageRotateOrientation>(thisDeserializer.readInt32());
        }
        Opt_ImageRotateOrientation value_value = value_value_buf;;
        GetNodeModifiers()->getImageModifier()->setOrientation(self, (const Opt_ImageRotateOrientation*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAttribute_orientation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageAnimator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageAnimatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ImageAnimator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageAnimatorInterface_setImageAnimatorOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getImageAnimatorModifier()->setImageAnimatorOptions(self);
}
KOALA_INTEROP_DIRECT_V1(ImageAnimatorInterface_setImageAnimatorOptions, Ark_NativePointer)
void impl_ImageAnimatorAttribute_images(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ImageFrameInfo value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ImageFrameInfo value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readImageFrameInfo();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ImageFrameInfo value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setImages(self, (const Opt_Array_ImageFrameInfo*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_images, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_state(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationStatus value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AnimationStatus>(thisDeserializer.readInt32());
        }
        Opt_AnimationStatus value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setState(self, (const Opt_AnimationStatus*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_state, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_duration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setDuration(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_duration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_reverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setReverse(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_reverse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_fixedSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setFixedSize(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_fixedSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_preDecode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setPreDecode(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_preDecode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_fillMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FillMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FillMode>(thisDeserializer.readInt32());
        }
        Opt_FillMode value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setFillMode(self, (const Opt_FillMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_fillMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_iterations(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setIterations(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_iterations, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_monitorInvisibleArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setMonitorInvisibleArea(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_monitorInvisibleArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_onStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_onStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_onPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnPause(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_onPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_onRepeat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnRepeat(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_onRepeat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_onCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnCancel(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_onCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageAnimatorAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getImageAnimatorModifier()->setOnFinish(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageAnimatorAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getImageSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ImageSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ImageSpanInterface_setImageSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ResourceStr_PixelMap value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            const Ark_Int8 value_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_u = {};
            value_value_buf_u.selector = value_value_buf_u_selector;
            if (value_value_buf_u_selector == 0) {
                value_value_buf_u.selector = 0;
                value_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf_u_selector == 1) {
                value_value_buf_u.selector = 1;
                value_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_u has to be chosen through deserialisation.");
            }
            value_value_buf.value0 = static_cast<Ark_ResourceStr>(value_value_buf_u);
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ResourceStr_PixelMap value_value = static_cast<Ark_Union_ResourceStr_PixelMap>(value_value_buf);;
        GetNodeModifiers()->getImageSpanModifier()->setImageSpanOptions(self, (const Ark_Union_ResourceStr_PixelMap*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanInterface_setImageSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_verticalAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageSpanAlignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageSpanAlignment>(thisDeserializer.readInt32());
        }
        Opt_ImageSpanAlignment value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setVerticalAlign(self, (const Opt_ImageSpanAlignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_verticalAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_colorFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ColorFilter_DrawingColorFilter value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ColorFilter_DrawingColorFilter value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ColorFilter>(thisDeserializer.readColorFilter());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_DrawingColorFilter>(thisDeserializer.readDrawingColorFilter());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ColorFilter_DrawingColorFilter>(value_value_buf_);
        }
        Opt_Union_ColorFilter_DrawingColorFilter value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setColorFilter(self, (const Opt_Union_ColorFilter_DrawingColorFilter*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_colorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_objectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setObjectFit(self, (const Opt_ImageFit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_objectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_onComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageCompleteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageLoadResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageCompleteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageLoadResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageCompleteCallback))))};
        }
        Opt_ImageCompleteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setOnComplete(self, (const Opt_ImageCompleteCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_onComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ImageErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ImageError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ImageErrorCallback))))};
        }
        Opt_ImageErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setOnError(self, (const Opt_ImageErrorCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ImageSpanAttribute_alt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelMap value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        Opt_PixelMap value_value = value_value_buf;;
        GetNodeModifiers()->getImageSpanModifier()->setAlt(self, (const Opt_PixelMap*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ImageSpanAttribute_alt, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LazyGridLayout_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLazyGridLayoutModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LazyGridLayout_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LazyGridLayoutAttribute_rowsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getLazyGridLayoutModifier()->setRowsGap(self, (const Opt_LengthMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LazyGridLayoutAttribute_rowsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LazyGridLayoutAttribute_columnsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getLazyGridLayoutModifier()->setColumnsGap(self, (const Opt_LengthMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LazyGridLayoutAttribute_columnsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LazyVGridLayout_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLazyVGridLayoutModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LazyVGridLayout_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LazyVGridLayoutInterface_setLazyVGridLayoutOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getLazyVGridLayoutModifier()->setLazyVGridLayoutOptions(self);
}
KOALA_INTEROP_DIRECT_V1(LazyVGridLayoutInterface_setLazyVGridLayoutOptions, Ark_NativePointer)
void impl_LazyVGridLayoutAttribute_columnsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getLazyVGridLayoutModifier()->setColumnsTemplate(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LazyVGridLayoutAttribute_columnsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Line_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLineModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Line_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LineInterface_setLineOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readLineOptions();
        }
        Opt_LineOptions options_value = options_value_buf;;
        GetNodeModifiers()->getLineModifier()->setLineOptions(self, (const Opt_LineOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(LineInterface_setLineOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LineAttribute_startPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
    Opt_ShapePoint value_value_buf = {};
    value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
    if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
    {
        Ark_ShapePoint value_value_buf_ = {};
        value_value_buf_.value0 = thisDeserializer.readLength();
        value_value_buf_.value1 = thisDeserializer.readLength();
        value_value_buf.value = value_value_buf_;
    }
    Opt_ShapePoint value_value = value_value_buf;;
    GetNodeModifiers()->getLineModifier()->setStartPoint(self, (const Opt_ShapePoint*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LineAttribute_startPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LineAttribute_endPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
    Opt_ShapePoint value_value_buf = {};
    value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
    if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
    {
        Ark_ShapePoint value_value_buf_ = {};
        value_value_buf_.value0 = thisDeserializer.readLength();
        value_value_buf_.value1 = thisDeserializer.readLength();
        value_value_buf.value = value_value_buf_;
    }
    Opt_ShapePoint value_value = value_value_buf;;
    GetNodeModifiers()->getLineModifier()->setEndPoint(self, (const Opt_ShapePoint*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LineAttribute_endPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_List_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(List_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListInterface_setListOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readListOptions();
        }
        Opt_ListOptions options_value = options_value_buf;;
        GetNodeModifiers()->getListModifier()->setListOptions(self, (const Opt_ListOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ListInterface_setListOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_alignListItem(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ListItemAlign>(thisDeserializer.readInt32());
        }
        Opt_ListItemAlign value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setAlignListItem(self, (const Opt_ListItemAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_alignListItem, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_listDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setListDirection(self, (const Opt_Axis*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_listDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_scrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setScrollBar(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_scrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_contentStartOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setContentStartOffset(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_contentStartOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_contentEndOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setContentEndOffset(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_contentEndOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListDividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readListDividerOptions();
        }
        Opt_ListDividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setDivider(self, (const Opt_ListDividerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_editMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setEditMode(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_editMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_multiSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setMultiSelectable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_multiSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_cachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setCachedCount0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_cachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_cachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (show_value_buf_runtimeType))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getListModifier()->setCachedCount1(self, (const Opt_Number*)&count_value, (const Opt_Boolean*)&show_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_cachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_chainAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChainAnimation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_chainAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_chainAnimationOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainAnimationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readChainAnimationOptions();
        }
        Opt_ChainAnimationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChainAnimationOptions(self, (const Opt_ChainAnimationOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_chainAnimationOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_sticky(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StickyStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_StickyStyle>(thisDeserializer.readInt32());
        }
        Opt_StickyStyle value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setSticky(self, (const Opt_StickyStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_sticky, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_scrollSnapAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollSnapAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ScrollSnapAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollSnapAlign value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setScrollSnapAlign(self, (const Opt_ScrollSnapAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_scrollSnapAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNestedScrollOptions();
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setNestedScroll(self, (const Opt_NestedScrollOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_enableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setEnableScrollInteraction(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_enableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_friction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setFriction(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_friction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_childrenMainSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChildrenMainSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ChildrenMainSize>(thisDeserializer.readChildrenMainSize());
        }
        Opt_ChildrenMainSize value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setChildrenMainSize(self, (const Opt_ChildrenMainSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_childrenMainSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_maintainVisibleContentPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setMaintainVisibleContentPosition(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_maintainVisibleContentPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_stackFromEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setStackFromEnd(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_stackFromEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScroll(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number start, const Ark_Number end, const Ark_Number center)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollIndex(self, (const Opt_Callback_Number_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScrollVisibleContentChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollVisibleContentChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollVisibleContentChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_VisibleListContentInfo start, const Ark_VisibleListContentInfo end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollVisibleContentChangeCallback))))};
        }
        Opt_OnScrollVisibleContentChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollVisibleContentChange(self, (const Opt_OnScrollVisibleContentChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScrollVisibleContentChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onReachStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnReachStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onReachStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onReachEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnReachEnd(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onReachEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollStop(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Boolean))))};
        }
        Opt_Callback_Number_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDelete(self, (const Opt_Callback_Number_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Boolean))))};
        }
        Opt_Callback_Number_Number_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemMove(self, (const Opt_Callback_Number_Number_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDragStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListAttribute_onItemDragStart_event_type value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ListAttribute_onItemDragStart_event_type)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Callback_CustomBuilder_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ListAttribute_onItemDragStart_event_type))))};
        }
        Opt_ListAttribute_onItemDragStart_event_type value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragStart(self, (const Opt_ListAttribute_onItemDragStart_event_type*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDragStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDragEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Void))))};
        }
        Opt_Callback_ItemDragInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragEnter(self, (const Opt_Callback_ItemDragInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDragEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDragMove(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragMove(self, (const Opt_Callback_ItemDragInfo_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDragMove, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDragLeave(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDragLeave(self, (const Opt_Callback_ItemDragInfo_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDragLeave, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onItemDrop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ItemDragInfo event, const Ark_Number itemIndex, const Ark_Number insertIndex, const Ark_Boolean isSuccess)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ItemDragInfo_Number_Number_Boolean_Void))))};
        }
        Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnItemDrop(self, (const Opt_Callback_ItemDragInfo_Number_Number_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onItemDrop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_ScrollState_Literal_Number_offsetRemain value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_Literal_Number_offsetRemain_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_ScrollState_Literal_Number_offsetRemain)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_Literal_Number_offsetRemain_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_ScrollState_Literal_Number_offsetRemain))))};
        }
        Opt_Callback_Number_ScrollState_Literal_Number_offsetRemain value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnScrollFrameBegin(self, (const Opt_Callback_Number_ScrollState_Literal_Number_offsetRemain*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnWillScroll(self, (const Opt_OnWillScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_onDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getListModifier()->setOnDidScroll(self, (const Opt_OnScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_onDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_lanes(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_LengthConstrain value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_LengthConstrain value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLengthConstrain();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_LengthConstrain>(value_value_buf_);
        }
        Opt_Union_Number_LengthConstrain value_value = value_value_buf;;
        const auto gutter_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length gutter_value_buf = {};
        gutter_value_buf.tag = gutter_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (gutter_value_buf_runtimeType))
        {
            gutter_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length gutter_value = gutter_value_buf;;
        GetNodeModifiers()->getListModifier()->setLanes(self, (const Opt_Union_Number_LengthConstrain*)&value_value, (const Opt_Length*)&gutter_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_lanes, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListAttribute_edgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readEdgeEffectOptions();
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getListModifier()->setEdgeEffect(self, (const Opt_EdgeEffect*)&value_value, (const Opt_EdgeEffectOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ListAttribute_edgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ListItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ListItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListItemInterface_setListItemOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readListItemOptions();
        }
        Opt_ListItemOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setListItemOptions0(self, (const Opt_ListItemOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemInterface_setListItemOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemInterface_setListItemOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setListItemOptions1(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemInterface_setListItemOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_sticky(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Sticky value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Sticky>(thisDeserializer.readInt32());
        }
        Opt_Sticky value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSticky(self, (const Opt_Sticky*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_sticky, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_editable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Boolean_EditMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Boolean_EditMode value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readBoolean();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_EditMode>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Boolean_EditMode>(value_value_buf_);
        }
        Opt_Union_Boolean_EditMode value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setEditable(self, (const Opt_Union_Boolean_EditMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_editable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_selectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSelectable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_selectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSelected(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_swipeAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwipeActionOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSwipeActionOptions();
        }
        Opt_SwipeActionOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setSwipeAction(self, (const Opt_SwipeActionOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_swipeAction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute_onSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getListItemModifier()->setOnSelect(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute_onSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getListItemModifier()->set_onChangeEvent_selected(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ListItemGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getListItemGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ListItemGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ListItemGroupInterface_setListItemGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListItemGroupOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readListItemGroupOptions();
        }
        Opt_ListItemGroupOptions options_value = options_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setListItemGroupOptions(self, (const Opt_ListItemGroupOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupInterface_setListItemGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemGroupAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ListDividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readListDividerOptions();
        }
        Opt_ListDividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setDivider(self, (const Opt_ListDividerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ListItemGroupAttribute_childrenMainSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChildrenMainSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ChildrenMainSize>(thisDeserializer.readChildrenMainSize());
        }
        Opt_ChildrenMainSize value_value = value_value_buf;;
        GetNodeModifiers()->getListItemGroupModifier()->setChildrenMainSize(self, (const Opt_ChildrenMainSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ListItemGroupAttribute_childrenMainSize, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LoadingProgress_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLoadingProgressModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LoadingProgress_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LoadingProgressInterface_setLoadingProgressOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getLoadingProgressModifier()->setLoadingProgressOptions(self);
}
KOALA_INTEROP_DIRECT_V1(LoadingProgressInterface_setLoadingProgressOptions, Ark_NativePointer)
void impl_LoadingProgressAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LoadingProgressAttribute_enableLoading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setEnableLoading(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_enableLoading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LoadingProgressAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getLoadingProgressModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LoadingProgressAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LocationButton_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLocationButtonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LocationButton_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LocationButtonInterface_setLocationButtonOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getLocationButtonModifier()->setLocationButtonOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(LocationButtonInterface_setLocationButtonOptions0, Ark_NativePointer)
void impl_LocationButtonInterface_setLocationButtonOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_LocationButtonOptions options_value = thisDeserializer.readLocationButtonOptions();;
        GetNodeModifiers()->getLocationButtonModifier()->setLocationButtonOptions1(self, (const Ark_LocationButtonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(LocationButtonInterface_setLocationButtonOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LocationButtonAttribute_onClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LocationButtonCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_LocationButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_LocationButtonCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_LocationButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_LocationButtonCallback))))};
        }
        Opt_LocationButtonCallback value_value = value_value_buf;;
        GetNodeModifiers()->getLocationButtonModifier()->setOnClick(self, (const Opt_LocationButtonCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LocationButtonAttribute_onClick, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Marquee_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMarqueeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Marquee_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MarqueeInterface_setMarqueeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_MarqueeOptions options_value = thisDeserializer.readMarqueeOptions();;
        GetNodeModifiers()->getMarqueeModifier()->setMarqueeOptions(self, (const Ark_MarqueeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeInterface_setMarqueeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;
        GetNodeModifiers()->getMarqueeModifier()->setFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_allowScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setAllowScale(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_allowScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setFontFamily(self, (const Opt_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_marqueeUpdateStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MarqueeUpdateStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_MarqueeUpdateStrategy>(thisDeserializer.readInt32());
        }
        Opt_MarqueeUpdateStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setMarqueeUpdateStrategy(self, (const Opt_MarqueeUpdateStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_marqueeUpdateStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_onStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_onStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_onBounce(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnBounce(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_onBounce, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MarqueeAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMarqueeModifier()->setOnFinish(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MarqueeAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MediaCachedImage_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMediaCachedImageModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MediaCachedImage_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MediaCachedImageInterface_setMediaCachedImageOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 src_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource src_value_buf = {};
        src_value_buf.selector = src_value_buf_selector;
        if (src_value_buf_selector == 0) {
            src_value_buf.selector = 0;
            src_value_buf.value0 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else if (src_value_buf_selector == 1) {
            src_value_buf.selector = 1;
            const Ark_Int8 src_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr src_value_buf_u = {};
            src_value_buf_u.selector = src_value_buf_u_selector;
            if (src_value_buf_u_selector == 0) {
                src_value_buf_u.selector = 0;
                src_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (src_value_buf_u_selector == 1) {
                src_value_buf_u.selector = 1;
                src_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for src_value_buf_u has to be chosen through deserialisation.");
            }
            src_value_buf.value1 = static_cast<Ark_ResourceStr>(src_value_buf_u);
        }
        else if (src_value_buf_selector == 2) {
            src_value_buf.selector = 2;
            src_value_buf.value2 = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        else if (src_value_buf_selector == 3) {
            src_value_buf.selector = 3;
            src_value_buf.value3 = thisDeserializer.readASTCResource();
        }
        else {
            INTEROP_FATAL("One of the branches for src_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource src_value = static_cast<Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource>(src_value_buf);;
        GetNodeModifiers()->getMediaCachedImageModifier()->setMediaCachedImageOptions(self, (const Ark_Union_PixelMap_ResourceStr_DrawableDescriptor_ASTCResource*)&src_value);
}
KOALA_INTEROP_DIRECT_V3(MediaCachedImageInterface_setMediaCachedImageOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Menu_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Menu_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuInterface_setMenuOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getMenuModifier()->setMenuOptions(self);
}
KOALA_INTEROP_DIRECT_V1(MenuInterface_setMenuOptions, Ark_NativePointer)
void impl_MenuAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_font(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_font, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_radius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_BorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_BorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBorderRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_BorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_BorderRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setRadius(self, (const Opt_Union_Dimension_BorderRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_radius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_menuItemDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerStyleOptions();
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setMenuItemDivider(self, (const Opt_DividerStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_menuItemDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_menuItemGroupDivider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerStyleOptions();
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setMenuItemGroupDivider(self, (const Opt_DividerStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_menuItemGroupDivider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuAttribute_subMenuExpandingMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SubMenuExpandingMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SubMenuExpandingMode>(thisDeserializer.readInt32());
        }
        Opt_SubMenuExpandingMode value_value = value_value_buf;;
        GetNodeModifiers()->getMenuModifier()->setSubMenuExpandingMode(self, (const Opt_SubMenuExpandingMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuAttribute_subMenuExpandingMode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MenuItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MenuItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuItemInterface_setMenuItemOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_MenuItemOptions_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_MenuItemOptions_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readMenuItemOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_MenuItemOptions_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_MenuItemOptions_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setMenuItemOptions(self, (const Opt_Union_MenuItemOptions_CustomBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemInterface_setMenuItemOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setSelected(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_selectIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readBoolean();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value1 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Boolean_ResourceStr_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setSelectIcon(self, (const Opt_Union_Boolean_ResourceStr_SymbolGlyphModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_selectIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setOnChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_contentFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setContentFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_contentFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_contentFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setContentFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_contentFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_labelFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setLabelFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_labelFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute_labelFontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemModifier()->setLabelFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute_labelFontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getMenuItemModifier()->set_onChangeEvent_selected(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MenuItemGroup_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getMenuItemGroupModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(MenuItemGroup_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_MenuItemGroupInterface_setMenuItemGroupOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuItemGroupOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMenuItemGroupOptions();
        }
        Opt_MenuItemGroupOptions value_value = value_value_buf;;
        GetNodeModifiers()->getMenuItemGroupModifier()->setMenuItemGroupOptions(self, (const Opt_MenuItemGroupOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemGroupInterface_setMenuItemGroupOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavDestination_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavDestinationModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(NavDestination_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavDestinationInterface_setNavDestinationOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavDestinationModifier()->setNavDestinationOptions(self);
}
KOALA_INTEROP_DIRECT_V1(NavDestinationInterface_setNavDestinationOptions, Ark_NativePointer)
void impl_NavDestinationAttribute_hideTitleBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideTitleBar0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_hideTitleBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_hideTitleBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (hide_value_buf_runtimeType))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideTitleBar1(self, (const Opt_Boolean*)&hide_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_hideTitleBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_hideBackButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideBackButton(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_hideBackButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onShown(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnShown(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onShown, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnHidden(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onBackPressed(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean))))};
        }
        Opt_Callback_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnBackPressed(self, (const Opt_Callback_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onBackPressed, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Object_Void))))};
        }
        Opt_Callback_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnResult(self, (const Opt_Callback_Object_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_mode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavDestinationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavDestinationMode>(thisDeserializer.readInt32());
        }
        Opt_NavDestinationMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMode(self, (const Opt_NavDestinationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_mode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_backButtonIcon0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceStr>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBackButtonIcon0(self, (const Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_backButtonIcon0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_backButtonIcon1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto icon_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value_buf = {};
        icon_value_buf.tag = icon_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (icon_value_buf_runtimeType))
        {
            const Ark_Int8 icon_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value_buf_ = {};
            icon_value_buf_.selector = icon_value_buf__selector;
            if (icon_value_buf__selector == 0) {
                icon_value_buf_.selector = 0;
                const Ark_Int8 icon_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceStr icon_value_buf__u = {};
                icon_value_buf__u.selector = icon_value_buf__u_selector;
                if (icon_value_buf__u_selector == 0) {
                    icon_value_buf__u.selector = 0;
                    icon_value_buf__u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (icon_value_buf__u_selector == 1) {
                    icon_value_buf__u.selector = 1;
                    icon_value_buf__u.value1 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for icon_value_buf__u has to be chosen through deserialisation.");
                }
                icon_value_buf_.value0 = static_cast<Ark_ResourceStr>(icon_value_buf__u);
            }
            else if (icon_value_buf__selector == 1) {
                icon_value_buf_.selector = 1;
                icon_value_buf_.value1 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
            }
            else if (icon_value_buf__selector == 2) {
                icon_value_buf_.selector = 2;
                icon_value_buf_.value2 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for icon_value_buf_ has to be chosen through deserialisation.");
            }
            icon_value_buf.value = static_cast<Ark_Union_ResourceStr_PixelMap_SymbolGlyphModifier>(icon_value_buf_);
        }
        Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier icon_value = icon_value_buf;;
        const auto accessibilityText_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr accessibilityText_value_buf = {};
        accessibilityText_value_buf.tag = accessibilityText_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (accessibilityText_value_buf_runtimeType))
        {
            const Ark_Int8 accessibilityText_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr accessibilityText_value_buf_ = {};
            accessibilityText_value_buf_.selector = accessibilityText_value_buf__selector;
            if (accessibilityText_value_buf__selector == 0) {
                accessibilityText_value_buf_.selector = 0;
                accessibilityText_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (accessibilityText_value_buf__selector == 1) {
                accessibilityText_value_buf_.selector = 1;
                accessibilityText_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for accessibilityText_value_buf_ has to be chosen through deserialisation.");
            }
            accessibilityText_value_buf.value = static_cast<Ark_ResourceStr>(accessibilityText_value_buf_);
        }
        Opt_ResourceStr accessibilityText_value = accessibilityText_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBackButtonIcon1(self, (const Opt_Union_ResourceStr_PixelMap_SymbolGlyphModifier*)&icon_value, (const Opt_ResourceStr*)&accessibilityText_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_backButtonIcon1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_menus0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readNavigationMenuItem();
                }
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(value_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMenus0(self, (const Opt_Union_Array_NavigationMenuItem_CustomBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_menus0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_menus1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto items_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf = {};
        items_value_buf.tag = items_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (items_value_buf_runtimeType))
        {
            const Ark_Int8 items_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_NavigationMenuItem_CustomBuilder items_value_buf_ = {};
            items_value_buf_.selector = items_value_buf__selector;
            if (items_value_buf__selector == 0) {
                items_value_buf_.selector = 0;
                const Ark_Int32 items_value_buf__u_length = thisDeserializer.readInt32();
                Array_NavigationMenuItem items_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(items_value_buf__u)>::type,
        std::decay<decltype(*items_value_buf__u.array)>::type>(&items_value_buf__u, items_value_buf__u_length);
                for (int items_value_buf__u_i = 0; items_value_buf__u_i < items_value_buf__u_length; items_value_buf__u_i++) {
                    items_value_buf__u.array[items_value_buf__u_i] = thisDeserializer.readNavigationMenuItem();
                }
                items_value_buf_.value0 = items_value_buf__u;
            }
            else if (items_value_buf__selector == 1) {
                items_value_buf_.selector = 1;
                items_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for items_value_buf_ has to be chosen through deserialisation.");
            }
            items_value_buf.value = static_cast<Ark_Union_Array_NavigationMenuItem_CustomBuilder>(items_value_buf_);
        }
        Opt_Union_Array_NavigationMenuItem_CustomBuilder items_value = items_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationMenuOptions();
        }
        Opt_NavigationMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setMenus1(self, (const Opt_Union_Array_NavigationMenuItem_CustomBuilder*)&items_value, (const Opt_NavigationMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_menus1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationContext_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NavDestinationContext parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationContext_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NavDestinationContext parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationContext_Void))))};
        }
        Opt_Callback_NavDestinationContext_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnReady(self, (const Opt_Callback_NavDestinationContext_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onWillAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillAppear(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onWillAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onWillDisappear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillDisappear(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onWillDisappear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onWillShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillShow(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onWillShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onWillHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnWillHide(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onWillHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_systemBarStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SystemBarStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSystemBarStyle();
        }
        Opt_SystemBarStyle value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setSystemBarStyle(self, (const Opt_SystemBarStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_systemBarStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_recoverable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setRecoverable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_recoverable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_systemTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationSystemTransitionType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavigationSystemTransitionType>(thisDeserializer.readInt32());
        }
        Opt_NavigationSystemTransitionType value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setSystemTransition(self, (const Opt_NavigationSystemTransitionType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_systemTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_bindToScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Scroller value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Scroller value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_Scroller>(thisDeserializer.readScroller());
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Scroller value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBindToScrollable(self, (const Opt_Array_Scroller*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_bindToScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_bindToNestedScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_NestedScrollInfo value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_NestedScrollInfo value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readNestedScrollInfo();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_NestedScrollInfo value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setBindToNestedScrollable(self, (const Opt_Array_NestedScrollInfo*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_bindToNestedScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onActive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationActiveReason_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavDestinationActiveReason parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationActiveReason_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavDestinationActiveReason parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationActiveReason_Void))))};
        }
        Opt_Callback_NavDestinationActiveReason_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnActive(self, (const Opt_Callback_NavDestinationActiveReason_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onActive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onInactive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NavDestinationActiveReason_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavDestinationActiveReason parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavDestinationActiveReason_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavDestinationActiveReason parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavDestinationActiveReason_Void))))};
        }
        Opt_Callback_NavDestinationActiveReason_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnInactive(self, (const Opt_Callback_NavDestinationActiveReason_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onInactive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_customTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavDestinationTransitionDelegate value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_NavDestinationTransitionDelegate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationOperation operation, const Ark_Boolean isEnter, const Callback_Opt_Array_NavDestinationTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_NavDestinationTransitionDelegate))))};
        }
        Opt_NavDestinationTransitionDelegate value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setCustomTransition(self, (const Opt_NavDestinationTransitionDelegate*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_customTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_onNewParam(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Object_Void))))};
        }
        Opt_Callback_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setOnNewParam(self, (const Opt_Callback_Object_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_onNewParam, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_preferredOrientation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Orientation value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readOrientation();
        }
        Opt_Orientation value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setPreferredOrientation(self, (const Opt_Orientation*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_preferredOrientation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_enableNavigationIndicator(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setEnableNavigationIndicator(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_enableNavigationIndicator, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_title(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_NavDestinationAttribute_title_value value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_NavDestinationAttribute_title_value value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readNavDestinationCommonTitle();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readNavDestinationCustomTitle();
            }
            else if (value_value_buf__selector == 4) {
                value_value_buf_.selector = 4;
                value_value_buf_.value4 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_NavDestinationAttribute_title_value>(value_value_buf_);
        }
        Opt_Type_NavDestinationAttribute_title_value value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationTitleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationTitleOptions();
        }
        Opt_NavigationTitleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setTitle(self, (const Opt_Type_NavDestinationAttribute_title_value*)&value_value, (const Opt_NavigationTitleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_title, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_toolbarConfiguration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto toolbarParam_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value_buf = {};
        toolbarParam_value_buf.tag = toolbarParam_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (toolbarParam_value_buf_runtimeType))
        {
            const Ark_Int8 toolbarParam_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value_buf_ = {};
            toolbarParam_value_buf_.selector = toolbarParam_value_buf__selector;
            if (toolbarParam_value_buf__selector == 0) {
                toolbarParam_value_buf_.selector = 0;
                const Ark_Int32 toolbarParam_value_buf__u_length = thisDeserializer.readInt32();
                Array_ToolbarItem toolbarParam_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(toolbarParam_value_buf__u)>::type,
        std::decay<decltype(*toolbarParam_value_buf__u.array)>::type>(&toolbarParam_value_buf__u, toolbarParam_value_buf__u_length);
                for (int toolbarParam_value_buf__u_i = 0; toolbarParam_value_buf__u_i < toolbarParam_value_buf__u_length; toolbarParam_value_buf__u_i++) {
                    toolbarParam_value_buf__u.array[toolbarParam_value_buf__u_i] = thisDeserializer.readToolbarItem();
                }
                toolbarParam_value_buf_.value0 = toolbarParam_value_buf__u;
            }
            else if (toolbarParam_value_buf__selector == 1) {
                toolbarParam_value_buf_.selector = 1;
                toolbarParam_value_buf_.value1 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else {
                INTEROP_FATAL("One of the branches for toolbarParam_value_buf_ has to be chosen through deserialisation.");
            }
            toolbarParam_value_buf.value = static_cast<Ark_Union_Array_ToolbarItem_CustomBuilder>(toolbarParam_value_buf_);
        }
        Opt_Union_Array_ToolbarItem_CustomBuilder toolbarParam_value = toolbarParam_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationToolbarOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationToolbarOptions();
        }
        Opt_NavigationToolbarOptions options_value = options_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setToolbarConfiguration(self, (const Opt_Union_Array_ToolbarItem_CustomBuilder*)&toolbarParam_value, (const Opt_NavigationToolbarOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_toolbarConfiguration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_hideToolBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto hide_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean hide_value_buf = {};
        hide_value_buf.tag = hide_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (hide_value_buf_runtimeType))
        {
            hide_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean hide_value = hide_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setHideToolBar(self, (const Opt_Boolean*)&hide_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_hideToolBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_ignoreLayoutSafeArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto types_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaType types_value_buf = {};
        types_value_buf.tag = types_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (types_value_buf_runtimeType))
        {
            const Ark_Int32 types_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaType types_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(types_value_buf_)>::type,
        std::decay<decltype(*types_value_buf_.array)>::type>(&types_value_buf_, types_value_buf__length);
            for (int types_value_buf__i = 0; types_value_buf__i < types_value_buf__length; types_value_buf__i++) {
                types_value_buf_.array[types_value_buf__i] = static_cast<Ark_LayoutSafeAreaType>(thisDeserializer.readInt32());
            }
            types_value_buf.value = types_value_buf_;
        }
        Opt_Array_LayoutSafeAreaType types_value = types_value_buf;;
        const auto edges_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LayoutSafeAreaEdge edges_value_buf = {};
        edges_value_buf.tag = edges_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (edges_value_buf_runtimeType))
        {
            const Ark_Int32 edges_value_buf__length = thisDeserializer.readInt32();
            Array_LayoutSafeAreaEdge edges_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(edges_value_buf_)>::type,
        std::decay<decltype(*edges_value_buf_.array)>::type>(&edges_value_buf_, edges_value_buf__length);
            for (int edges_value_buf__i = 0; edges_value_buf__i < edges_value_buf__length; edges_value_buf__i++) {
                edges_value_buf_.array[edges_value_buf__i] = static_cast<Ark_LayoutSafeAreaEdge>(thisDeserializer.readInt32());
            }
            edges_value_buf.value = edges_value_buf_;
        }
        Opt_Array_LayoutSafeAreaEdge edges_value = edges_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setIgnoreLayoutSafeArea(self, (const Opt_Array_LayoutSafeAreaType*)&types_value, (const Opt_Array_LayoutSafeAreaEdge*)&edges_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_ignoreLayoutSafeArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavDestinationAttribute_enableStatusBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto enabled_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean enabled_value_buf = {};
        enabled_value_buf.tag = enabled_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (enabled_value_buf_runtimeType))
        {
            enabled_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean enabled_value = enabled_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetNodeModifiers()->getNavDestinationModifier()->setEnableStatusBar(self, (const Opt_Boolean*)&enabled_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavDestinationAttribute_enableStatusBar, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavRouter_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavRouterModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(NavRouter_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavRouterInterface_setNavRouterOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavRouterModifier()->setNavRouterOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(NavRouterInterface_setNavRouterOptions0, Ark_NativePointer)
void impl_NavRouterInterface_setNavRouterOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RouteInfo value_value = thisDeserializer.readRouteInfo();;
        GetNodeModifiers()->getNavRouterModifier()->setNavRouterOptions1(self, (const Ark_RouteInfo*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavRouterInterface_setNavRouterOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavRouterAttribute_onStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getNavRouterModifier()->setOnStateChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavRouterAttribute_onStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavRouterAttribute_mode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavRouteMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavRouteMode>(thisDeserializer.readInt32());
        }
        Opt_NavRouteMode value_value = value_value_buf;;
        GetNodeModifiers()->getNavRouterModifier()->setMode(self, (const Opt_NavRouteMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavRouterAttribute_mode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Navigator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNavigatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Navigator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavigatorInterface_setNavigatorOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_String_target_NavigationType_type value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_String_target_NavigationType_type value_value_buf_ = {};
            value_value_buf_.target = static_cast<Ark_String>(thisDeserializer.readString());
            const auto value_value_buf__type_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_NavigationType value_value_buf__type_buf = {};
            value_value_buf__type_buf.tag = value_value_buf__type_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__type_buf_runtimeType))
            {
                value_value_buf__type_buf.value = static_cast<Ark_NavigationType>(thisDeserializer.readInt32());
            }
            value_value_buf_.type = value_value_buf__type_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_String_target_NavigationType_type value_value = value_value_buf;;
        GetNodeModifiers()->getNavigatorModifier()->setNavigatorOptions0(self, (const Opt_Literal_String_target_NavigationType_type*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigatorInterface_setNavigatorOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigatorInterface_setNavigatorOptions1(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getNavigatorModifier()->setNavigatorOptions1(self);
}
KOALA_INTEROP_DIRECT_V1(NavigatorInterface_setNavigatorOptions1, Ark_NativePointer)
void impl_NavigatorAttribute_active(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getNavigatorModifier()->setActive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigatorAttribute_active, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigatorAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NavigationType>(thisDeserializer.readInt32());
        }
        Opt_NavigationType value_value = value_value_buf;;
        GetNodeModifiers()->getNavigatorModifier()->setType(self, (const Opt_NavigationType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigatorAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigatorAttribute_target(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getNavigatorModifier()->setTarget(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigatorAttribute_target, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavigatorAttribute_params(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object value_value = value_value_buf;;
        GetNodeModifiers()->getNavigatorModifier()->setParams(self, (const Opt_Object*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(NavigatorAttribute_params, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NodeContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getNodeContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(NodeContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NodeContainerInterface_setNodeContainerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_NodeController controller_value = thisDeserializer.readNodeController();
        GetNodeModifiers()->getNodeContainerModifier()->setNodeContainerOptions(self, (const Ark_NodeController*)&controller_value);
}
KOALA_INTEROP_DIRECT_V3(NodeContainerInterface_setNodeContainerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Panel_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPanelModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Panel_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PanelInterface_setPanelOptions(Ark_NativePointer thisPtr, Ark_Boolean show) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getPanelModifier()->setPanelOptions(self, show);
}
KOALA_INTEROP_DIRECT_V2(PanelInterface_setPanelOptions, Ark_NativePointer, Ark_Boolean)
void impl_PanelAttribute_mode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PanelMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PanelMode>(thisDeserializer.readInt32());
        }
        Opt_PanelMode value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setMode(self, (const Opt_PanelMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_mode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PanelType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PanelType>(thisDeserializer.readInt32());
        }
        Opt_PanelType value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setType(self, (const Opt_PanelType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_dragBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setDragBar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_dragBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_customHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_PanelHeight value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_PanelHeight value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_PanelHeight>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_PanelHeight>(value_value_buf_);
        }
        Opt_Union_Dimension_PanelHeight value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setCustomHeight(self, (const Opt_Union_Dimension_PanelHeight*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_customHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_fullHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setFullHeight(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_fullHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_halfHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setHalfHeight(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_halfHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_miniHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setMiniHeight(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_miniHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_show(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setShow(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_show, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_backgroundMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setBackgroundMask(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_backgroundMask, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_showCloseIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setShowCloseIcon(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_showCloseIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_PanelMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number width, const Ark_Number height, Ark_PanelMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_PanelMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number width, const Ark_Number height, Ark_PanelMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_PanelMode_Void))))};
        }
        Opt_Callback_Number_Number_PanelMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setOnChange(self, (const Opt_Callback_Number_Number_PanelMode_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute_onHeightChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPanelModifier()->setOnHeightChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute_onHeightChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PanelAttribute__onChangeEvent_mode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_PanelMode_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_PanelMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_PanelMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_PanelMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_PanelMode_Void))))};;
        GetNodeModifiers()->getPanelModifier()->set_onChangeEvent_mode(self, (const Callback_Opt_PanelMode_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(PanelAttribute__onChangeEvent_mode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PasteButton_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPasteButtonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(PasteButton_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PasteButtonInterface_setPasteButtonOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getPasteButtonModifier()->setPasteButtonOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(PasteButtonInterface_setPasteButtonOptions0, Ark_NativePointer)
void impl_PasteButtonInterface_setPasteButtonOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_PasteButtonOptions options_value = thisDeserializer.readPasteButtonOptions();;
        GetNodeModifiers()->getPasteButtonModifier()->setPasteButtonOptions1(self, (const Ark_PasteButtonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(PasteButtonInterface_setPasteButtonOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PasteButtonAttribute_onClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PasteButtonCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_PasteButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PasteButtonCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_PasteButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PasteButtonCallback))))};
        }
        Opt_PasteButtonCallback value_value = value_value_buf;;
        GetNodeModifiers()->getPasteButtonModifier()->setOnClick(self, (const Opt_PasteButtonCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PasteButtonAttribute_onClick, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Path_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPathModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Path_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PathInterface_setPathOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PathOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readPathOptions();
        }
        Opt_PathOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPathModifier()->setPathOptions(self, (const Opt_PathOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(PathInterface_setPathOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PathAttribute_commands(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getPathModifier()->setCommands(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PathAttribute_commands, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PatternLock_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPatternLockModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(PatternLock_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PatternLockInterface_setPatternLockOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PatternLockController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (controller_value_buf_runtimeType))
        {
            controller_value_buf.value = static_cast<Ark_PatternLockController>(thisDeserializer.readPatternLockController());
        }
        Opt_PatternLockController controller_value = controller_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPatternLockOptions(self, (const Opt_PatternLockController*)&controller_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockInterface_setPatternLockOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_sideLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSideLength(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_sideLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_circleRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setCircleRadius(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_circleRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_backgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_backgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_regularColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setRegularColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_regularColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_selectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSelectedColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_selectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_activeColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setActiveColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_activeColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_pathColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPathColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_pathColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_pathStrokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setPathStrokeWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_pathStrokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_onPatternComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Array_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Array_Number input)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Array_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Array_Number input)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Array_Number_Void))))};
        }
        Opt_Callback_Array_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setOnPatternComplete(self, (const Opt_Callback_Array_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_onPatternComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_autoReset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setAutoReset(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_autoReset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_onDotConnect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setOnDotConnect(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_onDotConnect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_activateCircleStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CircleStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCircleStyleOptions();
        }
        Opt_CircleStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setActivateCircleStyle(self, (const Opt_CircleStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_activateCircleStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PatternLockAttribute_skipUnselectedPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getPatternLockModifier()->setSkipUnselectedPoint(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PatternLockAttribute_skipUnselectedPoint, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PluginComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPluginComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(PluginComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PluginComponentInterface_setPluginComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_PluginComponentOptions options_value = thisDeserializer.readPluginComponentOptions();;
        GetNodeModifiers()->getPluginComponentModifier()->setPluginComponentOptions(self, (const Ark_PluginComponentOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(PluginComponentInterface_setPluginComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PluginComponentAttribute_onComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getPluginComponentModifier()->setOnComplete(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PluginComponentAttribute_onComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PluginComponentAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PluginErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PluginErrorData info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PluginErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PluginErrorData info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PluginErrorCallback))))};
        }
        Opt_PluginErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getPluginComponentModifier()->setOnError(self, (const Opt_PluginErrorCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PluginComponentAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Polygon_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPolygonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Polygon_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PolygonInterface_setPolygonOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PolygonOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readPolygonOptions();
        }
        Opt_PolygonOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPolygonModifier()->setPolygonOptions(self, (const Opt_PolygonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(PolygonInterface_setPolygonOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PolygonAttribute_points(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
    Opt_Array_ShapePoint value_value_buf = {};
    value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
    if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
    {
        const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
        Array_ShapePoint value_value_buf_ = {};
        thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
    std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
        for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
            Ark_ShapePoint value_value_buf__buf = {};
            value_value_buf__buf.value0 = thisDeserializer.readLength();
            value_value_buf__buf.value1 = thisDeserializer.readLength();
            value_value_buf_.array[value_value_buf__i] = value_value_buf__buf;
        }
        value_value_buf.value = value_value_buf_;
    }
    Opt_Array_ShapePoint value_value = value_value_buf;;
    GetNodeModifiers()->getPolygonModifier()->setPoints(self, (const Opt_Array_ShapePoint*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PolygonAttribute_points, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Polyline_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getPolylineModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Polyline_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_PolylineInterface_setPolylineOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PolylineOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readPolylineOptions();
        }
        Opt_PolylineOptions options_value = options_value_buf;;
        GetNodeModifiers()->getPolylineModifier()->setPolylineOptions(self, (const Opt_PolylineOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(PolylineInterface_setPolylineOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PolylineAttribute_points(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
    Opt_Array_ShapePoint value_value_buf = {};
    value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
    if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
    {
        const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
        Array_ShapePoint value_value_buf_ = {};
        thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
    std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
        for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
            Ark_ShapePoint value_value_buf__buf = {};
            value_value_buf__buf.value0 = thisDeserializer.readLength();
            value_value_buf__buf.value1 = thisDeserializer.readLength();
            value_value_buf_.array[value_value_buf__i] = value_value_buf__buf;
        }
        value_value_buf.value = value_value_buf_;
    }
    Opt_Array_ShapePoint value_value = value_value_buf;;
    GetNodeModifiers()->getPolylineModifier()->setPoints(self, (const Opt_Array_ShapePoint*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(PolylineAttribute_points, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Progress_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getProgressModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Progress_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ProgressInterface_setProgressOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ProgressOptions options_value = thisDeserializer.readProgressOptions();;
        GetNodeModifiers()->getProgressModifier()->setProgressOptions(self, (const Ark_ProgressOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressInterface_setProgressOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setValue(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_value, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setColor(self, (const Opt_Union_ResourceColor_LinearGradient*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_style(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLinearStyleOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readRingStyleOptions();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readCapsuleStyleOptions();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readProgressStyleOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions>(value_value_buf_);
        }
        Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setStyle(self, (const Opt_Union_LinearStyleOptions_RingStyleOptions_CapsuleStyleOptions_ProgressStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_style, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_privacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setPrivacySensitive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_privacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getProgressModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_QRCode_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getQRCodeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(QRCode_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_QRCodeInterface_setQRCodeOptions(Ark_NativePointer thisPtr, const KStringPtr& value) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getQRCodeModifier()->setQRCodeOptions(self, (const Ark_String*) (&value));
}
KOALA_INTEROP_V2(QRCodeInterface_setQRCodeOptions, Ark_NativePointer, KStringPtr)
void impl_QRCodeAttribute_color(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_color, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_QRCodeAttribute_backgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_backgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_QRCodeAttribute_contentOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getQRCodeModifier()->setContentOpacity(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(QRCodeAttribute_contentOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Radio_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRadioModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Radio_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RadioInterface_setRadioOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RadioOptions options_value = thisDeserializer.readRadioOptions();;
        GetNodeModifiers()->getRadioModifier()->setRadioOptions(self, (const Ark_RadioOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RadioInterface_setRadioOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_checked0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setChecked0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_checked0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_checked1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setChecked1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_checked1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setOnChange0(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRadioChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isChecked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRadioChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isChecked)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRadioChangeCallback))))};
        }
        Opt_OnRadioChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setOnChange1(self, (const Opt_OnRadioChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_radioStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RadioStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRadioStyle();
        }
        Opt_RadioStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setRadioStyle(self, (const Opt_RadioStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_radioStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_contentModifier0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setContentModifier0(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_contentModifier0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute_contentModifier1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRadioModifier()->setContentModifier1(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute_contentModifier1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RadioAttribute__onChangeEvent_checked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getRadioModifier()->set_onChangeEvent_checked(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(RadioAttribute__onChangeEvent_checked, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Rating_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRatingModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Rating_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RatingInterface_setRatingOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RatingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRatingOptions();
        }
        Opt_RatingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setRatingOptions(self, (const Opt_RatingOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RatingInterface_setRatingOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_stars0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStars0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_stars0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_stars1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStars1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_stars1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_stepSize0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStepSize0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_stepSize0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_stepSize1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStepSize1(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_stepSize1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_starStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StarStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readStarStyleOptions();
        }
        Opt_StarStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStarStyle0(self, (const Opt_StarStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_starStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_starStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StarStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readStarStyleOptions();
        }
        Opt_StarStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setStarStyle1(self, (const Opt_StarStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_starStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setOnChange0(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRatingChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRatingChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number rating)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRatingChangeCallback))))};
        }
        Opt_OnRatingChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setOnChange1(self, (const Opt_OnRatingChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_contentModifier0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setContentModifier0(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_contentModifier0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute_contentModifier1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getRatingModifier()->setContentModifier1(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute_contentModifier1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RatingAttribute__onChangeEvent_rating(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getRatingModifier()->set_onChangeEvent_rating(self, (const Callback_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(RatingAttribute__onChangeEvent_rating, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Rect_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRectModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Rect_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RectInterface_setRectOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RectOptions_RoundedRectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RectOptions_RoundedRectOptions options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = thisDeserializer.readRectOptions();
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = thisDeserializer.readRoundedRectOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RectOptions_RoundedRectOptions>(options_value_buf_);
        }
        Opt_Union_RectOptions_RoundedRectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRectOptions(self, (const Opt_Union_RectOptions_RoundedRectOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RectInterface_setRectOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RectAttribute_radiusWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRadiusWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RectAttribute_radiusWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RectAttribute_radiusHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRadiusHeight(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RectAttribute_radiusHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RectAttribute_radius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Array_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Array_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Union_Number_String value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    const Ark_Int8 value_value_buf__u_buf_selector = thisDeserializer.readInt8();
                    Ark_Union_Number_String value_value_buf__u_buf = {};
                    value_value_buf__u_buf.selector = value_value_buf__u_buf_selector;
                    if (value_value_buf__u_buf_selector == 0) {
                        value_value_buf__u_buf.selector = 0;
                        value_value_buf__u_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                    }
                    else if (value_value_buf__u_buf_selector == 1) {
                        value_value_buf__u_buf.selector = 1;
                        value_value_buf__u_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
                    }
                    else {
                        INTEROP_FATAL("One of the branches for value_value_buf__u_buf has to be chosen through deserialisation.");
                    }
                    value_value_buf__u.array[value_value_buf__u_i] = static_cast<Ark_Union_Number_String>(value_value_buf__u_buf);
                }
                value_value_buf_.value2 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Array_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String_Array_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getRectModifier()->setRadius(self, (const Opt_Union_Number_String_Array_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RectAttribute_radius, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Refresh_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRefreshModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Refresh_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RefreshInterface_setRefreshOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RefreshOptions value_value = thisDeserializer.readRefreshOptions();;
        GetNodeModifiers()->getRefreshModifier()->setRefreshOptions(self, (const Ark_RefreshOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshInterface_setRefreshOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_onStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RefreshStatus_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_RefreshStatus state)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RefreshStatus_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_RefreshStatus state)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RefreshStatus_Void))))};
        }
        Opt_Callback_RefreshStatus_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnStateChange(self, (const Opt_Callback_RefreshStatus_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_onStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_onRefreshing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnRefreshing(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_onRefreshing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_refreshOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setRefreshOffset(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_refreshOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_pullToRefresh(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setPullToRefresh(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_pullToRefresh, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_onOffsetChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setOnOffsetChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_onOffsetChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute_pullDownRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRefreshModifier()->setPullDownRatio(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute_pullDownRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RefreshAttribute__onChangeEvent_refreshing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};;
        GetNodeModifiers()->getRefreshModifier()->set_onChangeEvent_refreshing(self, (const Callback_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(RefreshAttribute__onChangeEvent_refreshing, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RelativeContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRelativeContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RelativeContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RelativeContainerInterface_setRelativeContainerOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRelativeContainerModifier()->setRelativeContainerOptions(self);
}
KOALA_INTEROP_DIRECT_V1(RelativeContainerInterface_setRelativeContainerOptions, Ark_NativePointer)
void impl_RelativeContainerAttribute_guideLine(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_GuideLineStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_GuideLineStyle value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readGuideLineStyle();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_GuideLineStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRelativeContainerModifier()->setGuideLine(self, (const Opt_Array_GuideLineStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RelativeContainerAttribute_guideLine, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RelativeContainerAttribute_barrier0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_BarrierStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_BarrierStyle value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readBarrierStyle();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_BarrierStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRelativeContainerModifier()->setBarrier0(self, (const Opt_Array_BarrierStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RelativeContainerAttribute_barrier0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RelativeContainerAttribute_barrier1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_LocalizedBarrierStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_LocalizedBarrierStyle value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readLocalizedBarrierStyle();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_LocalizedBarrierStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRelativeContainerModifier()->setBarrier1(self, (const Opt_Array_LocalizedBarrierStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RelativeContainerAttribute_barrier1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichEditor_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRichEditorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RichEditor_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RichEditorInterface_setRichEditorOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RichEditorOptions value_value = thisDeserializer.readRichEditorOptions();;
        GetNodeModifiers()->getRichEditorModifier()->setRichEditorOptions0(self, (const Ark_RichEditorOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorInterface_setRichEditorOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorInterface_setRichEditorOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RichEditorStyledStringOptions options_value = thisDeserializer.readRichEditorStyledStringOptions();;
        GetNodeModifiers()->getRichEditorModifier()->setRichEditorOptions1(self, (const Ark_RichEditorStyledStringOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorInterface_setRichEditorOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnReady(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onSelect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorSelection_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorSelection parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorSelection_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorSelection parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorSelection_Void))))};
        }
        Opt_Callback_RichEditorSelection_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSelect(self, (const Opt_Callback_RichEditorSelection_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onSelect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorRange_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorRange parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorRange_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorRange parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorRange_Void))))};
        }
        Opt_Callback_RichEditorRange_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSelectionChange(self, (const Opt_Callback_RichEditorRange_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_aboutToIMEInput(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorInsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorInsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorInsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorInsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorInsertValue_Boolean))))};
        }
        Opt_Callback_RichEditorInsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setAboutToIMEInput(self, (const Opt_Callback_RichEditorInsertValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_aboutToIMEInput, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onIMEInputComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorTextSpanResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorTextSpanResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorTextSpanResult parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorTextSpanResult_Void))))};
        }
        Opt_Callback_RichEditorTextSpanResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnIMEInputComplete(self, (const Opt_Callback_RichEditorTextSpanResult_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onIMEInputComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onDidIMEInput(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TextRange_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TextRange parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TextRange_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TextRange_Void))))};
        }
        Opt_Callback_TextRange_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDidIMEInput(self, (const Opt_Callback_TextRange_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onDidIMEInput, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_aboutToDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorDeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorDeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorDeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorDeleteValue_Boolean))))};
        }
        Opt_Callback_RichEditorDeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setAboutToDelete(self, (const Opt_Callback_RichEditorDeleteValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_aboutToDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onDeleteComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDeleteComplete(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onDeleteComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_copyOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCopyOptions(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_copyOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PasteEventCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_PasteEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_PasteEventCallback))))};
        }
        Opt_PasteEventCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnPaste(self, (const Opt_PasteEventCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_enableDataDetector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableDataDetector(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_enableDataDetector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_enablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnablePreviewText(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_enablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_dataDetectorConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDataDetectorConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextDataDetectorConfig();
        }
        Opt_TextDataDetectorConfig value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setDataDetectorConfig(self, (const Opt_TextDataDetectorConfig*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_dataDetectorConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_caretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCaretColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_caretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onEditingChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnEditingChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onEditingChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_enterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnterKeyType(self, (const Opt_EnterKeyType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_enterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SubmitCallback))))};
        }
        Opt_SubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnSubmit(self, (const Opt_SubmitCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_RichEditorChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RichEditorChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RichEditorChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RichEditorChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RichEditorChangeValue_Boolean))))};
        }
        Opt_Callback_RichEditorChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnWillChange(self, (const Opt_Callback_RichEditorChangeValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onDidChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnDidChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnDidChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TextRange rangeBefore, const Ark_TextRange rangeAfter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnDidChangeCallback))))};
        }
        Opt_OnDidChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnDidChange(self, (const Opt_OnDidChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onDidChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CutEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CutEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CutEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CutEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CutEvent_Void))))};
        }
        Opt_Callback_CutEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnCut(self, (const Opt_Callback_CutEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_onCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_CopyEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CopyEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CopyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CopyEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CopyEvent_Void))))};
        }
        Opt_Callback_CopyEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setOnCopy(self, (const Opt_Callback_CopyEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_onCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_enableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableKeyboardOnFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_enableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_barState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setBarState(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_barState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_maxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setMaxLength(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_maxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_maxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setMaxLines(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_maxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_keyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setKeyboardAppearance(self, (const Opt_KeyboardAppearance*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_keyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_stopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setStopBackPress(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_stopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_bindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto spanType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorSpanType spanType_value_buf = {};
        spanType_value_buf.tag = spanType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (spanType_value_buf_runtimeType))
        {
            spanType_value_buf.value = static_cast<Ark_RichEditorSpanType>(thisDeserializer.readInt32());
        }
        Opt_RichEditorSpanType spanType_value = spanType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResponseType_RichEditorResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (responseType_value_buf_runtimeType))
        {
            const Ark_Int8 responseType_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResponseType_RichEditorResponseType responseType_value_buf_ = {};
            responseType_value_buf_.selector = responseType_value_buf__selector;
            if (responseType_value_buf__selector == 0) {
                responseType_value_buf_.selector = 0;
                responseType_value_buf_.value0 = static_cast<Ark_ResponseType>(thisDeserializer.readInt32());
            }
            else if (responseType_value_buf__selector == 1) {
                responseType_value_buf_.selector = 1;
                responseType_value_buf_.value1 = static_cast<Ark_RichEditorResponseType>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for responseType_value_buf_ has to be chosen through deserialisation.");
            }
            responseType_value_buf.value = static_cast<Ark_Union_ResponseType_RichEditorResponseType>(responseType_value_buf_);
        }
        Opt_Union_ResponseType_RichEditorResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionMenuOptions();
        }
        Opt_SelectionMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setBindSelectionMenu(self, (const Opt_RichEditorSpanType*)&spanType_value, (const Opt_CustomNodeBuilder*)&content_value, (const Opt_Union_ResponseType_RichEditorResponseType*)&responseType_value, (const Opt_SelectionMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_bindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_customKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readKeyboardOptions();
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setCustomKeyboard(self, (const Opt_CustomNodeBuilder*)&value_value, (const Opt_KeyboardOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_customKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorAttribute_placeholder(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PlaceholderStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = thisDeserializer.readPlaceholderStyle();
        }
        Opt_PlaceholderStyle style_value = style_value_buf;;
        GetNodeModifiers()->getRichEditorModifier()->setPlaceholder(self, (const Opt_ResourceStr*)&value_value, (const Opt_PlaceholderStyle*)&style_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorAttribute_placeholder, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichText_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRichTextModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RichText_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RichTextInterface_setRichTextOptions(Ark_NativePointer thisPtr, const KStringPtr& content) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRichTextModifier()->setRichTextOptions(self, (const Ark_String*) (&content));
}
KOALA_INTEROP_V2(RichTextInterface_setRichTextOptions, Ark_NativePointer, KStringPtr)
void impl_RichTextAttribute_onStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichTextModifier()->setOnStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichTextAttribute_onStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichTextAttribute_onComplete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getRichTextModifier()->setOnComplete(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichTextAttribute_onComplete, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RootScene_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRootSceneModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RootScene_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RootSceneInterface_setRootSceneOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RootSceneSession session_value = thisDeserializer.readRootSceneSession();;
        GetNodeModifiers()->getRootSceneModifier()->setRootSceneOptions(self, (const Ark_RootSceneSession*)&session_value);
}
KOALA_INTEROP_DIRECT_V3(RootSceneInterface_setRootSceneOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Row_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Row_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RowInterface_setRowOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RowOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRowOptions();
        }
        Opt_RowOptions options_value = options_value_buf;;
        GetNodeModifiers()->getRowModifier()->setRowOptions0(self, (const Opt_RowOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RowInterface_setRowOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowInterface_setRowOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RowOptions_RowOptionsV2 options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RowOptions_RowOptionsV2 options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = thisDeserializer.readRowOptions();
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = thisDeserializer.readRowOptionsV2();
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RowOptions_RowOptionsV2>(options_value_buf_);
        }
        Opt_Union_RowOptions_RowOptionsV2 options_value = options_value_buf;;
        GetNodeModifiers()->getRowModifier()->setRowOptions1(self, (const Opt_Union_RowOptions_RowOptionsV2*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(RowInterface_setRowOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_alignItems(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VerticalAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_VerticalAlign>(thisDeserializer.readInt32());
        }
        Opt_VerticalAlign value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setAlignItems(self, (const Opt_VerticalAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_alignItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_justifyContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FlexAlign>(thisDeserializer.readInt32());
        }
        Opt_FlexAlign value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setJustifyContent(self, (const Opt_FlexAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_justifyContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_pointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPointLightStyle();
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setPointLight(self, (const Opt_PointLightStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_pointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RowAttribute_reverse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRowModifier()->setReverse(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RowAttribute_reverse, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RowSplit_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRowSplitModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RowSplit_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RowSplitInterface_setRowSplitOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getRowSplitModifier()->setRowSplitOptions(self);
}
KOALA_INTEROP_DIRECT_V1(RowSplitInterface_setRowSplitOptions, Ark_NativePointer)
void impl_RowSplitAttribute_resizeable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getRowSplitModifier()->setResizeable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RowSplitAttribute_resizeable, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SaveButton_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSaveButtonModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SaveButton_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SaveButtonInterface_setSaveButtonOptions0(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getSaveButtonModifier()->setSaveButtonOptions0(self);
}
KOALA_INTEROP_DIRECT_V1(SaveButtonInterface_setSaveButtonOptions0, Ark_NativePointer)
void impl_SaveButtonInterface_setSaveButtonOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SaveButtonOptions options_value = thisDeserializer.readSaveButtonOptions();;
        GetNodeModifiers()->getSaveButtonModifier()->setSaveButtonOptions1(self, (const Ark_SaveButtonOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SaveButtonInterface_setSaveButtonOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SaveButtonAttribute_onClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SaveButtonCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_SaveButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SaveButtonCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event, Ark_SaveButtonOnClickResult result, const Opt_BusinessError error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SaveButtonCallback))))};
        }
        Opt_SaveButtonCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSaveButtonModifier()->setOnClick(self, (const Opt_SaveButtonCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SaveButtonAttribute_onClick, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Screen_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScreenModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Screen_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScreenInterface_setScreenOptions(Ark_NativePointer thisPtr, KInteropNumber screenId) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getScreenModifier()->setScreenOptions(self, (const Ark_Number*) (&screenId));
}
KOALA_INTEROP_DIRECT_V2(ScreenInterface_setScreenOptions, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_Scroll_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Scroll_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollInterface_setScrollOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scroller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Scroller scroller_value_buf = {};
        scroller_value_buf.tag = scroller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scroller_value_buf_runtimeType))
        {
            scroller_value_buf.value = static_cast<Ark_Scroller>(thisDeserializer.readScroller());
        }
        Opt_Scroller scroller_value = scroller_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollOptions(self, (const Opt_Scroller*)&scroller_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollInterface_setScrollOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_scrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ScrollDirection>(thisDeserializer.readInt32());
        }
        Opt_ScrollDirection value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollable(self, (const Opt_ScrollDirection*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_scrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScroll(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollOnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_OffsetResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ScrollOnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_OffsetResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ScrollOnWillScrollCallback))))};
        }
        Opt_ScrollOnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnWillScroll(self, (const Opt_ScrollOnWillScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollOnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ScrollOnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number xOffset, const Ark_Number yOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ScrollOnScrollCallback))))};
        }
        Opt_ScrollOnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnDidScroll(self, (const Opt_ScrollOnScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScrollEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollEdgeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_Edge side)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollEdgeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_Edge side)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollEdgeCallback))))};
        }
        Opt_OnScrollEdgeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollEdge(self, (const Opt_OnScrollEdgeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScrollEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScrollStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollStart(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScrollStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScrollEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollEnd(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScrollEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScrollStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollStop(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScrollStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_scrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBar(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_scrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_scrollBarColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Color_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Color_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Color_Number_String>(value_value_buf_);
        }
        Opt_Union_Color_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBarColor(self, (const Opt_Union_Color_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_scrollBarColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_scrollBarWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollBarWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_scrollBarWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_onScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setOnScrollFrameBegin(self, (const Opt_OnScrollFrameBeginCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_onScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNestedScrollOptions();
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setNestedScroll(self, (const Opt_NestedScrollOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_enableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEnableScrollInteraction(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_enableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_friction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setFriction(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_friction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_scrollSnap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollSnapOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readScrollSnapOptions();
        }
        Opt_ScrollSnapOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setScrollSnap(self, (const Opt_ScrollSnapOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_scrollSnap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_enablePaging(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEnablePaging(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_enablePaging, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_initialOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OffsetOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readOffsetOptions();
        }
        Opt_OffsetOptions value_value = value_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setInitialOffset(self, (const Opt_OffsetOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_initialOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollAttribute_edgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto edgeEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect edgeEffect_value_buf = {};
        edgeEffect_value_buf.tag = edgeEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (edgeEffect_value_buf_runtimeType))
        {
            edgeEffect_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect edgeEffect_value = edgeEffect_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffectOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readEdgeEffectOptions();
        }
        Opt_EdgeEffectOptions options_value = options_value_buf;;
        GetNodeModifiers()->getScrollModifier()->setEdgeEffect(self, (const Opt_EdgeEffect*)&edgeEffect_value, (const Opt_EdgeEffectOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollAttribute_edgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScrollBar_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getScrollBarModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(ScrollBar_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ScrollBarInterface_setScrollBarOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScrollBarOptions value_value = thisDeserializer.readScrollBarOptions();;
        GetNodeModifiers()->getScrollBarModifier()->setScrollBarOptions(self, (const Ark_ScrollBarOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollBarInterface_setScrollBarOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScrollBarAttribute_enableNestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getScrollBarModifier()->setEnableNestedScroll(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ScrollBarAttribute_enableNestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Search_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSearchModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Search_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SearchInterface_setSearchOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSearchOptions();
        }
        Opt_SearchOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchOptions(self, (const Opt_SearchOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SearchInterface_setSearchOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_searchIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_IconOptions_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_IconOptions_SymbolGlyphModifier value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readIconOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readSymbolGlyphModifier();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_IconOptions_SymbolGlyphModifier>(value_value_buf_);
        }
        Opt_Union_IconOptions_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchIcon(self, (const Opt_Union_IconOptions_SymbolGlyphModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_searchIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_cancelButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readCancelButtonOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readCancelButtonSymbolOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_CancelButtonOptions_CancelButtonSymbolOptions>(value_value_buf_);
        }
        Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCancelButton(self, (const Opt_Union_CancelButtonOptions_CancelButtonSymbolOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_cancelButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_textIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextIndent(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_textIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnEditChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_caretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCaretStyle();
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCaretStyle(self, (const Opt_CaretStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_caretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_placeholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setPlaceholderColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_placeholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_placeholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setPlaceholderFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_placeholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_textFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_textFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_enterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnterKeyType(self, (const Opt_EnterKeyType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_enterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onSubmit0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnSubmit0(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onSubmit0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onSubmit1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SearchSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String searchContent, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SearchSubmitCallback))))};
        }
        Opt_SearchSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnSubmit1(self, (const Opt_SearchSubmitCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onSubmit1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnChange(self, (const Opt_EditableTextOnChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextSelectionChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextSelectionChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextSelectionChangeCallback))))};
        }
        Opt_OnTextSelectionChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnTextSelectionChange(self, (const Opt_OnTextSelectionChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContentScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContentScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContentScrollCallback))))};
        }
        Opt_OnContentScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnContentScroll(self, (const Opt_OnContentScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnCopy(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnCut(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnPasteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnPasteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnPasteCallback))))};
        }
        Opt_OnPasteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnPaste(self, (const Opt_OnPasteCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_copyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCopyOption(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_copyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_maxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxLength(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_maxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_textAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setTextAlign(self, (const Opt_TextAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_textAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_enableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnableKeyboardOnFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_enableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_selectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSelectionMenuHidden(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_selectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMinFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_maxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_maxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_decoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextDecorationOptions();
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setDecoration(self, (const Opt_TextDecorationOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_decoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_letterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setLetterSpacing(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_letterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_lineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setLineHeight(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_lineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SearchType>(thisDeserializer.readInt32());
        }
        Opt_SearchType value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setType(self, (const Opt_SearchType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_fontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setFontFeature(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_fontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillInsert(self, (const Opt_Callback_InsertValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnDidInsert(self, (const Opt_Callback_InsertValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillDelete(self, (const Opt_Callback_DeleteValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnDidDelete(self, (const Opt_Callback_DeleteValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_enablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnablePreviewText(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_enablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_autoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setAutoCapitalizationMode(self, (const Opt_AutoCapitalizationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_autoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_halfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setHalfLeading(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_halfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_stopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setStopBackPress(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_stopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_onWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setOnWillChange(self, (const Opt_Callback_EditableTextChangeValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_onWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_keyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setKeyboardAppearance(self, (const Opt_KeyboardAppearance*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_keyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_searchButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        const auto option_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SearchButtonOptions option_value_buf = {};
        option_value_buf.tag = option_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (option_value_buf_runtimeType))
        {
            option_value_buf.value = thisDeserializer.readSearchButtonOptions();
        }
        Opt_SearchButtonOptions option_value = option_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setSearchButton(self, (const Opt_String*)&value_value, (const Opt_SearchButtonOptions*)&option_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_searchButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_inputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (error_value_buf_runtimeType))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setInputFilter(self, (const Opt_ResourceStr*)&value_value, (const Opt_Callback_String_Void*)&error_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_inputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute_customKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readKeyboardOptions();
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSearchModifier()->setCustomKeyboard(self, (const Opt_CustomNodeBuilder*)&value_value, (const Opt_KeyboardOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute_customKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SearchAttribute__onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_String_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetNodeModifiers()->getSearchModifier()->set_onChangeEvent_value(self, (const Callback_String_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SearchAttribute__onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SecurityComponentMethod_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSecurityComponentMethodModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SecurityComponentMethod_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SecurityComponentMethod_iconSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setIconSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_iconSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_layoutDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SecurityComponentLayoutDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SecurityComponentLayoutDirection>(thisDeserializer.readInt32());
        }
        Opt_SecurityComponentLayoutDirection value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setLayoutDirection(self, (const Opt_SecurityComponentLayoutDirection*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_layoutDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPosition();
        }
        Opt_Position value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setPosition(self, (const Opt_Position*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_position, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_markAnchor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPosition();
        }
        Opt_Position value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMarkAnchor(self, (const Opt_Position*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_markAnchor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Position_Edges_LocalizedEdges value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Position_Edges_LocalizedEdges value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readPosition();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdges();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdges();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Position_Edges_LocalizedEdges>(value_value_buf_);
        }
        Opt_Union_Position_Edges_LocalizedEdges value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setOffset(self, (const Opt_Union_Position_Edges_LocalizedEdges*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_offset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setFontFamily(self, (const Opt_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_iconColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setIconColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_iconColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_backgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_backgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_borderStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BorderStyle>(thisDeserializer.readInt32());
        }
        Opt_BorderStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBorderStyle(self, (const Opt_BorderStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_borderStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_borderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBorderWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_borderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_borderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBorderColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_borderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_borderRadius0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBorderRadius0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_borderRadius0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_borderRadius1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_BorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_BorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBorderRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_BorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Dimension_BorderRadiuses value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setBorderRadius1(self, (const Opt_Union_Dimension_BorderRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_borderRadius1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_padding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Dimension value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Dimension value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Padding value_value_buf__u = {};
                const auto value_value_buf__u_top_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_top_buf = {};
                value_value_buf__u_top_buf.tag = value_value_buf__u_top_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_top_buf_runtimeType))
                {
                    value_value_buf__u_top_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.top = value_value_buf__u_top_buf;
                const auto value_value_buf__u_right_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_right_buf = {};
                value_value_buf__u_right_buf.tag = value_value_buf__u_right_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_right_buf_runtimeType))
                {
                    value_value_buf__u_right_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.right = value_value_buf__u_right_buf;
                const auto value_value_buf__u_bottom_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_bottom_buf = {};
                value_value_buf__u_bottom_buf.tag = value_value_buf__u_bottom_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_bottom_buf_runtimeType))
                {
                    value_value_buf__u_bottom_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.bottom = value_value_buf__u_bottom_buf;
                const auto value_value_buf__u_left_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_left_buf = {};
                value_value_buf__u_left_buf.tag = value_value_buf__u_left_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_left_buf_runtimeType))
                {
                    value_value_buf__u_left_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.left = value_value_buf__u_left_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLength();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Dimension>(value_value_buf_);
        }
        Opt_Union_Padding_Dimension value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setPadding(self, (const Opt_Union_Padding_Dimension*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_padding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_textIconSpace(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setTextIconSpace(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_textIconSpace, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_key(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setKey(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_key, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_width(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_width, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_height(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setHeight(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_height, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSizeOptions();
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setSize(self, (const Opt_SizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_size, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_constraintSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ConstraintSizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readConstraintSizeOptions();
        }
        Opt_ConstraintSizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setConstraintSize(self, (const Opt_ConstraintSizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_constraintSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_align(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setAlign(self, (const Opt_Alignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_align, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_alignRules0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AlignRuleOption value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readAlignRuleOption();
        }
        Opt_AlignRuleOption value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setAlignRules0(self, (const Opt_AlignRuleOption*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_alignRules0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_alignRules1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LocalizedAlignRuleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLocalizedAlignRuleOptions();
        }
        Opt_LocalizedAlignRuleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setAlignRules1(self, (const Opt_LocalizedAlignRuleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_alignRules1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_id(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setId(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_id, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_maxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMaxLines(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_maxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMinFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_maxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setMaxFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_maxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_heightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setHeightAdaptivePolicy(self, (const Opt_TextHeightAdaptivePolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_heightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_enabled(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setEnabled(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_enabled, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SecurityComponentMethod_chainMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (direction_value_buf_runtimeType))
        {
            direction_value_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        Opt_Axis direction_value = direction_value_buf;;
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ChainStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_ChainStyle>(thisDeserializer.readInt32());
        }
        Opt_ChainStyle style_value = style_value_buf;;
        GetNodeModifiers()->getSecurityComponentMethodModifier()->setChainMode(self, (const Opt_Axis*)&direction_value, (const Opt_ChainStyle*)&style_value);
}
KOALA_INTEROP_DIRECT_V3(SecurityComponentMethod_chainMode, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Select_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSelectModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Select_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SelectInterface_setSelectOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 options_value_buf_length = thisDeserializer.readInt32();
        Array_SelectOption options_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(options_value_buf)>::type,
        std::decay<decltype(*options_value_buf.array)>::type>(&options_value_buf, options_value_buf_length);
        for (int options_value_buf_i = 0; options_value_buf_i < options_value_buf_length; options_value_buf_i++) {
            options_value_buf.array[options_value_buf_i] = thisDeserializer.readSelectOption();
        }
        Array_SelectOption options_value = options_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectOptions(self, (const Array_SelectOption*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SelectInterface_setSelectOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selected0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelected0(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selected0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selected1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelected1(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selected1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_value0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setValue0(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_value0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_value1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setValue1(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_value1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_font0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFont0(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_font0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_font1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFont1(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_font1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_fontColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFontColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_fontColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_fontColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setFontColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_fontColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionBgColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionBgColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionBgColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionBgColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionBgColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionBgColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionFont0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFont0(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionFont0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionFont1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFont1(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionFont1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionFontColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFontColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionFontColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionFontColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionFontColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionFontColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionBgColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionBgColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionBgColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionBgColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionBgColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionBgColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionFont0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFont0(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionFont0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionFont1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFont1(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionFont1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionFontColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFontColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionFontColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionFontColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionFontColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionFontColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_onSelect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_String_Void))))};
        }
        Opt_Callback_Number_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOnSelect0(self, (const Opt_Callback_Number_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_onSelect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_onSelect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSelectCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSelectCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_String selectStr)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSelectCallback))))};
        }
        Opt_OnSelectCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOnSelect1(self, (const Opt_OnSelectCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_onSelect1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_space0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSpace0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_space0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_space1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSpace1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_space1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_arrowPosition0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ArrowPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ArrowPosition>(thisDeserializer.readInt32());
        }
        Opt_ArrowPosition value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setArrowPosition0(self, (const Opt_ArrowPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_arrowPosition0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_arrowPosition1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ArrowPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ArrowPosition>(thisDeserializer.readInt32());
        }
        Opt_ArrowPosition value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setArrowPosition1(self, (const Opt_ArrowPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_arrowPosition1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OptionWidthMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OptionWidthMode value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_OptionWidthMode>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OptionWidthMode>(value_value_buf_);
        }
        Opt_Union_Dimension_OptionWidthMode value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionWidth0(self, (const Opt_Union_Dimension_OptionWidthMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Dimension_OptionWidthMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Dimension_OptionWidthMode value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_OptionWidthMode>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Dimension_OptionWidthMode>(value_value_buf_);
        }
        Opt_Union_Dimension_OptionWidthMode value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionWidth1(self, (const Opt_Union_Dimension_OptionWidthMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionHeight0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionHeight0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionHeight0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionHeight1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionHeight1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionHeight1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuBackgroundColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuBackgroundColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuBackgroundColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundColor1(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuBackgroundColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuBackgroundBlurStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundBlurStyle0(self, (const Opt_BlurStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuBackgroundBlurStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuBackgroundBlurStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuBackgroundBlurStyle1(self, (const Opt_BlurStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuBackgroundBlurStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_controlSize0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ControlSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ControlSize>(thisDeserializer.readInt32());
        }
        Opt_ControlSize value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setControlSize0(self, (const Opt_ControlSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_controlSize0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_controlSize1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ControlSize value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ControlSize>(thisDeserializer.readInt32());
        }
        Opt_ControlSize value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setControlSize1(self, (const Opt_ControlSize*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_controlSize1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuItemContentModifier0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuItemContentModifier0(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuItemContentModifier0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuItemContentModifier1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuItemContentModifier1(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuItemContentModifier1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerOptions();
        }
        Opt_DividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setDivider(self, (const Opt_DividerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_textModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextModifier();
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setTextModifier(self, (const Opt_TextModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_textModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_arrowModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolGlyphModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSymbolGlyphModifier();
        }
        Opt_SymbolGlyphModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setArrowModifier(self, (const Opt_SymbolGlyphModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_arrowModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_optionTextModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextModifier();
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setOptionTextModifier(self, (const Opt_TextModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_optionTextModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_selectedOptionTextModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextModifier();
        }
        Opt_TextModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setSelectedOptionTextModifier(self, (const Opt_TextModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_selectedOptionTextModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_dividerStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyleOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerStyleOptions();
        }
        Opt_DividerStyleOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setDividerStyle(self, (const Opt_DividerStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_dividerStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_avoidance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AvoidanceMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AvoidanceMode>(thisDeserializer.readInt32());
        }
        Opt_AvoidanceMode value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setAvoidance(self, (const Opt_AvoidanceMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_avoidance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuOutline(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuOutlineOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readMenuOutlineOptions();
        }
        Opt_MenuOutlineOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuOutline(self, (const Opt_MenuOutlineOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuOutline, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuAlign0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuAlignType alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (alignType_value_buf_runtimeType))
        {
            alignType_value_buf.value = static_cast<Ark_MenuAlignType>(thisDeserializer.readInt32());
        }
        Opt_MenuAlignType alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (offset_value_buf_runtimeType))
        {
            offset_value_buf.value = thisDeserializer.readOffset();
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuAlign0(self, (const Opt_MenuAlignType*)&alignType_value, (const Opt_Offset*)&offset_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuAlign0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute_menuAlign1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto alignType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MenuAlignType alignType_value_buf = {};
        alignType_value_buf.tag = alignType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (alignType_value_buf_runtimeType))
        {
            alignType_value_buf.value = static_cast<Ark_MenuAlignType>(thisDeserializer.readInt32());
        }
        Opt_MenuAlignType alignType_value = alignType_value_buf;;
        const auto offset_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Offset offset_value_buf = {};
        offset_value_buf.tag = offset_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (offset_value_buf_runtimeType))
        {
            offset_value_buf.value = thisDeserializer.readOffset();
        }
        Opt_Offset offset_value = offset_value_buf;;
        GetNodeModifiers()->getSelectModifier()->setMenuAlign1(self, (const Opt_MenuAlignType*)&alignType_value, (const Opt_Offset*)&offset_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute_menuAlign1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Union_Number_Resource_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Union_Number_Resource_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Union_Number_Resource selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Union_Number_Resource_Void))))};;
        GetNodeModifiers()->getSelectModifier()->set_onChangeEvent_selected(self, (const Callback_Opt_Union_Number_Resource_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SelectAttribute__onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_ResourceStr_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_ResourceStr_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_ResourceStr_Void))))};;
        GetNodeModifiers()->getSelectModifier()->set_onChangeEvent_value(self, (const Callback_Opt_ResourceStr_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SelectAttribute__onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Shape_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getShapeModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Shape_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ShapeInterface_setShapeOptions0(Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getShapeModifier()->setShapeOptions0(self, static_cast<Ark_PixelMap>(value));
}
KOALA_INTEROP_DIRECT_V2(ShapeInterface_setShapeOptions0, Ark_NativePointer, Ark_NativePointer)
void impl_ShapeInterface_setShapeOptions1(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getShapeModifier()->setShapeOptions1(self);
}
KOALA_INTEROP_DIRECT_V1(ShapeInterface_setShapeOptions1, Ark_NativePointer)
void impl_ShapeAttribute_viewPort(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ViewportRect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readViewportRect();
        }
        Opt_ViewportRect value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setViewPort(self, (const Opt_ViewportRect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_viewPort, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_stroke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStroke(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_stroke, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setFill(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_fill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeDashOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeDashOffset(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeDashOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeDashArray(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_Length value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readLength();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_Length value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeDashArray(self, (const Opt_Array_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeDashArray, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeLineCap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineCapStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineCapStyle>(thisDeserializer.readInt32());
        }
        Opt_LineCapStyle value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeLineCap(self, (const Opt_LineCapStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeLineCap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeLineJoin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineJoinStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineJoinStyle>(thisDeserializer.readInt32());
        }
        Opt_LineJoinStyle value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeLineJoin(self, (const Opt_LineJoinStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeLineJoin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeMiterLimit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeMiterLimit(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeMiterLimit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeOpacity(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_fillOpacity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setFillOpacity(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_fillOpacity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_strokeWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setStrokeWidth(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_strokeWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_antiAlias(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setAntiAlias(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeAttribute_antiAlias, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeAttribute_mesh(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber column, KInteropNumber row) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 value_value_buf_length = thisDeserializer.readInt32();
        Array_Number value_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(value_value_buf)>::type,
        std::decay<decltype(*value_value_buf.array)>::type>(&value_value_buf, value_value_buf_length);
        for (int value_value_buf_i = 0; value_value_buf_i < value_value_buf_length; value_value_buf_i++) {
            value_value_buf.array[value_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number value_value = value_value_buf;;
        GetNodeModifiers()->getShapeModifier()->setMesh(self, (const Array_Number*)&value_value, (const Ark_Number*) (&column), (const Ark_Number*) (&row));
}
KOALA_INTEROP_DIRECT_V5(ShapeAttribute_mesh, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_Slider_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSliderModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Slider_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SliderInterface_setSliderOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSliderOptions();
        }
        Opt_SliderOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSliderOptions(self, (const Opt_SliderOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SliderInterface_setSliderOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_blockColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_blockColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_trackColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackColor(self, (const Opt_Union_ResourceColor_LinearGradient*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_trackColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_selectedColor0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSelectedColor0(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_selectedColor0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_selectedColor1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_LinearGradient value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_LinearGradient value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_LinearGradient>(thisDeserializer.readLinearGradient());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_LinearGradient>(value_value_buf_);
        }
        Opt_Union_ResourceColor_LinearGradient value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSelectedColor1(self, (const Opt_Union_ResourceColor_LinearGradient*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_selectedColor1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_minLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setMinLabel(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_minLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_maxLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setMaxLabel(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_maxLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_showSteps(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setShowSteps(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_showSteps, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_trackThickness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackThickness(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_trackThickness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_SliderChangeMode_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_SliderChangeMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number value, Ark_SliderChangeMode mode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_SliderChangeMode_Void))))};
        }
        Opt_Callback_Number_SliderChangeMode_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setOnChange(self, (const Opt_Callback_Number_SliderChangeMode_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_blockBorderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockBorderColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_blockBorderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_blockBorderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockBorderWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_blockBorderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_stepColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setStepColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_stepColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_trackBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setTrackBorderRadius(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_trackBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_selectedBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSelectedBorderRadius(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_selectedBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_blockSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSizeOptions();
        }
        Opt_SizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockSize(self, (const Opt_SizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_blockSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_blockStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderBlockStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSliderBlockStyle();
        }
        Opt_SliderBlockStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setBlockStyle(self, (const Opt_SliderBlockStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_blockStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_stepSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setStepSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_stepSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_sliderInteractionMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SliderInteraction value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SliderInteraction>(thisDeserializer.readInt32());
        }
        Opt_SliderInteraction value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSliderInteractionMode(self, (const Opt_SliderInteraction*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_sliderInteractionMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_minResponsiveDistance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setMinResponsiveDistance(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_minResponsiveDistance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_slideRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SlideRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSlideRange();
        }
        Opt_SlideRange value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setSlideRange(self, (const Opt_SlideRange*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_slideRange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_digitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setDigitalCrownSensitivity(self, (const Opt_CrownSensitivity*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_digitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute_showTips(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_ResourceStr>(content_value_buf_);
        }
        Opt_ResourceStr content_value = content_value_buf;;
        GetNodeModifiers()->getSliderModifier()->setShowTips(self, (const Opt_Boolean*)&value_value, (const Opt_ResourceStr*)&content_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute_showTips, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SliderAttribute__onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getSliderModifier()->set_onChangeEvent_value(self, (const Callback_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SliderAttribute__onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getBaseSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(BaseSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_BaseSpan_textBackgroundStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextBackgroundStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextBackgroundStyle();
        }
        Opt_TextBackgroundStyle value_value = value_value_buf;;
        GetNodeModifiers()->getBaseSpanModifier()->setTextBackgroundStyle(self, (const Opt_TextBackgroundStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(BaseSpan_textBackgroundStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_BaseSpan_baselineOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getBaseSpanModifier()->setBaselineOffset(self, (const Opt_LengthMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(BaseSpan_baselineOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Span_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Span_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SpanInterface_setSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource value_value = static_cast<Ark_Union_String_Resource>(value_value_buf);;
        GetNodeModifiers()->getSpanModifier()->setSpanOptions(self, (const Ark_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanInterface_setSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_font(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_font, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setFontFamily(self, (const Opt_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_decoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DecorationStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDecorationStyleInterface();
        }
        Opt_DecorationStyleInterface value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setDecoration(self, (const Opt_DecorationStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_decoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_letterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setLetterSpacing(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_letterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_textCase(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextCase value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextCase>(thisDeserializer.readInt32());
        }
        Opt_TextCase value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setTextCase(self, (const Opt_TextCase*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_textCase, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_lineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setLineHeight(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_lineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SpanAttribute_textShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readShadowOptions();
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getSpanModifier()->setTextShadow(self, (const Opt_Union_ShadowOptions_Array_ShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SpanAttribute_textShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Stack_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStackModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Stack_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StackInterface_setStackOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StackOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readStackOptions();
        }
        Opt_StackOptions options_value = options_value_buf;;
        GetNodeModifiers()->getStackModifier()->setStackOptions(self, (const Opt_StackOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(StackInterface_setStackOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StackAttribute_alignContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Alignment value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Alignment>(thisDeserializer.readInt32());
        }
        Opt_Alignment value_value = value_value_buf;;
        GetNodeModifiers()->getStackModifier()->setAlignContent(self, (const Opt_Alignment*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StackAttribute_alignContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StackAttribute_pointLight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PointLightStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPointLightStyle();
        }
        Opt_PointLightStyle value_value = value_value_buf;;
        GetNodeModifiers()->getStackModifier()->setPointLight(self, (const Opt_PointLightStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StackAttribute_pointLight, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Stepper_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStepperModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Stepper_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StepperInterface_setStepperOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Number_index value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Number_index value_value_buf_ = {};
            const auto value_value_buf__index_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__index_buf = {};
            value_value_buf__index_buf.tag = value_value_buf__index_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__index_buf_runtimeType))
            {
                value_value_buf__index_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.index = value_value_buf__index_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Number_index value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setStepperOptions(self, (const Opt_Literal_Number_index*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperInterface_setStepperOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnFinish(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_onSkip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnSkip(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_onSkip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnChange(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_onNext(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnNext(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_onNext, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute_onPrevious(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getStepperModifier()->setOnPrevious(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute_onPrevious, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperAttribute__onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getStepperModifier()->set_onChangeEvent_index(self, (const Callback_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(StepperAttribute__onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StepperItem_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getStepperItemModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(StepperItem_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_StepperItemInterface_setStepperItemOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getStepperItemModifier()->setStepperItemOptions(self);
}
KOALA_INTEROP_DIRECT_V1(StepperItemInterface_setStepperItemOptions, Ark_NativePointer)
void impl_StepperItemAttribute_prevLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setPrevLabel(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_prevLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperItemAttribute_nextLabel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setNextLabel(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_nextLabel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_StepperItemAttribute_status(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ItemState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ItemState>(thisDeserializer.readInt32());
        }
        Opt_ItemState value_value = value_value_buf;;
        GetNodeModifiers()->getStepperItemModifier()->setStatus(self, (const Opt_ItemState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(StepperItemAttribute_status, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Swiper_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSwiperModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Swiper_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SwiperInterface_setSwiperOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (controller_value_buf_runtimeType))
        {
            controller_value_buf.value = static_cast<Ark_SwiperController>(thisDeserializer.readSwiperController());
        }
        Opt_SwiperController controller_value = controller_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setSwiperOptions(self, (const Opt_SwiperController*)&controller_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperInterface_setSwiperOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndex(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_index, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_autoPlay0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setAutoPlay0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_autoPlay0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_autoPlay1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto autoPlay_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean autoPlay_value_buf = {};
        autoPlay_value_buf.tag = autoPlay_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (autoPlay_value_buf_runtimeType))
        {
            autoPlay_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean autoPlay_value = autoPlay_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoPlayOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readAutoPlayOptions();
        }
        Opt_AutoPlayOptions options_value = options_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setAutoPlay1(self, (const Opt_Boolean*)&autoPlay_value, (const Opt_AutoPlayOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_autoPlay1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_interval(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setInterval(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_interval, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_indicator0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_DotIndicator_DigitIndicator_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_DotIndicator_DigitIndicator_Boolean value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readDotIndicator();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readDigitIndicator();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_DotIndicator_DigitIndicator_Boolean>(value_value_buf_);
        }
        Opt_Union_DotIndicator_DigitIndicator_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicator0(self, (const Opt_Union_DotIndicator_DigitIndicator_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_indicator0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_indicator1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_SwiperAttribute_indicator_indicator value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_SwiperAttribute_indicator_indicator value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_IndicatorComponentController>(thisDeserializer.readIndicatorComponentController());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readDotIndicator();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readDigitIndicator();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_SwiperAttribute_indicator_indicator>(value_value_buf_);
        }
        Opt_Type_SwiperAttribute_indicator_indicator value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicator1(self, (const Opt_Type_SwiperAttribute_indicator_indicator*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_indicator1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_loop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setLoop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_loop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_duration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDuration(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_duration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_vertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setVertical(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_vertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_itemSpace(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setItemSpace(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_itemSpace, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_displayMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperDisplayMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SwiperDisplayMode>(thisDeserializer.readInt32());
        }
        Opt_SwiperDisplayMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayMode(self, (const Opt_SwiperDisplayMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_displayMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_cachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCachedCount0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_cachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_cachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto isShown_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isShown_value_buf = {};
        isShown_value_buf.tag = isShown_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isShown_value_buf_runtimeType))
        {
            isShown_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isShown_value = isShown_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCachedCount1(self, (const Opt_Number*)&count_value, (const Opt_Boolean*)&isShown_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_cachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_effectMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setEffectMode(self, (const Opt_EdgeEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_effectMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_disableSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisableSwipe(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_disableSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_curve(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Curve_String_ICurve value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Curve_String_ICurve value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Curve>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_ICurve>(thisDeserializer.readICurve());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Curve_String_ICurve>(value_value_buf_);
        }
        Opt_Union_Curve_String_ICurve value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCurve(self, (const Opt_Union_Curve_String_ICurve*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_curve, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnSelected(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_indicatorStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_IndicatorStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readIndicatorStyle();
        }
        Opt_IndicatorStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicatorStyle(self, (const Opt_IndicatorStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_indicatorStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onUnselected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnUnselected(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onUnselected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onAnimationStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperAnimationStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperAnimationStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperAnimationStartCallback))))};
        }
        Opt_OnSwiperAnimationStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnAnimationStart(self, (const Opt_OnSwiperAnimationStartCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onAnimationStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onAnimationEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperAnimationEndCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperAnimationEndCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperAnimationEndCallback))))};
        }
        Opt_OnSwiperAnimationEndCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnAnimationEnd(self, (const Opt_OnSwiperAnimationEndCallback*)&value_value);
    }
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onAnimationEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onGestureSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSwiperGestureSwipeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSwiperGestureSwipeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_SwiperAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSwiperGestureSwipeCallback))))};
        }
        Opt_OnSwiperGestureSwipeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnGestureSwipe(self, (const Opt_OnSwiperGestureSwipeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onGestureSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperNestedScrollMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SwiperNestedScrollMode>(thisDeserializer.readInt32());
        }
        Opt_SwiperNestedScrollMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setNestedScroll(self, (const Opt_SwiperNestedScrollMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_customContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwiperContentAnimatedTransition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSwiperContentAnimatedTransition();
        }
        Opt_SwiperContentAnimatedTransition value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setCustomContentTransition(self, (const Opt_SwiperContentAnimatedTransition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_customContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onContentDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentDidScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ContentDidScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectedIndex, const Ark_Number index, const Ark_Number position, const Ark_Number mainAxisLength)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ContentDidScrollCallback))))};
        }
        Opt_ContentDidScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnContentDidScroll(self, (const Opt_ContentDidScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onContentDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_indicatorInteractive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setIndicatorInteractive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_indicatorInteractive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_pageFlipMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PageFlipMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PageFlipMode>(thisDeserializer.readInt32());
        }
        Opt_PageFlipMode value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setPageFlipMode(self, (const Opt_PageFlipMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_pageFlipMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_onContentWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ContentWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SwiperContentWillScrollResult result, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ContentWillScrollCallback))))};
        }
        Opt_ContentWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setOnContentWillScroll(self, (const Opt_ContentWillScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_onContentWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_displayArrow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ArrowStyle_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ArrowStyle_Boolean value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readArrowStyle();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ArrowStyle_Boolean>(value_value_buf_);
        }
        Opt_Union_ArrowStyle_Boolean value_value = value_value_buf;;
        const auto isHoverShow_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isHoverShow_value_buf = {};
        isHoverShow_value_buf.tag = isHoverShow_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isHoverShow_value_buf_runtimeType))
        {
            isHoverShow_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isHoverShow_value = isHoverShow_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayArrow(self, (const Opt_Union_ArrowStyle_Boolean*)&value_value, (const Opt_Boolean*)&isHoverShow_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_displayArrow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_displayCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_SwiperAutoFill value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_SwiperAutoFill value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readSwiperAutoFill();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_SwiperAutoFill>(value_value_buf_);
        }
        Opt_Union_Number_String_SwiperAutoFill value_value = value_value_buf;;
        const auto swipeByGroup_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean swipeByGroup_value_buf = {};
        swipeByGroup_value_buf.tag = swipeByGroup_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (swipeByGroup_value_buf_runtimeType))
        {
            swipeByGroup_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean swipeByGroup_value = swipeByGroup_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setDisplayCount(self, (const Opt_Union_Number_String_SwiperAutoFill*)&value_value, (const Opt_Boolean*)&swipeByGroup_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_displayCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_prevMargin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        const auto ignoreBlank_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean ignoreBlank_value_buf = {};
        ignoreBlank_value_buf.tag = ignoreBlank_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ignoreBlank_value_buf_runtimeType))
        {
            ignoreBlank_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean ignoreBlank_value = ignoreBlank_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setPrevMargin(self, (const Opt_Length*)&value_value, (const Opt_Boolean*)&ignoreBlank_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_prevMargin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute_nextMargin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        const auto ignoreBlank_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean ignoreBlank_value_buf = {};
        ignoreBlank_value_buf.tag = ignoreBlank_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ignoreBlank_value_buf_runtimeType))
        {
            ignoreBlank_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean ignoreBlank_value = ignoreBlank_value_buf;;
        GetNodeModifiers()->getSwiperModifier()->setNextMargin(self, (const Opt_Length*)&value_value, (const Opt_Boolean*)&ignoreBlank_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute_nextMargin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperAttribute__onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Number_Void))))};;
        GetNodeModifiers()->getSwiperModifier()->set_onChangeEvent_index(self, (const Callback_Opt_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SwiperAttribute__onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_IndicatorComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getIndicatorComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(IndicatorComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_IndicatorComponentInterface_setIndicatorComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_IndicatorComponentController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (controller_value_buf_runtimeType))
        {
            controller_value_buf.value = static_cast<Ark_IndicatorComponentController>(thisDeserializer.readIndicatorComponentController());
        }
        Opt_IndicatorComponentController controller_value = controller_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setIndicatorComponentOptions(self, (const Opt_IndicatorComponentController*)&controller_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentInterface_setIndicatorComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_initialIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setInitialIndex(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_initialIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_count(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setCount(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_count, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_style(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_DotIndicator_DigitIndicator value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_DotIndicator_DigitIndicator value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readDotIndicator();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readDigitIndicator();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_DotIndicator_DigitIndicator>(value_value_buf_);
        }
        Opt_Union_DotIndicator_DigitIndicator value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setStyle(self, (const Opt_Union_DotIndicator_DigitIndicator*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_style, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_loop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setLoop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_loop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_vertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setVertical(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_vertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_IndicatorComponentAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getIndicatorComponentModifier()->setOnChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(IndicatorComponentAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SymbolGlyph_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSymbolGlyphModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SymbolGlyph_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SymbolGlyphInterface_setSymbolGlyphOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readResource();
        }
        Opt_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setSymbolGlyphOptions(self, (const Opt_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphInterface_setSymbolGlyphOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ResourceColor value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 3) {
                    value_value_buf__buf.selector = 3;
                    value_value_buf__buf.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ResourceColor>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontColor(self, (const Opt_Array_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_effectStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffectStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SymbolEffectStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolEffectStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setEffectStrategy(self, (const Opt_SymbolEffectStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_effectStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_renderingStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolRenderingStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SymbolRenderingStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolRenderingStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setRenderingStrategy(self, (const Opt_SymbolRenderingStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_renderingStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_symbolEffect0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto symbolEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffect symbolEffect_value_buf = {};
        symbolEffect_value_buf.tag = symbolEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (symbolEffect_value_buf_runtimeType))
        {
            symbolEffect_value_buf.value = static_cast<Ark_SymbolEffect>(thisDeserializer.readSymbolEffect());
        }
        Opt_SymbolEffect symbolEffect_value = symbolEffect_value_buf;;
        const auto isActive_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean isActive_value_buf = {};
        isActive_value_buf.tag = isActive_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (isActive_value_buf_runtimeType))
        {
            isActive_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean isActive_value = isActive_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setSymbolEffect0(self, (const Opt_SymbolEffect*)&symbolEffect_value, (const Opt_Boolean*)&isActive_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_symbolEffect0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolGlyphAttribute_symbolEffect1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto symbolEffect_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffect symbolEffect_value_buf = {};
        symbolEffect_value_buf.tag = symbolEffect_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (symbolEffect_value_buf_runtimeType))
        {
            symbolEffect_value_buf.value = static_cast<Ark_SymbolEffect>(thisDeserializer.readSymbolEffect());
        }
        Opt_SymbolEffect symbolEffect_value = symbolEffect_value_buf;;
        const auto triggerValue_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number triggerValue_value_buf = {};
        triggerValue_value_buf.tag = triggerValue_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (triggerValue_value_buf_runtimeType))
        {
            triggerValue_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number triggerValue_value = triggerValue_value_buf;;
        GetNodeModifiers()->getSymbolGlyphModifier()->setSymbolEffect1(self, (const Opt_SymbolEffect*)&symbolEffect_value, (const Opt_Number*)&triggerValue_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolGlyphAttribute_symbolEffect1, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SymbolSpan_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSymbolSpanModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SymbolSpan_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SymbolSpanInterface_setSymbolSpanOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = thisDeserializer.readResource();;
        GetNodeModifiers()->getSymbolSpanModifier()->setSymbolSpanOptions(self, (const Ark_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanInterface_setSymbolSpanOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ResourceColor value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                const Ark_Int8 value_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__buf = {};
                value_value_buf__buf.selector = value_value_buf__buf_selector;
                if (value_value_buf__buf_selector == 0) {
                    value_value_buf__buf.selector = 0;
                    value_value_buf__buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__buf_selector == 1) {
                    value_value_buf__buf.selector = 1;
                    value_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__buf_selector == 2) {
                    value_value_buf__buf.selector = 2;
                    value_value_buf__buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__buf_selector == 3) {
                    value_value_buf__buf.selector = 3;
                    value_value_buf__buf.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__buf has to be chosen through deserialisation.");
                }
                value_value_buf_.array[value_value_buf__i] = static_cast<Ark_ResourceColor>(value_value_buf__buf);
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontColor(self, (const Opt_Array_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_effectStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolEffectStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SymbolEffectStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolEffectStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setEffectStrategy(self, (const Opt_SymbolEffectStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_effectStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SymbolSpanAttribute_renderingStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SymbolRenderingStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SymbolRenderingStrategy>(thisDeserializer.readInt32());
        }
        Opt_SymbolRenderingStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getSymbolSpanModifier()->setRenderingStrategy(self, (const Opt_SymbolRenderingStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SymbolSpanAttribute_renderingStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Tabs_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTabsModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Tabs_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TabsInterface_setTabsOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTabsOptions();
        }
        Opt_TabsOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setTabsOptions(self, (const Opt_TabsOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TabsInterface_setTabsOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_vertical(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setVertical(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_vertical, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarPosition>(thisDeserializer.readInt32());
        }
        Opt_BarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarPosition(self, (const Opt_BarPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_scrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setScrollable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_scrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barMode0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarMode>(thisDeserializer.readInt32());
        }
        Opt_BarMode value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarMode0(self, (const Opt_BarMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barMode0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barMode1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarMode>(thisDeserializer.readInt32());
        }
        Opt_BarMode value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollableBarModeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readScrollableBarModeOptions();
        }
        Opt_ScrollableBarModeOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarMode1(self, (const Opt_BarMode*)&value_value, (const Opt_ScrollableBarModeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barMode1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarHeight(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_animationDuration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setAnimationDuration(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_animationDuration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_animationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AnimationMode>(thisDeserializer.readInt32());
        }
        Opt_AnimationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setAnimationMode(self, (const Opt_AnimationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_animationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_edgeEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EdgeEffect value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EdgeEffect>(thisDeserializer.readInt32());
        }
        Opt_EdgeEffect value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setEdgeEffect(self, (const Opt_EdgeEffect*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_edgeEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnSelected(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onTabBarClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnTabBarClick(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onTabBarClick, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onUnselected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnUnselected(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onUnselected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onAnimationStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsAnimationStartCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsAnimationStartCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number targetIndex, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsAnimationStartCallback))))};
        }
        Opt_OnTabsAnimationStartCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnAnimationStart(self, (const Opt_OnTabsAnimationStartCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onAnimationStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onAnimationEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsAnimationEndCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsAnimationEndCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsAnimationEndCallback))))};
        }
        Opt_OnTabsAnimationEndCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnAnimationEnd(self, (const Opt_OnTabsAnimationEndCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onAnimationEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onGestureSwipe(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsGestureSwipeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsGestureSwipeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_TabsAnimationEvent extraInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsGestureSwipeCallback))))};
        }
        Opt_OnTabsGestureSwipeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnGestureSwipe(self, (const Opt_OnTabsGestureSwipeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onGestureSwipe, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_fadingEdge(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setFadingEdge(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_fadingEdge, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerStyle();
        }
        Opt_DividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setDivider(self, (const Opt_DividerStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barOverlap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarOverlap(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barOverlap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barGridAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarGridColumnOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBarGridColumnOptions();
        }
        Opt_BarGridColumnOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarGridAlign(self, (const Opt_BarGridColumnOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barGridAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_customContentTransition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsCustomContentTransitionCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TabsCustomContentTransitionCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number from, const Ark_Number to, const Callback_Opt_TabContentAnimatedTransition_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TabsCustomContentTransitionCallback))))};
        }
        Opt_TabsCustomContentTransitionCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setCustomContentTransition(self, (const Opt_TabsCustomContentTransitionCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_customContentTransition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barBackgroundBlurStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundBlurStyle0(self, (const Opt_BlurStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barBackgroundBlurStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barBackgroundBlurStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundBlurStyleOptions();
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundBlurStyle1(self, (const Opt_BlurStyle*)&style_value, (const Opt_BackgroundBlurStyleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barBackgroundBlurStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barBackgroundEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundEffectOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBackgroundEffectOptions();
        }
        Opt_BackgroundEffectOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarBackgroundEffect(self, (const Opt_BackgroundEffectOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barBackgroundEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_pageFlipMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PageFlipMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_PageFlipMode>(thisDeserializer.readInt32());
        }
        Opt_PageFlipMode value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setPageFlipMode(self, (const Opt_PageFlipMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_pageFlipMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_onContentWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTabsContentWillChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTabsContentWillChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number currentIndex, const Ark_Number comingIndex, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTabsContentWillChangeCallback))))};
        }
        Opt_OnTabsContentWillChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setOnContentWillChange(self, (const Opt_OnTabsContentWillChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_onContentWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_barModeScrollable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollableBarModeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readScrollableBarModeOptions();
        }
        Opt_ScrollableBarModeOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setBarModeScrollable(self, (const Opt_ScrollableBarModeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_barModeScrollable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute_cachedMaxCount(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto mode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TabsCacheMode mode_value_buf = {};
        mode_value_buf.tag = mode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mode_value_buf_runtimeType))
        {
            mode_value_buf.value = static_cast<Ark_TabsCacheMode>(thisDeserializer.readInt32());
        }
        Opt_TabsCacheMode mode_value = mode_value_buf;;
        GetNodeModifiers()->getTabsModifier()->setCachedMaxCount(self, (const Opt_Number*)&count_value, (const Opt_TabsCacheMode*)&mode_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute_cachedMaxCount, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsAttribute__onChangeEvent_index(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetNodeModifiers()->getTabsModifier()->set_onChangeEvent_index(self, (const Callback_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TabsAttribute__onChangeEvent_index, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TabContent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTabContentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TabContent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TabContentInterface_setTabContentOptions(Ark_NativePointer thisPtr) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getTabContentModifier()->setTabContentOptions(self);
}
KOALA_INTEROP_DIRECT_V1(TabContentInterface_setTabContentOptions, Ark_NativePointer)
void impl_TabContentAttribute_tabBar0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource_CustomBuilder_TabBarOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource_CustomBuilder_TabBarOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readTabBarOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource_CustomBuilder_TabBarOptions>(value_value_buf_);
        }
        Opt_Union_String_Resource_CustomBuilder_TabBarOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setTabBar0(self, (const Opt_Union_String_Resource_CustomBuilder_TabBarOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_tabBar0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_tabBar1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SubTabBarStyle_BottomTabBarStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SubTabBarStyle_BottomTabBarStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readSubTabBarStyle();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBottomTabBarStyle();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_SubTabBarStyle_BottomTabBarStyle>(value_value_buf_);
        }
        Opt_Union_SubTabBarStyle_BottomTabBarStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setTabBar1(self, (const Opt_Union_SubTabBarStyle_BottomTabBarStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_tabBar1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_tabBar2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_TabContentAttribute_tabBar_content value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_TabContentAttribute_tabBar_content value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_ComponentContent>(thisDeserializer.readComponentContent());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readSubTabBarStyle();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readBottomTabBarStyle();
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 4) {
                value_value_buf_.selector = 4;
                value_value_buf_.value4 = thisDeserializer.readResource();
            }
            else if (value_value_buf__selector == 5) {
                value_value_buf_.selector = 5;
                value_value_buf_.value5 = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
            }
            else if (value_value_buf__selector == 6) {
                value_value_buf_.selector = 6;
                value_value_buf_.value6 = thisDeserializer.readTabBarOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_TabContentAttribute_tabBar_content>(value_value_buf_);
        }
        Opt_Type_TabContentAttribute_tabBar_content value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setTabBar2(self, (const Opt_Type_TabContentAttribute_tabBar_content*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_tabBar2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_onWillShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setOnWillShow(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_onWillShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabContentAttribute_onWillHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTabContentModifier()->setOnWillHide(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TabContentAttribute_onWillHide, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Text_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Text_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextInterface_setTextOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            const Ark_Int8 content_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource content_value_buf_ = {};
            content_value_buf_.selector = content_value_buf__selector;
            if (content_value_buf__selector == 0) {
                content_value_buf_.selector = 0;
                content_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (content_value_buf__selector == 1) {
                content_value_buf_.selector = 1;
                content_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for content_value_buf_ has to be chosen through deserialisation.");
            }
            content_value_buf.value = static_cast<Ark_Union_String_Resource>(content_value_buf_);
        }
        Opt_Union_String_Resource content_value = content_value_buf;;
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextOptions();
        }
        Opt_TextOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextOptions(self, (const Opt_Union_String_Resource*)&content_value, (const Opt_TextOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInterface_setTextOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_font0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFont0(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_font0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_font1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fontValue_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font fontValue_value_buf = {};
        fontValue_value_buf.tag = fontValue_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fontValue_value_buf_runtimeType))
        {
            fontValue_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font fontValue_value = fontValue_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontSettingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readFontSettingOptions();
        }
        Opt_FontSettingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFont1(self, (const Opt_Font*)&fontValue_value, (const Opt_FontSettingOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_font1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMinFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_maxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_maxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontWeight0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontWeight0(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontWeight0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontWeight1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto weight_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String weight_value_buf = {};
        weight_value_buf.tag = weight_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (weight_value_buf_runtimeType))
        {
            const Ark_Int8 weight_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String weight_value_buf_ = {};
            weight_value_buf_.selector = weight_value_buf__selector;
            if (weight_value_buf__selector == 0) {
                weight_value_buf_.selector = 0;
                weight_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (weight_value_buf__selector == 1) {
                weight_value_buf_.selector = 1;
                weight_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (weight_value_buf__selector == 2) {
                weight_value_buf_.selector = 2;
                weight_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for weight_value_buf_ has to be chosen through deserialisation.");
            }
            weight_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(weight_value_buf_);
        }
        Opt_Union_Number_FontWeight_String weight_value = weight_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontSettingOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readFontSettingOptions();
        }
        Opt_FontSettingOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontWeight1(self, (const Opt_Union_Number_FontWeight_String*)&weight_value, (const Opt_FontSettingOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontWeight1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_lineSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineSpacing(self, (const Opt_LengthMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_lineSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextAlign(self, (const Opt_TextAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_lineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineHeight(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_lineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextOverflowOptions();
        }
        Opt_TextOverflowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextOverflow(self, (const Opt_TextOverflowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_String_Resource>(value_value_buf_);
        }
        Opt_Union_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontFamily(self, (const Opt_Union_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_maxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMaxLines(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_maxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_decoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DecorationStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDecorationStyleInterface();
        }
        Opt_DecorationStyleInterface value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDecoration(self, (const Opt_DecorationStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_decoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_letterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLetterSpacing(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_letterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textCase(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextCase value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextCase>(thisDeserializer.readInt32());
        }
        Opt_TextCase value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextCase(self, (const Opt_TextCase*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textCase, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_baselineOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setBaselineOffset(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_baselineOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_copyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setCopyOption(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_copyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_draggable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDraggable(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_draggable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readShadowOptions();
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextShadow(self, (const Opt_Union_ShadowOptions_Array_ShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_heightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setHeightAdaptivePolicy(self, (const Opt_TextHeightAdaptivePolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_heightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextIndent(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_wordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setWordBreak(self, (const Opt_WordBreak*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_wordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_lineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setLineBreakStrategy(self, (const Opt_LineBreakStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_lineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_onCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnCopy(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_onCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_caretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setCaretColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_caretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_ellipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEllipsisMode(self, (const Opt_EllipsisMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_ellipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_enableDataDetector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEnableDataDetector(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_enableDataDetector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_dataDetectorConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDataDetectorConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextDataDetectorConfig();
        }
        Opt_TextDataDetectorConfig value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setDataDetectorConfig(self, (const Opt_TextDataDetectorConfig*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_dataDetectorConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_onTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnTextSelectionChange(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_onTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_fontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setFontFeature(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_fontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_marqueeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextMarqueeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextMarqueeOptions();
        }
        Opt_TextMarqueeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setMarqueeOptions(self, (const Opt_TextMarqueeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_marqueeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_onMarqueeStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MarqueeState_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_MarqueeState parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MarqueeState_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_MarqueeState parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MarqueeState_Void))))};
        }
        Opt_Callback_MarqueeState_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setOnMarqueeStateChange(self, (const Opt_Callback_MarqueeState_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_onMarqueeStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_privacySensitive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setPrivacySensitive(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_privacySensitive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_textSelectable(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextSelectableMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextSelectableMode>(thisDeserializer.readInt32());
        }
        Opt_TextSelectableMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setTextSelectable(self, (const Opt_TextSelectableMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_textSelectable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_halfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setHalfLeading(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_halfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_selection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto selectionStart_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number selectionStart_value_buf = {};
        selectionStart_value_buf.tag = selectionStart_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (selectionStart_value_buf_runtimeType))
        {
            selectionStart_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number selectionStart_value = selectionStart_value_buf;;
        const auto selectionEnd_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number selectionEnd_value_buf = {};
        selectionEnd_value_buf.tag = selectionEnd_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (selectionEnd_value_buf_runtimeType))
        {
            selectionEnd_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number selectionEnd_value = selectionEnd_value_buf;;
        GetNodeModifiers()->getTextModifier()->setSelection(self, (const Opt_Number*)&selectionStart_value, (const Opt_Number*)&selectionEnd_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_selection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAttribute_bindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto spanType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextSpanType spanType_value_buf = {};
        spanType_value_buf.tag = spanType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (spanType_value_buf_runtimeType))
        {
            spanType_value_buf.value = static_cast<Ark_TextSpanType>(thisDeserializer.readInt32());
        }
        Opt_TextSpanType spanType_value = spanType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (responseType_value_buf_runtimeType))
        {
            responseType_value_buf.value = static_cast<Ark_TextResponseType>(thisDeserializer.readInt32());
        }
        Opt_TextResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionMenuOptions();
        }
        Opt_SelectionMenuOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextModifier()->setBindSelectionMenu(self, (const Opt_TextSpanType*)&spanType_value, (const Opt_CustomNodeBuilder*)&content_value, (const Opt_TextResponseType*)&responseType_value, (const Opt_SelectionMenuOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextAttribute_bindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextArea_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextAreaModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextArea_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextAreaInterface_setTextAreaOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAreaOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextAreaOptions();
        }
        Opt_TextAreaOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextAreaOptions(self, (const Opt_TextAreaOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaInterface_setTextAreaOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_placeholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setPlaceholderColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_placeholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_placeholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setPlaceholderFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_placeholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_enterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnterKeyType(self, (const Opt_EnterKeyType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_enterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_textAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextAlign(self, (const Opt_TextAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_textAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_caretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCaretColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_caretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontFamily(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_textOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflow value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextOverflow>(thisDeserializer.readInt32());
        }
        Opt_TextOverflow value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextOverflow(self, (const Opt_TextOverflow*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_textOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_textIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setTextIndent(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_textIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_caretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCaretStyle();
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCaretStyle(self, (const Opt_CaretStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_caretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onSubmit0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EnterKeyType_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EnterKeyType_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EnterKeyType_Void))))};
        }
        Opt_Callback_EnterKeyType_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnSubmit0(self, (const Opt_Callback_EnterKeyType_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onSubmit0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onSubmit1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAreaSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextAreaSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKeyType, const Opt_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextAreaSubmitCallback))))};
        }
        Opt_TextAreaSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnSubmit1(self, (const Opt_TextAreaSubmitCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onSubmit1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnChange(self, (const Opt_EditableTextOnChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnTextSelectionChange(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnContentScroll(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnEditChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnCopy(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnCut(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_PasteEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_PasteEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_PasteEvent_Void))))};
        }
        Opt_Callback_String_PasteEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnPaste(self, (const Opt_Callback_String_PasteEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_copyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCopyOption(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_copyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_enableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableKeyboardOnFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_enableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_maxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxLength(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_maxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_style(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextContentStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextContentStyle>(thisDeserializer.readInt32());
        }
        Opt_TextContentStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setStyle(self, (const Opt_TextContentStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_style, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_barState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setBarState(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_barState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_selectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setSelectionMenuHidden(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_selectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMinFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_maxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_maxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_heightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setHeightAdaptivePolicy(self, (const Opt_TextHeightAdaptivePolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_heightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_maxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setMaxLines(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_maxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_wordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setWordBreak(self, (const Opt_WordBreak*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_wordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_lineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineBreakStrategy(self, (const Opt_LineBreakStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_lineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_decoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextDecorationOptions();
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setDecoration(self, (const Opt_TextDecorationOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_decoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_letterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLetterSpacing(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_letterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_lineSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        Opt_LengthMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineSpacing(self, (const Opt_LengthMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_lineSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_lineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setLineHeight(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_lineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAreaType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextAreaType>(thisDeserializer.readInt32());
        }
        Opt_TextAreaType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setType(self, (const Opt_TextAreaType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_enableAutoFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableAutoFill(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_enableAutoFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_contentType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentType>(thisDeserializer.readInt32());
        }
        Opt_ContentType value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setContentType(self, (const Opt_ContentType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_contentType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_fontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setFontFeature(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_fontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillInsert(self, (const Opt_Callback_InsertValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnDidInsert(self, (const Opt_Callback_InsertValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillDelete(self, (const Opt_Callback_DeleteValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnDidDelete(self, (const Opt_Callback_DeleteValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_enablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnablePreviewText(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_enablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_autoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setAutoCapitalizationMode(self, (const Opt_AutoCapitalizationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_autoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_halfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setHalfLeading(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_halfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_ellipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setEllipsisMode(self, (const Opt_EllipsisMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_ellipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_stopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setStopBackPress(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_stopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_onWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setOnWillChange(self, (const Opt_Callback_EditableTextChangeValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_onWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_keyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setKeyboardAppearance(self, (const Opt_KeyboardAppearance*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_keyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_inputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (error_value_buf_runtimeType))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setInputFilter(self, (const Opt_ResourceStr*)&value_value, (const Opt_Callback_String_Void*)&error_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_inputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_showCounter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputCounterOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readInputCounterOptions();
        }
        Opt_InputCounterOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setShowCounter(self, (const Opt_Boolean*)&value_value, (const Opt_InputCounterOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_showCounter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute_customKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readKeyboardOptions();
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextAreaModifier()->setCustomKeyboard(self, (const Opt_CustomNodeBuilder*)&value_value, (const Opt_KeyboardOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute_customKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextAreaAttribute__onChangeEvent_text(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_ResourceStr_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ResourceStr text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ResourceStr_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ResourceStr text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ResourceStr_Void))))};;
        GetNodeModifiers()->getTextAreaModifier()->set_onChangeEvent_text(self, (const Callback_ResourceStr_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TextAreaAttribute__onChangeEvent_text, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextClock_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextClockModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextClock_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextClockInterface_setTextClockOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextClockOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTextClockOptions();
        }
        Opt_TextClockOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setTextClockOptions(self, (const Opt_TextClockOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockInterface_setTextClockOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_format(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFormat(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_format, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_onDateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setOnDateChange(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_onDateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontFamily(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_textShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readShadowOptions();
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setTextShadow(self, (const Opt_Union_ShadowOptions_Array_ShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_textShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_fontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setFontFeature(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_fontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextClockAttribute_dateTimeOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DateTimeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDateTimeOptions();
        }
        Opt_DateTimeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextClockModifier()->setDateTimeOptions(self, (const Opt_DateTimeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextClockAttribute_dateTimeOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextInput_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextInputModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextInput_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextInputInterface_setTextInputOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextInputOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextInputOptions();
        }
        Opt_TextInputOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextInputOptions(self, (const Opt_TextInputOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputInterface_setTextInputOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_type(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_InputType>(thisDeserializer.readInt32());
        }
        Opt_InputType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setType(self, (const Opt_InputType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_type, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_contentType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentType>(thisDeserializer.readInt32());
        }
        Opt_ContentType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setContentType(self, (const Opt_ContentType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_contentType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_placeholderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPlaceholderColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_placeholderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_textOverflow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextOverflow value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextOverflow>(thisDeserializer.readInt32());
        }
        Opt_TextOverflow value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextOverflow(self, (const Opt_TextOverflow*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_textOverflow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_textIndent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextIndent(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_textIndent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_placeholderFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Font value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readFont();
        }
        Opt_Font value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPlaceholderFont(self, (const Opt_Font*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_placeholderFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_enterKeyType(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EnterKeyType value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EnterKeyType>(thisDeserializer.readInt32());
        }
        Opt_EnterKeyType value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnterKeyType(self, (const Opt_EnterKeyType*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_enterKeyType, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_caretColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_caretColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onEditChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnEditChanged(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onEditChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onEditChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnEditChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onEditChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onSubmit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSubmitCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSubmitCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_EnterKeyType enterKey, const Ark_SubmitEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSubmitCallback))))};
        }
        Opt_OnSubmitCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnSubmit(self, (const Opt_OnSubmitCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onSubmit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditableTextOnChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_EditableTextOnChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Opt_PreviewText previewText, const Opt_TextChangeOptions options)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_EditableTextOnChangeCallback))))};
        }
        Opt_EditableTextOnChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnChange(self, (const Opt_EditableTextOnChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onTextSelectionChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextSelectionChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextSelectionChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number selectionStart, const Ark_Number selectionEnd)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextSelectionChangeCallback))))};
        }
        Opt_OnTextSelectionChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnTextSelectionChange(self, (const Opt_OnTextSelectionChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onTextSelectionChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onContentScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContentScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContentScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number totalOffsetX, const Ark_Number totalOffsetY)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContentScrollCallback))))};
        }
        Opt_OnContentScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnContentScroll(self, (const Opt_OnContentScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onContentScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_maxLength(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxLength(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_maxLength, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontFamily(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onCopy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnCopy(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onCopy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onCut(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnCut(self, (const Opt_Callback_String_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onCut, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onPaste(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnPasteCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnPasteCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String content, const Ark_PasteEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnPasteCallback))))};
        }
        Opt_OnPasteCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnPaste(self, (const Opt_OnPasteCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onPaste, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_copyOption(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCopyOption(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_copyOption, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showPasswordIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowPasswordIcon(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showPasswordIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_textAlign(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextAlign value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextAlign>(thisDeserializer.readInt32());
        }
        Opt_TextAlign value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setTextAlign(self, (const Opt_TextAlign*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_textAlign, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_style(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_TextInputStyle_TextContentStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_TextInputStyle_TextContentStyle value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_TextInputStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_TextContentStyle>(thisDeserializer.readInt32());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_TextInputStyle_TextContentStyle>(value_value_buf_);
        }
        Opt_Union_TextInputStyle_TextContentStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setStyle(self, (const Opt_Union_TextInputStyle_TextContentStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_style, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_caretStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CaretStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCaretStyle();
        }
        Opt_CaretStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretStyle(self, (const Opt_CaretStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_caretStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_selectedBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectedBackgroundColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_selectedBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_caretPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCaretPosition(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_caretPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_enableKeyboardOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableKeyboardOnFocus(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_enableKeyboardOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_passwordIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PasswordIcon value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPasswordIcon();
        }
        Opt_PasswordIcon value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPasswordIcon(self, (const Opt_PasswordIcon*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_passwordIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowError(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showUnit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowUnit(self, (const Opt_CustomNodeBuilder*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showUnit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showUnderline(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowUnderline(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showUnderline, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_underlineColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_UnderlineColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_UnderlineColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readUnderlineColor();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_UnderlineColor>(value_value_buf_);
        }
        Opt_Union_ResourceColor_UnderlineColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setUnderlineColor(self, (const Opt_Union_ResourceColor_UnderlineColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_underlineColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_selectionMenuHidden(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectionMenuHidden(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_selectionMenuHidden, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_barState(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarState value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarState>(thisDeserializer.readInt32());
        }
        Opt_BarState value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setBarState(self, (const Opt_BarState*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_barState, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_maxLines(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxLines(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_maxLines, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_wordBreak(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WordBreak value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WordBreak>(thisDeserializer.readInt32());
        }
        Opt_WordBreak value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setWordBreak(self, (const Opt_WordBreak*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_wordBreak, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_lineBreakStrategy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LineBreakStrategy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_LineBreakStrategy>(thisDeserializer.readInt32());
        }
        Opt_LineBreakStrategy value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLineBreakStrategy(self, (const Opt_LineBreakStrategy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_lineBreakStrategy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_cancelButton0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CancelButtonOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCancelButtonOptions();
        }
        Opt_CancelButtonOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCancelButton0(self, (const Opt_CancelButtonOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_cancelButton0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_cancelButton1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CancelButtonSymbolOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readCancelButtonSymbolOptions();
        }
        Opt_CancelButtonSymbolOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCancelButton1(self, (const Opt_CancelButtonSymbolOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_cancelButton1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_selectAll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setSelectAll(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_selectAll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMinFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_maxFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxFontSize(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_maxFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_minFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMinFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_minFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_maxFontScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setMaxFontScale(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_maxFontScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_heightAdaptivePolicy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextHeightAdaptivePolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_TextHeightAdaptivePolicy>(thisDeserializer.readInt32());
        }
        Opt_TextHeightAdaptivePolicy value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setHeightAdaptivePolicy(self, (const Opt_TextHeightAdaptivePolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_heightAdaptivePolicy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_enableAutoFill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableAutoFill(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_enableAutoFill, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_decoration(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextDecorationOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextDecorationOptions();
        }
        Opt_TextDecorationOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setDecoration(self, (const Opt_TextDecorationOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_decoration, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_letterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLetterSpacing(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_letterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_lineHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String_Resource>(value_value_buf_);
        }
        Opt_Union_Number_String_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setLineHeight(self, (const Opt_Union_Number_String_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_lineHeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_passwordRules(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setPasswordRules(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_passwordRules, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_fontFeature(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setFontFeature(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_fontFeature, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showPassword(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowPassword(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showPassword, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onSecurityStateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnSecurityStateChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onSecurityStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onWillInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Boolean))))};
        }
        Opt_Callback_InsertValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillInsert(self, (const Opt_Callback_InsertValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onWillInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onDidInsert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_InsertValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_InsertValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_InsertValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_InsertValue_Void))))};
        }
        Opt_Callback_InsertValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnDidInsert(self, (const Opt_Callback_InsertValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onDidInsert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onWillDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Boolean))))};
        }
        Opt_Callback_DeleteValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillDelete(self, (const Opt_Callback_DeleteValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onWillDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onDidDelete(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_DeleteValue_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_DeleteValue_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DeleteValue parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_DeleteValue_Void))))};
        }
        Opt_Callback_DeleteValue_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnDidDelete(self, (const Opt_Callback_DeleteValue_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onDidDelete, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_enablePreviewText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnablePreviewText(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_enablePreviewText, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_autoCapitalizationMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AutoCapitalizationMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_AutoCapitalizationMode>(thisDeserializer.readInt32());
        }
        Opt_AutoCapitalizationMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setAutoCapitalizationMode(self, (const Opt_AutoCapitalizationMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_autoCapitalizationMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_halfLeading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setHalfLeading(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_halfLeading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_ellipsisMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EllipsisMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_EllipsisMode>(thisDeserializer.readInt32());
        }
        Opt_EllipsisMode value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setEllipsisMode(self, (const Opt_EllipsisMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_ellipsisMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_stopBackPress(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setStopBackPress(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_stopBackPress, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_onWillChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_EditableTextChangeValue_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_EditableTextChangeValue_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_EditableTextChangeValue parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_EditableTextChangeValue_Boolean))))};
        }
        Opt_Callback_EditableTextChangeValue_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setOnWillChange(self, (const Opt_Callback_EditableTextChangeValue_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_onWillChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_keyboardAppearance(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardAppearance value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_KeyboardAppearance>(thisDeserializer.readInt32());
        }
        Opt_KeyboardAppearance value_value = value_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setKeyboardAppearance(self, (const Opt_KeyboardAppearance*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_keyboardAppearance, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_inputFilter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        const auto error_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void error_value_buf = {};
        error_value_buf.tag = error_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (error_value_buf_runtimeType))
        {
            error_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        Opt_Callback_String_Void error_value = error_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setInputFilter(self, (const Opt_ResourceStr*)&value_value, (const Opt_Callback_String_Void*)&error_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_inputFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_customKeyboard(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_KeyboardOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readKeyboardOptions();
        }
        Opt_KeyboardOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setCustomKeyboard(self, (const Opt_CustomNodeBuilder*)&value_value, (const Opt_KeyboardOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_customKeyboard, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute_showCounter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_InputCounterOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readInputCounterOptions();
        }
        Opt_InputCounterOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextInputModifier()->setShowCounter(self, (const Opt_Boolean*)&value_value, (const Opt_InputCounterOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute_showCounter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextInputAttribute__onChangeEvent_text(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_ResourceStr_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ResourceStr text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ResourceStr_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ResourceStr text)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ResourceStr_Void))))};;
        GetNodeModifiers()->getTextInputModifier()->set_onChangeEvent_text(self, (const Callback_ResourceStr_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TextInputAttribute__onChangeEvent_text, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextPicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextPickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextPicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextPickerInterface_setTextPickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTextPickerOptions();
        }
        Opt_TextPickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setTextPickerOptions(self, (const Opt_TextPickerOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerInterface_setTextPickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_defaultPickerItemHeight0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDefaultPickerItemHeight0(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_defaultPickerItemHeight0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_defaultPickerItemHeight1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_String>(value_value_buf_);
        }
        Opt_Union_Number_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDefaultPickerItemHeight1(self, (const Opt_Union_Number_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_defaultPickerItemHeight1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_canLoop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setCanLoop0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_canLoop0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_canLoop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setCanLoop1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_canLoop1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_disappearTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDisappearTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_disappearTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_disappearTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDisappearTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_disappearTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_textStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_textStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_textStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_textStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_selectedTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_selectedTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_selectedTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_selectedTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_disableTextStyleAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDisableTextStyleAnimation(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_disableTextStyleAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_defaultTextStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextPickerTextStyle();
        }
        Opt_TextPickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDefaultTextStyle(self, (const Opt_TextPickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_defaultTextStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onAccept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Number_Void))))};
        }
        Opt_Callback_String_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnAccept(self, (const Opt_Callback_String_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onAccept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnCancel(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_TextPickerAttribute_onChange_callback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_TextPickerAttribute_onChange_callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_TextPickerAttribute_onChange_callback))))};
        }
        Opt_Type_TextPickerAttribute_onChange_callback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnChange0(self, (const Opt_Type_TextPickerAttribute_onChange_callback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTextPickerChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTextPickerChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String selectItem, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTextPickerChangeCallback))))};
        }
        Opt_OnTextPickerChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnChange1(self, (const Opt_OnTextPickerChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onScrollStop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerScrollStopCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextPickerScrollStopCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextPickerScrollStopCallback))))};
        }
        Opt_TextPickerScrollStopCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnScrollStop0(self, (const Opt_TextPickerScrollStopCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onScrollStop0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onScrollStop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerScrollStopCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextPickerScrollStopCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextPickerScrollStopCallback))))};
        }
        Opt_TextPickerScrollStopCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnScrollStop1(self, (const Opt_TextPickerScrollStopCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onScrollStop1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_onEnterSelectedArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerEnterSelectedAreaCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextPickerEnterSelectedAreaCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value, const Ark_Union_Number_Array_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextPickerEnterSelectedAreaCallback))))};
        }
        Opt_TextPickerEnterSelectedAreaCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setOnEnterSelectedArea(self, (const Opt_TextPickerEnterSelectedAreaCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_onEnterSelectedArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_selectedIndex0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Array_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Array_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Number value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Array_Number>(value_value_buf_);
        }
        Opt_Union_Number_Array_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedIndex0(self, (const Opt_Union_Number_Array_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_selectedIndex0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_selectedIndex1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Array_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Array_Number value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_Number value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Array_Number>(value_value_buf_);
        }
        Opt_Union_Number_Array_Number value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setSelectedIndex1(self, (const Opt_Union_Number_Array_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_selectedIndex1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_divider0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerOptions();
        }
        Opt_DividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDivider0(self, (const Opt_DividerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_divider0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_divider1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerOptions();
        }
        Opt_DividerOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDivider1(self, (const Opt_DividerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_divider1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_gradientHeight0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setGradientHeight0(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_gradientHeight0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_gradientHeight1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setGradientHeight1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_gradientHeight1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute_digitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getTextPickerModifier()->setDigitalCrownSensitivity(self, (const Opt_CrownSensitivity*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute_digitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Union_Number_Array_Number_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_Number_Array_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_Number_Array_Number selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_Number_Array_Number_Void))))};;
        GetNodeModifiers()->getTextPickerModifier()->set_onChangeEvent_selected(self, (const Callback_Union_Number_Array_Number_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextPickerAttribute__onChangeEvent_value(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Union_String_Array_String_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Union_String_Array_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Union_String_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Union_String_Array_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Union_String_Array_String_Void))))};;
        GetNodeModifiers()->getTextPickerModifier()->set_onChangeEvent_value(self, (const Callback_Union_String_Array_String_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TextPickerAttribute__onChangeEvent_value, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextTimer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTextTimerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TextTimer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TextTimerInterface_setTextTimerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextTimerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTextTimerOptions();
        }
        Opt_TextTimerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setTextTimerOptions(self, (const Opt_TextTimerOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerInterface_setTextTimerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_format(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFormat(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_format, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_fontColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_fontColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_fontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontSize(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_fontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_fontStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FontStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FontStyle>(thisDeserializer.readInt32());
        }
        Opt_FontStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontStyle(self, (const Opt_FontStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_fontStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_fontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_FontWeight_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_FontWeight_String value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_FontWeight>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_FontWeight_String>(value_value_buf_);
        }
        Opt_Union_Number_FontWeight_String value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontWeight(self, (const Opt_Union_Number_FontWeight_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_fontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_fontFamily(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceStr>(value_value_buf_);
        }
        Opt_ResourceStr value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setFontFamily(self, (const Opt_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_fontFamily, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_onTimer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextTimerAttribute_onTimer_event_type value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int64 utc, const Ark_Int64 elapsedTime)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextTimerAttribute_onTimer_event_type)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int64 utc, const Ark_Int64 elapsedTime)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextTimerAttribute_onTimer_event_type))))};
        }
        Opt_TextTimerAttribute_onTimer_event_type value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setOnTimer(self, (const Opt_TextTimerAttribute_onTimer_event_type*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_onTimer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_textShadow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readShadowOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                const Ark_Int32 value_value_buf__u_length = thisDeserializer.readInt32();
                Array_ShadowOptions value_value_buf__u = {};
                thisDeserializer.resizeArray<std::decay<decltype(value_value_buf__u)>::type,
        std::decay<decltype(*value_value_buf__u.array)>::type>(&value_value_buf__u, value_value_buf__u_length);
                for (int value_value_buf__u_i = 0; value_value_buf__u_i < value_value_buf__u_length; value_value_buf__u_i++) {
                    value_value_buf__u.array[value_value_buf__u_i] = thisDeserializer.readShadowOptions();
                }
                value_value_buf_.value1 = value_value_buf__u;
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf_);
        }
        Opt_Union_ShadowOptions_Array_ShadowOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setTextShadow(self, (const Opt_Union_ShadowOptions_Array_ShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_textShadow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TextTimerAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getTextTimerModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TextTimerAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TimePicker_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getTimePickerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(TimePicker_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_TimePickerInterface_setTimePickerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TimePickerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTimePickerOptions();
        }
        Opt_TimePickerOptions options_value = options_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setTimePickerOptions(self, (const Opt_TimePickerOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerInterface_setTimePickerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_useMilitaryTime0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setUseMilitaryTime0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_useMilitaryTime0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_useMilitaryTime1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setUseMilitaryTime1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_useMilitaryTime1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_loop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setLoop0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_loop0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_loop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setLoop1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_loop1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_disappearTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDisappearTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_disappearTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_disappearTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDisappearTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_disappearTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_textStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_textStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_textStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_textStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_selectedTextStyle0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setSelectedTextStyle0(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_selectedTextStyle0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_selectedTextStyle1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PickerTextStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readPickerTextStyle();
        }
        Opt_PickerTextStyle value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setSelectedTextStyle1(self, (const Opt_PickerTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_selectedTextStyle1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_dateTimeOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DateTimeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDateTimeOptions();
        }
        Opt_DateTimeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDateTimeOptions0(self, (const Opt_DateTimeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_dateTimeOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_dateTimeOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DateTimeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDateTimeOptions();
        }
        Opt_DateTimeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDateTimeOptions1(self, (const Opt_DateTimeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_dateTimeOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_onChange0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TimePickerResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TimePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TimePickerResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TimePickerResult_Void))))};
        }
        Opt_Callback_TimePickerResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setOnChange0(self, (const Opt_Callback_TimePickerResult_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_onChange0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_onChange1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnTimePickerChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TimePickerResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnTimePickerChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnTimePickerChangeCallback))))};
        }
        Opt_OnTimePickerChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setOnChange1(self, (const Opt_OnTimePickerChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_onChange1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_onEnterSelectedArea(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TimePickerResult_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TimePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TimePickerResult_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TimePickerResult value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TimePickerResult_Void))))};
        }
        Opt_Callback_TimePickerResult_Void value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setOnEnterSelectedArea(self, (const Opt_Callback_TimePickerResult_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_onEnterSelectedArea, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_enableHapticFeedback0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setEnableHapticFeedback0(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_enableHapticFeedback0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_enableHapticFeedback1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setEnableHapticFeedback1(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_enableHapticFeedback1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_digitalCrownSensitivity(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CrownSensitivity value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CrownSensitivity>(thisDeserializer.readInt32());
        }
        Opt_CrownSensitivity value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setDigitalCrownSensitivity(self, (const Opt_CrownSensitivity*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_digitalCrownSensitivity, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute_enableCascade(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getTimePickerModifier()->setEnableCascade(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute_enableCascade, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TimePickerAttribute__onChangeEvent_selected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Date_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Date_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Date parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Date_Void))))};;
        GetNodeModifiers()->getTimePickerModifier()->set_onChangeEvent_selected(self, (const Callback_Date_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(TimePickerAttribute__onChangeEvent_selected, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Toggle_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getToggleModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Toggle_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_ToggleInterface_setToggleOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ToggleOptions options_value = thisDeserializer.readToggleOptions();;
        GetNodeModifiers()->getToggleModifier()->setToggleOptions(self, (const Ark_ToggleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleInterface_setToggleOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setOnChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_contentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ContentModifier value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());
        }
        Opt_ContentModifier value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setContentModifier(self, (const Opt_ContentModifier*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_contentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_selectedColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSelectedColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_selectedColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_switchPointColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSwitchPointColor(self, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_switchPointColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute_switchStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SwitchStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readSwitchStyle();
        }
        Opt_SwitchStyle value_value = value_value_buf;;
        GetNodeModifiers()->getToggleModifier()->setSwitchStyle(self, (const Opt_SwitchStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute_switchStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ToggleAttribute__onChangeEvent_isOn(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};;
        GetNodeModifiers()->getToggleModifier()->set_onChangeEvent_isOn(self, (const Callback_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(ToggleAttribute__onChangeEvent_isOn, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Video_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getVideoModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Video_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_VideoInterface_setVideoOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_VideoOptions value_value = thisDeserializer.readVideoOptions();;
        GetNodeModifiers()->getVideoModifier()->setVideoOptions(self, (const Ark_VideoOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoInterface_setVideoOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_muted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setMuted(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_muted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_autoPlay(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setAutoPlay(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_autoPlay, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_controls(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setControls(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_controls, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_loop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setLoop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_loop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_objectFit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageFit value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ImageFit>(thisDeserializer.readInt32());
        }
        Opt_ImageFit value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setObjectFit(self, (const Opt_ImageFit*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_objectFit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnStart(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onPause(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnPause(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onPause, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onFinish(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnFinish(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onFinish, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onFullscreenChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_FullscreenInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FullscreenInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_FullscreenInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullscreenInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_FullscreenInfo_Void))))};
        }
        Opt_Callback_FullscreenInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnFullscreenChange(self, (const Opt_Callback_FullscreenInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onFullscreenChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onPrepared(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PreparedInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PreparedInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PreparedInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PreparedInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PreparedInfo_Void))))};
        }
        Opt_Callback_PreparedInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnPrepared(self, (const Opt_Callback_PreparedInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onPrepared, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onSeeking(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnSeeking(self, (const Opt_Callback_PlaybackInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onSeeking, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onSeeked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnSeeked(self, (const Opt_Callback_PlaybackInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onSeeked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_PlaybackInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PlaybackInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PlaybackInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PlaybackInfo_Void))))};
        }
        Opt_Callback_PlaybackInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnUpdate(self, (const Opt_Callback_PlaybackInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnError(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_onStop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setOnStop(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_onStop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_enableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setEnableAnalyzer(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_enableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_analyzerConfig(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ImageAnalyzerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readImageAnalyzerConfig();
        }
        Opt_ImageAnalyzerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setAnalyzerConfig(self, (const Opt_ImageAnalyzerConfig*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_analyzerConfig, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_surfaceBackgroundColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ColorMetrics value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_ColorMetrics>(thisDeserializer.readColorMetrics());
        }
        Opt_ColorMetrics value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setSurfaceBackgroundColor(self, (const Opt_ColorMetrics*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_surfaceBackgroundColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_VideoAttribute_enableShortcutKey(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getVideoModifier()->setEnableShortcutKey(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(VideoAttribute_enableShortcutKey, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Web_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWebModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(Web_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WebInterface_setWebOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_WebOptions value_value = thisDeserializer.readWebOptions();;
        GetNodeModifiers()->getWebModifier()->setWebOptions(self, (const Ark_WebOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebInterface_setWebOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_javaScriptAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_javaScriptAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_fileAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setFileAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_fileAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onlineImageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnlineImageAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onlineImageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_domStorageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDomStorageAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_domStorageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_imageAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setImageAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_imageAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_mixedMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_MixedMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_MixedMode>(thisDeserializer.readInt32());
        }
        Opt_MixedMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMixedMode(self, (const Opt_MixedMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_mixedMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_zoomAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setZoomAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_zoomAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_geolocationAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setGeolocationAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_geolocationAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_javaScriptProxy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_JavaScriptProxy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readJavaScriptProxy();
        }
        Opt_JavaScriptProxy value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptProxy(self, (const Opt_JavaScriptProxy*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_javaScriptProxy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_password(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setPassword(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_password, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_cacheMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CacheMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CacheMode>(thisDeserializer.readInt32());
        }
        Opt_CacheMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setCacheMode(self, (const Opt_CacheMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_cacheMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_darkMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebDarkMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WebDarkMode>(thisDeserializer.readInt32());
        }
        Opt_WebDarkMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDarkMode(self, (const Opt_WebDarkMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_darkMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_forceDarkAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setForceDarkAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_forceDarkAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_mediaOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebMediaOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readWebMediaOptions();
        }
        Opt_WebMediaOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMediaOptions(self, (const Opt_WebMediaOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_mediaOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_tableData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTableData(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_tableData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_wideViewModeAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWideViewModeAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_wideViewModeAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_overviewModeAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOverviewModeAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_overviewModeAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_overScrollMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OverScrollMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_OverScrollMode>(thisDeserializer.readInt32());
        }
        Opt_OverScrollMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOverScrollMode(self, (const Opt_OverScrollMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_overScrollMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_blurOnKeyboardHideMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurOnKeyboardHideMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BlurOnKeyboardHideMode>(thisDeserializer.readInt32());
        }
        Opt_BlurOnKeyboardHideMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBlurOnKeyboardHideMode(self, (const Opt_BlurOnKeyboardHideMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_blurOnKeyboardHideMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_textZoomAtio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTextZoomAtio(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_textZoomAtio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_textZoomRatio(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTextZoomRatio(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_textZoomRatio, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_databaseAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDatabaseAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_databaseAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_initialScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setInitialScale(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_initialScale, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_userAgent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setUserAgent(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_userAgent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_metaViewport(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMetaViewport(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_metaViewport, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onPageEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageEndEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageEndEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageEndEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageEndEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageEndEvent_Void))))};
        }
        Opt_Callback_OnPageEndEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageEnd(self, (const Opt_Callback_OnPageEndEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onPageEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onPageBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageBeginEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageBeginEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageBeginEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageBeginEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageBeginEvent_Void))))};
        }
        Opt_Callback_OnPageBeginEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageBegin(self, (const Opt_Callback_OnPageBeginEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onPageBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onProgressChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnProgressChangeEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnProgressChangeEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnProgressChangeEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnProgressChangeEvent_Void))))};
        }
        Opt_Callback_OnProgressChangeEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnProgressChange(self, (const Opt_Callback_OnProgressChangeEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onProgressChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onTitleReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnTitleReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnTitleReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTitleReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnTitleReceiveEvent_Void))))};
        }
        Opt_Callback_OnTitleReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnTitleReceive(self, (const Opt_Callback_OnTitleReceiveEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onTitleReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onGeolocationHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnGeolocationHide(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onGeolocationHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onGeolocationShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnGeolocationShowEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnGeolocationShowEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnGeolocationShowEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnGeolocationShowEvent_Void))))};
        }
        Opt_Callback_OnGeolocationShowEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnGeolocationShow(self, (const Opt_Callback_OnGeolocationShowEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onGeolocationShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRequestSelected(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRequestSelected(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRequestSelected, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onAlert(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnAlertEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnAlertEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnAlertEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAlertEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnAlertEvent_Boolean))))};
        }
        Opt_Callback_OnAlertEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAlert(self, (const Opt_Callback_OnAlertEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onAlert, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onBeforeUnload(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnBeforeUnloadEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnBeforeUnloadEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnBeforeUnloadEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnBeforeUnloadEvent_Boolean))))};
        }
        Opt_Callback_OnBeforeUnloadEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnBeforeUnload(self, (const Opt_Callback_OnBeforeUnloadEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onBeforeUnload, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onConfirm(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnConfirmEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnConfirmEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnConfirmEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConfirmEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnConfirmEvent_Boolean))))};
        }
        Opt_Callback_OnConfirmEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnConfirm(self, (const Opt_Callback_OnConfirmEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onConfirm, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onPrompt(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPromptEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPromptEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPromptEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPromptEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPromptEvent_Boolean))))};
        }
        Opt_Callback_OnPromptEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPrompt(self, (const Opt_Callback_OnPromptEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onPrompt, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onConsole(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnConsoleEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnConsoleEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnConsoleEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnConsoleEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnConsoleEvent_Boolean))))};
        }
        Opt_Callback_OnConsoleEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnConsole(self, (const Opt_Callback_OnConsoleEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onConsole, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onErrorReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnErrorReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnErrorReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnErrorReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnErrorReceiveEvent_Void))))};
        }
        Opt_Callback_OnErrorReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnErrorReceive(self, (const Opt_Callback_OnErrorReceiveEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onErrorReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onHttpErrorReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnHttpErrorReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnHttpErrorReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpErrorReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnHttpErrorReceiveEvent_Void))))};
        }
        Opt_Callback_OnHttpErrorReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnHttpErrorReceive(self, (const Opt_Callback_OnHttpErrorReceiveEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onHttpErrorReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onDownloadStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnDownloadStartEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnDownloadStartEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDownloadStartEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnDownloadStartEvent_Void))))};
        }
        Opt_Callback_OnDownloadStartEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnDownloadStart(self, (const Opt_Callback_OnDownloadStartEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onDownloadStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRefreshAccessedHistory(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnRefreshAccessedHistoryEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnRefreshAccessedHistoryEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRefreshAccessedHistoryEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnRefreshAccessedHistoryEvent_Void))))};
        }
        Opt_Callback_OnRefreshAccessedHistoryEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRefreshAccessedHistory(self, (const Opt_Callback_OnRefreshAccessedHistoryEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRefreshAccessedHistory, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onUrlLoadIntercept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_WebAttribute_onUrlLoadIntercept_callback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Literal_Union_String_WebResourceRequest_data event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_WebAttribute_onUrlLoadIntercept_callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Literal_Union_String_WebResourceRequest_data event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_WebAttribute_onUrlLoadIntercept_callback))))};
        }
        Opt_Type_WebAttribute_onUrlLoadIntercept_callback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnUrlLoadIntercept(self, (const Opt_Type_WebAttribute_onUrlLoadIntercept_callback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onUrlLoadIntercept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onSslErrorReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Literal_Function_handler_Object_error_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Literal_Function_handler_Object_error event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Literal_Function_handler_Object_error_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Literal_Function_handler_Object_error event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Literal_Function_handler_Object_error_Void))))};
        }
        Opt_Callback_Literal_Function_handler_Object_error_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSslErrorReceive(self, (const Opt_Callback_Literal_Function_handler_Object_error_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onSslErrorReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRenderExited0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnRenderExitedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnRenderExitedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnRenderExitedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnRenderExitedEvent_Void))))};
        }
        Opt_Callback_OnRenderExitedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderExited0(self, (const Opt_Callback_OnRenderExitedEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRenderExited0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRenderExited1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Literal_Object_detail_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Literal_Object_detail event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Literal_Object_detail_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Literal_Object_detail event, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Literal_Object_detail_Boolean))))};
        }
        Opt_Callback_Literal_Object_detail_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderExited1(self, (const Opt_Callback_Literal_Object_detail_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRenderExited1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onShowFileSelector(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnShowFileSelectorEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnShowFileSelectorEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnShowFileSelectorEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnShowFileSelectorEvent_Boolean))))};
        }
        Opt_Callback_OnShowFileSelectorEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnShowFileSelector(self, (const Opt_Callback_OnShowFileSelectorEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onShowFileSelector, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFileSelectorShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_WebAttribute_onFileSelectorShow_callback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Literal_Function_callback__Object_fileSelector event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Type_WebAttribute_onFileSelectorShow_callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Literal_Function_callback__Object_fileSelector event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Type_WebAttribute_onFileSelectorShow_callback))))};
        }
        Opt_Type_WebAttribute_onFileSelectorShow_callback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFileSelectorShow(self, (const Opt_Type_WebAttribute_onFileSelectorShow_callback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFileSelectorShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onResourceLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnResourceLoadEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnResourceLoadEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnResourceLoadEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnResourceLoadEvent_Void))))};
        }
        Opt_Callback_OnResourceLoadEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnResourceLoad(self, (const Opt_Callback_OnResourceLoadEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onResourceLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFullScreenExit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFullScreenExit(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFullScreenExit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFullScreenEnter(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFullScreenEnterCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFullScreenEnterCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FullScreenEnterEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFullScreenEnterCallback))))};
        }
        Opt_OnFullScreenEnterCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFullScreenEnter(self, (const Opt_OnFullScreenEnterCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFullScreenEnter, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onScaleChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScaleChangeEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScaleChangeEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScaleChangeEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScaleChangeEvent_Void))))};
        }
        Opt_Callback_OnScaleChangeEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScaleChange(self, (const Opt_Callback_OnScaleChangeEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onScaleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onHttpAuthRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnHttpAuthRequestEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnHttpAuthRequestEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnHttpAuthRequestEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnHttpAuthRequestEvent_Boolean))))};
        }
        Opt_Callback_OnHttpAuthRequestEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnHttpAuthRequest(self, (const Opt_Callback_OnHttpAuthRequestEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onHttpAuthRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onInterceptRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnInterceptRequestEvent_WebResourceResponse value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent parameter, const Callback_WebResourceResponse_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnInterceptRequestEvent_WebResourceResponse)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnInterceptRequestEvent parameter, const Callback_WebResourceResponse_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnInterceptRequestEvent_WebResourceResponse))))};
        }
        Opt_Callback_OnInterceptRequestEvent_WebResourceResponse value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptRequest(self, (const Opt_Callback_OnInterceptRequestEvent_WebResourceResponse*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onInterceptRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onPermissionRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPermissionRequestEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPermissionRequestEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPermissionRequestEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPermissionRequestEvent_Void))))};
        }
        Opt_Callback_OnPermissionRequestEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPermissionRequest(self, (const Opt_Callback_OnPermissionRequestEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onPermissionRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onScreenCaptureRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScreenCaptureRequestEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScreenCaptureRequestEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScreenCaptureRequestEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScreenCaptureRequestEvent_Void))))};
        }
        Opt_Callback_OnScreenCaptureRequestEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScreenCaptureRequest(self, (const Opt_Callback_OnScreenCaptureRequestEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onScreenCaptureRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onContextMenuShow(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnContextMenuShowEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnContextMenuShowEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnContextMenuShowEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnContextMenuShowEvent_Boolean))))};
        }
        Opt_Callback_OnContextMenuShowEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnContextMenuShow(self, (const Opt_Callback_OnContextMenuShowEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onContextMenuShow, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onContextMenuHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnContextMenuHideCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnContextMenuHideCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnContextMenuHideCallback))))};
        }
        Opt_OnContextMenuHideCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnContextMenuHide(self, (const Opt_OnContextMenuHideCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onContextMenuHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_mediaPlayGestureAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMediaPlayGestureAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_mediaPlayGestureAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onSearchResultReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnSearchResultReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnSearchResultReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSearchResultReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnSearchResultReceiveEvent_Void))))};
        }
        Opt_Callback_OnSearchResultReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSearchResultReceive(self, (const Opt_Callback_OnSearchResultReceiveEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onSearchResultReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnScrollEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnScrollEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnScrollEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnScrollEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnScrollEvent_Void))))};
        }
        Opt_Callback_OnScrollEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnScroll(self, (const Opt_Callback_OnScrollEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onSslErrorEventReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnSslErrorEventReceiveEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnSslErrorEventReceiveEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnSslErrorEventReceiveEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnSslErrorEventReceiveEvent_Void))))};
        }
        Opt_Callback_OnSslErrorEventReceiveEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSslErrorEventReceive(self, (const Opt_Callback_OnSslErrorEventReceiveEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onSslErrorEventReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onSslErrorEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSslErrorEventCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSslErrorEventCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SslErrorEvent sslErrorEvent)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSslErrorEventCallback))))};
        }
        Opt_OnSslErrorEventCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSslErrorEvent(self, (const Opt_OnSslErrorEventCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onSslErrorEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onClientAuthenticationRequest(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnClientAuthenticationEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnClientAuthenticationEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnClientAuthenticationEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnClientAuthenticationEvent_Void))))};
        }
        Opt_Callback_OnClientAuthenticationEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnClientAuthenticationRequest(self, (const Opt_Callback_OnClientAuthenticationEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onClientAuthenticationRequest, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onWindowNew(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnWindowNewEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnWindowNewEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnWindowNewEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnWindowNewEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnWindowNewEvent_Void))))};
        }
        Opt_Callback_OnWindowNewEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnWindowNew(self, (const Opt_Callback_OnWindowNewEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onWindowNew, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onWindowExit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnWindowExit(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onWindowExit, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_multiWindowAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMultiWindowAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_multiWindowAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onInterceptKeyEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Boolean))))};
        }
        Opt_Callback_KeyEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptKeyEvent(self, (const Opt_Callback_KeyEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onInterceptKeyEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webStandardFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebStandardFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webStandardFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webSerifFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebSerifFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webSerifFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webSansSerifFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebSansSerifFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webSansSerifFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webFixedFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebFixedFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webFixedFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webFantasyFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebFantasyFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webFantasyFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_webCursiveFont(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setWebCursiveFont(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_webCursiveFont, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_defaultFixedFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultFixedFontSize(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_defaultFixedFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_defaultFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultFontSize(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_defaultFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_minFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMinFontSize(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_minFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_minLogicalFontSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setMinLogicalFontSize(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_minLogicalFontSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_defaultTextEncodingFormat(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setDefaultTextEncodingFormat(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_defaultTextEncodingFormat, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_forceDisplayScrollBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setForceDisplayScrollBar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_forceDisplayScrollBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_blockNetwork(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBlockNetwork(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_blockNetwork, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_horizontalScrollBarAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setHorizontalScrollBarAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_horizontalScrollBarAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_verticalScrollBarAccess(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setVerticalScrollBarAccess(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_verticalScrollBarAccess, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onTouchIconUrlReceived(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnTouchIconUrlReceivedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnTouchIconUrlReceivedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnTouchIconUrlReceivedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnTouchIconUrlReceivedEvent_Void))))};
        }
        Opt_Callback_OnTouchIconUrlReceivedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnTouchIconUrlReceived(self, (const Opt_Callback_OnTouchIconUrlReceivedEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onTouchIconUrlReceived, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFaviconReceived(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnFaviconReceivedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnFaviconReceivedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFaviconReceivedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnFaviconReceivedEvent_Void))))};
        }
        Opt_Callback_OnFaviconReceivedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFaviconReceived(self, (const Opt_Callback_OnFaviconReceivedEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFaviconReceived, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onPageVisible(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnPageVisibleEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnPageVisibleEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnPageVisibleEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnPageVisibleEvent_Void))))};
        }
        Opt_Callback_OnPageVisibleEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnPageVisible(self, (const Opt_Callback_OnPageVisibleEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onPageVisible, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onDataResubmitted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnDataResubmittedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnDataResubmittedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnDataResubmittedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnDataResubmittedEvent_Void))))};
        }
        Opt_Callback_OnDataResubmittedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnDataResubmitted(self, (const Opt_Callback_OnDataResubmittedEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onDataResubmitted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_pinchSmooth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setPinchSmooth(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_pinchSmooth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_allowWindowOpenMethod(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setAllowWindowOpenMethod(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_allowWindowOpenMethod, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onAudioStateChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnAudioStateChangedEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnAudioStateChangedEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnAudioStateChangedEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnAudioStateChangedEvent_Void))))};
        }
        Opt_Callback_OnAudioStateChangedEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAudioStateChanged(self, (const Opt_Callback_OnAudioStateChangedEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onAudioStateChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFirstContentfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnFirstContentfulPaintEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnFirstContentfulPaintEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnFirstContentfulPaintEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnFirstContentfulPaintEvent_Void))))};
        }
        Opt_Callback_OnFirstContentfulPaintEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFirstContentfulPaint(self, (const Opt_Callback_OnFirstContentfulPaintEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFirstContentfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onFirstMeaningfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnFirstMeaningfulPaintCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnFirstMeaningfulPaintCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_FirstMeaningfulPaint firstMeaningfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnFirstMeaningfulPaintCallback))))};
        }
        Opt_OnFirstMeaningfulPaintCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnFirstMeaningfulPaint(self, (const Opt_OnFirstMeaningfulPaintCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onFirstMeaningfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onLargestContentfulPaint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnLargestContentfulPaintCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnLargestContentfulPaintCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LargestContentfulPaint largestContentfulPaint)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnLargestContentfulPaintCallback))))};
        }
        Opt_OnLargestContentfulPaintCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnLargestContentfulPaint(self, (const Opt_OnLargestContentfulPaintCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onLargestContentfulPaint, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onLoadIntercept(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnLoadInterceptEvent_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnLoadInterceptEvent_Boolean)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnLoadInterceptEvent parameter, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnLoadInterceptEvent_Boolean))))};
        }
        Opt_Callback_OnLoadInterceptEvent_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnLoadIntercept(self, (const Opt_Callback_OnLoadInterceptEvent_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onLoadIntercept, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onControllerAttached(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnControllerAttached(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onControllerAttached, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onOverScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_OnOverScrollEvent_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_OnOverScrollEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_OnOverScrollEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_OnOverScrollEvent parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_OnOverScrollEvent_Void))))};
        }
        Opt_Callback_OnOverScrollEvent_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnOverScroll(self, (const Opt_Callback_OnOverScrollEvent_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onOverScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onSafeBrowsingCheckResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnSafeBrowsingCheckResultCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_ThreatType threatType)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnSafeBrowsingCheckResultCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ThreatType threatType)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnSafeBrowsingCheckResultCallback))))};
        }
        Opt_OnSafeBrowsingCheckResultCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnSafeBrowsingCheckResult(self, (const Opt_OnSafeBrowsingCheckResultCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onSafeBrowsingCheckResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onNavigationEntryCommitted(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNavigationEntryCommittedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNavigationEntryCommittedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_LoadCommittedDetails loadCommittedDetails)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNavigationEntryCommittedCallback))))};
        }
        Opt_OnNavigationEntryCommittedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNavigationEntryCommitted(self, (const Opt_OnNavigationEntryCommittedCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onNavigationEntryCommitted, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onIntelligentTrackingPreventionResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnIntelligentTrackingPreventionCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnIntelligentTrackingPreventionCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_IntelligentTrackingPreventionDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnIntelligentTrackingPreventionCallback))))};
        }
        Opt_OnIntelligentTrackingPreventionCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnIntelligentTrackingPreventionResult(self, (const Opt_OnIntelligentTrackingPreventionCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onIntelligentTrackingPreventionResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_javaScriptOnDocumentStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readScriptItem();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptOnDocumentStart(self, (const Opt_Array_ScriptItem*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_javaScriptOnDocumentStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_javaScriptOnDocumentEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readScriptItem();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setJavaScriptOnDocumentEnd(self, (const Opt_Array_ScriptItem*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_javaScriptOnDocumentEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_layoutMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebLayoutMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WebLayoutMode>(thisDeserializer.readInt32());
        }
        Opt_WebLayoutMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setLayoutMode(self, (const Opt_WebLayoutMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_layoutMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_NestedScrollOptions_NestedScrollOptionsExt value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_NestedScrollOptions_NestedScrollOptionsExt value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readNestedScrollOptions();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readNestedScrollOptionsExt();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_NestedScrollOptions_NestedScrollOptionsExt>(value_value_buf_);
        }
        Opt_Union_NestedScrollOptions_NestedScrollOptionsExt value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setNestedScroll(self, (const Opt_Union_NestedScrollOptions_NestedScrollOptionsExt*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_enableNativeEmbedMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableNativeEmbedMode(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_enableNativeEmbedMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onNativeEmbedLifecycleChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NativeEmbedDataInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NativeEmbedDataInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedDataInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NativeEmbedDataInfo_Void))))};
        }
        Opt_Callback_NativeEmbedDataInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedLifecycleChange(self, (const Opt_Callback_NativeEmbedDataInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onNativeEmbedLifecycleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onNativeEmbedVisibilityChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNativeEmbedVisibilityChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNativeEmbedVisibilityChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedVisibilityInfo nativeEmbedVisibilityInfo)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNativeEmbedVisibilityChangeCallback))))};
        }
        Opt_OnNativeEmbedVisibilityChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedVisibilityChange(self, (const Opt_OnNativeEmbedVisibilityChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onNativeEmbedVisibilityChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onNativeEmbedGestureEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_NativeEmbedTouchInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NativeEmbedTouchInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativeEmbedTouchInfo event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NativeEmbedTouchInfo_Void))))};
        }
        Opt_Callback_NativeEmbedTouchInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnNativeEmbedGestureEvent(self, (const Opt_Callback_NativeEmbedTouchInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onNativeEmbedGestureEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_copyOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CopyOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_CopyOptions>(thisDeserializer.readInt32());
        }
        Opt_CopyOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setCopyOptions(self, (const Opt_CopyOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_copyOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onOverrideUrlLoading(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnOverrideUrlLoadingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnOverrideUrlLoadingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebResourceRequest webResourceRequest, const Callback_Boolean_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnOverrideUrlLoadingCallback))))};
        }
        Opt_OnOverrideUrlLoadingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnOverrideUrlLoading(self, (const Opt_OnOverrideUrlLoadingCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onOverrideUrlLoading, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_textAutosizing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setTextAutosizing(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_textAutosizing, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_enableNativeMediaPlayer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NativeMediaPlayerConfig value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNativeMediaPlayerConfig();
        }
        Opt_NativeMediaPlayerConfig value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableNativeMediaPlayer(self, (const Opt_NativeMediaPlayerConfig*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_enableNativeMediaPlayer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRenderProcessNotResponding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRenderProcessNotRespondingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRenderProcessNotRespondingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_RenderProcessNotRespondingData data)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRenderProcessNotRespondingCallback))))};
        }
        Opt_OnRenderProcessNotRespondingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderProcessNotResponding(self, (const Opt_OnRenderProcessNotRespondingCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRenderProcessNotResponding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onRenderProcessResponding(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnRenderProcessRespondingCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnRenderProcessRespondingCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnRenderProcessRespondingCallback))))};
        }
        Opt_OnRenderProcessRespondingCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnRenderProcessResponding(self, (const Opt_OnRenderProcessRespondingCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onRenderProcessResponding, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_selectionMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ExpandedMenuItemOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ExpandedMenuItemOptions value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readExpandedMenuItemOptions();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ExpandedMenuItemOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setSelectionMenuOptions(self, (const Opt_Array_ExpandedMenuItemOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_selectionMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onViewportFitChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnViewportFitChangedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_ViewportFit viewportFit)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnViewportFitChangedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_ViewportFit viewportFit)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnViewportFitChangedCallback))))};
        }
        Opt_OnViewportFitChangedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnViewportFitChanged(self, (const Opt_OnViewportFitChangedCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onViewportFitChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onInterceptKeyboardAttach(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebKeyboardCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_WebKeyboardCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_WebKeyboardCallbackInfo keyboardCallbackInfo, const Callback_WebKeyboardOptions_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_WebKeyboardCallback))))};
        }
        Opt_WebKeyboardCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnInterceptKeyboardAttach(self, (const Opt_WebKeyboardCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onInterceptKeyboardAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_onAdsBlocked(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnAdsBlockedCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnAdsBlockedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_AdsBlockedDetails details)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnAdsBlockedCallback))))};
        }
        Opt_OnAdsBlockedCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOnAdsBlocked(self, (const Opt_OnAdsBlockedCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_onAdsBlocked, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_keyboardAvoidMode(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebKeyboardAvoidMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_WebKeyboardAvoidMode>(thisDeserializer.readInt32());
        }
        Opt_WebKeyboardAvoidMode value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setKeyboardAvoidMode(self, (const Opt_WebKeyboardAvoidMode*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_keyboardAvoidMode, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_editMenuOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EditMenuOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEditMenuOptions();
        }
        Opt_EditMenuOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEditMenuOptions(self, (const Opt_EditMenuOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_editMenuOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_enableHapticFeedback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableHapticFeedback(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_enableHapticFeedback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_optimizeParserBudget(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setOptimizeParserBudget(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_optimizeParserBudget, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_enableFollowSystemFontWeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableFollowSystemFontWeight(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_enableFollowSystemFontWeight, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_enableWebAVSession(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setEnableWebAVSession(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_enableWebAVSession, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_runJavaScriptOnDocumentStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readScriptItem();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnDocumentStart(self, (const Opt_Array_ScriptItem*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_runJavaScriptOnDocumentStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_runJavaScriptOnDocumentEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readScriptItem();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnDocumentEnd(self, (const Opt_Array_ScriptItem*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_runJavaScriptOnDocumentEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_runJavaScriptOnHeadEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_ScriptItem value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int32 value_value_buf__length = thisDeserializer.readInt32();
            Array_ScriptItem value_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_)>::type,
        std::decay<decltype(*value_value_buf_.array)>::type>(&value_value_buf_, value_value_buf__length);
            for (int value_value_buf__i = 0; value_value_buf__i < value_value_buf__length; value_value_buf__i++) {
                value_value_buf_.array[value_value_buf__i] = thisDeserializer.readScriptItem();
            }
            value_value_buf.value = value_value_buf_;
        }
        Opt_Array_ScriptItem value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRunJavaScriptOnHeadEnd(self, (const Opt_Array_ScriptItem*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_runJavaScriptOnHeadEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_nativeEmbedOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EmbedOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readEmbedOptions();
        }
        Opt_EmbedOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWebModifier()->setNativeEmbedOptions(self, (const Opt_EmbedOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_nativeEmbedOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_registerNativeEmbedRule(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto tag_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String tag_value_buf = {};
        tag_value_buf.tag = tag_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (tag_value_buf_runtimeType))
        {
            tag_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String tag_value = tag_value_buf;;
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        GetNodeModifiers()->getWebModifier()->setRegisterNativeEmbedRule(self, (const Opt_String*)&tag_value, (const Opt_String*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_registerNativeEmbedRule, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebAttribute_bindSelectionMenu(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto elementType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebElementType elementType_value_buf = {};
        elementType_value_buf.tag = elementType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (elementType_value_buf_runtimeType))
        {
            elementType_value_buf.value = static_cast<Ark_WebElementType>(thisDeserializer.readInt32());
        }
        Opt_WebElementType elementType_value = elementType_value_buf;;
        const auto content_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CustomNodeBuilder content_value_buf = {};
        content_value_buf.tag = content_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (content_value_buf_runtimeType))
        {
            content_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};
        }
        Opt_CustomNodeBuilder content_value = content_value_buf;;
        const auto responseType_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WebResponseType responseType_value_buf = {};
        responseType_value_buf.tag = responseType_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (responseType_value_buf_runtimeType))
        {
            responseType_value_buf.value = static_cast<Ark_WebResponseType>(thisDeserializer.readInt32());
        }
        Opt_WebResponseType responseType_value = responseType_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionMenuOptionsExt options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionMenuOptionsExt();
        }
        Opt_SelectionMenuOptionsExt options_value = options_value_buf;;
        GetNodeModifiers()->getWebModifier()->setBindSelectionMenu(self, (const Opt_WebElementType*)&elementType_value, (const Opt_CustomNodeBuilder*)&content_value, (const Opt_WebResponseType*)&responseType_value, (const Opt_SelectionMenuOptionsExt*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WebAttribute_bindSelectionMenu, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_WindowScene_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWindowSceneModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(WindowScene_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WindowSceneInterface_setWindowSceneOptions(Ark_NativePointer thisPtr, KInteropNumber persistentId) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        GetNodeModifiers()->getWindowSceneModifier()->setWindowSceneOptions(self, (const Ark_Number*) (&persistentId));
}
KOALA_INTEROP_DIRECT_V2(WindowSceneInterface_setWindowSceneOptions, Ark_NativePointer, KInteropNumber)
void impl_WindowSceneAttribute_attractionEffect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto destination_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Position destination_value_buf = {};
        destination_value_buf.tag = destination_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (destination_value_buf_runtimeType))
        {
            destination_value_buf.value = thisDeserializer.readPosition();
        }
        Opt_Position destination_value = destination_value_buf;;
        const auto fraction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number fraction_value_buf = {};
        fraction_value_buf.tag = fraction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fraction_value_buf_runtimeType))
        {
            fraction_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number fraction_value = fraction_value_buf;;
        GetNodeModifiers()->getWindowSceneModifier()->setAttractionEffect(self, (const Opt_Position*)&destination_value, (const Opt_Number*)&fraction_value);
}
KOALA_INTEROP_DIRECT_V3(WindowSceneAttribute_attractionEffect, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_XComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getXComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(XComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_XComponentInterface_setXComponentOptions0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Type_XComponentInterface_callable0_value value_value_buf = {};
        value_value_buf.id = static_cast<Ark_String>(thisDeserializer.readString());
        value_value_buf.type = static_cast<Ark_String>(thisDeserializer.readString());
        const auto value_value_buf_libraryname_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf_libraryname_buf = {};
        value_value_buf_libraryname_buf.tag = value_value_buf_libraryname_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_libraryname_buf_runtimeType))
        {
            value_value_buf_libraryname_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        value_value_buf.libraryname = value_value_buf_libraryname_buf;
        const auto value_value_buf_controller_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_XComponentController value_value_buf_controller_buf = {};
        value_value_buf_controller_buf.tag = value_value_buf_controller_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_controller_buf_runtimeType))
        {
            value_value_buf_controller_buf.value = static_cast<Ark_XComponentController>(thisDeserializer.readXComponentController());
        }
        value_value_buf.controller = value_value_buf_controller_buf;
        Ark_Type_XComponentInterface_callable0_value value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions0(self, (const Ark_Type_XComponentInterface_callable0_value*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentInterface_setXComponentOptions1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Type_XComponentInterface_callable1_value value_value_buf = {};
        value_value_buf.id = static_cast<Ark_String>(thisDeserializer.readString());
        value_value_buf.type = static_cast<Ark_XComponentType>(thisDeserializer.readInt32());
        const auto value_value_buf_libraryname_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf_libraryname_buf = {};
        value_value_buf_libraryname_buf.tag = value_value_buf_libraryname_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_libraryname_buf_runtimeType))
        {
            value_value_buf_libraryname_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        value_value_buf.libraryname = value_value_buf_libraryname_buf;
        const auto value_value_buf_controller_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_XComponentController value_value_buf_controller_buf = {};
        value_value_buf_controller_buf.tag = value_value_buf_controller_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_controller_buf_runtimeType))
        {
            value_value_buf_controller_buf.value = static_cast<Ark_XComponentController>(thisDeserializer.readXComponentController());
        }
        value_value_buf.controller = value_value_buf_controller_buf;
        Ark_Type_XComponentInterface_callable1_value value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions1(self, (const Ark_Type_XComponentInterface_callable1_value*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentInterface_setXComponentOptions2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_XComponentOptions options_value = thisDeserializer.readXComponentOptions();;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions2(self, (const Ark_XComponentOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions2, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentInterface_setXComponentOptions3(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_NativeXComponentParameters params_value = thisDeserializer.readNativeXComponentParameters();;
        GetNodeModifiers()->getXComponentModifier()->setXComponentOptions3(self, (const Ark_NativeXComponentParameters*)&params_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentInterface_setXComponentOptions3, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_onLoad(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnNativeLoadCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Object event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnNativeLoadCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Object event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnNativeLoadCallback))))};
        }
        Opt_OnNativeLoadCallback value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setOnLoad(self, (const Opt_OnNativeLoadCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_onLoad, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_onDestroy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setOnDestroy(self, (const Opt_VoidCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_onDestroy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_enableAnalyzer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableAnalyzer(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_enableAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_enableSecure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableSecure(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_enableSecure, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_hdrBrightness(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setHdrBrightness(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_hdrBrightness, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentAttribute_enableTransparentLayer(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getXComponentModifier()->setEnableTransparentLayer(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentAttribute_enableTransparentLayer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SideBarContainer_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getSideBarContainerModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(SideBarContainer_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_SideBarContainerInterface_setSideBarContainerOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SideBarContainerType type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_SideBarContainerType>(thisDeserializer.readInt32());
        }
        Opt_SideBarContainerType type_value = type_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarContainerOptions(self, (const Opt_SideBarContainerType*)&type_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerInterface_setSideBarContainerOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_showSideBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setShowSideBar(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_showSideBar, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_controlButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ButtonStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readButtonStyle();
        }
        Opt_ButtonStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setControlButton(self, (const Opt_ButtonStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_controlButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_showControlButton(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setShowControlButton(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_showControlButton, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Boolean_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};
        }
        Opt_Callback_Boolean_Void value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setOnChange(self, (const Opt_Callback_Boolean_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_sideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarWidth0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_sideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_sideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarWidth1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_sideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_minSideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinSideBarWidth0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_minSideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_minSideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinSideBarWidth1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_minSideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_maxSideBarWidth0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMaxSideBarWidth0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_maxSideBarWidth0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_maxSideBarWidth1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMaxSideBarWidth1(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_maxSideBarWidth1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_autoHide(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setAutoHide(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_autoHide, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_sideBarPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SideBarPosition value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_SideBarPosition>(thisDeserializer.readInt32());
        }
        Opt_SideBarPosition value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setSideBarPosition(self, (const Opt_SideBarPosition*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_sideBarPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_divider(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DividerStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readDividerStyle();
        }
        Opt_DividerStyle value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setDivider(self, (const Opt_DividerStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_divider, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute_minContentWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getSideBarContainerModifier()->setMinContentWidth(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute_minContentWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SideBarContainerAttribute__onChangeEvent_showSideBar(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_Boolean_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Boolean select)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Boolean_Void))))};;
        GetNodeModifiers()->getSideBarContainerModifier()->set_onChangeEvent_showSideBar(self, (const Callback_Opt_Boolean_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(SideBarContainerAttribute__onChangeEvent_showSideBar, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RemoteWindow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getRemoteWindowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(RemoteWindow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_RemoteWindowInterface_setRemoteWindowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_WindowAnimationTarget target_value = thisDeserializer.readWindowAnimationTarget();;
        GetNodeModifiers()->getRemoteWindowModifier()->setRemoteWindowOptions(self, (const Ark_WindowAnimationTarget*)&target_value);
}
KOALA_INTEROP_DIRECT_V3(RemoteWindowInterface_setRemoteWindowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_WaterFlow_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getWaterFlowModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(WaterFlow_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_WaterFlowInterface_setWaterFlowOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WaterFlowOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readWaterFlowOptions();
        }
        Opt_WaterFlowOptions options_value = options_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setWaterFlowOptions(self, (const Opt_WaterFlowOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowInterface_setWaterFlowOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_columnsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setColumnsTemplate(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_columnsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_itemConstraintSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ConstraintSizeOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readConstraintSizeOptions();
        }
        Opt_ConstraintSizeOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setItemConstraintSize(self, (const Opt_ConstraintSizeOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_itemConstraintSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_rowsTemplate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setRowsTemplate(self, (const Opt_String*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_rowsTemplate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_columnsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setColumnsGap(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_columnsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_rowsGap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setRowsGap(self, (const Opt_Length*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_rowsGap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_layoutDirection(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_FlexDirection value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_FlexDirection>(thisDeserializer.readInt32());
        }
        Opt_FlexDirection value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setLayoutDirection(self, (const Opt_FlexDirection*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_layoutDirection, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_nestedScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NestedScrollOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readNestedScrollOptions();
        }
        Opt_NestedScrollOptions value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setNestedScroll(self, (const Opt_NestedScrollOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_nestedScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_enableScrollInteraction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setEnableScrollInteraction(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_enableScrollInteraction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_friction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Number_Resource value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Number_Resource value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Number_Resource>(value_value_buf_);
        }
        Opt_Union_Number_Resource value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setFriction(self, (const Opt_Union_Number_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_friction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_cachedCount0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setCachedCount0(self, (const Opt_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_cachedCount0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_cachedCount1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto show_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean show_value_buf = {};
        show_value_buf.tag = show_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (show_value_buf_runtimeType))
        {
            show_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean show_value = show_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setCachedCount1(self, (const Opt_Number*)&count_value, (const Opt_Boolean*)&show_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_cachedCount1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onReachStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnReachStart(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onReachStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onReachEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnReachEnd(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onReachEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onScrollFrameBegin(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollFrameBeginCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollFrameBeginCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number offset, Ark_ScrollState state, const Callback_OnScrollFrameBeginHandlerResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollFrameBeginCallback))))};
        }
        Opt_OnScrollFrameBeginCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnScrollFrameBegin(self, (const Opt_OnScrollFrameBeginCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onScrollFrameBegin, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onScrollIndex(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number first, const Ark_Number last)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Number_Void))))};
        }
        Opt_Callback_Number_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnScrollIndex(self, (const Opt_Callback_Number_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onScrollIndex, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onWillScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnWillScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnWillScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState, Ark_ScrollSource scrollSource, const Callback_ScrollResult_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnWillScrollCallback))))};
        }
        Opt_OnWillScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnWillScroll(self, (const Opt_OnWillScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onWillScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WaterFlowAttribute_onDidScroll(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnScrollCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnScrollCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number scrollOffset, Ark_ScrollState scrollState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnScrollCallback))))};
        }
        Opt_OnScrollCallback value_value = value_value_buf;;
        GetNodeModifiers()->getWaterFlowModifier()->setOnDidScroll(self, (const Opt_OnScrollCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(WaterFlowAttribute_onDidScroll, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_UIExtensionComponent_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getUIExtensionComponentModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(UIExtensionComponent_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_UIExtensionComponentInterface_setUIExtensionComponentOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Want want_value = thisDeserializer.readWant();;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_UIExtensionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readUIExtensionOptions();
        }
        Opt_UIExtensionOptions options_value = options_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setUIExtensionComponentOptions(self, (const Ark_Want*)&want_value, (const Opt_UIExtensionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentInterface_setUIExtensionComponentOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onRemoteReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnRemoteReady(self, (const Opt_Callback_UIExtensionProxy_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onRemoteReady, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onReceive(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Map_String_Object_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Map_String_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Map_String_Object_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Map_String_Object parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Map_String_Object_Void))))};
        }
        Opt_Callback_Map_String_Object_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnReceive(self, (const Opt_Callback_Map_String_Object_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onReceive, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onResult(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Literal_Number_code__want_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Literal_Number_code__want parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Literal_Number_code__want_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Literal_Number_code__want parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Literal_Number_code__want_Void))))};
        }
        Opt_Callback_Literal_Number_code__want_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnResult(self, (const Opt_Callback_Literal_Number_code__want_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onResult, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onRelease(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Number_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};
        }
        Opt_Callback_Number_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnRelease(self, (const Opt_Callback_Number_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onRelease, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onError(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ErrorCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_BusinessError err)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_ErrorCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_BusinessError err)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_ErrorCallback))))};
        }
        Opt_ErrorCallback value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnError(self, (const Opt_ErrorCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onError, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onTerminated(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TerminationInfo_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TerminationInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TerminationInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TerminationInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TerminationInfo_Void))))};
        }
        Opt_Callback_TerminationInfo_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnTerminated(self, (const Opt_Callback_TerminationInfo_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onTerminated, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionComponentAttribute_onDrawReady(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;;
        GetNodeModifiers()->getUIExtensionComponentModifier()->setOnDrawReady(self, (const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionComponentAttribute_onDrawReady, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LinearIndicator_construct(Ark_Int32 id, Ark_Int32 flags) {
        return GetNodeModifiers()->getLinearIndicatorModifier()->construct(id, flags);
}
KOALA_INTEROP_DIRECT_2(LinearIndicator_construct, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LinearIndicatorInterface_setLinearIndicatorOptions(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto count_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number count_value_buf = {};
        count_value_buf.tag = count_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (count_value_buf_runtimeType))
        {
            count_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number count_value = count_value_buf;;
        const auto controller_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorController controller_value_buf = {};
        controller_value_buf.tag = controller_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (controller_value_buf_runtimeType))
        {
            controller_value_buf.value = static_cast<Ark_LinearIndicatorController>(thisDeserializer.readLinearIndicatorController());
        }
        Opt_LinearIndicatorController controller_value = controller_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setLinearIndicatorOptions(self, (const Opt_Number*)&count_value, (const Opt_LinearIndicatorController*)&controller_value);
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorInterface_setLinearIndicatorOptions, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_indicatorStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorStyle value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readLinearIndicatorStyle();
        }
        Opt_LinearIndicatorStyle value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setIndicatorStyle(self, (const Opt_LinearIndicatorStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_indicatorStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_indicatorLoop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setIndicatorLoop(self, (const Opt_Boolean*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_indicatorLoop, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorAttribute_onChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NodeHandle self = reinterpret_cast<Ark_NodeHandle>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_OnLinearIndicatorChangeCallback value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_OnLinearIndicatorChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index, const Ark_Number progress)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_OnLinearIndicatorChangeCallback))))};
        }
        Opt_OnLinearIndicatorChangeCallback value_value = value_value_buf;;
        GetNodeModifiers()->getLinearIndicatorModifier()->setOnChange(self, (const Opt_OnLinearIndicatorChangeCallback*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorAttribute_onChange, Ark_NativePointer, KSerializerBuffer, int32_t)

// Accessors

void impl_AnimationExtender_SetClipRect(Ark_NativePointer node, KFloat x, KFloat y, KFloat width, KFloat height) {
        GetAccessors()->getAnimationExtenderAccessor()->SetClipRect(node, x, y, width, height);
}
KOALA_INTEROP_DIRECT_V5(AnimationExtender_SetClipRect, Ark_NativePointer, KFloat, KFloat, KFloat, KFloat)
void impl_AnimationExtender_OpenImplicitAnimation(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam param_value = thisDeserializer.readAnimateParam();;
        GetAccessors()->getAnimationExtenderAccessor()->OpenImplicitAnimation((const Ark_AnimateParam*)&param_value);
}
KOALA_INTEROP_DIRECT_V2(AnimationExtender_OpenImplicitAnimation, KSerializerBuffer, int32_t)
void impl_AnimationExtender_CloseImplicitAnimation() {
        GetAccessors()->getAnimationExtenderAccessor()->CloseImplicitAnimation();
}
KOALA_INTEROP_DIRECT_V0(AnimationExtender_CloseImplicitAnimation)
void impl_AnimationExtender_StartDoubleAnimation(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DoubleAnimationParam param_value = thisDeserializer.readDoubleAnimationParam();;
        GetAccessors()->getAnimationExtenderAccessor()->StartDoubleAnimation(node, (const Ark_DoubleAnimationParam*)&param_value);
}
KOALA_INTEROP_DIRECT_V3(AnimationExtender_StartDoubleAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_AnimationExtender_AnimationTranslate(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions options_value = thisDeserializer.readTranslateOptions();;
        GetAccessors()->getAnimationExtenderAccessor()->AnimationTranslate(node, (const Ark_TranslateOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(AnimationExtender_AnimationTranslate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseContext_ctor() {
        return GetAccessors()->getBaseContextAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(BaseContext_ctor, Ark_NativePointer)
Ark_NativePointer impl_BaseContext_getFinalizer() {
        return GetAccessors()->getBaseContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseContext_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_BaseContext_getStageMode(Ark_NativePointer thisPtr) {
        Ark_BaseContext self = reinterpret_cast<Ark_BaseContext>(thisPtr);
        return GetAccessors()->getBaseContextAccessor()->getStageMode(self);
}
KOALA_INTEROP_DIRECT_1(BaseContext_getStageMode, Ark_Boolean, Ark_NativePointer)
void impl_BaseContext_setStageMode(Ark_NativePointer thisPtr, Ark_Boolean stageMode) {
        Ark_BaseContext self = reinterpret_cast<Ark_BaseContext>(thisPtr);
        GetAccessors()->getBaseContextAccessor()->setStageMode(self, stageMode);
}
KOALA_INTEROP_DIRECT_V2(BaseContext_setStageMode, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_Context_ctor() {
        return GetAccessors()->getContextAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Context_ctor, Ark_NativePointer)
Ark_NativePointer impl_Context_getFinalizer() {
        return GetAccessors()->getContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Context_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Context_createBundleContext(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& bundleName) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->createBundleContext(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&bundleName));
}
KOALA_INTEROP_CTX_2(Context_createBundleContext, Ark_NativePointer, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_Context_createModuleContext0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& moduleName) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->createModuleContext0(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&moduleName));
}
KOALA_INTEROP_CTX_2(Context_createModuleContext0, Ark_NativePointer, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_Context_createModuleContext1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& bundleName, const KStringPtr& moduleName) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->createModuleContext1(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&bundleName), (const Ark_String*) (&moduleName));
}
KOALA_INTEROP_CTX_3(Context_createModuleContext1, Ark_NativePointer, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_Context_getGroupDir0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& dataGroupID, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Context_getGroupDir_Callback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Context_getGroupDir_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Context_getGroupDir_Callback))))};;
        GetAccessors()->getContextAccessor()->getGroupDir0(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&dataGroupID), (const Context_getGroupDir_Callback*)&callback__value);
}
KOALA_INTEROP_CTX_V4(Context_getGroupDir0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_String impl_Context_getGroupDir1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& dataGroupID) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getGroupDir1(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&dataGroupID));
}
KOALA_INTEROP_CTX_2(Context_getGroupDir1, KStringPtr, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getCacheDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getCacheDir(self);
}
KOALA_INTEROP_1(Context_getCacheDir, KStringPtr, Ark_NativePointer)
void impl_Context_setCacheDir(Ark_NativePointer thisPtr, const KStringPtr& cacheDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setCacheDir(self, (const Ark_String*) (&cacheDir));
}
KOALA_INTEROP_V2(Context_setCacheDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getTempDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getTempDir(self);
}
KOALA_INTEROP_1(Context_getTempDir, KStringPtr, Ark_NativePointer)
void impl_Context_setTempDir(Ark_NativePointer thisPtr, const KStringPtr& tempDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setTempDir(self, (const Ark_String*) (&tempDir));
}
KOALA_INTEROP_V2(Context_setTempDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getFilesDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getFilesDir(self);
}
KOALA_INTEROP_1(Context_getFilesDir, KStringPtr, Ark_NativePointer)
void impl_Context_setFilesDir(Ark_NativePointer thisPtr, const KStringPtr& filesDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setFilesDir(self, (const Ark_String*) (&filesDir));
}
KOALA_INTEROP_V2(Context_setFilesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getDatabaseDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getDatabaseDir(self);
}
KOALA_INTEROP_1(Context_getDatabaseDir, KStringPtr, Ark_NativePointer)
void impl_Context_setDatabaseDir(Ark_NativePointer thisPtr, const KStringPtr& databaseDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setDatabaseDir(self, (const Ark_String*) (&databaseDir));
}
KOALA_INTEROP_V2(Context_setDatabaseDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getPreferencesDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getPreferencesDir(self);
}
KOALA_INTEROP_1(Context_getPreferencesDir, KStringPtr, Ark_NativePointer)
void impl_Context_setPreferencesDir(Ark_NativePointer thisPtr, const KStringPtr& preferencesDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setPreferencesDir(self, (const Ark_String*) (&preferencesDir));
}
KOALA_INTEROP_V2(Context_setPreferencesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getBundleCodeDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getBundleCodeDir(self);
}
KOALA_INTEROP_1(Context_getBundleCodeDir, KStringPtr, Ark_NativePointer)
void impl_Context_setBundleCodeDir(Ark_NativePointer thisPtr, const KStringPtr& bundleCodeDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setBundleCodeDir(self, (const Ark_String*) (&bundleCodeDir));
}
KOALA_INTEROP_V2(Context_setBundleCodeDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getDistributedFilesDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getDistributedFilesDir(self);
}
KOALA_INTEROP_1(Context_getDistributedFilesDir, KStringPtr, Ark_NativePointer)
void impl_Context_setDistributedFilesDir(Ark_NativePointer thisPtr, const KStringPtr& distributedFilesDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setDistributedFilesDir(self, (const Ark_String*) (&distributedFilesDir));
}
KOALA_INTEROP_V2(Context_setDistributedFilesDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getResourceDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getResourceDir(self);
}
KOALA_INTEROP_1(Context_getResourceDir, KStringPtr, Ark_NativePointer)
void impl_Context_setResourceDir(Ark_NativePointer thisPtr, const KStringPtr& resourceDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setResourceDir(self, (const Ark_String*) (&resourceDir));
}
KOALA_INTEROP_V2(Context_setResourceDir, Ark_NativePointer, KStringPtr)
Ark_String impl_Context_getCloudFileDir(Ark_NativePointer thisPtr) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        return GetAccessors()->getContextAccessor()->getCloudFileDir(self);
}
KOALA_INTEROP_1(Context_getCloudFileDir, KStringPtr, Ark_NativePointer)
void impl_Context_setCloudFileDir(Ark_NativePointer thisPtr, const KStringPtr& cloudFileDir) {
        Ark_Context self = reinterpret_cast<Ark_Context>(thisPtr);
        GetAccessors()->getContextAccessor()->setCloudFileDir(self, (const Ark_String*) (&cloudFileDir));
}
KOALA_INTEROP_V2(Context_setCloudFileDir, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_UnifiedData_ctor() {
        return GetAccessors()->getUnifiedDataAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(UnifiedData_ctor, Ark_NativePointer)
Ark_NativePointer impl_UnifiedData_getFinalizer() {
        return GetAccessors()->getUnifiedDataAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UnifiedData_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_UnifiedData_hasType(Ark_NativePointer thisPtr, const KStringPtr& UnifiedData_type) {
        Ark_UnifiedData self = reinterpret_cast<Ark_UnifiedData>(thisPtr);
        return GetAccessors()->getUnifiedDataAccessor()->hasType(self, (const Ark_String*) (&UnifiedData_type));
}
KOALA_INTEROP_2(UnifiedData_hasType, Ark_Boolean, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_UnifiedData_getTypes(Ark_NativePointer thisPtr) {
        Ark_UnifiedData self = reinterpret_cast<Ark_UnifiedData>(thisPtr);
        const auto &retValue = GetAccessors()->getUnifiedDataAccessor()->getTypes(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UnifiedData_getTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_LazyForEachOps_NeedMoreElements(Ark_NativePointer node, Ark_NativePointer mark, Ark_Int32 direction) {
        return GetAccessors()->getLazyForEachOpsAccessor()->NeedMoreElements(node, mark, direction);
}
KOALA_INTEROP_DIRECT_3(LazyForEachOps_NeedMoreElements, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer, Ark_Int32)
void impl_LazyForEachOps_OnRangeUpdate(Ark_NativePointer node, Ark_Int32 totalCount, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_RangeUpdate updater_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RangeUpdate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RangeUpdate))))};;
        GetAccessors()->getLazyForEachOpsAccessor()->OnRangeUpdate(node, totalCount, (const Callback_RangeUpdate*)&updater_value);
}
KOALA_INTEROP_DIRECT_V4(LazyForEachOps_OnRangeUpdate, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
void impl_LazyForEachOps_SetCurrentIndex(Ark_NativePointer node, Ark_Int32 index) {
        GetAccessors()->getLazyForEachOpsAccessor()->SetCurrentIndex(node, index);
}
KOALA_INTEROP_DIRECT_V2(LazyForEachOps_SetCurrentIndex, Ark_NativePointer, Ark_Int32)
void impl_LazyForEachOps_Prepare(Ark_NativePointer node, Ark_Int32 itemCount, Ark_Int32 offset) {
        GetAccessors()->getLazyForEachOpsAccessor()->Prepare(node, itemCount, offset);
}
KOALA_INTEROP_DIRECT_V3(LazyForEachOps_Prepare, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_LazyForEachOps_NotifyChange(Ark_NativePointer node, Ark_Int32 startIndex, Ark_Int32 endIndex, Ark_Int32 count) {
        GetAccessors()->getLazyForEachOpsAccessor()->NotifyChange(node, startIndex, endIndex, count);
}
KOALA_INTEROP_DIRECT_V4(LazyForEachOps_NotifyChange, Ark_NativePointer, Ark_Int32, Ark_Int32, Ark_Int32)
void impl_LazyForEachOps_Sync(Ark_NativePointer node, Ark_Int32 totalCount, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_CreateItem creator_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_CreateItem)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 index, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_CreateItem))))};;
        Callback_RangeUpdate updater_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_RangeUpdate)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 start, const Ark_Int32 end)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_RangeUpdate))))};;
        GetAccessors()->getLazyForEachOpsAccessor()->Sync(node, totalCount, (const Callback_CreateItem*)&creator_value, (const Callback_RangeUpdate*)&updater_value);
}
KOALA_INTEROP_DIRECT_V4(LazyForEachOps_Sync, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SystemOps_StartFrame() {
        return GetAccessors()->getSystemOpsAccessor()->StartFrame();
}
KOALA_INTEROP_DIRECT_0(SystemOps_StartFrame, Ark_NativePointer)
void impl_SystemOps_EndFrame(Ark_NativePointer root) {
        GetAccessors()->getSystemOpsAccessor()->EndFrame(root);
}
KOALA_INTEROP_DIRECT_V1(SystemOps_EndFrame, Ark_NativePointer)
void impl_SystemOps_syncInstanceId(Ark_Int32 instanceId) {
        GetAccessors()->getSystemOpsAccessor()->syncInstanceId(instanceId);
}
KOALA_INTEROP_DIRECT_V1(SystemOps_syncInstanceId, Ark_Int32)
void impl_SystemOps_restoreInstanceId() {
        GetAccessors()->getSystemOpsAccessor()->restoreInstanceId();
}
KOALA_INTEROP_DIRECT_V0(SystemOps_restoreInstanceId)
Ark_Int32 impl_SystemOps_getResourceId(const KStringPtr& bundleName, const KStringPtr& moduleName, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 params_value_buf_length = thisDeserializer.readInt32();
        Array_String params_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(params_value_buf)>::type,
        std::decay<decltype(*params_value_buf.array)>::type>(&params_value_buf, params_value_buf_length);
        for (int params_value_buf_i = 0; params_value_buf_i < params_value_buf_length; params_value_buf_i++) {
            params_value_buf.array[params_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String params_value = params_value_buf;;
        return GetAccessors()->getSystemOpsAccessor()->getResourceId((const Ark_String*) (&bundleName), (const Ark_String*) (&moduleName), (const Array_String*)&params_value);
}
KOALA_INTEROP_4(SystemOps_getResourceId, Ark_Int32, KStringPtr, KStringPtr, KSerializerBuffer, int32_t)
void impl_SystemOps_resourceManagerReset() {
        GetAccessors()->getSystemOpsAccessor()->resourceManagerReset();
}
KOALA_INTEROP_DIRECT_V0(SystemOps_resourceManagerReset)
void impl_SystemOps_setFrameCallback(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber delayTime) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Number_Void onFrameCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        Callback_Number_Void onIdleCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Number_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number index)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Number_Void))))};;
        GetAccessors()->getSystemOpsAccessor()->setFrameCallback((const Callback_Number_Void*)&onFrameCallback_value, (const Callback_Number_Void*)&onIdleCallback_value, (const Ark_Number*) (&delayTime));
}
KOALA_INTEROP_DIRECT_V3(SystemOps_setFrameCallback, KSerializerBuffer, int32_t, KInteropNumber)
Ark_NativePointer impl_GestureOps_createTapGesture(KInteropNumber fingers, KInteropNumber count, KInteropNumber distanceThreshold, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createTapGesture((const Ark_Number*) (&fingers), (const Ark_Number*) (&count), (const Ark_Number*) (&distanceThreshold), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_4(GestureOps_createTapGesture, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createLongPressGesture(KInteropNumber fingers, Ark_Boolean repeat, KInteropNumber duration, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createLongPressGesture((const Ark_Number*) (&fingers), repeat, (const Ark_Number*) (&duration), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_4(GestureOps_createLongPressGesture, Ark_NativePointer, KInteropNumber, Ark_Boolean, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createPanGesture(KInteropNumber fingers, Ark_Int32 direction, KInteropNumber distance, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createPanGesture((const Ark_Number*) (&fingers), static_cast<Ark_PanDirection>(direction), (const Ark_Number*) (&distance), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_4(GestureOps_createPanGesture, Ark_NativePointer, KInteropNumber, Ark_Int32, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createPanGestureWithPanGestureOptions(Ark_NativePointer panGestureOptions) {
        return GetAccessors()->getGestureOpsAccessor()->createPanGestureWithPanGestureOptions(panGestureOptions);
}
KOALA_INTEROP_DIRECT_1(GestureOps_createPanGestureWithPanGestureOptions, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_GestureOps_createPinchGesture(KInteropNumber fingers, KInteropNumber distance, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createPinchGesture((const Ark_Number*) (&fingers), (const Ark_Number*) (&distance), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_3(GestureOps_createPinchGesture, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createRotationGesture(KInteropNumber fingers, KInteropNumber angle, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createRotationGesture((const Ark_Number*) (&fingers), (const Ark_Number*) (&angle), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_3(GestureOps_createRotationGesture, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createSwipeGesture(KInteropNumber fingers, Ark_Int32 direction, KInteropNumber speed, Ark_Boolean isFingerCountLimited) {
        return GetAccessors()->getGestureOpsAccessor()->createSwipeGesture((const Ark_Number*) (&fingers), static_cast<Ark_SwipeDirection>(direction), (const Ark_Number*) (&speed), isFingerCountLimited);
}
KOALA_INTEROP_DIRECT_4(GestureOps_createSwipeGesture, Ark_NativePointer, KInteropNumber, Ark_Int32, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GestureOps_createGestureGroup(Ark_Int32 mode) {
        return GetAccessors()->getGestureOpsAccessor()->createGestureGroup(static_cast<Ark_GestureMode>(mode));
}
KOALA_INTEROP_DIRECT_1(GestureOps_createGestureGroup, Ark_NativePointer, Ark_Int32)
void impl_GestureOps_setOnAction(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void onAction_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnAction(gesture, (const Callback_GestureEvent_Void*)&onAction_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnAction, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setOnActionStart(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void onActionStart_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnActionStart(gesture, (const Callback_GestureEvent_Void*)&onActionStart_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnActionStart, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setOnActionUpdate(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void onActionUpdate_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnActionUpdate(gesture, (const Callback_GestureEvent_Void*)&onActionUpdate_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnActionUpdate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setOnActionEnd(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void onActionEnd_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnActionEnd(gesture, (const Callback_GestureEvent_Void*)&onActionEnd_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnActionEnd, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setOnActionCancel(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void onActionCancel_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnActionCancel(gesture, (const Callback_GestureEvent_Void*)&onActionCancel_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnActionCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setOnCancel(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void onCancel_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getGestureOpsAccessor()->setOnCancel(gesture, (const Callback_Void*)&onCancel_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setOnCancel, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_setGestureTag(Ark_NativePointer gesture, const KStringPtr& tag) {
        GetAccessors()->getGestureOpsAccessor()->setGestureTag(gesture, (const Ark_String*) (&tag));
}
KOALA_INTEROP_V2(GestureOps_setGestureTag, Ark_NativePointer, KStringPtr)
void impl_GestureOps_setAllowedTypes(Ark_NativePointer gesture, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 types_value_buf_length = thisDeserializer.readInt32();
        Array_SourceTool types_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(types_value_buf)>::type,
        std::decay<decltype(*types_value_buf.array)>::type>(&types_value_buf, types_value_buf_length);
        for (int types_value_buf_i = 0; types_value_buf_i < types_value_buf_length; types_value_buf_i++) {
            types_value_buf.array[types_value_buf_i] = static_cast<Ark_SourceTool>(thisDeserializer.readInt32());
        }
        Array_SourceTool types_value = types_value_buf;;
        GetAccessors()->getGestureOpsAccessor()->setAllowedTypes(gesture, (const Array_SourceTool*)&types_value);
}
KOALA_INTEROP_DIRECT_V3(GestureOps_setAllowedTypes, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GestureOps_addGestureToNode(Ark_NativePointer node, KInteropNumber priority, Ark_Int32 mask, Ark_NativePointer gesture, Ark_Boolean isModifier) {
        GetAccessors()->getGestureOpsAccessor()->addGestureToNode(node, (const Ark_Number*) (&priority), static_cast<Ark_GestureMask>(mask), gesture, isModifier);
}
KOALA_INTEROP_DIRECT_V5(GestureOps_addGestureToNode, Ark_NativePointer, KInteropNumber, Ark_Int32, Ark_NativePointer, Ark_Boolean)
void impl_GestureOps_addGestureToGroup(Ark_NativePointer group, Ark_NativePointer gesture) {
        GetAccessors()->getGestureOpsAccessor()->addGestureToGroup(group, gesture);
}
KOALA_INTEROP_DIRECT_V2(GestureOps_addGestureToGroup, Ark_NativePointer, Ark_NativePointer)
void impl_GestureOps_removeGestureByTag(Ark_NativePointer node, const KStringPtr& tag) {
        GetAccessors()->getGestureOpsAccessor()->removeGestureByTag(node, (const Ark_String*) (&tag));
}
KOALA_INTEROP_V2(GestureOps_removeGestureByTag, Ark_NativePointer, KStringPtr)
void impl_GestureOps_clearGestures(Ark_NativePointer node) {
        GetAccessors()->getGestureOpsAccessor()->clearGestures(node);
}
KOALA_INTEROP_DIRECT_V1(GestureOps_clearGestures, Ark_NativePointer)
void impl_FocusController_requestFocus(const KStringPtr& key) {
        GetAccessors()->getFocusControllerAccessor()->requestFocus((const Ark_String*) (&key));
}
KOALA_INTEROP_V1(FocusController_requestFocus, KStringPtr)
Ark_NativePointer impl_ComponentContent_ctor() {
        return GetAccessors()->getComponentContentAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ComponentContent_ctor, Ark_NativePointer)
Ark_NativePointer impl_ComponentContent_getFinalizer() {
        return GetAccessors()->getComponentContentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ComponentContent_getFinalizer, Ark_NativePointer)
void impl_ComponentContent_update(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object args_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getComponentContentAccessor()->update(self, (const Ark_Object*)&args_value);
}
KOALA_INTEROP_DIRECT_V3(ComponentContent_update, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ComponentContent_reuse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (param_value_buf_runtimeType))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        GetAccessors()->getComponentContentAccessor()->reuse(self, (const Opt_Object*)&param_value);
}
KOALA_INTEROP_DIRECT_V3(ComponentContent_reuse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ComponentContent_recycle(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->recycle(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_recycle, Ark_NativePointer)
void impl_ComponentContent_dispose(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_dispose, Ark_NativePointer)
void impl_ComponentContent_updateConfiguration(Ark_NativePointer thisPtr) {
        Ark_ComponentContent self = reinterpret_cast<Ark_ComponentContent>(thisPtr);
        GetAccessors()->getComponentContentAccessor()->updateConfiguration(self);
}
KOALA_INTEROP_DIRECT_V1(ComponentContent_updateConfiguration, Ark_NativePointer)
Ark_NativePointer impl_Scene_ctor() {
        return GetAccessors()->getSceneAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Scene_ctor, Ark_NativePointer)
Ark_NativePointer impl_Scene_getFinalizer() {
        return GetAccessors()->getSceneAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Scene_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Scene_load(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto uri_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceStr uri_value_buf = {};
        uri_value_buf.tag = uri_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (uri_value_buf_runtimeType))
        {
            const Ark_Int8 uri_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceStr uri_value_buf_ = {};
            uri_value_buf_.selector = uri_value_buf__selector;
            if (uri_value_buf__selector == 0) {
                uri_value_buf_.selector = 0;
                uri_value_buf_.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (uri_value_buf__selector == 1) {
                uri_value_buf_.selector = 1;
                uri_value_buf_.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for uri_value_buf_ has to be chosen through deserialisation.");
            }
            uri_value_buf.value = static_cast<Ark_ResourceStr>(uri_value_buf_);
        }
        Opt_ResourceStr uri_value = uri_value_buf;;
        return GetAccessors()->getSceneAccessor()->load((const Opt_ResourceStr*)&uri_value);
}
KOALA_INTEROP_DIRECT_2(Scene_load, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Scene_destroy(Ark_NativePointer thisPtr) {
        Ark_Scene self = reinterpret_cast<Ark_Scene>(thisPtr);
        GetAccessors()->getSceneAccessor()->destroy(self);
}
KOALA_INTEROP_DIRECT_V1(Scene_destroy, Ark_NativePointer)
Ark_NativePointer impl_WorkerEventListener_ctor() {
        return GetAccessors()->getWorkerEventListenerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WorkerEventListener_ctor, Ark_NativePointer)
Ark_NativePointer impl_WorkerEventListener_getFinalizer() {
        return GetAccessors()->getWorkerEventListenerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WorkerEventListener_getFinalizer, Ark_NativePointer)
void impl_WorkerEventListener_invoke(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WorkerEventListener self = reinterpret_cast<Ark_WorkerEventListener>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Event event_value = thisDeserializer.readEvent();;
        GetAccessors()->getWorkerEventListenerAccessor()->invoke(self, (const Ark_Event*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(WorkerEventListener_invoke, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RestrictedWorker_ctor(const KStringPtr& scriptURL, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readWorkerOptions();
        }
        Opt_WorkerOptions options_value = options_value_buf;;
        return GetAccessors()->getRestrictedWorkerAccessor()->ctor((const Ark_String*) (&scriptURL), (const Opt_WorkerOptions*)&options_value);
}
KOALA_INTEROP_3(RestrictedWorker_ctor, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RestrictedWorker_getFinalizer() {
        return GetAccessors()->getRestrictedWorkerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RestrictedWorker_getFinalizer, Ark_NativePointer)
void impl_RestrictedWorker_postMessage0(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const Ark_Int32 transfer_value_buf_length = thisDeserializer.readInt32();
        Array_Buffer transfer_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(transfer_value_buf)>::type,
        std::decay<decltype(*transfer_value_buf.array)>::type>(&transfer_value_buf, transfer_value_buf_length);
        for (int transfer_value_buf_i = 0; transfer_value_buf_i < transfer_value_buf_length; transfer_value_buf_i++) {
            transfer_value_buf.array[transfer_value_buf_i] = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        Array_Buffer transfer_value = transfer_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessage0(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Object*)&message_value, (const Array_Buffer*)&transfer_value);
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessage0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_postMessage1(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PostMessageOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readPostMessageOptions();
        }
        Opt_PostMessageOptions options_value = options_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessage1(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Object*)&message_value, (const Opt_PostMessageOptions*)&options_value);
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessage1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_postMessageWithSharedSendable(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object message_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto transfer_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Buffer transfer_value_buf = {};
        transfer_value_buf.tag = transfer_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (transfer_value_buf_runtimeType))
        {
            const Ark_Int32 transfer_value_buf__length = thisDeserializer.readInt32();
            Array_Buffer transfer_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(transfer_value_buf_)>::type,
        std::decay<decltype(*transfer_value_buf_.array)>::type>(&transfer_value_buf_, transfer_value_buf__length);
            for (int transfer_value_buf__i = 0; transfer_value_buf__i < transfer_value_buf__length; transfer_value_buf__i++) {
                transfer_value_buf_.array[transfer_value_buf__i] = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
            }
            transfer_value_buf.value = transfer_value_buf_;
        }
        Opt_Array_Buffer transfer_value = transfer_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->postMessageWithSharedSendable(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Object*)&message_value, (const Opt_Array_Buffer*)&transfer_value);
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_postMessageWithSharedSendable, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_on(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, Ark_NativePointer listener) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->on(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener>(listener));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_on, Ark_NativePointer, KStringPtr, Ark_NativePointer)
void impl_RestrictedWorker_once(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, Ark_NativePointer listener) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->once(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener>(listener));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_once, Ark_NativePointer, KStringPtr, Ark_NativePointer)
void impl_RestrictedWorker_off(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto listener_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerEventListener listener_value_buf = {};
        listener_value_buf.tag = listener_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (listener_value_buf_runtimeType))
        {
            listener_value_buf.value = static_cast<Ark_WorkerEventListener>(thisDeserializer.readWorkerEventListener());
        }
        Opt_WorkerEventListener listener_value = listener_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->off(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), (const Opt_WorkerEventListener*)&listener_value);
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_off, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_terminate(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->terminate(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(RestrictedWorker_terminate, Ark_NativePointer)
void impl_RestrictedWorker_addEventListener(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, Ark_NativePointer listener) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->addEventListener(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), static_cast<Ark_WorkerEventListener>(listener));
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_addEventListener, Ark_NativePointer, KStringPtr, Ark_NativePointer)
Ark_Boolean impl_RestrictedWorker_dispatchEvent(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Event event_value = thisDeserializer.readEvent();;
        return GetAccessors()->getRestrictedWorkerAccessor()->dispatchEvent(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Event*)&event_value);
}
KOALA_INTEROP_CTX_3(RestrictedWorker_dispatchEvent, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_removeEventListener(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& Type, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_WorkerEventListener callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = static_cast<Ark_WorkerEventListener>(thisDeserializer.readWorkerEventListener());
        }
        Opt_WorkerEventListener callback__value = callback__value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->removeEventListener(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&Type), (const Opt_WorkerEventListener*)&callback__value);
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_removeEventListener, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_removeAllListener(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        GetAccessors()->getRestrictedWorkerAccessor()->removeAllListener(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(RestrictedWorker_removeAllListener, Ark_NativePointer)
void impl_RestrictedWorker_registerGlobalCallObject(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& instanceName, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object globalCallObject_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getRestrictedWorkerAccessor()->registerGlobalCallObject(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&instanceName), (const Ark_Object*)&globalCallObject_value);
}
KOALA_INTEROP_CTX_V4(RestrictedWorker_registerGlobalCallObject, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_RestrictedWorker_unregisterGlobalCallObject(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto instanceName_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String instanceName_value_buf = {};
        instanceName_value_buf.tag = instanceName_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (instanceName_value_buf_runtimeType))
        {
            instanceName_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String instanceName_value = instanceName_value_buf;;
        GetAccessors()->getRestrictedWorkerAccessor()->unregisterGlobalCallObject(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Opt_String*)&instanceName_value);
}
KOALA_INTEROP_CTX_V3(RestrictedWorker_unregisterGlobalCallObject, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnexit(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnexit(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnexit, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnexit(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        RestrictedWorker_onexit_Callback onexit_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number code)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onexit_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number code)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onexit_Callback))))};;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnexit(self, (const RestrictedWorker_onexit_Callback*)&onexit_value);
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnexit, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnerror(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnerror(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnerror, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnerror(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        RestrictedWorker_onerror_Callback onerror_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ErrorEvent ev)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onerror_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ErrorEvent ev)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onerror_Callback))))};;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnerror(self, (const RestrictedWorker_onerror_Callback*)&onerror_value);
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnerror, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnmessage(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnmessage(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnmessage, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnmessage(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        RestrictedWorker_onmessage_Callback onmessage_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onmessage_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onmessage_Callback))))};;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnmessage(self, (const RestrictedWorker_onmessage_Callback*)&onmessage_value);
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnmessage, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RestrictedWorker_getOnmessageerror(Ark_NativePointer thisPtr) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        const auto &retValue = GetAccessors()->getRestrictedWorkerAccessor()->getOnmessageerror(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RestrictedWorker_getOnmessageerror, KInteropReturnBuffer, Ark_NativePointer)
void impl_RestrictedWorker_setOnmessageerror(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RestrictedWorker self = reinterpret_cast<Ark_RestrictedWorker>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        RestrictedWorker_onmessage_Callback onmessageerror_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_RestrictedWorker_onmessage_Callback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MessageEvents event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_RestrictedWorker_onmessage_Callback))))};;
        GetAccessors()->getRestrictedWorkerAccessor()->setOnmessageerror(self, (const RestrictedWorker_onmessage_Callback*)&onmessageerror_value);
}
KOALA_INTEROP_DIRECT_V3(RestrictedWorker_setOnmessageerror, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_UIContext_ctor() {
        return GetAccessors()->getUIContextAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(UIContext_ctor, Ark_NativePointer)
Ark_NativePointer impl_UIContext_getFinalizer() {
        return GetAccessors()->getUIContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UIContext_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_UIContext_getFont(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getFont(self);
        Serializer _retSerializer {};
        _retSerializer.writeFont(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UIContext_getFont, KInteropReturnBuffer, Ark_NativePointer)
Ark_String impl_UIContext_getFilteredInspectorTree(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto filters_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_String filters_value_buf = {};
        filters_value_buf.tag = filters_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (filters_value_buf_runtimeType))
        {
            const Ark_Int32 filters_value_buf__length = thisDeserializer.readInt32();
            Array_String filters_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(filters_value_buf_)>::type,
        std::decay<decltype(*filters_value_buf_.array)>::type>(&filters_value_buf_, filters_value_buf__length);
            for (int filters_value_buf__i = 0; filters_value_buf__i < filters_value_buf__length; filters_value_buf__i++) {
                filters_value_buf_.array[filters_value_buf__i] = static_cast<Ark_String>(thisDeserializer.readString());
            }
            filters_value_buf.value = filters_value_buf_;
        }
        Opt_Array_String filters_value = filters_value_buf;;
        return GetAccessors()->getUIContextAccessor()->getFilteredInspectorTree(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Opt_Array_String*)&filters_value);
}
KOALA_INTEROP_CTX_3(UIContext_getFilteredInspectorTree, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_UIContext_getFilteredInspectorTreeById(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& id, KInteropNumber depth, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto filters_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_String filters_value_buf = {};
        filters_value_buf.tag = filters_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (filters_value_buf_runtimeType))
        {
            const Ark_Int32 filters_value_buf__length = thisDeserializer.readInt32();
            Array_String filters_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(filters_value_buf_)>::type,
        std::decay<decltype(*filters_value_buf_.array)>::type>(&filters_value_buf_, filters_value_buf__length);
            for (int filters_value_buf__i = 0; filters_value_buf__i < filters_value_buf__length; filters_value_buf__i++) {
                filters_value_buf_.array[filters_value_buf__i] = static_cast<Ark_String>(thisDeserializer.readString());
            }
            filters_value_buf.value = filters_value_buf_;
        }
        Opt_Array_String filters_value = filters_value_buf;;
        return GetAccessors()->getUIContextAccessor()->getFilteredInspectorTreeById(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_String*) (&id), (const Ark_Number*) (&depth), (const Opt_Array_String*)&filters_value);
}
KOALA_INTEROP_CTX_5(UIContext_getFilteredInspectorTreeById, KStringPtr, Ark_NativePointer, KStringPtr, KInteropNumber, KSerializerBuffer, int32_t)
void impl_UIContext_animateTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = thisDeserializer.readAnimateParam();;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->animateTo(self, (const Ark_AnimateParam*)&value_value, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(UIContext_animateTo, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_showTextPickerDialog(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TextPickerDialogOptions options_value = thisDeserializer.readTextPickerDialogOptions();;
        GetAccessors()->getUIContextAccessor()->showTextPickerDialog(self, (const Ark_TextPickerDialogOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(UIContext_showTextPickerDialog, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_runScopedTask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->runScopedTask(self, (const Callback_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UIContext_runScopedTask, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_animateToImmediately(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam param_value = thisDeserializer.readAnimateParam();;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getUIContextAccessor()->animateToImmediately(self, (const Ark_AnimateParam*)&param_value, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(UIContext_animateToImmediately, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_UIContext_getFrameNodeById(Ark_NativePointer thisPtr, const KStringPtr& id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getFrameNodeById(self, (const Ark_String*) (&id));
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeFrameNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getFrameNodeById, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_UIContext_getAttachedFrameNodeById(Ark_NativePointer thisPtr, const KStringPtr& id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getAttachedFrameNodeById(self, (const Ark_String*) (&id));
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeFrameNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getAttachedFrameNodeById, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_UIContext_getFrameNodeByUniqueId(Ark_NativePointer thisPtr, KInteropNumber id) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getFrameNodeByUniqueId(self, (const Ark_Number*) (&id));
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeFrameNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(UIContext_getFrameNodeByUniqueId, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_vp2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->vp2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_vp2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2vp(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2vp(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2vp, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_fp2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->fp2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_fp2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2fp(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2fp(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2fp, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_lpx2px(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->lpx2px(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_lpx2px, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_Number impl_UIContext_px2lpx(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->px2lpx(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_2(UIContext_px2lpx, KInteropNumber, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_UIContext_getHostContext(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getHostContext(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeContext(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UIContext_getHostContext, KInteropReturnBuffer, Ark_NativePointer)
void impl_UIContext_setDynamicDimming(Ark_NativePointer thisPtr, const KStringPtr& id, KInteropNumber value) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        GetAccessors()->getUIContextAccessor()->setDynamicDimming(self, (const Ark_String*) (&id), (const Ark_Number*) (&value));
}
KOALA_INTEROP_V3(UIContext_setDynamicDimming, Ark_NativePointer, KStringPtr, KInteropNumber)
KInteropReturnBuffer impl_UIContext_getWindowName(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        const auto &retValue = GetAccessors()->getUIContextAccessor()->getWindowName(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeString(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(UIContext_getWindowName, KInteropReturnBuffer, Ark_NativePointer)
void impl_UIContext_openBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto sheetOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SheetOptions sheetOptions_value_buf = {};
        sheetOptions_value_buf.tag = sheetOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sheetOptions_value_buf_runtimeType))
        {
            sheetOptions_value_buf.value = thisDeserializer.readSheetOptions();
        }
        Opt_SheetOptions sheetOptions_value = sheetOptions_value_buf;;
        const auto targetId_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number targetId_value_buf = {};
        targetId_value_buf.tag = targetId_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (targetId_value_buf_runtimeType))
        {
            targetId_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number targetId_value = targetId_value_buf;;
        GetAccessors()->getUIContextAccessor()->openBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_ComponentContent>(bindSheetContent), (const Opt_SheetOptions*)&sheetOptions_value, (const Opt_Number*)&targetId_value);
}
KOALA_INTEROP_CTX_V4(UIContext_openBindSheet, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_updateBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SheetOptions sheetOptions_value = thisDeserializer.readSheetOptions();;
        const auto partialUpdate_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean partialUpdate_value_buf = {};
        partialUpdate_value_buf.tag = partialUpdate_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (partialUpdate_value_buf_runtimeType))
        {
            partialUpdate_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean partialUpdate_value = partialUpdate_value_buf;;
        GetAccessors()->getUIContextAccessor()->updateBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_ComponentContent>(bindSheetContent), (const Ark_SheetOptions*)&sheetOptions_value, (const Opt_Boolean*)&partialUpdate_value);
}
KOALA_INTEROP_CTX_V4(UIContext_updateBindSheet, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContext_closeBindSheet(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer bindSheetContent) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        GetAccessors()->getUIContextAccessor()->closeBindSheet(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_ComponentContent>(bindSheetContent));
}
KOALA_INTEROP_CTX_V2(UIContext_closeBindSheet, Ark_NativePointer, Ark_NativePointer)
void impl_UIContext_clearResourceCache(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        GetAccessors()->getUIContextAccessor()->clearResourceCache(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_V1(UIContext_clearResourceCache, Ark_NativePointer)
Ark_Boolean impl_UIContext_isFollowingSystemFontScale(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->isFollowingSystemFontScale(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_isFollowingSystemFontScale, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_UIContext_getMaxFontScale(Ark_NativePointer thisPtr) {
        Ark_UIContext self = reinterpret_cast<Ark_UIContext>(thisPtr);
        return GetAccessors()->getUIContextAccessor()->getMaxFontScale(self);
}
KOALA_INTEROP_DIRECT_1(UIContext_getMaxFontScale, KInteropNumber, Ark_NativePointer)
void impl_StateStylesOps_onStateStyleChange(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_StateStylesChange stateStyleChange_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Int32 currentState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_StateStylesChange)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Int32 currentState)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_StateStylesChange))))};;
    GetAccessors()->getStateStylesOpsAccessor()->onStateStyleChange(node, (const Callback_StateStylesChange*)&stateStyleChange_value);
}
KOALA_INTEROP_DIRECT_V3(StateStylesOps_onStateStyleChange, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_UIContextAtomicServiceBar_getBarRect() {
        const auto &retValue = GetAccessors()->getUIContextAtomicServiceBarAccessor()->getBarRect();
        Serializer _retSerializer {};
        _retSerializer.writeFrame(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_0(UIContextAtomicServiceBar_getBarRect, KInteropReturnBuffer)
Ark_Boolean impl_UIContextDispatchKeyEvent_dispatchKeyEvent(KSerializerBuffer thisArray, int32_t thisLength, Ark_NativePointer event) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 node_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String node_value_buf = {};
        node_value_buf.selector = node_value_buf_selector;
        if (node_value_buf_selector == 0) {
            node_value_buf.selector = 0;
            node_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (node_value_buf_selector == 1) {
            node_value_buf.selector = 1;
            node_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for node_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String node_value = static_cast<Ark_Union_Number_String>(node_value_buf);;
        return GetAccessors()->getUIContextDispatchKeyEventAccessor()->dispatchKeyEvent((const Ark_Union_Number_String*)&node_value, static_cast<Ark_KeyEvent>(event));
}
KOALA_INTEROP_DIRECT_3(UIContextDispatchKeyEvent_dispatchKeyEvent, Ark_Boolean, KSerializerBuffer, int32_t, Ark_NativePointer)
Ark_NativePointer impl_DrawableDescriptor_ctor() {
        return GetAccessors()->getDrawableDescriptorAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DrawableDescriptor_ctor, Ark_NativePointer)
Ark_NativePointer impl_DrawableDescriptor_getFinalizer() {
        return GetAccessors()->getDrawableDescriptorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawableDescriptor_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DrawableDescriptor_getPixelMap(Ark_NativePointer thisPtr) {
        Ark_DrawableDescriptor self = reinterpret_cast<Ark_DrawableDescriptor>(thisPtr);
        return GetAccessors()->getDrawableDescriptorAccessor()->getPixelMap(self);
}
KOALA_INTEROP_DIRECT_1(DrawableDescriptor_getPixelMap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LayeredDrawableDescriptor_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto foreground_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DrawableDescriptor foreground_value_buf = {};
        foreground_value_buf.tag = foreground_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (foreground_value_buf_runtimeType))
        {
            foreground_value_buf.value = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        Opt_DrawableDescriptor foreground_value = foreground_value_buf;;
        const auto background_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DrawableDescriptor background_value_buf = {};
        background_value_buf.tag = background_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (background_value_buf_runtimeType))
        {
            background_value_buf.value = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        Opt_DrawableDescriptor background_value = background_value_buf;;
        const auto mask_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DrawableDescriptor mask_value_buf = {};
        mask_value_buf.tag = mask_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (mask_value_buf_runtimeType))
        {
            mask_value_buf.value = static_cast<Ark_DrawableDescriptor>(thisDeserializer.readDrawableDescriptor());
        }
        Opt_DrawableDescriptor mask_value = mask_value_buf;;
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->ctor((const Opt_DrawableDescriptor*)&foreground_value, (const Opt_DrawableDescriptor*)&background_value, (const Opt_DrawableDescriptor*)&mask_value);
}
KOALA_INTEROP_DIRECT_2(LayeredDrawableDescriptor_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LayeredDrawableDescriptor_getFinalizer() {
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayeredDrawableDescriptor_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LayeredDrawableDescriptor_getForeground(Ark_NativePointer thisPtr) {
        Ark_LayeredDrawableDescriptor self = reinterpret_cast<Ark_LayeredDrawableDescriptor>(thisPtr);
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->getForeground(self);
}
KOALA_INTEROP_DIRECT_1(LayeredDrawableDescriptor_getForeground, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LayeredDrawableDescriptor_getBackground(Ark_NativePointer thisPtr) {
        Ark_LayeredDrawableDescriptor self = reinterpret_cast<Ark_LayeredDrawableDescriptor>(thisPtr);
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->getBackground(self);
}
KOALA_INTEROP_DIRECT_1(LayeredDrawableDescriptor_getBackground, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LayeredDrawableDescriptor_getMask(Ark_NativePointer thisPtr) {
        Ark_LayeredDrawableDescriptor self = reinterpret_cast<Ark_LayeredDrawableDescriptor>(thisPtr);
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->getMask(self);
}
KOALA_INTEROP_DIRECT_1(LayeredDrawableDescriptor_getMask, Ark_NativePointer, Ark_NativePointer)
Ark_String impl_LayeredDrawableDescriptor_getMaskClipPath() {
        return GetAccessors()->getLayeredDrawableDescriptorAccessor()->getMaskClipPath();
}
KOALA_INTEROP_0(LayeredDrawableDescriptor_getMaskClipPath, KStringPtr)
Ark_NativePointer impl_PixelMapDrawableDescriptor_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto src_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PixelMap src_value_buf = {};
        src_value_buf.tag = src_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (src_value_buf_runtimeType))
        {
            src_value_buf.value = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        Opt_PixelMap src_value = src_value_buf;;
        return GetAccessors()->getPixelMapDrawableDescriptorAccessor()->ctor((const Opt_PixelMap*)&src_value);
}
KOALA_INTEROP_DIRECT_2(PixelMapDrawableDescriptor_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PixelMapDrawableDescriptor_getFinalizer() {
        return GetAccessors()->getPixelMapDrawableDescriptorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PixelMapDrawableDescriptor_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_AnimatedDrawableDescriptor_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 pixelMaps_value_buf_length = thisDeserializer.readInt32();
        Array_PixelMap pixelMaps_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(pixelMaps_value_buf)>::type,
        std::decay<decltype(*pixelMaps_value_buf.array)>::type>(&pixelMaps_value_buf, pixelMaps_value_buf_length);
        for (int pixelMaps_value_buf_i = 0; pixelMaps_value_buf_i < pixelMaps_value_buf_length; pixelMaps_value_buf_i++) {
            pixelMaps_value_buf.array[pixelMaps_value_buf_i] = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        Array_PixelMap pixelMaps_value = pixelMaps_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_AnimationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readAnimationOptions();
        }
        Opt_AnimationOptions options_value = options_value_buf;;
        return GetAccessors()->getAnimatedDrawableDescriptorAccessor()->ctor((const Array_PixelMap*)&pixelMaps_value, (const Opt_AnimationOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(AnimatedDrawableDescriptor_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AnimatedDrawableDescriptor_getFinalizer() {
        return GetAccessors()->getAnimatedDrawableDescriptorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AnimatedDrawableDescriptor_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_ctor() {
        return GetAccessors()->getDrawingColorFilterAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DrawingColorFilter_ctor, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_getFinalizer() {
        return GetAccessors()->getDrawingColorFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawingColorFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_createBlendModeColorFilter0(Ark_Int32 color, Ark_Int32 mode) {
        return GetAccessors()->getDrawingColorFilterAccessor()->createBlendModeColorFilter0(static_cast<Ark_Color>(color), static_cast<Ark_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_2(DrawingColorFilter_createBlendModeColorFilter0, Ark_NativePointer, Ark_Int32, Ark_Int32)
Ark_NativePointer impl_DrawingColorFilter_createBlendModeColorFilter1(KInteropNumber color, Ark_Int32 mode) {
        return GetAccessors()->getDrawingColorFilterAccessor()->createBlendModeColorFilter1((const Ark_Number*) (&color), static_cast<Ark_BlendMode>(mode));
}
KOALA_INTEROP_DIRECT_2(DrawingColorFilter_createBlendModeColorFilter1, Ark_NativePointer, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_DrawingColorFilter_createComposeColorFilter(Ark_NativePointer outer, Ark_NativePointer inner) {
        return GetAccessors()->getDrawingColorFilterAccessor()->createComposeColorFilter(static_cast<Ark_DrawingColorFilter>(outer), static_cast<Ark_DrawingColorFilter>(inner));
}
KOALA_INTEROP_DIRECT_2(DrawingColorFilter_createComposeColorFilter, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_createLinearToSRGBGamma() {
        return GetAccessors()->getDrawingColorFilterAccessor()->createLinearToSRGBGamma();
}
KOALA_INTEROP_DIRECT_0(DrawingColorFilter_createLinearToSRGBGamma, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_createSRGBGammaToLinear() {
        return GetAccessors()->getDrawingColorFilterAccessor()->createSRGBGammaToLinear();
}
KOALA_INTEROP_DIRECT_0(DrawingColorFilter_createSRGBGammaToLinear, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_createLumaColorFilter() {
        return GetAccessors()->getDrawingColorFilterAccessor()->createLumaColorFilter();
}
KOALA_INTEROP_DIRECT_0(DrawingColorFilter_createLumaColorFilter, Ark_NativePointer)
Ark_NativePointer impl_DrawingColorFilter_createMatrixColorFilter(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 matrix_value_buf_length = thisDeserializer.readInt32();
        Array_Number matrix_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(matrix_value_buf)>::type,
        std::decay<decltype(*matrix_value_buf.array)>::type>(&matrix_value_buf, matrix_value_buf_length);
        for (int matrix_value_buf_i = 0; matrix_value_buf_i < matrix_value_buf_length; matrix_value_buf_i++) {
            matrix_value_buf.array[matrix_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number matrix_value = matrix_value_buf;;
        return GetAccessors()->getDrawingColorFilterAccessor()->createMatrixColorFilter((const Array_Number*)&matrix_value);
}
KOALA_INTEROP_DIRECT_2(DrawingColorFilter_createMatrixColorFilter, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawingLattice_ctor() {
        return GetAccessors()->getDrawingLatticeAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DrawingLattice_ctor, Ark_NativePointer)
Ark_NativePointer impl_DrawingLattice_getFinalizer() {
        return GetAccessors()->getDrawingLatticeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawingLattice_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_DrawingLattice_createImageLattice(KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fXCount, KInteropNumber fYCount) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 xDivs_value_buf_length = thisDeserializer.readInt32();
        Array_Number xDivs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(xDivs_value_buf)>::type,
        std::decay<decltype(*xDivs_value_buf.array)>::type>(&xDivs_value_buf, xDivs_value_buf_length);
        for (int xDivs_value_buf_i = 0; xDivs_value_buf_i < xDivs_value_buf_length; xDivs_value_buf_i++) {
            xDivs_value_buf.array[xDivs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number xDivs_value = xDivs_value_buf;;
        const Ark_Int32 yDivs_value_buf_length = thisDeserializer.readInt32();
        Array_Number yDivs_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(yDivs_value_buf)>::type,
        std::decay<decltype(*yDivs_value_buf.array)>::type>(&yDivs_value_buf, yDivs_value_buf_length);
        for (int yDivs_value_buf_i = 0; yDivs_value_buf_i < yDivs_value_buf_length; yDivs_value_buf_i++) {
            yDivs_value_buf.array[yDivs_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number yDivs_value = yDivs_value_buf;;
        const auto fBounds_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Rect fBounds_value_buf = {};
        fBounds_value_buf.tag = fBounds_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fBounds_value_buf_runtimeType))
        {
            fBounds_value_buf.value = thisDeserializer.readRect();
        }
        Opt_Rect fBounds_value = fBounds_value_buf;;
        const auto fRectTypes_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_RectType fRectTypes_value_buf = {};
        fRectTypes_value_buf.tag = fRectTypes_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fRectTypes_value_buf_runtimeType))
        {
            const Ark_Int32 fRectTypes_value_buf__length = thisDeserializer.readInt32();
            Array_RectType fRectTypes_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(fRectTypes_value_buf_)>::type,
        std::decay<decltype(*fRectTypes_value_buf_.array)>::type>(&fRectTypes_value_buf_, fRectTypes_value_buf__length);
            for (int fRectTypes_value_buf__i = 0; fRectTypes_value_buf__i < fRectTypes_value_buf__length; fRectTypes_value_buf__i++) {
                fRectTypes_value_buf_.array[fRectTypes_value_buf__i] = static_cast<Ark_RectType>(thisDeserializer.readInt32());
            }
            fRectTypes_value_buf.value = fRectTypes_value_buf_;
        }
        Opt_Array_RectType fRectTypes_value = fRectTypes_value_buf;;
        const auto fColors_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Union_Color_Number fColors_value_buf = {};
        fColors_value_buf.tag = fColors_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fColors_value_buf_runtimeType))
        {
            const Ark_Int32 fColors_value_buf__length = thisDeserializer.readInt32();
            Array_Union_Color_Number fColors_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(fColors_value_buf_)>::type,
        std::decay<decltype(*fColors_value_buf_.array)>::type>(&fColors_value_buf_, fColors_value_buf__length);
            for (int fColors_value_buf__i = 0; fColors_value_buf__i < fColors_value_buf__length; fColors_value_buf__i++) {
                const Ark_Int8 fColors_value_buf__buf_selector = thisDeserializer.readInt8();
                Ark_Union_Color_Number fColors_value_buf__buf = {};
                fColors_value_buf__buf.selector = fColors_value_buf__buf_selector;
                if (fColors_value_buf__buf_selector == 0) {
                    fColors_value_buf__buf.selector = 0;
                    fColors_value_buf__buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (fColors_value_buf__buf_selector == 1) {
                    fColors_value_buf__buf.selector = 1;
                    fColors_value_buf__buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else {
                    INTEROP_FATAL("One of the branches for fColors_value_buf__buf has to be chosen through deserialisation.");
                }
                fColors_value_buf_.array[fColors_value_buf__i] = static_cast<Ark_Union_Color_Number>(fColors_value_buf__buf);
            }
            fColors_value_buf.value = fColors_value_buf_;
        }
        Opt_Array_Union_Color_Number fColors_value = fColors_value_buf;;
        return GetAccessors()->getDrawingLatticeAccessor()->createImageLattice((const Array_Number*)&xDivs_value, (const Array_Number*)&yDivs_value, (const Ark_Number*) (&fXCount), (const Ark_Number*) (&fYCount), (const Opt_Rect*)&fBounds_value, (const Opt_Array_RectType*)&fRectTypes_value, (const Opt_Array_Union_Color_Number*)&fColors_value);
}
KOALA_INTEROP_DIRECT_4(DrawingLattice_createImageLattice, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_DrawingCanvas_ctor(Ark_NativePointer pixelmap) {
        return GetAccessors()->getDrawingCanvasAccessor()->ctor(static_cast<Ark_PixelMap>(pixelmap));
}
KOALA_INTEROP_DIRECT_1(DrawingCanvas_ctor, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_DrawingCanvas_getFinalizer() {
        return GetAccessors()->getDrawingCanvasAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawingCanvas_getFinalizer, Ark_NativePointer)
void impl_DrawingCanvas_drawRect(Ark_NativePointer thisPtr, KInteropNumber left, KInteropNumber top, KInteropNumber right, KInteropNumber bottom) {
        Ark_DrawingCanvas self = reinterpret_cast<Ark_DrawingCanvas>(thisPtr);
        GetAccessors()->getDrawingCanvasAccessor()->drawRect(self, (const Ark_Number*) (&left), (const Ark_Number*) (&top), (const Ark_Number*) (&right), (const Ark_Number*) (&bottom));
}
KOALA_INTEROP_DIRECT_V5(DrawingCanvas_drawRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_ColorMetrics_ctor() {
        return GetAccessors()->getColorMetricsAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ColorMetrics_ctor, Ark_NativePointer)
Ark_NativePointer impl_ColorMetrics_getFinalizer() {
        return GetAccessors()->getColorMetricsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ColorMetrics_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ColorMetrics_numeric(KInteropNumber value) {
        return GetAccessors()->getColorMetricsAccessor()->numeric((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_numeric, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ColorMetrics_rgba(KInteropNumber red, KInteropNumber green, KInteropNumber blue, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto alpha_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number alpha_value_buf = {};
        alpha_value_buf.tag = alpha_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (alpha_value_buf_runtimeType))
        {
            alpha_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number alpha_value = alpha_value_buf;;
        return GetAccessors()->getColorMetricsAccessor()->rgba((const Ark_Number*) (&red), (const Ark_Number*) (&green), (const Ark_Number*) (&blue), (const Opt_Number*)&alpha_value);
}
KOALA_INTEROP_DIRECT_5(ColorMetrics_rgba, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorMetrics_resourceColor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getColorMetricsAccessor()->resourceColor((const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_2(ColorMetrics_resourceColor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorMetrics_blendColor(Ark_NativePointer thisPtr, Ark_NativePointer overlayColor) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->blendColor(self, static_cast<Ark_ColorMetrics>(overlayColor));
}
KOALA_INTEROP_DIRECT_2(ColorMetrics_blendColor, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_String impl_ColorMetrics_getColor(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->getColor(self);
}
KOALA_INTEROP_1(ColorMetrics_getColor, KStringPtr, Ark_NativePointer)
Ark_Number impl_ColorMetrics_getRed(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->getRed(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_getRed, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_getGreen(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->getGreen(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_getGreen, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_getBlue(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->getBlue(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_getBlue, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ColorMetrics_getAlpha(Ark_NativePointer thisPtr) {
        Ark_ColorMetrics self = reinterpret_cast<Ark_ColorMetrics>(thisPtr);
        return GetAccessors()->getColorMetricsAccessor()->getAlpha(self);
}
KOALA_INTEROP_DIRECT_1(ColorMetrics_getAlpha, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_WebviewController_ctor() {
        return GetAccessors()->getWebviewControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebviewController_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebviewController_getFinalizer() {
        return GetAccessors()->getWebviewControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebviewController_getFinalizer, Ark_NativePointer)
void impl_WebviewController_initializeWebEngine() {
        GetAccessors()->getWebviewControllerAccessor()->initializeWebEngine();
}
KOALA_INTEROP_DIRECT_V0(WebviewController_initializeWebEngine)
void impl_WebviewController_loadUrl(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebviewController self = reinterpret_cast<Ark_WebviewController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 url_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource url_value_buf = {};
        url_value_buf.selector = url_value_buf_selector;
        if (url_value_buf_selector == 0) {
            url_value_buf.selector = 0;
            url_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (url_value_buf_selector == 1) {
            url_value_buf.selector = 1;
            url_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for url_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Resource url_value = static_cast<Ark_Union_String_Resource>(url_value_buf);;
        const auto headers_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_WebHeader headers_value_buf = {};
        headers_value_buf.tag = headers_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (headers_value_buf_runtimeType))
        {
            const Ark_Int32 headers_value_buf__length = thisDeserializer.readInt32();
            Array_WebHeader headers_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(headers_value_buf_)>::type,
        std::decay<decltype(*headers_value_buf_.array)>::type>(&headers_value_buf_, headers_value_buf__length);
            for (int headers_value_buf__i = 0; headers_value_buf__i < headers_value_buf__length; headers_value_buf__i++) {
                headers_value_buf_.array[headers_value_buf__i] = thisDeserializer.readWebHeader();
            }
            headers_value_buf.value = headers_value_buf_;
        }
        Opt_Array_WebHeader headers_value = headers_value_buf;;
        GetAccessors()->getWebviewControllerAccessor()->loadUrl(self, (const Ark_Union_String_Resource*)&url_value, (const Opt_Array_WebHeader*)&headers_value);
}
KOALA_INTEROP_DIRECT_V3(WebviewController_loadUrl, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GlobalScope_ohos_arkui_componentSnapshot_get(const KStringPtr& id, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        AsyncCallback_image_PixelMap_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PixelMap result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_AsyncCallback_image_PixelMap_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PixelMap result)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_AsyncCallback_image_PixelMap_Void))))};;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SnapshotOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSnapshotOptions();
        }
        Opt_SnapshotOptions options_value = options_value_buf;;
        GetAccessors()->getGlobalScope_ohos_arkui_componentSnapshotAccessor()->get((const Ark_String*) (&id), (const AsyncCallback_image_PixelMap_Void*)&callback_value, (const Opt_SnapshotOptions*)&options_value);
}
KOALA_INTEROP_V3(GlobalScope_ohos_arkui_componentSnapshot_get, KStringPtr, KSerializerBuffer, int32_t)
void impl_GlobalScope_ohos_arkui_performanceMonitor_begin(const KStringPtr& scene, Ark_Int32 startInputType, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto note_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String note_value_buf = {};
        note_value_buf.tag = note_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (note_value_buf_runtimeType))
        {
            note_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String note_value = note_value_buf;;
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->begin((const Ark_String*) (&scene), static_cast<Ark_PerfMonitorActionType>(startInputType), (const Opt_String*)&note_value);
}
KOALA_INTEROP_V4(GlobalScope_ohos_arkui_performanceMonitor_begin, KStringPtr, Ark_Int32, KSerializerBuffer, int32_t)
void impl_GlobalScope_ohos_arkui_performanceMonitor_end(const KStringPtr& scene) {
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->end((const Ark_String*) (&scene));
}
KOALA_INTEROP_V1(GlobalScope_ohos_arkui_performanceMonitor_end, KStringPtr)
void impl_GlobalScope_ohos_arkui_performanceMonitor_recordInputEventTime(Ark_Int32 actionType, Ark_Int32 sourceType, KLong time) {
        GetAccessors()->getGlobalScope_ohos_arkui_performanceMonitorAccessor()->recordInputEventTime(static_cast<Ark_PerfMonitorActionType>(actionType), static_cast<Ark_PerfMonitorSourceType>(sourceType), time);
}
KOALA_INTEROP_DIRECT_V3(GlobalScope_ohos_arkui_performanceMonitor_recordInputEventTime, Ark_Int32, Ark_Int32, KLong)
Ark_NativePointer impl_CommonShape_ctor() {
        return GetAccessors()->getCommonShapeAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CommonShape_ctor, Ark_NativePointer)
Ark_NativePointer impl_CommonShape_getFinalizer() {
        return GetAccessors()->getCommonShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CommonShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_CommonShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = thisDeserializer.readPosition();;
        return GetAccessors()->getCommonShapeAccessor()->offset(self, (const Ark_Position*)&offset_value);
}
KOALA_INTEROP_DIRECT_3(CommonShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getCommonShapeAccessor()->fill(self, (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_3(CommonShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CommonShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CommonShape self = reinterpret_cast<Ark_CommonShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();;
        return GetAccessors()->getCommonShapeAccessor()->position(self, (const Ark_Position*)&position_value);
}
KOALA_INTEROP_DIRECT_3(CommonShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseShape_ctor() {
        return GetAccessors()->getBaseShapeAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(BaseShape_ctor, Ark_NativePointer)
Ark_NativePointer impl_BaseShape_getFinalizer() {
        return GetAccessors()->getBaseShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_BaseShape_width(Ark_NativePointer thisPtr, const KLength& width) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        return GetAccessors()->getBaseShapeAccessor()->width(self, (const Ark_Length*)&width);
}
KOALA_INTEROP_2(BaseShape_width, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_BaseShape_height(Ark_NativePointer thisPtr, const KLength& height) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        return GetAccessors()->getBaseShapeAccessor()->height(self, (const Ark_Length*)&height);
}
KOALA_INTEROP_2(BaseShape_height, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_BaseShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseShape self = reinterpret_cast<Ark_BaseShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = thisDeserializer.readSizeOptions();;
        return GetAccessors()->getBaseShapeAccessor()->size(self, (const Ark_SizeOptions*)&size_value);
}
KOALA_INTEROP_DIRECT_3(BaseShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_RectShapeOptions_RoundRectShapeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            const Ark_Int8 options_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_RectShapeOptions_RoundRectShapeOptions options_value_buf_ = {};
            options_value_buf_.selector = options_value_buf__selector;
            if (options_value_buf__selector == 0) {
                options_value_buf_.selector = 0;
                options_value_buf_.value0 = thisDeserializer.readRectShapeOptions();
            }
            else if (options_value_buf__selector == 1) {
                options_value_buf_.selector = 1;
                options_value_buf_.value1 = thisDeserializer.readRoundRectShapeOptions();
            }
            else {
                INTEROP_FATAL("One of the branches for options_value_buf_ has to be chosen through deserialisation.");
            }
            options_value_buf.value = static_cast<Ark_Union_RectShapeOptions_RoundRectShapeOptions>(options_value_buf_);
        }
        Opt_Union_RectShapeOptions_RoundRectShapeOptions options_value = options_value_buf;;
        return GetAccessors()->getRectShapeAccessor()->ctor((const Opt_Union_RectShapeOptions_RoundRectShapeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(RectShape_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_getFinalizer() {
        return GetAccessors()->getRectShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RectShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_RectShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = thisDeserializer.readPosition();;
        return GetAccessors()->getRectShapeAccessor()->offset(self, (const Ark_Position*)&offset_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->fill(self, (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();;
        return GetAccessors()->getRectShapeAccessor()->position(self, (const Ark_Position*)&position_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_width(Ark_NativePointer thisPtr, const KLength& width) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        return GetAccessors()->getRectShapeAccessor()->width(self, (const Ark_Length*)&width);
}
KOALA_INTEROP_2(RectShape_width, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_RectShape_height(Ark_NativePointer thisPtr, const KLength& height) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        return GetAccessors()->getRectShapeAccessor()->height(self, (const Ark_Length*)&height);
}
KOALA_INTEROP_2(RectShape_height, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_RectShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = thisDeserializer.readSizeOptions();;
        return GetAccessors()->getRectShapeAccessor()->size(self, (const Ark_SizeOptions*)&size_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radiusWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 rWidth_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String rWidth_value_buf = {};
        rWidth_value_buf.selector = rWidth_value_buf_selector;
        if (rWidth_value_buf_selector == 0) {
            rWidth_value_buf.selector = 0;
            rWidth_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (rWidth_value_buf_selector == 1) {
            rWidth_value_buf.selector = 1;
            rWidth_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for rWidth_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String rWidth_value = static_cast<Ark_Union_Number_String>(rWidth_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radiusWidth(self, (const Ark_Union_Number_String*)&rWidth_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_radiusWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radiusHeight(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 rHeight_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String rHeight_value_buf = {};
        rHeight_value_buf.selector = rHeight_value_buf_selector;
        if (rHeight_value_buf_selector == 0) {
            rHeight_value_buf.selector = 0;
            rHeight_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (rHeight_value_buf_selector == 1) {
            rHeight_value_buf.selector = 1;
            rHeight_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for rHeight_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String rHeight_value = static_cast<Ark_Union_Number_String>(rHeight_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radiusHeight(self, (const Ark_Union_Number_String*)&rHeight_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_radiusHeight, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RectShape_radius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RectShape self = reinterpret_cast<Ark_RectShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 radius_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String_Array_Union_Number_String radius_value_buf = {};
        radius_value_buf.selector = radius_value_buf_selector;
        if (radius_value_buf_selector == 0) {
            radius_value_buf.selector = 0;
            radius_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (radius_value_buf_selector == 1) {
            radius_value_buf.selector = 1;
            radius_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (radius_value_buf_selector == 2) {
            radius_value_buf.selector = 2;
            const Ark_Int32 radius_value_buf_u_length = thisDeserializer.readInt32();
            Array_Union_Number_String radius_value_buf_u = {};
            thisDeserializer.resizeArray<std::decay<decltype(radius_value_buf_u)>::type,
        std::decay<decltype(*radius_value_buf_u.array)>::type>(&radius_value_buf_u, radius_value_buf_u_length);
            for (int radius_value_buf_u_i = 0; radius_value_buf_u_i < radius_value_buf_u_length; radius_value_buf_u_i++) {
                const Ark_Int8 radius_value_buf_u_buf_selector = thisDeserializer.readInt8();
                Ark_Union_Number_String radius_value_buf_u_buf = {};
                radius_value_buf_u_buf.selector = radius_value_buf_u_buf_selector;
                if (radius_value_buf_u_buf_selector == 0) {
                    radius_value_buf_u_buf.selector = 0;
                    radius_value_buf_u_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (radius_value_buf_u_buf_selector == 1) {
                    radius_value_buf_u_buf.selector = 1;
                    radius_value_buf_u_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else {
                    INTEROP_FATAL("One of the branches for radius_value_buf_u_buf has to be chosen through deserialisation.");
                }
                radius_value_buf_u.array[radius_value_buf_u_i] = static_cast<Ark_Union_Number_String>(radius_value_buf_u_buf);
            }
            radius_value_buf.value2 = radius_value_buf_u;
        }
        else {
            INTEROP_FATAL("One of the branches for radius_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String_Array_Union_Number_String radius_value = static_cast<Ark_Union_Number_String_Array_Union_Number_String>(radius_value_buf);;
        return GetAccessors()->getRectShapeAccessor()->radius(self, (const Ark_Union_Number_String_Array_Union_Number_String*)&radius_value);
}
KOALA_INTEROP_DIRECT_3(RectShape_radius, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapeSize options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readShapeSize();
        }
        Opt_ShapeSize options_value = options_value_buf;;
        return GetAccessors()->getCircleShapeAccessor()->ctor((const Opt_ShapeSize*)&options_value);
}
KOALA_INTEROP_DIRECT_2(CircleShape_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_getFinalizer() {
        return GetAccessors()->getCircleShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CircleShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_CircleShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = thisDeserializer.readPosition();;
        return GetAccessors()->getCircleShapeAccessor()->offset(self, (const Ark_Position*)&offset_value);
}
KOALA_INTEROP_DIRECT_3(CircleShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getCircleShapeAccessor()->fill(self, (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_3(CircleShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();;
        return GetAccessors()->getCircleShapeAccessor()->position(self, (const Ark_Position*)&position_value);
}
KOALA_INTEROP_DIRECT_3(CircleShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CircleShape_width(Ark_NativePointer thisPtr, const KLength& width) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        return GetAccessors()->getCircleShapeAccessor()->width(self, (const Ark_Length*)&width);
}
KOALA_INTEROP_2(CircleShape_width, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_CircleShape_height(Ark_NativePointer thisPtr, const KLength& height) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        return GetAccessors()->getCircleShapeAccessor()->height(self, (const Ark_Length*)&height);
}
KOALA_INTEROP_2(CircleShape_height, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_CircleShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CircleShape self = reinterpret_cast<Ark_CircleShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = thisDeserializer.readSizeOptions();;
        return GetAccessors()->getCircleShapeAccessor()->size(self, (const Ark_SizeOptions*)&size_value);
}
KOALA_INTEROP_DIRECT_3(CircleShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ShapeSize options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readShapeSize();
        }
        Opt_ShapeSize options_value = options_value_buf;;
        return GetAccessors()->getEllipseShapeAccessor()->ctor((const Opt_ShapeSize*)&options_value);
}
KOALA_INTEROP_DIRECT_2(EllipseShape_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_getFinalizer() {
        return GetAccessors()->getEllipseShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EllipseShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_EllipseShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = thisDeserializer.readPosition();;
        return GetAccessors()->getEllipseShapeAccessor()->offset(self, (const Ark_Position*)&offset_value);
}
KOALA_INTEROP_DIRECT_3(EllipseShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getEllipseShapeAccessor()->fill(self, (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_3(EllipseShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();;
        return GetAccessors()->getEllipseShapeAccessor()->position(self, (const Ark_Position*)&position_value);
}
KOALA_INTEROP_DIRECT_3(EllipseShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_EllipseShape_width(Ark_NativePointer thisPtr, const KLength& width) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        return GetAccessors()->getEllipseShapeAccessor()->width(self, (const Ark_Length*)&width);
}
KOALA_INTEROP_2(EllipseShape_width, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_EllipseShape_height(Ark_NativePointer thisPtr, const KLength& height) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        return GetAccessors()->getEllipseShapeAccessor()->height(self, (const Ark_Length*)&height);
}
KOALA_INTEROP_2(EllipseShape_height, Ark_NativePointer, Ark_NativePointer, KLength)
Ark_NativePointer impl_EllipseShape_size(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_EllipseShape self = reinterpret_cast<Ark_EllipseShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SizeOptions size_value = thisDeserializer.readSizeOptions();;
        return GetAccessors()->getEllipseShapeAccessor()->size(self, (const Ark_SizeOptions*)&size_value);
}
KOALA_INTEROP_DIRECT_3(EllipseShape_size, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PathShapeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readPathShapeOptions();
        }
        Opt_PathShapeOptions options_value = options_value_buf;;
        return GetAccessors()->getPathShapeAccessor()->ctor((const Opt_PathShapeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(PathShape_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_getFinalizer() {
        return GetAccessors()->getPathShapeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PathShape_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PathShape_offset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position offset_value = thisDeserializer.readPosition();;
        return GetAccessors()->getPathShapeAccessor()->offset(self, (const Ark_Position*)&offset_value);
}
KOALA_INTEROP_DIRECT_3(PathShape_offset, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_fill(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getPathShapeAccessor()->fill(self, (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_3(PathShape_fill, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_position(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();;
        return GetAccessors()->getPathShapeAccessor()->position(self, (const Ark_Position*)&position_value);
}
KOALA_INTEROP_DIRECT_3(PathShape_position, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PathShape_commands(Ark_NativePointer thisPtr, const KStringPtr& commands) {
        Ark_PathShape self = reinterpret_cast<Ark_PathShape>(thisPtr);
        return GetAccessors()->getPathShapeAccessor()->commands(self, (const Ark_String*) (&commands));
}
KOALA_INTEROP_2(PathShape_commands, Ark_NativePointer, Ark_NativePointer, KStringPtr)
void impl_GlobalScope_ohos_font_registerFont(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_FontOptions options_value = thisDeserializer.readFontOptions();;
        GetAccessors()->getGlobalScope_ohos_fontAccessor()->registerFont((const Ark_FontOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_ohos_font_registerFont, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_ohos_font_getSystemFontList() {
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_fontAccessor()->getSystemFontList();
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_0(GlobalScope_ohos_font_getSystemFontList, KInteropReturnBuffer)
KInteropReturnBuffer impl_GlobalScope_ohos_font_getFontByName(const KStringPtr& fontName) {
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_fontAccessor()->getFontByName((const Ark_String*) (&fontName));
        Serializer _retSerializer {};
        _retSerializer.writeFontInfo(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_ohos_font_getFontByName, KInteropReturnBuffer, KStringPtr)
Ark_Number impl_GlobalScope_ohos_measure_utils_measureText(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_MeasureOptions options_value = thisDeserializer.readMeasureOptions();;
        return GetAccessors()->getGlobalScope_ohos_measure_utilsAccessor()->measureText((const Ark_MeasureOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(GlobalScope_ohos_measure_utils_measureText, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_ohos_measure_utils_measureTextSize(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_MeasureOptions options_value = thisDeserializer.readMeasureOptions();;
        const auto &retValue = GetAccessors()->getGlobalScope_ohos_measure_utilsAccessor()->measureTextSize((const Ark_MeasureOptions*)&options_value);
        Serializer _retSerializer {};
        _retSerializer.writeSizeOptions(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(GlobalScope_ohos_measure_utils_measureTextSize, KInteropReturnBuffer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SymbolEffect_ctor() {
        return GetAccessors()->getSymbolEffectAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SymbolEffect_ctor, Ark_NativePointer)
Ark_NativePointer impl_SymbolEffect_getFinalizer() {
        return GetAccessors()->getSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SymbolEffect_getFinalizer, Ark_NativePointer)
void impl_SymbolEffect_dummyForAccessorGenerate(Ark_NativePointer thisPtr) {
        Ark_SymbolEffect self = reinterpret_cast<Ark_SymbolEffect>(thisPtr);
        GetAccessors()->getSymbolEffectAccessor()->dummyForAccessorGenerate(self);
}
KOALA_INTEROP_DIRECT_V1(SymbolEffect_dummyForAccessorGenerate, Ark_NativePointer)
Ark_NativePointer impl_ScaleSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scope_value_buf_runtimeType))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (direction_value_buf_runtimeType))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        return GetAccessors()->getScaleSymbolEffectAccessor()->ctor((const Opt_EffectScope*)&scope_value, (const Opt_EffectDirection*)&direction_value);
}
KOALA_INTEROP_DIRECT_2(ScaleSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScaleSymbolEffect_getFinalizer() {
        return GetAccessors()->getScaleSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScaleSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ScaleSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getScaleSymbolEffectAccessor()->getScope(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ScaleSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_ScaleSymbolEffect_setScope(Ark_NativePointer thisPtr, Ark_Int32 scope) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        GetAccessors()->getScaleSymbolEffectAccessor()->setScope(self, static_cast<Ark_EffectScope>(scope));
}
KOALA_INTEROP_DIRECT_V2(ScaleSymbolEffect_setScope, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_ScaleSymbolEffect_getDirection(Ark_NativePointer thisPtr) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getScaleSymbolEffectAccessor()->getDirection(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectDirection>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ScaleSymbolEffect_getDirection, KInteropReturnBuffer, Ark_NativePointer)
void impl_ScaleSymbolEffect_setDirection(Ark_NativePointer thisPtr, Ark_Int32 direction) {
        Ark_ScaleSymbolEffect self = reinterpret_cast<Ark_ScaleSymbolEffect>(thisPtr);
        GetAccessors()->getScaleSymbolEffectAccessor()->setDirection(self, static_cast<Ark_EffectDirection>(direction));
}
KOALA_INTEROP_DIRECT_V2(ScaleSymbolEffect_setDirection, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_ReplaceSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scope_value_buf_runtimeType))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getReplaceSymbolEffectAccessor()->ctor((const Opt_EffectScope*)&scope_value);
}
KOALA_INTEROP_DIRECT_2(ReplaceSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ReplaceSymbolEffect_getFinalizer() {
        return GetAccessors()->getReplaceSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ReplaceSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ReplaceSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_ReplaceSymbolEffect self = reinterpret_cast<Ark_ReplaceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getReplaceSymbolEffectAccessor()->getScope(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ReplaceSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_ReplaceSymbolEffect_setScope(Ark_NativePointer thisPtr, Ark_Int32 scope) {
        Ark_ReplaceSymbolEffect self = reinterpret_cast<Ark_ReplaceSymbolEffect>(thisPtr);
        GetAccessors()->getReplaceSymbolEffectAccessor()->setScope(self, static_cast<Ark_EffectScope>(scope));
}
KOALA_INTEROP_DIRECT_V2(ReplaceSymbolEffect_setScope, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_FrameNode_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        return GetAccessors()->getFrameNodeAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_2(FrameNode_ctor, Ark_NativePointer, KSerializerBuffer, Ark_Int32)
Ark_NativePointer impl_FrameNode_getFinalizer() {
        return GetAccessors()->getFrameNodeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FrameNode_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_FrameNode_isModifiable(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->isModifiable(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_isModifiable, Ark_Boolean, Ark_NativePointer)
void impl_FrameNode_appendChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->appendChild(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(FrameNode_appendChild, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_insertChildAfter(Ark_NativePointer thisPtr, Ark_NativePointer child, Ark_NativePointer sibling) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->insertChildAfter(self, static_cast<Ark_FrameNode>(child), static_cast<Ark_FrameNode>(sibling));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_insertChildAfter, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_removeChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->removeChild(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_V2(FrameNode_removeChild, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_clearChildren(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->clearChildren(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_clearChildren, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getChild(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber expandMode) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getChild(
            self, (const Ark_Number*)(&index), (const Ark_Number*)(&expandMode));
}
KOALA_INTEROP_DIRECT_3(FrameNode_getChild, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_FrameNode_getFirstChild(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getFirstChild(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFirstChild, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getNextSibling(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getNextSibling(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getNextSibling, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getPreviousSibling(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getPreviousSibling(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getPreviousSibling, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getParent(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getParent(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getParent, Ark_NativePointer, Ark_NativePointer)
Ark_Int32 impl_FrameNode_getChildrenCount(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getChildrenCount(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getChildrenCount, Ark_Int32, Ark_NativePointer)
void impl_FrameNode_dispose(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        GetAccessors()->getFrameNodeAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_dispose, Ark_NativePointer)
Ark_Number impl_FrameNode_getOpacity(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getOpacity(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getOpacity, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_FrameNode_getPositionToWindowWithTransform(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        const auto &retValue = GetAccessors()->getFrameNodeAccessor()->getPositionToWindowWithTransform(self);
        Serializer _retSerializer {};
        _retSerializer.writePosition(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FrameNode_getPositionToWindowWithTransform, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getFrameNodeByKey(const KStringPtr& name) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodeByKey((const Ark_String*) (&name));
}
KOALA_INTEROP_1(FrameNode_getFrameNodeByKey, Ark_NativePointer, KStringPtr)
Ark_Number impl_FrameNode_getIdByFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node){
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    return GetAccessors()->getFrameNodeAccessor()->getIdByFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_2(FrameNode_getIdByFrameNode, KInteropNumber, Ark_NativePointer, Ark_NativePointer)
void impl_FrameNode_moveTo(Ark_NativePointer thisPtr, Ark_NativePointer targetParent, KInteropNumber index){
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    GetAccessors()->getFrameNodeAccessor()->moveTo(
        self, static_cast<Ark_FrameNode>(targetParent), (const Ark_Number*)(&index));
}
KOALA_INTEROP_DIRECT_V3(FrameNode_moveTo, Ark_NativePointer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_FrameNode_getFirstChildIndexWithoutExpand(Ark_NativePointer thisPtr){
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    return GetAccessors()->getFrameNodeAccessor()->getFirstChildIndexWithoutExpand(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFirstChildIndexWithoutExpand, KInteropNumber, Ark_NativePointer)
Ark_Number impl_FrameNode_getLastChildIndexWithoutExpand(Ark_NativePointer thisPtr){
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    return GetAccessors()->getFrameNodeAccessor()->getLastChildIndexWithoutExpand(self);
}
KOALA_INTEROP_DIRECT_1(FrameNode_getLastChildIndexWithoutExpand, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getAttachedFrameNodeById(const KStringPtr& id) {
    return GetAccessors()->getFrameNodeAccessor()->getAttachedFrameNodeById((const Ark_String*) (&id));
}
KOALA_INTEROP_1(FrameNode_getAttachedFrameNodeById, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_FrameNode_getFrameNodeById(KInteropNumber id) {
    return GetAccessors()->getFrameNodeAccessor()->getFrameNodeById((const Ark_Number*) (&id));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodeById, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_FrameNode_getFrameNodeByUniqueId(KInteropNumber id) {
    return GetAccessors()->getFrameNodeAccessor()->getFrameNodeByUniqueId((const Ark_Number*) (&id));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodeByUniqueId, Ark_NativePointer, KInteropNumber)
void impl_FrameNode_reuse(Ark_NativePointer thisPtr) {
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    GetAccessors()->getFrameNodeAccessor()->reuse(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_reuse, Ark_NativePointer)
void impl_FrameNode_recycle(Ark_NativePointer thisPtr) {
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    GetAccessors()->getFrameNodeAccessor()->recycle(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_recycle, Ark_NativePointer)
Ark_NativePointer impl_LengthMetrics_ctor() {
        return GetAccessors()->getLengthMetricsAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(LengthMetrics_ctor, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getRenderNode(Ark_NativePointer thisPtr) {
    Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
    const auto &retValue = GetAccessors()->getFrameNodeAccessor()->getRenderNode(self);
    return retValue;
}
KOALA_INTEROP_DIRECT_1(FrameNode_getRenderNode, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_getFrameNodePtr(Ark_NativePointer node) {
        return GetAccessors()->getFrameNodeAccessor()->getFrameNodePtr(static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_1(FrameNode_getFrameNodePtr, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_FrameNode_createTypedFrameNode(const KStringPtr& type) {
        return GetAccessors()->getFrameNodeAccessor()->createTypedFrameNode((const Ark_String*) (&type));
}
KOALA_INTEROP_1(FrameNode_createTypedFrameNode, Ark_NativePointer, KStringPtr)
Ark_String impl_FrameNode_getNodeType(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->getNodeType(self);
}
KOALA_INTEROP_1(FrameNode_getNodeType, KStringPtr, Ark_NativePointer)
void impl_FrameNode_applyAttributesFinish(Ark_NativePointer thisPtr) {
        Ark_FrameNode self = reinterpret_cast<Ark_FrameNode>(thisPtr);
        return GetAccessors()->getFrameNodeAccessor()->applyAttributesFinish(self);
}
KOALA_INTEROP_DIRECT_V1(FrameNode_applyAttributesFinish, Ark_NativePointer)
Ark_NativePointer impl_LengthMetrics_getFinalizer() {
        return GetAccessors()->getLengthMetricsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LengthMetrics_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LengthMetrics_px(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_px, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_vp(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->vp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_vp, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_fp(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->fp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_fp, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_percent(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->percent((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_percent, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_lpx(KInteropNumber value) {
        return GetAccessors()->getLengthMetricsAccessor()->lpx((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_lpx, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_LengthMetrics_resource(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = thisDeserializer.readResource();;
        return GetAccessors()->getLengthMetricsAccessor()->resource((const Ark_Resource*)&value_value);
}
KOALA_INTEROP_DIRECT_2(LengthMetrics_resource, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_LengthMetrics_getUnit(Ark_NativePointer thisPtr) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        return GetAccessors()->getLengthMetricsAccessor()->getUnit(self);
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_getUnit, Ark_Int32, Ark_NativePointer)
void impl_LengthMetrics_setUnit(Ark_NativePointer thisPtr, Ark_Int32 unit) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        GetAccessors()->getLengthMetricsAccessor()->setUnit(self, static_cast<Ark_LengthUnit>(unit));
}
KOALA_INTEROP_DIRECT_V2(LengthMetrics_setUnit, Ark_NativePointer, Ark_Int32)
Ark_Number impl_LengthMetrics_getValue(Ark_NativePointer thisPtr) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        return GetAccessors()->getLengthMetricsAccessor()->getValue(self);
}
KOALA_INTEROP_DIRECT_1(LengthMetrics_getValue, KInteropNumber, Ark_NativePointer)
void impl_LengthMetrics_setValue(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_LengthMetrics self = reinterpret_cast<Ark_LengthMetrics>(thisPtr);
        GetAccessors()->getLengthMetricsAccessor()->setValue(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(LengthMetrics_setValue, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ShapeMask_ctor() {
        return GetAccessors()->getShapeMaskAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ShapeMask_ctor, Ark_NativePointer)
Ark_NativePointer impl_ShapeMask_getFinalizer() {
        return GetAccessors()->getShapeMaskAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ShapeMask_getFinalizer, Ark_NativePointer)
void impl_ShapeMask_setRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Rect rect_value = thisDeserializer.readRect();;
        GetAccessors()->getShapeMaskAccessor()->setRectShape(self, (const Ark_Rect*)&rect_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setRoundRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RoundRect roundRect_value = thisDeserializer.readRoundRect();;
        GetAccessors()->getShapeMaskAccessor()->setRoundRectShape(self, (const Ark_RoundRect*)&roundRect_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setRoundRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setCircleShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Circle circle_value = thisDeserializer.readCircle();;
        GetAccessors()->getShapeMaskAccessor()->setCircleShape(self, (const Ark_Circle*)&circle_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setCircleShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setOvalShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Rect oval_value = thisDeserializer.readRect();;
        GetAccessors()->getShapeMaskAccessor()->setOvalShape(self, (const Ark_Rect*)&oval_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setOvalShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeMask_setCommandPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_CommandPath path_value = thisDeserializer.readCommandPath();;
        GetAccessors()->getShapeMaskAccessor()->setCommandPath(self, (const Ark_CommandPath*)&path_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeMask_setCommandPath, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_ShapeMask_getFillColor(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getFillColor(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getFillColor, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setFillColor(Ark_NativePointer thisPtr, KInteropNumber fillColor) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setFillColor(self, (const Ark_Number*) (&fillColor));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setFillColor, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ShapeMask_getStrokeColor(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getStrokeColor(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getStrokeColor, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setStrokeColor(Ark_NativePointer thisPtr, KInteropNumber strokeColor) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setStrokeColor(self, (const Ark_Number*) (&strokeColor));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setStrokeColor, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ShapeMask_getStrokeWidth(Ark_NativePointer thisPtr) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        return GetAccessors()->getShapeMaskAccessor()->getStrokeWidth(self);
}
KOALA_INTEROP_DIRECT_1(ShapeMask_getStrokeWidth, KInteropNumber, Ark_NativePointer)
void impl_ShapeMask_setStrokeWidth(Ark_NativePointer thisPtr, KInteropNumber strokeWidth) {
        Ark_ShapeMask self = reinterpret_cast<Ark_ShapeMask>(thisPtr);
        GetAccessors()->getShapeMaskAccessor()->setStrokeWidth(self, (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V2(ShapeMask_setStrokeWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ShapeClip_ctor() {
        return GetAccessors()->getShapeClipAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ShapeClip_ctor, Ark_NativePointer)
Ark_NativePointer impl_ShapeClip_getFinalizer() {
        return GetAccessors()->getShapeClipAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ShapeClip_getFinalizer, Ark_NativePointer)
void impl_ShapeClip_setRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Rect rect_value = thisDeserializer.readRect();;
        GetAccessors()->getShapeClipAccessor()->setRectShape(self, (const Ark_Rect*)&rect_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setRoundRectShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RoundRect roundRect_value = thisDeserializer.readRoundRect();;
        GetAccessors()->getShapeClipAccessor()->setRoundRectShape(self, (const Ark_RoundRect*)&roundRect_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setRoundRectShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setCircleShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Circle circle_value = thisDeserializer.readCircle();;
        GetAccessors()->getShapeClipAccessor()->setCircleShape(self, (const Ark_Circle*)&circle_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setCircleShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setOvalShape(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Rect oval_value = thisDeserializer.readRect();;
        GetAccessors()->getShapeClipAccessor()->setOvalShape(self, (const Ark_Rect*)&oval_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setOvalShape, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ShapeClip_setCommandPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ShapeClip self = reinterpret_cast<Ark_ShapeClip>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_CommandPath path_value = thisDeserializer.readCommandPath();;
        GetAccessors()->getShapeClipAccessor()->setCommandPath(self, (const Ark_CommandPath*)&path_value);
}
KOALA_INTEROP_DIRECT_V3(ShapeClip_setCommandPath, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix4Transit_ctor() {
        return GetAccessors()->getMatrix4TransitAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Matrix4Transit_ctor, Ark_NativePointer)
Ark_NativePointer impl_Matrix4Transit_getFinalizer() {
        return GetAccessors()->getMatrix4TransitAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Matrix4Transit_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Matrix4Transit_copy(Ark_NativePointer thisPtr) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4TransitAccessor()->copy(self);
}
KOALA_INTEROP_DIRECT_1(Matrix4Transit_copy, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix4Transit_invert(Ark_NativePointer thisPtr) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4TransitAccessor()->invert(self);
}
KOALA_INTEROP_DIRECT_1(Matrix4Transit_invert, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix4Transit_combine(Ark_NativePointer thisPtr, Ark_NativePointer options) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4TransitAccessor()->combine(self, static_cast<Ark_Matrix4Transit>(options));
}
KOALA_INTEROP_DIRECT_2(Matrix4Transit_combine, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix4Transit_translate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TranslateOption options_value = thisDeserializer.readTranslateOption();;
        return GetAccessors()->getMatrix4TransitAccessor()->translate(self, (const Ark_TranslateOption*)&options_value);
}
KOALA_INTEROP_DIRECT_3(Matrix4Transit_translate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix4Transit_scale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScaleOption options_value = thisDeserializer.readScaleOption();;
        return GetAccessors()->getMatrix4TransitAccessor()->scale(self, (const Ark_ScaleOption*)&options_value);
}
KOALA_INTEROP_DIRECT_3(Matrix4Transit_scale, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix4Transit_skew(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        return GetAccessors()->getMatrix4TransitAccessor()->skew(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_3(Matrix4Transit_skew, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_Matrix4Transit_rotate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RotateOption options_value = thisDeserializer.readRotateOption();;
        return GetAccessors()->getMatrix4TransitAccessor()->rotate(self, (const Ark_RotateOption*)&options_value);
}
KOALA_INTEROP_DIRECT_3(Matrix4Transit_rotate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix4Transit_transformPoint(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Tuple_Number_Number options_value_buf = {};
        options_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        options_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_Tuple_Number_Number options_value = options_value_buf;;
        const auto &retValue = GetAccessors()->getMatrix4TransitAccessor()->transformPoint(self, (const Ark_Tuple_Number_Number*)&options_value);
        Serializer _retSerializer {};
        const auto retValue_0 = retValue.value0;
        _retSerializer.writeNumber(retValue_0);
        const auto retValue_1 = retValue.value1;
        _retSerializer.writeNumber(retValue_1);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(Matrix4Transit_transformPoint, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix4Transit_setPolyToPoly(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix4Transit self = reinterpret_cast<Ark_Matrix4Transit>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_PolyToPolyOptions options_value = thisDeserializer.readPolyToPolyOptions();;
        return GetAccessors()->getMatrix4TransitAccessor()->setPolyToPoly(self, (const Ark_PolyToPolyOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(Matrix4Transit_setPolyToPoly, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NodeContent_ctor() {
        return GetAccessors()->getNodeContentAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(NodeContent_ctor, Ark_NativePointer)
Ark_NativePointer impl_NodeContent_getFinalizer() {
        return GetAccessors()->getNodeContentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NodeContent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_NodeContent_addFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_NodeContent self = reinterpret_cast<Ark_NodeContent>(thisPtr);
        return GetAccessors()->getNodeContentAccessor()->addFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_2(NodeContent_addFrameNode, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_NodeContent_removeFrameNode(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_NodeContent self = reinterpret_cast<Ark_NodeContent>(thisPtr);
        return GetAccessors()->getNodeContentAccessor()->removeFrameNode(self, static_cast<Ark_FrameNode>(node));
}
KOALA_INTEROP_DIRECT_2(NodeContent_removeFrameNode, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_PixelMap_ctor() {
        return GetAccessors()->getPixelMapAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PixelMap_ctor, Ark_NativePointer)
Ark_NativePointer impl_PixelMap_getFinalizer() {
        return GetAccessors()->getPixelMapAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PixelMap_getFinalizer, Ark_NativePointer)
void impl_PixelMap_readPixelsToBufferSync(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PixelMap self = reinterpret_cast<Ark_PixelMap>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Buffer dst_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        GetAccessors()->getPixelMapAccessor()->readPixelsToBufferSync(self, (const Ark_Buffer*)&dst_value);
}
KOALA_INTEROP_DIRECT_V3(PixelMap_readPixelsToBufferSync, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_PixelMap_writeBufferToPixels(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PixelMap self = reinterpret_cast<Ark_PixelMap>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Buffer src_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        GetAccessors()->getPixelMapAccessor()->writeBufferToPixels(self, (const Ark_Buffer*)&src_value);
}
KOALA_INTEROP_DIRECT_V3(PixelMap_writeBufferToPixels, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_PixelMap_getIsEditable(Ark_NativePointer thisPtr) {
        Ark_PixelMap self = reinterpret_cast<Ark_PixelMap>(thisPtr);
        return GetAccessors()->getPixelMapAccessor()->getIsEditable(self);
}
KOALA_INTEROP_DIRECT_1(PixelMap_getIsEditable, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_PixelMap_getIsStrideAlignment(Ark_NativePointer thisPtr) {
        Ark_PixelMap self = reinterpret_cast<Ark_PixelMap>(thisPtr);
        return GetAccessors()->getPixelMapAccessor()->getIsStrideAlignment(self);
}
KOALA_INTEROP_DIRECT_1(PixelMap_getIsStrideAlignment, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_RenderNode_ctor(Ark_Int32 nodeId, KSerializerBuffer thisArray, int32_t thisLength)
{
    Deserializer thisDeserializer(thisArray, thisLength);
    DrawCallbackFunc callback_value = { thisDeserializer.readCallbackResource(),
        reinterpret_cast<void (*)(const Ark_Int32 resourceId, const Ark_DrawContext context)>(
            thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_DrawCallback)))),
        reinterpret_cast<void (*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_DrawContext context)>(
            thisDeserializer.readPointerOrDefault(
                reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_DrawCallback)))) };
    return GetAccessors()->getRenderNodeAccessor()->ctor(nodeId, (const DrawCallbackFunc*)&callback_value);
}
KOALA_INTEROP_DIRECT_3(RenderNode_ctor, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderNode_getFinalizer() {
        return GetAccessors()->getRenderNodeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RenderNode_getFinalizer, Ark_NativePointer)
void impl_RenderNode_appendChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->appendChild(self, static_cast<Ark_RenderNode>(node));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_appendChild, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_insertChildAfter(Ark_NativePointer thisPtr, Ark_NativePointer child, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 sibling_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_RenderNode_Undefined sibling_value_buf = {};
        sibling_value_buf.selector = sibling_value_buf_selector;
        if (sibling_value_buf_selector == 0) {
            sibling_value_buf.selector = 0;
            sibling_value_buf.value0 = static_cast<Ark_RenderNode>(thisDeserializer.readRenderNode());
        }
        else if (sibling_value_buf_selector == 1) {
            sibling_value_buf.selector = 1;
            sibling_value_buf.value1 = Ark_Undefined();
        }
        else {
            INTEROP_FATAL("One of the branches for sibling_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_RenderNode_Undefined sibling_value = static_cast<Ark_Union_RenderNode_Undefined>(sibling_value_buf);;
        GetAccessors()->getRenderNodeAccessor()->insertChildAfter(self, static_cast<Ark_RenderNode>(child), (const Ark_Union_RenderNode_Undefined*)&sibling_value);
}
KOALA_INTEROP_DIRECT_V4(RenderNode_insertChildAfter, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_removeChild(Ark_NativePointer thisPtr, Ark_NativePointer node) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->removeChild(self, static_cast<Ark_RenderNode>(node));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_removeChild, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_clearChildren(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->clearChildren(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_clearChildren, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getChild(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getChild(self, (const Ark_Number*) (&index));
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeRenderNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(RenderNode_getChild, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getFirstChild(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getFirstChild(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeRenderNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getFirstChild, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getNextSibling(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getNextSibling(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeRenderNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getNextSibling, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderNode_getPreviousSibling(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPreviousSibling(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeRenderNode(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPreviousSibling, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_draw(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DrawContext context_value = thisDeserializer.readDrawContext();;
        GetAccessors()->getRenderNodeAccessor()->draw(self, (const Ark_DrawContext*)&context_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_draw, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_invalidate(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_invalidate, Ark_NativePointer)
void impl_RenderNode_dispose(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->dispose(self);
}
KOALA_INTEROP_DIRECT_V1(RenderNode_dispose, Ark_NativePointer)
void impl_RenderNode_setRectMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fillColor, KInteropNumber strokeColor, KInteropNumber strokeWidth) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Rect rect_value = thisDeserializer.readRect();;
    GetAccessors()->getRenderNodeAccessor()->setRectMask(self, (const Ark_Rect*)&rect_value, (const Ark_Number*) (&fillColor), (const Ark_Number*) (&strokeColor), (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V6(RenderNode_setRectMask, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_RenderNode_setCircleMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fillColor, KInteropNumber strokeColor, KInteropNumber strokeWidth) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Circle circle_value = thisDeserializer.readCircle();;
    GetAccessors()->getRenderNodeAccessor()->setCircleMask(self, (const Ark_Circle*)&circle_value, (const Ark_Number*) (&fillColor), (const Ark_Number*) (&strokeColor), (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V6(RenderNode_setCircleMask, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_RenderNode_setRoundRectMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fillColor, KInteropNumber strokeColor, KInteropNumber strokeWidth) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_RoundRect roundRect_value = thisDeserializer.readRoundRect();;
    GetAccessors()->getRenderNodeAccessor()->setRoundRectMask(self, (const Ark_RoundRect*)&roundRect_value, (const Ark_Number*) (&fillColor), (const Ark_Number*) (&strokeColor), (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V6(RenderNode_setRoundRectMask, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_RenderNode_setOvalMask(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fillColor, KInteropNumber strokeColor, KInteropNumber strokeWidth) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Rect rect_value = thisDeserializer.readRect();;
    GetAccessors()->getRenderNodeAccessor()->setOvalMask(self, (const Ark_Rect*)&rect_value, (const Ark_Number*) (&fillColor), (const Ark_Number*) (&strokeColor), (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V6(RenderNode_setOvalMask, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_RenderNode_setPath(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber fillColor, KInteropNumber strokeColor, KInteropNumber strokeWidth) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_CommandPath path_value = thisDeserializer.readCommandPath();;
    GetAccessors()->getRenderNodeAccessor()->setPath(self, (const Ark_CommandPath*)&path_value, (const Ark_Number*) (&fillColor), (const Ark_Number*) (&strokeColor), (const Ark_Number*) (&strokeWidth));
}
KOALA_INTEROP_DIRECT_V6(RenderNode_setPath, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_RenderNode_setRectClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Rect rect_value = thisDeserializer.readRect();;
    GetAccessors()->getRenderNodeAccessor()->setRectClip(self, (const Ark_Rect*)&rect_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setRectClip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_setCircleClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Circle circle_value = thisDeserializer.readCircle();;
    GetAccessors()->getRenderNodeAccessor()->setCircleClip(self, (const Ark_Circle*)&circle_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setCircleClip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_setRoundRectClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_RoundRect roundRect_value = thisDeserializer.readRoundRect();;
    GetAccessors()->getRenderNodeAccessor()->setRoundRectClip(self, (const Ark_RoundRect*)&roundRect_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setRoundRectClip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_setOvalClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_Rect rect_value = thisDeserializer.readRect();;
    GetAccessors()->getRenderNodeAccessor()->setOvalClip(self, (const Ark_Rect*)&rect_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setOvalClip, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RenderNode_setPathClip(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_CommandPath path_value = thisDeserializer.readCommandPath();;
    GetAccessors()->getRenderNodeAccessor()->setPathClip(self, (const Ark_CommandPath*)&path_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setPathClip, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RenderNode_getBackgroundColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getBackgroundColor(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getBackgroundColor, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setBackgroundColor(Ark_NativePointer thisPtr, KInteropNumber backgroundColor) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setBackgroundColor(self, (const Ark_Number*) (&backgroundColor));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setBackgroundColor, Ark_NativePointer, KInteropNumber)
Ark_Boolean impl_RenderNode_getClipToFrame(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getClipToFrame(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getClipToFrame, Ark_Boolean, Ark_NativePointer)
void impl_RenderNode_setClipToFrame(Ark_NativePointer thisPtr, Ark_Boolean clipToFrame) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setClipToFrame(self, clipToFrame);
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setClipToFrame, Ark_NativePointer, Ark_Boolean)
Ark_Number impl_RenderNode_getOpacity(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getOpacity(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getOpacity, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setOpacity(Ark_NativePointer thisPtr, KInteropNumber opacity) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setOpacity(self, (const Ark_Number*) (&opacity));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setOpacity, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getSize(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getSize(self);
        Serializer _retSerializer {};
        _retSerializer.writeSize(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getSize, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Size size_value = thisDeserializer.readSize();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setSize(self, (const Ark_Size*)&size_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setSize, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getPosition(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPosition(self);
        Serializer _retSerializer {};
        _retSerializer.writePosition(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPosition, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setPosition(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Position position_value = thisDeserializer.readPosition();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setPosition(self, (const Ark_Position*)&position_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setPosition, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getFrame(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getFrame(self);
        Serializer _retSerializer {};
        _retSerializer.writeFrame(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getFrame, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setFrame(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Frame frame_value = thisDeserializer.readFrame();;
        GetAccessors()->getRenderNodeAccessor()->setFrame(self, (const Ark_Frame*)&frame_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setFrame, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getPivot(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getPivot(self);
        Serializer _retSerializer {};
        _retSerializer.writeVector2(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getPivot, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setPivot(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Vector2 pivot_value = thisDeserializer.readVector2();;
        GetAccessors()->getRenderNodeAccessor()->setPivot(self, (const Ark_Vector2*)&pivot_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setPivot, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getScale(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getScale(self);
        Serializer _retSerializer {};
        _retSerializer.writeVector2(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getScale, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setScale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Vector2 scale_value = thisDeserializer.readVector2();;
        GetAccessors()->getRenderNodeAccessor()->setScale(self, (const Ark_Vector2*)&scale_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setScale, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getTranslation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getTranslation(self);
        Serializer _retSerializer {};
        _retSerializer.writeVector2(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getTranslation, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setTranslation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Vector2 translation_value = thisDeserializer.readVector2();;
        GetAccessors()->getRenderNodeAccessor()->setTranslation(self, (const Ark_Vector2*)&translation_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setTranslation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getRotation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getRotation(self);
        Serializer _retSerializer {};
        _retSerializer.writeVector3(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getRotation, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setRotation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Vector3 rotation_value = thisDeserializer.readVector3();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setRotation(self, (const Ark_Vector3*)&rotation_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setRotation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getTransform(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getTransform(self);
        Serializer _retSerializer {};
        const auto retValue_0 = retValue.value0;
        _retSerializer.writeNumber(retValue_0);
        const auto retValue_1 = retValue.value1;
        _retSerializer.writeNumber(retValue_1);
        const auto retValue_2 = retValue.value2;
        _retSerializer.writeNumber(retValue_2);
        const auto retValue_3 = retValue.value3;
        _retSerializer.writeNumber(retValue_3);
        const auto retValue_4 = retValue.value4;
        _retSerializer.writeNumber(retValue_4);
        const auto retValue_5 = retValue.value5;
        _retSerializer.writeNumber(retValue_5);
        const auto retValue_6 = retValue.value6;
        _retSerializer.writeNumber(retValue_6);
        const auto retValue_7 = retValue.value7;
        _retSerializer.writeNumber(retValue_7);
        const auto retValue_8 = retValue.value8;
        _retSerializer.writeNumber(retValue_8);
        const auto retValue_9 = retValue.value9;
        _retSerializer.writeNumber(retValue_9);
        const auto retValue_10 = retValue.value10;
        _retSerializer.writeNumber(retValue_10);
        const auto retValue_11 = retValue.value11;
        _retSerializer.writeNumber(retValue_11);
        const auto retValue_12 = retValue.value12;
        _retSerializer.writeNumber(retValue_12);
        const auto retValue_13 = retValue.value13;
        _retSerializer.writeNumber(retValue_13);
        const auto retValue_14 = retValue.value14;
        _retSerializer.writeNumber(retValue_14);
        const auto retValue_15 = retValue.value15;
        _retSerializer.writeNumber(retValue_15);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getTransform, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setTransform(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Matrix4 transform_value_buf = {};
        transform_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value2 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value3 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value4 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value5 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value6 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value7 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value8 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value9 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value10 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value11 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value12 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value13 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value14 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        transform_value_buf.value15 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_Matrix4 transform_value = transform_value_buf;;
        GetAccessors()->getRenderNodeAccessor()->setTransform(self, (const Ark_Matrix4*)&transform_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setTransform, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RenderNode_getShadowColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowColor(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowColor, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowColor(Ark_NativePointer thisPtr, KInteropNumber shadowColor) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowColor(self, (const Ark_Number*) (&shadowColor));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowColor, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getShadowOffset(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getShadowOffset(self);
        Serializer _retSerializer {};
        _retSerializer.writeVector2(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getShadowOffset, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setShadowOffset(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Vector2 shadowOffset_value = thisDeserializer.readVector2();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setShadowOffset(self, (const Ark_Vector2*)&shadowOffset_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setShadowOffset, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_RenderNode_getLabel(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getLabel(self);
}
KOALA_INTEROP_1(RenderNode_getLabel, KStringPtr, Ark_NativePointer)
void impl_RenderNode_setLabel(Ark_NativePointer thisPtr, const KStringPtr& label) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setLabel(self, (const Ark_String*) (&label));
}
KOALA_INTEROP_V2(RenderNode_setLabel, Ark_NativePointer, KStringPtr)
Ark_Number impl_RenderNode_getShadowAlpha(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowAlpha(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowAlpha, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowAlpha(Ark_NativePointer thisPtr, KInteropNumber shadowAlpha) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowAlpha(self, (const Ark_Number*) (&shadowAlpha));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowAlpha, Ark_NativePointer, KInteropNumber)
Ark_Number impl_RenderNode_getShadowElevation(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowElevation(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowElevation, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowElevation(Ark_NativePointer thisPtr, KInteropNumber shadowElevation) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowElevation(self, (const Ark_Number*) (&shadowElevation));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowElevation, Ark_NativePointer, KInteropNumber)
Ark_Number impl_RenderNode_getShadowRadius(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShadowRadius(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShadowRadius, KInteropNumber, Ark_NativePointer)
void impl_RenderNode_setShadowRadius(Ark_NativePointer thisPtr, KInteropNumber shadowRadius) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShadowRadius(self, (const Ark_Number*) (&shadowRadius));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShadowRadius, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_RenderNode_getBorderStyle(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderStyle(self);
        Serializer _retSerializer {};
        _retSerializer.writeEdgeStyles(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_EdgeStyles borderStyle_value = thisDeserializer.readEdgeStyles();;
        GetAccessors()->getRenderNodeAccessor()->setBorderStyle(self, (const Ark_EdgeStyles*)&borderStyle_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderWidth(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderWidth(self);
        Serializer _retSerializer {};
        _retSerializer.writeEdgesNumber(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderWidth, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderWidth(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_EdgesNumber borderWidth_value = thisDeserializer.readEdgesNumber();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setBorderWidth(self, (const Ark_EdgesNumber*)&borderWidth_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderWidth, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderColor(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderColor(self);
        Serializer _retSerializer {};
        _retSerializer.writeEdgesNumber(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderColor, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_EdgesNumber borderColor_value = thisDeserializer.readEdgesNumber();;
        GetAccessors()->getRenderNodeAccessor()->setBorderColor(self, (const Ark_EdgesNumber*)&borderColor_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderColor, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RenderNode_getBorderRadius(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderNodeAccessor()->getBorderRadius(self);
        Serializer _retSerializer {};
        _retSerializer.writeBorderRadiuses_graphics(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderNode_getBorderRadius, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderNode_setBorderRadius(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_BorderRadiuses_graphics borderRadius_value = thisDeserializer.readBorderRadiuses_graphics();
        Ark_Int32 lengthMetrics_unit_value = thisDeserializer.readInt32();
        GetAccessors()->getRenderNodeAccessor()->setBorderRadius(self, (const Ark_BorderRadiuses_graphics*)&borderRadius_value, (const Ark_Int32)lengthMetrics_unit_value);
}
KOALA_INTEROP_DIRECT_V3(RenderNode_setBorderRadius, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderNode_getShapeMask(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShapeMask(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShapeMask, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_setShapeMask(Ark_NativePointer thisPtr, Ark_NativePointer shapeMask) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShapeMask(self, static_cast<Ark_ShapeMask>(shapeMask));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShapeMask, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RenderNode_getShapeClip(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getShapeClip(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getShapeClip, Ark_NativePointer, Ark_NativePointer)
void impl_RenderNode_setShapeClip(Ark_NativePointer thisPtr, Ark_NativePointer shapeClip) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setShapeClip(self, static_cast<Ark_ShapeClip>(shapeClip));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setShapeClip, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_RenderNode_getMarkNodeGroup(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getMarkNodeGroup(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getMarkNodeGroup, Ark_Boolean, Ark_NativePointer)
void impl_RenderNode_setMarkNodeGroup(Ark_NativePointer thisPtr, Ark_Boolean markNodeGroup) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setMarkNodeGroup(self, markNodeGroup);
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setMarkNodeGroup, Ark_NativePointer, Ark_Boolean)
Ark_Int32 impl_RenderNode_getLengthMetricsUnit(Ark_NativePointer thisPtr) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        return GetAccessors()->getRenderNodeAccessor()->getLengthMetricsUnit(self);
}
KOALA_INTEROP_DIRECT_1(RenderNode_getLengthMetricsUnit, Ark_Int32, Ark_NativePointer)
void impl_RenderNode_setLengthMetricsUnit(Ark_NativePointer thisPtr, Ark_Int32 lengthMetricsUnit) {
        Ark_RenderNode self = reinterpret_cast<Ark_RenderNode>(thisPtr);
        GetAccessors()->getRenderNodeAccessor()->setLengthMetricsUnit(self, static_cast<Ark_LengthMetricsUnit>(lengthMetricsUnit));
}
KOALA_INTEROP_DIRECT_V2(RenderNode_setLengthMetricsUnit, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_TabsOps_registerBarMode(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BarMode value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_BarMode>(thisDeserializer.readInt32());
        }
        Opt_BarMode value_value = value_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollableBarModeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readScrollableBarModeOptions();
        }
        Opt_ScrollableBarModeOptions options_value = options_value_buf;;
        return GetAccessors()->getTabsOpsAccessor()->registerBarMode(node, (const Opt_BarMode*)&value_value, (const Opt_ScrollableBarModeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(TabsOps_registerBarMode, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TabsOps_registerBarBackgroundBlurStyle(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto style_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BlurStyle style_value_buf = {};
        style_value_buf.tag = style_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (style_value_buf_runtimeType))
        {
            style_value_buf.value = static_cast<Ark_BlurStyle>(thisDeserializer.readInt32());
        }
        Opt_BlurStyle style_value = style_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BackgroundBlurStyleOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readBackgroundBlurStyleOptions();
        }
        Opt_BackgroundBlurStyleOptions options_value = options_value_buf;;
        return GetAccessors()->getTabsOpsAccessor()->registerBarBackgroundBlurStyle(node, (const Opt_BlurStyle*)&style_value, (const Opt_BackgroundBlurStyleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(TabsOps_registerBarBackgroundBlurStyle, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIContextImp_freezeUINode0(const KStringPtr& id, Ark_Boolean isFrozen) {
        GetAccessors()->getUIContextImpAccessor()->freezeUINode0((const Ark_String*) (&id), isFrozen);
}
KOALA_INTEROP_V2(UIContextImp_freezeUINode0, KStringPtr, Ark_Boolean)
void impl_UIContextImp_freezeUINode1(KInteropNumber id, Ark_Boolean isFrozen) {
        GetAccessors()->getUIContextImpAccessor()->freezeUINode1((const Ark_Number*) (&id), isFrozen);
}
KOALA_INTEROP_DIRECT_V2(UIContextImp_freezeUINode1, KInteropNumber, Ark_Boolean)
Ark_NativePointer impl_GridItemOps_registerSelectedCallback(Ark_NativePointer node, Ark_Boolean value, KSerializerBuffer thisArray, int32_t thisLength) {
    Deserializer thisDeserializer(thisArray, thisLength);
    SelectedCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SelectedCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean selected)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SelectedCallback))))};;
    return GetAccessors()->getGridItemOpsAccessor()->registerSelectedCallback(node, value, (const SelectedCallback*)&callback_value);
}
KOALA_INTEROP_DIRECT_4(GridItemOps_registerSelectedCallback, Ark_NativePointer, Ark_NativePointer, Ark_Boolean, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Filter_ctor() {
        return GetAccessors()->getFilterAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Filter_ctor, Ark_NativePointer)
Ark_NativePointer impl_Filter_getFinalizer() {
        return GetAccessors()->getFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Filter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Filter_pixelStretch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 tileMode) {
        Ark_Filter self = reinterpret_cast<Ark_Filter>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 stretchSizes_value_buf_length = thisDeserializer.readInt32();
        Array_Number stretchSizes_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(stretchSizes_value_buf)>::type,
        std::decay<decltype(*stretchSizes_value_buf.array)>::type>(&stretchSizes_value_buf, stretchSizes_value_buf_length);
        for (int stretchSizes_value_buf_i = 0; stretchSizes_value_buf_i < stretchSizes_value_buf_length; stretchSizes_value_buf_i++) {
            stretchSizes_value_buf.array[stretchSizes_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number stretchSizes_value = stretchSizes_value_buf;;
        return GetAccessors()->getFilterAccessor()->pixelStretch(self, (const Array_Number*)&stretchSizes_value, static_cast<Ark_TileMode>(tileMode));
}
KOALA_INTEROP_DIRECT_4(Filter_pixelStretch, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32)
Ark_NativePointer impl_Filter_blur(Ark_NativePointer thisPtr, KInteropNumber blurRadius) {
        Ark_Filter self = reinterpret_cast<Ark_Filter>(thisPtr);
        return GetAccessors()->getFilterAccessor()->blur(self, (const Ark_Number*) (&blurRadius));
}
KOALA_INTEROP_DIRECT_2(Filter_blur, Ark_NativePointer, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_Filter_waterRipple(Ark_NativePointer thisPtr, KInteropNumber progress, KInteropNumber waveCount, KInteropNumber x, KInteropNumber y, Ark_Int32 rippleMode) {
        Ark_Filter self = reinterpret_cast<Ark_Filter>(thisPtr);
        return GetAccessors()->getFilterAccessor()->waterRipple(self, (const Ark_Number*) (&progress), (const Ark_Number*) (&waveCount), (const Ark_Number*) (&x), (const Ark_Number*) (&y), static_cast<Ark_WaterRippleMode>(rippleMode));
}
KOALA_INTEROP_DIRECT_6(Filter_waterRipple, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_Filter_flyInFlyOutEffect(Ark_NativePointer thisPtr, KInteropNumber degree, Ark_Int32 flyMode) {
        Ark_Filter self = reinterpret_cast<Ark_Filter>(thisPtr);
        return GetAccessors()->getFilterAccessor()->flyInFlyOutEffect(self, (const Ark_Number*) (&degree), static_cast<Ark_FlyMode>(flyMode));
}
KOALA_INTEROP_DIRECT_3(Filter_flyInFlyOutEffect, Ark_NativePointer, Ark_NativePointer, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_Filter_distort(Ark_NativePointer thisPtr, KInteropNumber distortionK) {
        Ark_Filter self = reinterpret_cast<Ark_Filter>(thisPtr);
        return GetAccessors()->getFilterAccessor()->distort(self, (const Ark_Number*) (&distortionK));
}
KOALA_INTEROP_DIRECT_2(Filter_distort, Ark_NativePointer, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_VisualEffect_ctor() {
        return GetAccessors()->getVisualEffectAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(VisualEffect_ctor, Ark_NativePointer)
Ark_NativePointer impl_VisualEffect_getFinalizer() {
        return GetAccessors()->getVisualEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(VisualEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_VisualEffect_backgroundColorBlender(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_VisualEffect self = reinterpret_cast<Ark_VisualEffect>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_BrightnessBlender blender_value = thisDeserializer.readBrightnessBlender();;
        return GetAccessors()->getVisualEffectAccessor()->backgroundColorBlender(self, (const Ark_BrightnessBlender*)&blender_value);
}
KOALA_INTEROP_DIRECT_3(VisualEffect_backgroundColorBlender, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_setUpdateStackCallback(Ark_NativePointer peer, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        NavExtender_OnUpdateStack callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String name)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_NavExtender_OnUpdateStack)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String name)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_NavExtender_OnUpdateStack))))};;
        GetAccessors()->getNavExtenderAccessor()->setUpdateStackCallback(static_cast<Ark_NavPathStack>(peer), (const NavExtender_OnUpdateStack*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setUpdateStackCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_syncStack(Ark_NativePointer peer) {
        GetAccessors()->getNavExtenderAccessor()->syncStack(static_cast<Ark_NavPathStack>(peer));
}
KOALA_INTEROP_DIRECT_V1(NavExtender_syncStack, Ark_NativePointer)
Ark_Boolean impl_NavExtender_checkNeedCreate(Ark_NativePointer navigation, Ark_Int32 index) {
        return GetAccessors()->getNavExtenderAccessor()->checkNeedCreate(navigation, index);
}
KOALA_INTEROP_DIRECT_2(NavExtender_checkNeedCreate, Ark_Boolean, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_NavExtender_navigationCreate(Ark_Int32 peer, Ark_Int32 flag) {
        return GetAccessors()->getNavExtenderAccessor()->navigationCreate(peer, flag);
}
KOALA_INTEROP_DIRECT_2(NavExtender_navigationCreate, Ark_NativePointer, Ark_Int32, Ark_Int32)
void impl_NavExtender_setNavigationOptions(Ark_NativePointer navigation, Ark_NativePointer stack) {
        GetAccessors()->getNavExtenderAccessor()->setNavigationOptions(navigation, static_cast<Ark_NavPathStack>(stack));
}
KOALA_INTEROP_DIRECT_V2(NavExtender_setNavigationOptions, Ark_NativePointer, Ark_NativePointer)
void impl_NavExtender_setNavDestinationNode(Ark_NativePointer peer, Ark_Int32 index, Ark_NativePointer node) {
        GetAccessors()->getNavExtenderAccessor()->setNavDestinationNode(static_cast<Ark_NavPathStack>(peer), index, node);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setNavDestinationNode, Ark_NativePointer, Ark_Int32, Ark_NativePointer)
void impl_NavExtender_setNavigationMode(Ark_NativePointer navigation, Ark_Int32 mode) {
        GetAccessors()->getNavExtenderAccessor()->setNavigationMode(navigation, static_cast<Ark_NavigationMode>(mode));
}
KOALA_INTEROP_DIRECT_V2(NavExtender_setNavigationMode, Ark_NativePointer, Ark_Int32)
void impl_NavExtender_hideTitleBar(Ark_NativePointer navigation, Ark_Boolean isHide, Ark_Boolean isAnimated) {
        GetAccessors()->getNavExtenderAccessor()->hideTitleBar(navigation, isHide, isAnimated);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_hideTitleBar, Ark_NativePointer, Ark_Boolean, Ark_Boolean)
void impl_NavExtender_hideToolBar(Ark_NativePointer navigation, Ark_Boolean isHide, Ark_Boolean isAnimated) {
        GetAccessors()->getNavExtenderAccessor()->hideToolBar(navigation, isHide, isAnimated);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_hideToolBar, Ark_NativePointer, Ark_Boolean, Ark_Boolean)
void impl_NavExtender_hideNavBar(Ark_NativePointer navigation, Ark_Boolean hide) {
        GetAccessors()->getNavExtenderAccessor()->hideNavBar(navigation, hide);
}
KOALA_INTEROP_DIRECT_V2(NavExtender_hideNavBar, Ark_NativePointer, Ark_Boolean)
void impl_NavExtender_hideBackButton(Ark_NativePointer navigation, Ark_Boolean hide) {
        GetAccessors()->getNavExtenderAccessor()->hideBackButton(navigation, hide);
}
KOALA_INTEROP_DIRECT_V2(NavExtender_hideBackButton, Ark_NativePointer, Ark_Boolean)
void impl_NavExtender_setNavBarStateChange(Ark_NativePointer navigation, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Boolean_Void stateCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Boolean_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isVisible)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Boolean_Void))))};;
        GetAccessors()->getNavExtenderAccessor()->setNavBarStateChange(navigation, (const Callback_Boolean_Void*)&stateCallback_value);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setNavBarStateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_setTitleModeChange(Ark_NativePointer navigation, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_NavigationTitleMode_Void titleCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_NavigationTitleMode_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, Ark_NavigationTitleMode titleMode)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_NavigationTitleMode_Void))))};;
        GetAccessors()->getNavExtenderAccessor()->setTitleModeChange(navigation, (const Callback_NavigationTitleMode_Void*)&titleCallback_value);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setTitleModeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_setTitleMode(Ark_NativePointer navigation, Ark_Int32 titleMode) {
        GetAccessors()->getNavExtenderAccessor()->setTitleMode(navigation, static_cast<Ark_NavigationTitleMode>(titleMode));
}
KOALA_INTEROP_DIRECT_V2(NavExtender_setTitleMode, Ark_NativePointer, Ark_Int32)
void impl_NavExtender_title(Ark_NativePointer navigation, const KStringPtr& title, Ark_Boolean hasSubTitle) {
        GetAccessors()->getNavExtenderAccessor()->title(navigation, (const Ark_String*) (&title), hasSubTitle);
}
KOALA_INTEROP_V3(NavExtender_title, Ark_NativePointer, KStringPtr, Ark_Boolean)
void impl_NavExtender_subTitle(Ark_NativePointer navigation, const KStringPtr& subTitle) {
        GetAccessors()->getNavExtenderAccessor()->subTitle(navigation, (const Ark_String*) (&subTitle));
}
KOALA_INTEROP_V2(NavExtender_subTitle, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_SearchOps_registerSearchValueCallback(Ark_NativePointer node, const KStringPtr& value, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        SearchValueCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SearchValueCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SearchValueCallback))))};;
        return GetAccessors()->getSearchOpsAccessor()->registerSearchValueCallback(node, (const Ark_String*) (&value), (const SearchValueCallback*)&callback_value);
}
KOALA_INTEROP_4(SearchOps_registerSearchValueCallback, Ark_NativePointer, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavExtender_pushPath(Ark_NativePointer pathStack, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength)
{
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_NavigationOptions options_value = thisDeserializer.readNavigationOptions();
    GetAccessors()->getNavExtenderAccessor()->pushPath(static_cast<Ark_NavPathStack>(pathStack), static_cast<Ark_NavPathInfo>(info), (const Ark_NavigationOptions*)(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavExtender_pushPath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavExtender_replacePath(Ark_NativePointer pathStack, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength)
{
    Deserializer thisDeserializer(thisArray, thisLength);
    Ark_NavigationOptions options_value = thisDeserializer.readNavigationOptions();
    GetAccessors()->getNavExtenderAccessor()->replacePath(static_cast<Ark_NavPathStack>(pathStack), static_cast<Ark_NavPathInfo>(info), (const Ark_NavigationOptions*)(&options_value));
}
KOALA_INTEROP_DIRECT_V4(NavExtender_replacePath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_NavExtender_pop(Ark_NativePointer pathStack, Ark_Boolean isAnimated)
{
    return GetAccessors()->getNavExtenderAccessor()->pop(static_cast<Ark_NavPathStack>(pathStack), isAnimated);
}
KOALA_INTEROP_2(NavExtender_pop, KStringPtr, Ark_NativePointer, Ark_Boolean)
Ark_String impl_NavExtender_getIdByIndex(Ark_NativePointer pathStack, Ark_Int32 index) {
    return GetAccessors()->getNavExtenderAccessor()->getIdByIndex(static_cast<Ark_NavPathStack>(pathStack), index);
}
KOALA_INTEROP_2(NavExtender_getIdByIndex, KStringPtr, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_NavExtender_getIdByName(Ark_NativePointer pathStack, const KStringPtr& name) {
    const auto& retValue = GetAccessors()->getNavExtenderAccessor()->getIdByName(static_cast<Ark_NavPathStack>(pathStack), (const Ark_String*)(&name));
    Serializer _retSerializer {};
    _retSerializer.writeInt32(retValue.length);
    for (int i = 0; i < retValue.length; i++) {
        const Ark_String retValue_element = retValue.array[i];
        _retSerializer.writeString(retValue_element);
    }
    return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavExtender_getIdByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr);
void impl_NavExtender_setOnPopCallback(Ark_NativePointer pathStack, KSerializerBuffer thisArray, int32_t thisLength) {
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_String_Void callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
    GetAccessors()->getNavExtenderAccessor()->setOnPopCallback(static_cast<Ark_NavPathStack>(pathStack), (const Callback_String_Void*)&callback_value);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_setOnPopCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_NavExtender_getNavDestinationId(Ark_NativePointer info) {
    return GetAccessors()->getNavExtenderAccessor()->getNavDestinationId(static_cast<Ark_NavPathInfo>(info));
}
KOALA_INTEROP_1(NavExtender_getNavDestinationId, KStringPtr, Ark_NativePointer)
void impl_NavExtender_popToIndex(Ark_NativePointer pathStack, Ark_Int32 index, Ark_Boolean animated) {
    GetAccessors()->getNavExtenderAccessor()->popToIndex(static_cast<Ark_NavPathStack>(pathStack), index, animated);
}
KOALA_INTEROP_DIRECT_V3(NavExtender_popToIndex, Ark_NativePointer, Ark_Int32, Ark_Boolean)
Ark_Number impl_NavExtender_popToName(Ark_NativePointer pathStack, const KStringPtr& name, Ark_Boolean animated) {
    return GetAccessors()->getNavExtenderAccessor()->popToName(static_cast<Ark_NavPathStack>(pathStack), (const Ark_String*)(&name), animated);
}
KOALA_INTEROP_3(NavExtender_popToName, KInteropNumber, Ark_NativePointer, KStringPtr, Ark_Boolean)
Ark_NativePointer impl_StepperOps_registerStepperIndexCallback(Ark_NativePointer node, KInteropNumber value, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        StepperIndexCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Number stepperIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_StepperIndexCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Number stepperIndex)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_StepperIndexCallback))))};;
        return GetAccessors()->getStepperOpsAccessor()->registerStepperIndexCallback(node, (const Ark_Number*) (&value), (const StepperIndexCallback*)&callback_value);
}
KOALA_INTEROP_DIRECT_4(StepperOps_registerStepperIndexCallback, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_EventEmulator_emitClickEvent(Ark_NativePointer node, Ark_NativePointer event) {
        GetAccessors()->getEventEmulatorAccessor()->emitClickEvent(node, static_cast<Ark_ClickEvent>(event));
}
KOALA_INTEROP_DIRECT_V2(EventEmulator_emitClickEvent, Ark_NativePointer, Ark_NativePointer)
void impl_EventEmulator_emitTextInputEvent(Ark_NativePointer node, const KStringPtr& text) {
        GetAccessors()->getEventEmulatorAccessor()->emitTextInputEvent(node, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(EventEmulator_emitTextInputEvent, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_TextFieldOps_registerTextFieldValueCallback(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr value_value = static_cast<Ark_ResourceStr>(value_value_buf);;
        TextFieldValueCallback callback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_TextFieldValueCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ResourceStr value)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_TextFieldValueCallback))))};;
        return GetAccessors()->getTextFieldOpsAccessor()->registerTextFieldValueCallback(node, (const Ark_ResourceStr*)&value_value, (const TextFieldValueCallback*)&callback_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_registerTextFieldValueCallback, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetWidth(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLayoutPolicy();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetWidth(node, (const Opt_Union_Length_LayoutPolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetHeight(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_LayoutPolicy value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_LayoutPolicy value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLayoutPolicy();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_LayoutPolicy>(value_value_buf_);
        }
        Opt_Union_Length_LayoutPolicy value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetHeight(node, (const Opt_Union_Length_LayoutPolicy*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetHeight, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetPadding(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Padding value_value_buf__u = {};
                const auto value_value_buf__u_top_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_top_buf = {};
                value_value_buf__u_top_buf.tag = value_value_buf__u_top_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_top_buf_runtimeType))
                {
                    value_value_buf__u_top_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.top = value_value_buf__u_top_buf;
                const auto value_value_buf__u_right_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_right_buf = {};
                value_value_buf__u_right_buf.tag = value_value_buf__u_right_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_right_buf_runtimeType))
                {
                    value_value_buf__u_right_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.right = value_value_buf__u_right_buf;
                const auto value_value_buf__u_bottom_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_bottom_buf = {};
                value_value_buf__u_bottom_buf.tag = value_value_buf__u_bottom_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_bottom_buf_runtimeType))
                {
                    value_value_buf__u_bottom_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.bottom = value_value_buf__u_bottom_buf;
                const auto value_value_buf__u_left_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_left_buf = {};
                value_value_buf__u_left_buf.tag = value_value_buf__u_left_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_left_buf_runtimeType))
                {
                    value_value_buf__u_left_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.left = value_value_buf__u_left_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedPadding();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetPadding(node, (const Opt_Union_Padding_Length_LocalizedPadding*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetPadding, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetMargin(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Padding_Length_LocalizedPadding value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Padding_Length_LocalizedPadding value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Padding value_value_buf__u = {};
                const auto value_value_buf__u_top_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_top_buf = {};
                value_value_buf__u_top_buf.tag = value_value_buf__u_top_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_top_buf_runtimeType))
                {
                    value_value_buf__u_top_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.top = value_value_buf__u_top_buf;
                const auto value_value_buf__u_right_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_right_buf = {};
                value_value_buf__u_right_buf.tag = value_value_buf__u_right_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_right_buf_runtimeType))
                {
                    value_value_buf__u_right_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.right = value_value_buf__u_right_buf;
                const auto value_value_buf__u_bottom_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_bottom_buf = {};
                value_value_buf__u_bottom_buf.tag = value_value_buf__u_bottom_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_bottom_buf_runtimeType))
                {
                    value_value_buf__u_bottom_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.bottom = value_value_buf__u_bottom_buf;
                const auto value_value_buf__u_left_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Length value_value_buf__u_left_buf = {};
                value_value_buf__u_left_buf.tag = value_value_buf__u_left_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_left_buf_runtimeType))
                {
                    value_value_buf__u_left_buf.value = thisDeserializer.readLength();
                }
                value_value_buf__u.left = value_value_buf__u_left_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedPadding();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Padding_Length_LocalizedPadding>(value_value_buf_);
        }
        Opt_Union_Padding_Length_LocalizedPadding value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetMargin(node, (const Opt_Union_Padding_Length_LocalizedPadding*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetMargin, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorder(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_BorderOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readBorderOptions();
        }
        Opt_BorderOptions value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorder(node, (const Opt_BorderOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorder, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderWidth(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeWidths();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeWidths();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_EdgeWidths_LocalizedEdgeWidths>(value_value_buf_);
        }
        Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderWidth(node, (const Opt_Union_Length_EdgeWidths_LocalizedEdgeWidths*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderWidth, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderColor(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                const Ark_Int8 value_value_buf__u_selector = thisDeserializer.readInt8();
                Ark_ResourceColor value_value_buf__u = {};
                value_value_buf__u.selector = value_value_buf__u_selector;
                if (value_value_buf__u_selector == 0) {
                    value_value_buf__u.selector = 0;
                    value_value_buf__u.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
                }
                else if (value_value_buf__u_selector == 1) {
                    value_value_buf__u.selector = 1;
                    value_value_buf__u.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                else if (value_value_buf__u_selector == 2) {
                    value_value_buf__u.selector = 2;
                    value_value_buf__u.value2 = static_cast<Ark_String>(thisDeserializer.readString());
                }
                else if (value_value_buf__u_selector == 3) {
                    value_value_buf__u.selector = 3;
                    value_value_buf__u.value3 = thisDeserializer.readResource();
                }
                else {
                    INTEROP_FATAL("One of the branches for value_value_buf__u has to be chosen through deserialisation.");
                }
                value_value_buf_.value0 = static_cast<Ark_ResourceColor>(value_value_buf__u);
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeColors();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedEdgeColors();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_ResourceColor_EdgeColors_LocalizedEdgeColors>(value_value_buf_);
        }
        Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderColor(node, (const Opt_Union_ResourceColor_EdgeColors_LocalizedEdgeColors*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderColor, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderStyle(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_BorderStyle_EdgeStyles value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_BorderStyle_EdgeStyles value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_BorderStyle>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readEdgeStyles();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_BorderStyle_EdgeStyles>(value_value_buf_);
        }
        Opt_Union_BorderStyle_EdgeStyles value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderStyle(node, (const Opt_Union_BorderStyle_EdgeStyles*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderStyle, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBorderRadius(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = thisDeserializer.readLength();
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = thisDeserializer.readBorderRadiuses();
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = thisDeserializer.readLocalizedBorderRadiuses();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Union_Length_BorderRadiuses_LocalizedBorderRadiuses>(value_value_buf_);
        }
        Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBorderRadius(node, (const Opt_Union_Length_BorderRadiuses_LocalizedBorderRadiuses*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBorderRadius, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextFieldOps_textFieldOpsSetBackgroundColor(Ark_NativePointer node, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ResourceColor value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_ResourceColor value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                value_value_buf_.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            else if (value_value_buf__selector == 2) {
                value_value_buf_.selector = 2;
                value_value_buf_.value2 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf__selector == 3) {
                value_value_buf_.selector = 3;
                value_value_buf_.value3 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_ResourceColor>(value_value_buf_);
        }
        Opt_ResourceColor value_value = value_value_buf;;
        return GetAccessors()->getTextFieldOpsAccessor()->textFieldOpsSetBackgroundColor(node, (const Opt_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TextFieldOps_textFieldOpsSetBackgroundColor, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ActionSheet_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ActionSheetOptions value_value = thisDeserializer.readActionSheetOptions();;
        GetAccessors()->getActionSheetAccessor()->show((const Ark_ActionSheetOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V2(ActionSheet_show, KSerializerBuffer, int32_t)
void impl_AlertDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Type_AlertDialog_show_value value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = thisDeserializer.readAlertDialogParamWithConfirm();
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = thisDeserializer.readAlertDialogParamWithButtons();
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = thisDeserializer.readAlertDialogParamWithOptions();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Type_AlertDialog_show_value value_value = static_cast<Ark_Type_AlertDialog_show_value>(value_value_buf);;
        GetAccessors()->getAlertDialogAccessor()->show((const Ark_Type_AlertDialog_show_value*)&value_value);
}
KOALA_INTEROP_DIRECT_V2(AlertDialog_show, KSerializerBuffer, int32_t)
void impl_PromptAction_showToast(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ShowToastOptions value_value = thisDeserializer.readShowToastOptions();;
        GetAccessors()->getPromptActionAccessor()->showToast((const Ark_ShowToastOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V2(PromptAction_showToast, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SpringProp_ctor(KInteropNumber mass, KInteropNumber stiffness, KInteropNumber damping) {
        return GetAccessors()->getSpringPropAccessor()->ctor((const Ark_Number*) (&mass), (const Ark_Number*) (&stiffness), (const Ark_Number*) (&damping));
}
KOALA_INTEROP_DIRECT_3(SpringProp_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_SpringProp_getFinalizer() {
        return GetAccessors()->getSpringPropAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SpringProp_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SpringMotion_ctor(KInteropNumber start, KInteropNumber end, KInteropNumber velocity, Ark_NativePointer prop) {
        return GetAccessors()->getSpringMotionAccessor()->ctor((const Ark_Number*) (&start), (const Ark_Number*) (&end), (const Ark_Number*) (&velocity), static_cast<Ark_SpringProp>(prop));
}
KOALA_INTEROP_DIRECT_4(SpringMotion_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_SpringMotion_getFinalizer() {
        return GetAccessors()->getSpringMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SpringMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_FrictionMotion_ctor(KInteropNumber friction, KInteropNumber position, KInteropNumber velocity) {
        return GetAccessors()->getFrictionMotionAccessor()->ctor((const Ark_Number*) (&friction), (const Ark_Number*) (&position), (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_3(FrictionMotion_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_FrictionMotion_getFinalizer() {
        return GetAccessors()->getFrictionMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FrictionMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ScrollMotion_ctor(KInteropNumber position, KInteropNumber velocity, KInteropNumber min, KInteropNumber max, Ark_NativePointer prop) {
        return GetAccessors()->getScrollMotionAccessor()->ctor((const Ark_Number*) (&position), (const Ark_Number*) (&velocity), (const Ark_Number*) (&min), (const Ark_Number*) (&max), static_cast<Ark_SpringProp>(prop));
}
KOALA_INTEROP_DIRECT_5(ScrollMotion_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_ScrollMotion_getFinalizer() {
        return GetAccessors()->getScrollMotionAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScrollMotion_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_CalendarController_ctor() {
        return GetAccessors()->getCalendarControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CalendarController_ctor, Ark_NativePointer)
Ark_NativePointer impl_CalendarController_getFinalizer() {
        return GetAccessors()->getCalendarControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CalendarController_getFinalizer, Ark_NativePointer)
void impl_CalendarController_backToToday(Ark_NativePointer thisPtr) {
        Ark_CalendarController self = reinterpret_cast<Ark_CalendarController>(thisPtr);
        GetAccessors()->getCalendarControllerAccessor()->backToToday(self);
}
KOALA_INTEROP_DIRECT_V1(CalendarController_backToToday, Ark_NativePointer)
void impl_CalendarController_goTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CalendarController self = reinterpret_cast<Ark_CalendarController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_Number_day_month_year value_value_buf = {};
        value_value_buf.year = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf.month = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf.day = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_Literal_Number_day_month_year value_value = value_value_buf;;
        GetAccessors()->getCalendarControllerAccessor()->goTo(self, (const Ark_Literal_Number_day_month_year*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CalendarController_goTo, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CalendarPickerDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CalendarDialogOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readCalendarDialogOptions();
        }
        Opt_CalendarDialogOptions options_value = options_value_buf;;
        GetAccessors()->getCalendarPickerDialogAccessor()->show((const Opt_CalendarDialogOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V2(CalendarPickerDialog_show, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ICurve_ctor() {
        return GetAccessors()->getICurveAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ICurve_ctor, Ark_NativePointer)
Ark_NativePointer impl_ICurve_getFinalizer() {
        return GetAccessors()->getICurveAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ICurve_getFinalizer, Ark_NativePointer)
Ark_Number impl_ICurve_interpolate(Ark_NativePointer thisPtr, KInteropNumber fraction) {
        Ark_ICurve self = reinterpret_cast<Ark_ICurve>(thisPtr);
        return GetAccessors()->getICurveAccessor()->interpolate(self, (const Ark_Number*) (&fraction));
}
KOALA_INTEROP_DIRECT_2(ICurve_interpolate, KInteropNumber, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_DrawModifier_ctor() {
        return GetAccessors()->getDrawModifierAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DrawModifier_ctor, Ark_NativePointer)
Ark_NativePointer impl_DrawModifier_getFinalizer() {
        return GetAccessors()->getDrawModifierAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawModifier_getFinalizer, Ark_NativePointer)
void impl_DrawModifier_drawBehind(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DrawContext drawContext_value = thisDeserializer.readDrawContext();;
        GetAccessors()->getDrawModifierAccessor()->drawBehind(self, (const Ark_DrawContext*)&drawContext_value);
}
KOALA_INTEROP_DIRECT_V3(DrawModifier_drawBehind, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DrawModifier_drawContent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DrawContext drawContext_value = thisDeserializer.readDrawContext();;
        GetAccessors()->getDrawModifierAccessor()->drawContent(self, (const Ark_DrawContext*)&drawContext_value);
}
KOALA_INTEROP_DIRECT_V3(DrawModifier_drawContent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DrawModifier_drawFront(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DrawContext drawContext_value = thisDeserializer.readDrawContext();;
        GetAccessors()->getDrawModifierAccessor()->drawFront(self, (const Ark_DrawContext*)&drawContext_value);
}
KOALA_INTEROP_DIRECT_V3(DrawModifier_drawFront, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DrawModifier_invalidate(Ark_NativePointer thisPtr) {
        Ark_DrawModifier self = reinterpret_cast<Ark_DrawModifier>(thisPtr);
        GetAccessors()->getDrawModifierAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(DrawModifier_invalidate, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_ctor(const KStringPtr& type, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TransitionEffects effect_value_buf = {};
        effect_value_buf.identity = Ark_Undefined();
        effect_value_buf.opacity = static_cast<Ark_Number>(thisDeserializer.readNumber());
        effect_value_buf.slideSwitch = Ark_Undefined();
        effect_value_buf.move = static_cast<Ark_TransitionEdge>(thisDeserializer.readInt32());
        effect_value_buf.translate = thisDeserializer.readTranslateOptions();
        effect_value_buf.rotate = thisDeserializer.readRotateOptions();
        effect_value_buf.scale = thisDeserializer.readScaleOptions();
        Ark_Literal_TransitionEffect_appear_disappear effect_value_buf_asymmetric_buf = {};
        effect_value_buf_asymmetric_buf.appear = static_cast<Ark_TransitionEffect>(thisDeserializer.readTransitionEffect());
        effect_value_buf_asymmetric_buf.disappear = static_cast<Ark_TransitionEffect>(thisDeserializer.readTransitionEffect());
        effect_value_buf.asymmetric = effect_value_buf_asymmetric_buf;
        Ark_TransitionEffects effect_value = effect_value_buf;;
        return GetAccessors()->getTransitionEffectAccessor()->ctor((const Ark_String*) (&type), (const Ark_TransitionEffects*)&effect_value);
}
KOALA_INTEROP_3(TransitionEffect_ctor, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_getFinalizer() {
        return GetAccessors()->getTransitionEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_translate(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions options_value = thisDeserializer.readTranslateOptions();;
        return GetAccessors()->getTransitionEffectAccessor()->translate((const Ark_TranslateOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_translate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_rotate(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RotateOptions options_value = thisDeserializer.readRotateOptions();;
        return GetAccessors()->getTransitionEffectAccessor()->rotate((const Ark_RotateOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_rotate, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_scale(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScaleOptions options_value = thisDeserializer.readScaleOptions();;
        return GetAccessors()->getTransitionEffectAccessor()->scale((const Ark_ScaleOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_scale, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_opacity(KInteropNumber alpha) {
        return GetAccessors()->getTransitionEffectAccessor()->opacity((const Ark_Number*) (&alpha));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_opacity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TransitionEffect_move(Ark_Int32 edge) {
        return GetAccessors()->getTransitionEffectAccessor()->move(static_cast<Ark_TransitionEdge>(edge));
}
KOALA_INTEROP_DIRECT_1(TransitionEffect_move, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_TransitionEffect_asymmetric(Ark_NativePointer appear, Ark_NativePointer disappear) {
        return GetAccessors()->getTransitionEffectAccessor()->asymmetric(static_cast<Ark_TransitionEffect>(appear), static_cast<Ark_TransitionEffect>(disappear));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_asymmetric, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_animation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = thisDeserializer.readAnimateParam();;
        return GetAccessors()->getTransitionEffectAccessor()->animation(self, (const Ark_AnimateParam*)&value_value);
}
KOALA_INTEROP_DIRECT_3(TransitionEffect_animation, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TransitionEffect_combine(Ark_NativePointer thisPtr, Ark_NativePointer transitionEffect) {
        Ark_TransitionEffect self = reinterpret_cast<Ark_TransitionEffect>(thisPtr);
        return GetAccessors()->getTransitionEffectAccessor()->combine(self, static_cast<Ark_TransitionEffect>(transitionEffect));
}
KOALA_INTEROP_DIRECT_2(TransitionEffect_combine, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getIDENTITY() {
        return GetAccessors()->getTransitionEffectAccessor()->getIDENTITY();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getIDENTITY, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getOPACITY() {
        return GetAccessors()->getTransitionEffectAccessor()->getOPACITY();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getOPACITY, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getSLIDE() {
        return GetAccessors()->getTransitionEffectAccessor()->getSLIDE();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getSLIDE, Ark_NativePointer)
Ark_NativePointer impl_TransitionEffect_getSLIDE_SWITCH() {
        return GetAccessors()->getTransitionEffectAccessor()->getSLIDE_SWITCH();
}
KOALA_INTEROP_DIRECT_0(TransitionEffect_getSLIDE_SWITCH, Ark_NativePointer)
Ark_NativePointer impl_BaseEvent_ctor() {
        return GetAccessors()->getBaseEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(BaseEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_BaseEvent_getFinalizer() {
        return GetAccessors()->getBaseEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_BaseEvent_getModifierKeyState(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 keys_value_buf_length = thisDeserializer.readInt32();
        Array_String keys_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(keys_value_buf)>::type,
        std::decay<decltype(*keys_value_buf.array)>::type>(&keys_value_buf, keys_value_buf_length);
        for (int keys_value_buf_i = 0; keys_value_buf_i < keys_value_buf_length; keys_value_buf_i++) {
            keys_value_buf.array[keys_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String keys_value = keys_value_buf;;
        return GetAccessors()->getBaseEventAccessor()->getModifierKeyState(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Array_String*)&keys_value);
}
KOALA_INTEROP_CTX_3(BaseEvent_getModifierKeyState, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_BaseEvent_getTarget(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getTarget(self);
        Serializer _retSerializer {};
        _retSerializer.writeEventTarget(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getTarget, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setTarget(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_EventTarget target_value = thisDeserializer.readEventTarget();;
        GetAccessors()->getBaseEventAccessor()->setTarget(self, (const Ark_EventTarget*)&target_value);
}
KOALA_INTEROP_DIRECT_V3(BaseEvent_setTarget, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int64 impl_BaseEvent_getTimestamp(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTimestamp(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTimestamp, Ark_Int64, Ark_NativePointer)
void impl_BaseEvent_setTimestamp(Ark_NativePointer thisPtr, Ark_Int64 timestamp) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTimestamp(self, timestamp);
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTimestamp, Ark_NativePointer, Ark_Int64)
Ark_Int32 impl_BaseEvent_getSource(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getSource(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getSource, Ark_Int32, Ark_NativePointer)
void impl_BaseEvent_setSource(Ark_NativePointer thisPtr, Ark_Int32 source) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setSource(self, static_cast<Ark_SourceType>(source));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setSource, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_BaseEvent_getAxisHorizontal(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getAxisHorizontal(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getAxisHorizontal, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setAxisHorizontal(Ark_NativePointer thisPtr, KInteropNumber axisHorizontal) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setAxisHorizontal(self, (const Ark_Number*) (&axisHorizontal));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setAxisHorizontal, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_BaseEvent_getAxisVertical(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getAxisVertical(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getAxisVertical, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setAxisVertical(Ark_NativePointer thisPtr, KInteropNumber axisVertical) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setAxisVertical(self, (const Ark_Number*) (&axisVertical));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setAxisVertical, Ark_NativePointer, KInteropNumber)
Ark_Number impl_BaseEvent_getPressure(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getPressure(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getPressure, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setPressure(Ark_NativePointer thisPtr, KInteropNumber pressure) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setPressure(self, (const Ark_Number*) (&pressure));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setPressure, Ark_NativePointer, KInteropNumber)
Ark_Number impl_BaseEvent_getTiltX(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTiltX(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTiltX, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setTiltX(Ark_NativePointer thisPtr, KInteropNumber tiltX) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTiltX(self, (const Ark_Number*) (&tiltX));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTiltX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_BaseEvent_getTiltY(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getTiltY(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getTiltY, KInteropNumber, Ark_NativePointer)
void impl_BaseEvent_setTiltY(Ark_NativePointer thisPtr, KInteropNumber tiltY) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTiltY(self, (const Ark_Number*) (&tiltY));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTiltY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_BaseEvent_getRollAngle(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getRollAngle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getRollAngle, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setRollAngle(Ark_NativePointer thisPtr, KInteropNumber rollAngle) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setRollAngle(self, (const Ark_Number*) (&rollAngle));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setRollAngle, Ark_NativePointer, KInteropNumber)
Ark_Int32 impl_BaseEvent_getSourceTool(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        return GetAccessors()->getBaseEventAccessor()->getSourceTool(self);
}
KOALA_INTEROP_DIRECT_1(BaseEvent_getSourceTool, Ark_Int32, Ark_NativePointer)
void impl_BaseEvent_setSourceTool(Ark_NativePointer thisPtr, Ark_Int32 sourceTool) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setSourceTool(self, static_cast<Ark_SourceTool>(sourceTool));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setSourceTool, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_BaseEvent_getDeviceId(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getDeviceId(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getDeviceId, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setDeviceId(Ark_NativePointer thisPtr, KInteropNumber deviceId) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setDeviceId(self, (const Ark_Number*) (&deviceId));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setDeviceId, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_BaseEvent_getTargetDisplayId(Ark_NativePointer thisPtr) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseEventAccessor()->getTargetDisplayId(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseEvent_getTargetDisplayId, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseEvent_setTargetDisplayId(Ark_NativePointer thisPtr, KInteropNumber targetDisplayId) {
        Ark_BaseEvent self = reinterpret_cast<Ark_BaseEvent>(thisPtr);
        GetAccessors()->getBaseEventAccessor()->setTargetDisplayId(self, (const Ark_Number*) (&targetDisplayId));
}
KOALA_INTEROP_DIRECT_V2(BaseEvent_setTargetDisplayId, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ClickEvent_ctor() {
        return GetAccessors()->getClickEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ClickEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_ClickEvent_getFinalizer() {
        return GetAccessors()->getClickEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ClickEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_ClickEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getScreenX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getScreenX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getScreenX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setScreenX(Ark_NativePointer thisPtr, KInteropNumber screenX) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setScreenX(self, (const Ark_Number*) (&screenX));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setScreenX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getScreenY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getScreenY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getScreenY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setScreenY(Ark_NativePointer thisPtr, KInteropNumber screenY) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setScreenY(self, (const Ark_Number*) (&screenY));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setScreenY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getX(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_ClickEvent_getY(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        return GetAccessors()->getClickEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(ClickEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_ClickEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_ClickEvent_getHand(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getClickEventAccessor()->getHand(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_InteractionHand>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ClickEvent_getHand, KInteropReturnBuffer, Ark_NativePointer)
void impl_ClickEvent_setHand(Ark_NativePointer thisPtr, Ark_Int32 hand) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        GetAccessors()->getClickEventAccessor()->setHand(self, static_cast<Ark_InteractionHand>(hand));
}
KOALA_INTEROP_DIRECT_V2(ClickEvent_setHand, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_ClickEvent_getPreventDefault(Ark_NativePointer thisPtr) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        [[maybe_unused]] const auto &retValue = GetAccessors()->getClickEventAccessor()->getPreventDefault(self);
        Serializer _retSerializer {};
        _retSerializer.writeCallbackResource(retValue.resource);
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.call));
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.callSync));
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ClickEvent_getPreventDefault, KInteropReturnBuffer, Ark_NativePointer)
void impl_ClickEvent_setPreventDefault(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ClickEvent self = reinterpret_cast<Ark_ClickEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void preventDefault_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getClickEventAccessor()->setPreventDefault(self, (const Callback_Void*)&preventDefault_value);
}
KOALA_INTEROP_DIRECT_V3(ClickEvent_setPreventDefault, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HoverEvent_ctor() {
        return GetAccessors()->getHoverEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(HoverEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_HoverEvent_getFinalizer() {
        return GetAccessors()->getHoverEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HoverEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_HoverEvent_getX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_HoverEvent_getY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_HoverEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getWindowX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getWindowX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setWindowX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_HoverEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getWindowY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getWindowY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setWindowY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_HoverEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getDisplayX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getDisplayX, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_HoverEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getHoverEventAccessor()->getDisplayY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HoverEvent_getDisplayY, KInteropReturnBuffer, Ark_NativePointer)
void impl_HoverEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        GetAccessors()->getHoverEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(HoverEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_HoverEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getHoverEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(HoverEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_HoverEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_HoverEvent self = reinterpret_cast<Ark_HoverEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getHoverEventAccessor()->setStopPropagation(self, (const Callback_Void*)&stopPropagation_value);
}
KOALA_INTEROP_DIRECT_V3(HoverEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MouseEvent_ctor() {
        return GetAccessors()->getMouseEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(MouseEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_MouseEvent_getFinalizer() {
        return GetAccessors()->getMouseEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(MouseEvent_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_MouseEvent_getButton(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getButton(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getButton, Ark_Int32, Ark_NativePointer)
void impl_MouseEvent_setButton(Ark_NativePointer thisPtr, Ark_Int32 button) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setButton(self, static_cast<Ark_MouseButton>(button));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setButton, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_MouseEvent_getAction(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getAction(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getAction, Ark_Int32, Ark_NativePointer)
void impl_MouseEvent_setAction(Ark_NativePointer thisPtr, Ark_Int32 action) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setAction(self, static_cast<Ark_MouseAction>(action));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setAction, Ark_NativePointer, Ark_Int32)
Ark_Number impl_MouseEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getScreenX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getScreenX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getScreenX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setScreenX(Ark_NativePointer thisPtr, KInteropNumber screenX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setScreenX(self, (const Ark_Number*) (&screenX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setScreenX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getScreenY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getScreenY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getScreenY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setScreenY(Ark_NativePointer thisPtr, KInteropNumber screenY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setScreenY(self, (const Ark_Number*) (&screenY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setScreenY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_MouseEvent_getY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        return GetAccessors()->getMouseEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_MouseEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_MouseEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getMouseEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(MouseEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_MouseEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getMouseEventAccessor()->setStopPropagation(self, (const Callback_Void*)&stopPropagation_value);
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MouseEvent_getRawDeltaX(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getRawDeltaX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getRawDeltaX, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setRawDeltaX(Ark_NativePointer thisPtr, KInteropNumber rawDeltaX) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setRawDeltaX(self, (const Ark_Number*) (&rawDeltaX));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setRawDeltaX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_MouseEvent_getRawDeltaY(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getRawDeltaY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getRawDeltaY, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setRawDeltaY(Ark_NativePointer thisPtr, KInteropNumber rawDeltaY) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        GetAccessors()->getMouseEventAccessor()->setRawDeltaY(self, (const Ark_Number*) (&rawDeltaY));
}
KOALA_INTEROP_DIRECT_V2(MouseEvent_setRawDeltaY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_MouseEvent_getPressedButtons(Ark_NativePointer thisPtr) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getMouseEventAccessor()->getPressedButtons(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(retValue_value.length);
            for (int i = 0; i < retValue_value.length; i++) {
                const Ark_MouseButton retValue_value_element = retValue_value.array[i];
                _retSerializer.writeInt32(static_cast<Ark_MouseButton>(retValue_value_element));
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MouseEvent_getPressedButtons, KInteropReturnBuffer, Ark_NativePointer)
void impl_MouseEvent_setPressedButtons(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MouseEvent self = reinterpret_cast<Ark_MouseEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 pressedButtons_value_buf_length = thisDeserializer.readInt32();
        Array_MouseButton pressedButtons_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(pressedButtons_value_buf)>::type,
        std::decay<decltype(*pressedButtons_value_buf.array)>::type>(&pressedButtons_value_buf, pressedButtons_value_buf_length);
        for (int pressedButtons_value_buf_i = 0; pressedButtons_value_buf_i < pressedButtons_value_buf_length; pressedButtons_value_buf_i++) {
            pressedButtons_value_buf.array[pressedButtons_value_buf_i] = static_cast<Ark_MouseButton>(thisDeserializer.readInt32());
        }
        Array_MouseButton pressedButtons_value = pressedButtons_value_buf;;
        GetAccessors()->getMouseEventAccessor()->setPressedButtons(self, (const Array_MouseButton*)&pressedButtons_value);
}
KOALA_INTEROP_DIRECT_V3(MouseEvent_setPressedButtons, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AccessibilityHoverEvent_ctor() {
        return GetAccessors()->getAccessibilityHoverEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(AccessibilityHoverEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_AccessibilityHoverEvent_getFinalizer() {
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AccessibilityHoverEvent_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_AccessibilityHoverEvent_getType(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setType(self, static_cast<Ark_AccessibilityHoverType>(type));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setType, Ark_NativePointer, Ark_Int32)
Ark_Number impl_AccessibilityHoverEvent_getX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AccessibilityHoverEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        return GetAccessors()->getAccessibilityHoverEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(AccessibilityHoverEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_AccessibilityHoverEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_AccessibilityHoverEvent self = reinterpret_cast<Ark_AccessibilityHoverEvent>(thisPtr);
        GetAccessors()->getAccessibilityHoverEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(AccessibilityHoverEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TouchEvent_ctor() {
        return GetAccessors()->getTouchEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TouchEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_TouchEvent_getFinalizer() {
        return GetAccessors()->getTouchEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TouchEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TouchEvent_getHistoricalPoints(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getHistoricalPoints(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_HistoricalPoint retValue_element = retValue.array[i];
            _retSerializer.writeHistoricalPoint(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getHistoricalPoints, KInteropReturnBuffer, Ark_NativePointer)
Ark_Int32 impl_TouchEvent_getType(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        return GetAccessors()->getTouchEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(TouchEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_TouchEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        GetAccessors()->getTouchEventAccessor()->setType(self, static_cast<Ark_TouchType>(type));
}
KOALA_INTEROP_DIRECT_V2(TouchEvent_setType, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_TouchEvent_getTouches(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getTouches(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_TouchObject retValue_element = retValue.array[i];
            _retSerializer.writeTouchObject(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getTouches, KInteropReturnBuffer, Ark_NativePointer)
void impl_TouchEvent_setTouches(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 touches_value_buf_length = thisDeserializer.readInt32();
        Array_TouchObject touches_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(touches_value_buf)>::type,
        std::decay<decltype(*touches_value_buf.array)>::type>(&touches_value_buf, touches_value_buf_length);
        for (int touches_value_buf_i = 0; touches_value_buf_i < touches_value_buf_length; touches_value_buf_i++) {
            touches_value_buf.array[touches_value_buf_i] = thisDeserializer.readTouchObject();
        }
        Array_TouchObject touches_value = touches_value_buf;;
        GetAccessors()->getTouchEventAccessor()->setTouches(self, (const Array_TouchObject*)&touches_value);
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setTouches, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TouchEvent_getChangedTouches(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getTouchEventAccessor()->getChangedTouches(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_TouchObject retValue_element = retValue.array[i];
            _retSerializer.writeTouchObject(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getChangedTouches, KInteropReturnBuffer, Ark_NativePointer)
void impl_TouchEvent_setChangedTouches(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 changedTouches_value_buf_length = thisDeserializer.readInt32();
        Array_TouchObject changedTouches_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(changedTouches_value_buf)>::type,
        std::decay<decltype(*changedTouches_value_buf.array)>::type>(&changedTouches_value_buf, changedTouches_value_buf_length);
        for (int changedTouches_value_buf_i = 0; changedTouches_value_buf_i < changedTouches_value_buf_length; changedTouches_value_buf_i++) {
            changedTouches_value_buf.array[changedTouches_value_buf_i] = thisDeserializer.readTouchObject();
        }
        Array_TouchObject changedTouches_value = changedTouches_value_buf;;
        GetAccessors()->getTouchEventAccessor()->setChangedTouches(self, (const Array_TouchObject*)&changedTouches_value);
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setChangedTouches, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TouchEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        [[maybe_unused]] const auto &retValue = GetAccessors()->getTouchEventAccessor()->getStopPropagation(self);
        Serializer _retSerializer {};
        _retSerializer.writeCallbackResource(retValue.resource);
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.call));
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.callSync));
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TouchEvent_getStopPropagation, KInteropReturnBuffer, Ark_NativePointer)
void impl_TouchEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getTouchEventAccessor()->setStopPropagation(self, (const Callback_Void*)&stopPropagation_value);
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TouchEvent_getPreventDefault(Ark_NativePointer thisPtr) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getTouchEventAccessor()->getPreventDefault(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(TouchEvent_getPreventDefault, Ark_NativePointer, Ark_NativePointer)
void impl_TouchEvent_setPreventDefault(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TouchEvent self = reinterpret_cast<Ark_TouchEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void preventDefault_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getTouchEventAccessor()->setPreventDefault(self, (const Callback_Void*)&preventDefault_value);
}
KOALA_INTEROP_DIRECT_V3(TouchEvent_setPreventDefault, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AxisEvent_ctor() {
        return GetAccessors()->getAxisEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(AxisEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_AxisEvent_getFinalizer() {
        return GetAccessors()->getAxisEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AxisEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_AxisEvent_getHorizontalAxisValue(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getHorizontalAxisValue(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getHorizontalAxisValue, KInteropNumber, Ark_NativePointer)
Ark_Number impl_AxisEvent_getVerticalAxisValue(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getVerticalAxisValue(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getVerticalAxisValue, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_AxisEvent_getAction(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getAction(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getAction, Ark_Int32, Ark_NativePointer)
void impl_AxisEvent_setAction(Ark_NativePointer thisPtr, Ark_Int32 action) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setAction(self, static_cast<Ark_AxisAction>(action));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setAction, Ark_NativePointer, Ark_Int32)
Ark_Number impl_AxisEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setDisplayX(Ark_NativePointer thisPtr, KInteropNumber displayX) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setDisplayX(self, (const Ark_Number*) (&displayX));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setDisplayX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setDisplayY(Ark_NativePointer thisPtr, KInteropNumber displayY) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setDisplayY(self, (const Ark_Number*) (&displayY));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setDisplayY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getWindowX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setWindowX(Ark_NativePointer thisPtr, KInteropNumber windowX) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setWindowX(self, (const Ark_Number*) (&windowX));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setWindowX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getWindowY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setWindowY(Ark_NativePointer thisPtr, KInteropNumber windowY) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setWindowY(self, (const Ark_Number*) (&windowY));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setWindowY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getX(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getX, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setX(Ark_NativePointer thisPtr, KInteropNumber x) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setX(self, (const Ark_Number*) (&x));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_AxisEvent_getY(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        return GetAccessors()->getAxisEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(AxisEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_AxisEvent_setY(Ark_NativePointer thisPtr, KInteropNumber y) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setY(self, (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_AxisEvent_getScrollStep(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getAxisEventAccessor()->getScrollStep(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(AxisEvent_getScrollStep, KInteropReturnBuffer, Ark_NativePointer)
void impl_AxisEvent_setScrollStep(Ark_NativePointer thisPtr, KInteropNumber scrollStep) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        GetAccessors()->getAxisEventAccessor()->setScrollStep(self, (const Ark_Number*) (&scrollStep));
}
KOALA_INTEROP_DIRECT_V2(AxisEvent_setScrollStep, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_AxisEvent_getPropagation(Ark_NativePointer thisPtr) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        [[maybe_unused]] const auto &retValue = GetAccessors()->getAxisEventAccessor()->getPropagation(self);
        Serializer _retSerializer {};
        _retSerializer.writeCallbackResource(retValue.resource);
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.call));
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.callSync));
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(AxisEvent_getPropagation, KInteropReturnBuffer, Ark_NativePointer)
void impl_AxisEvent_setPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_AxisEvent self = reinterpret_cast<Ark_AxisEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void propagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getAxisEventAccessor()->setPropagation(self, (const Callback_Void*)&propagation_value);
}
KOALA_INTEROP_DIRECT_V3(AxisEvent_setPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PixelMapMock_ctor() {
        return GetAccessors()->getPixelMapMockAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PixelMapMock_ctor, Ark_NativePointer)
Ark_NativePointer impl_PixelMapMock_getFinalizer() {
        return GetAccessors()->getPixelMapMockAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PixelMapMock_getFinalizer, Ark_NativePointer)
void impl_PixelMapMock_release(Ark_NativePointer thisPtr) {
        Ark_PixelMapMock self = reinterpret_cast<Ark_PixelMapMock>(thisPtr);
        GetAccessors()->getPixelMapMockAccessor()->release(self);
}
KOALA_INTEROP_DIRECT_V1(PixelMapMock_release, Ark_NativePointer)
Ark_NativePointer impl_DragEvent_ctor() {
        return GetAccessors()->getDragEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DragEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_DragEvent_getFinalizer() {
        return GetAccessors()->getDragEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DragEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_DragEvent_getDisplayX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDisplayX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDisplayX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getDisplayY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDisplayY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDisplayY, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getWindowX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getWindowX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getWindowX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getWindowY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getWindowY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getWindowY, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getY, KInteropNumber, Ark_NativePointer)
void impl_DragEvent_setData(Ark_NativePointer thisPtr, Ark_NativePointer unifiedData) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setData(self, static_cast<Ark_UnifiedData>(unifiedData));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setData, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_DragEvent_getData(KVMContext vmContext, Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getData(reinterpret_cast<Ark_VMContext>(vmContext), self);
}
KOALA_INTEROP_CTX_1(DragEvent_getData, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_DragEvent_getSummary(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getDragEventAccessor()->getSummary(self);
        Serializer _retSerializer {};
        _retSerializer.writeSummary(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DragEvent_getSummary, KInteropReturnBuffer, Ark_NativePointer)
void impl_DragEvent_setResult(Ark_NativePointer thisPtr, Ark_Int32 dragResult) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setResult(self, static_cast<Ark_DragResult>(dragResult));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setResult, Ark_NativePointer, Ark_Int32)
Ark_Int32 impl_DragEvent_getResult(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getResult(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getResult, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_DragEvent_getPreviewRect(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getDragEventAccessor()->getPreviewRect(self);
        Serializer _retSerializer {};
        _retSerializer.writeRectangle(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DragEvent_getPreviewRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
Ark_Number impl_DragEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getVelocity, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_DragEvent_getModifierKeyState(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 keys_value_buf_length = thisDeserializer.readInt32();
        Array_String keys_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(keys_value_buf)>::type,
        std::decay<decltype(*keys_value_buf.array)>::type>(&keys_value_buf, keys_value_buf_length);
        for (int keys_value_buf_i = 0; keys_value_buf_i < keys_value_buf_length; keys_value_buf_i++) {
            keys_value_buf.array[keys_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String keys_value = keys_value_buf;;
        return GetAccessors()->getDragEventAccessor()->getModifierKeyState(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Array_String*)&keys_value);
}
KOALA_INTEROP_CTX_3(DragEvent_getModifierKeyState, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_DragEvent_executeDropAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void customDropAnimation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getDragEventAccessor()->executeDropAnimation(self, (const Callback_Void*)&customDropAnimation_value);
}
KOALA_INTEROP_DIRECT_V3(DragEvent_executeDropAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_DragEvent_startDataLoading(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DataSyncOptions options_value = thisDeserializer.readDataSyncOptions();;
        return GetAccessors()->getDragEventAccessor()->startDataLoading(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_DataSyncOptions*)&options_value);
}
KOALA_INTEROP_CTX_3(DragEvent_startDataLoading, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_DragEvent_getDragBehavior(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getDragBehavior(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getDragBehavior, Ark_Int32, Ark_NativePointer)
void impl_DragEvent_setDragBehavior(Ark_NativePointer thisPtr, Ark_Int32 dragBehavior) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setDragBehavior(self, static_cast<Ark_DragBehavior>(dragBehavior));
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setDragBehavior, Ark_NativePointer, Ark_Int32)
Ark_Boolean impl_DragEvent_getUseCustomDropAnimation(Ark_NativePointer thisPtr) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        return GetAccessors()->getDragEventAccessor()->getUseCustomDropAnimation(self);
}
KOALA_INTEROP_DIRECT_1(DragEvent_getUseCustomDropAnimation, Ark_Boolean, Ark_NativePointer)
void impl_DragEvent_setUseCustomDropAnimation(Ark_NativePointer thisPtr, Ark_Boolean useCustomDropAnimation) {
        Ark_DragEvent self = reinterpret_cast<Ark_DragEvent>(thisPtr);
        GetAccessors()->getDragEventAccessor()->setUseCustomDropAnimation(self, useCustomDropAnimation);
}
KOALA_INTEROP_DIRECT_V2(DragEvent_setUseCustomDropAnimation, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_KeyEvent_ctor() {
        return GetAccessors()->getKeyEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(KeyEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_KeyEvent_getFinalizer() {
        return GetAccessors()->getKeyEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(KeyEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_KeyEvent_getModifierKeyState(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 keys_value_buf_length = thisDeserializer.readInt32();
        Array_String keys_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(keys_value_buf)>::type,
        std::decay<decltype(*keys_value_buf.array)>::type>(&keys_value_buf, keys_value_buf_length);
        for (int keys_value_buf_i = 0; keys_value_buf_i < keys_value_buf_length; keys_value_buf_i++) {
            keys_value_buf.array[keys_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String keys_value = keys_value_buf;;
        return GetAccessors()->getKeyEventAccessor()->getModifierKeyState(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Array_String*)&keys_value);
}
KOALA_INTEROP_CTX_3(KeyEvent_getModifierKeyState, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_KeyEvent_getType(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getType, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setType(Ark_NativePointer thisPtr, Ark_Int32 type) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setType(self, static_cast<Ark_KeyType>(type));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setType, Ark_NativePointer, Ark_Int32)
Ark_Number impl_KeyEvent_getKeyCode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeyCode(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getKeyCode, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setKeyCode(Ark_NativePointer thisPtr, KInteropNumber keyCode) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeyCode(self, (const Ark_Number*) (&keyCode));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setKeyCode, Ark_NativePointer, KInteropNumber)
Ark_String impl_KeyEvent_getKeyText(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeyText(self);
}
KOALA_INTEROP_1(KeyEvent_getKeyText, KStringPtr, Ark_NativePointer)
void impl_KeyEvent_setKeyText(Ark_NativePointer thisPtr, const KStringPtr& keyText) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeyText(self, (const Ark_String*) (&keyText));
}
KOALA_INTEROP_V2(KeyEvent_setKeyText, Ark_NativePointer, KStringPtr)
Ark_Int32 impl_KeyEvent_getKeySource(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getKeySource(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getKeySource, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setKeySource(Ark_NativePointer thisPtr, Ark_Int32 keySource) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setKeySource(self, static_cast<Ark_KeySource>(keySource));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setKeySource, Ark_NativePointer, Ark_Int32)
Ark_Number impl_KeyEvent_getDeviceId(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getDeviceId(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getDeviceId, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setDeviceId(Ark_NativePointer thisPtr, KInteropNumber deviceId) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setDeviceId(self, (const Ark_Number*) (&deviceId));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setDeviceId, Ark_NativePointer, KInteropNumber)
Ark_Number impl_KeyEvent_getMetaKey(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getMetaKey(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getMetaKey, KInteropNumber, Ark_NativePointer)
void impl_KeyEvent_setMetaKey(Ark_NativePointer thisPtr, KInteropNumber metaKey) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setMetaKey(self, (const Ark_Number*) (&metaKey));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setMetaKey, Ark_NativePointer, KInteropNumber)
Ark_Int32 impl_KeyEvent_getTimestamp(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getTimestamp(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getTimestamp, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setTimestamp(Ark_NativePointer thisPtr, KLong timestamp) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setTimestamp(self, timestamp);
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setTimestamp, Ark_NativePointer, KLong)
KInteropReturnBuffer impl_KeyEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        [[maybe_unused]] const auto &retValue = GetAccessors()->getKeyEventAccessor()->getStopPropagation(self);
        Serializer _retSerializer {};
        _retSerializer.writeCallbackResource(retValue.resource);
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.call));
        _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue.callSync));
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(KeyEvent_getStopPropagation, KInteropReturnBuffer, Ark_NativePointer)
void impl_KeyEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getKeyEventAccessor()->setStopPropagation(self, (const Callback_Void*)&stopPropagation_value);
}
KOALA_INTEROP_DIRECT_V3(KeyEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Int32 impl_KeyEvent_getIntentionCode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        return GetAccessors()->getKeyEventAccessor()->getIntentionCode(self);
}
KOALA_INTEROP_DIRECT_1(KeyEvent_getIntentionCode, Ark_Int32, Ark_NativePointer)
void impl_KeyEvent_setIntentionCode(Ark_NativePointer thisPtr, Ark_Int32 intentionCode) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setIntentionCode(self, static_cast<Ark_IntentionCode>(intentionCode));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setIntentionCode, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_KeyEvent_getUnicode(Ark_NativePointer thisPtr) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getKeyEventAccessor()->getUnicode(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(KeyEvent_getUnicode, KInteropReturnBuffer, Ark_NativePointer)
void impl_KeyEvent_setUnicode(Ark_NativePointer thisPtr, KInteropNumber unicode) {
        Ark_KeyEvent self = reinterpret_cast<Ark_KeyEvent>(thisPtr);
        GetAccessors()->getKeyEventAccessor()->setUnicode(self, (const Ark_Number*) (&unicode));
}
KOALA_INTEROP_DIRECT_V2(KeyEvent_setUnicode, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_FocusAxisEvent_ctor() {
        return GetAccessors()->getFocusAxisEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(FocusAxisEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_FocusAxisEvent_getFinalizer() {
        return GetAccessors()->getFocusAxisEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FocusAxisEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_FocusAxisEvent_getAxisMap(Ark_NativePointer thisPtr) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getFocusAxisEventAccessor()->getAxisMap(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.size);
        for (int32_t i = 0; i < retValue.size; i++) {
            auto retValue_key = retValue.keys[i];
            auto retValue_value = retValue.values[i];
            _retSerializer.writeInt32(static_cast<Ark_AxisModel>(retValue_key));
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FocusAxisEvent_getAxisMap, KInteropReturnBuffer, Ark_NativePointer)
void impl_FocusAxisEvent_setAxisMap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 axisMap_value_buf_size = thisDeserializer.readInt32();
        Map_AxisModel_Number axisMap_value_buf = {};
        thisDeserializer.resizeMap<Map_AxisModel_Number, Ark_AxisModel, Ark_Number>(&axisMap_value_buf, axisMap_value_buf_size);
        for (int axisMap_value_buf_i = 0; axisMap_value_buf_i < axisMap_value_buf_size; axisMap_value_buf_i++) {
            const Ark_AxisModel axisMap_value_buf_key = static_cast<Ark_AxisModel>(thisDeserializer.readInt32());
            const Ark_Number axisMap_value_buf_value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            axisMap_value_buf.keys[axisMap_value_buf_i] = axisMap_value_buf_key;
            axisMap_value_buf.values[axisMap_value_buf_i] = axisMap_value_buf_value;
        }
        Map_AxisModel_Number axisMap_value = axisMap_value_buf;;
        GetAccessors()->getFocusAxisEventAccessor()->setAxisMap(self, (const Map_AxisModel_Number*)&axisMap_value);
}
KOALA_INTEROP_DIRECT_V3(FocusAxisEvent_setAxisMap, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_FocusAxisEvent_getStopPropagation(Ark_NativePointer thisPtr) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        [[maybe_unused]] const auto &_api_call_result = GetAccessors()->getFocusAxisEventAccessor()->getStopPropagation(self);
        // TODO: Value serialization needs to be implemented
        return {};
}
KOALA_INTEROP_DIRECT_1(FocusAxisEvent_getStopPropagation, Ark_NativePointer, Ark_NativePointer)
void impl_FocusAxisEvent_setStopPropagation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FocusAxisEvent self = reinterpret_cast<Ark_FocusAxisEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void stopPropagation_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getFocusAxisEventAccessor()->setStopPropagation(self, (const Callback_Void*)&stopPropagation_value);
}
KOALA_INTEROP_DIRECT_V3(FocusAxisEvent_setStopPropagation, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ProgressMask_ctor(KInteropNumber value, KInteropNumber total, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 color_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor color_value_buf = {};
        color_value_buf.selector = color_value_buf_selector;
        if (color_value_buf_selector == 0) {
            color_value_buf.selector = 0;
            color_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (color_value_buf_selector == 1) {
            color_value_buf.selector = 1;
            color_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (color_value_buf_selector == 2) {
            color_value_buf.selector = 2;
            color_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (color_value_buf_selector == 3) {
            color_value_buf.selector = 3;
            color_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for color_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor color_value = static_cast<Ark_ResourceColor>(color_value_buf);;
        return GetAccessors()->getProgressMaskAccessor()->ctor((const Ark_Number*) (&value), (const Ark_Number*) (&total), (const Ark_ResourceColor*)&color_value);
}
KOALA_INTEROP_DIRECT_4(ProgressMask_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ProgressMask_getFinalizer() {
        return GetAccessors()->getProgressMaskAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ProgressMask_getFinalizer, Ark_NativePointer)
void impl_ProgressMask_updateProgress(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        GetAccessors()->getProgressMaskAccessor()->updateProgress(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(ProgressMask_updateProgress, Ark_NativePointer, KInteropNumber)
void impl_ProgressMask_updateColor(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceColor value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_Color>(thisDeserializer.readInt32());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 3) {
            value_value_buf.selector = 3;
            value_value_buf.value3 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceColor value_value = static_cast<Ark_ResourceColor>(value_value_buf);;
        GetAccessors()->getProgressMaskAccessor()->updateColor(self, (const Ark_ResourceColor*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(ProgressMask_updateColor, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ProgressMask_enableBreathingAnimation(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_ProgressMask self = reinterpret_cast<Ark_ProgressMask>(thisPtr);
        GetAccessors()->getProgressMaskAccessor()->enableBreathingAnimation(self, value);
}
KOALA_INTEROP_DIRECT_V2(ProgressMask_enableBreathingAnimation, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_Measurable_ctor() {
        return GetAccessors()->getMeasurableAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Measurable_ctor, Ark_NativePointer)
Ark_NativePointer impl_Measurable_getFinalizer() {
        return GetAccessors()->getMeasurableAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Measurable_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_measure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ConstraintSizeOptions constraint_value = thisDeserializer.readConstraintSizeOptions();;
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->measure(self, (const Ark_ConstraintSizeOptions*)&constraint_value);
        Serializer _retSerializer {};
        _retSerializer.writeMeasureResult(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(Measurable_measure, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Measurable_getMargin(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getMargin(self);
        Serializer _retSerializer {};
        _retSerializer.writeDirectionalEdgesT(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getMargin, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getPadding(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getPadding(self);
        Serializer _retSerializer {};
        _retSerializer.writeDirectionalEdgesT(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getPadding, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getBorderWidth(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getBorderWidth(self);
        Serializer _retSerializer {};
        _retSerializer.writeDirectionalEdgesT(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getBorderWidth, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_Measurable_getUniqueId(Ark_NativePointer thisPtr) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        const auto &retValue = GetAccessors()->getMeasurableAccessor()->getUniqueId(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Measurable_getUniqueId, KInteropReturnBuffer, Ark_NativePointer)
void impl_Measurable_setUniqueId(Ark_NativePointer thisPtr, KInteropNumber uniqueId) {
        Ark_Measurable self = reinterpret_cast<Ark_Measurable>(thisPtr);
        GetAccessors()->getMeasurableAccessor()->setUniqueId(self, (const Ark_Number*) (&uniqueId));
}
KOALA_INTEROP_DIRECT_V2(Measurable_setUniqueId, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_View_ctor() {
        return GetAccessors()->getViewAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(View_ctor, Ark_NativePointer)
Ark_NativePointer impl_View_getFinalizer() {
        return GetAccessors()->getViewAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(View_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_View_create(Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_View self = reinterpret_cast<Ark_View>(thisPtr);
        return GetAccessors()->getViewAccessor()->create(self, value);
}
KOALA_INTEROP_DIRECT_2(View_create, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextContentControllerBase_ctor() {
        return GetAccessors()->getTextContentControllerBaseAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextContentControllerBase_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextContentControllerBase_getFinalizer() {
        return GetAccessors()->getTextContentControllerBaseAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextContentControllerBase_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextContentControllerBase_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getCaretOffset(self);
        Serializer _retSerializer {};
        _retSerializer.writeCaretOffset(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getCaretOffset, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextContentControllerBase_getTextContentRect(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getTextContentRect(self);
        Serializer _retSerializer {};
        _retSerializer.writeRectResult(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getTextContentRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_TextContentControllerBase_getTextContentLineCount(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        return GetAccessors()->getTextContentControllerBaseAccessor()->getTextContentLineCount(self);
}
KOALA_INTEROP_DIRECT_1(TextContentControllerBase_getTextContentLineCount, KInteropNumber, Ark_NativePointer)
Ark_Number impl_TextContentControllerBase_addText(Ark_NativePointer thisPtr, const KStringPtr& text, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto textOperationOptions_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextContentControllerOptions textOperationOptions_value_buf = {};
        textOperationOptions_value_buf.tag = textOperationOptions_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (textOperationOptions_value_buf_runtimeType))
        {
            textOperationOptions_value_buf.value = thisDeserializer.readTextContentControllerOptions();
        }
        Opt_TextContentControllerOptions textOperationOptions_value = textOperationOptions_value_buf;;
        return GetAccessors()->getTextContentControllerBaseAccessor()->addText(self, (const Ark_String*) (&text), (const Opt_TextContentControllerOptions*)&textOperationOptions_value);
}
KOALA_INTEROP_4(TextContentControllerBase_addText, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_TextContentControllerBase_deleteText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto range_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextRange range_value_buf = {};
        range_value_buf.tag = range_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (range_value_buf_runtimeType))
        {
            range_value_buf.value = thisDeserializer.readTextRange();
        }
        Opt_TextRange range_value = range_value_buf;;
        GetAccessors()->getTextContentControllerBaseAccessor()->deleteText(self, (const Opt_TextRange*)&range_value);
}
KOALA_INTEROP_DIRECT_V3(TextContentControllerBase_deleteText, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_TextContentControllerBase_getSelection(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        const auto &retValue = GetAccessors()->getTextContentControllerBaseAccessor()->getSelection(self);
        Serializer _retSerializer {};
        _retSerializer.writeTextRange(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextContentControllerBase_getSelection, KInteropReturnBuffer, Ark_NativePointer)
void impl_TextContentControllerBase_clearPreviewText(Ark_NativePointer thisPtr) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        GetAccessors()->getTextContentControllerBaseAccessor()->clearPreviewText(self);
}
KOALA_INTEROP_DIRECT_V1(TextContentControllerBase_clearPreviewText, Ark_NativePointer)
Ark_String impl_TextContentControllerBase_getText(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextContentControllerBase self = reinterpret_cast<Ark_TextContentControllerBase>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto range_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextRange range_value_buf = {};
        range_value_buf.tag = range_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (range_value_buf_runtimeType))
        {
            range_value_buf.value = thisDeserializer.readTextRange();
        }
        Opt_TextRange range_value = range_value_buf;;
        return GetAccessors()->getTextContentControllerBaseAccessor()->getText(self, (const Opt_TextRange*)&range_value);
}
KOALA_INTEROP_3(TextContentControllerBase_getText, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ChildrenMainSize_ctor(KInteropNumber childDefaultSize) {
        return GetAccessors()->getChildrenMainSizeAccessor()->ctor((const Ark_Number*) (&childDefaultSize));
}
KOALA_INTEROP_DIRECT_1(ChildrenMainSize_ctor, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_ChildrenMainSize_getFinalizer() {
        return GetAccessors()->getChildrenMainSizeAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ChildrenMainSize_getFinalizer, Ark_NativePointer)
void impl_ChildrenMainSize_splice(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto deleteCount_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number deleteCount_value_buf = {};
        deleteCount_value_buf.tag = deleteCount_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (deleteCount_value_buf_runtimeType))
        {
            deleteCount_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number deleteCount_value = deleteCount_value_buf;;
        const auto childrenSize_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number childrenSize_value_buf = {};
        childrenSize_value_buf.tag = childrenSize_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (childrenSize_value_buf_runtimeType))
        {
            const Ark_Int32 childrenSize_value_buf__length = thisDeserializer.readInt32();
            Array_Number childrenSize_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(childrenSize_value_buf_)>::type,
        std::decay<decltype(*childrenSize_value_buf_.array)>::type>(&childrenSize_value_buf_, childrenSize_value_buf__length);
            for (int childrenSize_value_buf__i = 0; childrenSize_value_buf__i < childrenSize_value_buf__length; childrenSize_value_buf__i++) {
                childrenSize_value_buf_.array[childrenSize_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            childrenSize_value_buf.value = childrenSize_value_buf_;
        }
        Opt_Array_Number childrenSize_value = childrenSize_value_buf;;
        GetAccessors()->getChildrenMainSizeAccessor()->splice(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Opt_Number*)&deleteCount_value, (const Opt_Array_Number*)&childrenSize_value);
}
KOALA_INTEROP_CTX_V4(ChildrenMainSize_splice, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_ChildrenMainSize_update(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber childSize) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        GetAccessors()->getChildrenMainSizeAccessor()->update(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&index), (const Ark_Number*) (&childSize));
}
KOALA_INTEROP_CTX_V3(ChildrenMainSize_update, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_Number impl_ChildrenMainSize_getChildDefaultSize(Ark_NativePointer thisPtr) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        return GetAccessors()->getChildrenMainSizeAccessor()->getChildDefaultSize(self);
}
KOALA_INTEROP_DIRECT_1(ChildrenMainSize_getChildDefaultSize, KInteropNumber, Ark_NativePointer)
void impl_ChildrenMainSize_setChildDefaultSize(Ark_NativePointer thisPtr, KInteropNumber childDefaultSize) {
        Ark_ChildrenMainSize self = reinterpret_cast<Ark_ChildrenMainSize>(thisPtr);
        GetAccessors()->getChildrenMainSizeAccessor()->setChildDefaultSize(self, (const Ark_Number*) (&childDefaultSize));
}
KOALA_INTEROP_DIRECT_V2(ChildrenMainSize_setChildDefaultSize, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_UICommonEvent_ctor() {
        return GetAccessors()->getUICommonEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(UICommonEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_UICommonEvent_getFinalizer() {
        return GetAccessors()->getUICommonEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UICommonEvent_getFinalizer, Ark_NativePointer)
void impl_UICommonEvent_setOnClick(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_ClickEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_ClickEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_ClickEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_ClickEvent_Void))))};
        }
        Opt_Callback_ClickEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnClick(self, (const Opt_Callback_ClickEvent_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnClick, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnTouch(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_TouchEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_TouchEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_TouchEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_TouchEvent_Void))))};
        }
        Opt_Callback_TouchEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnTouch(self, (const Opt_Callback_TouchEvent_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnTouch, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnAppear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnAppear(self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnAppear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnDisappear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnDisappear(self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnDisappear, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnKeyEvent(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_KeyEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_KeyEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_KeyEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_KeyEvent_Void))))};
        }
        Opt_Callback_KeyEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnKeyEvent(self, (const Opt_Callback_KeyEvent_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnKeyEvent, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnFocus(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnFocus(self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnFocus, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnBlur(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnBlur(self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnBlur, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnHover(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_HoverCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_HoverCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isHover, const Ark_HoverEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_HoverCallback))))};
        }
        Opt_HoverCallback callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnHover(self, (const Opt_HoverCallback*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnHover, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnMouse(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_MouseEvent_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_MouseEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_MouseEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_MouseEvent_Void))))};
        }
        Opt_Callback_MouseEvent_Void callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnMouse(self, (const Opt_Callback_MouseEvent_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnMouse, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnSizeChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SizeChangeCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_SizeChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_SizeOptions oldValue, const Ark_SizeOptions newValue)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_SizeChangeCallback))))};
        }
        Opt_SizeChangeCallback callback__value = callback__value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnSizeChange(self, (const Opt_SizeChangeCallback*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnSizeChange, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UICommonEvent_setOnVisibleAreaApproximateChange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UICommonEvent self = reinterpret_cast<Ark_UICommonEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_VisibleAreaEventOptions options_value = thisDeserializer.readVisibleAreaEventOptions();;
        const auto event_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VisibleAreaChangeCallback event_value_buf = {};
        event_value_buf.tag = event_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (event_value_buf_runtimeType))
        {
            event_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VisibleAreaChangeCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Boolean isExpanding, const Ark_Number currentRatio)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VisibleAreaChangeCallback))))};
        }
        Opt_VisibleAreaChangeCallback event_value = event_value_buf;;
        GetAccessors()->getUICommonEventAccessor()->setOnVisibleAreaApproximateChange(self, (const Ark_VisibleAreaEventOptions*)&options_value, (const Opt_VisibleAreaChangeCallback*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(UICommonEvent_setOnVisibleAreaApproximateChange, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureModifier_ctor() {
        return GetAccessors()->getGestureModifierAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(GestureModifier_ctor, Ark_NativePointer)
Ark_NativePointer impl_GestureModifier_getFinalizer() {
        return GetAccessors()->getGestureModifierAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureModifier_getFinalizer, Ark_NativePointer)
void impl_GestureModifier_applyGesture(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureModifier self = reinterpret_cast<Ark_GestureModifier>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_UIGestureEvent event_value = thisDeserializer.readUIGestureEvent();;
        GetAccessors()->getGestureModifierAccessor()->applyGesture(self, (const Ark_UIGestureEvent*)&event_value);
}
KOALA_INTEROP_DIRECT_V3(GestureModifier_applyGesture, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavPathInfo_ctor(const KStringPtr& name, Ark_Boolean isEntry) {
    return GetAccessors()->getNavPathInfoAccessor()->ctor((const Ark_String*) (&name), isEntry);
}
KOALA_INTEROP_2(NavPathInfo_ctor, Ark_NativePointer, KStringPtr, Ark_Boolean)
Ark_NativePointer impl_NavPathInfo_getFinalizer() {
        return GetAccessors()->getNavPathInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavPathInfo_getFinalizer, Ark_NativePointer)
Ark_String impl_NavPathInfo_getName(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        return GetAccessors()->getNavPathInfoAccessor()->getName(self);
}
KOALA_INTEROP_1(NavPathInfo_getName, KStringPtr, Ark_NativePointer)
void impl_NavPathInfo_setName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        GetAccessors()->getNavPathInfoAccessor()->setName(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_V2(NavPathInfo_setName, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathInfo_getParam(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getParam(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getParam, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setParam(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (param_value_buf_runtimeType))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        GetAccessors()->getNavPathInfoAccessor()->setParam(self, (const Opt_Object*)&param_value);
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setParam, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathInfo_getOnPop(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathInfoAccessor()->getOnPop(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCallbackResource(retValue_value.resource);
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.call));
            _retSerializer.writePointer(reinterpret_cast<Ark_NativePointer>(retValue_value.callSync));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathInfo_getOnPop, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathInfo_setOnPop(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_PopInfo_Void onPop_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};;
        GetAccessors()->getNavPathInfoAccessor()->setOnPop(self, (const Callback_PopInfo_Void*)&onPop_value);
}
KOALA_INTEROP_DIRECT_V3(NavPathInfo_setOnPop, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_NavPathInfo_getIsEntry(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        return GetAccessors()->getNavPathInfoAccessor()->getIsEntry(self);
}
KOALA_INTEROP_1(NavPathInfo_getIsEntry, Ark_Boolean, Ark_NativePointer)
void impl_NavPathInfo_setIsEntry(Ark_NativePointer thisPtr, Ark_Boolean isEntry) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        GetAccessors()->getNavPathInfoAccessor()->setIsEntry(self, isEntry);
}
KOALA_INTEROP_DIRECT_V2(NavPathInfo_setIsEntry, Ark_NativePointer, Ark_Boolean)
Ark_String impl_NavPathInfo_getNavDestinationId(Ark_NativePointer thisPtr) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        return GetAccessors()->getNavPathInfoAccessor()->getNavDestinationId(self);
}
KOALA_INTEROP_1(NavPathInfo_getNavDestinationId, KStringPtr, Ark_NativePointer)
void impl_NavPathInfo_setNavDestinationId(Ark_NativePointer thisPtr, const KStringPtr& navDestinationId) {
        Ark_NavPathInfo self = reinterpret_cast<Ark_NavPathInfo>(thisPtr);
        GetAccessors()->getNavPathInfoAccessor()->setNavDestinationId(self, (const Ark_String*) (&navDestinationId));
}
KOALA_INTEROP_V2(NavPathInfo_setNavDestinationId, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_NavPathStack_ctor() {
        return GetAccessors()->getNavPathStackAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(NavPathStack_ctor, Ark_NativePointer)
Ark_NativePointer impl_NavPathStack_getFinalizer() {
        return GetAccessors()->getNavPathStackAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavPathStack_getFinalizer, Ark_NativePointer)
void impl_NavPathStack_pushPath0(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPath0(self, static_cast<Ark_NavPathInfo>(info), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_pushPath0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPath1(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationOptions();
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPath1(self, static_cast<Ark_NavPathInfo>(info), (const Opt_NavigationOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_pushPath1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestination0(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestination0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), (const Opt_Boolean*)&animated_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestination0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestination1(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationOptions();
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestination1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), (const Opt_NavigationOptions*)&options_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestination1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPathByName0(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto param_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object param_value_buf = {};
        param_value_buf.tag = param_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (param_value_buf_runtimeType))
        {
            param_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object param_value = param_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPathByName0(self, (const Ark_String*) (&name), (const Opt_Object*)&param_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_V4(NavPathStack_pushPathByName0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushPathByName1(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Callback_PopInfo_Void onPop_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->pushPathByName1(self, (const Ark_String*) (&name), (const Ark_Object*)&param_value, (const Callback_PopInfo_Void*)&onPop_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_V4(NavPathStack_pushPathByName1, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestinationByName0(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestinationByName0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&name), (const Ark_Object*)&param_value, (const Opt_Boolean*)&animated_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestinationByName0, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_pushDestinationByName1(KVMContext vmContext, Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Callback_PopInfo_Void onPop_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_PopInfo_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_PopInfo parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_PopInfo_Void))))};;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->pushDestinationByName1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_String*) (&name), (const Ark_Object*)&param_value, (const Callback_PopInfo_Void*)&onPop_value, (const Opt_Boolean*)&animated_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V4(NavPathStack_pushDestinationByName1, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePath0(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePath0(self, static_cast<Ark_NavPathInfo>(info), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_replacePath0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePath1(Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationOptions();
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePath1(self, static_cast<Ark_NavPathInfo>(info), (const Opt_NavigationOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_replacePath1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replaceDestination(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer info, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NavigationOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readNavigationOptions();
        }
        Opt_NavigationOptions options_value = options_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getNavPathStackAccessor()->replaceDestination(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, static_cast<Ark_NavPathInfo>(info), (const Opt_NavigationOptions*)&options_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V4(NavPathStack_replaceDestination, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_NavPathStack_replacePathByName(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object param_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->replacePathByName(self, (const Ark_String*) (&name), (const Ark_Object*)&param_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_V4(NavPathStack_replacePathByName, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_removeByIndexes(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 indexes_value_buf_length = thisDeserializer.readInt32();
        Array_Number indexes_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(indexes_value_buf)>::type,
        std::decay<decltype(*indexes_value_buf.array)>::type>(&indexes_value_buf, indexes_value_buf_length);
        for (int indexes_value_buf_i = 0; indexes_value_buf_i < indexes_value_buf_length; indexes_value_buf_i++) {
            indexes_value_buf.array[indexes_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number indexes_value = indexes_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->removeByIndexes(self, (const Array_Number*)&indexes_value);
}
KOALA_INTEROP_DIRECT_3(NavPathStack_removeByIndexes, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_removeByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->removeByName(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_2(NavPathStack_removeByName, KInteropNumber, Ark_NativePointer, KStringPtr)
Ark_Boolean impl_NavPathStack_removeByNavDestinationId(Ark_NativePointer thisPtr, const KStringPtr& navDestinationId) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->removeByNavDestinationId(self, (const Ark_String*) (&navDestinationId));
}
KOALA_INTEROP_2(NavPathStack_removeByNavDestinationId, Ark_Boolean, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_pop0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->pop0(self, (const Opt_Boolean*)&animated_value);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNavPathInfo(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(NavPathStack_pop0, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_pop1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->pop1(self, (const Ark_Object*)&result_value, (const Opt_Boolean*)&animated_value);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNavPathInfo(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(NavPathStack_pop1, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_popToName0(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->popToName0(self, (const Ark_String*) (&name), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_4(NavPathStack_popToName0, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_popToName1(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->popToName1(self, (const Ark_String*) (&name), (const Ark_Object*)&result_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_4(NavPathStack_popToName1, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_popToIndex0(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->popToIndex0(self, (const Ark_Number*) (&index), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_popToIndex0, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_NavPathStack_popToIndex1(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object result_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->popToIndex1(self, (const Ark_Number*) (&index), (const Ark_Object*)&result_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_popToIndex1, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Number impl_NavPathStack_moveToTop(Ark_NativePointer thisPtr, const KStringPtr& name, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        return GetAccessors()->getNavPathStackAccessor()->moveToTop(self, (const Ark_String*) (&name), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_4(NavPathStack_moveToTop, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_NavPathStack_moveIndexToTop(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->moveIndexToTop(self, (const Ark_Number*) (&index), (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V4(NavPathStack_moveIndexToTop, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_NavPathStack_clear(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->clear(self, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_clear, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_getAllPathName(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getAllPathName(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getAllPathName, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_NavPathStack_getParamByIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParamByIndex(self, (const Ark_Number*) (&index));
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getParamByIndex, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_NavPathStack_getParamByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParamByName(self, (const Ark_String*) (&name));
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Opt_Object retValue_element = retValue.array[i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = runtimeType(retValue_element);
            _retSerializer.writeInt8(retValue_element_type);
            if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_element_type)) {
                const auto retValue_element_value = retValue_element.value;
                _retSerializer.writeObject(retValue_element_value);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getParamByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_getIndexByName(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getIndexByName(self, (const Ark_String*) (&name));
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_Number retValue_element = retValue.array[i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(NavPathStack_getIndexByName, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_NavPathStack_getParent(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getParent(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNavPathStack(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getParent, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_NavPathStack_size(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        return GetAccessors()->getNavPathStackAccessor()->size(self);
}
KOALA_INTEROP_DIRECT_1(NavPathStack_size, KInteropNumber, Ark_NativePointer)
void impl_NavPathStack_disableAnimation(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        GetAccessors()->getNavPathStackAccessor()->disableAnimation(self, value);
}
KOALA_INTEROP_DIRECT_V2(NavPathStack_disableAnimation, Ark_NativePointer, Ark_Boolean)
void impl_NavPathStack_setInterception(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_NavigationInterception interception_value = thisDeserializer.readNavigationInterception();;
        GetAccessors()->getNavPathStackAccessor()->setInterception(self, (const Ark_NavigationInterception*)&interception_value);
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_setInterception, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavPathStack_getPathStack(Ark_NativePointer thisPtr) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        const auto &retValue = GetAccessors()->getNavPathStackAccessor()->getPathStack(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_NavPathInfo retValue_element = retValue.array[i];
            _retSerializer.writeNavPathInfo(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavPathStack_getPathStack, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavPathStack_setPathStack(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavPathStack self = reinterpret_cast<Ark_NavPathStack>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 pathStack_value_buf_length = thisDeserializer.readInt32();
        Array_NavPathInfo pathStack_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(pathStack_value_buf)>::type,
        std::decay<decltype(*pathStack_value_buf.array)>::type>(&pathStack_value_buf, pathStack_value_buf_length);
        for (int pathStack_value_buf_i = 0; pathStack_value_buf_i < pathStack_value_buf_length; pathStack_value_buf_i++) {
            pathStack_value_buf.array[pathStack_value_buf_i] = static_cast<Ark_NavPathInfo>(thisDeserializer.readNavPathInfo());
        }
        Array_NavPathInfo pathStack_value = pathStack_value_buf;;
        const auto animated_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean animated_value_buf = {};
        animated_value_buf.tag = animated_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animated_value_buf_runtimeType))
        {
            animated_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean animated_value = animated_value_buf;;
        GetAccessors()->getNavPathStackAccessor()->setPathStack(self, (const Array_NavPathInfo*)&pathStack_value, (const Opt_Boolean*)&animated_value);
}
KOALA_INTEROP_DIRECT_V3(NavPathStack_setPathStack, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_NavigationTransitionProxy_ctor() {
        return GetAccessors()->getNavigationTransitionProxyAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(NavigationTransitionProxy_ctor, Ark_NativePointer)
Ark_NativePointer impl_NavigationTransitionProxy_getFinalizer() {
        return GetAccessors()->getNavigationTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavigationTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_NavigationTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        GetAccessors()->getNavigationTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(NavigationTransitionProxy_finishTransition, Ark_NativePointer)
void impl_NavigationTransitionProxy_cancelTransition(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        GetAccessors()->getNavigationTransitionProxyAccessor()->cancelTransition(self);
}
KOALA_INTEROP_DIRECT_V1(NavigationTransitionProxy_cancelTransition, Ark_NativePointer)
void impl_NavigationTransitionProxy_updateTransition(Ark_NativePointer thisPtr, KInteropNumber progress) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        GetAccessors()->getNavigationTransitionProxyAccessor()->updateTransition(self, (const Ark_Number*) (&progress));
}
KOALA_INTEROP_DIRECT_V2(NavigationTransitionProxy_updateTransition, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_NavigationTransitionProxy_getFrom(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getFrom(self);
        Serializer _retSerializer {};
        _retSerializer.writeNavContentInfo(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getFrom, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setFrom(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_NavContentInfo from_value = thisDeserializer.readNavContentInfo();;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setFrom(self, (const Ark_NavContentInfo*)&from_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setFrom, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getTo(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getTo(self);
        Serializer _retSerializer {};
        _retSerializer.writeNavContentInfo(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getTo, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_NavContentInfo to_value = thisDeserializer.readNavContentInfo();;
        GetAccessors()->getNavigationTransitionProxyAccessor()->setTo(self, (const Ark_NavContentInfo*)&to_value);
}
KOALA_INTEROP_DIRECT_V3(NavigationTransitionProxy_setTo, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_NavigationTransitionProxy_getIsInteractive(Ark_NativePointer thisPtr) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        const auto &retValue = GetAccessors()->getNavigationTransitionProxyAccessor()->getIsInteractive(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavigationTransitionProxy_getIsInteractive, KInteropReturnBuffer, Ark_NativePointer)
void impl_NavigationTransitionProxy_setIsInteractive(Ark_NativePointer thisPtr, Ark_Boolean isInteractive) {
        Ark_NavigationTransitionProxy self = reinterpret_cast<Ark_NavigationTransitionProxy>(thisPtr);
        GetAccessors()->getNavigationTransitionProxyAccessor()->setIsInteractive(self, isInteractive);
}
KOALA_INTEROP_DIRECT_V2(NavigationTransitionProxy_setIsInteractive, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_CanvasGradient_ctor() {
        return GetAccessors()->getCanvasGradientAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CanvasGradient_ctor, Ark_NativePointer)
Ark_NativePointer impl_CanvasGradient_getFinalizer() {
        return GetAccessors()->getCanvasGradientAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasGradient_getFinalizer, Ark_NativePointer)
void impl_CanvasGradient_addColorStop(Ark_NativePointer thisPtr, KInteropNumber offset, const KStringPtr& color) {
        Ark_CanvasGradient self = reinterpret_cast<Ark_CanvasGradient>(thisPtr);
        GetAccessors()->getCanvasGradientAccessor()->addColorStop(self, (const Ark_Number*) (&offset), (const Ark_String*) (&color));
}
KOALA_INTEROP_V3(CanvasGradient_addColorStop, Ark_NativePointer, KInteropNumber, KStringPtr)
Ark_NativePointer impl_CanvasPath_ctor() {
        return GetAccessors()->getCanvasPathAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CanvasPath_ctor, Ark_NativePointer)
Ark_NativePointer impl_CanvasPath_getFinalizer() {
        return GetAccessors()->getCanvasPathAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasPath_getFinalizer, Ark_NativePointer)
void impl_CanvasPath_arc(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radius, KInteropNumber startAngle, KInteropNumber endAngle, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto counterclockwise_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean counterclockwise_value_buf = {};
        counterclockwise_value_buf.tag = counterclockwise_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (counterclockwise_value_buf_runtimeType))
        {
            counterclockwise_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean counterclockwise_value = counterclockwise_value_buf;;
        GetAccessors()->getCanvasPathAccessor()->arc(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radius), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&endAngle), (const Opt_Boolean*)&counterclockwise_value);
}
KOALA_INTEROP_DIRECT_V8(CanvasPath_arc, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_CanvasPath_arcTo(Ark_NativePointer thisPtr, KInteropNumber x1, KInteropNumber y1, KInteropNumber x2, KInteropNumber y2, KInteropNumber radius) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->arcTo(self, (const Ark_Number*) (&x1), (const Ark_Number*) (&y1), (const Ark_Number*) (&x2), (const Ark_Number*) (&y2), (const Ark_Number*) (&radius));
}
KOALA_INTEROP_DIRECT_V6(CanvasPath_arcTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_bezierCurveTo(Ark_NativePointer thisPtr, KInteropNumber cp1x, KInteropNumber cp1y, KInteropNumber cp2x, KInteropNumber cp2y, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->bezierCurveTo(self, (const Ark_Number*) (&cp1x), (const Ark_Number*) (&cp1y), (const Ark_Number*) (&cp2x), (const Ark_Number*) (&cp2y), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V7(CanvasPath_bezierCurveTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_closePath(Ark_NativePointer thisPtr) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->closePath(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasPath_closePath, Ark_NativePointer)
void impl_CanvasPath_ellipse(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber radiusX, KInteropNumber radiusY, KInteropNumber rotation, KInteropNumber startAngle, KInteropNumber endAngle, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto counterclockwise_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean counterclockwise_value_buf = {};
        counterclockwise_value_buf.tag = counterclockwise_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (counterclockwise_value_buf_runtimeType))
        {
            counterclockwise_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean counterclockwise_value = counterclockwise_value_buf;;
        GetAccessors()->getCanvasPathAccessor()->ellipse(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&radiusX), (const Ark_Number*) (&radiusY), (const Ark_Number*) (&rotation), (const Ark_Number*) (&startAngle), (const Ark_Number*) (&endAngle), (const Opt_Boolean*)&counterclockwise_value);
}
KOALA_INTEROP_DIRECT_V10(CanvasPath_ellipse, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_CanvasPath_lineTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->lineTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasPath_lineTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasPath_moveTo(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->moveTo(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasPath_moveTo, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasPath_quadraticCurveTo(Ark_NativePointer thisPtr, KInteropNumber cpx, KInteropNumber cpy, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->quadraticCurveTo(self, (const Ark_Number*) (&cpx), (const Ark_Number*) (&cpy), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V5(CanvasPath_quadraticCurveTo, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasPath_rect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasPath self = reinterpret_cast<Ark_CanvasPath>(thisPtr);
        GetAccessors()->getCanvasPathAccessor()->rect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasPath_rect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_Path2D_ctor() {
        return GetAccessors()->getPath2DAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Path2D_ctor, Ark_NativePointer)
Ark_NativePointer impl_Path2D_getFinalizer() {
        return GetAccessors()->getPath2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Path2D_getFinalizer, Ark_NativePointer)
void impl_Path2D_addPath(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Path2D self = reinterpret_cast<Ark_Path2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (transform_value_buf_runtimeType))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(thisDeserializer.readMatrix2D());
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getPath2DAccessor()->addPath(self, static_cast<Ark_Path2D>(path), (const Opt_Matrix2D*)&transform_value);
}
KOALA_INTEROP_DIRECT_V4(Path2D_addPath, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasPattern_ctor() {
        return GetAccessors()->getCanvasPatternAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CanvasPattern_ctor, Ark_NativePointer)
Ark_NativePointer impl_CanvasPattern_getFinalizer() {
        return GetAccessors()->getCanvasPatternAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasPattern_getFinalizer, Ark_NativePointer)
void impl_CanvasPattern_setTransform(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasPattern self = reinterpret_cast<Ark_CanvasPattern>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (transform_value_buf_runtimeType))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(thisDeserializer.readMatrix2D());
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getCanvasPatternAccessor()->setTransform(self, (const Opt_Matrix2D*)&transform_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasPattern_setTransform, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageBitmap_ctor(const KStringPtr& src) {
        return GetAccessors()->getImageBitmapAccessor()->ctor((const Ark_String*) (&src));
}
KOALA_INTEROP_1(ImageBitmap_ctor, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_ImageBitmap_getFinalizer() {
        return GetAccessors()->getImageBitmapAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageBitmap_getFinalizer, Ark_NativePointer)
void impl_ImageBitmap_close(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        GetAccessors()->getImageBitmapAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(ImageBitmap_close, Ark_NativePointer)
Ark_Number impl_ImageBitmap_getHeight(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        return GetAccessors()->getImageBitmapAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(ImageBitmap_getHeight, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ImageBitmap_getWidth(Ark_NativePointer thisPtr) {
        Ark_ImageBitmap self = reinterpret_cast<Ark_ImageBitmap>(thisPtr);
        return GetAccessors()->getImageBitmapAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(ImageBitmap_getWidth, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_ImageData_ctor(KInteropNumber width, KInteropNumber height, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto data_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Buffer data_value_buf = {};
        data_value_buf.tag = data_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (data_value_buf_runtimeType))
        {
            data_value_buf.value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        Opt_Buffer data_value = data_value_buf;;
        return GetAccessors()->getImageDataAccessor()->ctor((const Ark_Number*) (&width), (const Ark_Number*) (&height), (const Opt_Buffer*)&data_value);
}
KOALA_INTEROP_DIRECT_4(ImageData_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageData_getFinalizer() {
        return GetAccessors()->getImageDataAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageData_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageData_getData(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        const auto &retValue = GetAccessors()->getImageDataAccessor()->getData(self);
        Serializer _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageData_getData, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_ImageData_getHeight(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        return GetAccessors()->getImageDataAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(ImageData_getHeight, KInteropNumber, Ark_NativePointer)
Ark_Number impl_ImageData_getWidth(Ark_NativePointer thisPtr) {
        Ark_ImageData self = reinterpret_cast<Ark_ImageData>(thisPtr);
        return GetAccessors()->getImageDataAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(ImageData_getWidth, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_RenderingContextSettings_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto antialias_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean antialias_value_buf = {};
        antialias_value_buf.tag = antialias_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (antialias_value_buf_runtimeType))
        {
            antialias_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean antialias_value = antialias_value_buf;;
        return GetAccessors()->getRenderingContextSettingsAccessor()->ctor((const Opt_Boolean*)&antialias_value);
}
KOALA_INTEROP_DIRECT_2(RenderingContextSettings_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RenderingContextSettings_getFinalizer() {
        return GetAccessors()->getRenderingContextSettingsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RenderingContextSettings_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_RenderingContextSettings_getAntialias(Ark_NativePointer thisPtr) {
        Ark_RenderingContextSettings self = reinterpret_cast<Ark_RenderingContextSettings>(thisPtr);
        const auto &retValue = GetAccessors()->getRenderingContextSettingsAccessor()->getAntialias(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RenderingContextSettings_getAntialias, KInteropReturnBuffer, Ark_NativePointer)
void impl_RenderingContextSettings_setAntialias(Ark_NativePointer thisPtr, Ark_Boolean antialias) {
        Ark_RenderingContextSettings self = reinterpret_cast<Ark_RenderingContextSettings>(thisPtr);
        GetAccessors()->getRenderingContextSettingsAccessor()->setAntialias(self, antialias);
}
KOALA_INTEROP_DIRECT_V2(RenderingContextSettings_setAntialias, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_CanvasRenderer_ctor() {
        return GetAccessors()->getCanvasRendererAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderer_ctor, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderer_getFinalizer() {
        return GetAccessors()->getCanvasRendererAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderer_getFinalizer, Ark_NativePointer)
void impl_CanvasRenderer_drawImage0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber dx, KInteropNumber dy) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(thisDeserializer.readImageBitmap());
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_NativePointer>(thisDeserializer.readPointer());
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage0(self, (const Ark_Union_ImageBitmap_PixelMap*)&image_value, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_drawImage0, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_drawImage1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber dx, KInteropNumber dy, KInteropNumber dw, KInteropNumber dh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(thisDeserializer.readImageBitmap());
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_NativePointer>(thisDeserializer.readPointer());
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage1(self, (const Ark_Union_ImageBitmap_PixelMap*)&image_value, (const Ark_Number*) (&dx), (const Ark_Number*) (&dy), (const Ark_Number*) (&dw), (const Ark_Number*) (&dh));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_drawImage1, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_drawImage2(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh, KInteropNumber dx, KInteropNumber dy, KInteropNumber dw, KInteropNumber dh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 image_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ImageBitmap_PixelMap image_value_buf = {};
        image_value_buf.selector = image_value_buf_selector;
        if (image_value_buf_selector == 0) {
            image_value_buf.selector = 0;
            image_value_buf.value0 = static_cast<Ark_ImageBitmap>(thisDeserializer.readImageBitmap());
        }
        else if (image_value_buf_selector == 1) {
            image_value_buf.selector = 1;
            image_value_buf.value1 = static_cast<Ark_NativePointer>(thisDeserializer.readPointer());
        }
        else {
            INTEROP_FATAL("One of the branches for image_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ImageBitmap_PixelMap image_value = static_cast<Ark_Union_ImageBitmap_PixelMap>(image_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->drawImage2(self, (const Ark_Union_ImageBitmap_PixelMap*)&image_value, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh), (const Ark_Number*) (&dx), (const Ark_Number*) (&dy), (const Ark_Number*) (&dw), (const Ark_Number*) (&dh));
}
KOALA_INTEROP_DIRECT_V11(CanvasRenderer_drawImage2, Ark_NativePointer, KSerializerBuffer, int32_t, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_beginPath(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->beginPath(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_beginPath, Ark_NativePointer)
void impl_CanvasRenderer_clip0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fillRule_value_buf_runtimeType))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->clip0(self, (const Opt_String*)&fillRule_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_clip0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_clip1(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fillRule_value_buf_runtimeType))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->clip1(self, static_cast<Ark_Path2D>(path), (const Opt_String*)&fillRule_value);
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_clip1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_fill0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fillRule_value_buf_runtimeType))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fill0(self, (const Opt_String*)&fillRule_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_fill0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_fill1(Ark_NativePointer thisPtr, Ark_NativePointer path, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fillRule_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String fillRule_value_buf = {};
        fillRule_value_buf.tag = fillRule_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fillRule_value_buf_runtimeType))
        {
            fillRule_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String fillRule_value = fillRule_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fill1(self, static_cast<Ark_Path2D>(path), (const Opt_String*)&fillRule_value);
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_fill1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_stroke0(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->stroke0(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_stroke0, Ark_NativePointer)
void impl_CanvasRenderer_stroke1(Ark_NativePointer thisPtr, Ark_NativePointer path) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->stroke1(self, static_cast<Ark_Path2D>(path));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_stroke1, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderer_createLinearGradient(Ark_NativePointer thisPtr, KInteropNumber x0, KInteropNumber y0, KInteropNumber x1, KInteropNumber y1) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createLinearGradient(self, (const Ark_Number*) (&x0), (const Ark_Number*) (&y0), (const Ark_Number*) (&x1), (const Ark_Number*) (&y1));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_createLinearGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_CanvasRenderer_createPattern(Ark_NativePointer thisPtr, Ark_NativePointer image, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto repetition_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String repetition_value_buf = {};
        repetition_value_buf.tag = repetition_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (repetition_value_buf_runtimeType))
        {
            repetition_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String repetition_value = repetition_value_buf;;
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->createPattern(self, static_cast<Ark_ImageBitmap>(image), (const Opt_String*)&repetition_value);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeCanvasPattern(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_4(CanvasRenderer_createPattern, KInteropReturnBuffer, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_createRadialGradient(Ark_NativePointer thisPtr, KInteropNumber x0, KInteropNumber y0, KInteropNumber r0, KInteropNumber x1, KInteropNumber y1, KInteropNumber r1) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createRadialGradient(self, (const Ark_Number*) (&x0), (const Ark_Number*) (&y0), (const Ark_Number*) (&r0), (const Ark_Number*) (&x1), (const Ark_Number*) (&y1), (const Ark_Number*) (&r1));
}
KOALA_INTEROP_DIRECT_7(CanvasRenderer_createRadialGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createConicGradient(Ark_NativePointer thisPtr, KInteropNumber startAngle, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createConicGradient(self, (const Ark_Number*) (&startAngle), (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_4(CanvasRenderer_createConicGradient, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createImageData0(Ark_NativePointer thisPtr, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createImageData0(self, (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_3(CanvasRenderer_createImageData0, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_createImageData1(Ark_NativePointer thisPtr, Ark_NativePointer imagedata) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->createImageData1(self, static_cast<Ark_ImageData>(imagedata));
}
KOALA_INTEROP_DIRECT_2(CanvasRenderer_createImageData1, Ark_NativePointer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderer_getImageData(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getImageData(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_getImageData, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_CanvasRenderer_getPixelMap(Ark_NativePointer thisPtr, KInteropNumber sx, KInteropNumber sy, KInteropNumber sw, KInteropNumber sh) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getPixelMap(self, (const Ark_Number*) (&sx), (const Ark_Number*) (&sy), (const Ark_Number*) (&sw), (const Ark_Number*) (&sh));
}
KOALA_INTEROP_DIRECT_5(CanvasRenderer_getPixelMap, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_putImageData0(Ark_NativePointer thisPtr, Ark_NativePointer imagedata, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 dx_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dx_value_buf = {};
        dx_value_buf.selector = dx_value_buf_selector;
        if (dx_value_buf_selector == 0) {
            dx_value_buf.selector = 0;
            dx_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dx_value_buf_selector == 1) {
            dx_value_buf.selector = 1;
            dx_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dx_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dx_value = static_cast<Ark_Union_Number_String>(dx_value_buf);;
        const Ark_Int8 dy_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dy_value_buf = {};
        dy_value_buf.selector = dy_value_buf_selector;
        if (dy_value_buf_selector == 0) {
            dy_value_buf.selector = 0;
            dy_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dy_value_buf_selector == 1) {
            dy_value_buf.selector = 1;
            dy_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dy_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dy_value = static_cast<Ark_Union_Number_String>(dy_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->putImageData0(self, static_cast<Ark_ImageData>(imagedata), (const Ark_Union_Number_String*)&dx_value, (const Ark_Union_Number_String*)&dy_value);
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_putImageData0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_putImageData1(Ark_NativePointer thisPtr, Ark_NativePointer imagedata, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 dx_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dx_value_buf = {};
        dx_value_buf.selector = dx_value_buf_selector;
        if (dx_value_buf_selector == 0) {
            dx_value_buf.selector = 0;
            dx_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dx_value_buf_selector == 1) {
            dx_value_buf.selector = 1;
            dx_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dx_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dx_value = static_cast<Ark_Union_Number_String>(dx_value_buf);;
        const Ark_Int8 dy_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dy_value_buf = {};
        dy_value_buf.selector = dy_value_buf_selector;
        if (dy_value_buf_selector == 0) {
            dy_value_buf.selector = 0;
            dy_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dy_value_buf_selector == 1) {
            dy_value_buf.selector = 1;
            dy_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dy_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dy_value = static_cast<Ark_Union_Number_String>(dy_value_buf);;
        const Ark_Int8 dirtyX_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyX_value_buf = {};
        dirtyX_value_buf.selector = dirtyX_value_buf_selector;
        if (dirtyX_value_buf_selector == 0) {
            dirtyX_value_buf.selector = 0;
            dirtyX_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyX_value_buf_selector == 1) {
            dirtyX_value_buf.selector = 1;
            dirtyX_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyX_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyX_value = static_cast<Ark_Union_Number_String>(dirtyX_value_buf);;
        const Ark_Int8 dirtyY_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyY_value_buf = {};
        dirtyY_value_buf.selector = dirtyY_value_buf_selector;
        if (dirtyY_value_buf_selector == 0) {
            dirtyY_value_buf.selector = 0;
            dirtyY_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyY_value_buf_selector == 1) {
            dirtyY_value_buf.selector = 1;
            dirtyY_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyY_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyY_value = static_cast<Ark_Union_Number_String>(dirtyY_value_buf);;
        const Ark_Int8 dirtyWidth_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyWidth_value_buf = {};
        dirtyWidth_value_buf.selector = dirtyWidth_value_buf_selector;
        if (dirtyWidth_value_buf_selector == 0) {
            dirtyWidth_value_buf.selector = 0;
            dirtyWidth_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyWidth_value_buf_selector == 1) {
            dirtyWidth_value_buf.selector = 1;
            dirtyWidth_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyWidth_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyWidth_value = static_cast<Ark_Union_Number_String>(dirtyWidth_value_buf);;
        const Ark_Int8 dirtyHeight_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_Number_String dirtyHeight_value_buf = {};
        dirtyHeight_value_buf.selector = dirtyHeight_value_buf_selector;
        if (dirtyHeight_value_buf_selector == 0) {
            dirtyHeight_value_buf.selector = 0;
            dirtyHeight_value_buf.value0 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (dirtyHeight_value_buf_selector == 1) {
            dirtyHeight_value_buf.selector = 1;
            dirtyHeight_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for dirtyHeight_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_Number_String dirtyHeight_value = static_cast<Ark_Union_Number_String>(dirtyHeight_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->putImageData1(self, static_cast<Ark_ImageData>(imagedata), (const Ark_Union_Number_String*)&dx_value, (const Ark_Union_Number_String*)&dy_value, (const Ark_Union_Number_String*)&dirtyX_value, (const Ark_Union_Number_String*)&dirtyY_value, (const Ark_Union_Number_String*)&dirtyWidth_value, (const Ark_Union_Number_String*)&dirtyHeight_value);
}
KOALA_INTEROP_DIRECT_V4(CanvasRenderer_putImageData1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_getLineDash(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getLineDash(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_Number retValue_element = retValue.array[i];
            _retSerializer.writeNumber(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getLineDash, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setLineDash(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 segments_value_buf_length = thisDeserializer.readInt32();
        Array_Number segments_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(segments_value_buf)>::type,
        std::decay<decltype(*segments_value_buf.array)>::type>(&segments_value_buf, segments_value_buf_length);
        for (int segments_value_buf_i = 0; segments_value_buf_i < segments_value_buf_length; segments_value_buf_i++) {
            segments_value_buf.array[segments_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number segments_value = segments_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setLineDash(self, (const Array_Number*)&segments_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setLineDash, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_clearRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->clearRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_clearRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_fillRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->fillRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_fillRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_strokeRect(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y, KInteropNumber w, KInteropNumber h) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->strokeRect(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Ark_Number*) (&w), (const Ark_Number*) (&h));
}
KOALA_INTEROP_DIRECT_V5(CanvasRenderer_strokeRect, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_restore(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->restore(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_restore, Ark_NativePointer)
void impl_CanvasRenderer_save(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->save(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_save, Ark_NativePointer)
void impl_CanvasRenderer_fillText(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber x, KInteropNumber y, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto maxWidth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number maxWidth_value_buf = {};
        maxWidth_value_buf.tag = maxWidth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (maxWidth_value_buf_runtimeType))
        {
            maxWidth_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number maxWidth_value = maxWidth_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->fillText(self, (const Ark_String*) (&text), (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Opt_Number*)&maxWidth_value);
}
KOALA_INTEROP_V6(CanvasRenderer_fillText, Ark_NativePointer, KStringPtr, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_measureText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->measureText(self, (const Ark_String*) (&text));
        Serializer _retSerializer {};
        _retSerializer.writeTextMetrics(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(CanvasRenderer_measureText, KInteropReturnBuffer, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_strokeText(Ark_NativePointer thisPtr, const KStringPtr& text, KInteropNumber x, KInteropNumber y, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto maxWidth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number maxWidth_value_buf = {};
        maxWidth_value_buf.tag = maxWidth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (maxWidth_value_buf_runtimeType))
        {
            maxWidth_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number maxWidth_value = maxWidth_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->strokeText(self, (const Ark_String*) (&text), (const Ark_Number*) (&x), (const Ark_Number*) (&y), (const Opt_Number*)&maxWidth_value);
}
KOALA_INTEROP_V6(CanvasRenderer_strokeText, Ark_NativePointer, KStringPtr, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderer_getTransform(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getTransform(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getTransform, Ark_NativePointer, Ark_NativePointer)
void impl_CanvasRenderer_resetTransform(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->resetTransform(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_resetTransform, Ark_NativePointer)
void impl_CanvasRenderer_rotate(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->rotate(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_rotate, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_scale(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->scale(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_scale, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setTransform0(Ark_NativePointer thisPtr, KInteropNumber a, KInteropNumber b, KInteropNumber c, KInteropNumber d, KInteropNumber e, KInteropNumber f) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTransform0(self, (const Ark_Number*) (&a), (const Ark_Number*) (&b), (const Ark_Number*) (&c), (const Ark_Number*) (&d), (const Ark_Number*) (&e), (const Ark_Number*) (&f));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_setTransform0, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setTransform1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto transform_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D transform_value_buf = {};
        transform_value_buf.tag = transform_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (transform_value_buf_runtimeType))
        {
            transform_value_buf.value = static_cast<Ark_Matrix2D>(thisDeserializer.readMatrix2D());
        }
        Opt_Matrix2D transform_value = transform_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setTransform1(self, (const Opt_Matrix2D*)&transform_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setTransform1, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_transform(Ark_NativePointer thisPtr, KInteropNumber a, KInteropNumber b, KInteropNumber c, KInteropNumber d, KInteropNumber e, KInteropNumber f) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->transform(self, (const Ark_Number*) (&a), (const Ark_Number*) (&b), (const Ark_Number*) (&c), (const Ark_Number*) (&d), (const Ark_Number*) (&e), (const Ark_Number*) (&f));
}
KOALA_INTEROP_DIRECT_V7(CanvasRenderer_transform, Ark_NativePointer, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_translate(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->translate(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_translate, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_CanvasRenderer_setPixelMap(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_NativePointer value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = static_cast<Ark_NativePointer>(thisDeserializer.readPointer());
        }
        Opt_NativePointer value_value = value_value_buf;;
        GetAccessors()->getCanvasRendererAccessor()->setPixelMap(self, (const Opt_NativePointer*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setPixelMap, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderer_transferFromImageBitmap(Ark_NativePointer thisPtr, Ark_NativePointer bitmap) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->transferFromImageBitmap(self, static_cast<Ark_ImageBitmap>(bitmap));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_transferFromImageBitmap, Ark_NativePointer, Ark_NativePointer)
void impl_CanvasRenderer_saveLayer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->saveLayer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_saveLayer, Ark_NativePointer)
void impl_CanvasRenderer_restoreLayer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->restoreLayer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_restoreLayer, Ark_NativePointer)
void impl_CanvasRenderer_reset(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_reset, Ark_NativePointer)
KInteropReturnBuffer impl_CanvasRenderer_getLetterSpacing(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getLetterSpacing(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeLengthMetrics(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeString(retValue_1);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getLetterSpacing, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setLetterSpacing(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 letterSpacing_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_LengthMetrics_String letterSpacing_value_buf = {};
        letterSpacing_value_buf.selector = letterSpacing_value_buf_selector;
        if (letterSpacing_value_buf_selector == 0) {
            letterSpacing_value_buf.selector = 0;
            letterSpacing_value_buf.value0 = static_cast<Ark_LengthMetrics>(thisDeserializer.readLengthMetrics());
        }
        else if (letterSpacing_value_buf_selector == 1) {
            letterSpacing_value_buf.selector = 1;
            letterSpacing_value_buf.value1 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else {
            INTEROP_FATAL("One of the branches for letterSpacing_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_LengthMetrics_String letterSpacing_value = static_cast<Ark_Union_LengthMetrics_String>(letterSpacing_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setLetterSpacing(self, (const Ark_Union_LengthMetrics_String*)&letterSpacing_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setLetterSpacing, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_CanvasRenderer_getGlobalAlpha(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getGlobalAlpha(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getGlobalAlpha, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setGlobalAlpha(Ark_NativePointer thisPtr, KInteropNumber globalAlpha) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setGlobalAlpha(self, (const Ark_Number*) (&globalAlpha));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setGlobalAlpha, Ark_NativePointer, KInteropNumber)
Ark_String impl_CanvasRenderer_getGlobalCompositeOperation(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getGlobalCompositeOperation(self);
}
KOALA_INTEROP_1(CanvasRenderer_getGlobalCompositeOperation, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setGlobalCompositeOperation(Ark_NativePointer thisPtr, const KStringPtr& globalCompositeOperation) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setGlobalCompositeOperation(self, (const Ark_String*) (&globalCompositeOperation));
}
KOALA_INTEROP_V2(CanvasRenderer_setGlobalCompositeOperation, Ark_NativePointer, KStringPtr)
KInteropReturnBuffer impl_CanvasRenderer_getFillStyle(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getFillStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeString(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeNumber(retValue_1);
        }
        else if (retValue_type == 2) {
            _retSerializer.writeInt8(2);
            const auto retValue_2 = retValue.value2;
            _retSerializer.writeCanvasGradient(retValue_2);
        }
        else if (retValue_type == 3) {
            _retSerializer.writeInt8(3);
            const auto retValue_3 = retValue.value3;
            _retSerializer.writeCanvasPattern(retValue_3);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getFillStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setFillStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 fillStyle_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_CanvasGradient_CanvasPattern fillStyle_value_buf = {};
        fillStyle_value_buf.selector = fillStyle_value_buf_selector;
        if (fillStyle_value_buf_selector == 0) {
            fillStyle_value_buf.selector = 0;
            fillStyle_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (fillStyle_value_buf_selector == 1) {
            fillStyle_value_buf.selector = 1;
            fillStyle_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (fillStyle_value_buf_selector == 2) {
            fillStyle_value_buf.selector = 2;
            fillStyle_value_buf.value2 = static_cast<Ark_CanvasGradient>(thisDeserializer.readCanvasGradient());
        }
        else if (fillStyle_value_buf_selector == 3) {
            fillStyle_value_buf.selector = 3;
            fillStyle_value_buf.value3 = static_cast<Ark_CanvasPattern>(thisDeserializer.readCanvasPattern());
        }
        else {
            INTEROP_FATAL("One of the branches for fillStyle_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_CanvasGradient_CanvasPattern fillStyle_value = static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern>(fillStyle_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setFillStyle(self, (const Ark_Union_String_Number_CanvasGradient_CanvasPattern*)&fillStyle_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setFillStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_CanvasRenderer_getStrokeStyle(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        const auto &retValue = GetAccessors()->getCanvasRendererAccessor()->getStrokeStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = retValue.selector;
        if (retValue_type == 0) {
            _retSerializer.writeInt8(0);
            const auto retValue_0 = retValue.value0;
            _retSerializer.writeString(retValue_0);
        }
        else if (retValue_type == 1) {
            _retSerializer.writeInt8(1);
            const auto retValue_1 = retValue.value1;
            _retSerializer.writeNumber(retValue_1);
        }
        else if (retValue_type == 2) {
            _retSerializer.writeInt8(2);
            const auto retValue_2 = retValue.value2;
            _retSerializer.writeCanvasGradient(retValue_2);
        }
        else if (retValue_type == 3) {
            _retSerializer.writeInt8(3);
            const auto retValue_3 = retValue.value3;
            _retSerializer.writeCanvasPattern(retValue_3);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(CanvasRenderer_getStrokeStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_CanvasRenderer_setStrokeStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 strokeStyle_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_CanvasGradient_CanvasPattern strokeStyle_value_buf = {};
        strokeStyle_value_buf.selector = strokeStyle_value_buf_selector;
        if (strokeStyle_value_buf_selector == 0) {
            strokeStyle_value_buf.selector = 0;
            strokeStyle_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (strokeStyle_value_buf_selector == 1) {
            strokeStyle_value_buf.selector = 1;
            strokeStyle_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (strokeStyle_value_buf_selector == 2) {
            strokeStyle_value_buf.selector = 2;
            strokeStyle_value_buf.value2 = static_cast<Ark_CanvasGradient>(thisDeserializer.readCanvasGradient());
        }
        else if (strokeStyle_value_buf_selector == 3) {
            strokeStyle_value_buf.selector = 3;
            strokeStyle_value_buf.value3 = static_cast<Ark_CanvasPattern>(thisDeserializer.readCanvasPattern());
        }
        else {
            INTEROP_FATAL("One of the branches for strokeStyle_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_CanvasGradient_CanvasPattern strokeStyle_value = static_cast<Ark_Union_String_Number_CanvasGradient_CanvasPattern>(strokeStyle_value_buf);;
        GetAccessors()->getCanvasRendererAccessor()->setStrokeStyle(self, (const Ark_Union_String_Number_CanvasGradient_CanvasPattern*)&strokeStyle_value);
}
KOALA_INTEROP_DIRECT_V3(CanvasRenderer_setStrokeStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_String impl_CanvasRenderer_getFilter(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getFilter(self);
}
KOALA_INTEROP_1(CanvasRenderer_getFilter, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setFilter(Ark_NativePointer thisPtr, const KStringPtr& filter) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setFilter(self, (const Ark_String*) (&filter));
}
KOALA_INTEROP_V2(CanvasRenderer_setFilter, Ark_NativePointer, KStringPtr)
Ark_Boolean impl_CanvasRenderer_getImageSmoothingEnabled(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getImageSmoothingEnabled(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getImageSmoothingEnabled, Ark_Boolean, Ark_NativePointer)
void impl_CanvasRenderer_setImageSmoothingEnabled(Ark_NativePointer thisPtr, Ark_Boolean imageSmoothingEnabled) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setImageSmoothingEnabled(self, imageSmoothingEnabled);
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setImageSmoothingEnabled, Ark_NativePointer, Ark_Boolean)
void impl_CanvasRenderer_getImageSmoothingQuality(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getImageSmoothingQuality(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getImageSmoothingQuality, Ark_NativePointer)
void impl_CanvasRenderer_setImageSmoothingQuality(Ark_NativePointer thisPtr, const KStringPtr& imageSmoothingQuality) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setImageSmoothingQuality(self, (const Ark_String*) (&imageSmoothingQuality));
}
KOALA_INTEROP_V2(CanvasRenderer_setImageSmoothingQuality, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getLineCap(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getLineCap(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getLineCap, Ark_NativePointer)
void impl_CanvasRenderer_setLineCap(Ark_NativePointer thisPtr, const KStringPtr& lineCap) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineCap(self, (const Ark_String*) (&lineCap));
}
KOALA_INTEROP_V2(CanvasRenderer_setLineCap, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getLineDashOffset(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getLineDashOffset(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getLineDashOffset, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setLineDashOffset(Ark_NativePointer thisPtr, KInteropNumber lineDashOffset) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineDashOffset(self, (const Ark_Number*) (&lineDashOffset));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setLineDashOffset, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_getLineJoin(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getLineJoin(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getLineJoin, Ark_NativePointer)
void impl_CanvasRenderer_setLineJoin(Ark_NativePointer thisPtr, const KStringPtr& lineJoin) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineJoin(self, (const Ark_String*) (&lineJoin));
}
KOALA_INTEROP_V2(CanvasRenderer_setLineJoin, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getLineWidth(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getLineWidth(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getLineWidth, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setLineWidth(Ark_NativePointer thisPtr, KInteropNumber lineWidth) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setLineWidth(self, (const Ark_Number*) (&lineWidth));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setLineWidth, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getMiterLimit(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getMiterLimit(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getMiterLimit, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setMiterLimit(Ark_NativePointer thisPtr, KInteropNumber miterLimit) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setMiterLimit(self, (const Ark_Number*) (&miterLimit));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setMiterLimit, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getShadowBlur(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowBlur(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowBlur, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowBlur(Ark_NativePointer thisPtr, KInteropNumber shadowBlur) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowBlur(self, (const Ark_Number*) (&shadowBlur));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowBlur, Ark_NativePointer, KInteropNumber)
Ark_String impl_CanvasRenderer_getShadowColor(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowColor(self);
}
KOALA_INTEROP_1(CanvasRenderer_getShadowColor, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setShadowColor(Ark_NativePointer thisPtr, const KStringPtr& shadowColor) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowColor(self, (const Ark_String*) (&shadowColor));
}
KOALA_INTEROP_V2(CanvasRenderer_setShadowColor, Ark_NativePointer, KStringPtr)
Ark_Number impl_CanvasRenderer_getShadowOffsetX(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowOffsetX, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowOffsetX(Ark_NativePointer thisPtr, KInteropNumber shadowOffsetX) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowOffsetX(self, (const Ark_Number*) (&shadowOffsetX));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_CanvasRenderer_getShadowOffsetY(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getShadowOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderer_getShadowOffsetY, KInteropNumber, Ark_NativePointer)
void impl_CanvasRenderer_setShadowOffsetY(Ark_NativePointer thisPtr, KInteropNumber shadowOffsetY) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setShadowOffsetY(self, (const Ark_Number*) (&shadowOffsetY));
}
KOALA_INTEROP_DIRECT_V2(CanvasRenderer_setShadowOffsetY, Ark_NativePointer, KInteropNumber)
void impl_CanvasRenderer_getDirection(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getDirection, Ark_NativePointer)
void impl_CanvasRenderer_setDirection(Ark_NativePointer thisPtr, const KStringPtr& direction) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setDirection(self, (const Ark_String*) (&direction));
}
KOALA_INTEROP_V2(CanvasRenderer_setDirection, Ark_NativePointer, KStringPtr)
Ark_String impl_CanvasRenderer_getFont(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        return GetAccessors()->getCanvasRendererAccessor()->getFont(self);
}
KOALA_INTEROP_1(CanvasRenderer_getFont, KStringPtr, Ark_NativePointer)
void impl_CanvasRenderer_setFont(Ark_NativePointer thisPtr, const KStringPtr& font) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setFont(self, (const Ark_String*) (&font));
}
KOALA_INTEROP_V2(CanvasRenderer_setFont, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getTextAlign(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getTextAlign(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getTextAlign, Ark_NativePointer)
void impl_CanvasRenderer_setTextAlign(Ark_NativePointer thisPtr, const KStringPtr& textAlign) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTextAlign(self, (const Ark_String*) (&textAlign));
}
KOALA_INTEROP_V2(CanvasRenderer_setTextAlign, Ark_NativePointer, KStringPtr)
void impl_CanvasRenderer_getTextBaseline(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->getTextBaseline(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderer_getTextBaseline, Ark_NativePointer)
void impl_CanvasRenderer_setTextBaseline(Ark_NativePointer thisPtr, const KStringPtr& textBaseline) {
        Ark_CanvasRenderer self = reinterpret_cast<Ark_CanvasRenderer>(thisPtr);
        GetAccessors()->getCanvasRendererAccessor()->setTextBaseline(self, (const Ark_String*) (&textBaseline));
}
KOALA_INTEROP_V2(CanvasRenderer_setTextBaseline, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_CanvasRenderingContext2D_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto settings_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings settings_value_buf = {};
        settings_value_buf.tag = settings_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (settings_value_buf_runtimeType))
        {
            settings_value_buf.value = static_cast<Ark_RenderingContextSettings>(thisDeserializer.readRenderingContextSettings());
        }
        Opt_RenderingContextSettings settings_value = settings_value_buf;;
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->ctor((const Opt_RenderingContextSettings*)&settings_value);
}
KOALA_INTEROP_DIRECT_2(CanvasRenderingContext2D_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CanvasRenderingContext2D_getFinalizer() {
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CanvasRenderingContext2D_getFinalizer, Ark_NativePointer)
Ark_String impl_CanvasRenderingContext2D_toDataURL(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        const auto quality_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Float32 quality_value_buf = {};
        quality_value_buf.tag = quality_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (quality_value_buf_runtimeType))
        {
            quality_value_buf.value = thisDeserializer.readFloat32();
        }
        Opt_Float32 quality_value = quality_value_buf;;
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->toDataURL(self, (const Opt_String*)&type_value, (const Opt_Float32*)&quality_value);
}
KOALA_INTEROP_3(CanvasRenderingContext2D_toDataURL, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_startImageAnalyzer(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ImageAnalyzerConfig config_value = thisDeserializer.readImageAnalyzerConfig();;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->startImageAnalyzer(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_ImageAnalyzerConfig*)&config_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_startImageAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_stopImageAnalyzer(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        GetAccessors()->getCanvasRenderingContext2DAccessor()->stopImageAnalyzer(self);
}
KOALA_INTEROP_DIRECT_V1(CanvasRenderingContext2D_stopImageAnalyzer, Ark_NativePointer)
void impl_CanvasRenderingContext2D_onOnAttach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->onOnAttach(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Callback_Void*)&callback__value);
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_onOnAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_onOnDetach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->onOnDetach(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Callback_Void*)&callback__value);
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_onOnDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_offOnAttach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->offOnAttach(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_offOnAttach, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CanvasRenderingContext2D_offOnDetach(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void callback__value = callback__value_buf;;
        GetAccessors()->getCanvasRenderingContext2DAccessor()->offOnDetach(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Opt_Callback_Void*)&callback__value);
}
KOALA_INTEROP_CTX_V3(CanvasRenderingContext2D_offOnDetach, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_CanvasRenderingContext2D_getHeight(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getHeight, KInteropNumber, Ark_NativePointer)
Ark_Number impl_CanvasRenderingContext2D_getWidth(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getWidth, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_CanvasRenderingContext2D_getCanvas(Ark_NativePointer thisPtr) {
        Ark_CanvasRenderingContext2D self = reinterpret_cast<Ark_CanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getCanvasRenderingContext2DAccessor()->getCanvas(self);
}
KOALA_INTEROP_DIRECT_1(CanvasRenderingContext2D_getCanvas, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_ctor(KInteropNumber width, KInteropNumber height, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto settings_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings settings_value_buf = {};
        settings_value_buf.tag = settings_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (settings_value_buf_runtimeType))
        {
            settings_value_buf.value = static_cast<Ark_RenderingContextSettings>(thisDeserializer.readRenderingContextSettings());
        }
        Opt_RenderingContextSettings settings_value = settings_value_buf;;
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->ctor((const Ark_Number*) (&width), (const Ark_Number*) (&height), (const Opt_RenderingContextSettings*)&settings_value);
}
KOALA_INTEROP_DIRECT_4(OffscreenCanvasRenderingContext2D_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_getFinalizer() {
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(OffscreenCanvasRenderingContext2D_getFinalizer, Ark_NativePointer)
Ark_String impl_OffscreenCanvasRenderingContext2D_toDataURL(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_OffscreenCanvasRenderingContext2D self = reinterpret_cast<Ark_OffscreenCanvasRenderingContext2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto type_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String type_value_buf = {};
        type_value_buf.tag = type_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (type_value_buf_runtimeType))
        {
            type_value_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Opt_String type_value = type_value_buf;;
        const auto quality_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Float32 quality_value_buf = {};
        quality_value_buf.tag = quality_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (quality_value_buf_runtimeType))
        {
            quality_value_buf.value = thisDeserializer.readFloat32();
        }
        Opt_Float32 quality_value = quality_value_buf;;
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->toDataURL(self, (const Opt_String*)&type_value, (const Opt_Float32*)&quality_value);
}
KOALA_INTEROP_3(OffscreenCanvasRenderingContext2D_toDataURL, KStringPtr, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_OffscreenCanvasRenderingContext2D_transferToImageBitmap(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvasRenderingContext2D self = reinterpret_cast<Ark_OffscreenCanvasRenderingContext2D>(thisPtr);
        return GetAccessors()->getOffscreenCanvasRenderingContext2DAccessor()->transferToImageBitmap(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvasRenderingContext2D_transferToImageBitmap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_ctor(KInteropNumber width, KInteropNumber height) {
        return GetAccessors()->getOffscreenCanvasAccessor()->ctor((const Ark_Number*) (&width), (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_2(OffscreenCanvas_ctor, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_OffscreenCanvas_getFinalizer() {
        return GetAccessors()->getOffscreenCanvasAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(OffscreenCanvas_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_transferToImageBitmap(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->transferToImageBitmap(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_transferToImageBitmap, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_OffscreenCanvas_getContext2d(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RenderingContextSettings options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = static_cast<Ark_RenderingContextSettings>(thisDeserializer.readRenderingContextSettings());
        }
        Opt_RenderingContextSettings options_value = options_value_buf;;
        return GetAccessors()->getOffscreenCanvasAccessor()->getContext2d(self, (const Opt_RenderingContextSettings*)&options_value);
}
KOALA_INTEROP_DIRECT_3(OffscreenCanvas_getContext2d, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_OffscreenCanvas_getHeight(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->getHeight(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_getHeight, KInteropNumber, Ark_NativePointer)
void impl_OffscreenCanvas_setHeight(Ark_NativePointer thisPtr, KInteropNumber height) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        GetAccessors()->getOffscreenCanvasAccessor()->setHeight(self, (const Ark_Number*) (&height));
}
KOALA_INTEROP_DIRECT_V2(OffscreenCanvas_setHeight, Ark_NativePointer, KInteropNumber)
Ark_Number impl_OffscreenCanvas_getWidth(Ark_NativePointer thisPtr) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        return GetAccessors()->getOffscreenCanvasAccessor()->getWidth(self);
}
KOALA_INTEROP_DIRECT_1(OffscreenCanvas_getWidth, KInteropNumber, Ark_NativePointer)
void impl_OffscreenCanvas_setWidth(Ark_NativePointer thisPtr, KInteropNumber width) {
        Ark_OffscreenCanvas self = reinterpret_cast<Ark_OffscreenCanvas>(thisPtr);
        GetAccessors()->getOffscreenCanvasAccessor()->setWidth(self, (const Ark_Number*) (&width));
}
KOALA_INTEROP_DIRECT_V2(OffscreenCanvas_setWidth, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_DrawingRenderingContext_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto unit_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LengthMetricsUnit unit_value_buf = {};
        unit_value_buf.tag = unit_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (unit_value_buf_runtimeType))
        {
            unit_value_buf.value = static_cast<Ark_LengthMetricsUnit>(thisDeserializer.readInt32());
        }
        Opt_LengthMetricsUnit unit_value = unit_value_buf;;
        return GetAccessors()->getDrawingRenderingContextAccessor()->ctor((const Opt_LengthMetricsUnit*)&unit_value);
}
KOALA_INTEROP_DIRECT_2(DrawingRenderingContext_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DrawingRenderingContext_getFinalizer() {
        return GetAccessors()->getDrawingRenderingContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DrawingRenderingContext_getFinalizer, Ark_NativePointer)
void impl_DrawingRenderingContext_invalidate(Ark_NativePointer thisPtr) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        GetAccessors()->getDrawingRenderingContextAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(DrawingRenderingContext_invalidate, Ark_NativePointer)
KInteropReturnBuffer impl_DrawingRenderingContext_getSize(Ark_NativePointer thisPtr) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        const auto &retValue = GetAccessors()->getDrawingRenderingContextAccessor()->getSize(self);
        Serializer _retSerializer {};
        _retSerializer.writeSize(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DrawingRenderingContext_getSize, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_DrawingRenderingContext_getCanvas(Ark_NativePointer thisPtr) {
        Ark_DrawingRenderingContext self = reinterpret_cast<Ark_DrawingRenderingContext>(thisPtr);
        return GetAccessors()->getDrawingRenderingContextAccessor()->getCanvas(self);
}
KOALA_INTEROP_DIRECT_1(DrawingRenderingContext_getCanvas, Ark_NativePointer, Ark_NativePointer)
void impl_ContextMenu_close() {
        GetAccessors()->getContextMenuAccessor()->close();
}
KOALA_INTEROP_DIRECT_V0(ContextMenu_close)
Ark_NativePointer impl_CustomDialogController_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_CustomDialogControllerOptions value_value = thisDeserializer.readCustomDialogControllerOptions();;
        return GetAccessors()->getCustomDialogControllerAccessor()->ctor((const Ark_CustomDialogControllerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_2(CustomDialogController_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_CustomDialogController_getFinalizer() {
        return GetAccessors()->getCustomDialogControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CustomDialogController_getFinalizer, Ark_NativePointer)
void impl_CustomDialogController_open(Ark_NativePointer thisPtr) {
        Ark_CustomDialogController self = reinterpret_cast<Ark_CustomDialogController>(thisPtr);
        GetAccessors()->getCustomDialogControllerAccessor()->open(self);
}
KOALA_INTEROP_DIRECT_V1(CustomDialogController_open, Ark_NativePointer)
void impl_CustomDialogController_close(Ark_NativePointer thisPtr) {
        Ark_CustomDialogController self = reinterpret_cast<Ark_CustomDialogController>(thisPtr);
        GetAccessors()->getCustomDialogControllerAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(CustomDialogController_close, Ark_NativePointer)
Ark_NativePointer impl_LinearGradient_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 colorStops_value_buf_length = thisDeserializer.readInt32();
        Array_ColorStop colorStops_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(colorStops_value_buf)>::type,
        std::decay<decltype(*colorStops_value_buf.array)>::type>(&colorStops_value_buf, colorStops_value_buf_length);
        for (int colorStops_value_buf_i = 0; colorStops_value_buf_i < colorStops_value_buf_length; colorStops_value_buf_i++) {
            colorStops_value_buf.array[colorStops_value_buf_i] = thisDeserializer.readColorStop();
        }
        Array_ColorStop colorStops_value = colorStops_value_buf;;
        return GetAccessors()->getLinearGradientAccessor()->ctor((const Array_ColorStop*)&colorStops_value);
}
KOALA_INTEROP_DIRECT_2(LinearGradient_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LinearGradient_getFinalizer() {
        return GetAccessors()->getLinearGradientAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LinearGradient_getFinalizer, Ark_NativePointer)
void impl_DatePickerDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_DatePickerDialogOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readDatePickerDialogOptions();
        }
        Opt_DatePickerDialogOptions options_value = options_value_buf;;
        GetAccessors()->getDatePickerDialogAccessor()->show((const Opt_DatePickerDialogOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V2(DatePickerDialog_show, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BaseGestureEvent_ctor() {
        return GetAccessors()->getBaseGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(BaseGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_BaseGestureEvent_getFinalizer() {
        return GetAccessors()->getBaseGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaseGestureEvent_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BaseGestureEvent_getFingerList(Ark_NativePointer thisPtr) {
        Ark_BaseGestureEvent self = reinterpret_cast<Ark_BaseGestureEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getBaseGestureEventAccessor()->getFingerList(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_FingerInfo retValue_element = retValue.array[i];
            _retSerializer.writeFingerInfo(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BaseGestureEvent_getFingerList, KInteropReturnBuffer, Ark_NativePointer)
void impl_BaseGestureEvent_setFingerList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_BaseGestureEvent self = reinterpret_cast<Ark_BaseGestureEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fingerList_value_buf_length = thisDeserializer.readInt32();
        Array_FingerInfo fingerList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fingerList_value_buf)>::type,
        std::decay<decltype(*fingerList_value_buf.array)>::type>(&fingerList_value_buf, fingerList_value_buf_length);
        for (int fingerList_value_buf_i = 0; fingerList_value_buf_i < fingerList_value_buf_length; fingerList_value_buf_i++) {
            fingerList_value_buf.array[fingerList_value_buf_i] = thisDeserializer.readFingerInfo();
        }
        Array_FingerInfo fingerList_value = fingerList_value_buf;;
        GetAccessors()->getBaseGestureEventAccessor()->setFingerList(self, (const Array_FingerInfo*)&fingerList_value);
}
KOALA_INTEROP_DIRECT_V3(BaseGestureEvent_setFingerList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TapGestureEvent_ctor() {
        return GetAccessors()->getTapGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TapGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_TapGestureEvent_getFinalizer() {
        return GetAccessors()->getTapGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapGestureEvent_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LongPressGestureEvent_ctor() {
        return GetAccessors()->getLongPressGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_LongPressGestureEvent_getFinalizer() {
        return GetAccessors()->getLongPressGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_LongPressGestureEvent_getRepeat(Ark_NativePointer thisPtr) {
        Ark_LongPressGestureEvent self = reinterpret_cast<Ark_LongPressGestureEvent>(thisPtr);
        return GetAccessors()->getLongPressGestureEventAccessor()->getRepeat(self);
}
KOALA_INTEROP_DIRECT_1(LongPressGestureEvent_getRepeat, Ark_Boolean, Ark_NativePointer)
void impl_LongPressGestureEvent_setRepeat(Ark_NativePointer thisPtr, Ark_Boolean repeat) {
        Ark_LongPressGestureEvent self = reinterpret_cast<Ark_LongPressGestureEvent>(thisPtr);
        GetAccessors()->getLongPressGestureEventAccessor()->setRepeat(self, repeat);
}
KOALA_INTEROP_DIRECT_V2(LongPressGestureEvent_setRepeat, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_PanGestureEvent_ctor() {
        return GetAccessors()->getPanGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PanGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_PanGestureEvent_getFinalizer() {
        return GetAccessors()->getPanGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_PanGestureEvent_getOffsetX(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getOffsetX, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setOffsetX(Ark_NativePointer thisPtr, KInteropNumber offsetX) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setOffsetX(self, (const Ark_Number*) (&offsetX));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getOffsetY(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getOffsetY, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setOffsetY(Ark_NativePointer thisPtr, KInteropNumber offsetY) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setOffsetY(self, (const Ark_Number*) (&offsetY));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setOffsetY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocityX(Ark_NativePointer thisPtr, KInteropNumber velocityX) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocityX(self, (const Ark_Number*) (&velocityX));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocityX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocityY(Ark_NativePointer thisPtr, KInteropNumber velocityY) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocityY(self, (const Ark_Number*) (&velocityY));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocityY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PanGestureEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        return GetAccessors()->getPanGestureEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureEvent_getVelocity, KInteropNumber, Ark_NativePointer)
void impl_PanGestureEvent_setVelocity(Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_PanGestureEvent self = reinterpret_cast<Ark_PanGestureEvent>(thisPtr);
        GetAccessors()->getPanGestureEventAccessor()->setVelocity(self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_V2(PanGestureEvent_setVelocity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_PinchGestureEvent_ctor() {
        return GetAccessors()->getPinchGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PinchGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_PinchGestureEvent_getFinalizer() {
        return GetAccessors()->getPinchGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_PinchGestureEvent_getScale(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getScale(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getScale, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setScale(Ark_NativePointer thisPtr, KInteropNumber scale) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setScale(self, (const Ark_Number*) (&scale));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setScale, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PinchGestureEvent_getPinchCenterX(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getPinchCenterX(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getPinchCenterX, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setPinchCenterX(Ark_NativePointer thisPtr, KInteropNumber pinchCenterX) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setPinchCenterX(self, (const Ark_Number*) (&pinchCenterX));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setPinchCenterX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_PinchGestureEvent_getPinchCenterY(Ark_NativePointer thisPtr) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        return GetAccessors()->getPinchGestureEventAccessor()->getPinchCenterY(self);
}
KOALA_INTEROP_DIRECT_1(PinchGestureEvent_getPinchCenterY, KInteropNumber, Ark_NativePointer)
void impl_PinchGestureEvent_setPinchCenterY(Ark_NativePointer thisPtr, KInteropNumber pinchCenterY) {
        Ark_PinchGestureEvent self = reinterpret_cast<Ark_PinchGestureEvent>(thisPtr);
        GetAccessors()->getPinchGestureEventAccessor()->setPinchCenterY(self, (const Ark_Number*) (&pinchCenterY));
}
KOALA_INTEROP_DIRECT_V2(PinchGestureEvent_setPinchCenterY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_RotationGestureEvent_ctor() {
        return GetAccessors()->getRotationGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(RotationGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_RotationGestureEvent_getFinalizer() {
        return GetAccessors()->getRotationGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_RotationGestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_RotationGestureEvent self = reinterpret_cast<Ark_RotationGestureEvent>(thisPtr);
        return GetAccessors()->getRotationGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(RotationGestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_RotationGestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_RotationGestureEvent self = reinterpret_cast<Ark_RotationGestureEvent>(thisPtr);
        GetAccessors()->getRotationGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(RotationGestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SwipeGestureEvent_ctor() {
        return GetAccessors()->getSwipeGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SwipeGestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_SwipeGestureEvent_getFinalizer() {
        return GetAccessors()->getSwipeGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeGestureEvent_getFinalizer, Ark_NativePointer)
Ark_Number impl_SwipeGestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        return GetAccessors()->getSwipeGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(SwipeGestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_SwipeGestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        GetAccessors()->getSwipeGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(SwipeGestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwipeGestureEvent_getSpeed(Ark_NativePointer thisPtr) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        return GetAccessors()->getSwipeGestureEventAccessor()->getSpeed(self);
}
KOALA_INTEROP_DIRECT_1(SwipeGestureEvent_getSpeed, KInteropNumber, Ark_NativePointer)
void impl_SwipeGestureEvent_setSpeed(Ark_NativePointer thisPtr, KInteropNumber speed) {
        Ark_SwipeGestureEvent self = reinterpret_cast<Ark_SwipeGestureEvent>(thisPtr);
        GetAccessors()->getSwipeGestureEventAccessor()->setSpeed(self, (const Ark_Number*) (&speed));
}
KOALA_INTEROP_DIRECT_V2(SwipeGestureEvent_setSpeed, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_GestureEvent_ctor() {
        return GetAccessors()->getGestureEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(GestureEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_GestureEvent_getFinalizer() {
        return GetAccessors()->getGestureEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureEvent_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_GestureEvent_getRepeat(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getRepeat(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getRepeat, Ark_Boolean, Ark_NativePointer)
void impl_GestureEvent_setRepeat(Ark_NativePointer thisPtr, Ark_Boolean repeat) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setRepeat(self, repeat);
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setRepeat, Ark_NativePointer, Ark_Boolean)
KInteropReturnBuffer impl_GestureEvent_getFingerList(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        const auto &retValue = GetAccessors()->getGestureEventAccessor()->getFingerList(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_FingerInfo retValue_element = retValue.array[i];
            _retSerializer.writeFingerInfo(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GestureEvent_getFingerList, KInteropReturnBuffer, Ark_NativePointer)
void impl_GestureEvent_setFingerList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fingerList_value_buf_length = thisDeserializer.readInt32();
        Array_FingerInfo fingerList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fingerList_value_buf)>::type,
        std::decay<decltype(*fingerList_value_buf.array)>::type>(&fingerList_value_buf, fingerList_value_buf_length);
        for (int fingerList_value_buf_i = 0; fingerList_value_buf_i < fingerList_value_buf_length; fingerList_value_buf_i++) {
            fingerList_value_buf.array[fingerList_value_buf_i] = thisDeserializer.readFingerInfo();
        }
        Array_FingerInfo fingerList_value = fingerList_value_buf;;
        GetAccessors()->getGestureEventAccessor()->setFingerList(self, (const Array_FingerInfo*)&fingerList_value);
}
KOALA_INTEROP_DIRECT_V3(GestureEvent_setFingerList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_GestureEvent_getOffsetX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getOffsetX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getOffsetX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setOffsetX(Ark_NativePointer thisPtr, KInteropNumber offsetX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setOffsetX(self, (const Ark_Number*) (&offsetX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setOffsetX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getOffsetY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getOffsetY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getOffsetY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setOffsetY(Ark_NativePointer thisPtr, KInteropNumber offsetY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setOffsetY(self, (const Ark_Number*) (&offsetY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setOffsetY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getAngle(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getAngle, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setAngle(Ark_NativePointer thisPtr, KInteropNumber angle) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setAngle(self, (const Ark_Number*) (&angle));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setAngle, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getSpeed(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getSpeed(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getSpeed, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setSpeed(Ark_NativePointer thisPtr, KInteropNumber speed) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setSpeed(self, (const Ark_Number*) (&speed));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setSpeed, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getScale(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getScale(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getScale, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setScale(Ark_NativePointer thisPtr, KInteropNumber scale) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setScale(self, (const Ark_Number*) (&scale));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setScale, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getPinchCenterX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getPinchCenterX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getPinchCenterX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setPinchCenterX(Ark_NativePointer thisPtr, KInteropNumber pinchCenterX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setPinchCenterX(self, (const Ark_Number*) (&pinchCenterX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setPinchCenterX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getPinchCenterY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getPinchCenterY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getPinchCenterY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setPinchCenterY(Ark_NativePointer thisPtr, KInteropNumber pinchCenterY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setPinchCenterY(self, (const Ark_Number*) (&pinchCenterY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setPinchCenterY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocityX(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocityX(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocityX, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocityX(Ark_NativePointer thisPtr, KInteropNumber velocityX) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocityX(self, (const Ark_Number*) (&velocityX));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocityX, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocityY(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocityY(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocityY, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocityY(Ark_NativePointer thisPtr, KInteropNumber velocityY) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocityY(self, (const Ark_Number*) (&velocityY));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocityY, Ark_NativePointer, KInteropNumber)
Ark_Number impl_GestureEvent_getVelocity(Ark_NativePointer thisPtr) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        return GetAccessors()->getGestureEventAccessor()->getVelocity(self);
}
KOALA_INTEROP_DIRECT_1(GestureEvent_getVelocity, KInteropNumber, Ark_NativePointer)
void impl_GestureEvent_setVelocity(Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_GestureEvent self = reinterpret_cast<Ark_GestureEvent>(thisPtr);
        GetAccessors()->getGestureEventAccessor()->setVelocity(self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_DIRECT_V2(GestureEvent_setVelocity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TapGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TapGestureParameters value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTapGestureParameters();
        }
        Opt_TapGestureParameters value_value = value_value_buf;;
        return GetAccessors()->getTapGestureInterfaceAccessor()->ctor((const Opt_TapGestureParameters*)&value_value);
}
KOALA_INTEROP_DIRECT_2(TapGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TapGestureInterface_getFinalizer() {
        return GetAccessors()->getTapGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TapGestureInterface_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TapGestureInterface self = reinterpret_cast<Ark_TapGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getTapGestureInterfaceAccessor()->onAction(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(TapGestureInterface_onAction, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Number_duration_fingers_Boolean_repeat value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Number_duration_fingers_Boolean_repeat value_value_buf_ = {};
            const auto value_value_buf__fingers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__fingers_buf = {};
            value_value_buf__fingers_buf.tag = value_value_buf__fingers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__fingers_buf_runtimeType))
            {
                value_value_buf__fingers_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.fingers = value_value_buf__fingers_buf;
            const auto value_value_buf__repeat_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Boolean value_value_buf__repeat_buf = {};
            value_value_buf__repeat_buf.tag = value_value_buf__repeat_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__repeat_buf_runtimeType))
            {
                value_value_buf__repeat_buf.value = thisDeserializer.readBoolean();
            }
            value_value_buf_.repeat = value_value_buf__repeat_buf;
            const auto value_value_buf__duration_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__duration_buf = {};
            value_value_buf__duration_buf.tag = value_value_buf__duration_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__duration_buf_runtimeType))
            {
                value_value_buf__duration_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.duration = value_value_buf__duration_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Number_duration_fingers_Boolean_repeat value_value = value_value_buf;;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->ctor((const Opt_Literal_Number_duration_fingers_Boolean_repeat*)&value_value);
}
KOALA_INTEROP_DIRECT_2(LongPressGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_getFinalizer() {
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_LongPressGestureInterface_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onAction(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onAction, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionEnd(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionCancel0(self, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_LongPressGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LongPressGestureInterface self = reinterpret_cast<Ark_LongPressGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getLongPressGestureInterfaceAccessor()->onActionCancel1(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(LongPressGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureOptions_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_PanGestureHandlerOptions value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_PanGestureHandlerOptions value_value_buf_ = thisDeserializer.readPanGestureHandlerOptions();
            value_value_buf.value = value_value_buf_;
        }
        Opt_PanGestureHandlerOptions value_value = value_value_buf;;
        return GetAccessors()->getPanGestureOptionsAccessor()->ctor((const Opt_PanGestureHandlerOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_2(PanGestureOptions_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureOptions_getFinalizer() {
        return GetAccessors()->getPanGestureOptionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureOptions_getFinalizer, Ark_NativePointer)
void impl_PanGestureOptions_setDirection(Ark_NativePointer thisPtr, Ark_Int32 value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setDirection(self, static_cast<Ark_PanDirection>(value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setDirection, Ark_NativePointer, Ark_Int32)
void impl_PanGestureOptions_setDistance(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setDistance(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setDistance, Ark_NativePointer, KInteropNumber)
void impl_PanGestureOptions_setFingers(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        GetAccessors()->getPanGestureOptionsAccessor()->setFingers(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(PanGestureOptions_setFingers, Ark_NativePointer, KInteropNumber)
Ark_Int32 impl_PanGestureOptions_getDirection(Ark_NativePointer thisPtr) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        return GetAccessors()->getPanGestureOptionsAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureOptions_getDirection, Ark_Int32, Ark_NativePointer)
Ark_Number impl_PanGestureOptions_getDistance(Ark_NativePointer thisPtr) {
        Ark_PanGestureOptions self = reinterpret_cast<Ark_PanGestureOptions>(thisPtr);
        return GetAccessors()->getPanGestureOptionsAccessor()->getDistance(self);
}
KOALA_INTEROP_DIRECT_1(PanGestureOptions_getDistance, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_PanGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Type_PanGestureInterface_callable0_value value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            const Ark_Int8 value_value_buf__selector = thisDeserializer.readInt8();
            Ark_Type_PanGestureInterface_callable0_value value_value_buf_ = {};
            value_value_buf_.selector = value_value_buf__selector;
            if (value_value_buf__selector == 0) {
                value_value_buf_.selector = 0;
                Ark_Literal_Number_distance_fingers_PanDirection_direction value_value_buf__u = {};
                const auto value_value_buf__u_fingers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Number value_value_buf__u_fingers_buf = {};
                value_value_buf__u_fingers_buf.tag = value_value_buf__u_fingers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_fingers_buf_runtimeType))
                {
                    value_value_buf__u_fingers_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                value_value_buf__u.fingers = value_value_buf__u_fingers_buf;
                const auto value_value_buf__u_direction_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_PanDirection value_value_buf__u_direction_buf = {};
                value_value_buf__u_direction_buf.tag = value_value_buf__u_direction_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_direction_buf_runtimeType))
                {
                    value_value_buf__u_direction_buf.value = static_cast<Ark_PanDirection>(thisDeserializer.readInt32());
                }
                value_value_buf__u.direction = value_value_buf__u_direction_buf;
                const auto value_value_buf__u_distance_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
                Opt_Number value_value_buf__u_distance_buf = {};
                value_value_buf__u_distance_buf.tag = value_value_buf__u_distance_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
                if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__u_distance_buf_runtimeType))
                {
                    value_value_buf__u_distance_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
                }
                value_value_buf__u.distance = value_value_buf__u_distance_buf;
                value_value_buf_.value0 = value_value_buf__u;
            }
            else if (value_value_buf__selector == 1) {
                value_value_buf_.selector = 1;
                value_value_buf_.value1 = static_cast<Ark_PanGestureOptions>(thisDeserializer.readPanGestureOptions());
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_ has to be chosen through deserialisation.");
            }
            value_value_buf.value = static_cast<Ark_Type_PanGestureInterface_callable0_value>(value_value_buf_);
        }
        Opt_Type_PanGestureInterface_callable0_value value_value = value_value_buf;;
        return GetAccessors()->getPanGestureInterfaceAccessor()->ctor((const Opt_Type_PanGestureInterface_callable0_value*)&value_value);
}
KOALA_INTEROP_DIRECT_2(PanGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_getFinalizer() {
        return GetAccessors()->getPanGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PanGestureInterface_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionStart(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionStart, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionUpdate(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionUpdate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionEnd(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionCancel0(self, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PanGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PanGestureInterface self = reinterpret_cast<Ark_PanGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPanGestureInterfaceAccessor()->onActionCancel1(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PanGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SwipeGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Number_fingers_speed_SwipeDirection_direction value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Number_fingers_speed_SwipeDirection_direction value_value_buf_ = {};
            const auto value_value_buf__fingers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__fingers_buf = {};
            value_value_buf__fingers_buf.tag = value_value_buf__fingers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__fingers_buf_runtimeType))
            {
                value_value_buf__fingers_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.fingers = value_value_buf__fingers_buf;
            const auto value_value_buf__direction_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_SwipeDirection value_value_buf__direction_buf = {};
            value_value_buf__direction_buf.tag = value_value_buf__direction_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__direction_buf_runtimeType))
            {
                value_value_buf__direction_buf.value = static_cast<Ark_SwipeDirection>(thisDeserializer.readInt32());
            }
            value_value_buf_.direction = value_value_buf__direction_buf;
            const auto value_value_buf__speed_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__speed_buf = {};
            value_value_buf__speed_buf.tag = value_value_buf__speed_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__speed_buf_runtimeType))
            {
                value_value_buf__speed_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.speed = value_value_buf__speed_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Number_fingers_speed_SwipeDirection_direction value_value = value_value_buf;;
        return GetAccessors()->getSwipeGestureInterfaceAccessor()->ctor((const Opt_Literal_Number_fingers_speed_SwipeDirection_direction*)&value_value);
}
KOALA_INTEROP_DIRECT_2(SwipeGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SwipeGestureInterface_getFinalizer() {
        return GetAccessors()->getSwipeGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_SwipeGestureInterface_onAction(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwipeGestureInterface self = reinterpret_cast<Ark_SwipeGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getSwipeGestureInterfaceAccessor()->onAction(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(SwipeGestureInterface_onAction, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Number_distance_fingers value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Number_distance_fingers value_value_buf_ = {};
            const auto value_value_buf__fingers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__fingers_buf = {};
            value_value_buf__fingers_buf.tag = value_value_buf__fingers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__fingers_buf_runtimeType))
            {
                value_value_buf__fingers_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.fingers = value_value_buf__fingers_buf;
            const auto value_value_buf__distance_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__distance_buf = {};
            value_value_buf__distance_buf.tag = value_value_buf__distance_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__distance_buf_runtimeType))
            {
                value_value_buf__distance_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.distance = value_value_buf__distance_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Number_distance_fingers value_value = value_value_buf;;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->ctor((const Opt_Literal_Number_distance_fingers*)&value_value);
}
KOALA_INTEROP_DIRECT_2(PinchGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_getFinalizer() {
        return GetAccessors()->getPinchGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PinchGestureInterface_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionStart(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionStart, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionUpdate(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionUpdate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionEnd(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionCancel0(self, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_PinchGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PinchGestureInterface self = reinterpret_cast<Ark_PinchGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getPinchGestureInterfaceAccessor()->onActionCancel1(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(PinchGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Literal_Number_angle_fingers value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            Ark_Literal_Number_angle_fingers value_value_buf_ = {};
            const auto value_value_buf__fingers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__fingers_buf = {};
            value_value_buf__fingers_buf.tag = value_value_buf__fingers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__fingers_buf_runtimeType))
            {
                value_value_buf__fingers_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.fingers = value_value_buf__fingers_buf;
            const auto value_value_buf__angle_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
            Opt_Number value_value_buf__angle_buf = {};
            value_value_buf__angle_buf.tag = value_value_buf__angle_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
            if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf__angle_buf_runtimeType))
            {
                value_value_buf__angle_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            value_value_buf_.angle = value_value_buf__angle_buf;
            value_value_buf.value = value_value_buf_;
        }
        Opt_Literal_Number_angle_fingers value_value = value_value_buf;;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->ctor((const Opt_Literal_Number_angle_fingers*)&value_value);
}
KOALA_INTEROP_DIRECT_2(RotationGestureInterface_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_getFinalizer() {
        return GetAccessors()->getRotationGestureInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationGestureInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_RotationGestureInterface_onActionStart(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGestureInterface self = reinterpret_cast<Ark_RotationGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->onActionStart(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(RotationGestureInterface_onActionStart, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_onActionUpdate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGestureInterface self = reinterpret_cast<Ark_RotationGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->onActionUpdate(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(RotationGestureInterface_onActionUpdate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_onActionEnd(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGestureInterface self = reinterpret_cast<Ark_RotationGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->onActionEnd(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(RotationGestureInterface_onActionEnd, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_onActionCancel0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGestureInterface self = reinterpret_cast<Ark_RotationGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->onActionCancel0(self, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(RotationGestureInterface_onActionCancel0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RotationGestureInterface_onActionCancel1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RotationGestureInterface self = reinterpret_cast<Ark_RotationGestureInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_GestureEvent_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_GestureEvent_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_GestureEvent event)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_GestureEvent_Void))))};;
        return GetAccessors()->getRotationGestureInterfaceAccessor()->onActionCancel1(self, (const Callback_GestureEvent_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(RotationGestureInterface_onActionCancel1, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureGroupInterface_ctor(Ark_Int32 mode, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 gesture_value_buf_length = thisDeserializer.readInt32();
        Array_GestureType gesture_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(gesture_value_buf)>::type,
        std::decay<decltype(*gesture_value_buf.array)>::type>(&gesture_value_buf, gesture_value_buf_length);
        for (int gesture_value_buf_i = 0; gesture_value_buf_i < gesture_value_buf_length; gesture_value_buf_i++) {
            const Ark_Int8 gesture_value_buf_buf_selector = thisDeserializer.readInt8();
            Ark_GestureType gesture_value_buf_buf = {};
            gesture_value_buf_buf.selector = gesture_value_buf_buf_selector;
            if (gesture_value_buf_buf_selector == 0) {
                gesture_value_buf_buf.selector = 0;
                gesture_value_buf_buf.value0 = static_cast<Ark_TapGestureInterface>(thisDeserializer.readTapGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 1) {
                gesture_value_buf_buf.selector = 1;
                gesture_value_buf_buf.value1 = static_cast<Ark_LongPressGestureInterface>(thisDeserializer.readLongPressGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 2) {
                gesture_value_buf_buf.selector = 2;
                gesture_value_buf_buf.value2 = static_cast<Ark_PanGestureInterface>(thisDeserializer.readPanGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 3) {
                gesture_value_buf_buf.selector = 3;
                gesture_value_buf_buf.value3 = static_cast<Ark_PinchGestureInterface>(thisDeserializer.readPinchGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 4) {
                gesture_value_buf_buf.selector = 4;
                gesture_value_buf_buf.value4 = static_cast<Ark_SwipeGestureInterface>(thisDeserializer.readSwipeGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 5) {
                gesture_value_buf_buf.selector = 5;
                gesture_value_buf_buf.value5 = static_cast<Ark_RotationGestureInterface>(thisDeserializer.readRotationGestureInterface());
            }
            else if (gesture_value_buf_buf_selector == 6) {
                gesture_value_buf_buf.selector = 6;
                gesture_value_buf_buf.value6 = static_cast<Ark_GestureGroupInterface>(thisDeserializer.readGestureGroupInterface());
            }
            else {
                INTEROP_FATAL("One of the branches for gesture_value_buf_buf has to be chosen through deserialisation.");
            }
            gesture_value_buf.array[gesture_value_buf_i] = static_cast<Ark_GestureType>(gesture_value_buf_buf);
        }
        Array_GestureType gesture_value = gesture_value_buf;;
        return GetAccessors()->getGestureGroupInterfaceAccessor()->ctor(static_cast<Ark_GestureMode>(mode), (const Array_GestureType*)&gesture_value);
}
KOALA_INTEROP_DIRECT_3(GestureGroupInterface_ctor, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureGroupInterface_getFinalizer() {
        return GetAccessors()->getGestureGroupInterfaceAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureGroupInterface_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_GestureGroupInterface_onCancel(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_GestureGroupInterface self = reinterpret_cast<Ark_GestureGroupInterface>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        return GetAccessors()->getGestureGroupInterfaceAccessor()->onCancel(self, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_3(GestureGroupInterface_onCancel, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScrollableTargetInfo_ctor() {
        return GetAccessors()->getScrollableTargetInfoAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ScrollableTargetInfo_ctor, Ark_NativePointer)
Ark_NativePointer impl_ScrollableTargetInfo_getFinalizer() {
        return GetAccessors()->getScrollableTargetInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScrollableTargetInfo_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_ScrollableTargetInfo_isBegin(Ark_NativePointer thisPtr) {
        Ark_ScrollableTargetInfo self = reinterpret_cast<Ark_ScrollableTargetInfo>(thisPtr);
        return GetAccessors()->getScrollableTargetInfoAccessor()->isBegin(self);
}
KOALA_INTEROP_DIRECT_1(ScrollableTargetInfo_isBegin, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_ScrollableTargetInfo_isEnd(Ark_NativePointer thisPtr) {
        Ark_ScrollableTargetInfo self = reinterpret_cast<Ark_ScrollableTargetInfo>(thisPtr);
        return GetAccessors()->getScrollableTargetInfoAccessor()->isEnd(self);
}
KOALA_INTEROP_DIRECT_1(ScrollableTargetInfo_isEnd, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_EventTargetInfo_ctor() {
        return GetAccessors()->getEventTargetInfoAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(EventTargetInfo_ctor, Ark_NativePointer)
Ark_NativePointer impl_EventTargetInfo_getFinalizer() {
        return GetAccessors()->getEventTargetInfoAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EventTargetInfo_getFinalizer, Ark_NativePointer)
Ark_String impl_EventTargetInfo_getId(Ark_NativePointer thisPtr) {
        Ark_EventTargetInfo self = reinterpret_cast<Ark_EventTargetInfo>(thisPtr);
        return GetAccessors()->getEventTargetInfoAccessor()->getId(self);
}
KOALA_INTEROP_1(EventTargetInfo_getId, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_GestureRecognizer_ctor() {
        return GetAccessors()->getGestureRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(GestureRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_GestureRecognizer_getFinalizer() {
        return GetAccessors()->getGestureRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureRecognizer_getFinalizer, Ark_NativePointer)
Ark_String impl_GestureRecognizer_getTag(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getTag(self);
}
KOALA_INTEROP_1(GestureRecognizer_getTag, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_GestureRecognizer_getType(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getType, Ark_Int32, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isBuiltIn(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isBuiltIn(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isBuiltIn, Ark_Boolean, Ark_NativePointer)
void impl_GestureRecognizer_setEnabled(Ark_NativePointer thisPtr, Ark_Boolean isEnabled) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        GetAccessors()->getGestureRecognizerAccessor()->setEnabled(self, isEnabled);
}
KOALA_INTEROP_DIRECT_V2(GestureRecognizer_setEnabled, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_GestureRecognizer_isEnabled(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isEnabled(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isEnabled, Ark_Boolean, Ark_NativePointer)
Ark_Int32 impl_GestureRecognizer_getState(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getState(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getState, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_GestureRecognizer_getEventTargetInfo(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getEventTargetInfo(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getEventTargetInfo, Ark_NativePointer, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isValid(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isValid(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isValid, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_GestureRecognizer_getFingerCount(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->getFingerCount(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_getFingerCount, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_GestureRecognizer_isFingerCountLimit(Ark_NativePointer thisPtr) {
        Ark_GestureRecognizer self = reinterpret_cast<Ark_GestureRecognizer>(thisPtr);
        return GetAccessors()->getGestureRecognizerAccessor()->isFingerCountLimit(self);
}
KOALA_INTEROP_DIRECT_1(GestureRecognizer_isFingerCountLimit, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_TapRecognizer_ctor() {
        return GetAccessors()->getTapRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TapRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_TapRecognizer_getFinalizer() {
        return GetAccessors()->getTapRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TapRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_TapRecognizer_getTapCount(Ark_NativePointer thisPtr) {
        Ark_TapRecognizer self = reinterpret_cast<Ark_TapRecognizer>(thisPtr);
        return GetAccessors()->getTapRecognizerAccessor()->getTapCount(self);
}
KOALA_INTEROP_DIRECT_1(TapRecognizer_getTapCount, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_LongPressRecognizer_ctor() {
        return GetAccessors()->getLongPressRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(LongPressRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_LongPressRecognizer_getFinalizer() {
        return GetAccessors()->getLongPressRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LongPressRecognizer_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_LongPressRecognizer_isRepeat(Ark_NativePointer thisPtr) {
        Ark_LongPressRecognizer self = reinterpret_cast<Ark_LongPressRecognizer>(thisPtr);
        return GetAccessors()->getLongPressRecognizerAccessor()->isRepeat(self);
}
KOALA_INTEROP_DIRECT_1(LongPressRecognizer_isRepeat, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_LongPressRecognizer_getDuration(Ark_NativePointer thisPtr) {
        Ark_LongPressRecognizer self = reinterpret_cast<Ark_LongPressRecognizer>(thisPtr);
        return GetAccessors()->getLongPressRecognizerAccessor()->getDuration(self);
}
KOALA_INTEROP_DIRECT_1(LongPressRecognizer_getDuration, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_SwipeRecognizer_ctor() {
        return GetAccessors()->getSwipeRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SwipeRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_SwipeRecognizer_getFinalizer() {
        return GetAccessors()->getSwipeRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwipeRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_SwipeRecognizer_getVelocityThreshold(Ark_NativePointer thisPtr) {
        Ark_SwipeRecognizer self = reinterpret_cast<Ark_SwipeRecognizer>(thisPtr);
        return GetAccessors()->getSwipeRecognizerAccessor()->getVelocityThreshold(self);
}
KOALA_INTEROP_DIRECT_1(SwipeRecognizer_getVelocityThreshold, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_SwipeRecognizer_getDirection(Ark_NativePointer thisPtr) {
        Ark_SwipeRecognizer self = reinterpret_cast<Ark_SwipeRecognizer>(thisPtr);
        return GetAccessors()->getSwipeRecognizerAccessor()->getDirection(self);
}
KOALA_INTEROP_DIRECT_1(SwipeRecognizer_getDirection, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_PinchRecognizer_ctor() {
        return GetAccessors()->getPinchRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PinchRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_PinchRecognizer_getFinalizer() {
        return GetAccessors()->getPinchRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PinchRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_PinchRecognizer_getDistance(Ark_NativePointer thisPtr) {
        Ark_PinchRecognizer self = reinterpret_cast<Ark_PinchRecognizer>(thisPtr);
        return GetAccessors()->getPinchRecognizerAccessor()->getDistance(self);
}
KOALA_INTEROP_DIRECT_1(PinchRecognizer_getDistance, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_RotationRecognizer_ctor() {
        return GetAccessors()->getRotationRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(RotationRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_RotationRecognizer_getFinalizer() {
        return GetAccessors()->getRotationRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RotationRecognizer_getFinalizer, Ark_NativePointer)
Ark_Number impl_RotationRecognizer_getAngle(Ark_NativePointer thisPtr) {
        Ark_RotationRecognizer self = reinterpret_cast<Ark_RotationRecognizer>(thisPtr);
        return GetAccessors()->getRotationRecognizerAccessor()->getAngle(self);
}
KOALA_INTEROP_DIRECT_1(RotationRecognizer_getAngle, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_ctor() {
        return GetAccessors()->getPanRecognizerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PanRecognizer_ctor, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_getFinalizer() {
        return GetAccessors()->getPanRecognizerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PanRecognizer_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_PanRecognizer_getPanGestureOptions(Ark_NativePointer thisPtr) {
        Ark_PanRecognizer self = reinterpret_cast<Ark_PanRecognizer>(thisPtr);
        return GetAccessors()->getPanRecognizerAccessor()->getPanGestureOptions(self);
}
KOALA_INTEROP_DIRECT_1(PanRecognizer_getPanGestureOptions, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_ImageAnalyzerController_ctor() {
        return GetAccessors()->getImageAnalyzerControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ImageAnalyzerController_ctor, Ark_NativePointer)
Ark_NativePointer impl_ImageAnalyzerController_getFinalizer() {
        return GetAccessors()->getImageAnalyzerControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageAnalyzerController_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAnalyzerController_getImageAnalyzerSupportTypes(Ark_NativePointer thisPtr) {
        Ark_ImageAnalyzerController self = reinterpret_cast<Ark_ImageAnalyzerController>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAnalyzerControllerAccessor()->getImageAnalyzerSupportTypes(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_ImageAnalyzerType retValue_element = retValue.array[i];
            _retSerializer.writeInt32(static_cast<Ark_ImageAnalyzerType>(retValue_element));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAnalyzerController_getImageAnalyzerSupportTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_ListScroller_ctor() {
        return GetAccessors()->getListScrollerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ListScroller_ctor, Ark_NativePointer)
Ark_NativePointer impl_ListScroller_getFinalizer() {
        return GetAccessors()->getListScrollerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ListScroller_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ListScroller_getItemRectInGroup(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber indexInGroup) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        const auto &retValue = GetAccessors()->getListScrollerAccessor()->getItemRectInGroup(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&index), (const Ark_Number*) (&indexInGroup));
        Serializer _retSerializer {};
        _retSerializer.writeRectResult(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_3(ListScroller_getItemRectInGroup, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_ListScroller_scrollToItemInGroup(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber indexInGroup, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto smooth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean smooth_value_buf = {};
        smooth_value_buf.tag = smooth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (smooth_value_buf_runtimeType))
        {
            smooth_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean smooth_value = smooth_value_buf;;
        const auto align_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollAlign align_value_buf = {};
        align_value_buf.tag = align_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (align_value_buf_runtimeType))
        {
            align_value_buf.value = static_cast<Ark_ScrollAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollAlign align_value = align_value_buf;;
        GetAccessors()->getListScrollerAccessor()->scrollToItemInGroup(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&index), (const Ark_Number*) (&indexInGroup), (const Opt_Boolean*)&smooth_value, (const Opt_ScrollAlign*)&align_value);
}
KOALA_INTEROP_CTX_V5(ListScroller_scrollToItemInGroup, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_ListScroller_closeAllSwipeActions(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_CloseSwipeActionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readCloseSwipeActionOptions();
        }
        Opt_CloseSwipeActionOptions options_value = options_value_buf;;
        GetAccessors()->getListScrollerAccessor()->closeAllSwipeActions(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Opt_CloseSwipeActionOptions*)&options_value);
}
KOALA_INTEROP_CTX_V3(ListScroller_closeAllSwipeActions, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_ListScroller_getVisibleListContentInfo(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_ListScroller self = reinterpret_cast<Ark_ListScroller>(thisPtr);
        const auto &retValue = GetAccessors()->getListScrollerAccessor()->getVisibleListContentInfo(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
        Serializer _retSerializer {};
        _retSerializer.writeVisibleListContentInfo(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_3(ListScroller_getVisibleListContentInfo, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_Matrix2D_ctor() {
        return GetAccessors()->getMatrix2DAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Matrix2D_ctor, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_getFinalizer() {
        return GetAccessors()->getMatrix2DAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Matrix2D_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_identity(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        return GetAccessors()->getMatrix2DAccessor()->identity(self);
}
KOALA_INTEROP_DIRECT_1(Matrix2D_identity, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_invert(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        return GetAccessors()->getMatrix2DAccessor()->invert(self);
}
KOALA_INTEROP_DIRECT_1(Matrix2D_invert, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_Matrix2D_multiply(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto other_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Matrix2D other_value_buf = {};
        other_value_buf.tag = other_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (other_value_buf_runtimeType))
        {
            other_value_buf.value = static_cast<Ark_Matrix2D>(thisDeserializer.readMatrix2D());
        }
        Opt_Matrix2D other_value = other_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->multiply(self, (const Opt_Matrix2D*)&other_value);
}
KOALA_INTEROP_DIRECT_3(Matrix2D_multiply, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_rotate0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto rx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rx_value_buf = {};
        rx_value_buf.tag = rx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (rx_value_buf_runtimeType))
        {
            rx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rx_value = rx_value_buf;;
        const auto ry_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number ry_value_buf = {};
        ry_value_buf.tag = ry_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ry_value_buf_runtimeType))
        {
            ry_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number ry_value = ry_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->rotate0(self, (const Opt_Number*)&rx_value, (const Opt_Number*)&ry_value);
}
KOALA_INTEROP_DIRECT_3(Matrix2D_rotate0, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_rotate1(Ark_NativePointer thisPtr, KInteropNumber degree, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto rx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number rx_value_buf = {};
        rx_value_buf.tag = rx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (rx_value_buf_runtimeType))
        {
            rx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number rx_value = rx_value_buf;;
        const auto ry_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number ry_value_buf = {};
        ry_value_buf.tag = ry_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ry_value_buf_runtimeType))
        {
            ry_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number ry_value = ry_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->rotate1(self, (const Ark_Number*) (&degree), (const Opt_Number*)&rx_value, (const Opt_Number*)&ry_value);
}
KOALA_INTEROP_DIRECT_4(Matrix2D_rotate1, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_translate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto tx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number tx_value_buf = {};
        tx_value_buf.tag = tx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (tx_value_buf_runtimeType))
        {
            tx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number tx_value = tx_value_buf;;
        const auto ty_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number ty_value_buf = {};
        ty_value_buf.tag = ty_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (ty_value_buf_runtimeType))
        {
            ty_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number ty_value = ty_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->translate(self, (const Opt_Number*)&tx_value, (const Opt_Number*)&ty_value);
}
KOALA_INTEROP_DIRECT_3(Matrix2D_translate, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Matrix2D_scale(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto sx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number sx_value_buf = {};
        sx_value_buf.tag = sx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sx_value_buf_runtimeType))
        {
            sx_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number sx_value = sx_value_buf;;
        const auto sy_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number sy_value_buf = {};
        sy_value_buf.tag = sy_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sy_value_buf_runtimeType))
        {
            sy_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number sy_value = sy_value_buf;;
        return GetAccessors()->getMatrix2DAccessor()->scale(self, (const Opt_Number*)&sx_value, (const Opt_Number*)&sy_value);
}
KOALA_INTEROP_DIRECT_3(Matrix2D_scale, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Matrix2D_getScaleX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getScaleX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getScaleX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setScaleX(Ark_NativePointer thisPtr, KInteropNumber scaleX) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setScaleX(self, (const Ark_Number*) (&scaleX));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setScaleX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_Matrix2D_getRotateY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getRotateY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getRotateY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setRotateY(Ark_NativePointer thisPtr, KInteropNumber rotateY) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setRotateY(self, (const Ark_Number*) (&rotateY));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setRotateY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_Matrix2D_getRotateX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getRotateX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getRotateX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setRotateX(Ark_NativePointer thisPtr, KInteropNumber rotateX) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setRotateX(self, (const Ark_Number*) (&rotateX));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setRotateX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_Matrix2D_getScaleY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getScaleY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getScaleY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setScaleY(Ark_NativePointer thisPtr, KInteropNumber scaleY) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setScaleY(self, (const Ark_Number*) (&scaleY));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setScaleY, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_Matrix2D_getTranslateX(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getTranslateX(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getTranslateX, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setTranslateX(Ark_NativePointer thisPtr, KInteropNumber translateX) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setTranslateX(self, (const Ark_Number*) (&translateX));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setTranslateX, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_Matrix2D_getTranslateY(Ark_NativePointer thisPtr) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        const auto &retValue = GetAccessors()->getMatrix2DAccessor()->getTranslateY(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Matrix2D_getTranslateY, KInteropReturnBuffer, Ark_NativePointer)
void impl_Matrix2D_setTranslateY(Ark_NativePointer thisPtr, KInteropNumber translateY) {
        Ark_Matrix2D self = reinterpret_cast<Ark_Matrix2D>(thisPtr);
        GetAccessors()->getMatrix2DAccessor()->setTranslateY(self, (const Ark_Number*) (&translateY));
}
KOALA_INTEROP_DIRECT_V2(Matrix2D_setTranslateY, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_NavDestinationContext_ctor() {
        return GetAccessors()->getNavDestinationContextAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(NavDestinationContext_ctor, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getFinalizer() {
        return GetAccessors()->getNavDestinationContextAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(NavDestinationContext_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_NavDestinationContext_getConfigInRouteMap(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        const auto &retValue = GetAccessors()->getNavDestinationContextAccessor()->getConfigInRouteMap(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeRouteMapConfig(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(NavDestinationContext_getConfigInRouteMap, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getPathInfo(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        return GetAccessors()->getNavDestinationContextAccessor()->getPathInfo(self);
}
KOALA_INTEROP_DIRECT_1(NavDestinationContext_getPathInfo, Ark_NativePointer, Ark_NativePointer)
void impl_NavDestinationContext_setPathInfo(Ark_NativePointer thisPtr, Ark_NativePointer pathInfo) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        GetAccessors()->getNavDestinationContextAccessor()->setPathInfo(self, static_cast<Ark_NavPathInfo>(pathInfo));
}
KOALA_INTEROP_DIRECT_V2(NavDestinationContext_setPathInfo, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_NavDestinationContext_getPathStack(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        return GetAccessors()->getNavDestinationContextAccessor()->getPathStack(self);
}
KOALA_INTEROP_DIRECT_1(NavDestinationContext_getPathStack, Ark_NativePointer, Ark_NativePointer)
void impl_NavDestinationContext_setPathStack(Ark_NativePointer thisPtr, Ark_NativePointer pathStack) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        GetAccessors()->getNavDestinationContextAccessor()->setPathStack(self, static_cast<Ark_NavPathStack>(pathStack));
}
KOALA_INTEROP_DIRECT_V2(NavDestinationContext_setPathStack, Ark_NativePointer, Ark_NativePointer)
Ark_String impl_NavDestinationContext_getNavDestinationId(Ark_NativePointer thisPtr) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        return GetAccessors()->getNavDestinationContextAccessor()->getNavDestinationId(self);
}
KOALA_INTEROP_1(NavDestinationContext_getNavDestinationId, KStringPtr, Ark_NativePointer)
void impl_NavDestinationContext_setNavDestinationId(Ark_NativePointer thisPtr, const KStringPtr& navDestinationId) {
        Ark_NavDestinationContext self = reinterpret_cast<Ark_NavDestinationContext>(thisPtr);
        GetAccessors()->getNavDestinationContextAccessor()->setNavDestinationId(self, (const Ark_String*) (&navDestinationId));
}
KOALA_INTEROP_V2(NavDestinationContext_setNavDestinationId, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_PatternLockController_ctor() {
        return GetAccessors()->getPatternLockControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PatternLockController_ctor, Ark_NativePointer)
Ark_NativePointer impl_PatternLockController_getFinalizer() {
        return GetAccessors()->getPatternLockControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PatternLockController_getFinalizer, Ark_NativePointer)
void impl_PatternLockController_reset(Ark_NativePointer thisPtr) {
        Ark_PatternLockController self = reinterpret_cast<Ark_PatternLockController>(thisPtr);
        GetAccessors()->getPatternLockControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(PatternLockController_reset, Ark_NativePointer)
void impl_PatternLockController_setChallengeResult(Ark_NativePointer thisPtr, Ark_Int32 result) {
        Ark_PatternLockController self = reinterpret_cast<Ark_PatternLockController>(thisPtr);
        GetAccessors()->getPatternLockControllerAccessor()->setChallengeResult(self, static_cast<Ark_PatternLockChallengeResult>(result));
}
KOALA_INTEROP_DIRECT_V2(PatternLockController_setChallengeResult, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_VirtualScrollOptions_ctor() {
        return GetAccessors()->getVirtualScrollOptionsAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(VirtualScrollOptions_ctor, Ark_NativePointer)
Ark_NativePointer impl_VirtualScrollOptions_getFinalizer() {
        return GetAccessors()->getVirtualScrollOptionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(VirtualScrollOptions_getFinalizer, Ark_NativePointer)
void impl_VirtualScrollOptions_onLazyLoading(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        GetAccessors()->getVirtualScrollOptionsAccessor()->onLazyLoading(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_V2(VirtualScrollOptions_onLazyLoading, Ark_NativePointer, KInteropNumber)
Ark_Number impl_VirtualScrollOptions_onTotalCount(Ark_NativePointer thisPtr) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        return GetAccessors()->getVirtualScrollOptionsAccessor()->onTotalCount(self);
}
KOALA_INTEROP_DIRECT_1(VirtualScrollOptions_onTotalCount, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_VirtualScrollOptions_getTotalCount(Ark_NativePointer thisPtr) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        const auto &retValue = GetAccessors()->getVirtualScrollOptionsAccessor()->getTotalCount(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(VirtualScrollOptions_getTotalCount, KInteropReturnBuffer, Ark_NativePointer)
void impl_VirtualScrollOptions_setTotalCount(Ark_NativePointer thisPtr, KInteropNumber totalCount) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        GetAccessors()->getVirtualScrollOptionsAccessor()->setTotalCount(self, (const Ark_Number*) (&totalCount));
}
KOALA_INTEROP_DIRECT_V2(VirtualScrollOptions_setTotalCount, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_VirtualScrollOptions_getReusable(Ark_NativePointer thisPtr) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        const auto &retValue = GetAccessors()->getVirtualScrollOptionsAccessor()->getReusable(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeBoolean(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(VirtualScrollOptions_getReusable, KInteropReturnBuffer, Ark_NativePointer)
void impl_VirtualScrollOptions_setReusable(Ark_NativePointer thisPtr, Ark_Boolean reusable) {
        Ark_VirtualScrollOptions self = reinterpret_cast<Ark_VirtualScrollOptions>(thisPtr);
        GetAccessors()->getVirtualScrollOptionsAccessor()->setReusable(self, reusable);
}
KOALA_INTEROP_DIRECT_V2(VirtualScrollOptions_setReusable, Ark_NativePointer, Ark_Boolean)
Ark_NativePointer impl_RichEditorBaseController_ctor() {
        return GetAccessors()->getRichEditorBaseControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(RichEditorBaseController_ctor, Ark_NativePointer)
Ark_NativePointer impl_RichEditorBaseController_getFinalizer() {
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorBaseController_getFinalizer, Ark_NativePointer)
Ark_Number impl_RichEditorBaseController_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getCaretOffset(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_getCaretOffset, KInteropNumber, Ark_NativePointer)
Ark_Boolean impl_RichEditorBaseController_setCaretOffset(Ark_NativePointer thisPtr, KInteropNumber offset) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->setCaretOffset(self, (const Ark_Number*) (&offset));
}
KOALA_INTEROP_DIRECT_2(RichEditorBaseController_setCaretOffset, Ark_Boolean, Ark_NativePointer, KInteropNumber)
void impl_RichEditorBaseController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        GetAccessors()->getRichEditorBaseControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(RichEditorBaseController_closeSelectionMenu, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getTypingStyle(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getTypingStyle(self);
        Serializer _retSerializer {};
        _retSerializer.writeRichEditorTextStyle(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getTypingStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_RichEditorBaseController_setTypingStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RichEditorTextStyle value_value = thisDeserializer.readRichEditorTextStyle();;
        GetAccessors()->getRichEditorBaseControllerAccessor()->setTypingStyle(self, (const Ark_RichEditorTextStyle*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorBaseController_setTypingStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorBaseController_setSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionOptions();
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getRichEditorBaseControllerAccessor()->setSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), (const Opt_SelectionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V5(RichEditorBaseController_setSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_RichEditorBaseController_isEditing(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->isEditing(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_isEditing, Ark_Boolean, Ark_NativePointer)
void impl_RichEditorBaseController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        GetAccessors()->getRichEditorBaseControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(RichEditorBaseController_stopEditing, Ark_NativePointer)
Ark_NativePointer impl_RichEditorBaseController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        return GetAccessors()->getRichEditorBaseControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorBaseController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getPreviewText(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getPreviewText(self);
        Serializer _retSerializer {};
        _retSerializer.writePreviewText(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getPreviewText, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorBaseController_getCaretRect(Ark_NativePointer thisPtr) {
        Ark_RichEditorBaseController self = reinterpret_cast<Ark_RichEditorBaseController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorBaseControllerAccessor()->getCaretRect(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeRectResult(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorBaseController_getCaretRect, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_ctor() {
        return GetAccessors()->getRichEditorControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(RichEditorController_ctor, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_getFinalizer() {
        return GetAccessors()->getRichEditorControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorController_getFinalizer, Ark_NativePointer)
Ark_Number impl_RichEditorController_addTextSpan(Ark_NativePointer thisPtr, const KStringPtr& value, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorTextSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRichEditorTextSpanOptions();
        }
        Opt_RichEditorTextSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addTextSpan(self, (const Ark_String*) (&value), (const Opt_RichEditorTextSpanOptions*)&options_value);
}
KOALA_INTEROP_4(RichEditorController_addTextSpan, KInteropNumber, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addImageSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_PixelMap_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_PixelMap>(thisDeserializer.readPixelMap());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            const Ark_Int8 value_value_buf_u_selector = thisDeserializer.readInt8();
            Ark_ResourceStr value_value_buf_u = {};
            value_value_buf_u.selector = value_value_buf_u_selector;
            if (value_value_buf_u_selector == 0) {
                value_value_buf_u.selector = 0;
                value_value_buf_u.value0 = static_cast<Ark_String>(thisDeserializer.readString());
            }
            else if (value_value_buf_u_selector == 1) {
                value_value_buf_u.selector = 1;
                value_value_buf_u.value1 = thisDeserializer.readResource();
            }
            else {
                INTEROP_FATAL("One of the branches for value_value_buf_u has to be chosen through deserialisation.");
            }
            value_value_buf.value1 = static_cast<Ark_ResourceStr>(value_value_buf_u);
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_PixelMap_ResourceStr value_value = static_cast<Ark_Union_PixelMap_ResourceStr>(value_value_buf);;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorImageSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRichEditorImageSpanOptions();
        }
        Opt_RichEditorImageSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addImageSpan(self, (const Ark_Union_PixelMap_ResourceStr*)&value_value, (const Opt_RichEditorImageSpanOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addImageSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addBuilderSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        CustomNodeBuilder value_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_CustomNodeBuilder)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_NativePointer parentNode, const Callback_Pointer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_CustomNodeBuilder))))};;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorBuilderSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRichEditorBuilderSpanOptions();
        }
        Opt_RichEditorBuilderSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addBuilderSpan(self, (const CustomNodeBuilder*)&value_value, (const Opt_RichEditorBuilderSpanOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addBuilderSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Number impl_RichEditorController_addSymbolSpan(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Resource value_value = thisDeserializer.readResource();;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorSymbolSpanOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readRichEditorSymbolSpanOptions();
        }
        Opt_RichEditorSymbolSpanOptions options_value = options_value_buf;;
        return GetAccessors()->getRichEditorControllerAccessor()->addSymbolSpan(self, (const Ark_Resource*)&value_value, (const Opt_RichEditorSymbolSpanOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_3(RichEditorController_addSymbolSpan, KInteropNumber, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_updateSpanStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Type_RichEditorController_updateSpanStyle_value value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = thisDeserializer.readRichEditorUpdateTextSpanStyleOptions();
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = thisDeserializer.readRichEditorUpdateImageSpanStyleOptions();
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = thisDeserializer.readRichEditorUpdateSymbolSpanStyleOptions();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Type_RichEditorController_updateSpanStyle_value value_value = static_cast<Ark_Type_RichEditorController_updateSpanStyle_value>(value_value_buf);;
        GetAccessors()->getRichEditorControllerAccessor()->updateSpanStyle(self, (const Ark_Type_RichEditorController_updateSpanStyle_value*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_updateSpanStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_updateParagraphStyle(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RichEditorParagraphStyleOptions value_value = thisDeserializer.readRichEditorParagraphStyleOptions();;
        GetAccessors()->getRichEditorControllerAccessor()->updateParagraphStyle(self, (const Ark_RichEditorParagraphStyleOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_updateParagraphStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RichEditorController_deleteSpans(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRichEditorRange();
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        GetAccessors()->getRichEditorControllerAccessor()->deleteSpans(self, (const Opt_RichEditorRange*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorController_deleteSpans, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getSpans(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRichEditorRange();
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getSpans(self, (const Opt_RichEditorRange*)&value_value);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_Union_RichEditorImageSpanResult_RichEditorTextSpanResult retValue_element = retValue.array[i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = retValue_element.selector;
            if (retValue_element_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_element_0 = retValue_element.value0;
                _retSerializer.writeRichEditorImageSpanResult(retValue_element_0);
            }
            else if (retValue_element_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_element_1 = retValue_element.value1;
                _retSerializer.writeRichEditorTextSpanResult(retValue_element_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(RichEditorController_getSpans, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getParagraphs(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_RichEditorRange value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readRichEditorRange();
        }
        Opt_RichEditorRange value_value = value_value_buf;;
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getParagraphs(self, (const Opt_RichEditorRange*)&value_value);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_RichEditorParagraphResult retValue_element = retValue.array[i];
            _retSerializer.writeRichEditorParagraphResult(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(RichEditorController_getParagraphs, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_RichEditorController_getSelection(Ark_NativePointer thisPtr) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->getSelection(self);
        Serializer _retSerializer {};
        _retSerializer.writeRichEditorSelection(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorController_getSelection, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorController_fromStyledString(KVMContext vmContext, Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorControllerAccessor()->fromStyledString(reinterpret_cast<Ark_VMContext>(vmContext), self, static_cast<Ark_StyledString>(value));
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_RichEditorSpan retValue_element = retValue.array[i];
            Ark_Int32 retValue_element_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_element_type = retValue_element.selector;
            if (retValue_element_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_element_0 = retValue_element.value0;
                _retSerializer.writeRichEditorImageSpanResult(retValue_element_0);
            }
            else if (retValue_element_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_element_1 = retValue_element.value1;
                _retSerializer.writeRichEditorTextSpanResult(retValue_element_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_2(RichEditorController_fromStyledString, KInteropReturnBuffer, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorController_toStyledString(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorController self = reinterpret_cast<Ark_RichEditorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_RichEditorRange value_value = thisDeserializer.readRichEditorRange();;
        return GetAccessors()->getRichEditorControllerAccessor()->toStyledString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_RichEditorRange*)&value_value);
}
KOALA_INTEROP_CTX_3(RichEditorController_toStyledString, Ark_NativePointer, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_RichEditorStyledStringController_ctor() {
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(RichEditorStyledStringController_ctor, Ark_NativePointer)
Ark_NativePointer impl_RichEditorStyledStringController_getFinalizer() {
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(RichEditorStyledStringController_getFinalizer, Ark_NativePointer)
void impl_RichEditorStyledStringController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer styledString) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        GetAccessors()->getRichEditorStyledStringControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_DIRECT_V2(RichEditorStyledStringController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_RichEditorStyledStringController_getStyledString(Ark_NativePointer thisPtr) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        return GetAccessors()->getRichEditorStyledStringControllerAccessor()->getStyledString(self);
}
KOALA_INTEROP_DIRECT_1(RichEditorStyledStringController_getStyledString, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_RichEditorStyledStringController_getSelection(Ark_NativePointer thisPtr) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        const auto &retValue = GetAccessors()->getRichEditorStyledStringControllerAccessor()->getSelection(self);
        Serializer _retSerializer {};
        _retSerializer.writeRichEditorRange(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(RichEditorStyledStringController_getSelection, KInteropReturnBuffer, Ark_NativePointer)
void impl_RichEditorStyledStringController_onContentChanged(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_RichEditorStyledStringController self = reinterpret_cast<Ark_RichEditorStyledStringController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_StyledStringChangedListener listener_value = thisDeserializer.readStyledStringChangedListener();;
        GetAccessors()->getRichEditorStyledStringControllerAccessor()->onContentChanged(self, (const Ark_StyledStringChangedListener*)&listener_value);
}
KOALA_INTEROP_DIRECT_V3(RichEditorStyledStringController_onContentChanged, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_Scroller_ctor() {
        return GetAccessors()->getScrollerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(Scroller_ctor, Ark_NativePointer)
Ark_NativePointer impl_Scroller_getFinalizer() {
        return GetAccessors()->getScrollerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(Scroller_getFinalizer, Ark_NativePointer)
void impl_Scroller_scrollTo(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScrollOptions options_value = thisDeserializer.readScrollOptions();;
        GetAccessors()->getScrollerAccessor()->scrollTo(self, (const Ark_ScrollOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollTo, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Scroller_scrollEdge(Ark_NativePointer thisPtr, Ark_Int32 value, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollEdgeOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readScrollEdgeOptions();
        }
        Opt_ScrollEdgeOptions options_value = options_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollEdge(self, static_cast<Ark_Edge>(value), (const Opt_ScrollEdgeOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V4(Scroller_scrollEdge, Ark_NativePointer, Ark_Int32, KSerializerBuffer, int32_t)
void impl_Scroller_fling(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber velocity) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        GetAccessors()->getScrollerAccessor()->fling(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&velocity));
}
KOALA_INTEROP_CTX_V2(Scroller_fling, Ark_NativePointer, KInteropNumber)
void impl_Scroller_scrollPage0(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScrollPageOptions value_value = thisDeserializer.readScrollPageOptions();;
        GetAccessors()->getScrollerAccessor()->scrollPage0(self, (const Ark_ScrollPageOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollPage0, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_Scroller_scrollPage1(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_Boolean_next_Axis_direction value_value_buf = {};
        value_value_buf.next = thisDeserializer.readBoolean();
        const auto value_value_buf_direction_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Axis value_value_buf_direction_buf = {};
        value_value_buf_direction_buf.tag = value_value_buf_direction_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_direction_buf_runtimeType))
        {
            value_value_buf_direction_buf.value = static_cast<Ark_Axis>(thisDeserializer.readInt32());
        }
        value_value_buf.direction = value_value_buf_direction_buf;
        Ark_Literal_Boolean_next_Axis_direction value_value = value_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollPage1(self, (const Ark_Literal_Boolean_next_Axis_direction*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollPage1, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_Scroller_currentOffset(Ark_NativePointer thisPtr) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        const auto &retValue = GetAccessors()->getScrollerAccessor()->currentOffset(self);
        Serializer _retSerializer {};
        _retSerializer.writeOffsetResult(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(Scroller_currentOffset, KInteropReturnBuffer, Ark_NativePointer)
void impl_Scroller_scrollToIndex(Ark_NativePointer thisPtr, KInteropNumber value, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto smooth_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean smooth_value_buf = {};
        smooth_value_buf.tag = smooth_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (smooth_value_buf_runtimeType))
        {
            smooth_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean smooth_value = smooth_value_buf;;
        const auto align_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollAlign align_value_buf = {};
        align_value_buf.tag = align_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (align_value_buf_runtimeType))
        {
            align_value_buf.value = static_cast<Ark_ScrollAlign>(thisDeserializer.readInt32());
        }
        Opt_ScrollAlign align_value = align_value_buf;;
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ScrollToIndexOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readScrollToIndexOptions();
        }
        Opt_ScrollToIndexOptions options_value = options_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollToIndex(self, (const Ark_Number*) (&value), (const Opt_Boolean*)&smooth_value, (const Opt_ScrollAlign*)&align_value, (const Opt_ScrollToIndexOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V4(Scroller_scrollToIndex, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_Scroller_scrollBy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);

        Deserializer thisDeserializer(thisArray, thisLength);
        const auto dx_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length dx_value_buf = {};
        dx_value_buf.tag = dx_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (dx_value_buf_runtimeType)) {
            dx_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length dx_value = dx_value_buf;;

        const auto dy_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Length dy_value_buf = {};
        dy_value_buf.tag = dy_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (dy_value_buf_runtimeType)) {
            dy_value_buf.value = thisDeserializer.readLength();
        }
        Opt_Length dy_value = dy_value_buf;;
        GetAccessors()->getScrollerAccessor()->scrollBy(self, (const Opt_Length*)&dx_value, (const Opt_Length*)&dy_value);
}
KOALA_INTEROP_DIRECT_V3(Scroller_scrollBy, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_Scroller_isAtEnd(Ark_NativePointer thisPtr) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        return GetAccessors()->getScrollerAccessor()->isAtEnd(self);
}
KOALA_INTEROP_DIRECT_1(Scroller_isAtEnd, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_Scroller_getItemRect(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        const auto &retValue = GetAccessors()->getScrollerAccessor()->getItemRect(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&index));
        Serializer _retSerializer {};
        _retSerializer.writeRectResult(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_2(Scroller_getItemRect, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
Ark_Number impl_Scroller_getItemIndex(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_Scroller self = reinterpret_cast<Ark_Scroller>(thisPtr);
        return GetAccessors()->getScrollerAccessor()->getItemIndex(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
}
KOALA_INTEROP_CTX_3(Scroller_getItemIndex, KInteropNumber, Ark_NativePointer, KInteropNumber, KInteropNumber)
Ark_NativePointer impl_SearchController_ctor() {
        return GetAccessors()->getSearchControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SearchController_ctor, Ark_NativePointer)
Ark_NativePointer impl_SearchController_getFinalizer() {
        return GetAccessors()->getSearchControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SearchController_getFinalizer, Ark_NativePointer)
void impl_SearchController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        GetAccessors()->getSearchControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(SearchController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_SearchController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        GetAccessors()->getSearchControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(SearchController_stopEditing, Ark_NativePointer)
void impl_SearchController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SearchController self = reinterpret_cast<Ark_SearchController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionOptions();
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getSearchControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), (const Opt_SelectionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V5(SearchController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_MenuItemConfiguration_ctor() {
        return GetAccessors()->getMenuItemConfigurationAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(MenuItemConfiguration_ctor, Ark_NativePointer)
Ark_NativePointer impl_MenuItemConfiguration_getFinalizer() {
        return GetAccessors()->getMenuItemConfigurationAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(MenuItemConfiguration_getFinalizer, Ark_NativePointer)
void impl_MenuItemConfiguration_triggerSelect(Ark_NativePointer thisPtr, KInteropNumber index, const KStringPtr& value) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        GetAccessors()->getMenuItemConfigurationAccessor()->triggerSelect(self, (const Ark_Number*) (&index), (const Ark_String*) (&value));
}
KOALA_INTEROP_V3(MenuItemConfiguration_triggerSelect, Ark_NativePointer, KInteropNumber, KStringPtr)
Ark_Boolean impl_MenuItemConfiguration_getEnabled(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        return GetAccessors()->getMenuItemConfigurationAccessor()->getEnabled(self);
}
KOALA_INTEROP_DIRECT_1(MenuItemConfiguration_getEnabled, Ark_Boolean, Ark_NativePointer)
void impl_MenuItemConfiguration_setEnabled(Ark_NativePointer thisPtr, Ark_Boolean enabled) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        GetAccessors()->getMenuItemConfigurationAccessor()->setEnabled(self, enabled);
}
KOALA_INTEROP_DIRECT_V2(MenuItemConfiguration_setEnabled, Ark_NativePointer, Ark_Boolean)
KInteropReturnBuffer impl_MenuItemConfiguration_getContentModifier(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        const auto &retValue = GetAccessors()->getMenuItemConfigurationAccessor()->getContentModifier(self);
        Serializer _retSerializer {};
        _retSerializer.writeObject(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MenuItemConfiguration_getContentModifier, KInteropReturnBuffer, Ark_NativePointer)
void impl_MenuItemConfiguration_setContentModifier(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object contentModifier_value = static_cast<Ark_ContentModifier>(thisDeserializer.readObject());;
        GetAccessors()->getMenuItemConfigurationAccessor()->setContentModifier(self, (const Ark_Object*)&contentModifier_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemConfiguration_setContentModifier, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MenuItemConfiguration_getValue(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        GetAccessors()->getMenuItemConfigurationAccessor()->getValue(self);
}
KOALA_INTEROP_DIRECT_V1(MenuItemConfiguration_getValue, Ark_NativePointer)
void impl_MenuItemConfiguration_setValue(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr value_value = static_cast<Ark_ResourceStr>(value_value_buf);;
        GetAccessors()->getMenuItemConfigurationAccessor()->setValue(self, (const Ark_ResourceStr*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemConfiguration_setValue, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MenuItemConfiguration_getIcon(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        const auto &retValue = GetAccessors()->getMenuItemConfigurationAccessor()->getIcon(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeString(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeResource(retValue_value_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MenuItemConfiguration_getIcon, KInteropReturnBuffer, Ark_NativePointer)
void impl_MenuItemConfiguration_setIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 icon_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr icon_value_buf = {};
        icon_value_buf.selector = icon_value_buf_selector;
        if (icon_value_buf_selector == 0) {
            icon_value_buf.selector = 0;
            icon_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (icon_value_buf_selector == 1) {
            icon_value_buf.selector = 1;
            icon_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for icon_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr icon_value = static_cast<Ark_ResourceStr>(icon_value_buf);;
        GetAccessors()->getMenuItemConfigurationAccessor()->setIcon(self, (const Ark_ResourceStr*)&icon_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemConfiguration_setIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_MenuItemConfiguration_getSymbolIcon(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        const auto &retValue = GetAccessors()->getMenuItemConfigurationAccessor()->getSymbolIcon(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeSymbolGlyphModifier(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(MenuItemConfiguration_getSymbolIcon, KInteropReturnBuffer, Ark_NativePointer)
void impl_MenuItemConfiguration_setSymbolIcon(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SymbolGlyphModifier symbolIcon_value = thisDeserializer.readSymbolGlyphModifier();;
        GetAccessors()->getMenuItemConfigurationAccessor()->setSymbolIcon(self, (const Ark_SymbolGlyphModifier*)&symbolIcon_value);
}
KOALA_INTEROP_DIRECT_V3(MenuItemConfiguration_setSymbolIcon, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_MenuItemConfiguration_getSelected(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        return GetAccessors()->getMenuItemConfigurationAccessor()->getSelected(self);
}
KOALA_INTEROP_DIRECT_1(MenuItemConfiguration_getSelected, Ark_Boolean, Ark_NativePointer)
void impl_MenuItemConfiguration_setSelected(Ark_NativePointer thisPtr, Ark_Boolean selected) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        GetAccessors()->getMenuItemConfigurationAccessor()->setSelected(self, selected);
}
KOALA_INTEROP_DIRECT_V2(MenuItemConfiguration_setSelected, Ark_NativePointer, Ark_Boolean)
Ark_Number impl_MenuItemConfiguration_getIndex(Ark_NativePointer thisPtr) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        return GetAccessors()->getMenuItemConfigurationAccessor()->getIndex(self);
}
KOALA_INTEROP_DIRECT_1(MenuItemConfiguration_getIndex, KInteropNumber, Ark_NativePointer)
void impl_MenuItemConfiguration_setIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_MenuItemConfiguration self = reinterpret_cast<Ark_MenuItemConfiguration>(thisPtr);
        GetAccessors()->getMenuItemConfigurationAccessor()->setIndex(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_V2(MenuItemConfiguration_setIndex, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_SwiperController_ctor() {
        return GetAccessors()->getSwiperControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SwiperController_ctor, Ark_NativePointer)
Ark_NativePointer impl_SwiperController_getFinalizer() {
        return GetAccessors()->getSwiperControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwiperController_getFinalizer, Ark_NativePointer)
void impl_SwiperController_showNext(Ark_NativePointer thisPtr) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        GetAccessors()->getSwiperControllerAccessor()->showNext(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperController_showNext, Ark_NativePointer)
void impl_SwiperController_showPrevious(Ark_NativePointer thisPtr) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        GetAccessors()->getSwiperControllerAccessor()->showPrevious(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperController_showPrevious, Ark_NativePointer)
void impl_SwiperController_changeIndex0(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto useAnimation_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useAnimation_value_buf = {};
        useAnimation_value_buf.tag = useAnimation_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (useAnimation_value_buf_runtimeType))
        {
            useAnimation_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useAnimation_value = useAnimation_value_buf;;
        GetAccessors()->getSwiperControllerAccessor()->changeIndex0(self, (const Ark_Number*) (&index), (const Opt_Boolean*)&useAnimation_value);
}
KOALA_INTEROP_DIRECT_V4(SwiperController_changeIndex0, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_SwiperController_changeIndex1(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto animationMode_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Union_SwiperAnimationMode_Boolean animationMode_value_buf = {};
        animationMode_value_buf.tag = animationMode_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (animationMode_value_buf_runtimeType))
        {
            const Ark_Int8 animationMode_value_buf__selector = thisDeserializer.readInt8();
            Ark_Union_SwiperAnimationMode_Boolean animationMode_value_buf_ = {};
            animationMode_value_buf_.selector = animationMode_value_buf__selector;
            if (animationMode_value_buf__selector == 0) {
                animationMode_value_buf_.selector = 0;
                animationMode_value_buf_.value0 = static_cast<Ark_SwiperAnimationMode>(thisDeserializer.readInt32());
            }
            else if (animationMode_value_buf__selector == 1) {
                animationMode_value_buf_.selector = 1;
                animationMode_value_buf_.value1 = thisDeserializer.readBoolean();
            }
            else {
                INTEROP_FATAL("One of the branches for animationMode_value_buf_ has to be chosen through deserialisation.");
            }
            animationMode_value_buf.value = static_cast<Ark_Union_SwiperAnimationMode_Boolean>(animationMode_value_buf_);
        }
        Opt_Union_SwiperAnimationMode_Boolean animationMode_value = animationMode_value_buf;;
        GetAccessors()->getSwiperControllerAccessor()->changeIndex1(self, (const Ark_Number*) (&index), (const Opt_Union_SwiperAnimationMode_Boolean*)&animationMode_value);
}
KOALA_INTEROP_DIRECT_V4(SwiperController_changeIndex1, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_SwiperController_finishAnimation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_VoidCallback callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_VoidCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_VoidCallback))))};
        }
        Opt_VoidCallback callback__value = callback__value_buf;;
        GetAccessors()->getSwiperControllerAccessor()->finishAnimation(self, (const Opt_VoidCallback*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(SwiperController_finishAnimation, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_SwiperController_preloadItems(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_SwiperController self = reinterpret_cast<Ark_SwiperController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto indices_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number indices_value_buf = {};
        indices_value_buf.tag = indices_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (indices_value_buf_runtimeType))
        {
            const Ark_Int32 indices_value_buf__length = thisDeserializer.readInt32();
            Array_Number indices_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(indices_value_buf_)>::type,
        std::decay<decltype(*indices_value_buf_.array)>::type>(&indices_value_buf_, indices_value_buf__length);
            for (int indices_value_buf__i = 0; indices_value_buf__i < indices_value_buf__length; indices_value_buf__i++) {
                indices_value_buf_.array[indices_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            indices_value_buf.value = indices_value_buf_;
        }
        Opt_Array_Number indices_value = indices_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getSwiperControllerAccessor()->preloadItems(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Opt_Array_Number*)&indices_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V3(SwiperController_preloadItems, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_SwiperContentTransitionProxy_ctor() {
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SwiperContentTransitionProxy_ctor, Ark_NativePointer)
Ark_NativePointer impl_SwiperContentTransitionProxy_getFinalizer() {
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SwiperContentTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(SwiperContentTransitionProxy_finishTransition, Ark_NativePointer)
Ark_Number impl_SwiperContentTransitionProxy_getSelectedIndex(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getSelectedIndex(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getSelectedIndex, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setSelectedIndex(Ark_NativePointer thisPtr, KInteropNumber selectedIndex) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setSelectedIndex(self, (const Ark_Number*) (&selectedIndex));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setSelectedIndex, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getIndex(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getIndex(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getIndex, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setIndex(Ark_NativePointer thisPtr, KInteropNumber index) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setIndex(self, (const Ark_Number*) (&index));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setIndex, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getPosition(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getPosition(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getPosition, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setPosition(Ark_NativePointer thisPtr, KInteropNumber position) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setPosition(self, (const Ark_Number*) (&position));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setPosition, Ark_NativePointer, KInteropNumber)
Ark_Number impl_SwiperContentTransitionProxy_getMainAxisLength(Ark_NativePointer thisPtr) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        return GetAccessors()->getSwiperContentTransitionProxyAccessor()->getMainAxisLength(self);
}
KOALA_INTEROP_DIRECT_1(SwiperContentTransitionProxy_getMainAxisLength, KInteropNumber, Ark_NativePointer)
void impl_SwiperContentTransitionProxy_setMainAxisLength(Ark_NativePointer thisPtr, KInteropNumber mainAxisLength) {
        Ark_SwiperContentTransitionProxy self = reinterpret_cast<Ark_SwiperContentTransitionProxy>(thisPtr);
        GetAccessors()->getSwiperContentTransitionProxyAccessor()->setMainAxisLength(self, (const Ark_Number*) (&mainAxisLength));
}
KOALA_INTEROP_DIRECT_V2(SwiperContentTransitionProxy_setMainAxisLength, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_IndicatorComponentController_ctor() {
        return GetAccessors()->getIndicatorComponentControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(IndicatorComponentController_ctor, Ark_NativePointer)
Ark_NativePointer impl_IndicatorComponentController_getFinalizer() {
        return GetAccessors()->getIndicatorComponentControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(IndicatorComponentController_getFinalizer, Ark_NativePointer)
void impl_IndicatorComponentController_showNext(Ark_NativePointer thisPtr) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        GetAccessors()->getIndicatorComponentControllerAccessor()->showNext(self);
}
KOALA_INTEROP_DIRECT_V1(IndicatorComponentController_showNext, Ark_NativePointer)
void impl_IndicatorComponentController_showPrevious(Ark_NativePointer thisPtr) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        GetAccessors()->getIndicatorComponentControllerAccessor()->showPrevious(self);
}
KOALA_INTEROP_DIRECT_V1(IndicatorComponentController_showPrevious, Ark_NativePointer)
void impl_IndicatorComponentController_changeIndex(Ark_NativePointer thisPtr, KInteropNumber index, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_IndicatorComponentController self = reinterpret_cast<Ark_IndicatorComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto useAnimation_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Boolean useAnimation_value_buf = {};
        useAnimation_value_buf.tag = useAnimation_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (useAnimation_value_buf_runtimeType))
        {
            useAnimation_value_buf.value = thisDeserializer.readBoolean();
        }
        Opt_Boolean useAnimation_value = useAnimation_value_buf;;
        GetAccessors()->getIndicatorComponentControllerAccessor()->changeIndex(self, (const Ark_Number*) (&index), (const Opt_Boolean*)&useAnimation_value);
}
KOALA_INTEROP_DIRECT_V4(IndicatorComponentController_changeIndex, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HierarchicalSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto fillStyle_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectFillStyle fillStyle_value_buf = {};
        fillStyle_value_buf.tag = fillStyle_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (fillStyle_value_buf_runtimeType))
        {
            fillStyle_value_buf.value = static_cast<Ark_EffectFillStyle>(thisDeserializer.readInt32());
        }
        Opt_EffectFillStyle fillStyle_value = fillStyle_value_buf;;
        return GetAccessors()->getHierarchicalSymbolEffectAccessor()->ctor((const Opt_EffectFillStyle*)&fillStyle_value);
}
KOALA_INTEROP_DIRECT_2(HierarchicalSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HierarchicalSymbolEffect_getFinalizer() {
        return GetAccessors()->getHierarchicalSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HierarchicalSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_HierarchicalSymbolEffect_getFillStyle(Ark_NativePointer thisPtr) {
        Ark_HierarchicalSymbolEffect self = reinterpret_cast<Ark_HierarchicalSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getHierarchicalSymbolEffectAccessor()->getFillStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectFillStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(HierarchicalSymbolEffect_getFillStyle, KInteropReturnBuffer, Ark_NativePointer)
void impl_HierarchicalSymbolEffect_setFillStyle(Ark_NativePointer thisPtr, Ark_Int32 fillStyle) {
        Ark_HierarchicalSymbolEffect self = reinterpret_cast<Ark_HierarchicalSymbolEffect>(thisPtr);
        GetAccessors()->getHierarchicalSymbolEffectAccessor()->setFillStyle(self, static_cast<Ark_EffectFillStyle>(fillStyle));
}
KOALA_INTEROP_DIRECT_V2(HierarchicalSymbolEffect_setFillStyle, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_AppearSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scope_value_buf_runtimeType))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getAppearSymbolEffectAccessor()->ctor((const Opt_EffectScope*)&scope_value);
}
KOALA_INTEROP_DIRECT_2(AppearSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_AppearSymbolEffect_getFinalizer() {
        return GetAccessors()->getAppearSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(AppearSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_AppearSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_AppearSymbolEffect self = reinterpret_cast<Ark_AppearSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getAppearSymbolEffectAccessor()->getScope(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(AppearSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_AppearSymbolEffect_setScope(Ark_NativePointer thisPtr, Ark_Int32 scope) {
        Ark_AppearSymbolEffect self = reinterpret_cast<Ark_AppearSymbolEffect>(thisPtr);
        GetAccessors()->getAppearSymbolEffectAccessor()->setScope(self, static_cast<Ark_EffectScope>(scope));
}
KOALA_INTEROP_DIRECT_V2(AppearSymbolEffect_setScope, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_DisappearSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scope_value_buf_runtimeType))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        return GetAccessors()->getDisappearSymbolEffectAccessor()->ctor((const Opt_EffectScope*)&scope_value);
}
KOALA_INTEROP_DIRECT_2(DisappearSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DisappearSymbolEffect_getFinalizer() {
        return GetAccessors()->getDisappearSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DisappearSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_DisappearSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_DisappearSymbolEffect self = reinterpret_cast<Ark_DisappearSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getDisappearSymbolEffectAccessor()->getScope(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DisappearSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_DisappearSymbolEffect_setScope(Ark_NativePointer thisPtr, Ark_Int32 scope) {
        Ark_DisappearSymbolEffect self = reinterpret_cast<Ark_DisappearSymbolEffect>(thisPtr);
        GetAccessors()->getDisappearSymbolEffectAccessor()->setScope(self, static_cast<Ark_EffectScope>(scope));
}
KOALA_INTEROP_DIRECT_V2(DisappearSymbolEffect_setScope, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_BounceSymbolEffect_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto scope_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectScope scope_value_buf = {};
        scope_value_buf.tag = scope_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (scope_value_buf_runtimeType))
        {
            scope_value_buf.value = static_cast<Ark_EffectScope>(thisDeserializer.readInt32());
        }
        Opt_EffectScope scope_value = scope_value_buf;;
        const auto direction_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_EffectDirection direction_value_buf = {};
        direction_value_buf.tag = direction_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (direction_value_buf_runtimeType))
        {
            direction_value_buf.value = static_cast<Ark_EffectDirection>(thisDeserializer.readInt32());
        }
        Opt_EffectDirection direction_value = direction_value_buf;;
        return GetAccessors()->getBounceSymbolEffectAccessor()->ctor((const Opt_EffectScope*)&scope_value, (const Opt_EffectDirection*)&direction_value);
}
KOALA_INTEROP_DIRECT_2(BounceSymbolEffect_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BounceSymbolEffect_getFinalizer() {
        return GetAccessors()->getBounceSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BounceSymbolEffect_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BounceSymbolEffect_getScope(Ark_NativePointer thisPtr) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getBounceSymbolEffectAccessor()->getScope(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectScope>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BounceSymbolEffect_getScope, KInteropReturnBuffer, Ark_NativePointer)
void impl_BounceSymbolEffect_setScope(Ark_NativePointer thisPtr, Ark_Int32 scope) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        GetAccessors()->getBounceSymbolEffectAccessor()->setScope(self, static_cast<Ark_EffectScope>(scope));
}
KOALA_INTEROP_DIRECT_V2(BounceSymbolEffect_setScope, Ark_NativePointer, Ark_Int32)
KInteropReturnBuffer impl_BounceSymbolEffect_getDirection(Ark_NativePointer thisPtr) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        const auto &retValue = GetAccessors()->getBounceSymbolEffectAccessor()->getDirection(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_EffectDirection>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BounceSymbolEffect_getDirection, KInteropReturnBuffer, Ark_NativePointer)
void impl_BounceSymbolEffect_setDirection(Ark_NativePointer thisPtr, Ark_Int32 direction) {
        Ark_BounceSymbolEffect self = reinterpret_cast<Ark_BounceSymbolEffect>(thisPtr);
        GetAccessors()->getBounceSymbolEffectAccessor()->setDirection(self, static_cast<Ark_EffectDirection>(direction));
}
KOALA_INTEROP_DIRECT_V2(BounceSymbolEffect_setDirection, Ark_NativePointer, Ark_Int32)
Ark_NativePointer impl_PulseSymbolEffect_ctor() {
        return GetAccessors()->getPulseSymbolEffectAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PulseSymbolEffect_ctor, Ark_NativePointer)
Ark_NativePointer impl_PulseSymbolEffect_getFinalizer() {
        return GetAccessors()->getPulseSymbolEffectAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PulseSymbolEffect_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TabsController_ctor() {
        return GetAccessors()->getTabsControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TabsController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TabsController_getFinalizer() {
        return GetAccessors()->getTabsControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TabsController_getFinalizer, Ark_NativePointer)
void impl_TabsController_changeIndex(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        GetAccessors()->getTabsControllerAccessor()->changeIndex(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TabsController_changeIndex, Ark_NativePointer, KInteropNumber)
void impl_TabsController_preloadItems(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto indices_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Number indices_value_buf = {};
        indices_value_buf.tag = indices_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (indices_value_buf_runtimeType))
        {
            const Ark_Int32 indices_value_buf__length = thisDeserializer.readInt32();
            Array_Number indices_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(indices_value_buf_)>::type,
        std::decay<decltype(*indices_value_buf_.array)>::type>(&indices_value_buf_, indices_value_buf__length);
            for (int indices_value_buf__i = 0; indices_value_buf__i < indices_value_buf__length; indices_value_buf__i++) {
                indices_value_buf_.array[indices_value_buf__i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
            }
            indices_value_buf.value = indices_value_buf_;
        }
        Opt_Array_Number indices_value = indices_value_buf;;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getTabsControllerAccessor()->preloadItems(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Opt_Array_Number*)&indices_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V3(TabsController_preloadItems, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsController_setTabBarTranslate(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TranslateOptions translate_value = thisDeserializer.readTranslateOptions();;
        GetAccessors()->getTabsControllerAccessor()->setTabBarTranslate(self, (const Ark_TranslateOptions*)&translate_value);
}
KOALA_INTEROP_DIRECT_V3(TabsController_setTabBarTranslate, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_TabsController_setTabBarOpacity(Ark_NativePointer thisPtr, KInteropNumber opacity) {
        Ark_TabsController self = reinterpret_cast<Ark_TabsController>(thisPtr);
        GetAccessors()->getTabsControllerAccessor()->setTabBarOpacity(self, (const Ark_Number*) (&opacity));
}
KOALA_INTEROP_DIRECT_V2(TabsController_setTabBarOpacity, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TabContentTransitionProxy_ctor() {
        return GetAccessors()->getTabContentTransitionProxyAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TabContentTransitionProxy_ctor, Ark_NativePointer)
Ark_NativePointer impl_TabContentTransitionProxy_getFinalizer() {
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TabContentTransitionProxy_getFinalizer, Ark_NativePointer)
void impl_TabContentTransitionProxy_finishTransition(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->finishTransition(self);
}
KOALA_INTEROP_DIRECT_V1(TabContentTransitionProxy_finishTransition, Ark_NativePointer)
Ark_Number impl_TabContentTransitionProxy_getFrom(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getFrom(self);
}
KOALA_INTEROP_DIRECT_1(TabContentTransitionProxy_getFrom, KInteropNumber, Ark_NativePointer)
void impl_TabContentTransitionProxy_setFrom(Ark_NativePointer thisPtr, KInteropNumber from) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->setFrom(self, (const Ark_Number*) (&from));
}
KOALA_INTEROP_DIRECT_V2(TabContentTransitionProxy_setFrom, Ark_NativePointer, KInteropNumber)
Ark_Number impl_TabContentTransitionProxy_getTo(Ark_NativePointer thisPtr) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        return GetAccessors()->getTabContentTransitionProxyAccessor()->getTo(self);
}
KOALA_INTEROP_DIRECT_1(TabContentTransitionProxy_getTo, KInteropNumber, Ark_NativePointer)
void impl_TabContentTransitionProxy_setTo(Ark_NativePointer thisPtr, KInteropNumber to) {
        Ark_TabContentTransitionProxy self = reinterpret_cast<Ark_TabContentTransitionProxy>(thisPtr);
        GetAccessors()->getTabContentTransitionProxyAccessor()->setTo(self, (const Ark_Number*) (&to));
}
KOALA_INTEROP_DIRECT_V2(TabContentTransitionProxy_setTo, Ark_NativePointer, KInteropNumber)
Ark_NativePointer impl_TextController_ctor() {
        return GetAccessors()->getTextControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextController_getFinalizer() {
        return GetAccessors()->getTextControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextController_getFinalizer, Ark_NativePointer)
void impl_TextController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        GetAccessors()->getTextControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(TextController_closeSelectionMenu, Ark_NativePointer)
void impl_TextController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer value) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        GetAccessors()->getTextControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(value));
}
KOALA_INTEROP_DIRECT_V2(TextController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_TextController self = reinterpret_cast<Ark_TextController>(thisPtr);
        return GetAccessors()->getTextControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(TextController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextAreaController_ctor() {
        return GetAccessors()->getTextAreaControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextAreaController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextAreaController_getFinalizer() {
        return GetAccessors()->getTextAreaControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextAreaController_getFinalizer, Ark_NativePointer)
void impl_TextAreaController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        GetAccessors()->getTextAreaControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TextAreaController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_TextAreaController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionOptions();
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextAreaControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), (const Opt_SelectionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V5(TextAreaController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextAreaController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextAreaController self = reinterpret_cast<Ark_TextAreaController>(thisPtr);
        GetAccessors()->getTextAreaControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextAreaController_stopEditing, Ark_NativePointer)
Ark_NativePointer impl_TextClockController_ctor() {
        return GetAccessors()->getTextClockControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextClockController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextClockController_getFinalizer() {
        return GetAccessors()->getTextClockControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextClockController_getFinalizer, Ark_NativePointer)
void impl_TextClockController_start(Ark_NativePointer thisPtr) {
        Ark_TextClockController self = reinterpret_cast<Ark_TextClockController>(thisPtr);
        GetAccessors()->getTextClockControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(TextClockController_start, Ark_NativePointer)
void impl_TextClockController_stop(Ark_NativePointer thisPtr) {
        Ark_TextClockController self = reinterpret_cast<Ark_TextClockController>(thisPtr);
        GetAccessors()->getTextClockControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(TextClockController_stop, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_ctor() {
        return GetAccessors()->getTextBaseControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextBaseController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_getFinalizer() {
        return GetAccessors()->getTextBaseControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextBaseController_getFinalizer, Ark_NativePointer)
void impl_TextBaseController_setSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionOptions();
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextBaseControllerAccessor()->setSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), (const Opt_SelectionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V5(TextBaseController_setSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextBaseController_closeSelectionMenu(Ark_NativePointer thisPtr) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        GetAccessors()->getTextBaseControllerAccessor()->closeSelectionMenu(self);
}
KOALA_INTEROP_DIRECT_V1(TextBaseController_closeSelectionMenu, Ark_NativePointer)
Ark_NativePointer impl_TextBaseController_getLayoutManager(Ark_NativePointer thisPtr) {
        Ark_TextBaseController self = reinterpret_cast<Ark_TextBaseController>(thisPtr);
        return GetAccessors()->getTextBaseControllerAccessor()->getLayoutManager(self);
}
KOALA_INTEROP_DIRECT_1(TextBaseController_getLayoutManager, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextEditControllerEx_ctor() {
        return GetAccessors()->getTextEditControllerExAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextEditControllerEx_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextEditControllerEx_getFinalizer() {
        return GetAccessors()->getTextEditControllerExAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextEditControllerEx_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_TextEditControllerEx_isEditing(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->isEditing(self);
}
KOALA_INTEROP_DIRECT_1(TextEditControllerEx_isEditing, Ark_Boolean, Ark_NativePointer)
void impl_TextEditControllerEx_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        GetAccessors()->getTextEditControllerExAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextEditControllerEx_stopEditing, Ark_NativePointer)
Ark_Boolean impl_TextEditControllerEx_setCaretOffset(Ark_NativePointer thisPtr, KInteropNumber offset) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->setCaretOffset(self, (const Ark_Number*) (&offset));
}
KOALA_INTEROP_DIRECT_2(TextEditControllerEx_setCaretOffset, Ark_Boolean, Ark_NativePointer, KInteropNumber)
Ark_Number impl_TextEditControllerEx_getCaretOffset(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        return GetAccessors()->getTextEditControllerExAccessor()->getCaretOffset(self);
}
KOALA_INTEROP_DIRECT_1(TextEditControllerEx_getCaretOffset, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_TextEditControllerEx_getPreviewText(Ark_NativePointer thisPtr) {
        Ark_TextEditControllerEx self = reinterpret_cast<Ark_TextEditControllerEx>(thisPtr);
        const auto &retValue = GetAccessors()->getTextEditControllerExAccessor()->getPreviewText(self);
        Serializer _retSerializer {};
        _retSerializer.writePreviewText(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextEditControllerEx_getPreviewText, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_ctor() {
        return GetAccessors()->getStyledStringControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(StyledStringController_ctor, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_getFinalizer() {
        return GetAccessors()->getStyledStringControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(StyledStringController_getFinalizer, Ark_NativePointer)
void impl_StyledStringController_setStyledString(Ark_NativePointer thisPtr, Ark_NativePointer styledString) {
        Ark_StyledStringController self = reinterpret_cast<Ark_StyledStringController>(thisPtr);
        GetAccessors()->getStyledStringControllerAccessor()->setStyledString(self, static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_DIRECT_V2(StyledStringController_setStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_StyledStringController_getStyledString(Ark_NativePointer thisPtr) {
        Ark_StyledStringController self = reinterpret_cast<Ark_StyledStringController>(thisPtr);
        return GetAccessors()->getStyledStringControllerAccessor()->getStyledString(self);
}
KOALA_INTEROP_DIRECT_1(StyledStringController_getStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LayoutManager_ctor() {
        return GetAccessors()->getLayoutManagerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(LayoutManager_ctor, Ark_NativePointer)
Ark_NativePointer impl_LayoutManager_getFinalizer() {
        return GetAccessors()->getLayoutManagerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LayoutManager_getFinalizer, Ark_NativePointer)
Ark_Number impl_LayoutManager_getLineCount(Ark_NativePointer thisPtr) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        return GetAccessors()->getLayoutManagerAccessor()->getLineCount(self);
}
KOALA_INTEROP_DIRECT_1(LayoutManager_getLineCount, KInteropNumber, Ark_NativePointer)
KInteropReturnBuffer impl_LayoutManager_getGlyphPositionAtCoordinate(Ark_NativePointer thisPtr, KInteropNumber x, KInteropNumber y) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutManagerAccessor()->getGlyphPositionAtCoordinate(self, (const Ark_Number*) (&x), (const Ark_Number*) (&y));
        Serializer _retSerializer {};
        _retSerializer.writePositionWithAffinity(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(LayoutManager_getGlyphPositionAtCoordinate, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber)
KInteropReturnBuffer impl_LayoutManager_getLineMetrics(Ark_NativePointer thisPtr, KInteropNumber lineNumber) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        const auto &retValue = GetAccessors()->getLayoutManagerAccessor()->getLineMetrics(self, (const Ark_Number*) (&lineNumber));
        Serializer _retSerializer {};
        _retSerializer.writeLineMetrics(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(LayoutManager_getLineMetrics, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber)
KInteropReturnBuffer impl_LayoutManager_getRectsForRange(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength, Ark_Int32 widthStyle, Ark_Int32 heightStyle) {
        Ark_LayoutManager self = reinterpret_cast<Ark_LayoutManager>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TextRange range_value = thisDeserializer.readTextRange();;
        const auto &retValue = GetAccessors()->getLayoutManagerAccessor()->getRectsForRange(self, (const Ark_TextRange*)&range_value, static_cast<Ark_RectWidthStyle>(widthStyle), static_cast<Ark_RectHeightStyle>(heightStyle));
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_TextBox retValue_element = retValue.array[i];
            _retSerializer.writeTextBox(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_5(LayoutManager_getRectsForRange, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t, Ark_Int32, Ark_Int32)
Ark_NativePointer impl_TextMenuItemId_ctor() {
        return GetAccessors()->getTextMenuItemIdAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getFinalizer() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_of(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 id_value_buf_selector = thisDeserializer.readInt8();
        Ark_ResourceStr id_value_buf = {};
        id_value_buf.selector = id_value_buf_selector;
        if (id_value_buf_selector == 0) {
            id_value_buf.selector = 0;
            id_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (id_value_buf_selector == 1) {
            id_value_buf.selector = 1;
            id_value_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for id_value_buf has to be chosen through deserialisation.");
        }
        Ark_ResourceStr id_value = static_cast<Ark_ResourceStr>(id_value_buf);;
        return GetAccessors()->getTextMenuItemIdAccessor()->of((const Ark_ResourceStr*)&id_value);
}
KOALA_INTEROP_DIRECT_2(TextMenuItemId_of, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_TextMenuItemId_equals(Ark_NativePointer thisPtr, Ark_NativePointer id) {
        Ark_TextMenuItemId self = reinterpret_cast<Ark_TextMenuItemId>(thisPtr);
        return GetAccessors()->getTextMenuItemIdAccessor()->equals(self, static_cast<Ark_TextMenuItemId>(id));
}
KOALA_INTEROP_DIRECT_2(TextMenuItemId_equals, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCUT() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCUT();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCUT, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCOPY() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCOPY();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCOPY, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getPASTE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getPASTE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getPASTE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSELECT_ALL() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSELECT_ALL();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSELECT_ALL, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCOLLABORATION_SERVICE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCOLLABORATION_SERVICE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCOLLABORATION_SERVICE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getCAMERA_INPUT() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getCAMERA_INPUT();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getCAMERA_INPUT, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getAI_WRITER() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getAI_WRITER();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getAI_WRITER, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getTRANSLATE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getTRANSLATE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getTRANSLATE, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSEARCH() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSEARCH();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSEARCH, Ark_NativePointer)
Ark_NativePointer impl_TextMenuItemId_getSHARE() {
        return GetAccessors()->getTextMenuItemIdAccessor()->getSHARE();
}
KOALA_INTEROP_DIRECT_0(TextMenuItemId_getSHARE, Ark_NativePointer)
Ark_NativePointer impl_SubmitEvent_ctor() {
        return GetAccessors()->getSubmitEventAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SubmitEvent_ctor, Ark_NativePointer)
Ark_NativePointer impl_SubmitEvent_getFinalizer() {
        return GetAccessors()->getSubmitEventAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SubmitEvent_getFinalizer, Ark_NativePointer)
void impl_SubmitEvent_keepEditableState(Ark_NativePointer thisPtr) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        GetAccessors()->getSubmitEventAccessor()->keepEditableState(self);
}
KOALA_INTEROP_DIRECT_V1(SubmitEvent_keepEditableState, Ark_NativePointer)
Ark_String impl_SubmitEvent_getText(Ark_NativePointer thisPtr) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        return GetAccessors()->getSubmitEventAccessor()->getText(self);
}
KOALA_INTEROP_1(SubmitEvent_getText, KStringPtr, Ark_NativePointer)
void impl_SubmitEvent_setText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_SubmitEvent self = reinterpret_cast<Ark_SubmitEvent>(thisPtr);
        GetAccessors()->getSubmitEventAccessor()->setText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(SubmitEvent_setText, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_TextInputController_ctor() {
        return GetAccessors()->getTextInputControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextInputController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextInputController_getFinalizer() {
        return GetAccessors()->getTextInputControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextInputController_getFinalizer, Ark_NativePointer)
void impl_TextInputController_caretPosition(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        GetAccessors()->getTextInputControllerAccessor()->caretPosition(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(TextInputController_caretPosition, Ark_NativePointer, KInteropNumber)
void impl_TextInputController_setTextSelection(Ark_NativePointer thisPtr, KInteropNumber selectionStart, KInteropNumber selectionEnd, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_SelectionOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readSelectionOptions();
        }
        Opt_SelectionOptions options_value = options_value_buf;;
        GetAccessors()->getTextInputControllerAccessor()->setTextSelection(self, (const Ark_Number*) (&selectionStart), (const Ark_Number*) (&selectionEnd), (const Opt_SelectionOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V5(TextInputController_setTextSelection, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
void impl_TextInputController_stopEditing(Ark_NativePointer thisPtr) {
        Ark_TextInputController self = reinterpret_cast<Ark_TextInputController>(thisPtr);
        GetAccessors()->getTextInputControllerAccessor()->stopEditing(self);
}
KOALA_INTEROP_DIRECT_V1(TextInputController_stopEditing, Ark_NativePointer)
void impl_TextPickerDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextPickerDialogOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTextPickerDialogOptions();
        }
        Opt_TextPickerDialogOptions options_value = options_value_buf;;
        GetAccessors()->getTextPickerDialogAccessor()->show((const Opt_TextPickerDialogOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V2(TextPickerDialog_show, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextTimerController_ctor() {
        return GetAccessors()->getTextTimerControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(TextTimerController_ctor, Ark_NativePointer)
Ark_NativePointer impl_TextTimerController_getFinalizer() {
        return GetAccessors()->getTextTimerControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextTimerController_getFinalizer, Ark_NativePointer)
void impl_TextTimerController_start(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_start, Ark_NativePointer)
void impl_TextTimerController_pause(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_pause, Ark_NativePointer)
void impl_TextTimerController_reset(Ark_NativePointer thisPtr) {
        Ark_TextTimerController self = reinterpret_cast<Ark_TextTimerController>(thisPtr);
        GetAccessors()->getTextTimerControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(TextTimerController_reset, Ark_NativePointer)
void impl_TimePickerDialog_show(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TimePickerDialogOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readTimePickerDialogOptions();
        }
        Opt_TimePickerDialogOptions options_value = options_value_buf;;
        GetAccessors()->getTimePickerDialogAccessor()->show((const Opt_TimePickerDialogOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V2(TimePickerDialog_show, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorFilter_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 value_value_buf_length = thisDeserializer.readInt32();
        Array_Number value_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(value_value_buf)>::type,
        std::decay<decltype(*value_value_buf.array)>::type>(&value_value_buf, value_value_buf_length);
        for (int value_value_buf_i = 0; value_value_buf_i < value_value_buf_length; value_value_buf_i++) {
            value_value_buf.array[value_value_buf_i] = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Array_Number value_value = value_value_buf;;
        return GetAccessors()->getColorFilterAccessor()->ctor((const Array_Number*)&value_value);
}
KOALA_INTEROP_DIRECT_2(ColorFilter_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ColorFilter_getFinalizer() {
        return GetAccessors()->getColorFilterAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ColorFilter_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_VideoController_ctor() {
        return GetAccessors()->getVideoControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(VideoController_ctor, Ark_NativePointer)
Ark_NativePointer impl_VideoController_getFinalizer() {
        return GetAccessors()->getVideoControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(VideoController_getFinalizer, Ark_NativePointer)
void impl_VideoController_start(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->start(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_start, Ark_NativePointer)
void impl_VideoController_pause(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_pause, Ark_NativePointer)
void impl_VideoController_stop(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_stop, Ark_NativePointer)
void impl_VideoController_setCurrentTime0(Ark_NativePointer thisPtr, KInteropNumber value) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->setCurrentTime0(self, (const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_V2(VideoController_setCurrentTime0, Ark_NativePointer, KInteropNumber)
void impl_VideoController_setCurrentTime1(Ark_NativePointer thisPtr, KInteropNumber value, Ark_Int32 seekMode) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->setCurrentTime1(self, (const Ark_Number*) (&value), static_cast<Ark_SeekMode>(seekMode));
}
KOALA_INTEROP_DIRECT_V3(VideoController_setCurrentTime1, Ark_NativePointer, KInteropNumber, Ark_Int32)
void impl_VideoController_requestFullscreen(Ark_NativePointer thisPtr, Ark_Boolean value) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->requestFullscreen(self, value);
}
KOALA_INTEROP_DIRECT_V2(VideoController_requestFullscreen, Ark_NativePointer, Ark_Boolean)
void impl_VideoController_exitFullscreen(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->exitFullscreen(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_exitFullscreen, Ark_NativePointer)
void impl_VideoController_reset(Ark_NativePointer thisPtr) {
        Ark_VideoController self = reinterpret_cast<Ark_VideoController>(thisPtr);
        GetAccessors()->getVideoControllerAccessor()->reset(self);
}
KOALA_INTEROP_DIRECT_V1(VideoController_reset, Ark_NativePointer)
Ark_NativePointer impl_WebKeyboardController_ctor() {
        return GetAccessors()->getWebKeyboardControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebKeyboardController_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebKeyboardController_getFinalizer() {
        return GetAccessors()->getWebKeyboardControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebKeyboardController_getFinalizer, Ark_NativePointer)
void impl_WebKeyboardController_insertText(Ark_NativePointer thisPtr, const KStringPtr& text) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->insertText(self, (const Ark_String*) (&text));
}
KOALA_INTEROP_V2(WebKeyboardController_insertText, Ark_NativePointer, KStringPtr)
void impl_WebKeyboardController_deleteForward(Ark_NativePointer thisPtr, KInteropNumber length) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->deleteForward(self, (const Ark_Number*) (&length));
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_deleteForward, Ark_NativePointer, KInteropNumber)
void impl_WebKeyboardController_deleteBackward(Ark_NativePointer thisPtr, KInteropNumber length) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->deleteBackward(self, (const Ark_Number*) (&length));
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_deleteBackward, Ark_NativePointer, KInteropNumber)
void impl_WebKeyboardController_sendFunctionKey(Ark_NativePointer thisPtr, KInteropNumber key) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->sendFunctionKey(self, (const Ark_Number*) (&key));
}
KOALA_INTEROP_DIRECT_V2(WebKeyboardController_sendFunctionKey, Ark_NativePointer, KInteropNumber)
void impl_WebKeyboardController_close(Ark_NativePointer thisPtr) {
        Ark_WebKeyboardController self = reinterpret_cast<Ark_WebKeyboardController>(thisPtr);
        GetAccessors()->getWebKeyboardControllerAccessor()->close(self);
}
KOALA_INTEROP_DIRECT_V1(WebKeyboardController_close, Ark_NativePointer)
Ark_NativePointer impl_FullScreenExitHandler_ctor() {
        return GetAccessors()->getFullScreenExitHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(FullScreenExitHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_FullScreenExitHandler_getFinalizer() {
        return GetAccessors()->getFullScreenExitHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FullScreenExitHandler_getFinalizer, Ark_NativePointer)
void impl_FullScreenExitHandler_exitFullScreen(Ark_NativePointer thisPtr) {
        Ark_FullScreenExitHandler self = reinterpret_cast<Ark_FullScreenExitHandler>(thisPtr);
        GetAccessors()->getFullScreenExitHandlerAccessor()->exitFullScreen(self);
}
KOALA_INTEROP_DIRECT_V1(FullScreenExitHandler_exitFullScreen, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorParam_ctor() {
        return GetAccessors()->getFileSelectorParamAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(FileSelectorParam_ctor, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorParam_getFinalizer() {
        return GetAccessors()->getFileSelectorParamAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FileSelectorParam_getFinalizer, Ark_NativePointer)
Ark_String impl_FileSelectorParam_getTitle(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->getTitle(self);
}
KOALA_INTEROP_1(FileSelectorParam_getTitle, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_FileSelectorParam_getMode(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->getMode(self);
}
KOALA_INTEROP_DIRECT_1(FileSelectorParam_getMode, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_FileSelectorParam_getAcceptType(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        const auto &retValue = GetAccessors()->getFileSelectorParamAccessor()->getAcceptType(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FileSelectorParam_getAcceptType, KInteropReturnBuffer, Ark_NativePointer)
Ark_Boolean impl_FileSelectorParam_isCapture(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        return GetAccessors()->getFileSelectorParamAccessor()->isCapture(self);
}
KOALA_INTEROP_DIRECT_1(FileSelectorParam_isCapture, Ark_Boolean, Ark_NativePointer)
KInteropReturnBuffer impl_FileSelectorParam_getMimeTypes(Ark_NativePointer thisPtr) {
        Ark_FileSelectorParam self = reinterpret_cast<Ark_FileSelectorParam>(thisPtr);
        const auto &retValue = GetAccessors()->getFileSelectorParamAccessor()->getMimeTypes(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(FileSelectorParam_getMimeTypes, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_JsResult_ctor() {
        return GetAccessors()->getJsResultAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(JsResult_ctor, Ark_NativePointer)
Ark_NativePointer impl_JsResult_getFinalizer() {
        return GetAccessors()->getJsResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(JsResult_getFinalizer, Ark_NativePointer)
void impl_JsResult_handleCancel(Ark_NativePointer thisPtr) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handleCancel(self);
}
KOALA_INTEROP_DIRECT_V1(JsResult_handleCancel, Ark_NativePointer)
void impl_JsResult_handleConfirm(Ark_NativePointer thisPtr) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handleConfirm(self);
}
KOALA_INTEROP_DIRECT_V1(JsResult_handleConfirm, Ark_NativePointer)
void impl_JsResult_handlePromptConfirm(Ark_NativePointer thisPtr, const KStringPtr& result) {
        Ark_JsResult self = reinterpret_cast<Ark_JsResult>(thisPtr);
        GetAccessors()->getJsResultAccessor()->handlePromptConfirm(self, (const Ark_String*) (&result));
}
KOALA_INTEROP_V2(JsResult_handlePromptConfirm, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_FileSelectorResult_ctor() {
        return GetAccessors()->getFileSelectorResultAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(FileSelectorResult_ctor, Ark_NativePointer)
Ark_NativePointer impl_FileSelectorResult_getFinalizer() {
        return GetAccessors()->getFileSelectorResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(FileSelectorResult_getFinalizer, Ark_NativePointer)
void impl_FileSelectorResult_handleFileList(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_FileSelectorResult self = reinterpret_cast<Ark_FileSelectorResult>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 fileList_value_buf_length = thisDeserializer.readInt32();
        Array_String fileList_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(fileList_value_buf)>::type,
        std::decay<decltype(*fileList_value_buf.array)>::type>(&fileList_value_buf, fileList_value_buf_length);
        for (int fileList_value_buf_i = 0; fileList_value_buf_i < fileList_value_buf_length; fileList_value_buf_i++) {
            fileList_value_buf.array[fileList_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String fileList_value = fileList_value_buf;;
        GetAccessors()->getFileSelectorResultAccessor()->handleFileList(self, (const Array_String*)&fileList_value);
}
KOALA_INTEROP_DIRECT_V3(FileSelectorResult_handleFileList, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_HttpAuthHandler_ctor() {
        return GetAccessors()->getHttpAuthHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(HttpAuthHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_HttpAuthHandler_getFinalizer() {
        return GetAccessors()->getHttpAuthHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(HttpAuthHandler_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_HttpAuthHandler_confirm(Ark_NativePointer thisPtr, const KStringPtr& userName, const KStringPtr& password) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        return GetAccessors()->getHttpAuthHandlerAccessor()->confirm(self, (const Ark_String*) (&userName), (const Ark_String*) (&password));
}
KOALA_INTEROP_3(HttpAuthHandler_confirm, Ark_Boolean, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_HttpAuthHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        GetAccessors()->getHttpAuthHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(HttpAuthHandler_cancel, Ark_NativePointer)
Ark_Boolean impl_HttpAuthHandler_isHttpAuthInfoSaved(Ark_NativePointer thisPtr) {
        Ark_HttpAuthHandler self = reinterpret_cast<Ark_HttpAuthHandler>(thisPtr);
        return GetAccessors()->getHttpAuthHandlerAccessor()->isHttpAuthInfoSaved(self);
}
KOALA_INTEROP_DIRECT_1(HttpAuthHandler_isHttpAuthInfoSaved, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_SslErrorHandler_ctor() {
        return GetAccessors()->getSslErrorHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(SslErrorHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_SslErrorHandler_getFinalizer() {
        return GetAccessors()->getSslErrorHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(SslErrorHandler_getFinalizer, Ark_NativePointer)
void impl_SslErrorHandler_handleConfirm(Ark_NativePointer thisPtr) {
        Ark_SslErrorHandler self = reinterpret_cast<Ark_SslErrorHandler>(thisPtr);
        GetAccessors()->getSslErrorHandlerAccessor()->handleConfirm(self);
}
KOALA_INTEROP_DIRECT_V1(SslErrorHandler_handleConfirm, Ark_NativePointer)
void impl_SslErrorHandler_handleCancel(Ark_NativePointer thisPtr) {
        Ark_SslErrorHandler self = reinterpret_cast<Ark_SslErrorHandler>(thisPtr);
        GetAccessors()->getSslErrorHandlerAccessor()->handleCancel(self);
}
KOALA_INTEROP_DIRECT_V1(SslErrorHandler_handleCancel, Ark_NativePointer)
Ark_NativePointer impl_ClientAuthenticationHandler_ctor() {
        return GetAccessors()->getClientAuthenticationHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ClientAuthenticationHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_ClientAuthenticationHandler_getFinalizer() {
        return GetAccessors()->getClientAuthenticationHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ClientAuthenticationHandler_getFinalizer, Ark_NativePointer)
void impl_ClientAuthenticationHandler_confirm0(Ark_NativePointer thisPtr, const KStringPtr& priKeyFile, const KStringPtr& certChainFile) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->confirm0(self, (const Ark_String*) (&priKeyFile), (const Ark_String*) (&certChainFile));
}
KOALA_INTEROP_V3(ClientAuthenticationHandler_confirm0, Ark_NativePointer, KStringPtr, KStringPtr)
void impl_ClientAuthenticationHandler_confirm1(Ark_NativePointer thisPtr, const KStringPtr& authUri) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->confirm1(self, (const Ark_String*) (&authUri));
}
KOALA_INTEROP_V2(ClientAuthenticationHandler_confirm1, Ark_NativePointer, KStringPtr)
void impl_ClientAuthenticationHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(ClientAuthenticationHandler_cancel, Ark_NativePointer)
void impl_ClientAuthenticationHandler_ignore(Ark_NativePointer thisPtr) {
        Ark_ClientAuthenticationHandler self = reinterpret_cast<Ark_ClientAuthenticationHandler>(thisPtr);
        GetAccessors()->getClientAuthenticationHandlerAccessor()->ignore(self);
}
KOALA_INTEROP_DIRECT_V1(ClientAuthenticationHandler_ignore, Ark_NativePointer)
Ark_NativePointer impl_PermissionRequest_ctor() {
        return GetAccessors()->getPermissionRequestAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(PermissionRequest_ctor, Ark_NativePointer)
Ark_NativePointer impl_PermissionRequest_getFinalizer() {
        return GetAccessors()->getPermissionRequestAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(PermissionRequest_getFinalizer, Ark_NativePointer)
void impl_PermissionRequest_deny(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        GetAccessors()->getPermissionRequestAccessor()->deny(self);
}
KOALA_INTEROP_DIRECT_V1(PermissionRequest_deny, Ark_NativePointer)
Ark_String impl_PermissionRequest_getOrigin(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        return GetAccessors()->getPermissionRequestAccessor()->getOrigin(self);
}
KOALA_INTEROP_1(PermissionRequest_getOrigin, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_PermissionRequest_getAccessibleResource(Ark_NativePointer thisPtr) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        const auto &retValue = GetAccessors()->getPermissionRequestAccessor()->getAccessibleResource(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_String retValue_element = retValue.array[i];
            _retSerializer.writeString(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(PermissionRequest_getAccessibleResource, KInteropReturnBuffer, Ark_NativePointer)
void impl_PermissionRequest_grant(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_PermissionRequest self = reinterpret_cast<Ark_PermissionRequest>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 resources_value_buf_length = thisDeserializer.readInt32();
        Array_String resources_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(resources_value_buf)>::type,
        std::decay<decltype(*resources_value_buf.array)>::type>(&resources_value_buf, resources_value_buf_length);
        for (int resources_value_buf_i = 0; resources_value_buf_i < resources_value_buf_length; resources_value_buf_i++) {
            resources_value_buf.array[resources_value_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        Array_String resources_value = resources_value_buf;;
        GetAccessors()->getPermissionRequestAccessor()->grant(self, (const Array_String*)&resources_value);
}
KOALA_INTEROP_DIRECT_V3(PermissionRequest_grant, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ScreenCaptureHandler_ctor() {
        return GetAccessors()->getScreenCaptureHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ScreenCaptureHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_ScreenCaptureHandler_getFinalizer() {
        return GetAccessors()->getScreenCaptureHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ScreenCaptureHandler_getFinalizer, Ark_NativePointer)
Ark_String impl_ScreenCaptureHandler_getOrigin(Ark_NativePointer thisPtr) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        return GetAccessors()->getScreenCaptureHandlerAccessor()->getOrigin(self);
}
KOALA_INTEROP_1(ScreenCaptureHandler_getOrigin, KStringPtr, Ark_NativePointer)
void impl_ScreenCaptureHandler_grant(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ScreenCaptureConfig config_value = thisDeserializer.readScreenCaptureConfig();;
        GetAccessors()->getScreenCaptureHandlerAccessor()->grant(self, (const Ark_ScreenCaptureConfig*)&config_value);
}
KOALA_INTEROP_DIRECT_V3(ScreenCaptureHandler_grant, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_ScreenCaptureHandler_deny(Ark_NativePointer thisPtr) {
        Ark_ScreenCaptureHandler self = reinterpret_cast<Ark_ScreenCaptureHandler>(thisPtr);
        GetAccessors()->getScreenCaptureHandlerAccessor()->deny(self);
}
KOALA_INTEROP_DIRECT_V1(ScreenCaptureHandler_deny, Ark_NativePointer)
Ark_NativePointer impl_DataResubmissionHandler_ctor() {
        return GetAccessors()->getDataResubmissionHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(DataResubmissionHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_DataResubmissionHandler_getFinalizer() {
        return GetAccessors()->getDataResubmissionHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DataResubmissionHandler_getFinalizer, Ark_NativePointer)
void impl_DataResubmissionHandler_resend(Ark_NativePointer thisPtr) {
        Ark_DataResubmissionHandler self = reinterpret_cast<Ark_DataResubmissionHandler>(thisPtr);
        GetAccessors()->getDataResubmissionHandlerAccessor()->resend(self);
}
KOALA_INTEROP_DIRECT_V1(DataResubmissionHandler_resend, Ark_NativePointer)
void impl_DataResubmissionHandler_cancel(Ark_NativePointer thisPtr) {
        Ark_DataResubmissionHandler self = reinterpret_cast<Ark_DataResubmissionHandler>(thisPtr);
        GetAccessors()->getDataResubmissionHandlerAccessor()->cancel(self);
}
KOALA_INTEROP_DIRECT_V1(DataResubmissionHandler_cancel, Ark_NativePointer)
Ark_NativePointer impl_ControllerHandler_ctor() {
        return GetAccessors()->getControllerHandlerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(ControllerHandler_ctor, Ark_NativePointer)
Ark_NativePointer impl_ControllerHandler_getFinalizer() {
        return GetAccessors()->getControllerHandlerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ControllerHandler_getFinalizer, Ark_NativePointer)
void impl_ControllerHandler_setWebController(Ark_NativePointer thisPtr, Ark_NativePointer controller) {
        Ark_ControllerHandler self = reinterpret_cast<Ark_ControllerHandler>(thisPtr);
        GetAccessors()->getControllerHandlerAccessor()->setWebController(self, static_cast<Ark_WebviewController>(controller));
}
KOALA_INTEROP_DIRECT_V2(ControllerHandler_setWebController, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuParam_ctor() {
        return GetAccessors()->getWebContextMenuParamAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuParam_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuParam_getFinalizer() {
        return GetAccessors()->getWebContextMenuParamAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuParam_getFinalizer, Ark_NativePointer)
Ark_Number impl_WebContextMenuParam_x(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->x(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_x, KInteropNumber, Ark_NativePointer)
Ark_Number impl_WebContextMenuParam_y(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->y(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_y, KInteropNumber, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getLinkUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getLinkUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getLinkUrl, KStringPtr, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getUnfilteredLinkUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getUnfilteredLinkUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getUnfilteredLinkUrl, KStringPtr, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getSourceUrl(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSourceUrl(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getSourceUrl, KStringPtr, Ark_NativePointer)
Ark_Boolean impl_WebContextMenuParam_existsImageContents(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->existsImageContents(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_existsImageContents, Ark_Boolean, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getMediaType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getMediaType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getMediaType, Ark_Int32, Ark_NativePointer)
Ark_String impl_WebContextMenuParam_getSelectionText(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSelectionText(self);
}
KOALA_INTEROP_1(WebContextMenuParam_getSelectionText, KStringPtr, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getSourceType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getSourceType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getSourceType, Ark_Int32, Ark_NativePointer)
Ark_Int32 impl_WebContextMenuParam_getInputFieldType(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getInputFieldType(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getInputFieldType, Ark_Int32, Ark_NativePointer)
Ark_Boolean impl_WebContextMenuParam_isEditable(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->isEditable(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_isEditable, Ark_Boolean, Ark_NativePointer)
Ark_Number impl_WebContextMenuParam_getEditStateFlags(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getEditStateFlags(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getEditStateFlags, KInteropNumber, Ark_NativePointer)
Ark_Number impl_WebContextMenuParam_getPreviewWidth(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getPreviewWidth(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getPreviewWidth, KInteropNumber, Ark_NativePointer)
Ark_Number impl_WebContextMenuParam_getPreviewHeight(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuParam self = reinterpret_cast<Ark_WebContextMenuParam>(thisPtr);
        return GetAccessors()->getWebContextMenuParamAccessor()->getPreviewHeight(self);
}
KOALA_INTEROP_DIRECT_1(WebContextMenuParam_getPreviewHeight, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuResult_ctor() {
        return GetAccessors()->getWebContextMenuResultAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuResult_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebContextMenuResult_getFinalizer() {
        return GetAccessors()->getWebContextMenuResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebContextMenuResult_getFinalizer, Ark_NativePointer)
void impl_WebContextMenuResult_closeContextMenu(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->closeContextMenu(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_closeContextMenu, Ark_NativePointer)
void impl_WebContextMenuResult_copyImage(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->copyImage(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_copyImage, Ark_NativePointer)
void impl_WebContextMenuResult_copy(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->copy(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_copy, Ark_NativePointer)
void impl_WebContextMenuResult_paste(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->paste(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_paste, Ark_NativePointer)
void impl_WebContextMenuResult_cut(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->cut(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_cut, Ark_NativePointer)
void impl_WebContextMenuResult_selectAll(Ark_NativePointer thisPtr) {
        Ark_WebContextMenuResult self = reinterpret_cast<Ark_WebContextMenuResult>(thisPtr);
        GetAccessors()->getWebContextMenuResultAccessor()->selectAll(self);
}
KOALA_INTEROP_DIRECT_V1(WebContextMenuResult_selectAll, Ark_NativePointer)
Ark_NativePointer impl_ConsoleMessage_ctor(const KStringPtr& message, const KStringPtr& sourceId, KInteropNumber lineNumber, Ark_Int32 messageLevel) {
        return GetAccessors()->getConsoleMessageAccessor()->ctor((const Ark_String*) (&message), (const Ark_String*) (&sourceId), (const Ark_Number*) (&lineNumber), static_cast<Ark_MessageLevel>(messageLevel));
}
KOALA_INTEROP_4(ConsoleMessage_ctor, Ark_NativePointer, KStringPtr, KStringPtr, KInteropNumber, Ark_Int32)
Ark_NativePointer impl_ConsoleMessage_getFinalizer() {
        return GetAccessors()->getConsoleMessageAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ConsoleMessage_getFinalizer, Ark_NativePointer)
Ark_String impl_ConsoleMessage_getMessage(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getMessage(self);
}
KOALA_INTEROP_1(ConsoleMessage_getMessage, KStringPtr, Ark_NativePointer)
Ark_String impl_ConsoleMessage_getSourceId(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getSourceId(self);
}
KOALA_INTEROP_1(ConsoleMessage_getSourceId, KStringPtr, Ark_NativePointer)
Ark_Number impl_ConsoleMessage_getLineNumber(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getLineNumber(self);
}
KOALA_INTEROP_DIRECT_1(ConsoleMessage_getLineNumber, KInteropNumber, Ark_NativePointer)
Ark_Int32 impl_ConsoleMessage_getMessageLevel(Ark_NativePointer thisPtr) {
        Ark_ConsoleMessage self = reinterpret_cast<Ark_ConsoleMessage>(thisPtr);
        return GetAccessors()->getConsoleMessageAccessor()->getMessageLevel(self);
}
KOALA_INTEROP_DIRECT_1(ConsoleMessage_getMessageLevel, Ark_Int32, Ark_NativePointer)
Ark_NativePointer impl_WebResourceRequest_ctor() {
        return GetAccessors()->getWebResourceRequestAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebResourceRequest_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebResourceRequest_getFinalizer() {
        return GetAccessors()->getWebResourceRequestAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceRequest_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceRequest_getRequestHeader(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceRequestAccessor()->getRequestHeader(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_Header retValue_element = retValue.array[i];
            _retSerializer.writeHeader(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceRequest_getRequestHeader, KInteropReturnBuffer, Ark_NativePointer)
Ark_String impl_WebResourceRequest_getRequestUrl(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->getRequestUrl(self);
}
KOALA_INTEROP_1(WebResourceRequest_getRequestUrl, KStringPtr, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isRequestGesture(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isRequestGesture(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isRequestGesture, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isMainFrame(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isMainFrame(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isMainFrame, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebResourceRequest_isRedirect(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->isRedirect(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceRequest_isRedirect, Ark_Boolean, Ark_NativePointer)
Ark_String impl_WebResourceRequest_getRequestMethod(Ark_NativePointer thisPtr) {
        Ark_WebResourceRequest self = reinterpret_cast<Ark_WebResourceRequest>(thisPtr);
        return GetAccessors()->getWebResourceRequestAccessor()->getRequestMethod(self);
}
KOALA_INTEROP_1(WebResourceRequest_getRequestMethod, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_WebResourceResponse_ctor() {
        return GetAccessors()->getWebResourceResponseAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebResourceResponse_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebResourceResponse_getFinalizer() {
        return GetAccessors()->getWebResourceResponseAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceResponse_getFinalizer, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseData(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseData(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseData, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceResponse_getResponseDataEx(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceResponseAccessor()->getResponseDataEx(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeString(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeBuffer(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                _retSerializer.writeResource(retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceResponse_getResponseDataEx, KInteropReturnBuffer, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseEncoding(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseEncoding(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseEncoding, KStringPtr, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getResponseMimeType(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseMimeType(self);
}
KOALA_INTEROP_1(WebResourceResponse_getResponseMimeType, KStringPtr, Ark_NativePointer)
Ark_String impl_WebResourceResponse_getReasonMessage(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getReasonMessage(self);
}
KOALA_INTEROP_1(WebResourceResponse_getReasonMessage, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_WebResourceResponse_getResponseHeader(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        const auto &retValue = GetAccessors()->getWebResourceResponseAccessor()->getResponseHeader(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_Header retValue_element = retValue.array[i];
            _retSerializer.writeHeader(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WebResourceResponse_getResponseHeader, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_WebResourceResponse_getResponseCode(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseCode(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceResponse_getResponseCode, KInteropNumber, Ark_NativePointer)
void impl_WebResourceResponse_setResponseData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 data_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Number_Resource_Buffer data_value_buf = {};
        data_value_buf.selector = data_value_buf_selector;
        if (data_value_buf_selector == 0) {
            data_value_buf.selector = 0;
            data_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (data_value_buf_selector == 1) {
            data_value_buf.selector = 1;
            data_value_buf.value1 = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        else if (data_value_buf_selector == 2) {
            data_value_buf.selector = 2;
            data_value_buf.value2 = thisDeserializer.readResource();
        }
        else if (data_value_buf_selector == 3) {
            data_value_buf.selector = 3;
            data_value_buf.value3 = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());
        }
        else {
            INTEROP_FATAL("One of the branches for data_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_Number_Resource_Buffer data_value = static_cast<Ark_Union_String_Number_Resource_Buffer>(data_value_buf);;
        GetAccessors()->getWebResourceResponseAccessor()->setResponseData(self, (const Ark_Union_String_Number_Resource_Buffer*)&data_value);
}
KOALA_INTEROP_DIRECT_V3(WebResourceResponse_setResponseData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebResourceResponse_setResponseEncoding(Ark_NativePointer thisPtr, const KStringPtr& encoding) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseEncoding(self, (const Ark_String*) (&encoding));
}
KOALA_INTEROP_V2(WebResourceResponse_setResponseEncoding, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setResponseMimeType(Ark_NativePointer thisPtr, const KStringPtr& mimeType) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseMimeType(self, (const Ark_String*) (&mimeType));
}
KOALA_INTEROP_V2(WebResourceResponse_setResponseMimeType, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setReasonMessage(Ark_NativePointer thisPtr, const KStringPtr& reason) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setReasonMessage(self, (const Ark_String*) (&reason));
}
KOALA_INTEROP_V2(WebResourceResponse_setReasonMessage, Ark_NativePointer, KStringPtr)
void impl_WebResourceResponse_setResponseHeader(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 header_value_buf_length = thisDeserializer.readInt32();
        Array_Header header_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(header_value_buf)>::type,
        std::decay<decltype(*header_value_buf.array)>::type>(&header_value_buf, header_value_buf_length);
        for (int header_value_buf_i = 0; header_value_buf_i < header_value_buf_length; header_value_buf_i++) {
            header_value_buf.array[header_value_buf_i] = thisDeserializer.readHeader();
        }
        Array_Header header_value = header_value_buf;;
        GetAccessors()->getWebResourceResponseAccessor()->setResponseHeader(self, (const Array_Header*)&header_value);
}
KOALA_INTEROP_DIRECT_V3(WebResourceResponse_setResponseHeader, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebResourceResponse_setResponseCode(Ark_NativePointer thisPtr, KInteropNumber code) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseCode(self, (const Ark_Number*) (&code));
}
KOALA_INTEROP_DIRECT_V2(WebResourceResponse_setResponseCode, Ark_NativePointer, KInteropNumber)
void impl_WebResourceResponse_setResponseIsReady(Ark_NativePointer thisPtr, Ark_Boolean IsReady) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        GetAccessors()->getWebResourceResponseAccessor()->setResponseIsReady(self, IsReady);
}
KOALA_INTEROP_DIRECT_V2(WebResourceResponse_setResponseIsReady, Ark_NativePointer, Ark_Boolean)
Ark_Boolean impl_WebResourceResponse_getResponseIsReady(Ark_NativePointer thisPtr) {
        Ark_WebResourceResponse self = reinterpret_cast<Ark_WebResourceResponse>(thisPtr);
        return GetAccessors()->getWebResourceResponseAccessor()->getResponseIsReady(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceResponse_getResponseIsReady, Ark_Boolean, Ark_NativePointer)
Ark_NativePointer impl_WebResourceError_ctor() {
        return GetAccessors()->getWebResourceErrorAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebResourceError_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebResourceError_getFinalizer() {
        return GetAccessors()->getWebResourceErrorAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebResourceError_getFinalizer, Ark_NativePointer)
Ark_String impl_WebResourceError_getErrorInfo(Ark_NativePointer thisPtr) {
        Ark_WebResourceError self = reinterpret_cast<Ark_WebResourceError>(thisPtr);
        return GetAccessors()->getWebResourceErrorAccessor()->getErrorInfo(self);
}
KOALA_INTEROP_1(WebResourceError_getErrorInfo, KStringPtr, Ark_NativePointer)
Ark_Number impl_WebResourceError_getErrorCode(Ark_NativePointer thisPtr) {
        Ark_WebResourceError self = reinterpret_cast<Ark_WebResourceError>(thisPtr);
        return GetAccessors()->getWebResourceErrorAccessor()->getErrorCode(self);
}
KOALA_INTEROP_DIRECT_1(WebResourceError_getErrorCode, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_JsGeolocation_ctor() {
        return GetAccessors()->getJsGeolocationAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(JsGeolocation_ctor, Ark_NativePointer)
Ark_NativePointer impl_JsGeolocation_getFinalizer() {
        return GetAccessors()->getJsGeolocationAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(JsGeolocation_getFinalizer, Ark_NativePointer)
void impl_JsGeolocation_invoke(Ark_NativePointer thisPtr, const KStringPtr& origin, Ark_Boolean allow, Ark_Boolean retain) {
        Ark_JsGeolocation self = reinterpret_cast<Ark_JsGeolocation>(thisPtr);
        GetAccessors()->getJsGeolocationAccessor()->invoke(self, (const Ark_String*) (&origin), allow, retain);
}
KOALA_INTEROP_V4(JsGeolocation_invoke, Ark_NativePointer, KStringPtr, Ark_Boolean, Ark_Boolean)
Ark_NativePointer impl_WebCookie_ctor() {
        return GetAccessors()->getWebCookieAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebCookie_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebCookie_getFinalizer() {
        return GetAccessors()->getWebCookieAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebCookie_getFinalizer, Ark_NativePointer)
void impl_WebCookie_setCookie(Ark_NativePointer thisPtr) {
        Ark_WebCookie self = reinterpret_cast<Ark_WebCookie>(thisPtr);
        GetAccessors()->getWebCookieAccessor()->setCookie(self);
}
KOALA_INTEROP_DIRECT_V1(WebCookie_setCookie, Ark_NativePointer)
void impl_WebCookie_saveCookie(Ark_NativePointer thisPtr) {
        Ark_WebCookie self = reinterpret_cast<Ark_WebCookie>(thisPtr);
        GetAccessors()->getWebCookieAccessor()->saveCookie(self);
}
KOALA_INTEROP_DIRECT_V1(WebCookie_saveCookie, Ark_NativePointer)
Ark_NativePointer impl_EventResult_ctor() {
        return GetAccessors()->getEventResultAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(EventResult_ctor, Ark_NativePointer)
Ark_NativePointer impl_EventResult_getFinalizer() {
        return GetAccessors()->getEventResultAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(EventResult_getFinalizer, Ark_NativePointer)
void impl_EventResult_setGestureEventResult0(Ark_NativePointer thisPtr, Ark_Boolean result) {
        Ark_EventResult self = reinterpret_cast<Ark_EventResult>(thisPtr);
        GetAccessors()->getEventResultAccessor()->setGestureEventResult0(self, result);
}
KOALA_INTEROP_DIRECT_V2(EventResult_setGestureEventResult0, Ark_NativePointer, Ark_Boolean)
void impl_EventResult_setGestureEventResult1(Ark_NativePointer thisPtr, Ark_Boolean result, Ark_Boolean stopPropagation) {
        Ark_EventResult self = reinterpret_cast<Ark_EventResult>(thisPtr);
        GetAccessors()->getEventResultAccessor()->setGestureEventResult1(self, result, stopPropagation);
}
KOALA_INTEROP_DIRECT_V3(EventResult_setGestureEventResult1, Ark_NativePointer, Ark_Boolean, Ark_Boolean)
Ark_NativePointer impl_WebController_ctor() {
        return GetAccessors()->getWebControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WebController_ctor, Ark_NativePointer)
Ark_NativePointer impl_WebController_getFinalizer() {
        return GetAccessors()->getWebControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WebController_getFinalizer, Ark_NativePointer)
void impl_WebController_onInactive(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->onInactive(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_onInactive, Ark_NativePointer)
void impl_WebController_onActive(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->onActive(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_onActive, Ark_NativePointer)
void impl_WebController_zoom(Ark_NativePointer thisPtr, KInteropNumber factor) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->zoom(self, (const Ark_Number*) (&factor));
}
KOALA_INTEROP_DIRECT_V2(WebController_zoom, Ark_NativePointer, KInteropNumber)
void impl_WebController_clearHistory(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->clearHistory(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_clearHistory, Ark_NativePointer)
void impl_WebController_runJavaScript(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_String_script_Callback_String_Void_callback_ options_value_buf = {};
        options_value_buf.script = static_cast<Ark_String>(thisDeserializer.readString());
        const auto options_value_buf_callback__buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_String_Void options_value_buf_callback__buf = {};
        options_value_buf_callback__buf.tag = options_value_buf_callback__buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_callback__buf_runtimeType))
        {
            options_value_buf_callback__buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};
        }
        options_value_buf.callback_ = options_value_buf_callback__buf;
        Ark_Literal_String_script_Callback_String_Void_callback_ options_value = options_value_buf;;
        GetAccessors()->getWebControllerAccessor()->runJavaScript(self, (const Ark_Literal_String_script_Callback_String_Void_callback_*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WebController_runJavaScript, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebController_loadData(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_String_baseUrl_data_encoding_historyUrl_mimeType options_value_buf = {};
        options_value_buf.data = static_cast<Ark_String>(thisDeserializer.readString());
        options_value_buf.mimeType = static_cast<Ark_String>(thisDeserializer.readString());
        options_value_buf.encoding = static_cast<Ark_String>(thisDeserializer.readString());
        const auto options_value_buf_baseUrl_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String options_value_buf_baseUrl_buf = {};
        options_value_buf_baseUrl_buf.tag = options_value_buf_baseUrl_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_baseUrl_buf_runtimeType))
        {
            options_value_buf_baseUrl_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        options_value_buf.baseUrl = options_value_buf_baseUrl_buf;
        const auto options_value_buf_historyUrl_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_String options_value_buf_historyUrl_buf = {};
        options_value_buf_historyUrl_buf.tag = options_value_buf_historyUrl_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_historyUrl_buf_runtimeType))
        {
            options_value_buf_historyUrl_buf.value = static_cast<Ark_String>(thisDeserializer.readString());
        }
        options_value_buf.historyUrl = options_value_buf_historyUrl_buf;
        Ark_Literal_String_baseUrl_data_encoding_historyUrl_mimeType options_value = options_value_buf;;
        GetAccessors()->getWebControllerAccessor()->loadData(self, (const Ark_Literal_String_baseUrl_data_encoding_historyUrl_mimeType*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WebController_loadData, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebController_loadUrl(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_Union_String_Resource_url_Array_Header_headers options_value_buf = {};
        const Ark_Int8 options_value_buf_url_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_Resource options_value_buf_url_buf = {};
        options_value_buf_url_buf.selector = options_value_buf_url_buf_selector;
        if (options_value_buf_url_buf_selector == 0) {
            options_value_buf_url_buf.selector = 0;
            options_value_buf_url_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (options_value_buf_url_buf_selector == 1) {
            options_value_buf_url_buf.selector = 1;
            options_value_buf_url_buf.value1 = thisDeserializer.readResource();
        }
        else {
            INTEROP_FATAL("One of the branches for options_value_buf_url_buf has to be chosen through deserialisation.");
        }
        options_value_buf.url = static_cast<Ark_Union_String_Resource>(options_value_buf_url_buf);
        const auto options_value_buf_headers_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_Header options_value_buf_headers_buf = {};
        options_value_buf_headers_buf.tag = options_value_buf_headers_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_headers_buf_runtimeType))
        {
            const Ark_Int32 options_value_buf_headers_buf__length = thisDeserializer.readInt32();
            Array_Header options_value_buf_headers_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(options_value_buf_headers_buf_)>::type,
        std::decay<decltype(*options_value_buf_headers_buf_.array)>::type>(&options_value_buf_headers_buf_, options_value_buf_headers_buf__length);
            for (int options_value_buf_headers_buf__i = 0; options_value_buf_headers_buf__i < options_value_buf_headers_buf__length; options_value_buf_headers_buf__i++) {
                options_value_buf_headers_buf_.array[options_value_buf_headers_buf__i] = thisDeserializer.readHeader();
            }
            options_value_buf_headers_buf.value = options_value_buf_headers_buf_;
        }
        options_value_buf.headers = options_value_buf_headers_buf;
        Ark_Literal_Union_String_Resource_url_Array_Header_headers options_value = options_value_buf;;
        GetAccessors()->getWebControllerAccessor()->loadUrl(self, (const Ark_Literal_Union_String_Resource_url_Array_Header_headers*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WebController_loadUrl, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebController_refresh(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->refresh(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_refresh, Ark_NativePointer)
void impl_WebController_stop(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_stop, Ark_NativePointer)
void impl_WebController_registerJavaScriptProxy(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_Object_object__String_name_Array_String_methodList options_value_buf = {};
        options_value_buf.object_ = static_cast<Ark_Object>(thisDeserializer.readObject());
        options_value_buf.name = static_cast<Ark_String>(thisDeserializer.readString());
        const Ark_Int32 options_value_buf_methodList_buf_length = thisDeserializer.readInt32();
        Array_String options_value_buf_methodList_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(options_value_buf_methodList_buf)>::type,
        std::decay<decltype(*options_value_buf_methodList_buf.array)>::type>(&options_value_buf_methodList_buf, options_value_buf_methodList_buf_length);
        for (int options_value_buf_methodList_buf_i = 0; options_value_buf_methodList_buf_i < options_value_buf_methodList_buf_length; options_value_buf_methodList_buf_i++) {
            options_value_buf_methodList_buf.array[options_value_buf_methodList_buf_i] = static_cast<Ark_String>(thisDeserializer.readString());
        }
        options_value_buf.methodList = options_value_buf_methodList_buf;
        Ark_Literal_Object_object__String_name_Array_String_methodList options_value = options_value_buf;;
        GetAccessors()->getWebControllerAccessor()->registerJavaScriptProxy(self, (const Ark_Literal_Object_object__String_name_Array_String_methodList*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(WebController_registerJavaScriptProxy, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_WebController_deleteJavaScriptRegister(Ark_NativePointer thisPtr, const KStringPtr& name) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->deleteJavaScriptRegister(self, (const Ark_String*) (&name));
}
KOALA_INTEROP_V2(WebController_deleteJavaScriptRegister, Ark_NativePointer, KStringPtr)
Ark_Int32 impl_WebController_getHitTest(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        return GetAccessors()->getWebControllerAccessor()->getHitTest(self);
}
KOALA_INTEROP_DIRECT_1(WebController_getHitTest, Ark_Int32, Ark_NativePointer)
void impl_WebController_requestFocus(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->requestFocus(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_requestFocus, Ark_NativePointer)
Ark_Boolean impl_WebController_accessBackward(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        return GetAccessors()->getWebControllerAccessor()->accessBackward(self);
}
KOALA_INTEROP_DIRECT_1(WebController_accessBackward, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebController_accessForward(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        return GetAccessors()->getWebControllerAccessor()->accessForward(self);
}
KOALA_INTEROP_DIRECT_1(WebController_accessForward, Ark_Boolean, Ark_NativePointer)
Ark_Boolean impl_WebController_accessStep(Ark_NativePointer thisPtr, KInteropNumber step) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        return GetAccessors()->getWebControllerAccessor()->accessStep(self, (const Ark_Number*) (&step));
}
KOALA_INTEROP_DIRECT_2(WebController_accessStep, Ark_Boolean, Ark_NativePointer, KInteropNumber)
void impl_WebController_backward(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->backward(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_backward, Ark_NativePointer)
void impl_WebController_forward(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        GetAccessors()->getWebControllerAccessor()->forward(self);
}
KOALA_INTEROP_DIRECT_V1(WebController_forward, Ark_NativePointer)
Ark_NativePointer impl_WebController_getCookieManager(Ark_NativePointer thisPtr) {
        Ark_WebController self = reinterpret_cast<Ark_WebController>(thisPtr);
        return GetAccessors()->getWebControllerAccessor()->getCookieManager(self);
}
KOALA_INTEROP_DIRECT_1(WebController_getCookieManager, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_XComponentController_ctor() {
        return GetAccessors()->getXComponentControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(XComponentController_ctor, Ark_NativePointer)
Ark_NativePointer impl_XComponentController_getFinalizer() {
        return GetAccessors()->getXComponentControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(XComponentController_getFinalizer, Ark_NativePointer)
Ark_String impl_XComponentController_getXComponentSurfaceId(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        return GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceId(self);
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceId, KStringPtr, Ark_NativePointer)
void impl_XComponentController_getXComponentContext(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->getXComponentContext(self);
}
KOALA_INTEROP_DIRECT_V1(XComponentController_getXComponentContext, Ark_NativePointer)
void impl_XComponentController_setXComponentSurfaceSize(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Literal_Number_surfaceHeight_surfaceWidth value_value_buf = {};
        value_value_buf.surfaceWidth = static_cast<Ark_Number>(thisDeserializer.readNumber());
        value_value_buf.surfaceHeight = static_cast<Ark_Number>(thisDeserializer.readNumber());
        Ark_Literal_Number_surfaceHeight_surfaceWidth value_value = value_value_buf;;
        GetAccessors()->getXComponentControllerAccessor()->setXComponentSurfaceSize(self, (const Ark_Literal_Number_surfaceHeight_surfaceWidth*)&value_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setXComponentSurfaceSize, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentController_setXComponentSurfaceRect(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SurfaceRect rect_value = thisDeserializer.readSurfaceRect();;
        GetAccessors()->getXComponentControllerAccessor()->setXComponentSurfaceRect(self, (const Ark_SurfaceRect*)&rect_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setXComponentSurfaceRect, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_XComponentController_getXComponentSurfaceRect(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        const auto &retValue = GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceRect(self);
        Serializer _retSerializer {};
        _retSerializer.writeSurfaceRect(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceRect, KInteropReturnBuffer, Ark_NativePointer)
void impl_XComponentController_setXComponentSurfaceRotation(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SurfaceRotationOptions rotationOptions_value = thisDeserializer.readSurfaceRotationOptions();;
        GetAccessors()->getXComponentControllerAccessor()->setXComponentSurfaceRotation(self, (const Ark_SurfaceRotationOptions*)&rotationOptions_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setXComponentSurfaceRotation, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_XComponentController_getXComponentSurfaceRotation(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        const auto &retValue = GetAccessors()->getXComponentControllerAccessor()->getXComponentSurfaceRotation(self);
        Serializer _retSerializer {};
        _retSerializer.writeSurfaceRotationOptions(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(XComponentController_getXComponentSurfaceRotation, KInteropReturnBuffer, Ark_NativePointer)
void impl_XComponentController_onSurfaceCreated(Ark_NativePointer thisPtr, const KStringPtr& surfaceId) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->onSurfaceCreated(self, (const Ark_String*) (&surfaceId));
}
KOALA_INTEROP_V2(XComponentController_onSurfaceCreated, Ark_NativePointer, KStringPtr)
void impl_XComponentController_onSurfaceChanged(Ark_NativePointer thisPtr, const KStringPtr& surfaceId, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SurfaceRect rect_value = thisDeserializer.readSurfaceRect();;
        GetAccessors()->getXComponentControllerAccessor()->onSurfaceChanged(self, (const Ark_String*) (&surfaceId), (const Ark_SurfaceRect*)&rect_value);
}
KOALA_INTEROP_V4(XComponentController_onSurfaceChanged, Ark_NativePointer, KStringPtr, KSerializerBuffer, int32_t)
void impl_XComponentController_onSurfaceDestroyed(Ark_NativePointer thisPtr, const KStringPtr& surfaceId) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->onSurfaceDestroyed(self, (const Ark_String*) (&surfaceId));
}
KOALA_INTEROP_V2(XComponentController_onSurfaceDestroyed, Ark_NativePointer, KStringPtr)
void impl_XComponentController_startImageAnalyzer(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ImageAnalyzerConfig config_value = thisDeserializer.readImageAnalyzerConfig();;
        Callback_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_Array_String_Void))))};;
        GetAccessors()->getXComponentControllerAccessor()->startImageAnalyzer(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), self, (const Ark_ImageAnalyzerConfig*)&config_value, (const Callback_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V3(XComponentController_startImageAnalyzer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentController_stopImageAnalyzer(Ark_NativePointer thisPtr) {
        Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
        GetAccessors()->getXComponentControllerAccessor()->stopImageAnalyzer(self);
}
KOALA_INTEROP_DIRECT_V1(XComponentController_stopImageAnalyzer, Ark_NativePointer)
void impl_XComponentController_setOnSurfaceCreatedCallback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_String_Void onSurfaceCreatedCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
    GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceCreatedCallback(self, (const Callback_String_Void*)&onSurfaceCreatedCallback_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceCreatedCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentController_setOnSurfaceChangedCallback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_String_SurfaceRect_Void onSurfaceChangedCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_SurfaceRect_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String surfaceId, const Ark_SurfaceRect rect)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_SurfaceRect_Void))))};;
    GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceChangedCallback(self, (const Callback_String_SurfaceRect_Void*)&onSurfaceChangedCallback_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceChangedCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_XComponentController_setOnSurfaceDestroyedCallback(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
    Ark_XComponentController self = reinterpret_cast<Ark_XComponentController>(thisPtr);
    Deserializer thisDeserializer(thisArray, thisLength);
    Callback_String_Void onSurfaceDestroyedCallback_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String breakpoints)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
    GetAccessors()->getXComponentControllerAccessor()->setOnSurfaceDestroyedCallback(self, (const Callback_String_Void*)&onSurfaceDestroyedCallback_value);
}
KOALA_INTEROP_DIRECT_V3(XComponentController_setOnSurfaceDestroyedCallback, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_WaterFlowSections_ctor() {
        return GetAccessors()->getWaterFlowSectionsAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(WaterFlowSections_ctor, Ark_NativePointer)
Ark_NativePointer impl_WaterFlowSections_getFinalizer() {
        return GetAccessors()->getWaterFlowSectionsAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(WaterFlowSections_getFinalizer, Ark_NativePointer)
Ark_Boolean impl_WaterFlowSections_splice(Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto deleteCount_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number deleteCount_value_buf = {};
        deleteCount_value_buf.tag = deleteCount_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (deleteCount_value_buf_runtimeType))
        {
            deleteCount_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number deleteCount_value = deleteCount_value_buf;;
        const auto sections_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_SectionOptions sections_value_buf = {};
        sections_value_buf.tag = sections_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (sections_value_buf_runtimeType))
        {
            const Ark_Int32 sections_value_buf__length = thisDeserializer.readInt32();
            Array_SectionOptions sections_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(sections_value_buf_)>::type,
        std::decay<decltype(*sections_value_buf_.array)>::type>(&sections_value_buf_, sections_value_buf__length);
            for (int sections_value_buf__i = 0; sections_value_buf__i < sections_value_buf__length; sections_value_buf__i++) {
                sections_value_buf_.array[sections_value_buf__i] = thisDeserializer.readSectionOptions();
            }
            sections_value_buf.value = sections_value_buf_;
        }
        Opt_Array_SectionOptions sections_value = sections_value_buf;;
        return GetAccessors()->getWaterFlowSectionsAccessor()->splice(self, (const Ark_Number*) (&start), (const Opt_Number*)&deleteCount_value, (const Opt_Array_SectionOptions*)&sections_value);
}
KOALA_INTEROP_DIRECT_4(WaterFlowSections_splice, Ark_Boolean, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_WaterFlowSections_push(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SectionOptions section_value = thisDeserializer.readSectionOptions();;
        return GetAccessors()->getWaterFlowSectionsAccessor()->push(self, (const Ark_SectionOptions*)&section_value);
}
KOALA_INTEROP_DIRECT_3(WaterFlowSections_push, Ark_Boolean, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_Boolean impl_WaterFlowSections_update(Ark_NativePointer thisPtr, KInteropNumber sectionIndex, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SectionOptions section_value = thisDeserializer.readSectionOptions();;
        return GetAccessors()->getWaterFlowSectionsAccessor()->update(self, (const Ark_Number*) (&sectionIndex), (const Ark_SectionOptions*)&section_value);
}
KOALA_INTEROP_DIRECT_4(WaterFlowSections_update, Ark_Boolean, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_WaterFlowSections_values(Ark_NativePointer thisPtr) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        const auto &retValue = GetAccessors()->getWaterFlowSectionsAccessor()->values(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_SectionOptions retValue_element = retValue.array[i];
            _retSerializer.writeSectionOptions(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(WaterFlowSections_values, KInteropReturnBuffer, Ark_NativePointer)
Ark_Number impl_WaterFlowSections_length(Ark_NativePointer thisPtr) {
        Ark_WaterFlowSections self = reinterpret_cast<Ark_WaterFlowSections>(thisPtr);
        return GetAccessors()->getWaterFlowSectionsAccessor()->length(self);
}
KOALA_INTEROP_DIRECT_1(WaterFlowSections_length, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_UIExtensionProxy_ctor() {
        return GetAccessors()->getUIExtensionProxyAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(UIExtensionProxy_ctor, Ark_NativePointer)
Ark_NativePointer impl_UIExtensionProxy_getFinalizer() {
        return GetAccessors()->getUIExtensionProxyAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UIExtensionProxy_getFinalizer, Ark_NativePointer)
void impl_UIExtensionProxy_send(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 data_value_buf_size = thisDeserializer.readInt32();
        Map_String_Object data_value_buf = {};
        thisDeserializer.resizeMap<Map_String_Object, Ark_String, Ark_Object>(&data_value_buf, data_value_buf_size);
        for (int data_value_buf_i = 0; data_value_buf_i < data_value_buf_size; data_value_buf_i++) {
            const Ark_String data_value_buf_key = static_cast<Ark_String>(thisDeserializer.readString());
            const Ark_Object data_value_buf_value = static_cast<Ark_Object>(thisDeserializer.readObject());
            data_value_buf.keys[data_value_buf_i] = data_value_buf_key;
            data_value_buf.values[data_value_buf_i] = data_value_buf_value;
        }
        Map_String_Object data_value = data_value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->send(self, (const Map_String_Object*)&data_value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_send, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_UIExtensionProxy_sendSync(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 data_value_buf_size = thisDeserializer.readInt32();
        Map_String_Object data_value_buf = {};
        thisDeserializer.resizeMap<Map_String_Object, Ark_String, Ark_Object>(&data_value_buf, data_value_buf_size);
        for (int data_value_buf_i = 0; data_value_buf_i < data_value_buf_size; data_value_buf_i++) {
            const Ark_String data_value_buf_key = static_cast<Ark_String>(thisDeserializer.readString());
            const Ark_Object data_value_buf_value = static_cast<Ark_Object>(thisDeserializer.readObject());
            data_value_buf.keys[data_value_buf_i] = data_value_buf_key;
            data_value_buf.values[data_value_buf_i] = data_value_buf_value;
        }
        Map_String_Object data_value = data_value_buf;;
        const auto &retValue = GetAccessors()->getUIExtensionProxyAccessor()->sendSync(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Map_String_Object*)&data_value);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.size);
        for (int32_t i = 0; i < retValue.size; i++) {
            auto retValue_key = retValue.keys[i];
            auto retValue_value = retValue.values[i];
            _retSerializer.writeString(retValue_key);
            _retSerializer.writeObject(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_3(UIExtensionProxy_sendSync, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_onAsyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_UIExtensionProxy_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};;
        GetAccessors()->getUIExtensionProxyAccessor()->onAsyncReceiverRegister(self, (const Callback_UIExtensionProxy_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_onAsyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_onSyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_UIExtensionProxy_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};;
        GetAccessors()->getUIExtensionProxyAccessor()->onSyncReceiverRegister(self, (const Callback_UIExtensionProxy_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_onSyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_offAsyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void callback__value = callback__value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->offAsyncReceiverRegister(self, (const Opt_Callback_UIExtensionProxy_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_offAsyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_UIExtensionProxy_offSyncReceiverRegister(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_UIExtensionProxy self = reinterpret_cast<Ark_UIExtensionProxy>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto callback__value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_UIExtensionProxy_Void callback__value_buf = {};
        callback__value_buf.tag = callback__value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (callback__value_buf_runtimeType))
        {
            callback__value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_UIExtensionProxy_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UIExtensionProxy parameter)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_UIExtensionProxy_Void))))};
        }
        Opt_Callback_UIExtensionProxy_Void callback__value = callback__value_buf;;
        GetAccessors()->getUIExtensionProxyAccessor()->offSyncReceiverRegister(self, (const Opt_Callback_UIExtensionProxy_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V3(UIExtensionProxy_offSyncReceiverRegister, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StyledString_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_String_ImageAttachment_CustomSpan value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = static_cast<Ark_String>(thisDeserializer.readString());
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            value_value_buf.value1 = static_cast<Ark_ImageAttachment>(thisDeserializer.readImageAttachment());
        }
        else if (value_value_buf_selector == 2) {
            value_value_buf.selector = 2;
            value_value_buf.value2 = static_cast<Ark_CustomSpan>(thisDeserializer.readCustomSpan());
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_String_ImageAttachment_CustomSpan value_value = static_cast<Ark_Union_String_ImageAttachment_CustomSpan>(value_value_buf);;
        const auto styles_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Array_StyleOptions styles_value_buf = {};
        styles_value_buf.tag = styles_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (styles_value_buf_runtimeType))
        {
            const Ark_Int32 styles_value_buf__length = thisDeserializer.readInt32();
            Array_StyleOptions styles_value_buf_ = {};
            thisDeserializer.resizeArray<std::decay<decltype(styles_value_buf_)>::type,
        std::decay<decltype(*styles_value_buf_.array)>::type>(&styles_value_buf_, styles_value_buf__length);
            for (int styles_value_buf__i = 0; styles_value_buf__i < styles_value_buf__length; styles_value_buf__i++) {
                styles_value_buf_.array[styles_value_buf__i] = thisDeserializer.readStyleOptions();
            }
            styles_value_buf.value = styles_value_buf_;
        }
        Opt_Array_StyleOptions styles_value = styles_value_buf;;
        return GetAccessors()->getStyledStringAccessor()->ctor((const Ark_Union_String_ImageAttachment_CustomSpan*)&value_value, (const Opt_Array_StyleOptions*)&styles_value);
}
KOALA_INTEROP_DIRECT_2(StyledString_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_StyledString_getFinalizer() {
        return GetAccessors()->getStyledStringAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(StyledString_getFinalizer, Ark_NativePointer)
Ark_String impl_StyledString_getString(Ark_NativePointer thisPtr) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->getString(self);
}
KOALA_INTEROP_1(StyledString_getString, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_StyledString_getStyles(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto styledKey_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_StyledStringKey styledKey_value_buf = {};
        styledKey_value_buf.tag = styledKey_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (styledKey_value_buf_runtimeType))
        {
            styledKey_value_buf.value = static_cast<Ark_StyledStringKey>(thisDeserializer.readInt32());
        }
        Opt_StyledStringKey styledKey_value = styledKey_value_buf;;
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->getStyles(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), (const Opt_StyledStringKey*)&styledKey_value);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_SpanStyle retValue_element = retValue.array[i];
            _retSerializer.writeSpanStyle(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_CTX_5(StyledString_getStyles, KInteropReturnBuffer, Ark_NativePointer, KInteropNumber, KInteropNumber, KSerializerBuffer, int32_t)
Ark_Boolean impl_StyledString_equals(Ark_NativePointer thisPtr, Ark_NativePointer other) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->equals(self, static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_2(StyledString_equals, Ark_Boolean, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_StyledString_subStyledString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto length_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Number length_value_buf = {};
        length_value_buf.tag = length_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (length_value_buf_runtimeType))
        {
            length_value_buf.value = static_cast<Ark_Number>(thisDeserializer.readNumber());
        }
        Opt_Number length_value = length_value_buf;;
        return GetAccessors()->getStyledStringAccessor()->subStyledString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Opt_Number*)&length_value);
}
KOALA_INTEROP_CTX_4(StyledString_subStyledString, Ark_NativePointer, Ark_NativePointer, KInteropNumber, KSerializerBuffer, int32_t)
void impl_StyledString_fromHtml(KVMContext vmContext, const KStringPtr& html, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->fromHtml(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), (const Ark_String*) (&html), (const Callback_Opt_StyledString_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V3(StyledString_fromHtml, KStringPtr, KSerializerBuffer, int32_t)
Ark_String impl_StyledString_toHtml(KVMContext vmContext, Ark_NativePointer styledString) {
        return GetAccessors()->getStyledStringAccessor()->toHtml(reinterpret_cast<Ark_VMContext>(vmContext), static_cast<Ark_StyledString>(styledString));
}
KOALA_INTEROP_CTX_1(StyledString_toHtml, KStringPtr, Ark_NativePointer)
KInteropReturnBuffer impl_StyledString_marshalling0(Ark_NativePointer styledString, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        StyledStringMarshallCallback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_StyledStringMarshallCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_UserDataSpan marshallableVal, const Callback_Buffer_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_StyledStringMarshallCallback))))};;
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->marshalling0(static_cast<Ark_StyledString>(styledString), (const StyledStringMarshallCallback*)&callback__value);
        Serializer _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(StyledString_marshalling0, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_StyledString_marshalling1(Ark_NativePointer styledString) {
        const auto &retValue = GetAccessors()->getStyledStringAccessor()->marshalling1(static_cast<Ark_StyledString>(styledString));
        Serializer _retSerializer {};
        _retSerializer.writeBuffer(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(StyledString_marshalling1, KInteropReturnBuffer, Ark_NativePointer)
void impl_StyledString_unmarshalling0(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Buffer buffer_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        StyledStringUnmarshallCallback callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_StyledStringUnmarshallCallback)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_Buffer buf, const Callback_StyledStringMarshallingValue_Void continuation)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_StyledStringUnmarshallCallback))))};;
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->unmarshalling0(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), (const Ark_Buffer*)&buffer_value, (const StyledStringUnmarshallCallback*)&callback__value, (const Callback_Opt_StyledString_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V2(StyledString_unmarshalling0, KSerializerBuffer, int32_t)
void impl_StyledString_unmarshalling1(KVMContext vmContext, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Buffer buffer_value = static_cast<Ark_Buffer>(thisDeserializer.readBuffer());;
        Callback_Opt_StyledString_Opt_Array_String_Void outputArgumentForReturningPromise_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Opt_StyledString_Opt_Array_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Opt_StyledString value, const Opt_Array_String error)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Opt_StyledString_Opt_Array_String_Void))))};;
        GetAccessors()->getStyledStringAccessor()->unmarshalling1(reinterpret_cast<Ark_VMContext>(vmContext), GetAsyncWorker(), (const Ark_Buffer*)&buffer_value, (const Callback_Opt_StyledString_Opt_Array_String_Void*)&outputArgumentForReturningPromise_value);
}
KOALA_INTEROP_CTX_V2(StyledString_unmarshalling1, KSerializerBuffer, int32_t)
Ark_Number impl_StyledString_getLength(Ark_NativePointer thisPtr) {
        Ark_StyledString self = reinterpret_cast<Ark_StyledString>(thisPtr);
        return GetAccessors()->getStyledStringAccessor()->getLength(self);
}
KOALA_INTEROP_DIRECT_1(StyledString_getLength, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_TextStyle_styled_string_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_TextStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readTextStyleInterface();
        }
        Opt_TextStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getTextStyle_styled_stringAccessor()->ctor((const Opt_TextStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_2(TextStyle_styled_string_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextStyle_styled_string_getFinalizer() {
        return GetAccessors()->getTextStyle_styled_stringAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextStyle_styled_string_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_styled_string_getFontColor(Ark_NativePointer thisPtr) {
        Ark_TextStyle_styled_string self = reinterpret_cast<Ark_TextStyle_styled_string>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyle_styled_stringAccessor()->getFontColor(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeInt32(static_cast<Ark_Color>(retValue_value_0));
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeString(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                _retSerializer.writeResource(retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_styled_string_getFontColor, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_styled_string_getFontFamily(Ark_NativePointer thisPtr) {
        Ark_TextStyle_styled_string self = reinterpret_cast<Ark_TextStyle_styled_string>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyle_styled_stringAccessor()->getFontFamily(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeString(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_styled_string_getFontFamily, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_styled_string_getFontSize(Ark_NativePointer thisPtr) {
        Ark_TextStyle_styled_string self = reinterpret_cast<Ark_TextStyle_styled_string>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyle_styled_stringAccessor()->getFontSize(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_styled_string_getFontSize, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_styled_string_getFontWeight(Ark_NativePointer thisPtr) {
        Ark_TextStyle_styled_string self = reinterpret_cast<Ark_TextStyle_styled_string>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyle_styled_stringAccessor()->getFontWeight(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_styled_string_getFontWeight, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_TextStyle_styled_string_getFontStyle(Ark_NativePointer thisPtr) {
        Ark_TextStyle_styled_string self = reinterpret_cast<Ark_TextStyle_styled_string>(thisPtr);
        const auto &retValue = GetAccessors()->getTextStyle_styled_stringAccessor()->getFontStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_FontStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextStyle_styled_string_getFontStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_DecorationStyle_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DecorationStyleInterface value_value = thisDeserializer.readDecorationStyleInterface();;
        return GetAccessors()->getDecorationStyleAccessor()->ctor((const Ark_DecorationStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_2(DecorationStyle_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_DecorationStyle_getFinalizer() {
        return GetAccessors()->getDecorationStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(DecorationStyle_getFinalizer, Ark_NativePointer)
Ark_Int32 impl_DecorationStyle_getType(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        return GetAccessors()->getDecorationStyleAccessor()->getType(self);
}
KOALA_INTEROP_DIRECT_1(DecorationStyle_getType, Ark_Int32, Ark_NativePointer)
KInteropReturnBuffer impl_DecorationStyle_getColor(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getDecorationStyleAccessor()->getColor(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeInt32(static_cast<Ark_Color>(retValue_value_0));
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeNumber(retValue_value_1);
            }
            else if (retValue_value_type == 2) {
                _retSerializer.writeInt8(2);
                const auto retValue_value_2 = retValue_value.value2;
                _retSerializer.writeString(retValue_value_2);
            }
            else if (retValue_value_type == 3) {
                _retSerializer.writeInt8(3);
                const auto retValue_value_3 = retValue_value.value3;
                _retSerializer.writeResource(retValue_value_3);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DecorationStyle_getColor, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_DecorationStyle_getStyle(Ark_NativePointer thisPtr) {
        Ark_DecorationStyle self = reinterpret_cast<Ark_DecorationStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getDecorationStyleAccessor()->getStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextDecorationStyle>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(DecorationStyle_getStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_BaselineOffsetStyle_ctor(Ark_NativePointer value) {
        return GetAccessors()->getBaselineOffsetStyleAccessor()->ctor(static_cast<Ark_LengthMetrics>(value));
}
KOALA_INTEROP_DIRECT_1(BaselineOffsetStyle_ctor, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_BaselineOffsetStyle_getFinalizer() {
        return GetAccessors()->getBaselineOffsetStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BaselineOffsetStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_BaselineOffsetStyle_getBaselineOffset(Ark_NativePointer thisPtr) {
        Ark_BaselineOffsetStyle self = reinterpret_cast<Ark_BaselineOffsetStyle>(thisPtr);
        return GetAccessors()->getBaselineOffsetStyleAccessor()->getBaselineOffset(self);
}
KOALA_INTEROP_DIRECT_1(BaselineOffsetStyle_getBaselineOffset, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_LetterSpacingStyle_ctor(Ark_NativePointer value) {
        return GetAccessors()->getLetterSpacingStyleAccessor()->ctor(static_cast<Ark_LengthMetrics>(value));
}
KOALA_INTEROP_DIRECT_1(LetterSpacingStyle_ctor, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LetterSpacingStyle_getFinalizer() {
        return GetAccessors()->getLetterSpacingStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LetterSpacingStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_LetterSpacingStyle_getLetterSpacing(Ark_NativePointer thisPtr) {
        Ark_LetterSpacingStyle self = reinterpret_cast<Ark_LetterSpacingStyle>(thisPtr);
        return GetAccessors()->getLetterSpacingStyleAccessor()->getLetterSpacing(self);
}
KOALA_INTEROP_DIRECT_1(LetterSpacingStyle_getLetterSpacing, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_TextShadowStyle_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int8 value_value_buf_selector = thisDeserializer.readInt8();
        Ark_Union_ShadowOptions_Array_ShadowOptions value_value_buf = {};
        value_value_buf.selector = value_value_buf_selector;
        if (value_value_buf_selector == 0) {
            value_value_buf.selector = 0;
            value_value_buf.value0 = thisDeserializer.readShadowOptions();
        }
        else if (value_value_buf_selector == 1) {
            value_value_buf.selector = 1;
            const Ark_Int32 value_value_buf_u_length = thisDeserializer.readInt32();
            Array_ShadowOptions value_value_buf_u = {};
            thisDeserializer.resizeArray<std::decay<decltype(value_value_buf_u)>::type,
        std::decay<decltype(*value_value_buf_u.array)>::type>(&value_value_buf_u, value_value_buf_u_length);
            for (int value_value_buf_u_i = 0; value_value_buf_u_i < value_value_buf_u_length; value_value_buf_u_i++) {
                value_value_buf_u.array[value_value_buf_u_i] = thisDeserializer.readShadowOptions();
            }
            value_value_buf.value1 = value_value_buf_u;
        }
        else {
            INTEROP_FATAL("One of the branches for value_value_buf has to be chosen through deserialisation.");
        }
        Ark_Union_ShadowOptions_Array_ShadowOptions value_value = static_cast<Ark_Union_ShadowOptions_Array_ShadowOptions>(value_value_buf);;
        return GetAccessors()->getTextShadowStyleAccessor()->ctor((const Ark_Union_ShadowOptions_Array_ShadowOptions*)&value_value);
}
KOALA_INTEROP_DIRECT_2(TextShadowStyle_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_TextShadowStyle_getFinalizer() {
        return GetAccessors()->getTextShadowStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(TextShadowStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_TextShadowStyle_getTextShadow(Ark_NativePointer thisPtr) {
        Ark_TextShadowStyle self = reinterpret_cast<Ark_TextShadowStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getTextShadowStyleAccessor()->getTextShadow(self);
        Serializer _retSerializer {};
        _retSerializer.writeInt32(retValue.length);
        for (int i = 0; i < retValue.length; i++) {
            const Ark_ShadowOptions retValue_element = retValue.array[i];
            _retSerializer.writeShadowOptions(retValue_element);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(TextShadowStyle_getTextShadow, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_BackgroundColorStyle_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_TextBackgroundStyle textBackgroundStyle_value = thisDeserializer.readTextBackgroundStyle();;
        return GetAccessors()->getBackgroundColorStyleAccessor()->ctor((const Ark_TextBackgroundStyle*)&textBackgroundStyle_value);
}
KOALA_INTEROP_DIRECT_2(BackgroundColorStyle_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_BackgroundColorStyle_getFinalizer() {
        return GetAccessors()->getBackgroundColorStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(BackgroundColorStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_BackgroundColorStyle_getTextBackgroundStyle(Ark_NativePointer thisPtr) {
        Ark_BackgroundColorStyle self = reinterpret_cast<Ark_BackgroundColorStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getBackgroundColorStyleAccessor()->getTextBackgroundStyle(self);
        Serializer _retSerializer {};
        _retSerializer.writeTextBackgroundStyle(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(BackgroundColorStyle_getTextBackgroundStyle, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_GestureStyle_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_GestureStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readGestureStyleInterface();
        }
        Opt_GestureStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getGestureStyleAccessor()->ctor((const Opt_GestureStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_2(GestureStyle_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GestureStyle_getFinalizer() {
        return GetAccessors()->getGestureStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(GestureStyle_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ParagraphStyle_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_ParagraphStyleInterface value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = thisDeserializer.readParagraphStyleInterface();
        }
        Opt_ParagraphStyleInterface value_value = value_value_buf;;
        return GetAccessors()->getParagraphStyleAccessor()->ctor((const Opt_ParagraphStyleInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_2(ParagraphStyle_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ParagraphStyle_getFinalizer() {
        return GetAccessors()->getParagraphStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ParagraphStyle_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getTextAlign(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getTextAlign(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextAlign>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getTextAlign, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getTextIndent(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getTextIndent(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getTextIndent, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getMaxLines(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getMaxLines(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getMaxLines, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getOverflow(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getOverflow(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_TextOverflow>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getOverflow, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getWordBreak(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getWordBreak(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_WordBreak>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getWordBreak, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getLeadingMargin(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getLeadingMargin(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeNumber(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeLeadingMarginPlaceholder(retValue_value_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getLeadingMargin, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ParagraphStyle_getParagraphSpacing(Ark_NativePointer thisPtr) {
        Ark_ParagraphStyle self = reinterpret_cast<Ark_ParagraphStyle>(thisPtr);
        const auto &retValue = GetAccessors()->getParagraphStyleAccessor()->getParagraphSpacing(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeNumber(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ParagraphStyle_getParagraphSpacing, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_LineHeightStyle_ctor(Ark_NativePointer lineHeight) {
        return GetAccessors()->getLineHeightStyleAccessor()->ctor(static_cast<Ark_LengthMetrics>(lineHeight));
}
KOALA_INTEROP_DIRECT_1(LineHeightStyle_ctor, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_LineHeightStyle_getFinalizer() {
        return GetAccessors()->getLineHeightStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LineHeightStyle_getFinalizer, Ark_NativePointer)
Ark_Number impl_LineHeightStyle_getLineHeight(Ark_NativePointer thisPtr) {
        Ark_LineHeightStyle self = reinterpret_cast<Ark_LineHeightStyle>(thisPtr);
        return GetAccessors()->getLineHeightStyleAccessor()->getLineHeight(self);
}
KOALA_INTEROP_DIRECT_1(LineHeightStyle_getLineHeight, KInteropNumber, Ark_NativePointer)
Ark_NativePointer impl_UrlStyle_ctor(const KStringPtr& url) {
        return GetAccessors()->getUrlStyleAccessor()->ctor((const Ark_String*) (&url));
}
KOALA_INTEROP_1(UrlStyle_ctor, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_UrlStyle_getFinalizer() {
        return GetAccessors()->getUrlStyleAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(UrlStyle_getFinalizer, Ark_NativePointer)
Ark_String impl_UrlStyle_getUrl(Ark_NativePointer thisPtr) {
        Ark_UrlStyle self = reinterpret_cast<Ark_UrlStyle>(thisPtr);
        return GetAccessors()->getUrlStyleAccessor()->getUrl(self);
}
KOALA_INTEROP_1(UrlStyle_getUrl, KStringPtr, Ark_NativePointer)
Ark_NativePointer impl_MutableStyledString_ctor() {
        return GetAccessors()->getMutableStyledStringAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(MutableStyledString_ctor, Ark_NativePointer)
Ark_NativePointer impl_MutableStyledString_getFinalizer() {
        return GetAccessors()->getMutableStyledStringAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(MutableStyledString_getFinalizer, Ark_NativePointer)
void impl_MutableStyledString_replaceString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, const KStringPtr& other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->replaceString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), (const Ark_String*) (&other));
}
KOALA_INTEROP_CTX_V4(MutableStyledString_replaceString, Ark_NativePointer, KInteropNumber, KInteropNumber, KStringPtr)
void impl_MutableStyledString_insertString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, const KStringPtr& other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->insertString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_String*) (&other));
}
KOALA_INTEROP_CTX_V3(MutableStyledString_insertString, Ark_NativePointer, KInteropNumber, KStringPtr)
void impl_MutableStyledString_removeString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length));
}
KOALA_INTEROP_CTX_V3(MutableStyledString_removeString, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_MutableStyledString_replaceStyle(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SpanStyle spanStyle_value = thisDeserializer.readSpanStyle();;
        GetAccessors()->getMutableStyledStringAccessor()->replaceStyle(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_SpanStyle*)&spanStyle_value);
}
KOALA_INTEROP_CTX_V3(MutableStyledString_replaceStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MutableStyledString_setStyle(KVMContext vmContext, Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_SpanStyle spanStyle_value = thisDeserializer.readSpanStyle();;
        GetAccessors()->getMutableStyledStringAccessor()->setStyle(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_SpanStyle*)&spanStyle_value);
}
KOALA_INTEROP_CTX_V3(MutableStyledString_setStyle, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_MutableStyledString_removeStyle(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, Ark_Int32 styledKey) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeStyle(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), static_cast<Ark_StyledStringKey>(styledKey));
}
KOALA_INTEROP_CTX_V4(MutableStyledString_removeStyle, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_Int32)
void impl_MutableStyledString_removeStyles(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->removeStyles(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length));
}
KOALA_INTEROP_CTX_V3(MutableStyledString_removeStyles, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_MutableStyledString_clearStyles(Ark_NativePointer thisPtr) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->clearStyles(self);
}
KOALA_INTEROP_DIRECT_V1(MutableStyledString_clearStyles, Ark_NativePointer)
void impl_MutableStyledString_replaceStyledString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, KInteropNumber length, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->replaceStyledString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), (const Ark_Number*) (&length), static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_CTX_V4(MutableStyledString_replaceStyledString, Ark_NativePointer, KInteropNumber, KInteropNumber, Ark_NativePointer)
void impl_MutableStyledString_insertStyledString(KVMContext vmContext, Ark_NativePointer thisPtr, KInteropNumber start, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->insertStyledString(reinterpret_cast<Ark_VMContext>(vmContext), self, (const Ark_Number*) (&start), static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_CTX_V3(MutableStyledString_insertStyledString, Ark_NativePointer, KInteropNumber, Ark_NativePointer)
void impl_MutableStyledString_appendStyledString(Ark_NativePointer thisPtr, Ark_NativePointer other) {
        Ark_MutableStyledString self = reinterpret_cast<Ark_MutableStyledString>(thisPtr);
        GetAccessors()->getMutableStyledStringAccessor()->appendStyledString(self, static_cast<Ark_StyledString>(other));
}
KOALA_INTEROP_DIRECT_V2(MutableStyledString_appendStyledString, Ark_NativePointer, Ark_NativePointer)
Ark_NativePointer impl_ImageAttachment_ctor(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_ImageAttachmentInterface value_value = thisDeserializer.readImageAttachmentInterface();;
        return GetAccessors()->getImageAttachmentAccessor()->ctor((const Ark_ImageAttachmentInterface*)&value_value);
}
KOALA_INTEROP_DIRECT_2(ImageAttachment_ctor, Ark_NativePointer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_ImageAttachment_getFinalizer() {
        return GetAccessors()->getImageAttachmentAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(ImageAttachment_getFinalizer, Ark_NativePointer)
Ark_NativePointer impl_ImageAttachment_getValue(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        return GetAccessors()->getImageAttachmentAccessor()->getValue(self);
}
KOALA_INTEROP_DIRECT_1(ImageAttachment_getValue, Ark_NativePointer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getSize(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getSize(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeSizeOptions(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getSize, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getVerticalAlign(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getVerticalAlign(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_ImageSpanAlignment>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getVerticalAlign, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getObjectFit(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getObjectFit(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeInt32(static_cast<Ark_ImageFit>(retValue_value));
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getObjectFit, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getLayoutStyle(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getLayoutStyle(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            _retSerializer.writeImageAttachmentLayoutStyle(retValue_value);
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getLayoutStyle, KInteropReturnBuffer, Ark_NativePointer)
KInteropReturnBuffer impl_ImageAttachment_getColorFilter(Ark_NativePointer thisPtr) {
        Ark_ImageAttachment self = reinterpret_cast<Ark_ImageAttachment>(thisPtr);
        const auto &retValue = GetAccessors()->getImageAttachmentAccessor()->getColorFilter(self);
        Serializer _retSerializer {};
        Ark_Int32 retValue_type = INTEROP_RUNTIME_UNDEFINED;
        retValue_type = runtimeType(retValue);
        _retSerializer.writeInt8(retValue_type);
        if ((INTEROP_RUNTIME_UNDEFINED) != (retValue_type)) {
            const auto retValue_value = retValue.value;
            Ark_Int32 retValue_value_type = INTEROP_RUNTIME_UNDEFINED;
            retValue_value_type = retValue_value.selector;
            if (retValue_value_type == 0) {
                _retSerializer.writeInt8(0);
                const auto retValue_value_0 = retValue_value.value0;
                _retSerializer.writeColorFilter(retValue_value_0);
            }
            else if (retValue_value_type == 1) {
                _retSerializer.writeInt8(1);
                const auto retValue_value_1 = retValue_value.value1;
                _retSerializer.writeDrawingColorFilter(retValue_value_1);
            }
        }
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(ImageAttachment_getColorFilter, KInteropReturnBuffer, Ark_NativePointer)
Ark_NativePointer impl_CustomSpan_ctor() {
        return GetAccessors()->getCustomSpanAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(CustomSpan_ctor, Ark_NativePointer)
Ark_NativePointer impl_CustomSpan_getFinalizer() {
        return GetAccessors()->getCustomSpanAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(CustomSpan_getFinalizer, Ark_NativePointer)
KInteropReturnBuffer impl_CustomSpan_onMeasure(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_CustomSpanMeasureInfo measureInfo_value = thisDeserializer.readCustomSpanMeasureInfo();;
        const auto &retValue = GetAccessors()->getCustomSpanAccessor()->onMeasure(self, (const Ark_CustomSpanMeasureInfo*)&measureInfo_value);
        Serializer _retSerializer {};
        _retSerializer.writeCustomSpanMetrics(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(CustomSpan_onMeasure, KInteropReturnBuffer, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CustomSpan_onDraw(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_DrawContext context_value = thisDeserializer.readDrawContext();;
        Ark_CustomSpanDrawInfo drawInfo_value = thisDeserializer.readCustomSpanDrawInfo();;
        GetAccessors()->getCustomSpanAccessor()->onDraw(self, (const Ark_DrawContext*)&context_value, (const Ark_CustomSpanDrawInfo*)&drawInfo_value);
}
KOALA_INTEROP_DIRECT_V3(CustomSpan_onDraw, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_CustomSpan_invalidate(Ark_NativePointer thisPtr) {
        Ark_CustomSpan self = reinterpret_cast<Ark_CustomSpan>(thisPtr);
        GetAccessors()->getCustomSpanAccessor()->invalidate(self);
}
KOALA_INTEROP_DIRECT_V1(CustomSpan_invalidate, Ark_NativePointer)
Ark_NativePointer impl_LinearIndicatorController_ctor() {
        return GetAccessors()->getLinearIndicatorControllerAccessor()->ctor();
}
KOALA_INTEROP_DIRECT_0(LinearIndicatorController_ctor, Ark_NativePointer)
Ark_NativePointer impl_LinearIndicatorController_getFinalizer() {
        return GetAccessors()->getLinearIndicatorControllerAccessor()->getFinalizer();
}
KOALA_INTEROP_DIRECT_0(LinearIndicatorController_getFinalizer, Ark_NativePointer)
void impl_LinearIndicatorController_setProgress(Ark_NativePointer thisPtr, KInteropNumber index, KInteropNumber progress) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->setProgress(self, (const Ark_Number*) (&index), (const Ark_Number*) (&progress));
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorController_setProgress, Ark_NativePointer, KInteropNumber, KInteropNumber)
void impl_LinearIndicatorController_start(Ark_NativePointer thisPtr, KSerializerBuffer thisArray, int32_t thisLength) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto options_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_LinearIndicatorStartOptions options_value_buf = {};
        options_value_buf.tag = options_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (options_value_buf_runtimeType))
        {
            options_value_buf.value = thisDeserializer.readLinearIndicatorStartOptions();
        }
        Opt_LinearIndicatorStartOptions options_value = options_value_buf;;
        GetAccessors()->getLinearIndicatorControllerAccessor()->start(self, (const Opt_LinearIndicatorStartOptions*)&options_value);
}
KOALA_INTEROP_DIRECT_V3(LinearIndicatorController_start, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_LinearIndicatorController_pause(Ark_NativePointer thisPtr) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->pause(self);
}
KOALA_INTEROP_DIRECT_V1(LinearIndicatorController_pause, Ark_NativePointer)
void impl_LinearIndicatorController_stop(Ark_NativePointer thisPtr) {
        Ark_LinearIndicatorController self = reinterpret_cast<Ark_LinearIndicatorController>(thisPtr);
        GetAccessors()->getLinearIndicatorControllerAccessor()->stop(self);
}
KOALA_INTEROP_DIRECT_V1(LinearIndicatorController_stop, Ark_NativePointer)
KInteropReturnBuffer impl_GlobalScope_getRectangleById(const KStringPtr& id) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->getRectangleById((const Ark_String*) (&id));
        Serializer _retSerializer {};
        _retSerializer.writeComponentInfo(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_getRectangleById, KInteropReturnBuffer, KStringPtr)
KInteropReturnBuffer impl_GlobalScope_edgeColors(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->edgeColors((const Ark_Number*) (&all));
        Serializer _retSerializer {};
        _retSerializer.writeEdges(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_edgeColors, KInteropReturnBuffer, KInteropNumber)
KInteropReturnBuffer impl_GlobalScope_edgeWidths(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->edgeWidths((const Ark_Number*) (&all));
        Serializer _retSerializer {};
        _retSerializer.writeEdges(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_edgeWidths, KInteropReturnBuffer, KInteropNumber)
KInteropReturnBuffer impl_GlobalScope_borderRadiuses(KInteropNumber all) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->borderRadiuses((const Ark_Number*) (&all));
        Serializer _retSerializer {};
        _retSerializer.writeBorderRadiuses(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_borderRadiuses, KInteropReturnBuffer, KInteropNumber)
KInteropReturnBuffer impl_GlobalScope_wrapBuilder(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Callback_WrappedBuilder_Args_Void builder_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_CommonConfiguration args)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_WrappedBuilder_Args_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_CommonConfiguration args)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_WrappedBuilder_Args_Void))))};;
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->wrapBuilder((const Callback_WrappedBuilder_Args_Void*)&builder_value);
        Serializer _retSerializer {};
        _retSerializer.writeWrappedBuilder(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_2(GlobalScope_wrapBuilder, KInteropReturnBuffer, KSerializerBuffer, int32_t)
Ark_NativePointer impl_GlobalScope_getContext(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto component_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Object component_value_buf = {};
        component_value_buf.tag = component_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (component_value_buf_runtimeType))
        {
            component_value_buf.value = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Opt_Object component_value = component_value_buf;;
        return GetAccessors()->getGlobalScopeAccessor()->getContext((const Opt_Object*)&component_value);
}
KOALA_INTEROP_DIRECT_2(GlobalScope_getContext, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_GlobalScope_postCardAction(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_Object component_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        Ark_Object action_value = static_cast<Ark_Object>(thisDeserializer.readObject());;
        GetAccessors()->getGlobalScopeAccessor()->postCardAction((const Ark_Object*)&component_value, (const Ark_Object*)&action_value);
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_postCardAction, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_dollar_r(const KStringPtr& value, KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const Ark_Int32 params_value_buf_length = thisDeserializer.readInt32();
        Array_Object params_value_buf = {};
        thisDeserializer.resizeArray<std::decay<decltype(params_value_buf)>::type,
        std::decay<decltype(*params_value_buf.array)>::type>(&params_value_buf, params_value_buf_length);
        for (int params_value_buf_i = 0; params_value_buf_i < params_value_buf_length; params_value_buf_i++) {
            params_value_buf.array[params_value_buf_i] = static_cast<Ark_Object>(thisDeserializer.readObject());
        }
        Array_Object params_value = params_value_buf;;
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->dollar_r((const Ark_String*) (&value), (const Array_Object*)&params_value);
        Serializer _retSerializer {};
        _retSerializer.writeResource(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_3(GlobalScope_dollar_r, KInteropReturnBuffer, KStringPtr, KSerializerBuffer, int32_t)
KInteropReturnBuffer impl_GlobalScope_dollar_rawfile(const KStringPtr& value) {
        const auto &retValue = GetAccessors()->getGlobalScopeAccessor()->dollar_rawfile((const Ark_String*) (&value));
        Serializer _retSerializer {};
        _retSerializer.writeResource(retValue);
        return _retSerializer.toReturnBuffer();
}
KOALA_INTEROP_1(GlobalScope_dollar_rawfile, KInteropReturnBuffer, KStringPtr)
void impl_GlobalScope_animateTo(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = thisDeserializer.readAnimateParam();;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->animateTo((const Ark_AnimateParam*)&value_value, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_animateTo, KSerializerBuffer, int32_t)
void impl_GlobalScope_animateToImmediately(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Ark_AnimateParam value_value = thisDeserializer.readAnimateParam();;
        Callback_Void event_value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->animateToImmediately((const Ark_AnimateParam*)&value_value, (const Callback_Void*)&event_value);
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_animateToImmediately, KSerializerBuffer, int32_t)
Ark_Number impl_GlobalScope_vp2px(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->vp2px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_vp2px, KInteropNumber, KInteropNumber)
Ark_Number impl_GlobalScope_px2vp(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->px2vp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_px2vp, KInteropNumber, KInteropNumber)
Ark_Number impl_GlobalScope_fp2px(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->fp2px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_fp2px, KInteropNumber, KInteropNumber)
Ark_Number impl_GlobalScope_px2fp(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->px2fp((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_px2fp, KInteropNumber, KInteropNumber)
Ark_Number impl_GlobalScope_lpx2px(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->lpx2px((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_lpx2px, KInteropNumber, KInteropNumber)
Ark_Number impl_GlobalScope_px2lpx(KInteropNumber value) {
        return GetAccessors()->getGlobalScopeAccessor()->px2lpx((const Ark_Number*) (&value));
}
KOALA_INTEROP_DIRECT_1(GlobalScope_px2lpx, KInteropNumber, KInteropNumber)
void impl_GlobalScope_getInspectorNodes() {
        GetAccessors()->getGlobalScopeAccessor()->getInspectorNodes();
}
KOALA_INTEROP_DIRECT_V0(GlobalScope_getInspectorNodes)
void impl_GlobalScope_getInspectorNodeById(KInteropNumber id) {
        GetAccessors()->getGlobalScopeAccessor()->getInspectorNodeById((const Ark_Number*) (&id));
}
KOALA_INTEROP_DIRECT_V1(GlobalScope_getInspectorNodeById, KInteropNumber)
void impl_GlobalScope_setAppBgColor(const KStringPtr& value) {
        GetAccessors()->getGlobalScopeAccessor()->setAppBgColor((const Ark_String*) (&value));
}
KOALA_INTEROP_V1(GlobalScope_setAppBgColor, KStringPtr)
void impl_GlobalScope_Profiler_registerVsyncCallback(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        Profiler_Callback_String_Void callback__value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId, const Ark_String info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_String_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId, const Ark_String info)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_String_Void))))};;
        GetAccessors()->getGlobalScopeAccessor()->Profiler_registerVsyncCallback((const Profiler_Callback_String_Void*)&callback__value);
}
KOALA_INTEROP_DIRECT_V2(GlobalScope_Profiler_registerVsyncCallback, KSerializerBuffer, int32_t)
void impl_GlobalScope_Profiler_unregisterVsyncCallback() {
        GetAccessors()->getGlobalScopeAccessor()->Profiler_unregisterVsyncCallback();
}
KOALA_INTEROP_DIRECT_V0(GlobalScope_Profiler_unregisterVsyncCallback)
void impl_GlobalScope_cursorControl_setCursor(Ark_Int32 value) {
        GetAccessors()->getGlobalScopeAccessor()->cursorControl_setCursor(static_cast<Ark_PointerStyle>(value));
}
KOALA_INTEROP_DIRECT_V1(GlobalScope_cursorControl_setCursor, Ark_Int32)
void impl_GlobalScope_cursorControl_restoreDefault() {
        GetAccessors()->getGlobalScopeAccessor()->cursorControl_restoreDefault();
}
KOALA_INTEROP_DIRECT_V0(GlobalScope_cursorControl_restoreDefault)
Ark_Boolean impl_GlobalScope_focusControl_requestFocus(const KStringPtr& value) {
        return GetAccessors()->getGlobalScopeAccessor()->focusControl_requestFocus((const Ark_String*) (&value));
}
KOALA_INTEROP_1(GlobalScope_focusControl_requestFocus, Ark_Boolean, KStringPtr)
Ark_NativePointer impl_RouterExtender_RouterPush1attribute(const KStringPtr& value) {
        return GetAccessors()->getRouterExtenderAccessor()->push((const Ark_String*)(&value));
}
KOALA_INTEROP_1(RouterExtender_RouterPush1attribute, Ark_NativePointer, KStringPtr)
Ark_NativePointer impl_RouterExtender_RouterReplace1attribute(KSerializerBuffer thisArray, int32_t thisLength) {
        Deserializer thisDeserializer(thisArray, thisLength);
        const auto url = static_cast<Ark_String>(thisDeserializer.readString());
        const auto value_value_buf_runtimeType = static_cast<Ark_RuntimeType>(thisDeserializer.readInt8());
        Opt_Callback_Void value_value_buf = {};
        value_value_buf.tag = value_value_buf_runtimeType == INTEROP_RUNTIME_UNDEFINED ? INTEROP_TAG_UNDEFINED : INTEROP_TAG_OBJECT;
        if ((INTEROP_RUNTIME_UNDEFINED) != (value_value_buf_runtimeType))
        {
            value_value_buf.value = {thisDeserializer.readCallbackResource(), reinterpret_cast<void(*)(const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCaller(Kind_Callback_Void)))), reinterpret_cast<void(*)(Ark_VMContext vmContext, const Ark_Int32 resourceId)>(thisDeserializer.readPointerOrDefault(reinterpret_cast<Ark_NativePointer>(getManagedCallbackCallerSync(Kind_Callback_Void))))};
        }
        Opt_Callback_Void value_value = value_value_buf;
        return GetAccessors()->getRouterExtenderAccessor()->replace((const Ark_String*)(&url) ,(const Opt_Callback_Void*)&value_value);
}
KOALA_INTEROP_DIRECT_2(RouterExtender_RouterReplace1attribute, Ark_NativePointer, KSerializerBuffer, int32_t)
void impl_RouterExtender_MoveCommonUnderPageNode(Ark_NativePointer commonNode, Ark_NativePointer pageNode) {
        return GetAccessors()->getRouterExtenderAccessor()->moveCommonUnderPageNode(commonNode, pageNode);
}
KOALA_INTEROP_DIRECT_V2(RouterExtender_MoveCommonUnderPageNode, Ark_NativePointer, Ark_NativePointer)
void impl_RouterExtender_RouterBack0attribute() {
        return GetAccessors()->getRouterExtenderAccessor()->back();
}
KOALA_INTEROP_DIRECT_V0(RouterExtender_RouterBack0attribute)
Ark_NativePointer impl_RouterExtender_RouterRunPage(const KStringPtr& value) {
        return GetAccessors()->getRouterExtenderAccessor()->runPage((const Ark_String*)(&value));
}
KOALA_INTEROP_1(RouterExtender_RouterRunPage, Ark_NativePointer, KStringPtr)
void impl_RouterExtender_RouterClear() {
        GetAccessors()->getRouterExtenderAccessor()->clear();
}
KOALA_INTEROP_DIRECT_V0(RouterExtender_RouterClear)
Ark_Int64 impl_UIStateGet(Ark_NativePointer thisPtr) {
        return GetNodeModifiers()->getUIStateModifier()->getUIState(thisPtr);
}
KOALA_INTEROP_1(UIStateGet, Ark_Int64, Ark_NativePointer)