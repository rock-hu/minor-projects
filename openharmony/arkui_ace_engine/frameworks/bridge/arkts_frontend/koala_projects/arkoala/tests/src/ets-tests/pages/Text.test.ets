@Entry
@Component
struct TextTest {
    shadow1: ShadowOptions = { radius: 24, type: ShadowType.COLOR, color: Color.Black, offsetX: 15, offsetY: 25 }
    shadow2: ShadowOptions = { radius: 48, type: ShadowType.BLUR, color: 333, offsetX: 25, offsetY: 15 }
    dataDetectorConfig0: TextDataDetectorConfig = {types: [ ] }
    dataDetectorConfig1: TextDataDetectorConfig = {types: [ TextDataDetectorType.PHONE_NUMBER ]}
    dataDetectorConfig2: TextDataDetectorConfig = {types: [ TextDataDetectorType.URL ]}
    dataDetectorConfig3: TextDataDetectorConfig = {types: [ TextDataDetectorType.EMAIL ]}
    dataDetectorConfig4: TextDataDetectorConfig = {types: [ TextDataDetectorType.ADDRESS ]}
    dataDetectorConfig5: TextDataDetectorConfig = {types: [ TextDataDetectorType.URL, TextDataDetectorType.ADDRESS ]}
    dataDetectorConfig6: TextDataDetectorConfig = {types: [ TextDataDetectorType.PHONE_NUMBER, TextDataDetectorType.EMAIL ]}
    dataDetectorConfig7: TextDataDetectorConfig = {types: [ TextDataDetectorType.PHONE_NUMBER, TextDataDetectorType.URL,
        TextDataDetectorType.EMAIL, TextDataDetectorType.ADDRESS ]}

    build() {
        Text("Text 1")
        .font({size:30, weight:FontWeight.Lighter, family:"testFamily", style:FontStyle.Normal})
        .decoration({type:TextDecorationType.None, color:Color.Blue})
        .draggable(true)
        .textShadow(this.shadow1)
        .heightAdaptivePolicy(TextHeightAdaptivePolicy.MAX_LINES_FIRST)
        .textIndent(100)
        .fontColor(Color.Blue)
        .textAlign(TextAlign.Center)
        Text("Text 2")
        .font({size:"20vp", weight:FontWeight.Normal, family:"testFamily", style:FontStyle.Italic})
        .decoration({type:TextDecorationType.Underline, color:Color.Red})
        .draggable(false)
        .textShadow(this.shadow2)
        .heightAdaptivePolicy(TextHeightAdaptivePolicy.MIN_FONT_SIZE_FIRST)
        .textIndent("10vp")
        .fontColor(333)
        .textAlign(TextAlign.Start)
        Text("Text 3")
        .font({size:"40px", weight:FontWeight.Regular, family:"testFamily", style:FontStyle.Normal})
        .decoration({type:TextDecorationType.Overline, color:Color.Black})
        .heightAdaptivePolicy(TextHeightAdaptivePolicy.LAYOUT_CONSTRAINT_FIRST)
        .textIndent("20px")
        .fontColor("#404040")
        .textAlign(TextAlign.End)
        Text("Text 4")
        .font({size:"25lpx", weight:FontWeight.Medium, family:"testFamily", style:FontStyle.Italic})
        .decoration({type:TextDecorationType.LineThrough, color: 333})
        .textIndent("33lpx")
        .textAlign(TextAlign.JUSTIFY)
        Text("Text 5")
        .font({size:"5%", weight:FontWeight.Bold, family:"testFamily", style:FontStyle.Normal})
        .decoration({type:TextDecorationType.Overline, color: "#202020" })
        .textIndent("6%")
        Text("Text 6")
        .font({size:24, weight:FontWeight.Bolder, family:"testFamily", style:FontStyle.Italic})
        Text("Text 7")
        .font({size:"5%", weight: "Medium", family:"testFamily", style:FontStyle.Normal})
        Text("Text 8")
        .font({size:24, weight: 100, family:"testFamily", style:FontStyle.Italic})
        Text("Text 9")
        .font({size:"5%", weight: "Lighter", family:"testFamily", style:FontStyle.Normal})
        .dataDetectorConfig(this.dataDetectorConfig0)
        Text("Text 10")
        .font({size:24, weight: 900, family:"testFamily", style:FontStyle.Italic})
        .dataDetectorConfig(this.dataDetectorConfig1)
        Text("Text 11")
        .font({})
        .maxLines(5)
        .textCase(TextCase.Normal)
        .dataDetectorConfig(this.dataDetectorConfig2)
        Text("Text 12")
        .fontSize(30)
        .lineHeight(45)
        .minFontSize(10)
        .maxFontSize(100)
        .fontFamily("Arial")
        .fontStyle(FontStyle.Normal)
        .fontWeight(FontWeight.Lighter)
        .letterSpacing(5)
        .textCase(TextCase.LowerCase)
        .baselineOffset(10)
        .dataDetectorConfig(this.dataDetectorConfig3)
        Text("Text 13")
        .fontSize("20vp")
        .lineHeight("25vp")
        .minFontSize("10vp")
        .maxFontSize("100vp")
        .fontStyle(FontStyle.Italic)
        .fontWeight("Bolder")
        .textOverflow({ overflow: TextOverflow.None })
        .letterSpacing("5vp")
        .textCase(TextCase.UpperCase)
        .baselineOffset("20vp")
        .copyOption(CopyOptions.None)
        .dataDetectorConfig(this.dataDetectorConfig4)
        Text("Text 14")
        .fontSize("40px")
        .lineHeight("50px")
        .minFontSize("20px")
        .maxFontSize("100px")
        .fontWeight(400)
        .textOverflow({ overflow: TextOverflow.Clip })
        .letterSpacing("15px")
        .baselineOffset("20px")
        .copyOption(CopyOptions.InApp)
        .wordBreak(WordBreak.NORMAL)
        .ellipsisMode(EllipsisMode.START)
        .dataDetectorConfig(this.dataDetectorConfig5)
        Text("Text 15")
        .fontSize("25lpx")
        .lineHeight("30lpx")
        .minFontSize("15lpx")
        .maxFontSize("100lpx")
        .fontWeight(900)
        .textOverflow({ overflow: TextOverflow.Ellipsis })
        .letterSpacing("15lpx")
        .baselineOffset("20lpx")
        .copyOption(CopyOptions.LocalDevice)
        .wordBreak(WordBreak.BREAK_ALL)
        .ellipsisMode(EllipsisMode.CENTER)
        .enableDataDetector(false)
        .dataDetectorConfig(this.dataDetectorConfig6)
        Text("Text 16")
        .fontSize("5%")
        .lineHeight("8%")
        .minFontSize("2%")
        .maxFontSize("10%")
        .fontWeight(10)
        .textOverflow({ overflow: TextOverflow.MARQUEE })
        .letterSpacing("1%")
        .baselineOffset("2%")
        .copyOption(CopyOptions.CROSS_DEVICE)
        .wordBreak(WordBreak.BREAK_WORD)
        .selection(5, 28)
        .ellipsisMode(EllipsisMode.END)
        .enableDataDetector(true)
        .dataDetectorConfig(this.dataDetectorConfig7)
    }
}
