@Entry
@Component
struct TextAreaTest {
    options1: TextAreaOptions = { }
    options2: TextAreaOptions = { placeholder: "Placeholder" }
    options3: TextAreaOptions = { text: "TextArea" }
    options4: TextAreaOptions = { placeholder: "Placeholder", text: "TextArea" }
    inputCounterOptions1: InputCounterOptions = { }
    inputCounterOptions2: InputCounterOptions = { thresholdPercentage: 25, highlightBorder: false }
    inputCounterOptions3: InputCounterOptions = { thresholdPercentage: 26, highlightBorder: true }
    inputCounterOptions4: InputCounterOptions = { thresholdPercentage: 27 }
    inputCounterOptions5: InputCounterOptions = { highlightBorder: false }
    inputCounterOptions6: InputCounterOptions = { highlightBorder: true }

    build() {
        TextArea(this.options1)
        .placeholderFont({size:30, weight: FontWeight.Lighter, family:"testFamily", style: FontStyle.Normal})
        .fontColor(Color.Blue)
        .placeholderColor(Color.Blue)
        .caretColor(Color.Blue)
        .textAlign(TextAlign.Center)
        .enterKeyType(EnterKeyType.Go)
        TextArea(this.options2)
        .placeholderFont({size:"20vp", weight: FontWeight.Normal, family:"testFamily", style:FontStyle.Italic})
        .fontColor(333)
        .placeholderColor(333)
        .caretColor(333)
        .textAlign(TextAlign.Start)
        .enterKeyType(EnterKeyType.Search)
        TextArea(this.options3)
        .placeholderFont({size:"40px", weight: FontWeight.Regular, family:"testFamily", style:FontStyle.Normal})
        .fontColor("#404040")
        .placeholderColor("#404040")
        .caretColor("#404040")
        .textAlign(TextAlign.End)
        .enterKeyType(EnterKeyType.Send)
        TextArea(this.options4)
        .placeholderFont({size:"25lpx", weight: FontWeight.Medium, family:"testFamily", style:FontStyle.Italic})
        .textAlign(TextAlign.JUSTIFY)
        .enterKeyType(EnterKeyType.Next)
        TextArea()
        .placeholderFont({size:"5%", weight: FontWeight.Bold, family:"testFamily", style:FontStyle.Normal})
        .enterKeyType(EnterKeyType.Done)
        TextArea()
        .placeholderFont({size:24, weight: FontWeight.Bolder, family:"testFamily", style:FontStyle.Italic})
        TextArea()
        .placeholderFont({size:"5%", weight: "Medium", family:"testFamily", style:FontStyle.Normal})
        TextArea()
        .placeholderFont({size:24, weight: 100, family:"testFamily", style:FontStyle.Italic})
        TextArea()
        .placeholderFont({size:"5%", weight: "Lighter", family:"testFamily", style:FontStyle.Normal})
        .showCounter(true)
        TextArea()
        .placeholderFont({size:24, weight: 900, family:"testFamily", style:FontStyle.Italic})
        .showCounter(false)
        TextArea()
        .placeholderFont({})
        .showCounter(true, this.inputCounterOptions1)
        TextArea()
        .maxLines(5)
        .fontSize(30)
        .fontFamily("Arial")
        .fontStyle(FontStyle.Normal)
        .fontWeight(FontWeight.Lighter)
        .showCounter(false, this.inputCounterOptions2)
        TextArea()
        .fontSize("20vp")
        .fontStyle(FontStyle.Italic)
        .fontWeight("Bolder")
        .copyOption(CopyOptions.None)
        .showCounter(true, this.inputCounterOptions3)
        TextArea()
        .fontSize("40px")
        .fontWeight(400)
        .barState(BarState.On)
        .copyOption(CopyOptions.InApp)
        .showCounter(false, this.inputCounterOptions4)
        TextArea()
        .fontSize("25lpx")
        .maxLength(20)
        .fontWeight(900)
        .barState(BarState.Auto)
        .copyOption(CopyOptions.LocalDevice)
        .selectionMenuHidden(true)
        .enableKeyboardOnFocus(false)
        .showCounter(true, this.inputCounterOptions5)
        TextArea()
        .fontSize("5%")
        .maxLength(200)
        .fontWeight(10)
        .barState(BarState.Off)
        .copyOption(CopyOptions.CROSS_DEVICE)
        .selectionMenuHidden(false)
        .enableKeyboardOnFocus(true)
        .showCounter(false, this.inputCounterOptions6)
        .inputFilter("Test")
    }
}
