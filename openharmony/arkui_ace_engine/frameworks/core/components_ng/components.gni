# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/build/ace_ext.gni")
import("../../../build/uicast.gni")

template("build_component_ng") {
  forward_variables_from(invoker, "*")

  component_name = target_name
  subsystem_name = ace_engine_subsystem
  part_name = ace_engine_part

  template("build_component_ng_impl") {
    forward_variables_from(invoker, "*")

    platform = target_name
    subsystem_name = ace_engine_subsystem
    part_name = ace_engine_part
    component_deps = []
    extra_deps = []
    foreach(item, component_deps) {
      extra_deps += [ "$ace_root/frameworks/core/components/${item}:ace_core_components_${item}_${platform}" ]
    }

    component_v2_deps = []
    foreach(item, component_v2_deps) {
      extra_deps += [ "$ace_root/frameworks/core/components_v2/${item}:ace_core_components_${item}_${platform}" ]
    }

    if (defined(component_v2_deps)) {
      foreach(item, component_v2_deps) {
        extra_deps += [ "$ace_root/frameworks/core/components_ng/${item}:ace_core_components_${item}_${platform}" ]
      }
    }

    if (defined(platform_deps)) {
      foreach(item, platform_deps) {
        extra_deps += [ "${item}_${platform}" ]
      }
    }

    if (defined(deps)) {
      extra_deps += deps
    }

    ohos_source_set("ace_core_components_${component_name}_${platform}") {
      defines += invoker.defines

      sources = []
      sources += invoker.sources

      configs = []
      configs += [ "$ace_root:ace_config" ]

      if (defined(invoker.configs)) {
        configs += invoker.configs
      }

      deps = []
      deps += extra_deps
      deps += [ "$ace_root/frameworks/core/components/theme:build_theme_code" ]
      if (defined(invoker.public_configs)) {
        public_configs = []
        public_configs += invoker.public_configs
      }

      external_deps = []
      if (use_hilog) {
        external_deps += [ "hilog:libhilog" ]
      }
      if (defined(invoker.external_deps)) {
        external_deps += invoker.external_deps
      }

      if (defined(invoker.external_deps_info)) {
        external_deps_info = []
        external_deps_info += invoker.external_deps_info
      }

      if (defined(invoker.cflags_cc)) {
        cflags_cc = []
        cflags_cc += invoker.cflags_cc
      }
      include_dirs = []
      if (ohos_indep_compiler_enable) {
        include_dirs += indep_compile_includes
      }
      if (use_new_skia) {
        defines += [ "USE_NEW_SKIA" ]
      }
      if (is_arkui_x) {
        include_dirs += [
          "//foundation/graphic/graphic_2d/interfaces/inner_api/common",
          "//foundation/graphic/graphic_2d/interfaces/inner_api/surface",
          "//foundation/graphic/graphic_2d/rosen/modules",
          "//foundation/graphic/graphic_2d/rosen/modules/platform/utils",
          "//foundation/graphic/graphic_2d/rosen/modules/render_service_base",
          "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
          "//foundation/graphic/graphic_2d/frameworks/text/interface/export/rosen_text/export/rosen_text",
          "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics",
          "//foundation/graphic/graphic_2d/utils/color_manager/export",
          "//foundation/multimedia/image_framework/interfaces/innerkits/include",
          "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
          "//foundation/graphic/graphic_2d/rosen/modules/2d_engine",
          "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
          "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
          "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing/engine_adapter",
          "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/include/",
          "//foundation/graphic/graphic_2d/frameworks/text/interface/export/rosen_text/export",
          "//third_party/bounds_checking_function/include",
          "//foundation/graphic/graphic_surface/interfaces/inner_api/surface",
        ]
        deps += [
          "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client_static",
          "//third_party/skia:skia_canvaskit_static",
        ]
        defines += [ "CROSS_PLATFORM" ]
      }
      if (!is_arkui_x && defined(config.enable_drag_framework) &&
          config.enable_drag_framework) {
        external_deps += [ "device_status:devicestatus_client" ]
      }
      external_deps += [ "graphic_2d:librender_service_client" ]
      if (platform == "ohos" || platform == "ohos_ng") {
        external_deps += [
          "graphic_2d:2d_graphics",
          "opengles:libGLES",
        ]
        if (defined(vendor_configs.ace_engine_advanced)) {
          include_dirs += vendor_configs.ace_advance_dirs
        }
      } else {
        if (!is_arkui_x && defined(use_rosen_drawing) && use_rosen_drawing) {
          external_deps += [ "graphic_2d:2d_graphics" ]
        } else {
          if (!enable_graphic_text_gine) {
            deps += [ "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics_source_$platform" ]
          }
        }
      }
      if (defined(config.enable_rosen_backend) && config.enable_rosen_backend &&
          defined(invoker.rosen_sources)) {
        sources += invoker.rosen_sources
        if (is_arkui_x) {
          deps += [ "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client_static" ]
        } else {
          external_deps += [ "graphic_2d:librender_service_client" ]
        }
        if (use_mingw_win || use_mac || use_linux) {
          include_dirs += [
            "//foundation/window/window_manager",
            "//foundation/window/window_manager/interfaces/innerkits",
            "//foundation/window/window_manager/interfaces/kits/ndk/wm",
          ]
        }
      }

      if (defined(config.enable_standard_input) &&
          config.enable_standard_input) {
        if (defined(invoker.standard_input_sources)) {
          sources += invoker.standard_input_sources
        }
        if (defined(invoker.standard_input_deps)) {
          if (defined(external_deps)) {
            external_deps += invoker.standard_input_deps
          } else {
            external_deps = invoker.standard_input_deps
          }
        }
      }
    }
  }

  foreach(item, ace_platforms) {
    build_component_ng_impl(item.name) {
      platform = item.name
      defines = []
      defines += uicast_configs.uicast_defines

      if (defined(item.config)) {
        config = item.config
      } else {
        config = {
        }
      }

      if (defined(config.defines)) {
        defines += config.defines
      }

      if (defined(config.cflags_cc)) {
        cflags_cc = config.cflags_cc
      } else {
        cflags_cc = []
      }
    }
  }
}
