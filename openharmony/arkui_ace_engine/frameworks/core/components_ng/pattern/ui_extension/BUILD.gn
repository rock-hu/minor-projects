# Copyright (c) 2023-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/ace_config.gni")
import("$ace_root/frameworks/core/components_ng/components.gni")

build_component_ng("ui_extension_pattern_ng") {
  sources = [
    "accessibility_session_adapter_isolated_component.cpp",
    "accessibility_session_adapter_ui_extension.cpp",
    "dynamic_component/dynamic_component_manager.cpp",
    "dynamic_component/dynamic_model.cpp",
    "dynamic_component/dynamic_node.cpp",
    "dynamic_component/dynamic_pattern.cpp",
    "isolated_component/isolated_pattern.cpp",
    "platform_container_handler.cpp",
    "platform_event_proxy.cpp",
    "platform_pattern.cpp",
    "platform_utils.cpp",
    "security_ui_extension_component/security_session_wrapper_impl.cpp",
    "security_ui_extension_component/security_ui_extension_pattern.cpp",
    "security_ui_extension_component/security_ui_extension_proxy.cpp",
    "session_wrapper_factory.cpp",
    "surface_proxy_node.cpp",
    "ui_extension_component/modal_ui_extension_proxy_impl.cpp",
    "ui_extension_component/session_wrapper_impl.cpp",
    "ui_extension_component/ui_extension_pattern.cpp",
    "ui_extension_component/ui_extension_proxy.cpp",
    "ui_extension_manager.cpp",
    "ui_extension_model_ng.cpp",
  ]

  if (is_ohos_standard_system) {
    external_deps = [
      "ability_runtime:abilitykit_native",
      "accessibility:accessibility_common",
      "c_utils:utils",
      "graphic_2d:librender_service_client",
      "hilog:libhilog",
      "init:libbegetutil",
      "input:libmmi-client",
      "ipc:ipc_single",
      "napi:ace_napi",
      "window_manager:libwm",
      "window_manager:scene_session",
      "window_manager:scene_session_manager",
    ]
  }
}
