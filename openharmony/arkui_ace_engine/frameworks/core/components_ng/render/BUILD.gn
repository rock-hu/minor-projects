# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import(
    "//foundation/arkui/ace_engine/frameworks/core/components_ng/components.gni")

build_component_ng("render_ng") {
  sources = [
    "adapter/animated_image.cpp",
    "adapter/fake_animation_utils.cpp",
    "adapter/fake_modifier_adapter.cpp",
    "adapter/form_render_window.cpp",
    "adapter/graphic_modifier.cpp",
    "adapter/image_painter_utils.cpp",
    "adapter/matrix2d.cpp",
    "adapter/path_painter.cpp",
    "adapter/pixelmap_image.cpp",
    "adapter/render_surface_impl.cpp",
    "adapter/rich_editor_paragraph.cpp",
    "adapter/sk_painter.cpp",
    "adapter/skia_color_filter.cpp",
    "adapter/skia_decoration_painter.cpp",
    "adapter/span_model_adapter.cpp",
    "adapter/svg_canvas_image.cpp",
    "adapter/txt_font_collection.cpp",
    "adapter/txt_paragraph.cpp",
    "border_image_painter.cpp",
    "circle_painter.cpp",
    "debug_boundary_painter.cpp",
    "divider_painter.cpp",
    "drawing_prop_convertor.cpp",
    "ellipse_painter.cpp",
    "image_painter.cpp",
    "line_painter.cpp",
    "media_player_creator.cpp",
    "paint_property.cpp",
    "paint_wrapper.cpp",
    "polygon_painter.cpp",
    "rect_painter.cpp",
    "render_context.cpp",
    "render_property.cpp",
    "render_surface_creator.cpp",
    "shape_painter.cpp",
  ]

  rosen_sources = [
    "adapter/component_snapshot.cpp",
    "adapter/focus_animation_modifier.cpp",
    "adapter/focus_state_modifier.cpp",
    "adapter/gradient_style_modifier.cpp",
    "adapter/moon_progress_modifier.cpp",
    "adapter/rosen_animation_utils.cpp",
    "adapter/rosen_media_player.cpp",
    "adapter/rosen_modifier_adapter.cpp",
    "adapter/rosen_modifier_property.cpp",
    "adapter/rosen_particle_context.cpp",
    "adapter/rosen_render_context.cpp",
    "adapter/rosen_render_surface.cpp",
    "adapter/rosen_transition_effect.cpp",
    "adapter/rosen_window.cpp",
  ]

  if (ace_engine_feature_enable_split_mode &&
      defined(vendor_configs.ace_engine_advanced_split_mode_render)) {
    sources += vendor_configs.ace_engine_advanced_split_mode_render
  } else {
    sources += [ "render_context_creator.cpp" ]
  }

  external_deps = []
  if (is_ohos_standard_system && !use_mingw_win && !use_mac && !use_linux) {
    external_deps += [
      "graphic_surface:surface",
      "window_manager:libwm",
    ]
  }

  if (ace_use_rosen_drawing) {
    sources -= [
      "adapter/sk_painter.cpp",
      "adapter/skia_decoration_painter.cpp",
    ]

    rosen_sources += [
      "adapter/drawing_decoration_painter.cpp",
      "adapter/drawing_image.cpp",
      "adapter/drawing_painter.cpp",
    ]
  }

  if (current_os != "ohos") {
    rosen_sources -= [
      "adapter/rosen_media_player.cpp",
      "adapter/rosen_render_surface.cpp",
    ]
    rosen_sources += [ "adapter/rosen_render_surface_mingw.cpp" ]
  }

  if (is_ohos_standard_system && !use_mingw_win && !use_mac && !use_linux &&
      enable_player_framework) {
    external_deps += [ "player_framework:media_client" ]
  }

  if (!enable_player_framework) {
    if (current_os == "ohos") {
      rosen_sources -= [ "adapter/rosen_media_player.cpp" ]
    }
  } else {
    sources += [ "adapter/media_player_impl.cpp" ]
  }

  if (is_arkui_x) {
    sources += [ "adapter/render_texture_impl.cpp" ]
    deps = [ "$ace_graphic_surface/surface:arkuix_surface" ]
  }
}
