/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { assertEqual } from '@ohos.arkui.componentTest';
import { TestCaseLevel, defineTest } from '@ohos.arkui.componentTest'
import { Tester, Component, Matcher } from '@ohos.arkui.componentTest'

export default async function lineHeightTest() {
  /*
  * Text组件 lineHeight属性
  * 找到画面id为text1的Text组件
  * 找到画面文本为ButtonLineHeight1、ButtonLineHeight2、ButtonLineHeight3的Button组件
  * 获取text1的lineHeight属性与期待值'20.00fp'比对
  * 点击button3，变更text1的lineHeight属性值为-1
  * 获取text1的lineHeight属性与期待值0比对
  * 点击button1，变更text1的lineHeight属性值为'50.00px'
  * 获取text1的lineHeight属性与期待值'50.00px'比对
  * 点击button2，变更text1的lineHeight属性值为 $r('app.string.line_height')
  * 获取text1的lineHeight属性与期待值 $r('app.string.line_height')比对
  */
  defineTest('lineHeightTestDemo', {
    level: TestCaseLevel.LEVEL0
  }, async () => {
    console.log("lineHeightTestDemo running")
    let driver: Tester = Tester.create()
    let text1: Component = await driver.findComponent(Matcher.create().id('textLineHeight1').enabled(true))
    let button1: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight1').enabled(true))
    let button2: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight2').enabled(true))
    let button3: Component = await driver.findComponent(Matcher.create().text('ButtonLineHeight3').enabled(true))
    let lineHeight1: string = await text1.getInspectorInfo()
    assertEqual(JSON.parse(lineHeight1).$attrs.lineHeight, '20.00fp')

    await button3.tap()
    let lineHeight4: string = await text1.getInspectorInfo()
    assertEqual(JSON.parse(lineHeight4).$attrs.lineHeight, '0.00fp')

    await button1.tap()
    let lineHeight2: string = await text1.getInspectorInfo()
    assertEqual(JSON.parse(lineHeight2).$attrs.lineHeight, '50.00px')

    await button2.tap()
    let lineHeight3: string = await text1.getInspectorInfo()
    assertEqual(JSON.parse(lineHeight3).$attrs.lineHeight, $r('app.string.line_height'))
  }, 0)
}