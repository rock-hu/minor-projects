/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import {
  assertFalse,
  assertTrue,
  Component,
  defineTest,
  Matcher,
  TestCaseLevel,
  Tester
} from '@ohos.arkui.componentTest';

export default async function patternLockAutoResetTest() {
  /*
   * PatternLock组件 AutoReset属性
   * 找到画面id为patternLockAutoReset的PatternLock组件
   * 找到画面文本为PatternLockAutoReset的Button组件
   * 获取patternLock1的AutoReset属性与期待值true比对
   * 点击button，变更patternLock1的AutoReset属性值为false
   * 获取patternLock1的AutoReset属性与期待值false比对
   */
  defineTest('patternLockAutoResetTestDemo', {
    level: TestCaseLevel.LEVEL0
  }, async () => {
    console.log("patternLockAutoResetTestDemo running")
    let driver: Tester = Tester.create()
    let patternLock1: Component = await driver.findComponent(Matcher.create().id('patternLockAutoReset').enabled(true))
    let button: Component = await driver.findComponent(Matcher.create().text('PatternLockAutoReset').enabled(true))

    let autoReset1: string = await patternLock1.getInspectorInfo()
    assertTrue(JSON.parse(autoReset1).$attrs.autoReset)

    await button.tap()
    let autoReset2: string = await patternLock1.getInspectorInfo()
    assertFalse(JSON.parse(autoReset2).$attrs.autoReset)
  }, 0)
}