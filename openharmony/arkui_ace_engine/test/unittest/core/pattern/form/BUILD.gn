# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ace_unittest("form_test_ng") {
  flutter_skia = true
  render = true
  type = "new"
  sources = [
    "$ace_root/frameworks/core/accessibility/accessibility_session_adapter.cpp",
    "$ace_root/frameworks/core/common/form_manager.cpp",
    "$ace_root/frameworks/core/components_ng/manager/form_event/form_event_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/accessibility_session_adapter_form.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_special_style.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_paint_property.cpp",
    "$ace_root/test/mock/adapter/mock_ace_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_form_manager_delegate.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rosen_render_context.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rs_surface_mode.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_sub_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_system_properties.cpp",
    "form_test_ng.cpp",
  ]

  if (ohos_indep_compiler_enable) {
    include_dirs = indep_compile_includes
  }

  if (is_ohos_standard_system) {
    external_deps = [
      "ability_base:want",
      "ability_runtime:app_manager",
      "bundle_framework:appexecfwk_base",
      "bundle_framework:appexecfwk_core",
      "c_utils:utils",
      "form_fwk:fmskit_native",
      "form_fwk:form_manager",
      "graphic_2d:librender_service_client",
      "i18n:intl_util",
      "icu:shared_icui18n",
      "icu:shared_icuuc",
      "input:libmmi-client",
      "resource_management:global_resmgr",
    ]
  }
}

ace_unittest("form_node_test") {
  flutter_skia = true
  render = true
  type = "new"

  sources = [
    "$ace_root/frameworks/core/accessibility/accessibility_session_adapter.cpp",
    "$ace_root/frameworks/core/common/form_manager.cpp",
    "$ace_root/frameworks/core/components_ng/manager/form_event/form_event_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/accessibility_session_adapter_form.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_special_style.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_paint_property.cpp",
    "$ace_root/test/mock/adapter/mock_ace_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_form_manager_delegate.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rosen_render_context.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rs_surface_mode.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_sub_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_system_properties.cpp",
    "form_node_test.cpp",
  ]

  if (ohos_indep_compiler_enable) {
    include_dirs = indep_compile_includes
  }

  if (is_ohos_standard_system) {
    external_deps = [
      "ability_base:want",
      "ability_runtime:app_manager",
      "bundle_framework:appexecfwk_base",
      "bundle_framework:appexecfwk_core",
      "c_utils:utils",
      "form_fwk:fmskit_native",
      "form_fwk:form_manager",
      "graphic_2d:librender_service_client",
      "i18n:intl_util",
      "icu:shared_icui18n",
      "icu:shared_icuuc",
      "input:libmmi-client",
      "resource_management:global_resmgr",
    ]
  }
}

ace_unittest("form_pattern_test") {
  flutter_skia = true
  render = true
  type = "new"

  sources = [
    "$ace_root/frameworks/core/accessibility/accessibility_session_adapter.cpp",
    "$ace_root/frameworks/core/common/form_manager.cpp",
    "$ace_root/frameworks/core/components_ng/manager/form_event/form_event_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/accessibility_session_adapter_form.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/form/form_special_style.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/shape/shape_paint_property.cpp",
    "$ace_root/test/mock/adapter/mock_ace_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_form_manager_delegate.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rosen_render_context.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_rs_surface_mode.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_sub_container.cpp",
    "$ace_root/test/unittest/core/pattern/form/mock/mock_system_properties.cpp",
    "form_pattern_test.cpp",
  ]

  if (ohos_indep_compiler_enable) {
    include_dirs = indep_compile_includes
  }

  if (is_ohos_standard_system) {
    external_deps = [
      "ability_base:want",
      "ability_runtime:app_manager",
      "bundle_framework:appexecfwk_base",
      "bundle_framework:appexecfwk_core",
      "c_utils:utils",
      "form_fwk:fmskit_native",
      "form_fwk:form_manager",
      "graphic_2d:librender_service_client",
      "i18n:intl_util",
      "icu:shared_icui18n",
      "icu:shared_icuuc",
      "input:libmmi-client",
      "resource_management:global_resmgr",
    ]
  }
}
