# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ace_unittest("lazy_for_each_syntax_test_ng") {
  type = "new"
  module_output = "syntaxs"
  sources = [ "lazy_for_each_syntax_test_ng.cpp" ]
}

ace_unittest("lazy_for_each_builder_syntax_test_ng") {
  type = "new"
  module_output = "syntaxs"
  sources = [ "lazy_for_each_builder_syntax_test_ng.cpp" ]
}

ace_unittest("for_each_syntax_test_ng") {
  type = "new"
  module_output = "syntaxs"
  sources = [ "for_each_syntax_test_ng.cpp" ]
}

ace_unittest("if_else_syntax_test_ng") {
  type = "new"
  module_output = "syntaxs"
  sources = [ "if_else_syntax_test_ng.cpp" ]
}

ace_unittest("content_slot_syntax_test_ng") {
  type = "new"
  module_output = "syntaxs"
  sources = [
    "$ace_root/frameworks/core/interfaces/native/node/node_content_modifier.cpp",
    "content_slot_syntax_test_ng.cpp",
  ]
}

ace_unittest("repeat_node_cache_syntax_test") {
  type = "new"
  module_output = "syntaxs"
  sources = [
    "$ace_root/frameworks/core/components_ng/syntax/repeat_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/syntax/repeat_node.cpp",
    "repeat_node_cache_syntax_test.cpp",
  ]
}

group("core_syntax_unittest") {
  testonly = true
  deps = [
    ":content_slot_syntax_test_ng",
    ":for_each_syntax_test_ng",
    ":if_else_syntax_test_ng",
    ":lazy_for_each_builder_syntax_test_ng",
    ":lazy_for_each_syntax_test_ng",
    ":repeat_node_cache_syntax_test",
  ]
}
