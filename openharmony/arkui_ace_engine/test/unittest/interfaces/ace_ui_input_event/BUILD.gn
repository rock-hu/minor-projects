# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

config("c_api_configs") {
  cflags = [ "-Wno-missing-braces" ]
}

ohos_unittest("ui_input_event_test") {
  module_out_path = interface_test_output_path

  sources = [
    "$ace_root/interfaces/native/event/ui_input_event.cpp",
    "$ace_root/interfaces/native/node/animate_impl.cpp",
    "$ace_root/interfaces/native/node/dialog_model.cpp",
    "$ace_root/interfaces/native/node/event_converter.cpp",
    "$ace_root/interfaces/native/node/gesture_impl.cpp",
    "$ace_root/interfaces/native/node/native_impl.cpp",
    "$ace_root/interfaces/native/node/native_node_napi.cpp",
    "$ace_root/interfaces/native/node/node_extened.cpp",
    "$ace_root/interfaces/native/node/node_model.cpp",
    "$ace_root/interfaces/native/node/node_model_safely.cpp",
    "$ace_root/interfaces/native/node/node_node_relative_container.cpp",
    "$ace_root/interfaces/native/node/node_transition.cpp",
    "$ace_root/interfaces/native/node/style_modifier.cpp",
    "oh_arkui_focusaxisevent_getaxisvalue.cpp",
    "oh_arkui_focusaxisevent_setstoppropagation.cpp",
    "oh_arkui_hoverevent_ishovered.cpp",
    "oh_arkui_mouseevent_getrawdeltax.cpp",
    "oh_arkui_mouseevent_getrawdeltay.cpp",
    "oh_arkui_pointerevent_gethistorypointerid_test.cpp",
    "oh_arkui_pointerevent_getpressedtimebyindex.cpp",
    "oh_arkui_pointerevent_gethistoryx_test.cpp",
    "oh_arkui_pointerevent_gethistoryy_test.cpp",
    "oh_arkui_pointerevent_gethistorydisplayx_test.cpp",
    "oh_arkui_pointerevent_gethistorydisplayy_test.cpp",
    "oh_arkui_pointerevent_gethistorypressure_test.cpp",
    "oh_arkui_pointerevent_gethistorytiltx_test.cpp",
    "oh_arkui_pointerevent_gethistorytilty_test.cpp",
    "oh_arkui_pointerevent_gethistorytouchareaheight_test.cpp",
    "oh_arkui_pointerevent_gethistorytouchareawidth_test.cpp",
    "oh_arkui_pointerevent_gethistorywindowx_test.cpp",
    "oh_arkui_pointerevent_gethistorywindowy_test.cpp",
    "oh_arkui_uiinputevent_getaction_test.cpp",
    "oh_arkui_uiinputevent_getchangedpointerid_test.cpp",
    "oh_arkui_uiinputevent_geteventtargetglobalpositionx.cpp",
    "oh_arkui_uiinputevent_geteventtargetglobalpositiony.cpp",
    "oh_arkui_uiinputevent_geteventtargetheight.cpp",
    "oh_arkui_uiinputevent_geteventtargetpositionx.cpp",
    "oh_arkui_uiinputevent_geteventtargetpositiony.cpp",
    "oh_arkui_uiinputevent_geteventtargetwidth.cpp",
    "oh_arkui_uiinputevent_geteventtime_test.cpp",
    "oh_arkui_uiinputevent_getpointercount_test.cpp",
    "oh_arkui_uiinputevent_getpointerid_test.cpp",
    "oh_arkui_uiinputevent_getsourcetype_test.cpp",
    "oh_arkui_uiinputevent_gettooltype_test.cpp",
    "oh_arkui_uiinputevent_gettype_test.cpp",
    "oh_arkui_uiinputevent_getwindowx_test.cpp",
    "oh_arkui_uiinputevent_getwindowy_test.cpp",
    "oh_arkui_uiinputevent_getwindowybyindex_test.cpp",
    "oh_arkui_uiinputevent_getx_test.cpp",
    "oh_arkui_uiinputevent_getxbyindex_test.cpp",
    "oh_arkui_uiinputevent_gety_test.cpp",
    "oh_arkui_uiinputevent_getybyindex_test.cpp",
    "oh_arkui_uiinputevent_gewindowxbyindex_test.cpp",
  ]

  configs = [
    "$ace_root/test/unittest:ace_unittest_config",
    ":c_api_configs",
  ]

  include_dirs = [
    "$ace_root/frameworks/core/interfaces/arkoala",
    "$ace_root/frameworks/",
    "$ace_root/interfaces/native/",
    "$ace_root/interfaces/native/node",
    "$ace_root",
  ]

  deps = [
    "$ace_root/test/unittest:ace_base",
    "$ace_root/test/unittest:ace_components_base",
    "$ace_root/test/unittest:ace_components_event",
    "$ace_root/test/unittest:ace_components_gestures",
    "$ace_root/test/unittest:ace_components_layout",
    "$ace_root/test/unittest:ace_components_manager",
    "$ace_root/test/unittest:ace_components_mock",
    "$ace_root/test/unittest:ace_components_pattern",
    "$ace_root/test/unittest:ace_components_property",
    "$ace_root/test/unittest:ace_components_render",
    "$ace_root/test/unittest:ace_components_syntax",
    "$ace_root/test/unittest:ace_core_animation",
    "$ace_root/test/unittest:ace_core_extra",
  ]

  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "googletest:gmock_main",
    "graphic_2d:2d_graphics",
    "graphic_2d:librender_service_base",
    "graphic_2d:librender_service_client",
    "hilog:libhilog",
    "image_framework:image",
    "image_framework:image_native",
    "napi:ace_napi",
    "resource_management:global_resmgr",
  ]
}